;;; engine-mode-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from engine-mode.el

(defvar engine-mode nil "\
Non-nil if Engine mode is enabled.
See the `engine-mode' command
for a description of this minor mode.")
(custom-autoload 'engine-mode "engine-mode" nil)
(autoload 'engine-mode "engine-mode" "\
Minor mode for defining and querying search engines through Emacs.

\\{engine-mode-map}

This is a global minor mode.  If called interactively, toggle the
`Engine mode' mode.  If the prefix argument is positive, enable
the mode, and if it is zero or negative, disable the mode.

If called from Lisp, toggle the mode if ARG is `toggle'.  Enable
the mode if ARG is nil, omitted, or is a positive number.
Disable the mode if ARG is a negative number.

To check whether the minor mode is enabled in the current buffer,
evaluate `(default-value \\='engine-mode)'.

The mode's hook is called both when the mode is enabled and when
it is disabled.

(fn &optional ARG)" t)
(autoload 'defengine "engine-mode" "\
Define a custom engine ENGINE-NAME searching SEARCH-ENGINE-URL.

ENGINE-NAME is a symbol naming the engine.

SEARCH-ENGINE-URL is the url to be queried, with a \"%s\"
standing in for the search term.

The optional keyword argument DOCSTRING assigns a docstring to
the generated function. A reasonably sensible docstring will be
generated if a custom one isn't provided.

The optional keyword argument BROWSER assigns the browser
function to be used when opening the URL.

The optional keyword argument TERM-TRANSFORMATION-HOOK is a
function that will be applied to the search term before it's
substituted into SEARCH-ENGINE-URL. For example, if we wanted to
always upcase our search terms, we might use:

(defengine duckduckgo
  \"https://duckduckgo.com/?q=%s\"
  :term-transformation-hook upcase)

In this case, searching for \"foobar\" will hit the url
\"https://duckduckgo.com/?q=FOOBAR\".

The optional keyword argument KEYBINDING is a string describing
the key to bind the new function.

Keybindings are in `engine-mode-map', so they're prefixed.

For example, to search Wikipedia, use:

  (defengine wikipedia
    \"https://www.wikipedia.org/search-redirect.php?search=%s\"
    :keybinding \"w\"
    :docstring \"Search Wikipedia!\")

Hitting \"C-x / w\" will be bound to the newly-defined
`engine/search-wikipedia' function.

(fn ENGINE-NAME SEARCH-ENGINE-URL &key KEYBINDING DOCSTRING (BROWSER \\='engine/browser-function) (TERM-TRANSFORMATION-HOOK \\='identity))" nil t)
(function-put 'defengine 'lisp-indent-function 1)
(register-definition-prefixes "engine-mode" '("engine"))

;;; End of scraped data

(provide 'engine-mode-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; engine-mode-autoloads.el ends here
