;;; doom-themes-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from doom-1337-theme.el

(register-definition-prefixes "doom-1337-theme" '("doom-1337"))


;;; Generated autoloads from doom-Iosvkem-theme.el

(register-definition-prefixes "doom-Iosvkem-theme" '("doom-Iosvkem"))


;;; Generated autoloads from doom-acario-dark-theme.el

(register-definition-prefixes "doom-acario-dark-theme" '("doom-acario-dark"))


;;; Generated autoloads from doom-acario-light-theme.el

(register-definition-prefixes "doom-acario-light-theme" '("doom-acario-light"))


;;; Generated autoloads from doom-ayu-dark-theme.el

(register-definition-prefixes "doom-ayu-dark-theme" '("doom-ayu-dark"))


;;; Generated autoloads from doom-ayu-light-theme.el

(register-definition-prefixes "doom-ayu-light-theme" '("doom-ayu-light"))


;;; Generated autoloads from doom-ayu-mirage-theme.el

(register-definition-prefixes "doom-ayu-mirage-theme" '("doom-ayu-mirage"))


;;; Generated autoloads from doom-badger-theme.el

(register-definition-prefixes "doom-badger-theme" '("doom-badger"))


;;; Generated autoloads from doom-bluloco-dark-theme.el

(register-definition-prefixes "doom-bluloco-dark-theme" '("doom-bluloco-dark"))


;;; Generated autoloads from doom-bluloco-light-theme.el

(register-definition-prefixes "doom-bluloco-light-theme" '("doom-bluloco-light"))


;;; Generated autoloads from doom-challenger-deep-theme.el

(register-definition-prefixes "doom-challenger-deep-theme" '("doom-challenger-deep"))


;;; Generated autoloads from doom-city-lights-theme.el

(register-definition-prefixes "doom-city-lights-theme" '("doom-city-lights"))


;;; Generated autoloads from doom-dark+-theme.el

(register-definition-prefixes "doom-dark+-theme" '("doom-dark+"))


;;; Generated autoloads from doom-dracula-theme.el

(register-definition-prefixes "doom-dracula-theme" '("doom-dracula"))


;;; Generated autoloads from doom-earl-grey-theme.el

(register-definition-prefixes "doom-earl-grey-theme" '("doom-earl-grey"))


;;; Generated autoloads from doom-ephemeral-theme.el

(register-definition-prefixes "doom-ephemeral-theme" '(":group" "doom-ephemeral"))


;;; Generated autoloads from doom-fairy-floss-theme.el

(register-definition-prefixes "doom-fairy-floss-theme" '("doom-fairy-floss"))


;;; Generated autoloads from doom-feather-dark-theme.el

(register-definition-prefixes "doom-feather-dark-theme" '("doom-feather-"))


;;; Generated autoloads from doom-feather-light-theme.el

(register-definition-prefixes "doom-feather-light-theme" '("doom-feather-light"))


;;; Generated autoloads from doom-flatwhite-theme.el

(register-definition-prefixes "doom-flatwhite-theme" '("doom-f"))


;;; Generated autoloads from doom-gruvbox-light-theme.el

(register-definition-prefixes "doom-gruvbox-light-theme" '("doom-gruvbox-light"))


;;; Generated autoloads from doom-gruvbox-theme.el

(register-definition-prefixes "doom-gruvbox-theme" '("doom-gruvbox"))


;;; Generated autoloads from doom-henna-theme.el

(register-definition-prefixes "doom-henna-theme" '("doom-henna"))


;;; Generated autoloads from doom-homage-black-theme.el

(register-definition-prefixes "doom-homage-black-theme" '("doom-homage-black"))


;;; Generated autoloads from doom-homage-white-theme.el

(register-definition-prefixes "doom-homage-white-theme" '("doom-homage-white"))


;;; Generated autoloads from doom-horizon-theme.el

(register-definition-prefixes "doom-horizon-theme" '("doom-horizon"))


;;; Generated autoloads from doom-ir-black-theme.el

(register-definition-prefixes "doom-ir-black-theme" '("doom-ir-black"))


;;; Generated autoloads from doom-lantern-theme.el

(register-definition-prefixes "doom-lantern-theme" '("doom-lantern"))


;;; Generated autoloads from doom-laserwave-theme.el

(register-definition-prefixes "doom-laserwave-theme" '("doom-laserwave"))


;;; Generated autoloads from doom-manegarm-theme.el

(register-definition-prefixes "doom-manegarm-theme" '("doom-manegarm"))


;;; Generated autoloads from doom-material-dark-theme.el

(register-definition-prefixes "doom-material-dark-theme" '("doom-material-"))


;;; Generated autoloads from doom-material-theme.el

(register-definition-prefixes "doom-material-theme" '("doom-material"))


;;; Generated autoloads from doom-meltbus-theme.el

(register-definition-prefixes "doom-meltbus-theme" '("doom-meltbus"))


;;; Generated autoloads from doom-miramare-theme.el

(register-definition-prefixes "doom-miramare-theme" '("doom-miramare"))


;;; Generated autoloads from doom-molokai-theme.el

(register-definition-prefixes "doom-molokai-theme" '("doom-molokai"))


;;; Generated autoloads from doom-monokai-classic-theme.el

(register-definition-prefixes "doom-monokai-classic-theme" '("doom-monokai-classic"))


;;; Generated autoloads from doom-monokai-machine-theme.el

(register-definition-prefixes "doom-monokai-machine-theme" '("doom-monokai-machine"))


;;; Generated autoloads from doom-monokai-octagon-theme.el

(register-definition-prefixes "doom-monokai-octagon-theme" '("doom-monokai-octagon"))


;;; Generated autoloads from doom-monokai-pro-theme.el

(register-definition-prefixes "doom-monokai-pro-theme" '("doom-monokai-pro"))


;;; Generated autoloads from doom-monokai-ristretto-theme.el

(register-definition-prefixes "doom-monokai-ristretto-theme" '("doom-monokai-ristretto"))


;;; Generated autoloads from doom-monokai-spectrum-theme.el

(register-definition-prefixes "doom-monokai-spectrum-theme" '("doom-monokai-spectrum"))


;;; Generated autoloads from doom-moonlight-theme.el

(register-definition-prefixes "doom-moonlight-theme" '("doom-moonlight"))


;;; Generated autoloads from doom-nord-aurora-theme.el

(register-definition-prefixes "doom-nord-aurora-theme" '(":group" "doom-nord-aurora"))


;;; Generated autoloads from doom-nord-light-theme.el

(register-definition-prefixes "doom-nord-light-theme" '(":group" "doom-nord-light"))


;;; Generated autoloads from doom-nord-theme.el

(register-definition-prefixes "doom-nord-theme" '(":group" "doom-nord"))


;;; Generated autoloads from doom-nova-theme.el

(register-definition-prefixes "doom-nova-theme" '("doom-nova"))


;;; Generated autoloads from doom-oceanic-next-theme.el

(register-definition-prefixes "doom-oceanic-next-theme" '("doom-oceanic-next"))


;;; Generated autoloads from doom-oksolar-dark-theme.el

(register-definition-prefixes "doom-oksolar-dark-theme" '("doom-oksolar-dark"))


;;; Generated autoloads from doom-oksolar-light-theme.el

(register-definition-prefixes "doom-oksolar-light-theme" '("doom-oksolar-light"))


;;; Generated autoloads from doom-old-hope-theme.el

(register-definition-prefixes "doom-old-hope-theme" '("doom-old-hope"))


;;; Generated autoloads from doom-one-light-theme.el

(register-definition-prefixes "doom-one-light-theme" '("doom-one-light"))


;;; Generated autoloads from doom-one-theme.el

(register-definition-prefixes "doom-one-theme" '("doom-one"))


;;; Generated autoloads from doom-opera-light-theme.el

(register-definition-prefixes "doom-opera-light-theme" '(":group" "doom-opera-light"))


;;; Generated autoloads from doom-opera-theme.el

(register-definition-prefixes "doom-opera-theme" '(":group" "doom-opera"))


;;; Generated autoloads from doom-outrun-electric-theme.el

(register-definition-prefixes "doom-outrun-electric-theme" '("doom-outrun-electric"))


;;; Generated autoloads from doom-palenight-theme.el

(register-definition-prefixes "doom-palenight-theme" '("doom-palenight"))


;;; Generated autoloads from doom-peacock-theme.el

(register-definition-prefixes "doom-peacock-theme" '("doom-peacock"))


;;; Generated autoloads from doom-pine-theme.el

(register-definition-prefixes "doom-pine-theme" '("doom-pine"))


;;; Generated autoloads from doom-plain-dark-theme.el

(register-definition-prefixes "doom-plain-dark-theme" '("doom-plain-"))


;;; Generated autoloads from doom-plain-theme.el

(register-definition-prefixes "doom-plain-theme" '("doom-plain"))


;;; Generated autoloads from doom-rouge-theme.el

(register-definition-prefixes "doom-rouge-theme" '("doom-rouge"))


;;; Generated autoloads from doom-shades-of-purple-theme.el

(register-definition-prefixes "doom-shades-of-purple-theme" '("doom-shades-of-purple"))


;;; Generated autoloads from doom-snazzy-theme.el

(register-definition-prefixes "doom-snazzy-theme" '("doom-snazzy"))


;;; Generated autoloads from doom-solarized-dark-high-contrast-theme.el

(register-definition-prefixes "doom-solarized-dark-high-contrast-theme" '("doom-solarized-dark-high-contrast"))


;;; Generated autoloads from doom-solarized-dark-theme.el

(register-definition-prefixes "doom-solarized-dark-theme" '("doom-solarized-dark"))


;;; Generated autoloads from doom-solarized-light-theme.el

(register-definition-prefixes "doom-solarized-light-theme" '("doom-solarized-light"))


;;; Generated autoloads from doom-sourcerer-theme.el

(register-definition-prefixes "doom-sourcerer-theme" '("doom-sourcerer"))


;;; Generated autoloads from doom-spacegrey-theme.el

(register-definition-prefixes "doom-spacegrey-theme" '("doom-spacegrey"))


;;; Generated autoloads from doom-themes.el

(autoload 'doom-name-to-rgb "doom-themes" "\
Retrieves the hexidecimal string repesented the named COLOR (e.g. \"red\")
for FRAME (defaults to the current frame).

(fn COLOR)")
(autoload 'doom-blend "doom-themes" "\
Blend two colors (hexidecimal strings) together by a coefficient ALPHA (a
float between 0 and 1)

(fn COLOR1 COLOR2 ALPHA)")
(autoload 'doom-darken "doom-themes" "\
Darken a COLOR (a hexidecimal string) by a coefficient ALPHA (a float between
0 and 1).

(fn COLOR ALPHA)")
(autoload 'doom-lighten "doom-themes" "\
Brighten a COLOR (a hexidecimal string) by a coefficient ALPHA (a float
between 0 and 1).

(fn COLOR ALPHA)")
(autoload 'doom-color "doom-themes" "\
Retrieve a specific color named NAME (a symbol) from the current theme.

(fn NAME &optional TYPE)")
(autoload 'doom-ref "doom-themes" "\
TODO

(fn FACE PROP &optional CLASS)")
(autoload 'doom-themes-set-faces "doom-themes" "\
Customize THEME (a symbol) with FACES.

If THEME is nil, it applies to all themes you load. FACES is a list of Doom
theme face specs. These is a simplified spec. For example:

  (doom-themes-set-faces \\='user
    \\='(default :background red :foreground blue)
    \\='(doom-modeline-bar :background (if -modeline-bright modeline-bg highlight))
    \\='(doom-modeline-buffer-file :inherit \\='mode-line-buffer-id :weight \\='bold)
    \\='(doom-modeline-buffer-path :inherit \\='mode-line-emphasis :weight \\='bold)
    \\='(doom-modeline-buffer-project-root :foreground green :weight \\='bold))

(fn THEME &rest FACES)")
(function-put 'doom-themes-set-faces 'lisp-indent-function 'defun)
(when (and (boundp 'custom-theme-load-path) load-file-name) (let* ((base (file-name-directory load-file-name)) (dir (expand-file-name "themes/" base))) (add-to-list 'custom-theme-load-path (or (and (file-directory-p dir) dir) base))))
(register-definition-prefixes "doom-themes" '("def-doom-theme" "doom-"))


;;; Generated autoloads from doom-themes-base.el

(register-definition-prefixes "doom-themes-base" '("doom-themes-base-"))


;;; Generated autoloads from doom-themes-ext-neotree.el

(autoload 'doom-themes-neotree-config "doom-themes-ext-neotree" "\
Install doom-themes' neotree configuration.

Includes an Atom-esque icon theme and highlighting based on filetype.")
(register-definition-prefixes "doom-themes-ext-neotree" '("doom-"))


;;; Generated autoloads from doom-themes-ext-org.el

(autoload 'doom-themes-org-config "doom-themes-ext-org" "\
Load `doom-themes-ext-org'.")
(register-definition-prefixes "doom-themes-ext-org" '("doom-themes-"))


;;; Generated autoloads from doom-themes-ext-treemacs.el

(autoload 'doom-themes-treemacs-config "doom-themes-ext-treemacs" "\
Install doom-themes' treemacs configuration.

Includes an Atom-esque icon theme and highlighting based on filetype.")
(register-definition-prefixes "doom-themes-ext-treemacs" '("doom-themes-"))


;;; Generated autoloads from doom-themes-ext-visual-bell.el

(autoload 'doom-themes-visual-bell-fn "doom-themes-ext-visual-bell" "\
Blink the mode-line red briefly. Set `ring-bell-function' to this to use it.")
(autoload 'doom-themes-visual-bell-config "doom-themes-ext-visual-bell" "\
Enable flashing the mode-line on error.")


;;; Generated autoloads from doom-tokyo-night-theme.el

(register-definition-prefixes "doom-tokyo-night-theme" '("doom-tokyo-night"))


;;; Generated autoloads from doom-tomorrow-day-theme.el

(register-definition-prefixes "doom-tomorrow-day-theme" '("doom-tomorrow-day"))


;;; Generated autoloads from doom-tomorrow-night-theme.el

(register-definition-prefixes "doom-tomorrow-night-theme" '("doom-tomorrow-night"))


;;; Generated autoloads from doom-vibrant-theme.el

(register-definition-prefixes "doom-vibrant-theme" '("doom-vibrant"))


;;; Generated autoloads from doom-wilmersdorf-theme.el

(register-definition-prefixes "doom-wilmersdorf-theme" '("doom-wilmersdorf"))


;;; Generated autoloads from doom-xcode-theme.el

(register-definition-prefixes "doom-xcode-theme" '("doom-xcode"))


;;; Generated autoloads from doom-zenburn-theme.el

(register-definition-prefixes "doom-zenburn-theme" '("doom-zenburn"))

;;; End of scraped data

(provide 'doom-themes-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; doom-themes-autoloads.el ends here
