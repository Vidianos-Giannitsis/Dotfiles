(undo-tree-save-format-version . 1)
"7a241d0ae3d140151f22f30a27bec0e7d24ffb09"
[nil nil nil nil (26263 48592 951817 240000) 0 nil]
([nil nil ((72166 . 72169) (72211 . 72219) (#("	" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 72211) (72216 . 72219) (72229 . 72237) (#("	" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 72229) (72234 . 72237) (72247 . 72255) (#("	" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 72247) (72252 . 72255) 72160 (t 26263 47469 192403 772000)) nil (26263 48592 951806 763000) 0 nil])
([nil nil ((21770 . 21771) (t 26263 48592 963639 557000)) nil (26263 48809 523388 348000) 0 nil])
([nil nil ((#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 72267) (undo-tree-id70 . -2) (undo-tree-id71 . -2) (undo-tree-id72 . -2) (undo-tree-id73 . -2) (undo-tree-id74 . -2) (undo-tree-id75 . -2) (undo-tree-id76 . -2) (undo-tree-id77 . -2) (undo-tree-id78 . -2) (undo-tree-id79 . -2) (undo-tree-id80 . -2) (undo-tree-id81 . -2) (undo-tree-id82 . -2) (undo-tree-id83 . -2) (undo-tree-id84 . -2) (undo-tree-id85 . -2) (undo-tree-id86 . -2) (undo-tree-id87 . -2) (undo-tree-id88 . -1) (undo-tree-id89 . -3) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -3) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 72242) (undo-tree-id98 . -2) (undo-tree-id99 . -2) (undo-tree-id100 . -2) (undo-tree-id101 . -2) (undo-tree-id102 . -2) (undo-tree-id103 . -2) (undo-tree-id104 . -2) (undo-tree-id105 . -2) (undo-tree-id106 . -2) (undo-tree-id107 . -2) (undo-tree-id108 . -2) (undo-tree-id109 . -2) (undo-tree-id110 . -2) (undo-tree-id111 . -2) (undo-tree-id112 . -2) (undo-tree-id113 . -2) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 72217) (undo-tree-id114 . -2) (undo-tree-id115 . -2) (undo-tree-id116 . -2) (undo-tree-id117 . -2) (undo-tree-id118 . -2) (undo-tree-id119 . -2) (undo-tree-id120 . -2) (undo-tree-id121 . -2) (undo-tree-id122 . -2) (undo-tree-id123 . -2) (undo-tree-id124 . -2) (undo-tree-id125 . -2) (undo-tree-id126 . -2) (undo-tree-id127 . -2) (undo-tree-id128 . -2) (undo-tree-id129 . -2) (undo-tree-id130 . -2) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 72167) (undo-tree-id131 . -2) (undo-tree-id132 . -2) (undo-tree-id133 . -2) (undo-tree-id134 . -2) (undo-tree-id135 . -2) (undo-tree-id136 . -2) (undo-tree-id137 . -2) (undo-tree-id138 . -2) (undo-tree-id139 . -2) (undo-tree-id140 . -2) (undo-tree-id141 . -2) (undo-tree-id142 . -2) (undo-tree-id143 . -2) (undo-tree-id144 . -2) (undo-tree-id145 . -2) (undo-tree-id146 . -2) (undo-tree-id147 . -2) (undo-tree-id148 . -2) (undo-tree-id149 . -2) (undo-tree-id150 . -2) (undo-tree-id151 . -2) (undo-tree-id152 . -2) (undo-tree-id153 . -2) (undo-tree-id154 . -2) (undo-tree-id155 . -2) (undo-tree-id156 . -2) (undo-tree-id157 . -2) (undo-tree-id158 . -2) (undo-tree-id159 . -2) (undo-tree-id160 . -2) (undo-tree-id161 . -2) (undo-tree-id162 . -2) (undo-tree-id163 . -2) (undo-tree-id164 . -2) (undo-tree-id165 . -2) (undo-tree-id166 . -2) (undo-tree-id167 . -2) (undo-tree-id168 . -2) (undo-tree-id169 . -2) (undo-tree-id170 . -2) (undo-tree-id171 . -2) (undo-tree-id172 . -2) (undo-tree-id173 . -2) (undo-tree-id174 . -2) (undo-tree-id175 . -2) (undo-tree-id176 . -2) (undo-tree-id177 . -2) (undo-tree-id178 . -2) (undo-tree-id179 . -2) (undo-tree-id180 . -2) (undo-tree-id181 . -2) (undo-tree-id182 . -2) (undo-tree-id183 . -2) (undo-tree-id184 . -2) (undo-tree-id185 . -3) 72276 (t 26263 48689 620948 491000)) nil (26263 48821 458560 181000) 0 nil] [nil nil ((72170 . 72173) (72219 . 72222) (72251 . 72254) (72275 . 72278) (72311 . 72314) (72331 . 72340) 72161 (t 26263 48689 620948 491000)) ((#("
	       " 0 1 (src-block t face (font-lock-comment-face org-block) font-lock-multiline t font-lock-fontified t fontified nil) 1 9 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 72331) (#(";; " 0 3 (src-block t face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 72311) (#(" ;;" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 1 3 (src-block t face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 72275) (#(";; " 0 3 (src-block t face (font-lock-comment-face org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 72251) (#(" ;;" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 1 3 (src-block t face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 72219) (#(";; " 0 3 (src-block t face (font-lock-comment-face org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 72170)) (26263 48809 521512 109000) 0 nil])
([nil nil ((#("     " 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 4 5 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 72212) (undo-tree-id0 . -5) (undo-tree-id1 . -5) (undo-tree-id2 . -5) (undo-tree-id3 . -5) (undo-tree-id4 . -5) (undo-tree-id5 . -5) (undo-tree-id6 . -5) (undo-tree-id7 . -5) (undo-tree-id8 . -5) (undo-tree-id9 . -5) (undo-tree-id10 . -5) (undo-tree-id11 . -5) (undo-tree-id12 . -5) (undo-tree-id13 . -5) (undo-tree-id14 . -5) (undo-tree-id15 . -5) (undo-tree-id16 . -5) (72221 . 72222) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 72221) (#("     " 0 5 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 72237) (undo-tree-id17 . -5) (undo-tree-id18 . -5) (undo-tree-id19 . -5) (undo-tree-id20 . -5) (undo-tree-id21 . -5) (undo-tree-id22 . -5) (undo-tree-id23 . -5) (undo-tree-id24 . -5) (undo-tree-id25 . -5) (undo-tree-id26 . -5) (undo-tree-id27 . -5) (undo-tree-id28 . -5) (undo-tree-id29 . -5) (undo-tree-id30 . -5) (undo-tree-id31 . -5) (undo-tree-id32 . -5) (72246 . 72247) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 72246) (#("     " 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 4 5 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 72262) (undo-tree-id33 . -5) (undo-tree-id34 . -5) (undo-tree-id35 . -5) (undo-tree-id36 . -5) (undo-tree-id37 . -5) (undo-tree-id38 . -5) (undo-tree-id39 . -5) (undo-tree-id40 . -5) (undo-tree-id41 . -5) (undo-tree-id42 . -5) (undo-tree-id43 . -5) (undo-tree-id44 . -5) (undo-tree-id45 . -5) (undo-tree-id46 . -5) (undo-tree-id47 . -5) (undo-tree-id48 . -5) (undo-tree-id49 . -5) (undo-tree-id50 . -5) (undo-tree-id51 . -5) (undo-tree-id52 . -5) (undo-tree-id53 . -5) (undo-tree-id54 . -5) (undo-tree-id55 . -5) (undo-tree-id56 . -5) (undo-tree-id57 . -5) (undo-tree-id58 . -5) (undo-tree-id59 . -5) (undo-tree-id60 . -5) (undo-tree-id61 . -5) (undo-tree-id62 . -5) (undo-tree-id63 . -5) (undo-tree-id64 . -5) (undo-tree-id65 . -5) (undo-tree-id66 . -5) (undo-tree-id67 . -4) (undo-tree-id68 . -5) (undo-tree-id69 . -5) (72271 . 72272) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 72271) 72161) nil (26263 48821 458255 739000) 0 nil])
nil
([nil nil ((45758 . 45759) (#("#" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -45758) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) 45759 (45758 . 45759) (t 26263 48821 470497 945000)) nil (26423 11075 501479 781000) 0 nil])
([nil nil ((68487 . 68492) (#("l" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -68487) (undo-tree-id11 . -1) (#("o" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -68488) (undo-tree-id12 . -1) (#("c" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -68489) (undo-tree-id13 . -1) (#("a" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -68490) (undo-tree-id14 . -1) (#("l" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -68491) (undo-tree-id15 . -1) (#("/" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -68492) (undo-tree-id16 . -1) (#("b" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -68493) (undo-tree-id17 . -1) (#("i" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -68494) (undo-tree-id18 . -1) (#("n" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -68495) (undo-tree-id19 . -1) (#("/" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -68496) (undo-tree-id20 . -1) (#("j" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -68497) (undo-tree-id21 . -1) (#("u" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -68498) (undo-tree-id22 . -1) (#("l" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -68499) (undo-tree-id23 . -1) (#("i" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -68500) (undo-tree-id24 . -1) (#("a" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -68501) (undo-tree-id25 . -1) 68502) nil (26423 11124 551619 854000) 0 nil] [nil nil ((68445 . 68446)) ((#(";" 0 1 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 68445) (t 26423 11047 270505 72000)) (26423 11047 260231 662000) 0 nil])
([nil nil ((68492 . 68493)) nil (26423 11124 551586 539000) 0 nil])
nil
([nil nil ((68493 . 68539) 68358) nil (26423 11124 551579 415000) 0 nil])
([nil nil ((45395 . 45396) (45424 . 45425) (45455 . 45456) (45463 . 45464) (#("       " 0 7 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 45463) (45483 . 45484) (#("       " 0 7 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 45483) (45504 . 45505) (#("       " 0 7 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 45504) (45524 . 45525) (#("       " 0 7 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 45524) (45543 . 45544) (#("       " 0 7 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 45543) (45564 . 45565) (#("       " 0 7 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 45564) (45584 . 45585) (#("       " 0 7 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 45584) (45602 . 45603) (#("       " 0 7 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 45602) (45623 . 45624) (#("       " 0 7 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 45623) (45642 . 45643) (#("       " 0 7 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 45642) (45663 . 45664) (45665 . 45666) (45675 . 45676) (45715 . 45716) (#(";" 0 1 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 45758) (45760 . 45761) (45794 . 45796) (45795 . 45796) (#("oc" 0 2 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 45795) (45798 . 45801) (45799 . 45803) (45800 . 45829) (45813 . 45814) (45861 . 45862) (45881 . 45882) (45903 . 45904) (45930 . 45931) 45392 (t 26423 11124 564732 500000)) nil (26423 11140 466055 613000) 0 nil])
([nil nil ((#(")" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 68529) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (t 26423 11140 478250 40000)) nil (26423 11151 119344 737000) 0 nil])
([nil nil ((68529 . 68530) (#(")" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -68529) (68529 . 68530)) nil (26423 11151 119323 785000) 0 nil])
([nil nil ((68501 . 68502) (#("1" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 68501) (t 26423 11151 125039 972000)) nil (26423 11791 285757 666000) 0 nil])
([nil nil ((68499 . 68500) (#("1" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 68499) (undo-tree-id32 . -1)) nil (26423 11791 285754 313000) 0 nil])
([nil nil ((45764 . 45765) (#("1" 0 1 (src-block t face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 45764)) nil (26461 40668 702632 630000) 0 nil])
([nil nil ((225 . 226) (#("i" 0 1 (fontified t)) . 225) (t 26461 40474 172220 231000)) nil (26461 40761 86782 534000) 0 nil] [nil nil ((nil rear-nonsticky nil 217 . 218) (nil fontified nil 214 . 218) (214 . 218) (#(" " 0 1 (fontified nil)) . -396) (#("ever" 0 4 (fontified t)) . 396) (undo-tree-id6 . -4) 214 (t 26461 40474 172220 231000)) ((396 . 400) (396 . 397) (#("ever" 0 3 (fontified nil) 3 4 (rear-nonsticky nil fontified nil)) . 214) (nil rear-nonsticky t 217 . 218)) (26461 40668 700577 657000) 0 nil] [nil nil ((nil rear-nonsticky nil 215 . 216) (nil fontified nil 214 . 216) (214 . 216) (#(" " 0 1 (fontified nil)) . -216) (#("of" 0 2 (fontified t)) . 216) (undo-tree-id5 . -2) 214 (t 26461 40474 172220 231000)) ((216 . 218) (216 . 217) (#("of" 0 1 (fontified nil) 1 2 (rear-nonsticky nil fontified nil)) . 214) (nil rear-nonsticky t 215 . 216)) (26461 40659 184745 177000) 0 nil] [nil nil ((nil rear-nonsticky nil 212 . 213) (nil fontified nil 205 . 213) (205 . 213) (#(" " 0 1 (fontified nil)) . -203) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("dotfiles" 0 8 (fontified t)) . 203) (undo-tree-id4 . -8) 214 (t 26461 40474 172220 231000)) ((203 . 211) (203 . 204) (#("dotfiles" 0 7 (fontified nil) 7 8 (rear-nonsticky nil fontified nil)) . 205) (nil rear-nonsticky t 212 . 213)) (26461 40648 589589 672000) 0 nil] [nil nil ((45766 . 45767) (#("1" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 45766) (undo-tree-id30 . -1)) ((45766 . 45767) (#("0" 0 1 (fontified nil)) . 45766) (t 26423 11791 305819 11000)) (26461 40205 130531 802000) 0 nil])
([nil nil ((#("entore" 0 3 (fontified nil) 3 4 (fontified nil) 4 6 (fontified nil)) . 228) (undo-tree-id152 . -3) (undo-tree-id153 . -3) (undo-tree-id154 . -6) (undo-tree-id155 . -6) (undo-tree-id156 . -6) (undo-tree-id157 . -6) (undo-tree-id158 . -6) (undo-tree-id159 . -6) (undo-tree-id160 . -6) (undo-tree-id161 . -6) (undo-tree-id162 . -6) (undo-tree-id163 . -6) (undo-tree-id164 . -6) (undo-tree-id165 . -6) (undo-tree-id166 . -6) (undo-tree-id167 . -6) (undo-tree-id168 . -6) (undo-tree-id169 . -6) (undo-tree-id170 . -6) (undo-tree-id171 . -6) (undo-tree-id172 . -6) (undo-tree-id173 . -6) (undo-tree-id174 . -6) (undo-tree-id175 . -6) (undo-tree-id176 . -6) (undo-tree-id177 . -6) (undo-tree-id178 . -6) (undo-tree-id179 . -6) (undo-tree-id180 . -6) (undo-tree-id181 . -6) (undo-tree-id182 . -6) (undo-tree-id183 . -6) (undo-tree-id184 . -6) (undo-tree-id185 . -6) (undo-tree-id186 . -6) (undo-tree-id187 . -6) (undo-tree-id188 . -6) (undo-tree-id189 . -6) (undo-tree-id190 . -6) (undo-tree-id191 . -6) (undo-tree-id192 . -6) (undo-tree-id193 . -6) (undo-tree-id194 . -6) (undo-tree-id195 . -6) (undo-tree-id196 . -6) (undo-tree-id197 . -6) (undo-tree-id198 . -6) (undo-tree-id199 . -6) (undo-tree-id200 . -6) (undo-tree-id201 . -6) (undo-tree-id202 . -6) (undo-tree-id203 . -6) (undo-tree-id204 . -6) (undo-tree-id205 . -6) (undo-tree-id206 . -6) (undo-tree-id207 . -6) (undo-tree-id208 . -6) (undo-tree-id209 . -6) (undo-tree-id210 . -6) (undo-tree-id211 . -6) (undo-tree-id212 . -6) (undo-tree-id213 . -6) (undo-tree-id214 . -6) (undo-tree-id215 . -6) (undo-tree-id216 . -6) (undo-tree-id217 . -6) (undo-tree-id218 . -6) (undo-tree-id219 . -6) (undo-tree-id220 . -6) (undo-tree-id221 . -6) (undo-tree-id222 . -6) (undo-tree-id223 . -6) (undo-tree-id224 . -6) (undo-tree-id225 . -6) (undo-tree-id226 . -6) (undo-tree-id227 . -6) (undo-tree-id228 . -6) (undo-tree-id229 . -6) (undo-tree-id230 . -6) (undo-tree-id231 . -6) (222 . 228) 228) nil (26461 40761 86775 689000) 0 nil])
nil
nil
nil
([nil nil ((nil rear-nonsticky nil 2320 . 2321) (nil fontified nil 2319 . 2321) (2319 . 2321) (#(" " 0 1 (fontified nil)) . -184) (#("is" 0 2 (fontified t)) . 184) (undo-tree-id0 . -2) 2322 (t 26423 11791 305819 11000)) ((184 . 186) (184 . 185) (#("is" 0 1 (fontified nil) 1 2 (rear-nonsticky nil fontified nil)) . 2319) (nil rear-nonsticky t 2320 . 2321)) (26461 40205 128385 196000) 0 nil])
([nil nil ((#("  
" 0 3 (fontified t)) . 133) (undo-tree-id7 . -3) (undo-tree-id8 . -2) (undo-tree-id9 . -3) (undo-tree-id10 . -3) (undo-tree-id11 . -3) (undo-tree-id12 . -3) (undo-tree-id13 . -3) (undo-tree-id14 . -3) (undo-tree-id15 . -3) (undo-tree-id16 . -3) (undo-tree-id17 . -3) (undo-tree-id18 . -3) (undo-tree-id19 . -3) (undo-tree-id20 . -3) (undo-tree-id21 . -3) (undo-tree-id22 . -3) (undo-tree-id23 . -3) (undo-tree-id24 . -3) (undo-tree-id25 . -3) (undo-tree-id26 . -3) (undo-tree-id27 . -3) (undo-tree-id28 . -3) (undo-tree-id29 . -3) (undo-tree-id30 . -3) (undo-tree-id31 . -3) (undo-tree-id32 . -3) (undo-tree-id33 . -3) (undo-tree-id34 . -3) (undo-tree-id35 . -3) (undo-tree-id36 . -3) (undo-tree-id37 . -3) (undo-tree-id38 . -3) (undo-tree-id39 . -3) (undo-tree-id40 . -3) (undo-tree-id41 . -3) (undo-tree-id42 . -3) (undo-tree-id43 . -3) (undo-tree-id44 . -3) (undo-tree-id45 . -3) (undo-tree-id46 . -3) (undo-tree-id47 . -3) (undo-tree-id48 . -3) (undo-tree-id49 . -3) (undo-tree-id50 . -3) (undo-tree-id51 . -3) (undo-tree-id52 . -3) (undo-tree-id53 . -3) (undo-tree-id54 . -3) (undo-tree-id55 . -3) (undo-tree-id56 . -3) (undo-tree-id57 . -3) (undo-tree-id58 . -3) (undo-tree-id59 . -3) (undo-tree-id60 . -3) (undo-tree-id61 . -3) (undo-tree-id62 . -3) (undo-tree-id63 . -3) (undo-tree-id64 . -3) (undo-tree-id65 . -3) (undo-tree-id66 . -3) (undo-tree-id67 . -3) (undo-tree-id68 . -3) (undo-tree-id69 . -3) (undo-tree-id70 . -3) (undo-tree-id71 . -3) (undo-tree-id72 . -3) (undo-tree-id73 . -3) (undo-tree-id74 . -3) (undo-tree-id75 . -3) (undo-tree-id76 . -3) (undo-tree-id77 . -3) (undo-tree-id78 . -3) (undo-tree-id79 . -3) (undo-tree-id80 . -3) (undo-tree-id81 . -3) (undo-tree-id82 . -3) (undo-tree-id83 . -3) (undo-tree-id84 . -3) (undo-tree-id85 . -3) (undo-tree-id86 . -3) (undo-tree-id87 . -3) (undo-tree-id88 . -3) (undo-tree-id89 . -3) (undo-tree-id90 . -3) (undo-tree-id91 . -3) (undo-tree-id92 . -3) (undo-tree-id93 . -3) (undo-tree-id94 . -3) (undo-tree-id95 . -3) (undo-tree-id96 . -3) (undo-tree-id97 . -3) (undo-tree-id98 . -3) (undo-tree-id99 . -3) (undo-tree-id100 . -3) (undo-tree-id101 . -3) (undo-tree-id102 . -3) (undo-tree-id103 . -3) (undo-tree-id104 . -3) (undo-tree-id105 . -3) (undo-tree-id106 . -3) (undo-tree-id107 . -3) (undo-tree-id108 . -3) (undo-tree-id109 . -3) (undo-tree-id110 . -3) (undo-tree-id111 . -3) (undo-tree-id112 . -3) (undo-tree-id113 . -3) (undo-tree-id114 . -3) (undo-tree-id115 . -3) (undo-tree-id116 . -3) (undo-tree-id117 . -3) (undo-tree-id118 . -3) (undo-tree-id119 . -3) (undo-tree-id120 . -3) (undo-tree-id121 . -3) (undo-tree-id122 . -3) (undo-tree-id123 . -3) (undo-tree-id124 . -3) (undo-tree-id125 . -3) (undo-tree-id126 . -3) (undo-tree-id127 . -3) (undo-tree-id128 . -3) (undo-tree-id129 . -3) (undo-tree-id130 . -3) (undo-tree-id131 . -3) (undo-tree-id132 . -3) (undo-tree-id133 . -3) (undo-tree-id134 . -3) (undo-tree-id135 . -3) (undo-tree-id136 . -3) (undo-tree-id137 . -3) (undo-tree-id138 . -3) (undo-tree-id139 . -3) (undo-tree-id140 . -3) (undo-tree-id141 . -3) (undo-tree-id142 . -3) (undo-tree-id143 . -3) (undo-tree-id144 . -3) (undo-tree-id145 . -3) (undo-tree-id146 . -3) (undo-tree-id147 . -3) (undo-tree-id148 . -3) (undo-tree-id149 . -3) (undo-tree-id150 . -3) (undo-tree-id151 . -3)) nil (26461 40945 654436 75000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t)) . -350) (undo-tree-id234 . -1) (#("a" 0 1 (fontified t)) . -351) (undo-tree-id235 . -1) 352 (350 . 352) (t 26461 40761 108619 533000)) nil (26461 41001 982579 454000) 0 nil] [nil nil ((#("Emacs is the most extensible program I have " 0 44 (fontified t)) . 349) (t 26461 40761 108619 533000)) ((349 . 393)) (26461 40945 652964 146000) 0 nil])
([nil nil ((58594 . 58601) (58573 . 58594) (#("t" 0 1 (fontified t)) . -58573) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (#("h" 0 1 (fontified t)) . -58574) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (#("e" 0 1 (fontified t)) . -58575) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (#(" " 0 1 (fontified t)) . -58576) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (#("m" 0 1 (fontified t)) . -58577) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (#("i" 0 1 (fontified t)) . -58578) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (#("n" 0 1 (fontified t)) . -58579) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (#("i" 0 1 (fontified t)) . -58580) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (#("b" 0 1 (fontified t)) . -58581) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (#("u" 0 1 (fontified t)) . -58582) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) 58583 (58581 . 58583) (58566 . 58581) (58545 . 58566) (#("e" 0 1 (fontified t)) . -58545) (undo-tree-id279 . -1) 58546 (58542 . 58546) (#("," 0 1 (fontified t)) . -58542) (undo-tree-id280 . -1) 58543 (58542 . 58543) (#("," 0 1 (fontified t)) . -58542) (undo-tree-id281 . -1) 58543 (#("[" 0 1 (fontified nil)) . -58543) (undo-tree-id282 . -1) (#("]" 0 1 (fontified t)) . 58544) (#("p" 0 1 (fontified t)) . -58544) (undo-tree-id283 . -1) (#(" " 0 1 (fontified t)) . -58545) (undo-tree-id284 . -1) 58546 (58544 . 58546) (58536 . 58545) (#("l" 0 1 (fontified t)) . -58536) (undo-tree-id285 . -1) (#("e" 0 1 (fontified t)) . -58537) (undo-tree-id286 . -1) 58538 (58531 . 58538) (58512 . 58531) (58511 . 58512) (#("t" 0 1 (face org-level-1 fontified t)) . -58511) (undo-tree-id287 . -1) 58512 (58506 . 58512) (58507 . 58509) (#("  " 0 2 (fontified nil)) . 58506) (undo-tree-id288 . -2) (58508 . 58509) (58505 . 58508) (t 26461 40993 274443 217000) 58505) nil (26461 41254 218274 305000) 0 nil] [nil nil ((nil rear-nonsticky nil 1738 . 1739) (nil fontified nil 1731 . 1739) (1731 . 1739) (#(" " 0 1 (fontified nil)) . -1086) (#("workflow" 0 8 (fontified t)) . 1086) (undo-tree-id243 . -8) 1740 (t 26461 40993 274443 217000)) ((1086 . 1094) (1086 . 1087) (#("workflow" 0 7 (fontified nil) 7 8 (rear-nonsticky nil fontified nil)) . 1731) (nil rear-nonsticky t 1738 . 1739)) (26461 41001 980901 210000) 0 nil] [nil nil ((nil rear-nonsticky nil 1744 . 1745) (nil fontified nil 1740 . 1745) (1740 . 1745)) ((#("which" 0 4 (fontified nil) 4 5 (rear-nonsticky nil fontified nil)) . 1740) (undo-tree-id239 . -4) (undo-tree-id240 . -4) (undo-tree-id241 . -4) (undo-tree-id242 . -4) (nil rear-nonsticky t 1744 . 1745)) (26461 40992 255464 392000) 0 nil] [nil nil ((nil rear-nonsticky nil 2536 . 2537) (nil fontified nil 2532 . 2537) (2532 . 2537)) ((#("which" 0 4 (face org-link font-lock-multiline t htmlize-link (:uri "#org-roam-references-and-the-zettelkasten-workflow") help-echo "LINK: #org-roam-references-and-the-zettelkasten-workflow" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-link-global org-link fontified nil) 4 5 (face org-link font-lock-multiline t htmlize-link (:uri "#org-roam-references-and-the-zettelkasten-workflow") help-echo "LINK: #org-roam-references-and-the-zettelkasten-workflow" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-link-global org-link rear-nonsticky nil fontified nil)) . 2532) (undo-tree-id236 . -5) (undo-tree-id237 . -5) (undo-tree-id238 . -5) (nil rear-nonsticky t 2536 . 2537)) (26461 40986 974977 445000) 0 nil] [nil nil ((#("Emacs is the most extensible program I have " 0 44 (fontified t)) . 349) (undo-tree-id232 . 43) (undo-tree-id233 . -1)) ((349 . 393)) (26461 40963 164544 116000) 0 nil])
nil
([nil nil ((58691 . 58692) (58684 . 58691) (58683 . 58684) (58676 . 58683) (58655 . 58676) (58643 . 58655) (58622 . 58643) (58601 . 58622)) nil (26461 41254 218216 894000) 0 nil])
nil
nil
nil
nil
([nil nil ((nil rear-nonsticky nil 58775 . 58776) (nil fontified nil 58692 . 58776) (58692 . 58776) 58691) nil (26461 41254 218211 167000) 0 nil])
([nil nil ((58789 . 58810) (#("g" 0 1 (fontified t)) . -58789) (undo-tree-id244 . -1) (#("f" 0 1 (fontified t)) . -58790) (undo-tree-id245 . -1) (#("u" 0 1 (fontified t)) . -58791) (undo-tree-id246 . -1) 58792 (58788 . 58792) (#("u" 0 1 (fontified t)) . -58788) (undo-tree-id247 . -1) (#("f" 0 1 (fontified t)) . -58789) (undo-tree-id248 . -1) 58790 (58777 . 58790) (nil face org-link 58776 . 58777) (nil font-lock-multiline t 58776 . 58777) (nil fontified nil 58776 . 58777) (58776 . 58777) (#(")" 0 1 (fontified nil font-lock-multiline t face org-link)) . -58776) (58776 . 58777)) nil (26461 41254 218199 923000) 0 nil])
([nil nil ((58844 . 58854) (#("e" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -58844) (undo-tree-id293 . -1) (#("l" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -58845) (undo-tree-id294 . -1) 58846 (58841 . 58846) (#("n" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -58841) (undo-tree-id295 . -1) (#("a" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -58842) (undo-tree-id296 . -1) 58843 (58833 . 58843) (#("e" 0 1 (face org-meta-line font-lock-fontified t fontified t)) . -58820) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (#("m" 0 1 (face org-meta-line font-lock-fontified t fontified t)) . -58821) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (#("a" 0 1 (face org-meta-line font-lock-fontified t fontified t)) . -58822) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (#("c" 0 1 (face org-meta-line font-lock-fontified t fontified t)) . -58823) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) 58824 (58822 . 58824) (58820 . 58822) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 58820 58820 nil nil nil t #s(yas--field 2 58833 58854 nil nil nil t #s(yas--field 3 58855 58855 nil nil nil nil nil))) #s(yas--field 2 58833 58854 nil nil nil t #s(yas--field 3 58855 58855 nil nil nil nil nil)) #s(yas--field 3 58855 58855 nil nil nil nil nil)) nil 0 nil #s(yas--field 2 58833 58854 nil nil nil t #s(yas--field 3 58855 58855 nil nil nil nil nil)) nil nil)) (58812 . 58844) (#("\\s" 0 2 (fontified t)) . 58812) (undo-tree-id309 . -2) 58814 (58812 . 58814) (58811 . 58812) (58810 . 58811) (t 26461 41254 233917 52000) 58809) nil (26461 41335 188279 780000) 0 nil])
([nil nil ((apply yas--snippet-revive 58812 58865 #s(yas--snippet nil (#s(yas--field 1 58820 58820 nil nil nil t #s(yas--field 2 58833 58854 nil nil nil t #s(yas--field 3 58855 58855 nil nil nil nil nil))) #s(yas--field 2 58833 58854 nil nil nil t #s(yas--field 3 58855 58855 nil nil nil nil nil)) #s(yas--field 3 58855 58855 nil nil nil nil nil)) nil 0 nil #s(yas--field 2 58833 58854 nil nil nil t #s(yas--field 3 58855 58855 nil nil nil nil nil)) nil nil))) nil (26461 41335 188251 214000) 0 nil])
([nil nil ((#("#+NAME: 
" 0 8 (face org-meta-line font-lock-fontified t fontified t) 8 9 (fontified t)) . 58812) (undo-tree-id289 . -8) (undo-tree-id290 . -8) (undo-tree-id291 . -8) (undo-tree-id292 . -7) 58819) nil (26461 41335 188246 465000) 0 nil])
([nil nil ((58847 . 59819) 58846) nil (26461 41335 188217 410000) 0 nil])
([nil nil ((59776 . 59777) (#("H" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 59776) (undo-tree-id310 . -1) (t 26461 41335 201456 111000)) nil (26461 41368 788118 306000) 0 nil])
([nil nil ((59547 . 59548) (#("=" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 59547) (undo-tree-id311 . -1) (t 26461 41368 805151 685000)) nil (26461 41391 321390 297000) 0 nil])
([nil nil ((59776 . 59777) (#("h" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 59776) (undo-tree-id331 . -1) (t 26461 41391 338727 980000)) nil (26461 41414 260065 744000) 0 nil])
([nil nil ((59547 . 59548) (#("d" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 59547) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1)) nil (26461 41414 260054 290000) 0 nil])
([nil nil ((10975 . 11033) (#("+ 
+ Add orderless to my config and make it work with ivy." 0 2 (fontified nil) 2 3 (fontified nil) 3 4 (face org-superstar-item composition (2 1 [10148]) fontified nil) 4 58 (fontified nil)) . 10975) (undo-tree-id335 . -58) (undo-tree-id336 . -58) (undo-tree-id337 . -58) (undo-tree-id338 . -58) (undo-tree-id339 . -58) (undo-tree-id340 . -58) (undo-tree-id341 . -58) (undo-tree-id342 . -58) (undo-tree-id343 . -57) (undo-tree-id344 . -58) (undo-tree-id345 . -57) (undo-tree-id346 . -58) (undo-tree-id347 . -57) (undo-tree-id348 . -57) (undo-tree-id349 . -57) (undo-tree-id350 . -57) (undo-tree-id351 . -57) (undo-tree-id352 . -57) (undo-tree-id353 . -57) (undo-tree-id354 . -57) (undo-tree-id355 . -57) (undo-tree-id356 . -3) (10975 . 10978) 11029 (t 26461 41414 278975 371000)) nil (26461 41816 658205 938000) 0 nil])
([nil nil ((11044 . 11047) (#("t" 0 1 (fontified t)) . -11044) (undo-tree-id332 . -1) 11045 (11043 . 11045) (#("n" 0 1 (fontified t)) . -11043) (undo-tree-id333 . -1) (#("e" 0 1 (fontified t)) . -11044) (undo-tree-id334 . -1) 11045 (11033 . 11045)) nil (26461 41816 658167 245000) 0 nil])
([nil nil ((12586 . 12606) 11083 (t 26461 41816 669987 726000)) nil (26461 41827 723600 238000) 0 nil])
([nil nil ((7912 . 7913) (#("4" 0 1 (src-block t face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 7912) (undo-tree-id0 . -1) (t 26461 41827 736774 56000)) nil (26542 1419 261766 306000) 0 nil])
([nil nil ((76902 . 76903) (#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 76607) (undo-tree-id0 . 2) (#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 76663) (#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 76813) (76862 . 76863) (76863 . 76907) 76548 (t 26542 1419 280210 927000)) nil (26547 44642 518409 158000) 0 nil])
([nil nil ((76903 . 76925) 76548 (t 26547 44642 538983 685000)) nil (26547 45745 513683 478000) 0 nil])
([nil nil ((76925 . 76993) 76548 (t 26547 45745 531028 648000)) nil (26547 46187 112309 236000) 0 nil])
([nil nil ((77070 . 77071) (76607 . 76698) (76608 . 76609) (#("setq ebib-notes-di" 0 4 (src-block t face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 4 18 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 76813) (#("ctory \"~/org_roam/ref\")

  (setq ebib-multiline-major-mode 'org-mode)
  (re" 0 6 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 6 22 (src-block t face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 22 28 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 28 32 (src-block t face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 32 73 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 73 75 (src-block t face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 76833) (76992 . 76993) (76993 . 77070) 76548 (t 26547 46187 130066 350000)) nil (26551 45979 615585 784000) 0 nil])
([nil nil ((#("  (setq biblio-crossref-user-email-address \"vidianos.giannitsis@kuleuven.be\")
" 0 3 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 3 7 (src-block t face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 7 43 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 43 76 (src-block t face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 76 77 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 77 78 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 76993) (undo-tree-id0 . -76) (undo-tree-id1 . -77) (undo-tree-id2 . -76) (undo-tree-id3 . -76) (undo-tree-id4 . -76) (undo-tree-id5 . -76) (undo-tree-id6 . -76) (undo-tree-id7 . -76) (undo-tree-id8 . -76) (undo-tree-id9 . -76) (undo-tree-id10 . -76) (undo-tree-id11 . -76) (undo-tree-id12 . -76) (undo-tree-id13 . -76) (undo-tree-id14 . -76) (undo-tree-id15 . -76) (undo-tree-id16 . -76) (undo-tree-id17 . -76) (undo-tree-id18 . -76) (undo-tree-id19 . -76) (undo-tree-id20 . -76) (undo-tree-id21 . -76) (undo-tree-id22 . -76) (undo-tree-id23 . -76) (undo-tree-id24 . -76) (undo-tree-id25 . -76) (undo-tree-id26 . -76) (undo-tree-id27 . -76) (undo-tree-id28 . -76) (undo-tree-id29 . -76) (undo-tree-id30 . -76) (undo-tree-id31 . -76) (undo-tree-id32 . -76) (undo-tree-id33 . -76) (undo-tree-id34 . -76) (undo-tree-id35 . -76) (undo-tree-id36 . -76) (undo-tree-id37 . -76) (undo-tree-id38 . -76) (undo-tree-id39 . -76) (undo-tree-id40 . -76) (undo-tree-id41 . -76) (undo-tree-id42 . -76) (undo-tree-id43 . -76) (undo-tree-id44 . -76) (undo-tree-id45 . -76) (undo-tree-id46 . -76) (undo-tree-id47 . -76) (undo-tree-id48 . -76) (undo-tree-id49 . -76) (undo-tree-id50 . -76) (undo-tree-id51 . -76) (undo-tree-id52 . -76) (undo-tree-id53 . -76) (undo-tree-id54 . -76) (undo-tree-id55 . -76) (undo-tree-id56 . -76) (undo-tree-id57 . -76) (undo-tree-id58 . -78) (undo-tree-id59 . -78) 77069 (t 26551 45979 631972 748000)) nil (26551 46243 465466 473000) 0 nil])
([nil nil ((76993 . 77840) 76548 (t 26551 46243 483829 558000)) nil (26554 16027 604207 289000) 0 nil])
([nil nil ((77840 . 78397) 76548) nil (26554 16027 604203 517000) 0 nil])
([nil nil ((76644 . 76648) (#("y" 0 1 (fontified t)) . -76644) (undo-tree-id0 . -1) (#("l" 0 1 (fontified t)) . -76645) (undo-tree-id1 . -1) 76646 (76631 . 76646) (76628 . 76631) (76607 . 76628) (76586 . 76607) (#("r" 0 1 (fontified t)) . -76586) (undo-tree-id2 . -1) 76587 (76578 . 76587) (#("i" 0 1 (fontified t)) . -76578) (undo-tree-id3 . -1) (#("t" 0 1 (fontified t)) . -76579) (undo-tree-id4 . -1) 76580 (76567 . 76580) (76561 . 76567) (#("i" 0 1 (fontified t)) . -76561) (undo-tree-id5 . -1) 76562 (76555 . 76562) (#("t" 0 1 (fontified t)) . -76555) (undo-tree-id6 . -1) (#("r" 0 1 (fontified t)) . -76556) (undo-tree-id7 . -1) 76557 (76543 . 76557) (76522 . 76543) (#("c" 0 1 (fontified t)) . -76522) (undo-tree-id8 . -1) 76523 (76512 . 76523)) nil (26554 16027 604193 529000) 0 nil])
([nil nil ((78384 . 78392) (#("t" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -78384) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (#("i" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -78385) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (#("m" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -78386) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (#("e" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -78387) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (#("s" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -78388) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (#("t" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -78389) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (#("a" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -78390) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (#("m" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -78391) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (#("p" 0 1 (src-block t face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t)) . -78392) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) 78393 (t 26554 16027 619815 611000)) nil (26554 16196 779405 215000) 0 nil])
([nil nil ((#("-" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -78387) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) 78388 (t 26554 16196 796233 713000)) nil (26554 16427 582687 452000) 0 nil])
([nil nil ((76793 . 76797) (#("s" 0 1 (fontified t)) . -76793) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (#("o" 0 1 (fontified t)) . -76794) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) 76795 (76792 . 76795) (#("o" 0 1 (fontified t)) . -76792) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) 76793 (76774 . 76793) (#("\"" 0 1 (fontified t)) . 76774) (76773 . 76774) (76772 . 76774) (#("\"" 0 1 (fontified nil)) . -76772) (76769 . 76773) (76764 . 76769) (#("\"" 0 1 (fontified nil)) . -76764) (76761 . 76765) (#("e" 0 1 (fontified t)) . -76761) (undo-tree-id744 . -1) (#(" " 0 1 (fontified t)) . -76762) (undo-tree-id745 . -1) 76763 (76762 . 76763) (76741 . 76762) (#("b" 0 1 (fontified t)) . -76741) (undo-tree-id746 . -1) 76742 (76733 . 76742) (#(" " 0 1 (fontified t)) . -76733) (undo-tree-id747 . -1) 76734 (76728 . 76734) (#("\"" 0 1 (fontified t)) . 76728) (76727 . 76728) (76726 . 76728) (#("\"" 0 1 (fontified nil)) . -76726) (76726 . 76727) (76716 . 76726) (#("\"" 0 1 (fontified nil)) . -76716) (76710 . 76717) (#("d" 0 1 (fontified t)) . -76710) (undo-tree-id748 . -1) 76711 (76696 . 76711) (#("r" 0 1 (fontified t)) . -76696) (undo-tree-id749 . -1) 76697 (76691 . 76697) (#("b" 0 1 (fontified t)) . -76691) (undo-tree-id750 . -1) (#("n" 0 1 (fontified t)) . -76692) (undo-tree-id751 . -1) 76693 (76690 . 76693) (#("b" 0 1 (fontified t)) . -76690) (undo-tree-id752 . -1) 76691 (76685 . 76691) (76684 . 76685) (76680 . 76684) (#(" " 0 1 (fontified t)) . -76680) (undo-tree-id753 . -1) (#("t" 0 1 (fontified t)) . -76681) (undo-tree-id754 . -1) (#("o" 0 1 (fontified t)) . -76682) (undo-tree-id755 . -1) (#(" " 0 1 (fontified t)) . -76683) (undo-tree-id756 . -1) 76684 (76669 . 76684) (76648 . 76669) (t 26554 16427 600522 945000)) nil (26554 16495 290903 549000) 0 nil])
([nil nil ((#("** Ebib
Ebib is an emacs bibliography manager program. My customisations for it live here. The 2 functions at the end of the block are taken directly from the info page and are used to view entries that were created recently. However, a minor change is made as ~ebib--newer-than~ compares the \"timestamp\" entry, while my files only have the \"urldate\" entry for this purpose.

#+BEGIN_SRC elisp :tangle init.el
  (setq ebib-preload-bib-files '(\"~/Sync/My_Library.bib\"))
  (setq ebib-notes-directory \"~/org_roam/ref\")
  (setq ebib-multiline-major-mode 'org-mode)

  (add-hook 'ebib-entry-mode-hook 'visual-line-mode)

  (setq ebib-index-columns '((\"Title\" 60 t)
			     (\"Author/Editor\" 40 t)
			     (\"Year\" 6 t)
			     (\"Entry Key\" 40 t)
			     (\"Note\" 10 t)))

  (require 'org-ebib)

  (setq ebib-citation-description-function 'ebib-create-org-title)

  (defun ebib-list-recent (days)
    \"List entries created in the last DAYS days.\"
    (interactive \"nNumber of days: \")
    ;; Save the database's current filter, if there is one.
    (let ((filter (ebib-db-get-filter ebib--cur-db)))
      (when filter (setq ebib--filters-last-filter filter)))
    (let*
	;; Calculate the from-date in Emacs' time format.
	((date (time-subtract (current-time) (days-to-time days)))
	 ;; Create a Lisp expression that will function as the filter.
	 (filter `(ebib--newer-than (quote ,date))))
      ;; Install it as the current database's filter.
      (ebib-db-set-filter filter ebib--cur-db)
      ;; Update the current entry key.
      (ebib-db-set-current-entry-key (ebib--get-key-at-point) ebib--cur-db)
      ;; Update the display, so that only filtered entries are visible.
      (ebib--update-buffers)))

  (defun ebib--newer-than (date)
    \"Function for use in filters.
  Return t if the entry being tested is newer than DATE.  DATE must
  be a list of the format returned by `current-time' and is
  compared to the timestamp of the entry being tested.  If the
  entry has no timestamp, or a timestamp that cannot be converted
  into a date representation, return nil.\"
    (let ((timestamp (cdr (assoc-string \"urldate\" ebib-entry))))
      (when (and timestamp
		 (setq timestamp (ignore-errors (date-to-time timestamp))))
	(time-less-p date timestamp))))

#+END_SRC


" 0 1 (face org-hide fontified t) 1 2 (composition (2 1 [9675]) face (org-superstar-header-bullet org-level-2) fontified t) 2 3 (face org-level-2 fontified t) 3 7 (face org-level-2 fontified t) 7 8 (fontified t) 8 261 (fontified t) 261 262 (invisible t org-emphasis t font-lock-multiline t fontified t) 262 278 (org-emphasis t font-lock-multiline t face (org-code) fontified t) 278 279 (invisible t org-emphasis t font-lock-multiline t fontified t) 279 293 (fontified t) 293 303 (fontified t) 303 341 (fontified t) 341 349 (fontified t) 349 374 (fontified t) 374 375 (fontified t) 375 376 (fontified t) 376 409 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 409 410 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 410 413 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 413 417 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 417 443 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 443 466 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 466 472 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 472 476 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 476 498 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 498 514 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 514 519 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 519 523 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 523 619 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 619 623 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 623 646 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 646 653 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 653 669 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 669 684 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 684 700 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 700 706 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 706 721 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 721 732 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 732 748 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 748 754 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 754 767 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 767 774 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 774 776 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 776 784 (face (font-lock-constant-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 784 787 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 787 790 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 790 794 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 794 855 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 855 858 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 858 863 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 863 864 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 864 880 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 880 888 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 888 892 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 892 937 (face (font-lock-doc-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 937 943 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 943 954 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 954 955 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 955 974 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 974 980 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 980 983 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 983 1036 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1036 1041 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1041 1044 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1044 1097 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1097 1101 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1101 1110 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1110 1114 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1114 1156 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1156 1160 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1160 1162 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1162 1165 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1165 1212 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1212 1274 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1274 1277 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1277 1336 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1336 1366 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1366 1371 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1371 1388 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1388 1391 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1391 1436 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1436 1489 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1489 1492 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1492 1522 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1522 1604 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1604 1607 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1607 1670 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1670 1701 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1701 1702 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1702 1705 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1705 1710 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1710 1711 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1711 1727 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1727 1739 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1739 1876 (face (font-lock-doc-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1876 1888 (face (font-lock-constant-face font-lock-doc-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1888 2068 (face (font-lock-doc-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2068 2074 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2074 2077 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2077 2109 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2109 2118 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2118 2141 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2141 2145 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2145 2147 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2147 2150 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2150 2165 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2165 2169 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2169 2181 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2181 2194 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2194 2223 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2223 2256 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2256 2257 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2257 2266 (face org-block-end-line font-lock-multiline t font-lock-fontified t fontified t) 2266 2267 (face org-block-end-line fontified t) 2267 2269 (fontified t)) . 76423) (undo-tree-id757 . -2268) (undo-tree-id758 . -888) (undo-tree-id759 . -2116) (undo-tree-id760 . -12) (undo-tree-id761 . -854) (undo-tree-id762 . -854) (undo-tree-id763 . -1701) (undo-tree-id764 . -1701) (undo-tree-id765 . -787) (undo-tree-id766 . -1701) (undo-tree-id767 . -1701) (undo-tree-id768 . -787) (undo-tree-id769 . -1701) (undo-tree-id770 . -1701) (undo-tree-id771 . -787) (undo-tree-id772 . 1895) (undo-tree-id773 . -2268) (undo-tree-id774 . -467) (undo-tree-id775 . -467) (undo-tree-id776 . -2116) (undo-tree-id777 . -2116) (undo-tree-id778 . -888) (undo-tree-id779 . -373) (undo-tree-id780 . -2116) (undo-tree-id781 . -2116) (undo-tree-id782 . -888) (undo-tree-id783 . -2116) (undo-tree-id784 . -2116) (undo-tree-id785 . -888) (undo-tree-id786 . -2254) (undo-tree-id787 . -2254) (undo-tree-id788 . -888) (undo-tree-id789 . -888) (undo-tree-id790 . -2254) (undo-tree-id791 . -2254) (undo-tree-id792 . -2254) (undo-tree-id793 . -888) (undo-tree-id794 . -888) (undo-tree-id795 . -2254) (undo-tree-id796 . -2113) (undo-tree-id797 . -2254) (undo-tree-id798 . -2268) (undo-tree-id799 . -373) (undo-tree-id800 . -373) (undo-tree-id801 . -373) (undo-tree-id802 . -373) (undo-tree-id803 . -373) (undo-tree-id804 . -373) (undo-tree-id805 . -224) (undo-tree-id806 . -373) (undo-tree-id807 . -373) (undo-tree-id808 . -373) (undo-tree-id809 . -373) (undo-tree-id810 . -373) (undo-tree-id811 . -373) (undo-tree-id812 . -373) (undo-tree-id813 . -373) (undo-tree-id814 . -888) (undo-tree-id815 . -373) (undo-tree-id816 . -2268) 78691 (t 26554 16495 307720 971000)) nil (26554 17916 1198 641000) 0 nil])
([nil nil ((#(" " 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -21500) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (#(" " 0 1 (font-lock-multiline t font-lock-fontified t fontified t)) . -21501) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) 21502 (t 26554 17916 20410 131000)) nil (26564 29226 29173 914000) 0 nil])
([nil nil ((#(" " 0 1 (face org-block-end-line font-lock-multiline t font-lock-fontified t fontified t)) . -22175) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (#(" " 0 1 (face org-block-end-line font-lock-multiline t font-lock-fontified t fontified t)) . -22176) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) 22177) nil (26564 29245 192989 278000) 0 nil])
([nil nil ((#("   " 0 3 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 21536) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 21559) (21563 . 21568) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 21620) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 21657) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 21713) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 21767) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 21808) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 21858) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 21861) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 21890) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 21895) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 21939) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 21942) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 21971) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 21974) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 22012) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 22031) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 22049) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 22108) 21534 (t 26564 29226 35308 922000)) nil (26564 29268 209742 242000) 0 nil] [nil nil ((20646 . 20654) 21858 (t 26564 29226 35308 922000)) ((#("COMMENT " 0 7 (fontified nil) 7 8 (fontified nil)) . 20646)) (26564 29245 192283 244000) 0 nil])
([nil nil ((21882 . 21884) (21850 . 21852)) nil (26564 29274 219221 540000) 0 nil] [nil nil ((21850 . 21853) (21880 . 21883) (21927 . 21930) (21929 . 21933) 21534) ((#("
   " 0 1 (src-block t face (font-lock-comment-face org-block) font-lock-multiline t font-lock-fontified t fontified nil) 1 4 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 21929) (#(";; " 0 3 (src-block t face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 21927) (#(";; " 0 3 (src-block t face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 21880) (#(";; " 0 3 (src-block t face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 21850)) (26564 29268 209074 133000) 0 nil] [nil nil ((21850 . 21853) (21880 . 21883) (21927 . 21930) (21930 . 21934) 21534) ((#("
   " 0 1 (src-block t face (font-lock-comment-face org-block) font-lock-multiline t font-lock-fontified t fontified nil) 1 4 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 21930) (#(";; " 0 3 (src-block t face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 21927) (#(";; " 0 3 (src-block t face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 21880) (#(";; " 0 3 (src-block t face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 21850)) (26564 29258 321687 258000) 0 nil])
nil
([nil nil ((#("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -4514) (undo-tree-id0 . 1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (#(" " 0 1 (face org-block-end-line font-lock-multiline t font-lock-fontified t fontified t)) . -4515) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (#(" " 0 1 (face org-block-end-line font-lock-multiline t font-lock-fontified t fontified t)) . -4516) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (#(" " 0 1 (face org-block-end-line font-lock-multiline t font-lock-fontified t fontified t)) . -4517) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (#(" " 0 1 (face org-block-end-line font-lock-multiline t font-lock-fontified t fontified t)) . -4518) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) 4519 (4514 . 4519) (#("
" 0 1 (fontified t)) . -4524) (undo-tree-id126 . 1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) 4525 (4524 . 4525) (t 26564 29274 225313 102000)) nil (26564 29570 213401 483000) 0 nil])
nil
nil
([nil nil ((6926 . 6928) (#("~" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -6926) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) 6927 (6926 . 6927) (#("@" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -6926) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) 6927 (6926 . 6927) (#("/" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -6926) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (#("h" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -6927) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (#("o" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -6928) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (#("m" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -6929) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (#("e" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -6930) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (#("/" 0 1 (face (font-lock-string-face org-block) rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) org-emphasis t font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -6931) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (#("v" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -6932) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (#("i" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -6933) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (#("d" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -6934) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (#("i" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -6935) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (#("a" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -6936) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (#("n" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -6937) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (#("o" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -6938) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (#("s" 0 1 (src-block t face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t)) . -6939) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) 6940 (t 26564 29570 218642 487000)) nil (26564 29614 915629 984000) 0 nil])
([nil nil ((6926 . 6928) (#("/" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -6926) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (#("~" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -6927) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) 6928 (t 26564 29614 922460 378000)) nil (26564 29624 419813 866000) 0 nil])
([nil nil ((#("/" 0 1 (src-block t face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t)) . -6927) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 6928 (t 26564 29624 426419 508000)) nil (26564 30057 401701 167000) 0 nil])
([nil nil ((73338 . 73346) (t 26564 30057 407963 522000)) nil (26566 56111 748652 84000) 0 nil])
([nil nil ((73981 . 73989)) nil (26566 56111 748642 25000) 0 nil])
([nil nil ((69820 . 69821) (#("0" 0 1 (src-block t face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 69820) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (t 26566 56111 756436 947000)) nil (26592 26265 172740 180000) 0 nil])
([nil nil ((#("-" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69761) (undo-tree-id2 . -1) (#("d" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69762) (undo-tree-id3 . -1) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69763) (undo-tree-id4 . -1) (#("f" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69764) (undo-tree-id5 . -1) (#("a" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69765) (undo-tree-id6 . -1) (#("u" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69766) (undo-tree-id7 . -1) (#("l" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69767) (undo-tree-id8 . -1) (#("t" 0 1 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69768) (undo-tree-id9 . -1) 69769 (t 26592 26265 179703 121000)) nil (26592 26312 972579 699000) 0 nil])
([nil nil ((69814 . 69815) (#("0" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 69814) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (t 26592 26312 980310 343000)) nil (26592 28406 87165 643000) 0 nil])
([nil current ((69787 . 69791) (#("y" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69787) (undo-tree-id13 . -1) 69788 (69786 . 69788) (#("~" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69786) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (#("/" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69787) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#("." 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69788) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#("j" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69789) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#("u" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69790) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (#("l" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69791) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (#("i" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69792) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (#("a" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69793) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (#("/" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69794) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (#("j" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69795) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (#("u" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69796) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (#("l" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69797) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (#("i" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69798) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) 69799 (#("a" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69799) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (#("u" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69800) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (#("p" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69801) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (#("/" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69802) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (#("j" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69803) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (#("u" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69804) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (#("l" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69805) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (#("i" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69806) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (#("a" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69807) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (#("-" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69808) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (#("1" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69809) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (#("." 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69810) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (#("1" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69811) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (#("1" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69812) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (#("." 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69813) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (#("1" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69814) (undo-tree-id322 . -1) (#("+" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69815) (undo-tree-id323 . 1) (undo-tree-id324 . -1) (#("0" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69816) (undo-tree-id325 . -1) (#("." 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69817) (undo-tree-id326 . -1) (#("x" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69818) (undo-tree-id327 . -1) (#("6" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69819) (undo-tree-id328 . -1) 69820 (#("4" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69820) (undo-tree-id329 . -1) (#("." 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69821) (undo-tree-id330 . -1) (#("l" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69822) (undo-tree-id331 . -1) (#("i" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69823) (undo-tree-id332 . -1) (#("n" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69824) (undo-tree-id333 . -1) (#("u" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69825) (undo-tree-id334 . -1) (#("x" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69826) (undo-tree-id335 . -1) (#("." 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69827) (undo-tree-id336 . -1) (#("g" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69828) (undo-tree-id337 . -1) (#("n" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69829) (undo-tree-id338 . -1) (#("u" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69830) (undo-tree-id339 . -1) (#("/" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69831) (undo-tree-id340 . -1) (#("b" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69832) (undo-tree-id341 . -1) (#("i" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69833) (undo-tree-id342 . -1) (#("n" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69834) (undo-tree-id343 . -1) (#("/" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69835) (undo-tree-id344 . -1) (#("j" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69836) (undo-tree-id345 . -1) (#("u" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69837) (undo-tree-id346 . -1) (#("l" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69838) (undo-tree-id347 . -1) (#("i" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69839) (undo-tree-id348 . -1) (#("a" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -69840) (undo-tree-id349 . -1) 69841 (t 26592 28406 94630 505000)) nil (26592 28447 293905 153000) 0 nil])
nil
