(undo-tree-save-format-version . 1)
"9aa7b197c3711bb458c35b39d173a0722f73bc83"
[nil nil nil nil (25802 13472 903061 710000) 0 nil]
([nil nil ((#("    " 0 4 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 23880) (#("    " 0 4 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 24018) (#("    " 0 4 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 24073) (#("    " 0 4 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 24804) (#("    " 0 4 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 24969) (#("    " 0 4 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 25021) 23880 (t 25801 9423 172370 502000)) nil (25807 33619 539133 567000) 0 nil] [nil nil ((#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -6864) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) \...) ((#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 6864) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) \...) (25802 13472 902098 651000) 0 nil])
([nil nil ((58705 . 58706) (#("( " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil) 1 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 58705) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) \...) ((#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 58706) (58705 . 58707) (#("(" 0 1 (fontified nil)) . 58705) (t 25802 23920 751555 220000)) (25807 33620 833180 260000) 0 nil])
nil
([nil nil ((70407 . 70411) (70404 . 70407) (70405 . 70408) (#("   " 0 3 (fontified nil)) . 70404) (undo-tree-id8735 . -3) (undo-tree-id8736 . -3) (undo-tree-id8737 . -3) (undo-tree-id8738 . -3) (undo-tree-id8739 . -3) (undo-tree-id8740 . -3) \...) nil (25807 33724 193504 479000) 0 nil])
([nil nil ((#("   
" 0 3 (fontified t) 3 4 (fontified t)) . 70404) (undo-tree-id8703 . -3) (undo-tree-id8704 . -3) (undo-tree-id8705 . -3) (undo-tree-id8706 . -3) (undo-tree-id8707 . -3) (undo-tree-id8708 . -3) (undo-tree-id8709 . -3) (undo-tree-id8710 . -3) (undo-tree-id8711 . -3) \...) nil (25807 33724 193486 878000) 0 nil])
([nil nil ((70529 . 70549) (#("l" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -70529) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) \...) nil (25807 33724 193072 852000) 0 nil])
([nil nil ((70549 . 70552) 70548) nil (25857 40180 582316 780000) 0 nil])
([nil nil ((apply yas--snippet-revive 70516 70686 #s(yas--snippet nil (#s(yas--field 1 70528 70675 nil nil nil t #s(yas--field 2 70676 70676 nil nil nil nil nil)) #s(yas--field 2 70676 70676 nil nil nil nil nil)) nil 6 nil #s(yas--field 1 70528 70675 nil nil nil t #s(yas--field 2 70676 70676 nil nil nil nil nil)) nil nil)) (70550 . 70597) (70552 . 70628)) ((#("  (texfrag-mode)
			       (texfrag-document)
			       (visual-line-mode)))" 0 76 (fontified nil)) . 70552) (undo-tree-id0 . -76) (#("
  (add-hook 'eww-mode-hook #'(lambda ()
			   " 0 47 (fontified nil)) . 70550) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 70528 70675 nil nil nil t #s(yas--field 2 70676 70676 nil nil nil nil nil)) #s(yas--field 2 70676 70676 nil nil nil nil nil)) nil 6 nil #s(yas--field 1 70528 70675 nil nil nil t #s(yas--field 2 70676 70676 nil nil nil nil nil)) nil nil))) (25857 40188 418697 133000) 0 nil])
([nil nil ((47780 . 47781) (#(")" 0 1 (face (font-lock-constant-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -47780) (47765 . 47781) (47764 . 47765) (47763 . 47764) (47755 . 47763) (47752 . 47755) (t 25857 40212 54269 578000) 47744) nil (25858 64164 584048 580000) 0 nil] [nil nil ((#("  
" 0 3 (fontified t)) . 133)) ((133 . 136)) (25857 40185 561282 190000) 0 nil])
([nil nil ((#("  (require 'org-roam-thesis)
" 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2 3 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 3 10 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 10 12 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 12 27 (face (font-lock-constant-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 27 28 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 28 29 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 47753) (undo-tree-id0 . 1) (undo-tree-id1 . -27) (undo-tree-id2 . -27) (undo-tree-id3 . -28) (undo-tree-id4 . -27) (undo-tree-id5 . -27) (undo-tree-id6 . -27) (undo-tree-id7 . -27) (undo-tree-id8 . -27) \...) nil (25858 64187 153112 748000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -132) (undo-tree-id20 . -1) (undo-tree-id22 . -1) (undo-tree-id24 . -1) (undo-tree-id26 . -1) (undo-tree-id28 . -1) (undo-tree-id30 . -1) 133 (132 . 133) (t 25814 13961 711458 629000) \...) ((#("
" 0 1 (fontified nil)) . 132) (132 . 133) (t 25814 14016 922160 913000)) (25814 14016 905021 410000) 0 nil])
([nil nil ((nil rear-nonsticky nil 47988 . 47989) (#("
" 0 1 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -48015) (47986 . 48016) 47985) nil (25858 64187 153059 389000) 0 nil])
nil
([nil nil ((47775 . 47781) (47754 . 47775) (47748 . 47754) (47727 . 47748) (#(" " 0 1 (fontified t)) . -47727) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) \...) nil (25858 64208 713654 939000) 0 nil])
([nil nil ((6660 . 6663) (t 25858 64208 729203 589000)) nil (25964 51760 446888 32000) 0 nil])
([nil nil ((#(";; " 0 3 (src-block t face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 6660) 6657 (t 25964 51619 610852 810000)) nil (25964 51760 446880 397000) 0 nil])
([nil nil ((6660 . 6663) 6657 (t 25964 51760 466268 918000)) nil (25964 52125 997199 484000) 0 nil])
([nil nil ((12512 . 12634) 11179 (t 25964 52126 15717 100000)) nil (25964 59284 140601 592000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -11137) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) \...) nil (25964 59318 33238 554000) 0 nil])
([nil nil ((11072 . 11140) (#("+ 
+ Add the code for emacs-gc-stats to help the devs optimize Emacs" 0 2 (fontified nil) 2 3 (fontified nil) 3 4 (face org-superstar-item composition (6 1 [10148]) fontified nil) 4 31 (fontified nil) 31 68 (fontified nil)) . 11072) (undo-tree-id64 . -68) (undo-tree-id65 . -68) (undo-tree-id66 . -68) (undo-tree-id67 . -68) (undo-tree-id68 . -68) (undo-tree-id69 . -68) (undo-tree-id70 . -68) (undo-tree-id71 . -68) \...) nil (25964 59318 32755 721000) 0 nil])
([nil nil ((11189 . 11193) (#("o" 0 1 (fontified t)) . -11189) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) \...) nil (25964 59318 32192 5000) 0 nil])
([nil nil ((12684 . 12851) 11229 (t 25964 59318 53285 819000)) nil (25964 59429 431088 427000) 0 nil])
([nil nil ((57549 . 57602) 57090 (t 25964 59429 446768 162000)) nil (25964 59438 754935 146000) 0 nil])
([nil nil ((33019 . 33116) 32505 (t 25964 59438 772889 277000)) nil (25968 62064 694132 55000) 0 nil])
([nil nil ((31407 . 31416) (#("b" 0 1 (fontified t)) . -31407) (undo-tree-id0 . -1) (#("u" 0 1 (fontified t)) . -31408) (undo-tree-id1 . -1) 31409 (31398 . 31409) (31393 . 31398) (#("a" 0 1 (fontified t)) . -31393) (undo-tree-id2 . -1) \...) nil (25968 64049 456095 265000) 0 nil])
([nil nil ((25262 . 25267) (#("M" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -25262) (undo-tree-id0 . -1) (#("-" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -25263) (undo-tree-id1 . -1) (#("p" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -25264) (undo-tree-id2 . -1) 25265 (t 25968 64052 785884 64000)) nil (25972 23887 877351 998000) 0 nil] [nil nil ((33526 . 33527) (t 25968 63680 568394 770000)) ((#(";" 0 1 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 33526) (t 25968 64021 958871 592000)) (25968 64021 942621 768000) 0 nil] [nil nil ((33528 . 33536) (t 25968 62103 751334 679000)) ((#("newfloat" 0 8 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 33528) (undo-tree-id15 . -7) (t 25968 63636 521239 191000)) (25968 63636 501652 716000) 0 nil])
([nil nil ((25262 . 25265) (#("S" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -25262) (undo-tree-id3 . -1) (#("P" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -25263) (undo-tree-id4 . -1) (#("C" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -25264) (undo-tree-id5 . -1) (#(" " 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -25265) (undo-tree-id6 . -1) (#("p" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -25266) \...) nil (25972 24043 648654 939000) 0 nil])
nil
nil
([nil nil ((#(" " 0 1 (face font-lock-comment-face font-lock-fontified t fontified t)) . -2) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) \...) nil (25972 24180 966156 231000) 0 nil])
([nil nil ((32870 . 33025) (32908 . 32936) 32550 (t 25972 24180 982678 511000)) nil (25972 24817 503865 86000) 0 nil])
([nil nil ((33174 . 33175) (#("f" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 33174) (33176 . 33181) (#("agtog" 0 5 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 33176) 32550 (t 25972 24817 524429 986000)) nil (25972 25904 832623 305000) 0 nil])
([nil nil ((33186 . 33188) (t 25972 25904 843236 383000)) nil (25972 26006 346877 416000) 0 nil])
([nil nil ((#("; Testing org-preview, faster,
     ; async latex previews for org
     ; which will probably be
     ; included in the next major
     ; version

     ;; " 0 2 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2 31 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 31 36 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 36 38 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 38 67 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 67 72 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 72 74 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 74 97 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 97 102 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 102 104 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 104 131 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 131 136 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 136 138 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 138 146 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 146 152 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 152 155 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 32870) (#("     (require 'org-preview)" 0 6 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 6 13 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 13 15 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 15 26 (face (font-lock-constant-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 26 27 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 33065) (#("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 33093) (33174 . 33175) (#("p" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 33174) (33176 . 33181) (#("eview" 0 5 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 33176) (#(" 1" 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 33186) 32550) nil (25972 26006 346867 358000) 0 nil])
([nil nil ((33011 . 33045) 32550 (t 25972 26006 366768 873000)) nil (25972 26457 437618 639000) 0 nil])
([nil nil ((32871 . 32898) 32550 (t 25972 26457 453050 367000)) nil (25972 26989 130645 245000) 0 nil])
([nil nil ((32897 . 32900) (33029 . 33046) (33030 . 33050) 32550 (t 25972 26989 148766 720000)) nil (25972 27383 550857 110000) 0 nil])
([nil nil ((33059 . 33066) (#("-" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -33059) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) \...) nil (25972 27548 615858 403000) 0 nil])
([nil nil ((33066 . 33067) (#(")" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -33066) (33066 . 33067)) nil (25972 27548 615648 666000) 0 nil])
([nil nil ((#("				 (org-auctex-preview-buffer)
" 0 14 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 14 15 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 15 31 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 31 32 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 32 33 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 33035) (undo-tree-id108 . -24) (undo-tree-id109 . -15) (undo-tree-id110 . -15) (undo-tree-id111 . -24) (undo-tree-id112 . -32) (undo-tree-id113 . -31) (undo-tree-id114 . -24) (undo-tree-id115 . -24) (undo-tree-id116 . -24) \...) nil (25972 27647 708830 194000) 0 nil])
([nil nil ((#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 32897) 32550 (t 25972 27647 729062 140000)) nil (25972 27751 226061 33000) 0 nil])
([nil nil ((#("				 (org-toggle-pretty-entities)
" 0 16 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 16 34 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 33032) (undo-tree-id0 . -16) (undo-tree-id1 . -16) (undo-tree-id2 . -16) (undo-tree-id3 . -16) (undo-tree-id4 . -16) (undo-tree-id5 . -16) (undo-tree-id6 . -16) (undo-tree-id7 . -16) (undo-tree-id8 . -16) \...) nil (25974 13262 977319 875000) 0 nil])
([nil nil ((62005 . 62006) (t 25974 13262 996791 608000)) nil (26020 28844 312860 363000) 0 nil])
([nil nil ((#(";" 0 1 (src-block t face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified t)) . -62005) (undo-tree-id0 . -1) 62006 (t 26020 28844 328450 310000)) nil (26021 19401 259882 361000) 0 nil])
([nil nil ((25030 . 25122) 24222 (t 26021 19401 275589 90000)) nil (26118 62251 200714 97000) 0 nil])
([nil nil ((45168 . 45187) 44916 (t 26063 24558 852957 740000)) nil (26118 62278 14716 988000) 0 nil] [nil nil ((45168 . 45184) 44916 (t 26063 24558 852957 740000)) ((#("     (sh . t)
  " 0 16 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 45168) (undo-tree-id1 . -11)) (26118 62251 200009 177000) 0 nil] [nil nil ((45168 . 45186) 44916 (t 26063 24558 852957 740000)) ((#("     (bash . t)
  " 0 18 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 45168) (undo-tree-id0 . -13)) (26118 62151 756563 700000) 0 nil])
([nil nil ((29863 . 30090) 28706 (t 26118 62278 30744 19000)) nil (26133 44817 237580 192000) 0 nil])
nil
nil
([nil nil ((28600 . 28674) (#("   + 
   + Set the lowest priority to '69 (E), so I have 5 priority levels" 0 3 (fontified nil) 3 5 (fontified nil) 5 6 (fontified nil) 6 9 (fontified nil) 9 10 (face org-superstar-item composition (4 1 [10148]) fontified nil) 10 74 (fontified nil)) . 28600) (undo-tree-id118 . -53) (undo-tree-id119 . -53) (undo-tree-id120 . -53) (undo-tree-id121 . -53) (undo-tree-id122 . -53) (undo-tree-id123 . -53) (undo-tree-id124 . -53) (undo-tree-id125 . -53) \...) nil (26133 44869 702692 885000) 0 nil])
([nil nil ((28853 . 28858) (#("s" 0 1 (fontified t)) . -28853) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) \...) nil (26133 44869 702655 100000) 0 nil])
([nil nil ((30117 . 30439) 28896 (t 26133 44869 716845 197000)) nil (26133 44991 926644 266000) 0 nil])
([nil nil ((61879 . 61892) (#("r" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight src-block t font-lock-fontified t htmlize-link (:uri "file:///home/vidianos/Cloned_rreveal.js") help-echo "LINK: file:///home/vidianos/Cloned_rreveal.js" fontified t)) . -61879) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) 61880 (61879 . 61880) (61878 . 61879) (61877 . 61878) (#("s" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight src-block t font-lock-fontified t htmlize-link (:uri "file:///home/vidianos/Clonesreveal.js") help-echo "LINK: file:///home/vidianos/Clonesreveal.js" fontified t)) . -61877) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) 61878 (61873 . 61878) (61872 . 61873) (t 26133 44991 938769 388000)) nil (26139 52011 425374 440000) 0 nil])
([nil nil ((61825 . 61852) 61821 (t 26139 52011 438503 128000)) nil (26139 52398 516602 207000) 0 nil])
([nil nil ((62000 . 62462) 61821 (t 26139 52398 530600 236000)) nil (26142 23461 38615 843000) 0 nil])
([nil nil ((34504 . 35215) 33381 (t 26142 23461 52311 212000)) nil (26150 1673 948573 569000) 0 nil])
([nil nil ((#("headline-numbering-filter (data backend info)
       \"No numbering in headlines that have a property :numbers: no\"
       (let* ((beg (next-property-change 0 data))
	      (headline (if beg (get-text-property beg :parent data))))
	 (if (string= (org-element-property :NUMBERS headline) \"no\")
	     (cond ((eq backend 'latex)
		    (replace-regexp-in-string
		     \"\\\\(part\\\\|chapter\\\\|\\\\(?:sub\\\\)*section\\\\|\\\\(?:sub\\\\)?paragraph\\\\)\"
		     \"\\\\1*\" data nil nil 1))
		   ((eq backend 'html)
		    (replace-regexp-in-string
		     \"\\\\(<h[1-6]\\\\)\\\\([^>]*>\\\\)\"
		     \"\\\\1 class=\\\"nonumber\\\"\\\\2\" data nil nil)))
	   data)))

     (setq org-export-filter-headline-functions '(headline-numbering-filter))

     (defun " 0 25 (src-block t face (font-lock-function-name-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 25 53 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 53 114 (src-block t face (font-lock-doc-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 114 123 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 123 127 (src-block t face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 127 183 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 183 185 (src-block t face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 185 213 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 213 220 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 220 233 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 233 235 (src-block t face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 235 267 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 267 275 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 275 286 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 286 290 (src-block t face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 290 299 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 299 303 (src-block t face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 303 364 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 364 365 (src-block t face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 365 367 (src-block t face (font-lock-regexp-grouping-backslash font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 367 368 (src-block t face (font-lock-regexp-grouping-construct font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 368 372 (src-block t face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 372 374 (src-block t face (font-lock-regexp-grouping-backslash font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 374 375 (src-block t face (font-lock-regexp-grouping-construct font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 375 377 (src-block t face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 377 382 (src-block t face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 382 384 (src-block t face (font-lock-regexp-grouping-backslash font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 384 385 (src-block t face (font-lock-regexp-grouping-construct font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 385 387 (src-block t face (font-lock-regexp-grouping-backslash font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 387 390 (src-block t face (font-lock-regexp-grouping-construct font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 390 393 (src-block t face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 393 395 (src-block t face (font-lock-regexp-grouping-backslash font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 395 396 (src-block t face (font-lock-regexp-grouping-construct font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 396 404 (src-block t face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 404 406 (src-block t face (font-lock-regexp-grouping-backslash font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 406 407 (src-block t face (font-lock-regexp-grouping-construct font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 407 409 (src-block t face (font-lock-regexp-grouping-backslash font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 409 412 (src-block t face (font-lock-regexp-grouping-construct font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 412 415 (src-block t face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 415 417 (src-block t face (font-lock-regexp-grouping-backslash font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 417 418 (src-block t face (font-lock-regexp-grouping-construct font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 418 428 (src-block t face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 428 430 (src-block t face (font-lock-regexp-grouping-backslash font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 430 431 (src-block t face (font-lock-regexp-grouping-construct font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 431 432 (src-block t face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 432 440 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 440 446 (src-block t face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 446 528 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 528 529 (src-block t face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 529 531 (src-block t face (font-lock-regexp-grouping-backslash font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 531 532 (src-block t face (font-lock-regexp-grouping-construct font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 532 539 (src-block t face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 539 541 (src-block t face (font-lock-regexp-grouping-backslash font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 541 542 (src-block t face (font-lock-regexp-grouping-construct font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 542 544 (src-block t face (font-lock-regexp-grouping-backslash font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 544 545 (src-block t face (font-lock-regexp-grouping-construct font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 545 546 (src-block t face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 546 547 (src-block t face (font-lock-negation-char-face font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 547 551 (src-block t face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 551 553 (src-block t face (font-lock-regexp-grouping-backslash font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 553 554 (src-block t face (font-lock-regexp-grouping-construct font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 554 555 (src-block t face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 555 563 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 563 590 (src-block t face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 590 626 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 626 630 (src-block t face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 630 705 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 705 710 (src-block t face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 710 711 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 34504) (undo-tree-id0 . -696) (undo-tree-id1 . -696) (undo-tree-id2 . -617) (undo-tree-id3 . -617) (undo-tree-id4 . -617) (undo-tree-id5 . -617) (undo-tree-id6 . -617) (undo-tree-id7 . -617) (undo-tree-id8 . -617) (undo-tree-id9 . -617) (undo-tree-id10 . -617) (undo-tree-id11 . -617) (undo-tree-id12 . -617) (undo-tree-id13 . -617) (undo-tree-id14 . -617) (undo-tree-id15 . -617) (undo-tree-id16 . -617) (undo-tree-id17 . -617) (undo-tree-id18 . -617) (undo-tree-id19 . -617) (undo-tree-id20 . -617) (undo-tree-id21 . -617) (undo-tree-id22 . -617) (undo-tree-id23 . -617) (undo-tree-id24 . -617) (undo-tree-id25 . -617) (undo-tree-id26 . -617) (undo-tree-id27 . -617) (undo-tree-id28 . -617) (undo-tree-id29 . -617) (undo-tree-id30 . -617) (undo-tree-id31 . -617) (undo-tree-id32 . -617) (undo-tree-id33 . -617) (undo-tree-id34 . -617) 33381 (t 26150 1673 960236 715000)) nil (26150 1743 539817 922000) 0 nil])
([nil current ((34398 . 34399) (t 26150 1743 547349 136000)) nil (26150 8287 390571 550000) 0 nil])
nil
