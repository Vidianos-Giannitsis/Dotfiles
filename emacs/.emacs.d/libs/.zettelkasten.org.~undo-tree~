(undo-tree-save-format-version . 1)
"9159d3bc968d572223a95690d73671b9412ae046"
[nil nil nil nil (25138 2206 260578 794000) 0 nil]
([nil nil ((26797 . 26800) (26797 . 26888) (#("   | d | default | entry | * %? | :if-new | (file+head %<%Y-%m-%d>.org #+title: %<%Y-%m-%d> |
" 0 94 (fontified nil)) . 26797) (t 25134 24477 120179 566000)) nil (25138 2222 805683 855000) 0 nil])
([nil nil ((16549 . 16559) (16548 . 16550) (16546 . 16548) (16545 . 16547) (#("d" 0 1 (fontified t)) . -16545) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (#("i" 0 1 (fontified t)) . -16546) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (#("s" 0 1 (fontified t)) . -16547) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (#("c" 0 1 (fontified t)) . -16548) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (#("u" 0 1 (fontified t)) . -16549) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (#("s" 0 1 (fontified t)) . -16550) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (#("s" 0 1 (fontified t)) . -16551) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (#("i" 0 1 (fontified t)) . -16552) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (#("o" 0 1 (fontified t)) . -16553) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (#("n" 0 1 (fontified t)) . -16554) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) 16555 (16586 . 16590) (16565 . 16586) (#("e" 0 1 (fontified t)) . -16565) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) 16566 (16563 . 16566) (16561 . 16563) (#("o" 0 1 (fontified t)) . -16561) (undo-tree-id1086 . -1) 16562 (16558 . 16562) (16557 . 16558) (16536 . 16557) (#("l" 0 1 (fontified t)) . -16536) (undo-tree-id1087 . -1) (#("y" 0 1 (fontified t)) . -16537) (undo-tree-id1088 . -1) 16538 (16536 . 16538) (#("y" 0 1 (fontified t)) . -16536) (undo-tree-id1089 . -1) (#("l" 0 1 (fontified t)) . -16537) (undo-tree-id1090 . -1) 16538 (16529 . 16538) (16528 . 16529) (16525 . 16528) (16512 . 16525) (#("g" 0 1 (fontified t face org-level-1)) . -16512) (undo-tree-id1091 . -1) 16513 (16496 . 16513) (#("w" 0 1 (fontified t face org-level-1)) . -16496) (undo-tree-id1092 . -1) (#("q" 0 1 (fontified t face org-level-1)) . -16497) (undo-tree-id1093 . -1) 16498 (16490 . 16498) (16489 . 16490) (t 25138 2222 819006 265000) 16489) nil (25141 3935 668696 995000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16629 . 16630) (nil fontified nil 16547 . 16630) (16547 . 16630) 16546) nil (25141 3935 668075 710000) 0 nil])
([nil nil ((17112 . 17121) (17092 . 17112) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 17092 17121 nil nil nil t #s(yas--field 2 17122 17122 nil nil nil nil nil)) #s(yas--field 2 17122 17122 nil nil nil nil nil)) nil 70 nil #s(yas--field 2 17122 17122 nil nil nil nil nil) nil nil)) (17094 . 17096) (17080 . 17103) (#("\\s" 0 2 (fontified t)) . 17080) (undo-tree-id97 . -2) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -2) (undo-tree-id106 . -1) (undo-tree-id107 . -2) (undo-tree-id108 . -2) (undo-tree-id109 . -2) (undo-tree-id110 . -2) (undo-tree-id111 . -2) (undo-tree-id112 . -2) (undo-tree-id113 . -2) (undo-tree-id114 . -2) 17082 (17080 . 17082) (17078 . 17080) (#("  " 0 2 (fontified nil)) . 17077) (undo-tree-id115 . -2) (undo-tree-id116 . -2) (undo-tree-id117 . -2) (undo-tree-id118 . -2) (undo-tree-id119 . -2) (undo-tree-id120 . -2) (undo-tree-id121 . -2) (undo-tree-id122 . -2) (undo-tree-id123 . -2) (17076 . 17080) (17073 . 17076) (#("o" 0 1 (fontified t)) . -17073) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (#("n" 0 1 (fontified t)) . -17074) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) 17075 (17059 . 17075) (17052 . 17059) (#("I" 0 1 (fontified t)) . -17052) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (#(" " 0 1 (fontified t)) . -17053) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) 17054 (17035 . 17054) (17014 . 17035) (17009 . 17014) (#(";" 0 1 (fontified t)) . -17009) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (#("t" 0 1 (fontified t)) . -17010) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (#(" " 0 1 (fontified t)) . -17011) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) 17012 (17009 . 17012) (17008 . 17009) (17001 . 17008) (#(" " 0 1 (fontified t)) . -17001) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (#("." 0 1 (fontified t)) . -17002) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) 17003 (17000 . 17003) (#("r" 0 1 (fontified t)) . -17000) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) 17001 (16993 . 17001) (#(";" 0 1 (fontified t)) . -16993) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (#("t" 0 1 (fontified t)) . -16994) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) 16995 (16983 . 16995) (16982 . 16983) (#(" " 0 1 (fontified t)) . -16982) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) 16983 (16981 . 16983) (#("r" 0 1 (fontified t)) . -16981) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (#("e" 0 1 (fontified t)) . -16982) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (#(" " 0 1 (fontified t)) . -16983) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) 16984 (16977 . 16984) (16956 . 16977) (#(" " 0 1 (fontified t)) . -16956) (undo-tree-id614 . -1) (#(" " 0 1 (fontified t)) . -16957) (undo-tree-id615 . -1) 16958 (16957 . 16958) (#("s" 0 1 (fontified t)) . -16957) (undo-tree-id616 . -1) 16958 (16957 . 16958) (#("s" 0 1 (fontified t)) . -16957) (undo-tree-id617 . -1) 16958 (16938 . 16958) (#("d" 0 1 (fontified t)) . -16938) (undo-tree-id618 . -1) (#(" " 0 1 (fontified t)) . -16939) (undo-tree-id619 . -1) 16940 (16936 . 16940) (#("p" 0 1 (fontified t)) . -16936) (undo-tree-id620 . -1) (#("u" 0 1 (fontified t)) . -16937) (undo-tree-id621 . -1) 16938 (16933 . 16938) (16932 . 16933) (#(";" 0 1 (fontified t)) . -16932) (undo-tree-id622 . -1) (#("t" 0 1 (fontified t)) . -16933) (undo-tree-id623 . -1) 16934 (16932 . 16934) (16911 . 16932) (#("s" 0 1 (fontified t)) . -16911) (undo-tree-id624 . -1) 16912 (16904 . 16912) (16884 . 16904) (16883 . 16884) (#("e" 0 1 (fontified t)) . -16883) (undo-tree-id625 . -1) 16884 (16873 . 16884) (#("d" 0 1 (fontified t)) . -16873) (undo-tree-id626 . -1) (#(" " 0 1 (fontified t)) . -16874) (undo-tree-id627 . -1) 16875 (16874 . 16875) (16853 . 16874) (#("d" 0 1 (fontified t)) . -16853) (undo-tree-id628 . -1) 16854 (16846 . 16854) (16833 . 16846) (#("r" 0 1 (fontified t)) . -16833) (undo-tree-id629 . -1) 16834 (16828 . 16834) (16807 . 16828) (16786 . 16807) (#("g" 0 1 (fontified t)) . -16786) (undo-tree-id630 . -1) 16787 (16785 . 16787) (#("i" 0 1 (fontified t)) . -16785) (undo-tree-id631 . -1) (#("t" 0 1 (fontified t)) . -16786) (undo-tree-id632 . -1) (#("s" 0 1 (fontified t)) . -16787) (undo-tree-id633 . -1) (#(" " 0 1 (fontified t)) . -16788) (undo-tree-id634 . -1) (#("t" 0 1 (fontified t)) . -16789) (undo-tree-id635 . -1) (#("a" 0 1 (fontified t)) . -16790) (undo-tree-id636 . -1) (#("g" 0 1 (fontified t)) . -16791) (undo-tree-id637 . -1) (#("s" 0 1 (fontified t)) . -16792) (undo-tree-id638 . -1) (#(" " 0 1 (fontified t)) . -16793) (undo-tree-id639 . -1) 16794 (16793 . 16794) (16773 . 16793) (16752 . 16773) (16747 . 16752) (#("i" 0 1 (fontified t)) . -16747) (undo-tree-id640 . -1) (#("c" 0 1 (fontified t)) . -16748) (undo-tree-id641 . -1) (#("a" 0 1 (fontified t)) . -16749) (undo-tree-id642 . -1) 16750 (16743 . 16750) (#("E" 0 1 (fontified t)) . -16743) (undo-tree-id643 . -1) (#("s" 0 1 (fontified t)) . -16744) (undo-tree-id644 . -1) 16745 (16739 . 16745) (#("a" 0 1 (fontified t)) . -16739) (undo-tree-id645 . -1) (#("," 0 1 (fontified t)) . -16740) (undo-tree-id646 . -1) (#("." 0 1 (fontified t)) . -16741) (undo-tree-id647 . -1) (#(" " 0 1 (fontified t)) . -16742) (undo-tree-id648 . -1) 16743 (16724 . 16743) (16703 . 16724) (#("f" 0 1 (fontified t)) . -16703) (undo-tree-id649 . -1) 16704 (16691 . 16704) (#("y" 0 1 (fontified t)) . -16691) (undo-tree-id650 . -1) 16692 (16687 . 16692) (#("t" 0 1 (fontified t)) . -16687) (undo-tree-id651 . -1) (#("h" 0 1 (fontified t)) . -16688) (undo-tree-id652 . -1) (#("e" 0 1 (fontified t)) . -16689) (undo-tree-id653 . -1) (#(" " 0 1 (fontified t)) . -16690) (undo-tree-id654 . -1) 16691 (16685 . 16691) (#("y" 0 1 (fontified t)) . -16685) (undo-tree-id655 . -1) 16686 (16683 . 16686) (#("u" 0 1 (fontified t)) . -16683) (undo-tree-id656 . -1) (#("t" 0 1 (fontified t)) . -16684) (undo-tree-id657 . -1) (#(" " 0 1 (fontified t)) . -16685) (undo-tree-id658 . -1) 16686 (16677 . 16686) (#("d" 0 1 (fontified t)) . -16677) (undo-tree-id659 . -1) 16678 (16673 . 16678) (#("e" 0 1 (fontified t)) . -16673) (undo-tree-id660 . -1) (#("m" 0 1 (fontified t)) . -16674) (undo-tree-id661 . -1) (#("a" 0 1 (fontified t)) . -16675) (undo-tree-id662 . -1) (#("c" 0 1 (fontified t)) . -16676) (undo-tree-id663 . -1) (#("s" 0 1 (fontified t)) . -16677) (undo-tree-id664 . -1) (#(" " 0 1 (fontified t)) . -16678) (undo-tree-id665 . -1) 16679) nil (25141 3935 667995 107000) 0 nil])
([nil nil ((17122 . 19443) (apply yas--snippet-revive 17080 17133 #s(yas--snippet nil (#s(yas--field 1 17092 17121 nil nil nil t #s(yas--field 2 17122 17122 nil nil nil nil nil)) #s(yas--field 2 17122 17122 nil nil nil nil nil)) nil 70 nil #s(yas--field 2 17122 17122 nil nil nil nil nil) nil nil)) (#("
" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 17122) (undo-tree-id93 . 1) (undo-tree-id94 . 1) (undo-tree-id95 . -1) (undo-tree-id96 . 1)) nil (25141 3935 661919 436000) 0 nil])
([nil nil ((17122 . 19442) (#("    (defun org-roam-node-sort-by-atime (NODE1 NODE2)
      \"Sorting function that sorts NODE1 and NODE2 by their file atime.

    This is a simplified version of
    `org-roam-node-read-sort-by-file-atime' which requires nodes as
    its input and not something else. The above function is what
    `org-roam-node-read's sorting uses and it has a special
    formatting.\"
      (time-less-p (org-roam-node-file-atime NODE1)
		   (org-roam-node-file-atime NODE2)))

    (defun org-roam-logseq-tag-function (TAG)
      \"An implementation of logseq's tagging system in org-roam.

    Prompt for TAG which is the name of a tag in your org-roam
    repository, filter it to only contain nodes with that tag and
    sort them so the most recently accessed one is the first item of
    the list. Sorting is done with the custom
    `org-roam-node-sort-by-atime' function. Then, check if a buffer
    exists with the name *TAG-nodes* and if it doesn't create it.

    In that new buffer, switch to org-mode and for every item in the
    sorted-nodes list, go to `point-max', insert a new line, insert
    the string #+transclude: make an org-mode id link with the node's
    id and insert another newline. Once done, run
    `org-transclusion-add-all' to activate the transclusion links and
    view editable versions of the selected nodes.

    Finally, restore the buffer from which this function was called
    and insert and org-mode elisp link that runs `switch-to-buffer'
    to switch to the newly-created buffer.\"
      (interactive \"MTag: \")
      (let* ((init-list (org-roam-node-list))
	     (tagged-nodes (cl-remove-if-not (lambda (NODE)
					       (member TAG (org-roam-node-tags NODE)))
					     init-list))
	     (sorted-nodes (reverse (sort tagged-nodes #'org-roam-node-sort-by-atime)))
	     (buffer-name (concat \"*\" TAG \"-nodes*\"))
	     (buffer (get-buffer-create buffer-name)))
	(save-excursion
	  (with-current-buffer buffer
	    (org-mode)
	    (dolist (node sorted-nodes)
	      (goto-char (point-max))
	      (newline)
	      (insert
	       \"#+transclude: \"
	       (org-link-make-string
		(concat \"id:\" (org-roam-node-id node))))
	       (newline))
	    (org-transclusion-add-all)))
	(insert
	 (org-link-make-string
	  (concat \"elisp:(switch-to-buffer \\\"\" buffer-name \"\\\")\")
	  (concat \"#\" TAG)))))


" 0 5 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5 10 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 10 11 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11 38 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 38 59 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 59 167 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 167 204 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 204 300 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 300 318 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 318 371 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 371 456 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 456 470 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 470 475 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 475 476 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 476 504 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 504 517 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 517 826 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 826 853 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 853 914 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 914 915 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 915 924 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 924 925 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 925 1055 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1055 1064 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1064 1218 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1218 1242 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1242 1452 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1452 1468 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1468 1513 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1513 1521 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1521 1532 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1532 1533 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1533 1541 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1541 1550 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1550 1554 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1554 1628 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1628 1634 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1634 1824 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1824 1825 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1825 1826 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 1826 1827 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 1827 1832 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (org-block)) 1832 1839 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 1839 1840 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 1840 1841 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1841 1894 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1894 1908 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1908 1913 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1913 1932 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1932 1962 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1962 1968 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1968 2060 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2060 2076 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2076 2117 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2117 2122 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2122 2247 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2247 2275 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2275 2288 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2288 2293 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2293 2306 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2306 2309 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2309 2321 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 17122) (undo-tree-id0 . -1764) (undo-tree-id1 . -2320) (undo-tree-id2 . -2320) (undo-tree-id3 . -2320) (undo-tree-id4 . -2320) (undo-tree-id5 . -2321) (undo-tree-id6 . -2320) (undo-tree-id7 . -2320) (undo-tree-id8 . -2320) (undo-tree-id9 . -2320) (undo-tree-id10 . -2320) (undo-tree-id11 . -2320) (undo-tree-id12 . -2320) (undo-tree-id13 . -2320) (undo-tree-id14 . -2320) (undo-tree-id15 . -2320) (undo-tree-id16 . -2320) (undo-tree-id17 . -2320) (undo-tree-id18 . -2320) (undo-tree-id19 . -2320) (undo-tree-id20 . -2320) (undo-tree-id21 . -2320) (undo-tree-id22 . -2320) (undo-tree-id23 . -2320) (undo-tree-id24 . -2320) (undo-tree-id25 . -2320) (undo-tree-id26 . -2320) (undo-tree-id27 . -2320) (undo-tree-id28 . -2320) (undo-tree-id29 . -2320) (undo-tree-id30 . -2320) (undo-tree-id31 . -2320) (undo-tree-id32 . -2320) (undo-tree-id33 . -2320) (undo-tree-id34 . -2320) (undo-tree-id35 . -2320) (undo-tree-id36 . -1764) (undo-tree-id37 . -2320) (undo-tree-id38 . -2320) (undo-tree-id39 . -2320) (undo-tree-id40 . -2320) (undo-tree-id41 . -2320) (undo-tree-id42 . -2320) (undo-tree-id43 . -2320) (undo-tree-id44 . -2320) (undo-tree-id45 . -2320) (undo-tree-id46 . -1764) (undo-tree-id47 . -2320) (undo-tree-id48 . -2320) (undo-tree-id49 . -2320) (undo-tree-id50 . -1764) (undo-tree-id51 . -2320) (undo-tree-id52 . -2320) (undo-tree-id53 . -2320) (undo-tree-id54 . -2320) (undo-tree-id55 . -2320) (undo-tree-id56 . -2320) (undo-tree-id57 . -2320) (undo-tree-id58 . -2320) (undo-tree-id59 . -2320) (undo-tree-id60 . -2320) (undo-tree-id61 . -2320) (undo-tree-id62 . -2320) (undo-tree-id63 . -2320) (undo-tree-id64 . -2320) (undo-tree-id65 . -2320) (undo-tree-id66 . -2320) (undo-tree-id67 . -2320) (undo-tree-id68 . -2320) (undo-tree-id69 . -2320) (undo-tree-id70 . -2320) (undo-tree-id71 . -2320) (undo-tree-id72 . -2320) (undo-tree-id73 . -1764) (undo-tree-id74 . -2320) (undo-tree-id75 . -2320) (undo-tree-id76 . -1764) (undo-tree-id77 . -2320) (undo-tree-id78 . -2320) (undo-tree-id79 . -1764) (undo-tree-id80 . -2320) (undo-tree-id81 . -2320) (undo-tree-id82 . -1764) (undo-tree-id83 . -2320) (undo-tree-id84 . -2320) (undo-tree-id85 . -1764) (undo-tree-id86 . -2320) (undo-tree-id87 . -2320) (undo-tree-id88 . -1764) (undo-tree-id89 . -2320) (undo-tree-id90 . -2320) (undo-tree-id91 . -1764) (undo-tree-id92 . -2320) 19442) nil (25141 3935 661899 27000) 0 nil])
([nil nil ((19441 . 19442) 19440) nil (25141 3935 661717 474000) 0 nil])
([nil nil ((17135 . 17143) (17114 . 17135) (17113 . 17114) (#("i" 0 1 (fontified t)) . -17113) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (#("s" 0 1 (fontified t)) . -17114) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) 17115 (17105 . 17115) (#("r" 0 1 (fontified t)) . -17105) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) 17106 (17101 . 17106) (#(" " 0 1 (fontified t)) . -17101) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) 17102 (17095 . 17102) (#("s" 0 1 (fontified t)) . -17095) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) 17096 (17086 . 17096) (#("s" 0 1 (fontified t)) . -17086) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (#("t" 0 1 (fontified t)) . -17087) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) 17088 (17076 . 17088) (t 25141 3935 682894 766000)) nil (25141 3965 51737 33000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t)) . -28151) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 28152 (t 25141 3965 63823 379000)) nil (25143 21269 638112 350000) 0 nil])
([nil nil ((29828 . 29831) (29828 . 29919) (#("   | d | default | entry | * %? | :if-new | (file+head %<%Y-%m-%d>.org #+title: %<%Y-%m-%d> |
" 0 94 (fontified nil)) . 29828) (t 25143 21269 651334 790000)) nil (25143 21272 396118 239000) 0 nil])
([nil nil ((32141 . 33717) (#("     ;;; zetteldesk.el --- A revision and outlining tool for org-roam

     ;; Author: Vidianos Giannitsis <vidianosgiannitsis@gmail.com>
     ;; Maintaner: Vidianos Giannitsis <vidianosgiannitsis@gmail.com>
     ;; URL: https://github.com/Vidianos-Giannitsis/zetteldesk.el
     ;; Package-Requires: ((org-roam \"2.0\"))
     ;; Tested on Emacs 27.2 and org-roam v2.2
     ;; Created: 6th February 2022
     ;; License: GPL-3.0
     ;; Keywords: org-roam, revision, zettelkasten
     ;; Version: 0.1

     ;; This file is free software; you can redistribute it and/or modify
     ;; it under the terms of the GNU General Public License as published by
     ;; the Free Software Foundation; either version 3, or (at your option)
     ;; any later version.

     ;; This program is distributed in the hope that it will be useful,
     ;; but WITHOUT ANY WARRANTY; without even the implied warranty of
     ;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     ;; GNU General Public License for more details.

     ;; For a full copy of the GNU General Public License
     ;; see <https://www.gnu.org/licenses/>.

     ;;; Commentary:

     ;; This package provides various filter functions to \"traverse\" your
     ;; org-roam database more smoothly. I use it for doing revision in
     ;; lessons and I personally find it highly efficient for this
     ;; purpose. Its also good to just sort out your thoughts. In general,
     ;; org-roam lacks a good framework for filtering your nodes although
     ;; it has all the backend for doing that.

     ;;; Code:

" 0 5 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5 9 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 9 38 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 38 70 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 70 76 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 76 79 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 79 138 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 138 143 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 143 146 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 146 208 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 208 213 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 213 216 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 216 221 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 221 272 (fontified t font-lock-fontified t help-echo nil src-block t mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) htmlize-link (:uri "https://github.com/Vidianos-Giannitsis/zetteldesk.el") font-lock-multiline t face (font-lock-comment-face org-block)) 272 273 (fontified t font-lock-fontified t help-echo nil src-block t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) htmlize-link (:uri "https://github.com/Vidianos-Giannitsis/zetteldesk.el") font-lock-multiline t face (font-lock-comment-face org-block)) 273 274 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 274 279 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 279 282 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 282 319 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 319 324 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 324 327 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 327 366 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 366 371 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 371 374 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 374 401 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 401 406 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 406 409 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 409 426 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 426 431 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 431 434 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 434 477 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 477 482 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 482 485 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 485 498 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 498 504 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 504 507 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 507 573 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 573 578 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 578 581 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 581 650 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 650 655 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 655 658 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 658 726 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 726 731 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 731 734 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 734 753 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 753 759 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 759 762 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 762 826 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 826 831 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 831 834 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 834 897 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 897 902 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 902 905 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 905 967 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 967 972 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 972 975 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 975 1020 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 1020 1026 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1026 1029 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1029 1079 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 1079 1084 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1084 1087 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1087 1091 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 1091 1121 (fontified t font-lock-fontified t help-echo nil src-block t mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) htmlize-link (:uri "https://www.gnu.org/licenses/") font-lock-multiline t face (font-lock-comment-face org-block)) 1121 1122 (fontified t font-lock-fontified t help-echo nil src-block t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) htmlize-link (:uri "https://www.gnu.org/licenses/") font-lock-multiline t face (font-lock-comment-face org-block)) 1122 1124 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 1124 1130 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1130 1134 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1134 1146 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 1146 1152 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1152 1155 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1155 1221 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 1221 1226 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1226 1229 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1229 1293 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 1293 1298 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1298 1301 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1301 1360 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 1360 1365 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1365 1368 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1368 1435 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 1435 1440 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1440 1443 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1443 1509 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 1509 1514 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1514 1517 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1517 1556 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 1556 1562 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1562 1566 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1566 1572 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 1572 1573 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 32141) (undo-tree-id0 . -70) (undo-tree-id1 . -70) (undo-tree-id2 . -70) (undo-tree-id3 . -70) (undo-tree-id4 . -70) (undo-tree-id5 . -70) (undo-tree-id6 . -1573) (undo-tree-id7 . -70) (undo-tree-id8 . -70) (undo-tree-id9 . -70) (undo-tree-id10 . -70) (undo-tree-id11 . -70) (undo-tree-id12 . -70) (undo-tree-id13 . -70) (undo-tree-id14 . -70) (undo-tree-id15 . -70) (undo-tree-id16 . -70) (undo-tree-id17 . -70) (undo-tree-id18 . -70) (undo-tree-id19 . -70) (undo-tree-id20 . -70) (undo-tree-id21 . -70) (undo-tree-id22 . -70) (undo-tree-id23 . -70) (undo-tree-id24 . -70) (undo-tree-id25 . -70) (undo-tree-id26 . -70) (undo-tree-id27 . -70) (undo-tree-id28 . -70) (undo-tree-id29 . -70) (undo-tree-id30 . -70) (undo-tree-id31 . -70) (undo-tree-id32 . -70) (undo-tree-id33 . -70) (undo-tree-id34 . -70) (undo-tree-id35 . -70) (undo-tree-id36 . -70) (undo-tree-id37 . -70) (undo-tree-id38 . -70) (undo-tree-id39 . -70) (undo-tree-id40 . -70) (undo-tree-id41 . -70) (undo-tree-id42 . -70) (undo-tree-id43 . -70) (undo-tree-id44 . -70) (undo-tree-id45 . -70) (undo-tree-id46 . -70) (undo-tree-id47 . -70) (undo-tree-id48 . -70) (undo-tree-id49 . -70) (undo-tree-id50 . -70) (undo-tree-id51 . -70) (undo-tree-id52 . -70) (undo-tree-id53 . -70) (undo-tree-id54 . -70) (undo-tree-id55 . -70) (undo-tree-id56 . -70) (undo-tree-id57 . -70) (undo-tree-id58 . -70) (undo-tree-id59 . -70) (undo-tree-id60 . -70) (undo-tree-id61 . -70) (undo-tree-id62 . -70) (undo-tree-id63 . -70) (undo-tree-id64 . -70) (undo-tree-id65 . -70) (undo-tree-id66 . -70) (undo-tree-id67 . -70) (undo-tree-id68 . -70) (undo-tree-id69 . -70) (undo-tree-id70 . -70) (undo-tree-id71 . -70) (undo-tree-id72 . -70) (undo-tree-id73 . -70) (undo-tree-id74 . -70) (undo-tree-id75 . -70) (undo-tree-id76 . -70) (undo-tree-id77 . -70) (undo-tree-id78 . -70) (undo-tree-id79 . -70) (undo-tree-id80 . -70) (undo-tree-id81 . -70) (undo-tree-id82 . -70) (undo-tree-id83 . -70) (undo-tree-id84 . -70) (undo-tree-id85 . -70) (undo-tree-id86 . -70) (undo-tree-id87 . -70) (undo-tree-id88 . -70) (undo-tree-id89 . -70) (undo-tree-id90 . -70) (undo-tree-id91 . -70) (undo-tree-id92 . -70) (undo-tree-id93 . -70) (undo-tree-id94 . -70) (undo-tree-id95 . -70) (undo-tree-id96 . -70) (undo-tree-id97 . -70) (undo-tree-id98 . -70) (undo-tree-id99 . -70) (undo-tree-id100 . -70) (undo-tree-id101 . -70) (undo-tree-id102 . -70) (undo-tree-id103 . -70) (undo-tree-id104 . -70) (undo-tree-id105 . -70) (undo-tree-id106 . -70) (undo-tree-id107 . -70) (undo-tree-id108 . -70) (undo-tree-id109 . -70) (undo-tree-id110 . -70) (undo-tree-id111 . -70) (undo-tree-id112 . -70) (undo-tree-id113 . -70) (undo-tree-id114 . -70) (undo-tree-id115 . -70) (undo-tree-id116 . -70) (undo-tree-id117 . -70) (undo-tree-id118 . -70) (undo-tree-id119 . -70) (undo-tree-id120 . -70) (undo-tree-id121 . -70) (undo-tree-id122 . -70) (undo-tree-id123 . -70) (undo-tree-id124 . -70) (undo-tree-id125 . -70) (undo-tree-id126 . -70) (undo-tree-id127 . -70) (undo-tree-id128 . -70) (undo-tree-id129 . -70) (undo-tree-id130 . -70) (undo-tree-id131 . -70) (undo-tree-id132 . -70) (undo-tree-id133 . -70) (undo-tree-id134 . -70) (undo-tree-id135 . -70) (undo-tree-id136 . -70) (undo-tree-id137 . -70) (undo-tree-id138 . -70) (undo-tree-id139 . -70) (undo-tree-id140 . -70) (undo-tree-id141 . -70) (undo-tree-id142 . -70) (undo-tree-id143 . -70) (undo-tree-id144 . -70) (undo-tree-id145 . -70) (undo-tree-id146 . -70) (undo-tree-id147 . -70) (undo-tree-id148 . -70) (undo-tree-id149 . -70) (undo-tree-id150 . -70) (undo-tree-id151 . -70) (undo-tree-id152 . -70) (undo-tree-id153 . -70) (undo-tree-id154 . -70) (undo-tree-id155 . -70) (undo-tree-id156 . -70) (undo-tree-id157 . -70) (undo-tree-id158 . -70) (undo-tree-id159 . -70) (undo-tree-id160 . -70) (undo-tree-id161 . -70) (undo-tree-id162 . -70) (undo-tree-id163 . -70) (undo-tree-id164 . -70) (undo-tree-id165 . -70) (undo-tree-id166 . -70) (undo-tree-id167 . -70) (undo-tree-id168 . -70) (undo-tree-id169 . -70) (undo-tree-id170 . -70) (undo-tree-id171 . -70) (undo-tree-id172 . -70) (undo-tree-id173 . -70) (undo-tree-id174 . -70) (undo-tree-id175 . -70) 32211 (t 25143 21272 408033 856000)) nil (25146 28 753085 388000) 0 nil])
([nil nil ((34152 . 34153) (#("
     ;; -- DEPENDENCIES --
     ;; These are some functions that are needed for the package to work as
     ;; it should, but that are not specific to the package

     (require 'org-roam)

     (cl-defmethod org-roam-node-buffer ((node org-roam-node))
       \"Access slot \\\"buffer\\\" of org-roam-node struct CL-X\"
       (let ((buffer (get-file-buffer (org-roam-node-file node))))
	 buffer))

     (defun org-roam-node-poi-or-moc-p (NODE)
       \"Check if NODE has the tag POI or the tag MOC. Return t if it does\"
       (or (string-equal (car (org-roam-node-tags NODE)) \"POI\")
	   (string-equal (car (org-roam-node-tags NODE)) \"MOC\")))

     (defun org-roam-backlink-query ()
       \"Simple org-roam query function that stores the IDs of all the files that link
       to the node at point. This is a modified part of the
       `org-roam-backlinks-get' function keeping only the part necessary for
       `org-roam-backlink-files' to work as this is a complimentary function to
       that\"
       (org-roam-db-query
	[:select [source dest]
		 :from links
		 :where (= dest $s1)
		 :and (= type \"id\")]
	(org-roam-node-id (org-roam-node-at-point))))

     (defun org-roam-backlink-query* (NODE)
       \"Run `org-roam-backlink-query', but instead of returning a list
     of the backlinks of `org-roam-node-at-point', find the backlinks
     of NODE. This is handy in cases where NODE is read through
     `org-roam-node-read' and doesn't have to be the `current-buffer'\"
       (org-roam-db-query
	     [:select [source dest]
		      :from links
		      :where (= dest $s1)
		      :and (= type \"id\")]
	     (org-roam-node-id NODE)))

     (defun org-roam-node-sort-by-backlinks (completion-a completion-b)
       \"Sorting function for org-roam that sorts the list of nodes by
     the number of backlinks. This is the sorting function in
     `org-roam-node-find-by-backlinks' and `zetteldesk-node-insert-sort-backlinks'\"
       (let ((node-a (cdr completion-a))
	     (node-b (cdr completion-b)))
	 (>= (org-roam-node-backlinkscount-number node-a)
	     (org-roam-node-backlinkscount-number node-b))))

" 0 6 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6 9 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 9 28 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 28 33 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 33 36 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 36 65 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 65 104 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 104 109 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 109 112 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 112 164 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 164 171 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 171 178 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 178 180 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 180 188 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face org-block) help-echo nil src-block t) 188 197 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 197 209 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 209 210 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 210 230 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 230 261 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 261 314 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 314 323 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 323 326 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 326 400 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 400 405 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 405 406 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 406 432 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 432 447 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 447 514 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 514 523 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 523 525 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 525 572 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 572 577 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 577 629 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 629 634 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 634 645 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 645 650 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 650 651 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 651 674 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 674 685 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 685 832 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 832 854 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 854 909 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 909 932 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 932 993 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 993 1022 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1022 1029 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 1029 1047 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1047 1052 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 1052 1062 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1062 1068 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 1068 1085 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1085 1089 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 1089 1098 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1098 1102 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 1102 1159 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1159 1164 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1164 1165 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1165 1189 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 1189 1204 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1204 1210 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1210 1233 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 1233 1294 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1294 1316 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 1316 1408 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1408 1426 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 1426 1456 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1456 1470 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 1470 1472 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1472 1506 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1506 1513 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 1513 1536 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1536 1541 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 1541 1556 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1556 1562 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 1562 1584 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1584 1588 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 1588 1597 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1597 1601 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 1601 1643 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1643 1648 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1648 1649 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1649 1680 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 1680 1716 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1716 1847 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1847 1878 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 1878 1885 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1885 1922 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 1922 1924 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1924 1933 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1933 1936 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1936 2107 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 34152) (undo-tree-id176 . -352) (undo-tree-id177 . -352) (undo-tree-id178 . -352) (undo-tree-id179 . -352) (undo-tree-id180 . -352) (undo-tree-id181 . -352) (undo-tree-id182 . -352) (undo-tree-id183 . -352) (undo-tree-id184 . -352) (undo-tree-id185 . -352) (undo-tree-id186 . -352) (undo-tree-id187 . -352) (undo-tree-id188 . -352) (undo-tree-id189 . -352) (undo-tree-id190 . -352) (undo-tree-id191 . -352) (undo-tree-id192 . -352) (undo-tree-id193 . -352) (undo-tree-id194 . -352) (undo-tree-id195 . -352) (undo-tree-id196 . -352) (undo-tree-id197 . -352) (undo-tree-id198 . -352) (undo-tree-id199 . -352) (undo-tree-id200 . -352) (undo-tree-id201 . -352) (undo-tree-id202 . -352) (undo-tree-id203 . -352) (undo-tree-id204 . -352) (undo-tree-id205 . -352) (undo-tree-id206 . -352) (undo-tree-id207 . -352) (undo-tree-id208 . -352) (undo-tree-id209 . -352) (undo-tree-id210 . -352) (undo-tree-id211 . -352) (undo-tree-id212 . -352) (undo-tree-id213 . -352) (undo-tree-id214 . -352) (undo-tree-id215 . -352) (undo-tree-id216 . -352) (undo-tree-id217 . -352) (undo-tree-id218 . -352) (undo-tree-id219 . -352) (undo-tree-id220 . -352) (undo-tree-id221 . -352) (undo-tree-id222 . -352) (undo-tree-id223 . -352) (undo-tree-id224 . -352) (undo-tree-id225 . -352) (undo-tree-id226 . -352) (undo-tree-id227 . -352) (undo-tree-id228 . -352) (undo-tree-id229 . -352) (undo-tree-id230 . -352) (undo-tree-id231 . -352) (undo-tree-id232 . -352) (undo-tree-id233 . -352) (undo-tree-id234 . -352) (undo-tree-id235 . -352) (undo-tree-id236 . -352) (undo-tree-id237 . -352) (undo-tree-id238 . -352) (undo-tree-id239 . -352) (undo-tree-id240 . -352) (undo-tree-id241 . -352) (undo-tree-id242 . -352) (undo-tree-id243 . -352) (undo-tree-id244 . -352) (undo-tree-id245 . -352) (undo-tree-id246 . -352) (undo-tree-id247 . -352) (undo-tree-id248 . -352) (undo-tree-id249 . -352) 34504 (t 25146 28 767298 788000)) nil (25146 64 624168 742000) 0 nil])
([nil nil ((34152 . 36422) (#("
" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 34152)) nil (25146 64 624024 866000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 36421) (t 25146 64 647806 290000)) nil (25146 89 780673 787000) 0 nil])
([nil nil ((#("
  ;; -- PREDICATE FUNCTIONS --
  ;; This section contains the predicate functions the package uses. The
  ;; core of the package is that it provides well filtered completion
  ;; menus as chosen by the user, so obviously predicate functions are
  ;; core to the package

  (defcustom zetteldesk
    \"default\"
    \"Buffer local variable that determines whether a buffer is part
    of the current zetteldesk. A buffer is part of the zetteldesk
    only if the value of this variable is not its default value in
    that buffer. Its default value is default because I am not
    creative.\"
    :type 'string
    :group 'zetteldesk
    :local t)

  (defun zetteldesk-p (BUFFER)
    \"Check if BUFFER is part of the current `zetteldesk'\"
    (not (eq (default-value 'zetteldesk) (buffer-local-value 'zetteldesk (cdr BUFFER)))))

  (defun zetteldesk-buffer-p (BUFFER)
    \"Check if BUFFER is similtaneously part of the current
    `zetteldesk' and not a buffer for an org-roam file.

  Org-roam file buffers are better viewed with `org-roam-node-file'
  so this function filters down the database to non org-roam
  zetteldesk buffers. This is what is used to create the filter
  function `zetteldesk-switch-to-buffer'\"
    (and (zetteldesk-p BUFFER) (not (org-roam-buffer-p (cdr BUFFER)))))

  (defun zetteldesk-node-p (NODE)
    \"Check if NODE is associated with an open buffer. If it is,
    check if that buffer is part of the current `zetteldesk'. If it
    isn't, return nil.

  This function is used as a filter function to create
  `zetteldesk-node-find' which is a filtered view of
  `org-roam-node-find'\"
    (if (org-roam-node-buffer NODE)
	(not (eq (default-value 'zetteldesk) (buffer-local-value 'zetteldesk (org-roam-node-buffer NODE))))
      nil))

  (defun zetteldesk-org-buffer-p (BUFFER)
    \"Check if BUFFER is part of the current `zetteldesk' an org
    file but not one that belongs to org-roam.

  This is used as the filter function for
  `zetteldesk-insert-org-file-contents' which prompts for an org
  file, but as `zetteldesk-insert-node-contents' is a superior
  version for org-roam nodes, that function should not prompts for
  those files\"
    (and (zetteldesk-buffer-p BUFFER) (eq (buffer-local-value 'major-mode (cdr BUFFER)) 'org-mode)))

  (defun zetteldesk-pdf-p (BUFFER)
    \"Check if BUFFER is part of the current `zetteldesk' and also a pdf file.\"
    (and (zetteldesk-p BUFFER) (eq (buffer-local-value 'major-mode (cdr BUFFER)) 'pdf-view-mode)))

" 0 3 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3 6 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 6 32 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 32 34 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 34 37 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 37 105 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 105 107 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 107 110 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 110 175 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 175 177 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 177 180 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 180 246 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 246 248 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 248 251 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 251 271 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 271 275 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 275 284 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 284 285 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 285 295 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-variable-name-face org-block) help-echo nil src-block t) 295 300 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 300 309 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 309 314 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 314 459 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 459 588 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 588 593 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 593 598 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 598 611 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 611 617 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 617 634 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 634 640 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 640 648 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 648 653 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 653 654 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 654 666 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 666 680 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 680 721 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 721 731 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 731 733 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 733 828 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 828 833 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 833 834 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 834 853 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 853 867 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 867 927 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 927 937 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 937 1027 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1027 1045 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 1045 1184 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1184 1211 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 1211 1213 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1213 1219 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1219 1222 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1222 1290 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1290 1295 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1295 1296 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1296 1313 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 1313 1325 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1325 1434 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1434 1444 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 1444 1535 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1535 1555 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 1555 1588 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1588 1606 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 1606 1608 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1608 1614 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1614 1616 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1616 1762 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1762 1767 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1767 1768 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1768 1791 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 1791 1805 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1805 1846 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1846 1856 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 1856 1958 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1958 1993 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 1993 2036 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 2036 2067 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 2067 2164 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 2164 2170 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2170 2173 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2173 2270 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2270 2275 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2275 2276 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2276 2292 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 2292 2306 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2306 2347 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 2347 2357 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 2357 2380 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 2380 2386 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2386 2389 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2389 2481 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 37373) (undo-tree-id250 . -307) (undo-tree-id251 . -307) (undo-tree-id252 . -307) (undo-tree-id253 . -307) (undo-tree-id254 . -307) (undo-tree-id255 . -307) (undo-tree-id256 . -307) (undo-tree-id257 . -307) (undo-tree-id258 . -307) (undo-tree-id259 . -307) (undo-tree-id260 . -307) (undo-tree-id261 . -307) (undo-tree-id262 . -307) (undo-tree-id263 . -307) (undo-tree-id264 . -307) (undo-tree-id265 . -307) (undo-tree-id266 . -307) (undo-tree-id267 . -307) (undo-tree-id268 . -307) (undo-tree-id269 . -307) (undo-tree-id270 . -307) (undo-tree-id271 . -307) (undo-tree-id272 . -307) (undo-tree-id273 . -307) (undo-tree-id274 . -307) (undo-tree-id275 . -307) (undo-tree-id276 . -307) (undo-tree-id277 . -307) (undo-tree-id278 . -307) (undo-tree-id279 . -307) (undo-tree-id280 . -307) (undo-tree-id281 . -307) (undo-tree-id282 . -307) (undo-tree-id283 . -307) (undo-tree-id284 . -307) (undo-tree-id285 . -307) (undo-tree-id286 . -307) (undo-tree-id287 . -307) (undo-tree-id288 . -307) (undo-tree-id289 . -307) (undo-tree-id290 . -307) (undo-tree-id291 . -307) (undo-tree-id292 . -307) (undo-tree-id293 . -307) (undo-tree-id294 . -307) (undo-tree-id295 . -307) (undo-tree-id296 . -307) (undo-tree-id297 . -307) (undo-tree-id298 . -307) (undo-tree-id299 . -307) (undo-tree-id300 . -307) (undo-tree-id301 . -307) (undo-tree-id302 . -307) (undo-tree-id303 . -307) (undo-tree-id304 . -307) (undo-tree-id305 . -307) (undo-tree-id306 . -307) (undo-tree-id307 . -307) (undo-tree-id308 . -307) (undo-tree-id309 . -307) (undo-tree-id310 . -307) (undo-tree-id311 . -307) (undo-tree-id312 . -307) (undo-tree-id313 . -307) (undo-tree-id314 . -307) (undo-tree-id315 . -307) (undo-tree-id316 . -307) (undo-tree-id317 . -307) (undo-tree-id318 . -307) (undo-tree-id319 . -307) (undo-tree-id320 . -307) (undo-tree-id321 . -307) (undo-tree-id322 . -307) (undo-tree-id323 . -307) (undo-tree-id324 . -307) (undo-tree-id325 . -307) (undo-tree-id326 . -307) (undo-tree-id327 . -307) (undo-tree-id328 . -307) (undo-tree-id329 . -307) (undo-tree-id330 . -307) (undo-tree-id331 . -307) (undo-tree-id332 . -307) (undo-tree-id333 . -307) (undo-tree-id334 . -307) (undo-tree-id335 . -307) (undo-tree-id336 . -307) (undo-tree-id337 . -307) (undo-tree-id338 . -307) (undo-tree-id339 . -307) (undo-tree-id340 . -307) (undo-tree-id341 . -307) (undo-tree-id342 . -307) (undo-tree-id343 . -307) (undo-tree-id344 . -307) (undo-tree-id345 . -307) (undo-tree-id346 . -307) (undo-tree-id347 . -307) (undo-tree-id348 . -307) (undo-tree-id349 . -307) (undo-tree-id350 . -307) (undo-tree-id351 . -307) (undo-tree-id352 . -307) (undo-tree-id353 . -307) (undo-tree-id354 . -307) (undo-tree-id355 . -307) (undo-tree-id356 . -307) (undo-tree-id357 . -307) (undo-tree-id358 . -307) (undo-tree-id359 . -307) (undo-tree-id360 . -307) (undo-tree-id361 . -307) (undo-tree-id362 . -307) (undo-tree-id363 . -307) (undo-tree-id364 . -307) (undo-tree-id365 . -307) (undo-tree-id366 . -307) (undo-tree-id367 . -307) (undo-tree-id368 . -307) (undo-tree-id369 . -307) (undo-tree-id370 . -307) (undo-tree-id371 . -307) (undo-tree-id372 . -307) (undo-tree-id373 . -307) (undo-tree-id374 . -307) (undo-tree-id375 . -307) (undo-tree-id376 . -307) (undo-tree-id377 . -307) (undo-tree-id378 . -307) 37680) nil (25146 89 780650 41000) 0 nil])
([nil nil ((37373 . 39868)) nil (25146 89 777239 763000) 0 nil])
([nil nil ((#("
    ;; -- ADD/REMOVE THINGS IN THE ZETTELDESK --
    ;; To get a system where the user can get multiple filtered views of
    ;; the nodes/buffers of their choice, obviously you need functions
    ;; that allow the user to add them to something. And then, you also
    ;; need ways to remove things, because people make mistakes.

    (defcustom zetteldesk-info-nodes '()
      \"List of info nodes that are part of the
      zetteldesk. Initialised as an empty list\"
      :type 'list
      :group 'zetteldesk)

    (defun zetteldesk-add-to-desktop (BUFFER)
      \"Add BUFFER to the current `zetteldesk'\"
      (interactive \"b\")
      (with-current-buffer BUFFER
	(setq-local zetteldesk \"foo\")))

    (defun zetteldesk-add-node-to-desktop (NODE)
      \"Add NODE to the `zetteldesk' and if there isn't a buffer associated
      to it, create it. NODE is an org-roam node read through `org-roam-node-read'\"
      (interactive (list (org-roam-node-read)))
      (let ((buffer (org-roam-node-buffer NODE))
	     (file (org-roam-node-file NODE))
	     (org-startup-with-latex-preview nil))
	(if (not (eq buffer nil))
	    (with-current-buffer buffer
	      (setq-local zetteldesk \"foo\"))
	  (with-current-buffer (find-file-noselect file)
	    (setq-local zetteldesk \"foo\")))))

    (defun zetteldesk-add-poi-or-moc-backlink-to-desktop ()
      \"Prompts the user to select an org-roam node that has the POI
    or MOC tag (filtering done with `org-roam-node-poi-or-moc-p') and
    collects its ID and backlinks. Then, prompt the user to select
    one of its backlinks and add that to the zetteldesk.\"
      (interactive)
      (let* ((source (org-roam-node-read nil #'org-roam-node-poi-or-moc-p))
	     (source-id (org-roam-node-id source))
	     (backlinks (org-roam-backlink-query* source)))
	(zetteldesk-add-node-to-desktop
	 (org-roam-node-read nil (lambda (NODE)
				   (let* ((id (org-roam-node-id NODE))
					  (id-list (list id source-id)))
				     (member id-list backlinks)))))))

    (defun zetteldesk-add-backlinks-to-desktop ()
      \"Add the current buffer and all its backlinks to the `zetteldesk'. 

    This function queries the database for all the nodes that link to
    the current node with the `org-roam-backlink-query' function and
    then recursively checks if there is an open buffer associated
    with them, and if so adds it to the `zetteldesk'\"
      (interactive)
      (setq-local zetteldesk \"foo\")
      (let ((backlinks (length (org-roam-backlink-query)))
	    (org-startup-with-latex-preview nil))
	(dotimes (number backlinks)
	  (let* ((id (car (nth number (org-roam-backlink-query))))
		  (node (org-roam-node-from-id id))
		  (buffer (org-roam-node-buffer node))
		  (file (org-roam-node-file node)))
	    (if (not (eq buffer nil))
		(with-current-buffer buffer
		  (setq-local zetteldesk \"foo\"))
	      (with-current-buffer (find-file-noselect file)
		(setq-local zetteldesk \"foo\")))))))

    (defun zetteldesk-add-info-node-to-desktop ()
      \"If the current buffer is an info node, add its name to the
    list of the variable `zetteldesk-info-nodes'\"
      (interactive)
      (add-to-list 'zetteldesk-info-nodes (Info-copy-current-node-name)))

    (defun zetteldesk-remove-from-desktop (BUFFER)
      \"Remove BUFFER from the current `zetteldesk'\"
      (interactive \"b\")
      (with-current-buffer BUFFER
	(kill-local-variable 'zetteldesk)))

    (defun zetteldesk-remove-node-from-desktop (NODE)
      \"Remove NODE from the `zetteldesk'. NODE is an org-roam node
    and is read through `org-roam-node-read'\"
      (interactive (list (org-roam-node-read nil #'zetteldesk-node-p)))
      (let ((buffer (org-roam-node-buffer NODE)))
	(with-current-buffer buffer
	  (kill-local-variable 'zetteldesk))))

    (defun zetteldesk-remove-backlinks-from-desktop ()
      \"Remove the current buffer and all its currently open backlinks
      from the `zetteldesk'.

    This function is essentially a carbon copy of
    `zetteldesk-add-backlinks-to-desktop' but instead of adding the
    buffer to the desktop it removes it.\"
      (interactive)
      (kill-local-variable 'zetteldesk)
      (let ((backlinks (length (org-roam-backlink-query))))
	(dotimes (number backlinks)
	  (let* ((id (car (nth number (org-roam-backlink-query))))
		  (node (org-roam-node-from-id id))
		  (buffer (org-roam-node-buffer node)))
	    (unless (eq buffer nil)
	      (with-current-buffer buffer
		(kill-local-variable 'zetteldesk)))))))

    (defun zetteldesk-remove-info-node-from-desktop ()
      \"Remove an info-node from the `zetteldesk'. The node is
    selected through a `completing-read' menu of
    `zetteldesk-info-nodes'\"
      (interactive)
      (setq zetteldesk-info-nodes (remove
				   (completing-read \"Info Nodes: \" zetteldesk-info-nodes)
				   zetteldesk-info-nodes)))

" 0 5 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5 8 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 8 50 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 50 54 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 54 57 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 57 123 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 123 127 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 127 130 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 130 194 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 194 198 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 198 201 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 201 266 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 266 270 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 270 273 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 273 331 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 331 337 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 337 346 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 346 347 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 347 368 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-variable-name-face org-block) help-echo nil src-block t) 368 379 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 379 454 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 454 467 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 467 474 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 474 479 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 479 492 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 492 498 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 498 518 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 518 523 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 523 524 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 524 549 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 549 565 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 565 593 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 593 603 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 603 605 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 605 613 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 613 624 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 624 625 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 625 628 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 628 637 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 637 656 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 656 666 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 666 676 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 676 688 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 688 693 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 693 703 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 703 708 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 708 709 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 709 739 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 739 753 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 753 771 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 771 781 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 781 885 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 885 903 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 903 905 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 905 913 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 913 924 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 924 961 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 961 964 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 964 1088 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1088 1090 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1090 1119 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1119 1138 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1138 1154 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1154 1164 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1164 1176 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1176 1181 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 1181 1188 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1188 1207 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1207 1240 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1240 1250 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1250 1262 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1262 1267 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 1267 1279 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1279 1284 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1284 1285 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1285 1330 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 1330 1340 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1340 1439 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1439 1465 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 1465 1596 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1596 1604 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1604 1615 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1615 1624 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1624 1628 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1628 1850 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1850 1856 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1856 1872 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1872 1876 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1876 1993 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1993 1998 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1998 1999 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1999 2034 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 2034 2044 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2044 2098 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 2098 2108 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 2108 2214 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 2214 2237 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 2237 2359 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 2359 2369 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 2369 2371 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 2371 2379 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2379 2390 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2390 2399 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2399 2409 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2409 2421 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2421 2426 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 2426 2435 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2435 2438 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2438 2532 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2532 2539 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2539 2563 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2563 2567 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2567 2742 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2742 2744 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2744 2770 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2770 2789 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2789 2802 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2802 2812 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2812 2824 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2824 2829 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 2829 2840 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2840 2859 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2859 2889 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2889 2899 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2899 2911 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2911 2916 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 2916 2930 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2930 2935 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2935 2936 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2936 2971 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 2971 2981 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2981 3067 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 3067 3088 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 3088 3090 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 3090 3098 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3098 3109 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3109 3191 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3191 3196 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3196 3197 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3197 3227 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 3227 3243 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3243 3276 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 3276 3286 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 3286 3288 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 3288 3296 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3296 3307 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3307 3308 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3308 3311 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 3311 3320 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3320 3339 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3339 3390 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3390 3395 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3395 3396 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3396 3431 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 3431 3445 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3445 3468 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 3468 3478 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 3478 3531 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 3531 3549 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 3549 3551 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 3551 3559 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3559 3570 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3570 3631 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3631 3634 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3634 3676 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3676 3695 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3695 3749 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3749 3754 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3754 3755 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3755 3795 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 3795 3805 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3805 3885 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 3885 3895 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 3895 3954 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 3954 3989 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 3989 4058 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 4058 4066 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4066 4077 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 4077 4126 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4126 4129 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 4129 4181 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4181 4188 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 4188 4212 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4212 4216 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 4216 4354 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4354 4360 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 4360 4385 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4385 4404 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 4404 4460 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4460 4465 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 4465 4466 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4466 4506 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 4506 4516 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4516 4547 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 4547 4557 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 4557 4596 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 4596 4611 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 4611 4626 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 4626 4647 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 4647 4649 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 4649 4657 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4657 4668 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 4668 4677 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4677 4681 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 4681 4736 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4736 4750 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 4750 4807 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 41041) (undo-tree-id379 . -451) (undo-tree-id380 . -451) (undo-tree-id381 . -451) (undo-tree-id382 . -451) (undo-tree-id383 . -451) (undo-tree-id384 . -451) (undo-tree-id385 . -451) (undo-tree-id386 . -451) (undo-tree-id387 . -451) (undo-tree-id388 . -451) (undo-tree-id389 . -451) (undo-tree-id390 . -451) (undo-tree-id391 . -451) (undo-tree-id392 . -451) (undo-tree-id393 . -451) (undo-tree-id394 . -451) (undo-tree-id395 . -451) (undo-tree-id396 . -451) (undo-tree-id397 . -451) (undo-tree-id398 . -451) (undo-tree-id399 . -451) (undo-tree-id400 . -451) (undo-tree-id401 . -451) (undo-tree-id402 . -451) (undo-tree-id403 . -451) (undo-tree-id404 . -451) (undo-tree-id405 . -451) (undo-tree-id406 . -451) (undo-tree-id407 . -451) (undo-tree-id408 . -451) (undo-tree-id409 . -451) (undo-tree-id410 . -451) (undo-tree-id411 . -451) (undo-tree-id412 . -451) (undo-tree-id413 . -451) (undo-tree-id414 . -451) (undo-tree-id415 . -451) (undo-tree-id416 . -451) (undo-tree-id417 . -451) (undo-tree-id418 . -451) (undo-tree-id419 . -451) (undo-tree-id420 . -451) (undo-tree-id421 . -451) (undo-tree-id422 . -451) (undo-tree-id423 . -451) (undo-tree-id424 . -451) (undo-tree-id425 . -451) (undo-tree-id426 . -451) (undo-tree-id427 . -451) (undo-tree-id428 . -451) (undo-tree-id429 . -451) (undo-tree-id430 . -451) (undo-tree-id431 . -451) (undo-tree-id432 . -451) (undo-tree-id433 . -451) (undo-tree-id434 . -451) (undo-tree-id435 . -451) (undo-tree-id436 . -451) (undo-tree-id437 . -451) (undo-tree-id438 . -451) (undo-tree-id439 . -451) (undo-tree-id440 . -451) (undo-tree-id441 . -451) (undo-tree-id442 . -451) (undo-tree-id443 . -451) (undo-tree-id444 . -451) (undo-tree-id445 . -451) (undo-tree-id446 . -451) (undo-tree-id447 . -451) (undo-tree-id448 . -451) (undo-tree-id449 . -451) (undo-tree-id450 . -451) (undo-tree-id451 . -451) (undo-tree-id452 . -451) (undo-tree-id453 . -451) (undo-tree-id454 . -451) (undo-tree-id455 . -451) (undo-tree-id456 . -451) (undo-tree-id457 . -451) (undo-tree-id458 . -451) (undo-tree-id459 . -451) (undo-tree-id460 . -451) (undo-tree-id461 . -451) (undo-tree-id462 . -451) (undo-tree-id463 . -451) (undo-tree-id464 . -451) (undo-tree-id465 . -451) (undo-tree-id466 . -451) (undo-tree-id467 . -451) (undo-tree-id468 . -451) (undo-tree-id469 . -451) (undo-tree-id470 . -451) (undo-tree-id471 . -451) (undo-tree-id472 . -451) (undo-tree-id473 . -451) (undo-tree-id474 . -451) (undo-tree-id475 . -451) (undo-tree-id476 . -451) (undo-tree-id477 . -451) (undo-tree-id478 . -451) (undo-tree-id479 . -451) (undo-tree-id480 . -451) (undo-tree-id481 . -451) (undo-tree-id482 . -451) (undo-tree-id483 . -451) (undo-tree-id484 . -451) (undo-tree-id485 . -451) (undo-tree-id486 . -451) (undo-tree-id487 . -451) (undo-tree-id488 . -451) (undo-tree-id489 . -451) (undo-tree-id490 . -451) (undo-tree-id491 . -451) (undo-tree-id492 . -451) (undo-tree-id493 . -451) (undo-tree-id494 . -451) (undo-tree-id495 . -451) (undo-tree-id496 . -451) (undo-tree-id497 . -451) (undo-tree-id498 . -451) (undo-tree-id499 . -451) (undo-tree-id500 . -451) (undo-tree-id501 . -451) (undo-tree-id502 . -451) (undo-tree-id503 . -451) (undo-tree-id504 . -451) (undo-tree-id505 . -451) (undo-tree-id506 . -451) (undo-tree-id507 . -451) (undo-tree-id508 . -451) (undo-tree-id509 . -451) (undo-tree-id510 . -451) (undo-tree-id511 . -451) (undo-tree-id512 . -451) (undo-tree-id513 . -451) (undo-tree-id514 . -451) (undo-tree-id515 . -451) 41492 (t 25146 89 794828 309000)) nil (25146 136 432238 704000) 0 nil])
([nil nil ((41041 . 45855)) nil (25146 136 432020 656000) 0 nil])
([nil nil ((#("
     ;; -- FILTER FUNCTIONS --
     ;; This section is about defining all the functions that show you the
     ;; filtered results of all your nodes/buffers

     (defun zetteldesk-switch-to-buffer ()
       \"Execute `switch-to-buffer' with the buffer list being
     filtered (using `zetteldesk-buffer-p') to show only buffers that are
     part of the current `zetteldesk' and not `org-roam-node's.\"
       (interactive)
       (switch-to-buffer (read-buffer \"Zetteldesk Buffers: \" nil nil #'zetteldesk-buffer-p)))

     (defun zetteldesk-node-find ()
       \"Execute `org-roam-node-find' with the list being
     filtered (using `zetteldesk-node-p') to show only nodes that are
     part of the current `zetteldesk'\"
       (interactive)
       (org-roam-node-find nil nil #'zetteldesk-node-p))

     (defun zetteldesk-node-insert ()
       \"Execute `org-roam-node-insert' with the list being
     filtered (using `zetteldesk-node-p') to show only nodes that are
     part of the current `zetteldesk'\"
       (interactive)
       (org-roam-node-insert #'zetteldesk-node-p))

     (defun zetteldesk-node-insert-sort-backlinks ()
       \"Select a node that is part of the zetteldesk through
       `org-roam-node-read' in a UI sorted by the number of
       backlinks. Insert a link in the current buffer to the selected node.

     This function essentially has the core functionality of
     `org-roam-node-insert', but it uses `org-roam-node-read' instead
     as only that can take a sort-function. Some files may be
     important to their topic, but not MOCs or POIs, so this function
     acts essentially as a complimentary function to
     `zetteldesk-node-insert-if-poi-or-moc' to check if that one
     missed something you want to include.\"
       (interactive)
       (let* ((node (org-roam-node-read nil #'zetteldesk-node-p #'org-roam-node-sort-by-backlinks))
	      (id (org-roam-node-id node))
	      (description (org-roam-node-formatted node)))
	 (insert (org-link-make-string
		  (concat \"id:\" id)
		  description))))

     (defun zetteldesk-info-goto-node ()
       \"Zetteldesk filter function for `Info-goto-node'.

     Prompts the user to select a node from the list
     `zetteldesk-info-nodes' and jumps to that node\"
       (interactive)
       (Info-goto-node (completing-read \"Nodes: \" zetteldesk-info-nodes)))

" 0 6 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6 9 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 9 32 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 32 37 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 37 40 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 40 107 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 107 112 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 112 115 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 115 158 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 158 165 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 165 170 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 170 171 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 171 198 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 198 209 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 209 219 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 219 235 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 235 286 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 286 305 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 305 364 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 364 374 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 374 385 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 385 398 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 398 402 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 402 411 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 411 422 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 422 457 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 457 462 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 462 484 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 484 525 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 525 530 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 530 531 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 531 551 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 551 562 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 562 572 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 572 590 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 590 634 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 634 651 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 651 708 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 708 718 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 718 720 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 720 729 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 729 740 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 740 806 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 806 811 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 811 812 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 812 834 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 834 845 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 845 855 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 855 875 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 875 919 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 919 936 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 936 993 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 993 1003 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 1003 1005 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1005 1014 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1014 1025 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1025 1085 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1085 1090 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1090 1091 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1091 1128 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 1128 1139 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1139 1201 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1201 1219 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 1219 1397 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1397 1417 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 1417 1433 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1433 1451 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 1451 1652 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1652 1688 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 1688 1754 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1754 1763 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1763 1774 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1774 1784 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1784 1788 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1788 2009 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2009 2014 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 2014 2046 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2046 2051 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2051 2052 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2052 2077 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 2077 2088 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2088 2121 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 2121 2135 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 2135 2198 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 2198 2219 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 2219 2244 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 2244 2253 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2253 2264 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2264 2306 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2306 2315 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 2315 2342 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 46356) (undo-tree-id516 . -158) (undo-tree-id517 . -158) (undo-tree-id518 . -158) (undo-tree-id519 . -158) (undo-tree-id520 . -158) (undo-tree-id521 . -158) (undo-tree-id522 . -158) (undo-tree-id523 . -158) (undo-tree-id524 . -158) (undo-tree-id525 . -158) (undo-tree-id526 . -158) (undo-tree-id527 . -158) (undo-tree-id528 . -158) (undo-tree-id529 . -158) (undo-tree-id530 . -158) (undo-tree-id531 . -158) (undo-tree-id532 . -158) (undo-tree-id533 . -158) (undo-tree-id534 . -158) (undo-tree-id535 . -158) (undo-tree-id536 . -158) (undo-tree-id537 . -158) (undo-tree-id538 . -158) (undo-tree-id539 . -158) (undo-tree-id540 . -158) (undo-tree-id541 . -158) (undo-tree-id542 . -158) (undo-tree-id543 . -158) (undo-tree-id544 . -158) (undo-tree-id545 . -158) (undo-tree-id546 . -158) (undo-tree-id547 . -158) (undo-tree-id548 . -158) (undo-tree-id549 . -158) (undo-tree-id550 . -158) (undo-tree-id551 . -158) (undo-tree-id552 . -158) (undo-tree-id553 . -158) (undo-tree-id554 . -158) (undo-tree-id555 . -158) (undo-tree-id556 . -158) (undo-tree-id557 . -158) (undo-tree-id558 . -158) (undo-tree-id559 . -158) (undo-tree-id560 . -158) (undo-tree-id561 . -158) (undo-tree-id562 . -158) (undo-tree-id563 . -158) (undo-tree-id564 . -158) (undo-tree-id565 . -158) (undo-tree-id566 . -158) (undo-tree-id567 . -158) (undo-tree-id568 . -158) (undo-tree-id569 . -158) (undo-tree-id570 . -158) (undo-tree-id571 . -158) (undo-tree-id572 . -158) (undo-tree-id573 . -158) (undo-tree-id574 . -158) (undo-tree-id575 . -158) (undo-tree-id576 . -158) (undo-tree-id577 . -158) (undo-tree-id578 . -158) (undo-tree-id579 . -158) (undo-tree-id580 . -158) (undo-tree-id581 . -158) (undo-tree-id582 . -158) (undo-tree-id583 . -158) (undo-tree-id584 . -158) (undo-tree-id585 . -158) (undo-tree-id586 . -158) (undo-tree-id587 . -158) (undo-tree-id588 . -158) (undo-tree-id589 . -158) (undo-tree-id590 . -158) (undo-tree-id591 . -158) (undo-tree-id592 . -158) (undo-tree-id593 . -158) (undo-tree-id594 . -158) (undo-tree-id595 . -158) (undo-tree-id596 . -158) (undo-tree-id597 . -158) (undo-tree-id598 . -158) (undo-tree-id599 . -158) (undo-tree-id600 . -158) (undo-tree-id601 . -158) (undo-tree-id602 . -158) (undo-tree-id603 . -158) (undo-tree-id604 . -158) (undo-tree-id605 . -158) (undo-tree-id606 . -158) (undo-tree-id607 . -158) (undo-tree-id608 . -158) (undo-tree-id609 . -158) (undo-tree-id610 . -158) (undo-tree-id611 . -158) (undo-tree-id612 . -158) (undo-tree-id613 . -158) (undo-tree-id614 . -158) (undo-tree-id615 . -158) (undo-tree-id616 . -158) (undo-tree-id617 . -158) 46514 (t 25146 136 455486 949000)) nil (25146 156 586148 591000) 0 nil])
([nil nil ((46356 . 48717)) nil (25146 156 582926 609000) 0 nil])
([nil nil ((#("
     ;; -- *ZETTELDESK-SCRATCH* --
     ;; This is the section where it all comes together. The
     ;; zetteldesk-scratch buffer is a special buffer defined here on which
     ;; you drop all your stuff. Its what molds the whole workflow together

     (defcustom zetteldesk-map (make-sparse-keymap)
       \"This variable is the keymap for `zetteldesk-mode'\"
       :type 'keymap
       :group 'zetteldesk)

     (defcustom zetteldesk-insert-scratch-or-current-buffer t
       \"Customization variable which decides whether the
       zetteldesk-insert functions will insert to the
       ,*zetteldesk-scratch* buffer or the current buffer. Default
       value is t which makes those functions insert to the
       scratch. Setting it to nil will make those functions insert to
       the current buffer, for whichever usecase you might want\"
       :type 'string
       :group 'zetteldesk)

     (define-minor-mode zetteldesk-mode
       \"Toggles the global zetteldesk-mode.

     When turned on, this mode initialises the *zetteldesk-scratch*
     buffer, a useful part of the whole zetteldesk workflow.\"
       nil
       :global t
       :group 'zetteldesk
       :keymap zetteldesk-map
       :lighter \" zetteldesk\")

     (defun zetteldesk--create-scratch-buffer ()
       \"Create the zetteldesk-scratch buffer and put it in `org-mode'\"
       (let ((buffer (generate-new-buffer \"*zetteldesk-scratch*\"))
	     (org-startup-with-latex-preview nil))
	 (with-current-buffer buffer
	   (org-mode))))

     (add-hook 'zetteldesk-mode-on-hook 'zetteldesk--create-scratch-buffer)

     (defun zetteldesk-switch-to-scratch-buffer (&optional arg)
       \"Open the zetteldesk-scratch buffer in a split with the current buffer.

     Optionally, with a `\\\\[universal-argument]' switch to the
     ,*zetteldesk-scratch* buffer without issuing a split.\"
       (interactive \"P\")
       (if (equal arg '(4))
	   (switch-to-buffer \"*zetteldesk-scratch*\")
	 (switch-to-buffer-other-window \"*zetteldesk-scratch*\")))

     (defun zetteldesk-node-insert-if-poi-or-moc ()
       \"Filter `org-roam-node-list' to only include files in the current
     `zetteldesk' that have the POI or MOC tag with `zetteldesk-node-p' and
     `org-roam-node-poi-or-moc-p'. Then insert a link to every one of those nodes
     and seperate them with commas\"
       (interactive)
       (let* ((init_list (org-roam-node-list))
	      (zetteldesk_nodes (cl-remove-if-not #'zetteldesk-node-p init_list))
	      (nodes_poi (cl-remove-if-not #'org-roam-node-poi-or-moc-p zetteldesk_nodes)))
	 (while nodes_poi
	   (let* ((node (car nodes_poi))
		  (description (org-roam-node-formatted (car nodes_poi))))
	     (insert (org-link-make-string
		      (concat \"id:\" (org-roam-node-id (car nodes_poi)))
		      description))
	     (insert \", \"))
	   (setq nodes_poi (cdr nodes_poi)))))

     (defun zetteldesk-insert-node-contents (&optional arg)
       \"Select a node that is part of the current `zetteldesk', add a link
       to it at point and then insert its contents to the bottom of the 
       ,*zetteldesk-scratch* buffer after inserting a newline there. Remove
       the first 67 characters which is the properties section if it only
       contains the ID of the node as its unneeded and change the string
       ,#+title to a top level heading as its more practical when inserting
       the contents of multiple files.

     If given a `\\\\[universal-argument]' also switch to the *zetteldesk-scratch* buffer
     in a split.\"
       (interactive \"P\")
       (let* ((node (org-roam-node-read nil #'zetteldesk-node-p))
	      (file (org-roam-node-file node))
	      (description (org-roam-node-formatted node))
	      (location (if zetteldesk-insert-scratch-or-current-buffer
			    \"*zetteldesk-scratch*\"
			  (current-buffer))))
	 (insert (org-link-make-string
		  (concat \"id:\" (org-roam-node-id node))
		  description))
	 (with-current-buffer location
	   (goto-char (point-max))
	   (newline)
	   (insert-file-contents file nil 67)
	   (replace-string \"#+title: \" \"* \")))
       (when (equal arg '(4))
	 (save-current-buffer
	   (switch-to-buffer-other-window \"*zetteldesk-scratch*\"))))

     (defun zetteldesk-insert-node-contents-without-link ()
       \"\\\"Sister function\\\" of
       `zetteldesk-insert-node-contents'. Finds a node that is part of
       the `zetteldesk' and inserts its contents to the bottom of the
       zetteldesk-scratch buffer. This function differentiates itself,
       by the fact that it doesn't insert an ID link to the node in
       the current buffer and by the fact that it switches to the
       scratch buffer in a split without needing a
       `\\\\[universal-argument]'.

     For me, it makes sense a lot of the time to insert a link to the
     node inthe current buffer, especially if its an outlining
     buffer. But sometimes its not handy, and so, I just made this
     second iteration to fix that issue.\"
       (interactive)
       (let* ((node (org-roam-node-read nil #'zetteldesk-node-p))
	      (location (if zetteldesk-insert-scratch-or-current-buffer
			    \"*zetteldesk-scratch*\"
			  (current-buffer)))
	      (file (org-roam-node-file node)))
	 (with-current-buffer location
	   (goto-char (point-max))
	   (newline)
	   (insert-file-contents file nil 67)
	   (replace-string \"#+title: \" \"* \")))
       (switch-to-buffer-other-window \"*zetteldesk-scratch*\"))

     (defun zetteldesk-insert-org-file-contents (&optional arg)
       \"Select an org buffer (excluding org-roam files) that is part of the
       current `zetteldesk', insert its contents to the
       ,*zetteldesk-scratch* buffer, make its title a top level heading and
       demote all of its headings by one level (since the title now acts as
       a top level heading).

     If given a `\\\\[universal-argument]' also switch to the
     ,*zetteldesk-scratch* buffer in a split\"
       (interactive \"P\")
       (let* ((buffer (set-buffer (read-buffer \"Zetteldesk Buffers: \" nil nil #'zetteldesk-org-buffer-p)))
	      (location (if zetteldesk-insert-scratch-or-current-buffer
			    \"*zetteldesk-scratch*\"
			  (current-buffer)))
	      (file (buffer-file-name buffer)))
	 (set-buffer location)
	 (goto-char (point-max))
	 (save-excursion
	   (newline)
	   (insert-file-contents file))
	 (save-excursion
	   (while (not (org-next-visible-heading 1))
	     (org-metaright)))
	 (replace-string \"#+title: \" \"* \"))
       (when (equal arg '(4))
	 (switch-to-buffer-other-window \"*zetteldesk-scratch*\")))

     (defun zetteldesk-insert-link-to-pdf (&optional arg)
       \"Select a pdf file that is part of the `zetteldesk' and prompt for a
       page in that pdf (defaults to page 1 if you don't care about the
       page).

     Then, in the zetteldesk-scratch buffer, insert at `point-max' a
     newline and then a new heading with its name consisting of the
     string \\\"Supportive Material - \\\" then the pdfs name, without the
     file structure or the extension and then the string
     \\\"(PDF)\\\". Then, insert a newline, the string \\\"Link to PDF: \\\"
     and then a link to the chosen pdf, in the correct page, with the
     description being the pdfs name without the file structure or the
     extension. Note that `org-pdftools-setup-link' needs to be run
     for pdf links to work (which this uses).

     Optionally, if given a `\\\\[universal-argument]' save the
     highlighted region in a variable and insert it after the heading
     but before the pdf link. This functionality serves the purpose of
     adding a \\\"description\\\" sort of thing to the pdf. Typically,
     when citing a pdf as supplementary info to an argument, there is
     something specific you want to take from the pdf. Therefore, this
     optional addition, adds that to the scratch buffer so you
     remember why it was useful.\"
       (interactive \"P\")
       (let* ((pdf-buffer (set-buffer (read-buffer \"Zetteldesk Pdfs: \" nil nil #'zetteldesk-pdf-p)))
	      (file (buffer-file-name pdf-buffer))
	      (location (if zetteldesk-insert-scratch-or-current-buffer
			    \"*zetteldesk-scratch*\"
			  (current-buffer)))
	      (page (read-from-minibuffer \"Page: \" \"1\"))
	      (description (file-name-nondirectory (file-name-sans-extension file))))
	 (with-current-buffer location
	   (goto-char (point-max))
	   (newline)
	   (org-insert-heading)
	   (insert \"Supportive Material - \" description \" (PDF)\")
	   (newline)
	   (when (equal arg '(4))
	     (let ((contents (buffer-substring (mark) (point))))
	       (insert contents)
	       (newline)))
	   (insert \"Link to PDF: \"
		   (org-link-make-string
		    (concat \"pdf:\" file \"::\" page)
		    description)))))

     (defun zetteldesk-insert-info-contents (&optional arg)
       \"Select an info node that is part of the current `zetteldesk'
       using a `completing-read' prompt for the selection.

     Then, in the *zetteldesk-scratch* buffer, go to the end of the
     buffer, insert a newline and a heading of the form \\\"Supportive
     Material - \\\" the node's name \\\"(Info)\\\" akin to what is done in
     `zetteldesk-insert-link-to-pdf'. Then, insert the contents of the
     chosen info node, removing the first 2 lines which have the
     contextual links of the buffer, as they are not functional
     outside of the info buffer. Also insert a link with the title
     \\\"See this node in its context\\\" which opens the node inside the
     info program. Finally, restore the buffer from which this
     function was called. Ideally, this wouldn't require a
     switch-to-buffer statement, but the function `Info-goto-node'
     used for this function switches the visible buffer to the info
     node and I couldn't find an alternative that only makes it
     current for editing operations, but doesn't change the visible
     buffer to it.

     I find the link to the actual info buffer is useful as a lot of
     the time, you might want to insert the buffer so you can store it
     with other useful information inside the zetteldesk-scratch
     buffer, but then, you are interested in looking into the other
     nodes of the manual you were reading.

     Optionally, with a `\\\\[universal-argument]' switch to the
     zetteldesk-scratch buffer in a split.\"
       (interactive \"P\")
       (let ((info_node (completing-read \"Nodes: \" zetteldesk-info-nodes))
	     (location (if zetteldesk-insert-scratch-or-current-buffer
			   \"*zetteldesk-scratch*\"
			 (current-buffer)))
	     (buffer (current-buffer)))
	 (Info-goto-node info_node)
	 (with-current-buffer location
	   (goto-char (point-max))
	   (newline)
	   (org-insert-heading)
	   (insert \"Supportive Material - \" info_node \" (Info)\")
	   (newline)
	   (save-excursion (insert-buffer-substring \"*info*\")
			   (insert
			    (org-link-make-string
			     (concat \"elisp:(Info-goto-node \\\"\" info_node \"\\\")\")
			     \"See this node in its context\")))
	   (kill-whole-line 2))
	 (switch-to-buffer buffer)
	 (when (equal arg '(4))
	   (switch-to-buffer-other-window \"*zetteldesk-scratch*\"))))
" 0 6 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6 9 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 9 12 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 12 13 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-comment-face org-block) help-echo nil src-block t) 13 31 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-comment-face org-block) help-echo nil src-block t) 31 32 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-comment-face org-block) help-echo nil src-block t) 32 36 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 36 41 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 41 44 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 44 97 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 97 102 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 102 105 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 105 173 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 173 178 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 178 181 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 181 249 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 249 256 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 256 265 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 265 266 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 266 280 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-variable-name-face org-block) help-echo nil src-block t) 280 309 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 309 343 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 343 358 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 358 360 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 360 368 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 368 373 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 373 389 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 389 395 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 395 416 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 416 425 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 425 426 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 426 456 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-variable-name-face org-block) help-echo nil src-block t) 456 469 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-variable-name-face org-block) help-echo nil src-block t) 469 479 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 479 844 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 844 852 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 852 857 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 857 873 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 873 879 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 879 900 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 900 917 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 917 918 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 918 933 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 933 941 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 941 1108 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1108 1127 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1127 1134 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 1134 1144 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1144 1150 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 1150 1170 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1170 1177 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 1177 1200 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1200 1208 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 1208 1209 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1209 1222 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 1222 1231 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1231 1236 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1236 1237 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1237 1270 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 1270 1281 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1281 1334 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1334 1342 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 1342 1344 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1344 1353 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1353 1356 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1356 1387 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1387 1409 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 1409 1459 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1459 1478 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1478 1588 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1588 1593 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1593 1594 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1594 1629 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 1629 1631 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1631 1640 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-type-face org-block) help-echo nil src-block t) 1640 1653 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1653 1754 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1754 1772 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 1772 1848 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1848 1857 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1857 1868 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1868 1869 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1869 1872 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 1872 1882 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1882 1884 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1884 1924 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1924 1946 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 1946 1981 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1981 2003 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 2003 2014 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2014 2019 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2019 2020 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2020 2056 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 2056 2067 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2067 2076 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 2076 2094 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 2094 2139 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 2139 2149 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 2149 2186 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 2186 2203 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 2203 2215 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 2215 2241 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 2241 2326 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 2326 2335 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2335 2346 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2346 2356 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2356 2360 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2360 2558 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2558 2563 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2563 2579 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2579 2583 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2583 2721 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2721 2726 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 2726 2799 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2799 2803 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 2803 2811 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2811 2815 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2815 2853 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2853 2858 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2858 2859 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2859 2890 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 2890 2892 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2892 2901 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-type-face org-block) help-echo nil src-block t) 2901 2914 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2914 2958 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 2958 2968 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 2968 3414 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 3414 3432 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 3432 3499 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 3499 3508 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3508 3519 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3519 3520 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3520 3523 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 3523 3533 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3533 3537 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3537 3701 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3701 3703 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3703 3755 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3755 3777 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 3777 3847 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3847 3852 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 3852 3899 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3899 3918 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3918 4029 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4029 4040 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 4040 4041 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4041 4045 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 4045 4057 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4057 4061 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 4061 4082 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4082 4101 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 4101 4137 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4137 4159 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 4159 4171 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4171 4176 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 4176 4177 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4177 4221 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 4221 4232 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4232 4264 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 4264 4295 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 4295 4339 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 4339 4349 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 4349 4664 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 4664 4682 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 4682 4928 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 4928 4937 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4937 4948 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 4948 4958 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4958 4962 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 4962 5034 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5034 5036 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 5036 5088 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5088 5110 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 5110 5179 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5179 5198 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 5198 5309 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5309 5320 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 5320 5321 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5321 5325 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 5325 5367 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5367 5389 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 5389 5399 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5399 5404 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 5404 5405 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5405 5440 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 5440 5442 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5442 5451 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-type-face org-block) help-echo nil src-block t) 5451 5464 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5464 5549 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 5549 5559 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 5559 5768 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 5768 5769 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo "Hidden behind deeper element; move to another line?" src-block t) 5769 5791 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 5791 5809 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 5809 5876 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 5876 5885 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5885 5896 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 5896 5897 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5897 5900 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 5900 5910 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5910 5914 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 5914 5949 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5949 5971 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 5971 6027 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6027 6029 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 6029 6081 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6081 6103 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 6103 6222 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6222 6236 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 6236 6287 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6287 6301 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 6301 6307 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6307 6312 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 6312 6390 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6390 6401 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 6401 6402 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6402 6406 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 6406 6417 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6417 6421 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 6421 6472 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6472 6494 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 6494 6505 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6505 6510 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 6510 6511 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6511 6540 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 6540 6542 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6542 6551 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-type-face org-block) help-echo nil src-block t) 6551 6564 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6564 6604 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 6604 6614 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 6614 6717 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 6717 6718 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo "Hidden behind deeper element; move to another line?" src-block t) 6718 6776 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 6776 6785 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 6785 7222 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 7222 7245 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 7245 7342 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 7342 7360 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 7360 7817 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 7817 7826 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 7826 7837 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 7837 7838 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 7838 7841 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 7841 7851 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 7851 7855 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 7855 7894 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 7894 7913 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 7913 8006 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8006 8008 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 8008 8060 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8060 8082 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 8082 8142 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8142 8150 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 8150 8151 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8151 8154 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 8154 8239 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8239 8258 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 8258 8347 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8347 8371 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 8371 8384 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8384 8392 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 8392 8413 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8413 8417 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 8417 8442 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8442 8445 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 8445 8551 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8551 8566 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 8566 8608 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8608 8614 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 8614 8620 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8620 8624 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 8624 8661 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8661 8666 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 8666 8667 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8667 8698 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 8698 8700 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8700 8709 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-type-face org-block) help-echo nil src-block t) 8709 8722 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8722 8772 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 8772 8782 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 8782 8800 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 8800 8815 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 8815 9057 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 9057 9086 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 9086 9561 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 9561 9575 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 9575 10142 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 10142 10160 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 10160 10220 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 10220 10229 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 10229 10240 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 10240 10241 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 10241 10244 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 10244 10254 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 10254 10257 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 10257 10287 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 10287 10296 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 10296 10338 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 10338 10340 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 10340 10391 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 10391 10413 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 10413 10502 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 10502 10521 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 10521 10610 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 10610 10634 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 10634 10645 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 10645 10654 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 10654 10675 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 10675 10689 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 10689 10715 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 10715 10723 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 10723 10784 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 10784 10810 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 10810 10821 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 10821 10826 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 10826 10836 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 10836 10866 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 10866 10926 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 10926 10930 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 10930 10983 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 10983 11005 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 11005 11010 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 53862) (undo-tree-id618 . -237) (undo-tree-id619 . -237) (undo-tree-id620 . -237) (undo-tree-id621 . -237) (undo-tree-id622 . -237) (undo-tree-id623 . -237) (undo-tree-id624 . -237) (undo-tree-id625 . -237) (undo-tree-id626 . -237) (undo-tree-id627 . -237) (undo-tree-id628 . -237) (undo-tree-id629 . -237) (undo-tree-id630 . -237) (undo-tree-id631 . -237) (undo-tree-id632 . -237) (undo-tree-id633 . -237) (undo-tree-id634 . -237) (undo-tree-id635 . -237) (undo-tree-id636 . -237) (undo-tree-id637 . -237) (undo-tree-id638 . -237) (undo-tree-id639 . -237) (undo-tree-id640 . -237) (undo-tree-id641 . -237) (undo-tree-id642 . -237) (undo-tree-id643 . -237) (undo-tree-id644 . -237) (undo-tree-id645 . -237) (undo-tree-id646 . -237) (undo-tree-id647 . -237) (undo-tree-id648 . -237) (undo-tree-id649 . -237) (undo-tree-id650 . -237) (undo-tree-id651 . -237) (undo-tree-id652 . -237) (undo-tree-id653 . -237) (undo-tree-id654 . -237) (undo-tree-id655 . -237) (undo-tree-id656 . -237) (undo-tree-id657 . -237) (undo-tree-id658 . -237) (undo-tree-id659 . -237) (undo-tree-id660 . -237) (undo-tree-id661 . -237) (undo-tree-id662 . -237) (undo-tree-id663 . -237) (undo-tree-id664 . -237) (undo-tree-id665 . -237) (undo-tree-id666 . -237) (undo-tree-id667 . -237) (undo-tree-id668 . -237) (undo-tree-id669 . -237) (undo-tree-id670 . -237) (undo-tree-id671 . -237) (undo-tree-id672 . -237) (undo-tree-id673 . -237) (undo-tree-id674 . -237) (undo-tree-id675 . -237) (undo-tree-id676 . -237) (undo-tree-id677 . -237) (undo-tree-id678 . -237) (undo-tree-id679 . -237) (undo-tree-id680 . -237) (undo-tree-id681 . -237) (undo-tree-id682 . -237) (undo-tree-id683 . -237) (undo-tree-id684 . -237) (undo-tree-id685 . -237) (undo-tree-id686 . -237) (undo-tree-id687 . -237) (undo-tree-id688 . -237) (undo-tree-id689 . -237) (undo-tree-id690 . -237) (undo-tree-id691 . -237) (undo-tree-id692 . -237) (undo-tree-id693 . -237) (undo-tree-id694 . -237) (undo-tree-id695 . -237) (undo-tree-id696 . -237) (undo-tree-id697 . -237) (undo-tree-id698 . -237) (undo-tree-id699 . -237) (undo-tree-id700 . -237) (undo-tree-id701 . -237) (undo-tree-id702 . -237) (undo-tree-id703 . -237) (undo-tree-id704 . -237) (undo-tree-id705 . -237) (undo-tree-id706 . -237) (undo-tree-id707 . -237) (undo-tree-id708 . -237) (undo-tree-id709 . -237) (undo-tree-id710 . -237) (undo-tree-id711 . -237) (undo-tree-id712 . -237) (undo-tree-id713 . -237) (undo-tree-id714 . -237) (undo-tree-id715 . -237) (undo-tree-id716 . -237) (undo-tree-id717 . -237) (undo-tree-id718 . -237) (undo-tree-id719 . -237) (undo-tree-id720 . -237) (undo-tree-id721 . -237) (undo-tree-id722 . -237) (undo-tree-id723 . -237) (undo-tree-id724 . -237) (undo-tree-id725 . -237) (undo-tree-id726 . -237) (undo-tree-id727 . -237) (undo-tree-id728 . -237) (undo-tree-id729 . -237) (undo-tree-id730 . -237) (undo-tree-id731 . -237) (undo-tree-id732 . -237) (undo-tree-id733 . -237) (undo-tree-id734 . -237) (undo-tree-id735 . -237) (undo-tree-id736 . -237) (undo-tree-id737 . -237) (undo-tree-id738 . -237) (undo-tree-id739 . -237) (undo-tree-id740 . -237) (undo-tree-id741 . -237) (undo-tree-id742 . -237) (undo-tree-id743 . -237) (undo-tree-id744 . -237) (undo-tree-id745 . -237) (undo-tree-id746 . -237) (undo-tree-id747 . -237) (undo-tree-id748 . -237) (undo-tree-id749 . -237) (undo-tree-id750 . -237) (undo-tree-id751 . -237) (undo-tree-id752 . -237) (undo-tree-id753 . -237) (undo-tree-id754 . -237) (undo-tree-id755 . -237) (undo-tree-id756 . -237) (undo-tree-id757 . -237) (undo-tree-id758 . -237) (undo-tree-id759 . -237) (undo-tree-id760 . -237) (undo-tree-id761 . -237) (undo-tree-id762 . -237) (undo-tree-id763 . -237) (undo-tree-id764 . -237) (undo-tree-id765 . -237) (undo-tree-id766 . -237) (undo-tree-id767 . -237) (undo-tree-id768 . -237) (undo-tree-id769 . -237) (undo-tree-id770 . -237) (undo-tree-id771 . -237) (undo-tree-id772 . -237) (undo-tree-id773 . -237) (undo-tree-id774 . -237) (undo-tree-id775 . -237) (undo-tree-id776 . -237) (undo-tree-id777 . -237) (undo-tree-id778 . -237) (undo-tree-id779 . -237) (undo-tree-id780 . -237) (undo-tree-id781 . -237) (undo-tree-id782 . -237) (undo-tree-id783 . -237) (undo-tree-id784 . -237) (undo-tree-id785 . -237) (undo-tree-id786 . -237) (undo-tree-id787 . -237) (undo-tree-id788 . -237) (undo-tree-id789 . -237) (undo-tree-id790 . -237) (undo-tree-id791 . -237) (undo-tree-id792 . -237) (undo-tree-id793 . -237) (undo-tree-id794 . -237) (undo-tree-id795 . -237) (undo-tree-id796 . -237) (undo-tree-id797 . -237) (undo-tree-id798 . -237) (undo-tree-id799 . -237) (undo-tree-id800 . -237) (undo-tree-id801 . -237) (undo-tree-id802 . -237) (undo-tree-id803 . -237) (undo-tree-id804 . -237) (undo-tree-id805 . -237) (undo-tree-id806 . -237) (undo-tree-id807 . -237) (undo-tree-id808 . -237) (undo-tree-id809 . -237) (undo-tree-id810 . -237) (undo-tree-id811 . -237) (undo-tree-id812 . -237) (undo-tree-id813 . -237) (undo-tree-id814 . -237) (undo-tree-id815 . -237) (undo-tree-id816 . -237) (undo-tree-id817 . -237) (undo-tree-id818 . -237) (undo-tree-id819 . -237) (undo-tree-id820 . -237) (undo-tree-id821 . -237) (undo-tree-id822 . -237) (undo-tree-id823 . -237) (undo-tree-id824 . -237) (undo-tree-id825 . -237) 54099 (t 25146 156 605771 94000)) nil (25146 192 321411 22000) 0 nil])
([nil nil ((53862 . 65031)) nil (25146 192 313768 699000) 0 nil])
([nil nil ((65210 . 65211) (t 25146 192 339607 896000) 65209) nil (25146 205 758031 706000) 0 nil])
([nil nil ((65186 . 65242) (#("
  (provide 'zetteldesk)


" 0 4 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4 11 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 11 13 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 23 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 23 24 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 24 25 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 25 27 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 65186) (undo-tree-id826 . -24) (undo-tree-id827 . -25) (undo-tree-id828 . -25) (undo-tree-id829 . -24) (undo-tree-id830 . -24) (undo-tree-id831 . -24) (undo-tree-id832 . -24) (undo-tree-id833 . -24) (undo-tree-id834 . -24) (undo-tree-id835 . -24) (undo-tree-id836 . -23) (undo-tree-id837 . -24) (undo-tree-id838 . -23) (undo-tree-id839 . -24) (undo-tree-id840 . -23) (undo-tree-id841 . -23) (undo-tree-id842 . -23) (undo-tree-id843 . -23) (undo-tree-id844 . -23) (undo-tree-id845 . -23) (undo-tree-id846 . -23) (undo-tree-id847 . -23) (undo-tree-id848 . -23) (undo-tree-id849 . -23) (undo-tree-id850 . -23) (undo-tree-id851 . -23) (undo-tree-id852 . -25) (undo-tree-id853 . -25) (undo-tree-id854 . -23) (undo-tree-id855 . -25) (undo-tree-id856 . -25) (undo-tree-id857 . -25) (undo-tree-id858 . -25) (undo-tree-id859 . -25) (undo-tree-id860 . -25) (undo-tree-id861 . -25) (undo-tree-id862 . -25) (undo-tree-id863 . -25) (undo-tree-id864 . -25) (undo-tree-id865 . -25) (undo-tree-id866 . -25) (undo-tree-id867 . -25) (undo-tree-id868 . -25) (undo-tree-id869 . -25) (undo-tree-id870 . -25) (undo-tree-id871 . -25) (undo-tree-id872 . -25) (undo-tree-id873 . -25) (undo-tree-id874 . -25) (undo-tree-id875 . -25) (undo-tree-id876 . -25) (undo-tree-id877 . -25) (undo-tree-id878 . -25) (undo-tree-id879 . 2) (undo-tree-id880 . -25) (undo-tree-id881 . -25) (undo-tree-id882 . -25) (undo-tree-id883 . -25) (undo-tree-id884 . -25) (undo-tree-id885 . -25) (undo-tree-id886 . -25) (undo-tree-id887 . -25) (undo-tree-id888 . -25) (undo-tree-id889 . -25) (undo-tree-id890 . -25) (undo-tree-id891 . -25) (undo-tree-id892 . -25) (undo-tree-id893 . -25) (undo-tree-id894 . -25) (undo-tree-id895 . -25) (undo-tree-id896 . -25) (undo-tree-id897 . -25) (undo-tree-id898 . -25) (undo-tree-id899 . -25) (undo-tree-id900 . -25) (undo-tree-id901 . -25) (undo-tree-id902 . -25) (undo-tree-id903 . -25) (undo-tree-id904 . -25) (undo-tree-id905 . -25) (undo-tree-id906 . -25) (undo-tree-id907 . -25) (undo-tree-id908 . -25) (undo-tree-id909 . -25) (undo-tree-id910 . -25) (undo-tree-id911 . -25) (undo-tree-id912 . -25) (undo-tree-id913 . -25) (undo-tree-id914 . -25) (undo-tree-id915 . -25) (undo-tree-id916 . -25) (undo-tree-id917 . -25) (undo-tree-id918 . -25) (undo-tree-id919 . -25) (undo-tree-id920 . -25) (undo-tree-id921 . -25) (undo-tree-id922 . -25) (undo-tree-id923 . -25) (undo-tree-id924 . -25) (undo-tree-id925 . -25) (undo-tree-id926 . -25) (undo-tree-id927 . -25) (undo-tree-id928 . -25) (undo-tree-id929 . -25) (undo-tree-id930 . -25) (undo-tree-id931 . -25) (undo-tree-id932 . -25) (undo-tree-id933 . -25) (undo-tree-id934 . -25) (undo-tree-id935 . -25) (undo-tree-id936 . -25) (undo-tree-id937 . -25) (undo-tree-id938 . -25) (undo-tree-id939 . -25) (undo-tree-id940 . -25) (undo-tree-id941 . -25) (undo-tree-id942 . -25) (undo-tree-id943 . -25) (undo-tree-id944 . -25) (undo-tree-id945 . -25) (undo-tree-id946 . -25) (undo-tree-id947 . -25) (undo-tree-id948 . -25) (undo-tree-id949 . -25) (undo-tree-id950 . -25) (undo-tree-id951 . -25) (undo-tree-id952 . -25) (undo-tree-id953 . -25) (undo-tree-id954 . -25) (undo-tree-id955 . -25) (undo-tree-id956 . -25) (undo-tree-id957 . -25) (undo-tree-id958 . -25) (undo-tree-id959 . -25) (undo-tree-id960 . -25) (undo-tree-id961 . -25) (undo-tree-id962 . -25) (undo-tree-id963 . -25) (undo-tree-id964 . -25) (undo-tree-id965 . -25) (undo-tree-id966 . -25) (undo-tree-id967 . -25) (undo-tree-id968 . -25) (undo-tree-id969 . -25) (undo-tree-id970 . -25) (undo-tree-id971 . -25) (undo-tree-id972 . -25) (undo-tree-id973 . -25) (undo-tree-id974 . -25) (undo-tree-id975 . -25) (undo-tree-id976 . -25) (undo-tree-id977 . -25) (undo-tree-id978 . -25) (undo-tree-id979 . -25) 65211) nil (25146 205 758004 607000) 0 nil])
([nil nil ((65631 . 65636) (65610 . 65631) (#("u" 0 1 (fontified t)) . -65610) (undo-tree-id293 . -1) 65611 (65607 . 65611) (#(" " 0 1 (fontified t)) . -65607) (undo-tree-id294 . -1) 65608 (65603 . 65608) (#("i" 0 1 (fontified t)) . -65603) (undo-tree-id295 . -1) (#("f" 0 1 (fontified t)) . -65604) (undo-tree-id296 . -1) 65605 (65602 . 65605) (#("f" 0 1 (fontified t)) . -65602) (undo-tree-id297 . -1) (#("i" 0 1 (fontified t)) . -65603) (undo-tree-id298 . -1) 65604 (65602 . 65604) (65599 . 65602) (65578 . 65599) (#("b" 0 1 (fontified t)) . -65578) (undo-tree-id299 . -1) (#("e" 0 1 (fontified t)) . -65579) (undo-tree-id300 . -1) 65580 (65572 . 65580) (#("h" 0 1 (fontified t)) . -65572) (undo-tree-id301 . -1) 65573 (65571 . 65573) (65550 . 65571) (#("e" 0 1 (fontified t)) . -65550) (undo-tree-id302 . -1) (#("s" 0 1 (fontified t)) . -65551) (undo-tree-id303 . -1) 65552 (#("k" 0 1 (fontified t)) . -65552) (undo-tree-id304 . -1) 65553 (65539 . 65553) (#("t" 0 1 (fontified t)) . -65539) (undo-tree-id305 . -1) (#(" " 0 1 (fontified t)) . -65540) (undo-tree-id306 . -1) 65541 (65540 . 65541) (#(" " 0 1 (fontified t)) . -65540) (undo-tree-id307 . -1) 65541 (65539 . 65541) (#(" " 0 1 (fontified t)) . -65539) (undo-tree-id308 . -1) (#("z" 0 1 (fontified t)) . -65540) (undo-tree-id309 . -1) 65541 (65525 . 65541) (65504 . 65525) (65500 . 65504) (#("m" 0 1 (fontified t)) . -65500) (undo-tree-id310 . -1) (#("e" 0 1 (fontified t)) . -65501) (undo-tree-id311 . -1) 65502 (65491 . 65502) (#("t" 0 1 (fontified t)) . -65491) (undo-tree-id312 . -1) 65492 (65478 . 65492) (#(" " 0 1 (fontified t)) . -65478) (undo-tree-id313 . -1) (#("w" 0 1 (fontified t)) . -65479) (undo-tree-id314 . -1) 65480 (65471 . 65480) (65450 . 65471) (65445 . 65450) (#(" " 0 1 (fontified t)) . -65445) (undo-tree-id315 . -1) (#("I" 0 1 (fontified t)) . -65446) (undo-tree-id316 . -1) (#("a" 0 1 (fontified t)) . -65447) (undo-tree-id317 . -1) 65448 (65445 . 65448) (#("i" 0 1 (fontified t)) . -65445) (undo-tree-id318 . -1) (#(" " 0 1 (fontified t)) . -65446) (undo-tree-id319 . -1) (#("a" 0 1 (fontified t)) . -65447) (undo-tree-id320 . -1) 65448 (65437 . 65448) (65434 . 65437) (#("   " 0 3 (fontified nil)) . 65433) (undo-tree-id321 . -3) (65433 . 65437) (#(" " 0 1 (fontified nil)) . 65432) (undo-tree-id322 . -1) (65433 . 65434) (65431 . 65433) (65410 . 65431) (#("w" 0 1 (fontified t)) . -65410) (undo-tree-id323 . -1) (#("e" 0 1 (fontified t)) . -65411) (undo-tree-id324 . -1) (#("e" 0 1 (fontified t)) . -65412) (undo-tree-id325 . -1) 65413 (65411 . 65413) (#("e" 0 1 (fontified t)) . -65411) (undo-tree-id326 . -1) (#("n" 0 1 (fontified t)) . -65412) (undo-tree-id327 . -1) 65413 (65409 . 65413) (#("t" 0 1 (fontified t)) . -65409) (undo-tree-id328 . -1) (#("w" 0 1 (fontified t)) . -65410) (undo-tree-id329 . -1) 65411 (65407 . 65411) (#("r" 0 1 (fontified t)) . -65407) (undo-tree-id330 . -1) 65408 (65402 . 65408) (#("e" 0 1 (fontified t)) . -65402) (undo-tree-id331 . -1) 65403 (65392 . 65403) (#(" " 0 1 (fontified t)) . -65392) (undo-tree-id332 . -1) (#("r" 0 1 (fontified t)) . -65393) (undo-tree-id333 . -1) 65394 (65393 . 65394) (#("r" 0 1 (fontified t)) . -65393) (undo-tree-id334 . -1) 65394 (65388 . 65394) (#("u" 0 1 (fontified t)) . -65388) (undo-tree-id335 . -1) 65389 (65378 . 65389) (65375 . 65378) (65369 . 65375) (#("." 0 1 (fontified t)) . -65369) (undo-tree-id336 . -1) 65370 (65365 . 65370) (#("i" 0 1 (fontified t)) . -65365) (undo-tree-id337 . -1) 65366 (65363 . 65366) (#("f" 0 1 (fontified t)) . -65363) (undo-tree-id338 . -1) 65364 (65357 . 65364) (#("i" 0 1 (fontified t)) . -65357) (undo-tree-id339 . -1) (#("e" 0 1 (fontified t)) . -65358) (undo-tree-id340 . -1) 65359 (65356 . 65359) (65335 . 65356) (#("i" 0 1 (fontified t)) . -65335) (undo-tree-id341 . -1) (#("s" 0 1 (fontified t)) . -65336) (undo-tree-id342 . -1) (#(" " 0 1 (fontified t)) . -65337) (undo-tree-id343 . -1) (#("n" 0 1 (fontified t)) . -65338) (undo-tree-id344 . -1) (#("i" 0 1 (fontified t)) . -65339) (undo-tree-id345 . -1) (#("t" 0 1 (fontified t)) . -65340) (undo-tree-id346 . -1) 65341 (65338 . 65341) (65327 . 65338) (65306 . 65327) (#("s" 0 1 (fontified t)) . -65306) (undo-tree-id347 . -1) 65307 (65304 . 65307) (65297 . 65304) (#("t" 0 1 (fontified t)) . -65297) (undo-tree-id348 . -1) (#("e" 0 1 (fontified t)) . -65298) (undo-tree-id349 . -1) (#("t" 0 1 (fontified t)) . -65299) (undo-tree-id350 . -1) 65300 (65296 . 65300) (#("(" 0 1 (fontified nil)) . -65296) (undo-tree-id351 . -1) (#(")" 0 1 (fontified t)) . 65297) (65279 . 65298) (#("e" 0 1 (fontified t)) . -65279) (undo-tree-id352 . -1) (#("m" 0 1 (fontified t)) . -65280) (undo-tree-id353 . -1) 65281 (65276 . 65281) (#("o" 0 1 (fontified t)) . -65276) (undo-tree-id354 . -1) (#("r" 0 1 (fontified t)) . -65277) (undo-tree-id355 . -1) 65278 (65265 . 65278) (65259 . 65265) (#("a" 0 1 (fontified t)) . -65259) (undo-tree-id356 . -1) 65260 (65249 . 65260) (#("a" 0 1 (fontified t)) . -65249) (undo-tree-id357 . -1) 65250 (65243 . 65250) (#("h" 0 1 (fontified t)) . -65243) (undo-tree-id358 . -1) (#("c" 0 1 (fontified t)) . -65244) (undo-tree-id359 . -1) 65245 (65224 . 65245) (65223 . 65224) (#("," 0 1 (fontified t)) . -65223) (undo-tree-id360 . -1) 65224 (65216 . 65224) (#("o" 0 1 (fontified t)) . -65216) (undo-tree-id361 . -1) (#("r" 0 1 (fontified t)) . -65217) (undo-tree-id362 . -1) (#("m" 0 1 (fontified t)) . -65218) (undo-tree-id363 . -1) (#(" " 0 1 (fontified t)) . -65219) (undo-tree-id364 . -1) 65220 (65209 . 65220) (#("l" 0 1 (fontified t)) . -65209) (undo-tree-id365 . -1) 65210 (65207 . 65210) (65205 . 65207) (#("a" 0 1 (fontified t)) . -65205) (undo-tree-id366 . -1) (#("n" 0 1 (fontified t)) . -65206) (undo-tree-id367 . -1) 65207 (65191 . 65207) (65160 . 65162) (65175 . 65189) (65174 . 65175) (65153 . 65174) (#(" " 0 1 (fontified t)) . -65153) (undo-tree-id368 . -1) (#("w" 0 1 (fontified t)) . -65154) (undo-tree-id369 . -1) 65155 (#("r" 0 1 (fontified t)) . -65155) (undo-tree-id370 . -1) (#("i" 0 1 (fontified t)) . -65156) (undo-tree-id371 . -1) (#("t" 0 1 (fontified t)) . -65157) (undo-tree-id372 . -1) (#("i" 0 1 (fontified t)) . -65158) (undo-tree-id373 . -1) (#("n" 0 1 (fontified t)) . -65159) (undo-tree-id374 . -1) (#("g" 0 1 (fontified t)) . -65160) (undo-tree-id375 . -1) (#(" " 0 1 (fontified t)) . -65161) (undo-tree-id376 . -1) (#("m" 0 1 (fontified t)) . -65162) (undo-tree-id377 . -1) (#("a" 0 1 (fontified t)) . -65163) (undo-tree-id378 . -1) (#("r" 0 1 (fontified t)) . -65164) (undo-tree-id379 . -1) (#("g" 0 1 (fontified t)) . -65165) (undo-tree-id380 . -1) (#("i" 0 1 (fontified t)) . -65166) (undo-tree-id381 . -1) (#("n" 0 1 (fontified t)) . -65167) (undo-tree-id382 . -1) (#("a" 0 1 (fontified t)) . -65168) (undo-tree-id383 . -1) (#("l" 0 1 (fontified t)) . -65169) (undo-tree-id384 . -1) (#(" " 0 1 (fontified t)) . -65170) (undo-tree-id385 . -1) (#("n" 0 1 (fontified t)) . -65171) (undo-tree-id386 . -1) (#("o" 0 1 (fontified t)) . -65172) (undo-tree-id387 . -1) (#("t" 0 1 (fontified t)) . -65173) (undo-tree-id388 . -1) (#("e" 0 1 (fontified t)) . -65174) (undo-tree-id389 . -1) (#("s" 0 1 (fontified t)) . -65175) (undo-tree-id390 . -1) 65176 (65171 . 65176) (65150 . 65171) (#("g" 0 1 (fontified t)) . -65150) (undo-tree-id391 . -1) 65151 (65142 . 65151) (#("a" 0 1 (fontified t)) . -65142) (undo-tree-id392 . -1) (#("p" 0 1 (fontified t)) . -65143) (undo-tree-id393 . -1) 65144 (65142 . 65144) (#("a" 0 1 (fontified t)) . -65142) (undo-tree-id394 . -1) (#("p" 0 1 (fontified t)) . -65143) (undo-tree-id395 . -1) (#("c" 0 1 (fontified t)) . -65144) (undo-tree-id396 . -1) 65145 (65142 . 65145) (#("a" 0 1 (fontified t)) . -65142) (undo-tree-id397 . -1) (#("p" 0 1 (fontified t)) . -65143) (undo-tree-id398 . -1) 65144 (65126 . 65144) (65122 . 65126) (65112 . 65122) (65108 . 65112) (#("k" 0 1 (fontified t face org-level-2)) . -65108) (undo-tree-id399 . -1) (#("r" 0 1 (fontified t face org-level-2)) . -65109) (undo-tree-id400 . -1) (#(" " 0 1 (fontified t face org-level-2)) . -65110) (undo-tree-id401 . -1) 65111 (65108 . 65111) (#("k" 0 1 (fontified t face org-level-2)) . -65108) (undo-tree-id402 . -1) (#("r" 0 1 (fontified t face org-level-2)) . -65109) (undo-tree-id403 . -1) 65110 (65104 . 65110) (#("m" 0 1 (fontified t face org-level-2)) . -65104) (undo-tree-id404 . -1) (#("a" 0 1 (fontified t face org-level-2)) . -65105) (undo-tree-id405 . -1) (#("r" 0 1 (fontified t face org-level-2)) . -65106) (undo-tree-id406 . -1) (#("g" 0 1 (fontified t face org-level-2)) . -65107) (undo-tree-id407 . -1) (#("i" 0 1 (fontified t face org-level-2)) . -65108) (undo-tree-id408 . -1) 65109 (65100 . 65109) (65097 . 65100) (65098 . 65101) (#("   " 0 3 (fontified nil)) . 65097) (undo-tree-id409 . -3) (65100 . 65101) (65096 . 65100) (t 25146 205 779797 121000) 65096) nil (25146 3656 858133 854000) 0 nil])
([nil nil ((65711 . 65713) (65706 . 65711) (65685 . 65706) (#(" " 0 1 (fontified t)) . -65685) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) 65686 (65675 . 65686) (#("p" 0 1 (fontified t)) . -65675) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (#("o" 0 1 (fontified t)) . -65676) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (#("u" 0 1 (fontified t)) . -65677) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) 65678 (65666 . 65678) (65665 . 65666) (65637 . 65638) (65658 . 65664) (#(" " 0 1 (fontified t)) . -65658) (undo-tree-id292 . -1) 65659 (65657 . 65659) (65636 . 65657)) nil (25146 3656 857845 753000) 0 nil])
([nil nil ((65750 . 65757) (65729 . 65750) (#("(" 0 1 (fontified t)) . 65711) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . 1) (undo-tree-id76 . -1) (#(")" 0 1 (fontified t)) . -65730) (undo-tree-id77 . 1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . 1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) 65731 (65727 . 65730) (#("y" 0 1 (fontified t)) . -65727) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) 65728 (65712 . 65728)) nil (25146 3656 857531 113000) 0 nil])
([nil nil ((66032 . 66051) (66014 . 66032) (65993 . 66014) (65973 . 65993) (65952 . 65973) (#("W" 0 1 (fontified t)) . -65952) (undo-tree-id0 . -1) (#("a" 0 1 (fontified t)) . -65953) (undo-tree-id1 . -1) (#("n" 0 1 (fontified t)) . -65954) (undo-tree-id2 . -1) 65955 (65943 . 65955) (#("m" 0 1 (fontified t)) . -65943) (undo-tree-id3 . -1) (#("r" 0 1 (fontified t)) . -65944) (undo-tree-id4 . -1) 65945 (65937 . 65945) (65934 . 65937) (#("   " 0 1 (fontified nil) 1 3 (fontified nil)) . 65933) (undo-tree-id5 . -3) (65932 . 65937) (#(" " 0 1 (fontified t)) . -65932) (undo-tree-id6 . -1) 65933 (65931 . 65933) (65927 . 65930) (#("t" 0 1 (fontified t)) . -65927) (undo-tree-id7 . -1) 65928 (65916 . 65928) (65911 . 65916) (#("v" 0 1 (fontified t)) . -65911) (undo-tree-id8 . -1) (#("e" 0 1 (fontified t)) . -65912) (undo-tree-id9 . -1) 65913 (65901 . 65913) (65883 . 65901) (65880 . 65884) (65859 . 65880) (65842 . 65859) (65821 . 65842) (65818 . 65821) (#("k" 0 1 (fontified t)) . -65818) (undo-tree-id10 . -1) (#("s" 0 1 (fontified t)) . -65819) (undo-tree-id11 . -1) 65820 (65801 . 65820) (#("a" 0 1 (fontified t)) . -65801) (undo-tree-id12 . -1) 65802 (65800 . 65802) (65787 . 65800) (#("e" 0 1 (fontified t)) . -65787) (undo-tree-id13 . -1) 65788 (65778 . 65788) (#("i" 0 1 (fontified t)) . -65778) (undo-tree-id14 . -1) 65779 (65774 . 65779) (#("n" 0 1 (fontified t)) . -65774) (undo-tree-id15 . -1) (#("e" 0 1 (fontified t)) . -65775) (undo-tree-id16 . -1) 65776 (65771 . 65776) (#("
" 0 1 (fontified t)) . -65771) (undo-tree-id17 . -1) (#("
" 0 1 (fontified t)) . -65772) (undo-tree-id18 . -1) (#(" " 0 1 (fontified t)) . -65773) (undo-tree-id19 . -1) (#(" " 0 1 (fontified t)) . -65774) (undo-tree-id20 . -1) (#(" " 0 1 (fontified t)) . -65775) (undo-tree-id21 . -1) (#("T" 0 1 (fontified t)) . -65776) (undo-tree-id22 . -1) (#("h" 0 1 (fontified t)) . -65777) (undo-tree-id23 . -1) 65778 (65776 . 65778) (65773 . 65776) (#("   " 0 3 (fontified nil)) . 65772) (undo-tree-id24 . -3) (65771 . 65776) (65763 . 65771) (#("n" 0 1 (fontified t)) . -65763) (undo-tree-id25 . -1) (#("e" 0 1 (fontified t)) . -65764) (undo-tree-id26 . -1) 65765 (65758 . 65765) (#("a" 0 1 (fontified t)) . -65758) (undo-tree-id27 . -1) (#("o" 0 1 (fontified t)) . -65759) (undo-tree-id28 . -1) 65760 (65757 . 65760)) nil (25146 3656 856739 98000) 0 nil])
([nil nil ((66174 . 66183) (#("m" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -66174) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (#("a" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -66175) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (#("r" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -66176) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (#("g" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -66177) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) 66178 (66174 . 66178) (66164 . 66174) (#("t" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -66164) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) 66165 (66157 . 66165) (#("n" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -66157) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (#("a" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -66158) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (#("g" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -66159) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) 66160 (66149 . 66160) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 66149 66183 nil nil nil t #s(yas--field 2 66184 66184 nil nil nil nil nil)) #s(yas--field 2 66184 66184 nil nil nil nil nil)) nil 0 nil #s(yas--field 2 66184 66184 nil nil nil nil nil) nil nil)) (66151 . 66154) (66137 . 66160) (#("\\s" 0 2 (fontified t)) . 66137) (undo-tree-id634 . -2) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -2) (undo-tree-id643 . -1) (undo-tree-id644 . -2) (undo-tree-id645 . -2) (undo-tree-id646 . -2) (undo-tree-id647 . -2) (undo-tree-id648 . -2) (undo-tree-id649 . -2) (undo-tree-id650 . -2) (undo-tree-id651 . -2) 66139 (66137 . 66139) (66134 . 66137) (#("   " 0 3 (fontified nil)) . 66133) (undo-tree-id652 . -3) (undo-tree-id653 . -3) (undo-tree-id654 . -3) (undo-tree-id655 . -3) (undo-tree-id656 . -3) (undo-tree-id657 . -3) (undo-tree-id658 . -3) (undo-tree-id659 . -3) (undo-tree-id660 . -3) (66132 . 66137) (66124 . 66132) (#("e" 0 1 (fontified t)) . -66124) (undo-tree-id661 . -1) 66125 (66121 . 66125) (#("-" 0 1 (fontified t)) . -66121) (undo-tree-id662 . -1) 66122 (66116 . 66122) (66111 . 66116) (66090 . 66111) (66069 . 66090) (#("h" 0 1 (fontified t)) . -66069) (undo-tree-id663 . -1) 66070 (66058 . 66070) (66056 . 66058) (#("n" 0 1 (fontified t)) . -66056) (undo-tree-id664 . -1) (#("o" 0 1 (fontified t)) . -66057) (undo-tree-id665 . -1) (#("t" 0 1 (fontified t)) . -66058) (undo-tree-id666 . -1) (#("e" 0 1 (fontified t)) . -66059) (undo-tree-id667 . -1) (#(" " 0 1 (fontified t)) . -66060) (undo-tree-id668 . -1) 66061 (66051 . 66061) (t 25146 3656 876454 262000)) nil (25146 3724 575741 795000) 0 nil])
([nil nil ((apply yas--snippet-revive 66137 66197 #s(yas--snippet nil (#s(yas--field 1 66149 66183 nil nil nil t #s(yas--field 2 66184 66184 nil nil nil nil nil)) #s(yas--field 2 66184 66184 nil nil nil nil nil)) nil 0 nil #s(yas--field 2 66184 66184 nil nil nil nil nil) nil nil))) nil (25146 4213 552494 747000) 0 nil])
([nil nil ((3233 . 3234) (t 25146 3724 597340 893000)) nil (25146 4213 552489 997000) 0 nil])
([nil nil ((3286 . 3287) (#(")" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -3286) (3286 . 3287)) nil (25146 4213 552474 842000) 0 nil])
([nil nil ((66186 . 66431) (#("
" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 66186) 66013 (t 25146 4213 577052 794000)) nil (25146 4312 639876 181000) 0 nil])
([nil nil ((66430 . 66431) 66429) nil (25146 4312 639862 492000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -66347) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) 66348 (#(")" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -66366) (undo-tree-id690 . -1) (undo-tree-id691 . 1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) 66367 (t 25146 4312 658340 533000)) nil (25146 4721 222401 875000) 0 nil])
([nil nil ((66186 . 67655) (#("
     (defun zetteldesk-remark-mark (beg end)
       \"\"
       (interactive (org-remark-region-or-word))
       (let ((org-remark-notes-file-name
	      (concat org-roam-directory \"zetteldesk-margin-notes.org\")))
	 (org-remark-mark beg end)))

" 0 7 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7 12 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12 13 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 35 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 35 53 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 53 55 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 55 64 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 64 75 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 75 113 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 113 116 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 116 180 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 180 209 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 209 242 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 242 243 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 243 244 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 66186) (undo-tree-id1290 . 32) (undo-tree-id1291 . -243) (undo-tree-id1292 . -243) (undo-tree-id1293 . -241) (undo-tree-id1294 . -161) (undo-tree-id1295 . -211) (undo-tree-id1296 . -211) (undo-tree-id1297 . -211) (undo-tree-id1298 . -211) (undo-tree-id1299 . -211) (undo-tree-id1300 . -211) (undo-tree-id1301 . -211) (undo-tree-id1302 . -211) (undo-tree-id1303 . -211) (undo-tree-id1304 . -211) (undo-tree-id1305 . -211) (undo-tree-id1306 . -211) (undo-tree-id1307 . -211) (undo-tree-id1308 . -211) (undo-tree-id1309 . -211) (undo-tree-id1310 . -211) (undo-tree-id1311 . -211) (undo-tree-id1312 . -211) (undo-tree-id1313 . -211) (undo-tree-id1314 . -211) (undo-tree-id1315 . -211) (undo-tree-id1316 . -211) (undo-tree-id1317 . -211) (undo-tree-id1318 . -211) (undo-tree-id1319 . -211) (undo-tree-id1320 . -211) (undo-tree-id1321 . -211) (undo-tree-id1322 . -211) (undo-tree-id1323 . -244) (undo-tree-id1324 . -244) (undo-tree-id1325 . -244) (undo-tree-id1326 . -244) (undo-tree-id1327 . -244) (undo-tree-id1328 . -244) (undo-tree-id1329 . -244) (undo-tree-id1330 . -244) (undo-tree-id1331 . -244) (undo-tree-id1332 . -244) (undo-tree-id1333 . -244) (undo-tree-id1334 . -244) (undo-tree-id1335 . -244) (undo-tree-id1336 . -243) (undo-tree-id1337 . -243) (undo-tree-id1338 . -244) (undo-tree-id1339 . -244) (undo-tree-id1340 . -244) (undo-tree-id1341 . -244) (undo-tree-id1342 . -244) (undo-tree-id1343 . -244) (undo-tree-id1344 . -244) (undo-tree-id1345 . -244) (undo-tree-id1346 . -244) (undo-tree-id1347 . -244) (undo-tree-id1348 . -244) (undo-tree-id1349 . -244) (undo-tree-id1350 . -244) (undo-tree-id1351 . -244) (undo-tree-id1352 . -243) (undo-tree-id1353 . -244) (undo-tree-id1354 . -243) (undo-tree-id1355 . -243) (undo-tree-id1356 . -243) (undo-tree-id1357 . -243) (undo-tree-id1358 . -243) (undo-tree-id1359 . -243) (undo-tree-id1360 . -243) (undo-tree-id1361 . -243) (undo-tree-id1362 . -243) (undo-tree-id1363 . -243) (undo-tree-id1364 . -243) (undo-tree-id1365 . -243) (undo-tree-id1366 . -243) (undo-tree-id1367 . -243) (undo-tree-id1368 . -243) (undo-tree-id1369 . -243) (undo-tree-id1370 . -243) (undo-tree-id1371 . -243) (undo-tree-id1372 . -243) (undo-tree-id1373 . -243) (undo-tree-id1374 . -243) (undo-tree-id1375 . -243) (undo-tree-id1376 . -243) (undo-tree-id1377 . -243) (undo-tree-id1378 . -243) (undo-tree-id1379 . -243) (undo-tree-id1380 . -243) (undo-tree-id1381 . -243) (undo-tree-id1382 . -243) (undo-tree-id1383 . -243) (undo-tree-id1384 . -243) (undo-tree-id1385 . -243) (undo-tree-id1386 . -243) (undo-tree-id1387 . -243) (undo-tree-id1388 . -243) (undo-tree-id1389 . -243) (undo-tree-id1390 . -243) 66429 (t 25146 4722 830322 455000)) nil (25146 14260 624151 203000) 0 nil] [nil nil ((66186 . 66523) (#("
     (defun zetteldesk-remark-mark (beg end)
       \"\"
       (interactive (org-remark-region-or-word))
       (let ((org-remark-notes-file-name
	      (concat org-roam-directory \"zetteldesk-margin-notes.org\")))
	 (org-remark-mark beg end)))

" 0 7 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7 12 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12 13 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 35 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 35 53 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 53 55 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 55 64 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 64 75 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 75 113 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 113 116 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 116 180 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 180 209 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 209 242 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 242 243 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 243 244 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 66186) (undo-tree-id707 . -212) (undo-tree-id708 . 32) (undo-tree-id709 . -243) (undo-tree-id710 . -243) (undo-tree-id711 . -243) (undo-tree-id712 . -243) (undo-tree-id713 . -243) (undo-tree-id714 . -243) (undo-tree-id715 . -243) (undo-tree-id716 . -243) (undo-tree-id717 . -243) (undo-tree-id718 . -243) (undo-tree-id719 . -243) (undo-tree-id720 . -241) (undo-tree-id721 . -161) (undo-tree-id722 . -161) (undo-tree-id723 . -241) (undo-tree-id724 . -241) (undo-tree-id725 . -241) (undo-tree-id726 . -241) (undo-tree-id727 . -241) (undo-tree-id728 . -211) (undo-tree-id729 . -211) (undo-tree-id730 . -241) (undo-tree-id731 . -241) (undo-tree-id732 . -241) (undo-tree-id733 . -241) (undo-tree-id734 . -212) (undo-tree-id735 . -212) (undo-tree-id736 . -212) (undo-tree-id737 . -212) (undo-tree-id738 . -212) (undo-tree-id739 . -212) (undo-tree-id740 . -212) (undo-tree-id741 . -211) (undo-tree-id742 . -212) (undo-tree-id743 . -211) (undo-tree-id744 . -212) (undo-tree-id745 . -211) (undo-tree-id746 . -211) (undo-tree-id747 . -211) (undo-tree-id748 . -211) (undo-tree-id749 . -211) (undo-tree-id750 . -211) (undo-tree-id751 . -211) (undo-tree-id752 . -211) (undo-tree-id753 . -211) (undo-tree-id754 . -211) (undo-tree-id755 . -211) (undo-tree-id756 . -211) (undo-tree-id757 . -212) (undo-tree-id758 . -211) (undo-tree-id759 . -212) (undo-tree-id760 . -212) (undo-tree-id761 . -212) (undo-tree-id762 . -212) (undo-tree-id763 . -212) (undo-tree-id764 . -212) (undo-tree-id765 . -212) (undo-tree-id766 . -212) (undo-tree-id767 . -212) (undo-tree-id768 . -212) (undo-tree-id769 . -212) (undo-tree-id770 . -212) (undo-tree-id771 . -211) (undo-tree-id772 . -211) (undo-tree-id773 . -211) (undo-tree-id774 . -211) (undo-tree-id775 . -211) (undo-tree-id776 . -211) (undo-tree-id777 . -211) (undo-tree-id778 . -211) (undo-tree-id779 . -211) (undo-tree-id780 . -211) (undo-tree-id781 . -211) (undo-tree-id782 . -211) (undo-tree-id783 . -211) (undo-tree-id784 . -211) (undo-tree-id785 . -211) (undo-tree-id786 . -211) (undo-tree-id787 . -211) (undo-tree-id788 . -211) (undo-tree-id789 . -211) (undo-tree-id790 . -211) (undo-tree-id791 . -211) (undo-tree-id792 . -211) (undo-tree-id793 . -211) (undo-tree-id794 . -211) (undo-tree-id795 . -211) (undo-tree-id796 . -211) (undo-tree-id797 . -211) (undo-tree-id798 . -211) (undo-tree-id799 . -211) (undo-tree-id800 . -211) (undo-tree-id801 . -211) (undo-tree-id802 . -211) (undo-tree-id803 . -211) (undo-tree-id804 . -211) (undo-tree-id805 . -211) (undo-tree-id806 . -211) (undo-tree-id807 . -211) (undo-tree-id808 . -211) (undo-tree-id809 . -211) (undo-tree-id810 . -211) (undo-tree-id811 . -211) (undo-tree-id812 . -211) (undo-tree-id813 . -211) (undo-tree-id814 . -211) (undo-tree-id815 . -211) (undo-tree-id816 . -211) (undo-tree-id817 . -211) (undo-tree-id818 . -211) (undo-tree-id819 . -211) (undo-tree-id820 . -211) (undo-tree-id821 . -211) (undo-tree-id822 . -211) (undo-tree-id823 . -211) (undo-tree-id824 . -211) (undo-tree-id825 . -211) (undo-tree-id826 . -211) (undo-tree-id827 . -211) (undo-tree-id828 . -211) (undo-tree-id829 . -211) (undo-tree-id830 . -211) (undo-tree-id831 . -211) (undo-tree-id832 . -211) (undo-tree-id833 . -211) (undo-tree-id834 . -211) (undo-tree-id835 . -211) (undo-tree-id836 . -211) (undo-tree-id837 . -211) (undo-tree-id838 . -211) (undo-tree-id839 . -211) (undo-tree-id840 . -211) (undo-tree-id841 . -211) (undo-tree-id842 . -211) (undo-tree-id843 . -211) (undo-tree-id844 . -211) (undo-tree-id845 . -211) (undo-tree-id846 . -211) (undo-tree-id847 . -211) (undo-tree-id848 . -211) (undo-tree-id849 . -211) (undo-tree-id850 . -211) (undo-tree-id851 . -211) (undo-tree-id852 . -211) (undo-tree-id853 . -211) (undo-tree-id854 . -211) (undo-tree-id855 . -211) (undo-tree-id856 . -211) (undo-tree-id857 . -211) (undo-tree-id858 . -211) (undo-tree-id859 . -211) (undo-tree-id860 . -211) (undo-tree-id861 . -211) (undo-tree-id862 . -211) (undo-tree-id863 . -211) (undo-tree-id864 . -211) (undo-tree-id865 . -211) (undo-tree-id866 . -211) (undo-tree-id867 . -211) (undo-tree-id868 . -211) (undo-tree-id869 . -211) (undo-tree-id870 . -211) (undo-tree-id871 . -211) (undo-tree-id872 . -211) (undo-tree-id873 . -211) (undo-tree-id874 . -211) (undo-tree-id875 . -211) (undo-tree-id876 . -211) (undo-tree-id877 . -211) (undo-tree-id878 . -211) (undo-tree-id879 . -211) (undo-tree-id880 . -211) (undo-tree-id881 . -211) (undo-tree-id882 . -211) (undo-tree-id883 . -211) (undo-tree-id884 . -211) (undo-tree-id885 . -211) (undo-tree-id886 . -211) (undo-tree-id887 . -211) (undo-tree-id888 . -211) (undo-tree-id889 . -211) (undo-tree-id890 . -211) (undo-tree-id891 . -211) (undo-tree-id892 . -211) (undo-tree-id893 . -211) (undo-tree-id894 . -211) (undo-tree-id895 . -211) (undo-tree-id896 . -211) (undo-tree-id897 . -211) (undo-tree-id898 . -211) (undo-tree-id899 . -211) (undo-tree-id900 . -211) (undo-tree-id901 . -211) (undo-tree-id902 . -211) (undo-tree-id903 . -211) (undo-tree-id904 . -211) (undo-tree-id905 . -211) (undo-tree-id906 . -211) (undo-tree-id907 . -211) (undo-tree-id908 . -211) (undo-tree-id909 . -211) (undo-tree-id910 . -211) (undo-tree-id911 . -211) (undo-tree-id912 . -211) (undo-tree-id913 . -211) (undo-tree-id914 . -211) (undo-tree-id915 . -211) (undo-tree-id916 . -211) (undo-tree-id917 . -211) (undo-tree-id918 . -211) (undo-tree-id919 . -211) (undo-tree-id920 . -211) (undo-tree-id921 . -211) (undo-tree-id922 . -211) (undo-tree-id923 . -211) (undo-tree-id924 . -211) (undo-tree-id925 . -211) (undo-tree-id926 . -211) (undo-tree-id927 . -211) (undo-tree-id928 . -211) (undo-tree-id929 . -211) (undo-tree-id930 . -211) (undo-tree-id931 . -211) (undo-tree-id932 . -211) (undo-tree-id933 . -211) (undo-tree-id934 . -211) (undo-tree-id935 . -211) (undo-tree-id936 . -211) (undo-tree-id937 . -211) (undo-tree-id938 . -211) (undo-tree-id939 . -211) (undo-tree-id940 . -211) (undo-tree-id941 . -211) (undo-tree-id942 . -211) (undo-tree-id943 . -211) (undo-tree-id944 . -211) (undo-tree-id945 . -211) (undo-tree-id946 . -211) (undo-tree-id947 . -211) (undo-tree-id948 . -211) (undo-tree-id949 . -211) (undo-tree-id950 . -211) (undo-tree-id951 . -211) (undo-tree-id952 . -211) (undo-tree-id953 . -211) (undo-tree-id954 . -211) (undo-tree-id955 . -211) (undo-tree-id956 . -211) (undo-tree-id957 . -211) (undo-tree-id958 . -211) (undo-tree-id959 . -211) (undo-tree-id960 . -211) (undo-tree-id961 . -211) (undo-tree-id962 . -211) (undo-tree-id963 . -211) (undo-tree-id964 . -211) (undo-tree-id965 . -211) (undo-tree-id966 . -211) (undo-tree-id967 . -211) (undo-tree-id968 . -211) (undo-tree-id969 . -211) (undo-tree-id970 . -211) (undo-tree-id971 . -211) (undo-tree-id972 . -211) (undo-tree-id973 . -211) (undo-tree-id974 . -211) (undo-tree-id975 . -211) (undo-tree-id976 . -211) (undo-tree-id977 . -211) (undo-tree-id978 . -211) (undo-tree-id979 . -211) (undo-tree-id980 . -211) (undo-tree-id981 . -211) (undo-tree-id982 . -211) (undo-tree-id983 . -211) (undo-tree-id984 . -211) (undo-tree-id985 . -211) (undo-tree-id986 . -211) (undo-tree-id987 . -211) (undo-tree-id988 . -211) (undo-tree-id989 . -211) (undo-tree-id990 . -211) (undo-tree-id991 . -211) (undo-tree-id992 . -211) (undo-tree-id993 . -211) (undo-tree-id994 . -211) (undo-tree-id995 . -211) (undo-tree-id996 . -211) (undo-tree-id997 . -211) (undo-tree-id998 . -211) (undo-tree-id999 . -211) (undo-tree-id1000 . -211) (undo-tree-id1001 . -211) (undo-tree-id1002 . -211) (undo-tree-id1003 . -211) (undo-tree-id1004 . -211) (undo-tree-id1005 . -211) (undo-tree-id1006 . -211) (undo-tree-id1007 . -211) (undo-tree-id1008 . -211) (undo-tree-id1009 . -211) (undo-tree-id1010 . -211) (undo-tree-id1011 . -211) (undo-tree-id1012 . -211) (undo-tree-id1013 . -211) (undo-tree-id1014 . -211) (undo-tree-id1015 . -211) (undo-tree-id1016 . -211) (undo-tree-id1017 . -211) (undo-tree-id1018 . -211) (undo-tree-id1019 . -211) (undo-tree-id1020 . -211) (undo-tree-id1021 . -211) (undo-tree-id1022 . -211) (undo-tree-id1023 . -211) (undo-tree-id1024 . -211) (undo-tree-id1025 . -211) (undo-tree-id1026 . -211) (undo-tree-id1027 . -211) (undo-tree-id1028 . -211) (undo-tree-id1029 . -211) (undo-tree-id1030 . -211) (undo-tree-id1031 . -211) (undo-tree-id1032 . -211) (undo-tree-id1033 . -211) (undo-tree-id1034 . -211) (undo-tree-id1035 . -211) (undo-tree-id1036 . -211) (undo-tree-id1037 . -211) (undo-tree-id1038 . -211) (undo-tree-id1039 . -211) (undo-tree-id1040 . -211) (undo-tree-id1041 . -211) (undo-tree-id1042 . -211) (undo-tree-id1043 . -211) (undo-tree-id1044 . -211) (undo-tree-id1045 . -211) (undo-tree-id1046 . -211) (undo-tree-id1047 . -211) (undo-tree-id1048 . -211) (undo-tree-id1049 . -211) (undo-tree-id1050 . -211) (undo-tree-id1051 . -211) (undo-tree-id1052 . -211) (undo-tree-id1053 . -211) (undo-tree-id1054 . -211) (undo-tree-id1055 . -211) (undo-tree-id1056 . -211) (undo-tree-id1057 . -211) (undo-tree-id1058 . -211) (undo-tree-id1059 . -211) (undo-tree-id1060 . -211) (undo-tree-id1061 . -211) (undo-tree-id1062 . -211) (undo-tree-id1063 . -211) (undo-tree-id1064 . -211) (undo-tree-id1065 . -211) (undo-tree-id1066 . -211) (undo-tree-id1067 . -211) (undo-tree-id1068 . -211) (undo-tree-id1069 . -211) (undo-tree-id1070 . -211) (undo-tree-id1071 . -211) (undo-tree-id1072 . -211) (undo-tree-id1073 . -211) (undo-tree-id1074 . -211) (undo-tree-id1075 . -211) (undo-tree-id1076 . -211) (undo-tree-id1077 . -211) (undo-tree-id1078 . -211) (undo-tree-id1079 . -211) (undo-tree-id1080 . -211) (undo-tree-id1081 . -211) (undo-tree-id1082 . -211) (undo-tree-id1083 . -211) (undo-tree-id1084 . -211) (undo-tree-id1085 . -211) (undo-tree-id1086 . -211) (undo-tree-id1087 . -211) 66397 (t 25146 4427 593165 762000)) ((66186 . 66430) (#("
     (defun zetteldesk-remark-mark (beg end)
       \"\"
       (interactive (org-remark-region-or-word))
       (message \"%s\" org-remark-notes-file-name)
       (let ((org-remark-notes-file-name
	      (concat org-roam-directory \"zetteldesk-margin-notes.org\")))
	 (message \"%s\" org-remark-notes-file-name)
	 (org-remark-mark beg end)))

" 0 7 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 7 12 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 12 13 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 13 35 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 35 53 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 53 55 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 55 64 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 64 75 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 75 121 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 121 125 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 125 162 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 162 165 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 165 229 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 229 258 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 258 273 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 273 277 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 277 337 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 66186) (undo-tree-id1088 . -104) (undo-tree-id1089 . -334) (undo-tree-id1090 . -334) (undo-tree-id1091 . -334) (undo-tree-id1092 . -334) (undo-tree-id1093 . -334) (undo-tree-id1094 . -334) (undo-tree-id1095 . -334) (undo-tree-id1096 . -334) (undo-tree-id1097 . -334) (undo-tree-id1098 . -334) (undo-tree-id1099 . -334) (undo-tree-id1100 . -334) (undo-tree-id1101 . -334) (undo-tree-id1102 . -334) (undo-tree-id1103 . -334) (undo-tree-id1104 . -334) (undo-tree-id1105 . -334) (undo-tree-id1106 . -334) (undo-tree-id1107 . -334) (undo-tree-id1108 . -334) (undo-tree-id1109 . -334) (undo-tree-id1110 . -334) (undo-tree-id1111 . -334) (undo-tree-id1112 . -334) (undo-tree-id1113 . -334) (undo-tree-id1114 . -334) (undo-tree-id1115 . -334) (undo-tree-id1116 . -334) (undo-tree-id1117 . -334) (undo-tree-id1118 . -334) (undo-tree-id1119 . -334) (undo-tree-id1120 . -334) (undo-tree-id1121 . -334) (undo-tree-id1122 . -334) (undo-tree-id1123 . -334) (undo-tree-id1124 . -334) (undo-tree-id1125 . -334) (undo-tree-id1126 . -334) (undo-tree-id1127 . -334) (undo-tree-id1128 . -334) (undo-tree-id1129 . -334) (undo-tree-id1130 . -334) (undo-tree-id1131 . -334) (undo-tree-id1132 . -334) (undo-tree-id1133 . -334) (undo-tree-id1134 . -334) (undo-tree-id1135 . -334) (undo-tree-id1136 . -334) (undo-tree-id1137 . -334) (undo-tree-id1138 . -334) (undo-tree-id1139 . -334) (undo-tree-id1140 . -334) (undo-tree-id1141 . -334) (undo-tree-id1142 . -334) (undo-tree-id1143 . -334) (undo-tree-id1144 . -334) (undo-tree-id1145 . -334) (undo-tree-id1146 . -334) (undo-tree-id1147 . -334) (undo-tree-id1148 . -334) (undo-tree-id1149 . -334) (undo-tree-id1150 . -334) (undo-tree-id1151 . -334) (undo-tree-id1152 . -334) (undo-tree-id1153 . -334) (undo-tree-id1154 . -334) (undo-tree-id1155 . -334) (undo-tree-id1156 . -334) (undo-tree-id1157 . -334) (undo-tree-id1158 . -334) (undo-tree-id1159 . -334) (undo-tree-id1160 . -334) (undo-tree-id1161 . -334) (undo-tree-id1162 . -334) (undo-tree-id1163 . -334) (undo-tree-id1164 . -334) (undo-tree-id1165 . -334) (undo-tree-id1166 . -334) (undo-tree-id1167 . -334) (undo-tree-id1168 . -334) (undo-tree-id1169 . -334) (undo-tree-id1170 . -334) (undo-tree-id1171 . -334) (undo-tree-id1172 . -334) (undo-tree-id1173 . -334) (undo-tree-id1174 . -334) (undo-tree-id1175 . -334) (undo-tree-id1176 . -334) (undo-tree-id1177 . -334) (undo-tree-id1178 . -334) (undo-tree-id1179 . -334) (undo-tree-id1180 . -334) (undo-tree-id1181 . -334) (undo-tree-id1182 . -334) (undo-tree-id1183 . -334) (undo-tree-id1184 . -334) (undo-tree-id1185 . -334) (undo-tree-id1186 . -334) (undo-tree-id1187 . -334) (undo-tree-id1188 . -334) (undo-tree-id1189 . -334) (undo-tree-id1190 . -334) (undo-tree-id1191 . -334) (undo-tree-id1192 . -334) (undo-tree-id1193 . -334) (undo-tree-id1194 . -334) (undo-tree-id1195 . -334) (undo-tree-id1196 . -334) (undo-tree-id1197 . -334) (undo-tree-id1198 . -334) (undo-tree-id1199 . -334) (undo-tree-id1200 . -334) (undo-tree-id1201 . -334) (undo-tree-id1202 . -334) (undo-tree-id1203 . -334) (undo-tree-id1204 . -334) (undo-tree-id1205 . -334) (undo-tree-id1206 . -334) (undo-tree-id1207 . -334) (undo-tree-id1208 . -334) (undo-tree-id1209 . -334) (undo-tree-id1210 . -334) (undo-tree-id1211 . -334) (undo-tree-id1212 . -334) (undo-tree-id1213 . -334) (undo-tree-id1214 . -334) (undo-tree-id1215 . -334) (undo-tree-id1216 . -334) (undo-tree-id1217 . -276) (undo-tree-id1218 . -276) (undo-tree-id1219 . -276) (undo-tree-id1220 . -276) (undo-tree-id1221 . -276) (undo-tree-id1222 . -276) (undo-tree-id1223 . -276) (undo-tree-id1224 . -276) (undo-tree-id1225 . -276) (undo-tree-id1226 . -276) (undo-tree-id1227 . -276) (undo-tree-id1228 . -276) (undo-tree-id1229 . -276) (undo-tree-id1230 . -276) (undo-tree-id1231 . -276) (undo-tree-id1232 . -276) (undo-tree-id1233 . -276) (undo-tree-id1234 . -276) (undo-tree-id1235 . -276) (undo-tree-id1236 . -276) (undo-tree-id1237 . -276) (undo-tree-id1238 . -276) (undo-tree-id1239 . -276) (undo-tree-id1240 . -276) (undo-tree-id1241 . -276) (undo-tree-id1242 . -276) (undo-tree-id1243 . -276) (undo-tree-id1244 . -276) (undo-tree-id1245 . -276) (undo-tree-id1246 . -276) (undo-tree-id1247 . -276) (undo-tree-id1248 . -276) (undo-tree-id1249 . -276) (undo-tree-id1250 . -276) (undo-tree-id1251 . -276) (undo-tree-id1252 . -276) (undo-tree-id1253 . -276) (undo-tree-id1254 . -103) (undo-tree-id1255 . -276) (undo-tree-id1256 . -276) (undo-tree-id1257 . -276) (undo-tree-id1258 . -276) (undo-tree-id1259 . -276) (undo-tree-id1260 . -276) (undo-tree-id1261 . -276) (undo-tree-id1262 . -104) (undo-tree-id1263 . -104) (undo-tree-id1264 . -104) (undo-tree-id1265 . -104) (undo-tree-id1266 . -104) (undo-tree-id1267 . -104) (undo-tree-id1268 . -104) (undo-tree-id1269 . -103) (undo-tree-id1270 . -104) (undo-tree-id1271 . -103) (undo-tree-id1272 . -104) (undo-tree-id1273 . -103) (undo-tree-id1274 . -103) (undo-tree-id1275 . -103) (undo-tree-id1276 . -103) (undo-tree-id1277 . -103) (undo-tree-id1278 . -103) (undo-tree-id1279 . -103) (undo-tree-id1280 . 234) (undo-tree-id1281 . -104) (undo-tree-id1282 . 274) (undo-tree-id1283 . -64) (undo-tree-id1284 . -103) (undo-tree-id1285 . -103) (undo-tree-id1286 . -103) (undo-tree-id1287 . -103) (undo-tree-id1288 . -103) (undo-tree-id1289 . -103) (t 25146 4684 919832 207000)) (25146 4684 898611 798000) 0 nil])
([nil nil ((67654 . 67655) 67653) nil (25146 14260 623538 686000) 0 nil])
nil
([nil nil ((66251 . 66252) (#(" " 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block))) . -66251) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) 66252 (66241 . 66252) (#("a" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block))) . -66241) (undo-tree-id1409 . -1) 66242 (66240 . 66242) (t 25146 14260 646164 437000)) nil (25146 14413 429178 931000) 0 nil])
([nil nil ((66186 . 67819) (#("
     (defun zetteldesk-remark-mark (beg end)
       \"Wrapper for \"
       (interactive (org-remark-region-or-word))
       (let ((org-remark-notes-file-name
	      (concat org-roam-directory \"zetteldesk-margin-notes.org\")))
	 (org-remark-mark beg end)))

     (defun zetteldesk-remark-highlight-advice
	 (beg end &optional id mode label face properties)
       \"Advice function to be used with `org-remark-highlight-mark'.

     If the current buffer isn't associated to a file, find the
     heading's title, associate it with an org-roam-node and find the
     file associated with that node. Then run the part of
     `org-remark-highlight-save' that wasn't ran if the buffer isn't
     associated with a file. This part is a call to
     `org-remark-highlight-save'.

     This is meant to be used when taking margin notes from the
     ,*zetteldesk-scratch* buffer. However, this will only work if the
     current heading's title is associated with a node. In this case
     org-remark will be able to associate the margin note with the
     node its related to.\"
       (unless buffer-file-name
	 (let* ((title (org-entry-get nil \"ITEM\"))
		(node (org-roam-node-from-title-or-alias title))
		(file (org-roam-node-file node))
		(ov (make-overlay beg end nil :front-advance)))
	   (org-remark-highlight-save file
				      beg end
				      (overlay-properties ov)
				      title))))

     (advice-add 'org-remark-highlight-mark :after #'zetteldesk-remark-highlight-advice)

" 0 7 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7 12 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12 13 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 35 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 35 53 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 53 67 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 67 76 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 76 87 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 87 125 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 125 128 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 128 192 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 192 221 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 221 262 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 262 267 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 267 268 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 268 302 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 302 314 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 314 323 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 323 362 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 362 396 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 396 421 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 421 450 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 450 451 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 451 452 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 452 453 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 453 454 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 454 455 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 455 456 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 456 457 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 457 458 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 458 459 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 459 460 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 460 461 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 461 462 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 462 559 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 559 623 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 623 648 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 648 744 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 744 769 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 769 1059 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1059 1070 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1070 1079 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1079 1085 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1085 1106 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1106 1110 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1110 1138 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1138 1144 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1144 1265 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1265 1279 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1279 1436 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1436 1442 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1442 1480 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 1480 1481 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 1481 1482 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 66186) (undo-tree-id1391 . -53) (undo-tree-id1392 . 1416) (undo-tree-id1393 . -1481) (undo-tree-id1394 . -1481) (undo-tree-id1395 . -559) (undo-tree-id1396 . -65) (undo-tree-id1397 . -65) (undo-tree-id1398 . -65) (undo-tree-id1399 . -65) (undo-tree-id1400 . -65) (undo-tree-id1401 . -65) (undo-tree-id1402 . -65) (undo-tree-id1403 . -65) (undo-tree-id1404 . -65) (undo-tree-id1405 . -65) (undo-tree-id1406 . -65) 66251) nil (25146 14413 429159 794000) 0 nil])
([nil nil ((66186 . 67967) (#("
     (defun zetteldesk-remark-mark (beg end)
       \"Wrapper for `org-remark-mark'.

     Calls the function with `org-remark-notes-file-name' being set to
     zetteldesk-margin-notes.org in the `org-roam-directory'\"
       (interactive (org-remark-region-or-word))
       (let ((org-remark-notes-file-name
	      (concat org-roam-directory \"zetteldesk-margin-notes.org\")))
	 (org-remark-mark beg end)))

     (defun zetteldesk-remark-highlight-advice
	 (beg end &optional id mode label face properties)
       \"Advice function to be used with `org-remark-highlight-mark'.

     If the current buffer isn't associated to a file, find the
     heading's title, associate it with an org-roam-node and find the
     file associated with that node. Then run the part of
     `org-remark-highlight-save' that wasn't ran if the buffer isn't
     associated with a file. This part is a call to
     `org-remark-highlight-save'.

     This is meant to be used when taking margin notes from the
     ,*zetteldesk-scratch* buffer. However, this will only work if the
     current heading's title is associated with a node. In this case
     org-remark will be able to associate the margin note with the
     node its related to.\"
       (unless buffer-file-name
	 (let* ((title (org-entry-get nil \"ITEM\"))
		(node (org-roam-node-from-title-or-alias title))
		(file (org-roam-node-file node))
		(ov (make-overlay beg end nil :front-advance)))
	   (org-remark-highlight-save file
				      beg end
				      (overlay-properties ov)
				      title))))

     (advice-add 'org-remark-highlight-mark :after #'zetteldesk-remark-highlight-advice)

" 0 7 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7 12 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12 13 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 35 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 35 53 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 53 67 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 67 82 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 82 116 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 116 142 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 142 198 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 198 216 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 216 218 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 218 227 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 227 238 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 238 276 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 276 279 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 279 343 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 343 372 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 372 413 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 413 418 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 418 419 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 419 450 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 450 453 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 453 465 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 465 474 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 474 513 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 513 547 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 547 572 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 572 774 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 774 799 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 799 895 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 895 920 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 920 1221 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1221 1230 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1230 1236 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1236 1257 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1257 1261 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1261 1289 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1289 1295 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1295 1416 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1416 1430 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1430 1587 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1587 1593 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1593 1633 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 66186) (undo-tree-id1559 . -376) (undo-tree-id1560 . -376) (undo-tree-id1561 . -376) (undo-tree-id1562 . -376) (undo-tree-id1563 . -376) (undo-tree-id1564 . -376) (undo-tree-id1565 . -376) (undo-tree-id1566 . -376) (undo-tree-id1567 . -376) (undo-tree-id1568 . -376) (undo-tree-id1569 . -376) (undo-tree-id1570 . -376) (undo-tree-id1571 . -376) (undo-tree-id1572 . -376) (undo-tree-id1573 . -376) (undo-tree-id1574 . -376) (undo-tree-id1575 . -376) (undo-tree-id1576 . -376) (undo-tree-id1577 . -376) 66562 (t 25146 14413 447471 529000)) nil (25146 15808 140334 707000) 0 nil])
([nil nil ((67966 . 67967) 67965) nil (25146 15808 140301 812000) 0 nil])
([nil nil ((66186 . 68327) (#("
     (defun zetteldesk-remark-mark (beg end)
       \"Wrapper for `org-remark-mark'.

     Calls the function with `org-remark-notes-file-name' being set to
     zetteldesk-margin-notes.org in the `org-roam-directory'\"
       (interactive (org-remark-region-or-word))
       (let ((org-remark-notes-file-name
	      (concat org-roam-directory \"zetteldesk-margin-notes.org\")))
	 (org-remark-mark beg end)))

     (defun zetteldesk-remark-highlight-advice
	 (beg end &optional id mode label face properties)
       \"Advice function to be used with `org-remark-highlight-mark'.

     If the current buffer isn't associated to a file, find the
     heading's title, associate it with an org-roam-node and find the
     file associated with that node. Then run the part of
     `org-remark-highlight-save' that wasn't ran if the buffer isn't
     associated with a file. This part is a call to
     `org-remark-highlight-save'.

     This is meant to be used when taking margin notes from the
     ,*zetteldesk-scratch* buffer. However, this will only work if the
     current heading's title is associated with a node. In this case
     org-remark will be able to associate the margin note with the
     node its related to.\"
       (unless buffer-file-name
	 (let* ((title (org-entry-get nil \"ITEM\"))
		(node (org-roam-node-from-title-or-alias title))
		(file (org-roam-node-file node))
		(ov (make-overlay beg end nil :front-advance)))
	   (org-remark-highlight-save file
				      beg end
				      (overlay-properties ov)
				      title))))

     (advice-add 'org-remark-highlight-mark :after #'zetteldesk-remark-highlight-advice)

     (defun zetteldesk-switch-to-margin-notes ()
       (interactive)
       (find-file (concat org-roam-directory \"zetteldesk-margin-notes.org\")))

" 0 7 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7 12 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12 13 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 35 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 35 53 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 53 67 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 67 82 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 82 116 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 116 142 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 142 198 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 198 216 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 216 218 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 218 227 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 227 238 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 238 276 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 276 279 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 279 343 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 343 372 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 372 413 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 413 418 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 418 419 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 419 450 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 450 453 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 453 465 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 465 474 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 474 513 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 513 547 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 547 572 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 572 774 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 774 799 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 799 895 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 895 920 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 920 923 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 923 1221 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1221 1230 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1230 1236 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1236 1257 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1257 1261 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1261 1289 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1289 1295 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1295 1416 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1416 1423 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1423 1430 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1430 1587 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1587 1593 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1593 1639 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1639 1644 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1644 1645 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1645 1678 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 1678 1690 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1690 1701 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1701 1748 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1748 1777 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1777 1780 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 1780 1781 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 1781 1782 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 66186) (undo-tree-id1410 . 1) (undo-tree-id1411 . -923) (undo-tree-id1412 . -1781) (undo-tree-id1413 . -1781) (undo-tree-id1414 . -1781) (undo-tree-id1415 . -923) (undo-tree-id1416 . -1781) (undo-tree-id1417 . -1781) (undo-tree-id1418 . -1781) (undo-tree-id1419 . -923) (undo-tree-id1420 . -1781) (undo-tree-id1421 . -1781) (undo-tree-id1422 . -923) (undo-tree-id1423 . -1781) (undo-tree-id1424 . -1781) (undo-tree-id1425 . -923) (undo-tree-id1426 . -1781) (undo-tree-id1427 . -1781) (undo-tree-id1428 . -923) (undo-tree-id1429 . -1781) (undo-tree-id1430 . -1781) (undo-tree-id1431 . -923) (undo-tree-id1432 . -1781) (undo-tree-id1433 . -1781) (undo-tree-id1434 . -923) (undo-tree-id1435 . -1781) (undo-tree-id1436 . -1781) (undo-tree-id1437 . -923) (undo-tree-id1438 . -1781) (undo-tree-id1439 . -1781) (undo-tree-id1440 . -923) (undo-tree-id1441 . -1781) (undo-tree-id1442 . -1781) (undo-tree-id1443 . -923) (undo-tree-id1444 . -1781) (undo-tree-id1445 . -1781) (undo-tree-id1446 . -923) (undo-tree-id1447 . -1781) (undo-tree-id1448 . -1781) (undo-tree-id1449 . -923) (undo-tree-id1450 . -1781) (undo-tree-id1451 . -1781) (undo-tree-id1452 . -923) (undo-tree-id1453 . -1781) (undo-tree-id1454 . -1781) (undo-tree-id1455 . -923) (undo-tree-id1456 . -1781) (undo-tree-id1457 . -1781) (undo-tree-id1458 . -923) (undo-tree-id1459 . -1781) (undo-tree-id1460 . -1781) (undo-tree-id1461 . -923) (undo-tree-id1462 . -1781) (undo-tree-id1463 . -1781) (undo-tree-id1464 . -923) (undo-tree-id1465 . -1781) (undo-tree-id1466 . -1781) (undo-tree-id1467 . -923) (undo-tree-id1468 . -1781) (undo-tree-id1469 . -1781) (undo-tree-id1470 . -923) (undo-tree-id1471 . -1781) (undo-tree-id1472 . -1781) (undo-tree-id1473 . -923) (undo-tree-id1474 . -1781) (undo-tree-id1475 . -1781) (undo-tree-id1476 . -923) (undo-tree-id1477 . -1781) (undo-tree-id1478 . -1781) (undo-tree-id1479 . -923) (undo-tree-id1480 . -1781) (undo-tree-id1481 . -1781) (undo-tree-id1482 . -923) (undo-tree-id1483 . -1781) (undo-tree-id1484 . -1781) (undo-tree-id1485 . -923) (undo-tree-id1486 . -1781) (undo-tree-id1487 . -1781) (undo-tree-id1488 . -923) (undo-tree-id1489 . -1781) (undo-tree-id1490 . -1781) (undo-tree-id1491 . -923) (undo-tree-id1492 . -1781) (undo-tree-id1493 . -1781) (undo-tree-id1494 . -923) (undo-tree-id1495 . -1781) (undo-tree-id1496 . -1781) (undo-tree-id1497 . -923) (undo-tree-id1498 . -1781) (undo-tree-id1499 . -1781) (undo-tree-id1500 . -923) (undo-tree-id1501 . -1781) (undo-tree-id1502 . -1781) (undo-tree-id1503 . -923) (undo-tree-id1504 . -1781) (undo-tree-id1505 . -1781) (undo-tree-id1506 . -923) (undo-tree-id1507 . -1781) (undo-tree-id1508 . -1781) (undo-tree-id1509 . -923) (undo-tree-id1510 . -1781) (undo-tree-id1511 . -1781) (undo-tree-id1512 . -923) (undo-tree-id1513 . -1781) (undo-tree-id1514 . -1781) (undo-tree-id1515 . -923) (undo-tree-id1516 . -1781) (undo-tree-id1517 . -1781) (undo-tree-id1518 . -923) (undo-tree-id1519 . -1781) (undo-tree-id1520 . -1781) (undo-tree-id1521 . -923) (undo-tree-id1522 . -1781) (undo-tree-id1523 . -1781) (undo-tree-id1524 . -923) (undo-tree-id1525 . -1781) (undo-tree-id1526 . -1781) (undo-tree-id1527 . -923) (undo-tree-id1528 . -1781) (undo-tree-id1529 . -1781) (undo-tree-id1530 . -923) (undo-tree-id1531 . -1781) (undo-tree-id1532 . -1781) (undo-tree-id1533 . -923) (undo-tree-id1534 . -1781) (undo-tree-id1535 . -1781) (undo-tree-id1536 . -923) (undo-tree-id1537 . -1781) (undo-tree-id1538 . -1781) (undo-tree-id1539 . -923) (undo-tree-id1540 . -1781) (undo-tree-id1541 . -1781) (undo-tree-id1542 . -923) (undo-tree-id1543 . -1781) (undo-tree-id1544 . -1781) (undo-tree-id1545 . -923) (undo-tree-id1546 . -1781) (undo-tree-id1547 . -1781) (undo-tree-id1548 . -923) (undo-tree-id1549 . -1781) (undo-tree-id1550 . -1781) (undo-tree-id1551 . -923) (undo-tree-id1552 . -1781) (undo-tree-id1553 . -1781) (undo-tree-id1554 . -923) (undo-tree-id1555 . -1781) (undo-tree-id1556 . -1781) (undo-tree-id1557 . -923) (undo-tree-id1558 . -1781) 67967) nil (25146 15808 140278 275000) 0 nil])
([nil nil ((34154 . 36970) (#("
     ;; -- DEPENDENCIES --
     ;; These are some functions that are needed for the package to work as
     ;; it should, but that are not specific to the package

     (require 'org-roam)

     (cl-defmethod org-roam-node-buffer ((node org-roam-node))
       \"Access slot \\\"buffer\\\" of org-roam-node struct CL-X.
     NODE is an org-roam-node\"
       (let ((buffer (get-file-buffer (org-roam-node-file node))))
	 buffer))

     (defun org-roam-node-poi-or-moc-p (NODE)
       \"Check if NODE has the tag POI or the tag MOC.  Return t if it does.\"
       (or (string-equal (car (org-roam-node-tags NODE)) \"POI\")
	   (string-equal (car (org-roam-node-tags NODE)) \"MOC\")))

     (defun org-roam-backlink-query ()
       \"Simple org-roam query function.
     Stores the IDs of all the files that link to the node at point.
     This is a modified part of the `org-roam-backlinks-get' function
     keeping only the part necessary for `org-roam-backlink-files' to
     work as this is a complimentary function to that\"
       (org-roam-db-query
	[:select [source dest]
		 :from links
		 :where (= dest $s1)
		 :and (= type \"id\")]
	(org-roam-node-id (org-roam-node-at-point))))

     (defun org-roam-backlink-query* (NODE)
       \"Run `org-roam-backlink-query'.
     Instead of returning a list of the backlinks of
     `org-roam-node-at-point', find the backlinks of NODE.  This is
     handy in cases where NODE is read through `org-roam-node-read'
     and doesn't have to be the `current-buffer'\"
       (org-roam-db-query
	     [:select [source dest]
		      :from links
		      :where (= dest $s1)
		      :and (= type \"id\")]
	     (org-roam-node-id NODE)))

     (defun org-roam-node-sort-by-backlinks (completion-a completion-b)
       \"Sorting function for org-roam that sort the list of nodes.
     Sorting is done accordint to the number of backlinks.  This is
     the sorting function in `org-roam-node-find-by-backlinks' and
     `zetteldesk-node-insert-sort-backlinks'.  Arguments COMPLETION-A
     and COMPLETION-B are same as in
     `org-roam-node-read-sort-by-file-atime'\"
       (let ((node-a (cdr completion-a))
	     (node-b (cdr completion-b)))
	 (>= (org-roam-node-backlinkscount-number node-a)
	     (org-roam-node-backlinkscount-number node-b))))

" 0 6 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6 9 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 9 28 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 28 33 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 33 36 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 36 65 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 65 104 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 104 109 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 109 112 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 112 164 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 164 171 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 171 178 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 178 180 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 180 188 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 188 197 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 197 209 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 209 210 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 210 230 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 230 261 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 261 345 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 345 354 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 354 357 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 357 431 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 431 436 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 436 437 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 437 463 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 463 478 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 478 547 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 547 556 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 556 558 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 558 605 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 605 610 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 610 662 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 662 667 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 667 678 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 678 683 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 683 684 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 684 707 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 707 718 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 718 857 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 857 879 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 879 932 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 932 955 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 955 1014 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1014 1043 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1043 1050 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1050 1068 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1068 1073 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1073 1083 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1083 1089 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1089 1106 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1106 1110 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1110 1119 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1119 1123 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1123 1180 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1180 1185 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1185 1186 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1186 1210 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 1210 1225 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1225 1231 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1231 1254 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1254 1316 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1316 1338 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1338 1426 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1426 1444 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1444 1479 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1479 1493 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1493 1495 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1495 1529 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1529 1536 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1536 1559 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1559 1564 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1564 1579 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1579 1585 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1585 1607 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1607 1611 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1611 1620 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1620 1624 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1624 1666 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1666 1671 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1671 1672 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1672 1703 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 1703 1739 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1739 1897 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1897 1928 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1928 1940 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1940 1977 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1977 2047 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2047 2084 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2084 2086 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2086 2095 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2095 2098 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2098 2269 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 34154) (undo-tree-id0 . -671) (undo-tree-id1 . -1173) (undo-tree-id2 . -1173) (undo-tree-id3 . -1173) (undo-tree-id4 . -1173) (undo-tree-id5 . -2269) (undo-tree-id6 . -1173) (undo-tree-id7 . -1173) (undo-tree-id8 . -1173) (undo-tree-id9 . -1173) (undo-tree-id10 . -1173) (undo-tree-id11 . -1173) (undo-tree-id12 . -1173) (undo-tree-id13 . -1173) (undo-tree-id14 . -1173) (undo-tree-id15 . -1173) (undo-tree-id16 . -1173) (undo-tree-id17 . -1378) (undo-tree-id18 . -1378) (undo-tree-id19 . -1378) (undo-tree-id20 . -1378) (undo-tree-id21 . -1378) (undo-tree-id22 . -1378) (undo-tree-id23 . -1378) (undo-tree-id24 . -1378) (undo-tree-id25 . -1378) (undo-tree-id26 . -1378) (undo-tree-id27 . -1378) (undo-tree-id28 . -1378) (undo-tree-id29 . -1378) (undo-tree-id30 . -1378) (undo-tree-id31 . -1378) (undo-tree-id32 . -1732) (undo-tree-id33 . -1732) (undo-tree-id34 . -1732) (undo-tree-id35 . -1732) (undo-tree-id36 . -1732) (undo-tree-id37 . -1732) (undo-tree-id38 . -1732) (undo-tree-id39 . -1732) (undo-tree-id40 . -671) (undo-tree-id41 . -671) (undo-tree-id42 . -2004) (undo-tree-id43 . -1126) (undo-tree-id44 . -1627) (undo-tree-id45 . -1627) (undo-tree-id46 . -164) (undo-tree-id47 . -1627) (undo-tree-id48 . -1627) (undo-tree-id49 . -1627) (undo-tree-id50 . -1627) (undo-tree-id51 . -1627) (undo-tree-id52 . -1627) (undo-tree-id53 . -1627) (undo-tree-id54 . -1627) (undo-tree-id55 . -1627) (undo-tree-id56 . -1627) (undo-tree-id57 . -1627) (undo-tree-id58 . -1627) (undo-tree-id59 . -424) (undo-tree-id60 . -424) (undo-tree-id61 . -424) (undo-tree-id62 . -424) (undo-tree-id63 . -424) (undo-tree-id64 . -424) (undo-tree-id65 . -424) (undo-tree-id66 . -424) (undo-tree-id67 . -424) (undo-tree-id68 . -424) (undo-tree-id69 . -424) (undo-tree-id70 . -424) (undo-tree-id71 . -424) (undo-tree-id72 . -424) (undo-tree-id73 . -424) (undo-tree-id74 . -424) (undo-tree-id75 . -424) (undo-tree-id76 . -424) (undo-tree-id77 . -424) (undo-tree-id78 . -424) (undo-tree-id79 . -424) (undo-tree-id80 . -424) (undo-tree-id81 . -424) (undo-tree-id82 . -424) (undo-tree-id83 . -424) (undo-tree-id84 . -424) (undo-tree-id85 . -424) (undo-tree-id86 . -424) (undo-tree-id87 . -424) (undo-tree-id88 . -424) (undo-tree-id89 . -424) (undo-tree-id90 . -424) (undo-tree-id91 . -424) (undo-tree-id92 . -424) (undo-tree-id93 . -424) (undo-tree-id94 . -424) (undo-tree-id95 . -424) (undo-tree-id96 . -424) (undo-tree-id97 . -424) (undo-tree-id98 . -424) (undo-tree-id99 . -424) (undo-tree-id100 . -424) (undo-tree-id101 . -424) (undo-tree-id102 . -424) (undo-tree-id103 . -424) (undo-tree-id104 . -424) (undo-tree-id105 . -424) (undo-tree-id106 . -424) (undo-tree-id107 . -424) (undo-tree-id108 . -424) (undo-tree-id109 . -424) (undo-tree-id110 . -671) (undo-tree-id111 . -671) (undo-tree-id112 . -671) (undo-tree-id113 . -671) (undo-tree-id114 . -671) (undo-tree-id115 . -671) (undo-tree-id116 . -671) (undo-tree-id117 . -671) (undo-tree-id118 . -671) (undo-tree-id119 . -671) (undo-tree-id120 . -671) (undo-tree-id121 . -671) (undo-tree-id122 . -671) (undo-tree-id123 . -671) (undo-tree-id124 . -671) (undo-tree-id125 . -671) (undo-tree-id126 . -671) (undo-tree-id127 . -671) (undo-tree-id128 . -671) (undo-tree-id129 . -671) (undo-tree-id130 . -671) (undo-tree-id131 . -671) (undo-tree-id132 . -671) (undo-tree-id133 . -671) (undo-tree-id134 . -671) (undo-tree-id135 . -671) (undo-tree-id136 . -671) (undo-tree-id137 . -671) (undo-tree-id138 . -671) (undo-tree-id139 . -671) (undo-tree-id140 . -671) (undo-tree-id141 . -671) (undo-tree-id142 . -671) (undo-tree-id143 . -671) (undo-tree-id144 . -671) (undo-tree-id145 . -671) (undo-tree-id146 . -671) (undo-tree-id147 . -671) (undo-tree-id148 . -671) (undo-tree-id149 . -671) (undo-tree-id150 . -671) (undo-tree-id151 . -671) (undo-tree-id152 . -671) (undo-tree-id153 . -671) (undo-tree-id154 . -671) (undo-tree-id155 . -671) (undo-tree-id156 . -671) (undo-tree-id157 . -671) (undo-tree-id158 . -671) (undo-tree-id159 . -671) (undo-tree-id160 . -671) (undo-tree-id161 . -671) (undo-tree-id162 . -671) (undo-tree-id163 . -671) (undo-tree-id164 . -671) (undo-tree-id165 . -671) (undo-tree-id166 . -671) (undo-tree-id167 . -671) (undo-tree-id168 . -671) (undo-tree-id169 . -671) (undo-tree-id170 . -671) (undo-tree-id171 . -671) (undo-tree-id172 . -671) (undo-tree-id173 . -671) (undo-tree-id174 . -671) (undo-tree-id175 . -671) (undo-tree-id176 . -671) (undo-tree-id177 . -671) (undo-tree-id178 . -671) (undo-tree-id179 . -671) (undo-tree-id180 . -671) (undo-tree-id181 . -671) (undo-tree-id182 . -671) (undo-tree-id183 . -671) (undo-tree-id184 . -671) (undo-tree-id185 . -671) (undo-tree-id186 . -671) (undo-tree-id187 . -671) (undo-tree-id188 . -671) (undo-tree-id189 . -671) (undo-tree-id190 . -671) (undo-tree-id191 . -671) (undo-tree-id192 . -671) (undo-tree-id193 . -671) (undo-tree-id194 . -671) (undo-tree-id195 . -671) (undo-tree-id196 . -671) (undo-tree-id197 . -671) (undo-tree-id198 . -671) (undo-tree-id199 . -671) (undo-tree-id200 . -671) (undo-tree-id201 . -671) (undo-tree-id202 . -671) (undo-tree-id203 . -671) (undo-tree-id204 . -671) (undo-tree-id205 . -671) (undo-tree-id206 . -671) (undo-tree-id207 . -671) (undo-tree-id208 . -671) (undo-tree-id209 . -671) (undo-tree-id210 . -671) (undo-tree-id211 . -671) (undo-tree-id212 . -671) (undo-tree-id213 . -671) (undo-tree-id214 . -671) (undo-tree-id215 . -671) (undo-tree-id216 . -671) (undo-tree-id217 . -671) (undo-tree-id218 . -671) (undo-tree-id219 . -671) (undo-tree-id220 . -671) (undo-tree-id221 . -671) (undo-tree-id222 . -671) (undo-tree-id223 . -671) (undo-tree-id224 . -671) (undo-tree-id225 . -671) (undo-tree-id226 . -671) (undo-tree-id227 . -671) (undo-tree-id228 . -671) (undo-tree-id229 . -671) (undo-tree-id230 . -671) (undo-tree-id231 . -671) (undo-tree-id232 . -671) (undo-tree-id233 . -671) (undo-tree-id234 . -671) (undo-tree-id235 . -671) (undo-tree-id236 . -671) (undo-tree-id237 . -671) 34825 (t 25146 15808 166348 859000)) nil (25147 9087 284550 880000) 0 nil])
([nil nil ((3077 . 5257) (#("
   (add-hook 'after-init-hook 'org-roam-setup)
   (setq org-roam-v2-ack t)

   (use-package org-roam
     :config
     (setq org-roam-directory \"~/org_roam/\"
	   org-roam-dailies-directory \"~/org_roam/daily\"))

     (cl-defmethod org-roam-node-directories ((node org-roam-node))
       \"Access slot \\\"directory\\\" of org-roam-node struct CL-X\"
       (if-let ((dirs (file-name-directory (file-relative-name (org-roam-node-file node) org-roam-directory))))
	   (format \"(%s)\" (car (f-split dirs)))
	 \"\"))

     (cl-defmethod org-roam-node-backlinkscount ((node org-roam-node))
       \"Access slot \\\"backlinks\\\" of org-roam-node struct CL-X\"
       (let* ((count (caar (org-roam-db-query
			    [:select (funcall count source)
				     :from links
				     :where (= dest $s1)
				     :and (= type \"id\")]
			    (org-roam-node-id node)))))
	 (format \"[%d]\" count)))

     (cl-defmethod org-roam-node-backlinkscount-number ((node org-roam-node))
       \"Access slot \\\"backlinks\\\" of org-roam-node struct CL-X. This
       is identical to `org-roam-node-backlinkscount' with the
       difference that it returns a number instead of a fromatted
       string. This is to be used in
       `org-roam-node-sort-by-backlinks'\"
       (let* ((count (caar (org-roam-db-query
			    [:select (funcall count source)
				     :from links
				     :where (= dest $s1)
				     :and (= type \"id\")]
			    (org-roam-node-id node)))))
	 count))

     (cl-defmethod org-roam-node-todostate ((node org-roam-node))
       \"Modified version of org-roam-node-todo to look a bit better\"
       (if-let ((state (org-roam-node-todo node)))
	   (format \"Status: %s\" state)))

     (cl-defmethod org-roam-node-buffer ((node org-roam-node))
       \"Access slot \\\"buffer\\\" of org-roam-node struct CL-X\"
       (let ((buffer (get-file-buffer (org-roam-node-file node))))
	 buffer))

     (setq org-roam-node-display-template \"${title:100} ${backlinkscount:6} ${todostate:20} ${directories:10} ${tags:25}\")

     (add-to-list 'display-buffer-alist
		  '(\"\\\\*org-roam\\\\*\"
		    (display-buffer-in-direction)
		    (direction . right)
		    (window-width . 0.40)
		    (window-height . fit-window-to-buffer))))

" 0 52 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 52 56 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 56 81 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 81 92 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 92 93 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 93 101 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 101 107 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 107 114 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 114 121 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 121 125 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 125 145 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 145 158 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 158 190 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 190 208 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 208 218 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 218 230 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 230 231 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 231 256 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 256 287 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 287 343 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 343 352 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 352 358 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 358 465 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 465 468 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 468 474 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 474 499 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 499 501 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 501 511 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 511 523 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 523 524 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 524 552 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 552 583 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 583 639 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 639 648 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 648 652 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 652 694 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 694 701 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 701 734 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 734 739 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 739 755 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 755 761 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 761 784 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 784 788 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 788 797 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 797 801 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 801 849 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 849 855 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 855 872 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 872 884 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 884 885 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 885 920 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 920 951 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 951 1037 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1037 1065 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1065 1187 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1187 1218 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1218 1220 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1220 1229 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1229 1233 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1233 1275 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1275 1282 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1282 1315 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1315 1320 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1320 1336 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1336 1342 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1342 1365 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1365 1369 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1369 1378 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1378 1382 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1382 1437 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1437 1449 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1449 1450 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1450 1473 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 1473 1504 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1504 1565 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1565 1574 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1574 1580 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1580 1629 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1629 1641 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1641 1658 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1658 1670 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1670 1671 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1671 1691 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 1691 1722 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1722 1775 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1775 1784 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1784 1787 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1787 1861 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1861 1865 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1865 1897 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1897 1976 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1976 2025 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2025 2041 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2041 2181 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 3077) (undo-tree-id0 . -80) (undo-tree-id1 . -80) (undo-tree-id2 . -80) (undo-tree-id3 . -80) (undo-tree-id4 . 2100) (undo-tree-id5 . -80) (undo-tree-id6 . -80) (undo-tree-id7 . -2181) (undo-tree-id8 . -504) (undo-tree-id9 . -504) (undo-tree-id10 . -504) (undo-tree-id11 . -504) (undo-tree-id12 . -504) (undo-tree-id13 . -504) (undo-tree-id14 . -504) (undo-tree-id15 . -504) (undo-tree-id16 . -504) (undo-tree-id17 . -504) (undo-tree-id18 . -504) (undo-tree-id19 . -504) (undo-tree-id20 . -504) (undo-tree-id21 . -504) (undo-tree-id22 . -504) (undo-tree-id23 . -504) (undo-tree-id24 . -504) (undo-tree-id25 . -212) (undo-tree-id26 . -504) (undo-tree-id27 . -504) (undo-tree-id28 . -504) (undo-tree-id29 . -504) (undo-tree-id30 . -504) (undo-tree-id31 . -504) (undo-tree-id32 . -504) (undo-tree-id33 . -504) (undo-tree-id34 . -504) (undo-tree-id35 . -504) (undo-tree-id36 . -504) (undo-tree-id37 . -504) (undo-tree-id38 . -504) (undo-tree-id39 . -504) (undo-tree-id40 . -504) (undo-tree-id41 . -504) (undo-tree-id42 . -504) (undo-tree-id43 . -504) (undo-tree-id44 . -504) (undo-tree-id45 . -504) (undo-tree-id46 . -504) (undo-tree-id47 . -503) (undo-tree-id48 . -503) (undo-tree-id49 . -503) (undo-tree-id50 . -503) (undo-tree-id51 . -503) (undo-tree-id52 . -503) (undo-tree-id53 . -503) (undo-tree-id54 . -503) (undo-tree-id55 . -503) (undo-tree-id56 . -503) (undo-tree-id57 . -503) (undo-tree-id58 . -503) (undo-tree-id59 . -503) (undo-tree-id60 . -503) (undo-tree-id61 . -503) (undo-tree-id62 . -503) (undo-tree-id63 . -503) (undo-tree-id64 . -503) (undo-tree-id65 . -503) (undo-tree-id66 . -502) (undo-tree-id67 . -503) (undo-tree-id68 . -502) (undo-tree-id69 . -503) (undo-tree-id70 . -502) (undo-tree-id71 . -502) (undo-tree-id72 . -502) (undo-tree-id73 . -502) (undo-tree-id74 . -502) (undo-tree-id75 . -502) (undo-tree-id76 . -502) (undo-tree-id77 . -502) (undo-tree-id78 . -502) (undo-tree-id79 . -502) (undo-tree-id80 . -502) (undo-tree-id81 . -502) (undo-tree-id82 . -502) (undo-tree-id83 . -502) (undo-tree-id84 . -502) (undo-tree-id85 . -502) (undo-tree-id86 . -502) (undo-tree-id87 . -502) (undo-tree-id88 . -502) (undo-tree-id89 . -502) (undo-tree-id90 . -502) (undo-tree-id91 . -502) (undo-tree-id92 . -502) (undo-tree-id93 . -502) (undo-tree-id94 . -502) (undo-tree-id95 . -502) (undo-tree-id96 . -502) (undo-tree-id97 . -502) (undo-tree-id98 . -502) (undo-tree-id99 . -502) (undo-tree-id100 . -502) (undo-tree-id101 . -502) (undo-tree-id102 . -502) (undo-tree-id103 . -502) (undo-tree-id104 . -502) (undo-tree-id105 . -502) (undo-tree-id106 . -502) (undo-tree-id107 . -502) (undo-tree-id108 . -502) (undo-tree-id109 . -502) (undo-tree-id110 . -502) (undo-tree-id111 . -502) (undo-tree-id112 . -502) (undo-tree-id113 . -502) (undo-tree-id114 . -502) (undo-tree-id115 . -502) (undo-tree-id116 . -502) (undo-tree-id117 . -502) (undo-tree-id118 . -502) (undo-tree-id119 . -502) (undo-tree-id120 . -502) (undo-tree-id121 . -502) (undo-tree-id122 . -502) (undo-tree-id123 . -502) (undo-tree-id124 . -502) (undo-tree-id125 . -502) (undo-tree-id126 . -502) (undo-tree-id127 . -502) (undo-tree-id128 . -502) (undo-tree-id129 . -502) (undo-tree-id130 . -502) (undo-tree-id131 . -502) (undo-tree-id132 . -502) (undo-tree-id133 . -502) (undo-tree-id134 . -502) (undo-tree-id135 . -502) (undo-tree-id136 . -502) (undo-tree-id137 . -502) (undo-tree-id138 . -502) (undo-tree-id139 . -502) (undo-tree-id140 . -502) (undo-tree-id141 . -502) (undo-tree-id142 . -502) (undo-tree-id143 . -502) (undo-tree-id144 . -502) (undo-tree-id145 . -502) (undo-tree-id146 . -502) (undo-tree-id147 . -502) (undo-tree-id148 . -502) (undo-tree-id149 . -502) (undo-tree-id150 . -502) (undo-tree-id151 . -502) (undo-tree-id152 . -502) (undo-tree-id153 . -502) (undo-tree-id154 . -502) (undo-tree-id155 . -502) (undo-tree-id156 . -502) (undo-tree-id157 . -502) (undo-tree-id158 . -502) (undo-tree-id159 . -502) (undo-tree-id160 . -502) (undo-tree-id161 . -502) (undo-tree-id162 . -502) (undo-tree-id163 . -502) (undo-tree-id164 . -502) (undo-tree-id165 . -502) (undo-tree-id166 . -502) (undo-tree-id167 . -502) (undo-tree-id168 . -502) (undo-tree-id169 . -502) (undo-tree-id170 . -502) (undo-tree-id171 . -502) (undo-tree-id172 . -502) (undo-tree-id173 . -502) (undo-tree-id174 . -502) (undo-tree-id175 . -502) (undo-tree-id176 . -502) (undo-tree-id177 . -502) (undo-tree-id178 . -502) (undo-tree-id179 . -502) (undo-tree-id180 . -502) (undo-tree-id181 . -502) (undo-tree-id182 . -502) (undo-tree-id183 . -502) (undo-tree-id184 . -502) (undo-tree-id185 . -502) (undo-tree-id186 . -502) (undo-tree-id187 . -502) (undo-tree-id188 . -502) (undo-tree-id189 . -502) (undo-tree-id190 . -502) (undo-tree-id191 . -502) (undo-tree-id192 . -502) (undo-tree-id193 . -502) (undo-tree-id194 . -502) (undo-tree-id195 . -502) (undo-tree-id196 . -502) (undo-tree-id197 . -502) (undo-tree-id198 . -502) (undo-tree-id199 . -502) (undo-tree-id200 . -502) (undo-tree-id201 . -502) (undo-tree-id202 . -502) (undo-tree-id203 . -502) (undo-tree-id204 . -502) (undo-tree-id205 . -502) (undo-tree-id206 . -502) (undo-tree-id207 . -502) (undo-tree-id208 . -502) (undo-tree-id209 . -502) (undo-tree-id210 . -502) (undo-tree-id211 . -502) (undo-tree-id212 . -502) (undo-tree-id213 . -502) (undo-tree-id214 . -502) (undo-tree-id215 . -502) (undo-tree-id216 . -502) (undo-tree-id217 . -502) (undo-tree-id218 . -502) (undo-tree-id219 . -502) (undo-tree-id220 . -502) (undo-tree-id221 . -502) (undo-tree-id222 . -502) (undo-tree-id223 . -502) (undo-tree-id224 . -502) (undo-tree-id225 . -502) (undo-tree-id226 . -502) (undo-tree-id227 . -502) (undo-tree-id228 . -502) (undo-tree-id229 . -502) (undo-tree-id230 . -502) (undo-tree-id231 . -502) (undo-tree-id232 . -502) (undo-tree-id233 . -502) (undo-tree-id234 . -502) (undo-tree-id235 . -502) (undo-tree-id236 . -502) (undo-tree-id237 . -502) (undo-tree-id238 . -502) (undo-tree-id239 . -502) (undo-tree-id240 . -502) (undo-tree-id241 . -502) (undo-tree-id242 . -502) (undo-tree-id243 . -502) (undo-tree-id244 . -502) (undo-tree-id245 . -502) (undo-tree-id246 . -502) (undo-tree-id247 . -502) (undo-tree-id248 . -502) (undo-tree-id249 . -502) (undo-tree-id250 . -502) (undo-tree-id251 . -502) (undo-tree-id252 . -502) (undo-tree-id253 . -502) (undo-tree-id254 . -502) (undo-tree-id255 . -502) (undo-tree-id256 . -502) (undo-tree-id257 . -502) (undo-tree-id258 . -502) (undo-tree-id259 . -502) (undo-tree-id260 . -502) (undo-tree-id261 . -502) (undo-tree-id262 . -502) (undo-tree-id263 . -502) (undo-tree-id264 . -502) (undo-tree-id265 . -502) (undo-tree-id266 . -502) (undo-tree-id267 . -502) (undo-tree-id268 . -502) (undo-tree-id269 . -502) (undo-tree-id270 . -502) (undo-tree-id271 . -502) (undo-tree-id272 . -502) (undo-tree-id273 . -502) (undo-tree-id274 . -502) (undo-tree-id275 . -502) (undo-tree-id276 . -502) (undo-tree-id277 . -502) (undo-tree-id278 . -502) (undo-tree-id279 . -502) (undo-tree-id280 . -502) (undo-tree-id281 . -502) (undo-tree-id282 . -502) (undo-tree-id283 . -502) (undo-tree-id284 . -502) (undo-tree-id285 . -502) (undo-tree-id286 . -502) (undo-tree-id287 . -502) (undo-tree-id288 . -502) (undo-tree-id289 . -502) (undo-tree-id290 . -502) (undo-tree-id291 . -502) (undo-tree-id292 . -502) (undo-tree-id293 . -502) (undo-tree-id294 . -502) (undo-tree-id295 . -502) (undo-tree-id296 . -502) (undo-tree-id297 . -502) (undo-tree-id298 . -502) (undo-tree-id299 . -502) (undo-tree-id300 . -502) (undo-tree-id301 . -502) (undo-tree-id302 . -502) (undo-tree-id303 . -502) (undo-tree-id304 . -502) (undo-tree-id305 . -502) (undo-tree-id306 . -502) (undo-tree-id307 . -502) (undo-tree-id308 . -502) (undo-tree-id309 . -502) (undo-tree-id310 . -502) (undo-tree-id311 . -502) (undo-tree-id312 . -502) (undo-tree-id313 . -502) (undo-tree-id314 . -502) (undo-tree-id315 . -502) (undo-tree-id316 . -502) (undo-tree-id317 . -502) (undo-tree-id318 . -502) (undo-tree-id319 . -502) (undo-tree-id320 . -502) (undo-tree-id321 . -502) (undo-tree-id322 . -502) (undo-tree-id323 . -502) (undo-tree-id324 . -502) (undo-tree-id325 . -502) (undo-tree-id326 . -502) (undo-tree-id327 . -502) (undo-tree-id328 . -502) (undo-tree-id329 . -502) (undo-tree-id330 . -502) (undo-tree-id331 . -502) (undo-tree-id332 . -502) (undo-tree-id333 . -502) (undo-tree-id334 . -502) (undo-tree-id335 . -502) (undo-tree-id336 . -502) (undo-tree-id337 . -502) (undo-tree-id338 . -502) (undo-tree-id339 . -502) (undo-tree-id340 . -502) (undo-tree-id341 . -502) (undo-tree-id342 . -502) (undo-tree-id343 . -502) (undo-tree-id344 . -502) (undo-tree-id345 . -502) (undo-tree-id346 . -502) (undo-tree-id347 . -502) (undo-tree-id348 . -502) (undo-tree-id349 . -502) (undo-tree-id350 . -502) (undo-tree-id351 . -502) (undo-tree-id352 . -502) (undo-tree-id353 . -502) (undo-tree-id354 . -502) (undo-tree-id355 . -502) (undo-tree-id356 . -502) (undo-tree-id357 . -502) (undo-tree-id358 . -502) (undo-tree-id359 . -502) (undo-tree-id360 . -502) (undo-tree-id361 . -502) (undo-tree-id362 . -502) (undo-tree-id363 . -502) (undo-tree-id364 . -502) (undo-tree-id365 . -502) (undo-tree-id366 . -502) (undo-tree-id367 . -502) (undo-tree-id368 . -502) (undo-tree-id369 . -502) (undo-tree-id370 . -502) (undo-tree-id371 . -502) (undo-tree-id372 . -502) (undo-tree-id373 . -80) (undo-tree-id374 . -80) (undo-tree-id375 . -80) (undo-tree-id376 . -80) (undo-tree-id377 . -80) (undo-tree-id378 . -80) (undo-tree-id379 . -80) (undo-tree-id380 . -80) (undo-tree-id381 . -81) (undo-tree-id382 . -80) (undo-tree-id383 . -80) (undo-tree-id384 . -80) (undo-tree-id385 . -80) (undo-tree-id386 . -80) (undo-tree-id387 . -80) (undo-tree-id388 . -80) (undo-tree-id389 . -80) (undo-tree-id390 . -80) (undo-tree-id391 . -80) (undo-tree-id392 . -80) (undo-tree-id393 . -80) (undo-tree-id394 . -80) (undo-tree-id395 . -80) 3157 (t 25147 9087 304092 158000)) nil (25147 12102 510419 150000) 0 nil])
([nil nil ((14208 . 14230) (#("~/Sync/My" 0 9 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -14208) (undo-tree-id0 . -9) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -2) (undo-tree-id9 . -1) (undo-tree-id10 . -2) (undo-tree-id11 . -2) (undo-tree-id12 . -2) (undo-tree-id13 . -2) (undo-tree-id14 . -2) (undo-tree-id15 . -2) (undo-tree-id16 . -3) (undo-tree-id17 . -2) (undo-tree-id18 . -3) (undo-tree-id19 . -3) (undo-tree-id20 . -3) (undo-tree-id21 . -3) (undo-tree-id22 . -3) (undo-tree-id23 . -3) (undo-tree-id24 . -3) (undo-tree-id25 . -3) (undo-tree-id26 . -3) (undo-tree-id27 . -3) (undo-tree-id28 . -3) (undo-tree-id29 . -3) (undo-tree-id30 . -3) (undo-tree-id31 . -3) (undo-tree-id32 . -3) (undo-tree-id33 . -3) (undo-tree-id34 . -3) (undo-tree-id35 . -3) (undo-tree-id36 . -3) (undo-tree-id37 . -3) (undo-tree-id38 . -3) (undo-tree-id39 . -3) (undo-tree-id40 . -3) (undo-tree-id41 . -3) (undo-tree-id42 . -3) (undo-tree-id43 . -3) (undo-tree-id44 . -3) (undo-tree-id45 . -3) (undo-tree-id46 . -3) (undo-tree-id47 . -3) (undo-tree-id48 . -3) (undo-tree-id49 . -3) (undo-tree-id50 . -3) (undo-tree-id51 . -3) (undo-tree-id52 . -3) (undo-tree-id53 . -3) (undo-tree-id54 . -3) (undo-tree-id55 . -3) (undo-tree-id56 . -3) (undo-tree-id57 . -3) (undo-tree-id58 . -3) (undo-tree-id59 . -3) (undo-tree-id60 . -3) (undo-tree-id61 . -3) (undo-tree-id62 . -3) (undo-tree-id63 . -3) (undo-tree-id64 . -3) (undo-tree-id65 . -3) (undo-tree-id66 . -3) (undo-tree-id67 . -3) (undo-tree-id68 . -3) (undo-tree-id69 . -3) (undo-tree-id70 . -3) (undo-tree-id71 . -3) (undo-tree-id72 . -3) (undo-tree-id73 . -3) (undo-tree-id74 . -3) (undo-tree-id75 . -3) (undo-tree-id76 . -3) (undo-tree-id77 . -3) (undo-tree-id78 . -3) (undo-tree-id79 . -3) (undo-tree-id80 . -3) (undo-tree-id81 . -3) (undo-tree-id82 . -3) (undo-tree-id83 . -3) (undo-tree-id84 . -3) (undo-tree-id85 . -3) (undo-tree-id86 . -3) (undo-tree-id87 . -3) (undo-tree-id88 . -3) (undo-tree-id89 . -3) (undo-tree-id90 . -3) (undo-tree-id91 . -3) (undo-tree-id92 . -3) (undo-tree-id93 . -3) (undo-tree-id94 . -3) (undo-tree-id95 . -3) (undo-tree-id96 . -3) (undo-tree-id97 . -3) (undo-tree-id98 . -3) (undo-tree-id99 . -3) (undo-tree-id100 . -3) (undo-tree-id101 . -3) (undo-tree-id102 . -3) (undo-tree-id103 . -3) (undo-tree-id104 . -3) (undo-tree-id105 . -3) (undo-tree-id106 . -3) (undo-tree-id107 . -3) (undo-tree-id108 . -3) (undo-tree-id109 . -3) (undo-tree-id110 . -3) (undo-tree-id111 . -3) (undo-tree-id112 . -3) (undo-tree-id113 . -3) (undo-tree-id114 . -3) (undo-tree-id115 . -3) (undo-tree-id116 . -3) (undo-tree-id117 . -3) (undo-tree-id118 . -3) (undo-tree-id119 . -3) (undo-tree-id120 . -4) (undo-tree-id121 . -3) (undo-tree-id122 . -4) (undo-tree-id123 . -4) (undo-tree-id124 . -4) (undo-tree-id125 . -4) (undo-tree-id126 . -4) (undo-tree-id127 . -4) (undo-tree-id128 . -5) (undo-tree-id129 . -4) (undo-tree-id130 . -5) (undo-tree-id131 . -5) (undo-tree-id132 . -5) (undo-tree-id133 . -5) (undo-tree-id134 . -5) (undo-tree-id135 . -5) (undo-tree-id136 . -6) (undo-tree-id137 . -5) (undo-tree-id138 . -6) (undo-tree-id139 . -6) (undo-tree-id140 . -6) (undo-tree-id141 . -6) (undo-tree-id142 . -6) (undo-tree-id143 . -6) (undo-tree-id144 . -9) (undo-tree-id145 . -6) (undo-tree-id146 . -6) (undo-tree-id147 . -6) (undo-tree-id148 . -6) (undo-tree-id149 . -6) (undo-tree-id150 . -6) (undo-tree-id151 . -6) (undo-tree-id152 . -6) (undo-tree-id153 . -6) (undo-tree-id154 . -6) (undo-tree-id155 . -6) (undo-tree-id156 . -6) (undo-tree-id157 . -6) (undo-tree-id158 . -6) (undo-tree-id159 . -6) (undo-tree-id160 . -6) (undo-tree-id161 . -6) (undo-tree-id162 . -6) (undo-tree-id163 . -6) (undo-tree-id164 . -6) (undo-tree-id165 . -7) (undo-tree-id166 . -7) (undo-tree-id167 . -7) (undo-tree-id168 . -7) (undo-tree-id169 . -7) (undo-tree-id170 . -7) (undo-tree-id171 . -6) (undo-tree-id172 . -7) (undo-tree-id173 . -7) (undo-tree-id174 . -7) (undo-tree-id175 . -7) (undo-tree-id176 . -7) (undo-tree-id177 . -7) (undo-tree-id178 . -7) (undo-tree-id179 . -8) (undo-tree-id180 . -8) (undo-tree-id181 . -8) (undo-tree-id182 . -8) (undo-tree-id183 . -8) (undo-tree-id184 . -8) (undo-tree-id185 . -7) (undo-tree-id186 . -8) (undo-tree-id187 . -8) (undo-tree-id188 . -8) (undo-tree-id189 . -8) (undo-tree-id190 . -8) (undo-tree-id191 . -8) (undo-tree-id192 . -8) (undo-tree-id193 . -9) (undo-tree-id194 . -9) (undo-tree-id195 . -9) (undo-tree-id196 . -9) (undo-tree-id197 . -9) (undo-tree-id198 . -9) (undo-tree-id199 . -8) (undo-tree-id200 . -9) (undo-tree-id201 . -9) (undo-tree-id202 . -9) (undo-tree-id203 . -9) (undo-tree-id204 . -9) (undo-tree-id205 . -9) (undo-tree-id206 . -9) (undo-tree-id207 . -9) (undo-tree-id208 . -9) (undo-tree-id209 . -9) (undo-tree-id210 . -9) (undo-tree-id211 . -9) (undo-tree-id212 . -9) (undo-tree-id213 . -9) (undo-tree-id214 . -9) (undo-tree-id215 . -9) (undo-tree-id216 . -9) (undo-tree-id217 . -9) (undo-tree-id218 . -9) (undo-tree-id219 . -9) (undo-tree-id220 . -9) (undo-tree-id221 . -9) (undo-tree-id222 . -9) (undo-tree-id223 . -9) (undo-tree-id224 . -9) (undo-tree-id225 . -9) (undo-tree-id226 . -9) (undo-tree-id227 . -9) (undo-tree-id228 . -9) (undo-tree-id229 . -9) (undo-tree-id230 . -9) (undo-tree-id231 . -9) (undo-tree-id232 . -9) (undo-tree-id233 . -9) (undo-tree-id234 . -9) (undo-tree-id235 . -9) (undo-tree-id236 . -9) (undo-tree-id237 . -9) (undo-tree-id238 . -9) (undo-tree-id239 . -9) (undo-tree-id240 . -9) (undo-tree-id241 . -9) (undo-tree-id242 . -9) (undo-tree-id243 . -9) 14217 (14211 . 14217) (#("u" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -14211) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (#("n" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -14212) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (#("c" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -14213) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (#("/" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -14214) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) 14215 (14212 . 14215) (#("m" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -14212) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (#("c" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -14213) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) 14214 (14208 . 14214) (#("!" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -14208) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) 14209 (14208 . 14209) (14207 . 14209) (#("\"" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -14207) (14206 . 14208) (t 25147 12102 533065 61000)) nil (25147 27912 742575 175000) 0 nil])
([nil nil ((68827 . 68840) (#("f" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68827) (undo-tree-id16317 . -1) (undo-tree-id16318 . -1) (undo-tree-id16319 . -1) (undo-tree-id16320 . -1) (undo-tree-id16321 . -1) (undo-tree-id16322 . -1) (undo-tree-id16323 . -1) (undo-tree-id16324 . -1) (undo-tree-id16325 . -1) (undo-tree-id16326 . -1) (undo-tree-id16327 . -1) (undo-tree-id16328 . -1) (undo-tree-id16329 . -1) (undo-tree-id16330 . -1) (undo-tree-id16331 . -1) (undo-tree-id16332 . -1) (undo-tree-id16333 . -1) (undo-tree-id16334 . -1) (undo-tree-id16335 . -1) (undo-tree-id16336 . -1) (undo-tree-id16337 . -1) (undo-tree-id16338 . -1) (undo-tree-id16339 . -1) (undo-tree-id16340 . -1) (undo-tree-id16341 . -1) (undo-tree-id16342 . -1) (undo-tree-id16343 . -1) (undo-tree-id16344 . -1) (undo-tree-id16345 . -1) (undo-tree-id16346 . -1) (undo-tree-id16347 . -1) (undo-tree-id16348 . -1) (undo-tree-id16349 . -1) (undo-tree-id16350 . -1) (undo-tree-id16351 . -1) (undo-tree-id16352 . -1) (undo-tree-id16353 . -1) (undo-tree-id16354 . -1) (undo-tree-id16355 . -1) (undo-tree-id16356 . -1) (undo-tree-id16357 . -1) (undo-tree-id16358 . -1) (undo-tree-id16359 . -1) (undo-tree-id16360 . -1) (undo-tree-id16361 . -1) (undo-tree-id16362 . -1) (undo-tree-id16363 . -1) (undo-tree-id16364 . -1) (undo-tree-id16365 . -1) (undo-tree-id16366 . -1) (undo-tree-id16367 . -1) (undo-tree-id16368 . -1) (undo-tree-id16369 . -1) (undo-tree-id16370 . -1) (undo-tree-id16371 . -1) (undo-tree-id16372 . -1) (undo-tree-id16373 . -1) (undo-tree-id16374 . -1) (undo-tree-id16375 . -1) (undo-tree-id16376 . -1) (undo-tree-id16377 . -1) (undo-tree-id16378 . -1) (undo-tree-id16379 . -1) (undo-tree-id16380 . -1) (undo-tree-id16381 . -1) (undo-tree-id16382 . -1) (undo-tree-id16383 . -1) (undo-tree-id16384 . -1) (undo-tree-id16385 . -1) (undo-tree-id16386 . -1) (undo-tree-id16387 . -1) (undo-tree-id16388 . -1) (undo-tree-id16389 . -1) (undo-tree-id16390 . -1) (undo-tree-id16391 . -1) (undo-tree-id16392 . -1) (undo-tree-id16393 . -1) (undo-tree-id16394 . -1) (undo-tree-id16395 . -1) (undo-tree-id16396 . -1) (undo-tree-id16397 . -1) (undo-tree-id16398 . -1) (undo-tree-id16399 . -1) (undo-tree-id16400 . -1) (undo-tree-id16401 . -1) (undo-tree-id16402 . -1) (undo-tree-id16403 . -1) (undo-tree-id16404 . -1) (undo-tree-id16405 . -1) (undo-tree-id16406 . -1) (undo-tree-id16407 . -1) (undo-tree-id16408 . -1) (undo-tree-id16409 . -1) (undo-tree-id16410 . -1) (undo-tree-id16411 . -1) (undo-tree-id16412 . -1) (undo-tree-id16413 . -1) (undo-tree-id16414 . -1) (undo-tree-id16415 . -1) (undo-tree-id16416 . -1) (undo-tree-id16417 . -1) (undo-tree-id16418 . -1) (undo-tree-id16419 . -1) (undo-tree-id16420 . -1) (undo-tree-id16421 . -1) (undo-tree-id16422 . -1) (undo-tree-id16423 . -1) (undo-tree-id16424 . -1) (undo-tree-id16425 . -1) (undo-tree-id16426 . -1) (undo-tree-id16427 . -1) (undo-tree-id16428 . -1) (undo-tree-id16429 . -1) (undo-tree-id16430 . -1) (undo-tree-id16431 . -1) (undo-tree-id16432 . -1) (undo-tree-id16433 . -1) (undo-tree-id16434 . -1) (undo-tree-id16435 . -1) (undo-tree-id16436 . -1) (undo-tree-id16437 . -1) (undo-tree-id16438 . -1) (undo-tree-id16439 . -1) (undo-tree-id16440 . -1) (undo-tree-id16441 . -1) (#("i" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68828) (undo-tree-id16442 . -1) (undo-tree-id16443 . -1) (undo-tree-id16444 . -1) (undo-tree-id16445 . -1) (undo-tree-id16446 . -1) (undo-tree-id16447 . -1) (undo-tree-id16448 . -1) (undo-tree-id16449 . -1) (undo-tree-id16450 . -1) (undo-tree-id16451 . -1) (undo-tree-id16452 . -1) (undo-tree-id16453 . -1) (undo-tree-id16454 . -1) (undo-tree-id16455 . -1) (undo-tree-id16456 . -1) (undo-tree-id16457 . -1) (undo-tree-id16458 . -1) (undo-tree-id16459 . -1) (undo-tree-id16460 . -1) (undo-tree-id16461 . -1) (undo-tree-id16462 . -1) (undo-tree-id16463 . -1) (undo-tree-id16464 . -1) (undo-tree-id16465 . -1) (undo-tree-id16466 . -1) (undo-tree-id16467 . -1) (undo-tree-id16468 . -1) (undo-tree-id16469 . -1) (undo-tree-id16470 . -1) (undo-tree-id16471 . -1) (undo-tree-id16472 . -1) (undo-tree-id16473 . -1) (undo-tree-id16474 . -1) (undo-tree-id16475 . -1) (undo-tree-id16476 . -1) (undo-tree-id16477 . -1) (undo-tree-id16478 . -1) (undo-tree-id16479 . -1) (undo-tree-id16480 . -1) (undo-tree-id16481 . -1) (undo-tree-id16482 . -1) (undo-tree-id16483 . -1) (undo-tree-id16484 . -1) (undo-tree-id16485 . -1) (undo-tree-id16486 . -1) (undo-tree-id16487 . -1) (undo-tree-id16488 . -1) (undo-tree-id16489 . -1) (undo-tree-id16490 . -1) (undo-tree-id16491 . -1) (undo-tree-id16492 . -1) (undo-tree-id16493 . -1) (undo-tree-id16494 . -1) (undo-tree-id16495 . -1) (undo-tree-id16496 . -1) (undo-tree-id16497 . -1) (undo-tree-id16498 . -1) (undo-tree-id16499 . -1) (undo-tree-id16500 . -1) (undo-tree-id16501 . -1) (undo-tree-id16502 . -1) (undo-tree-id16503 . -1) (undo-tree-id16504 . -1) (undo-tree-id16505 . -1) (undo-tree-id16506 . -1) (undo-tree-id16507 . -1) (undo-tree-id16508 . -1) (undo-tree-id16509 . -1) (undo-tree-id16510 . -1) (undo-tree-id16511 . -1) (undo-tree-id16512 . -1) (undo-tree-id16513 . -1) (undo-tree-id16514 . -1) (undo-tree-id16515 . -1) (undo-tree-id16516 . -1) (undo-tree-id16517 . -1) (undo-tree-id16518 . -1) (undo-tree-id16519 . -1) (undo-tree-id16520 . -1) (undo-tree-id16521 . -1) (undo-tree-id16522 . -1) (undo-tree-id16523 . -1) (undo-tree-id16524 . -1) (undo-tree-id16525 . -1) (undo-tree-id16526 . -1) (undo-tree-id16527 . -1) (undo-tree-id16528 . -1) (undo-tree-id16529 . -1) (undo-tree-id16530 . -1) (undo-tree-id16531 . -1) (undo-tree-id16532 . -1) (undo-tree-id16533 . -1) (undo-tree-id16534 . -1) (undo-tree-id16535 . -1) (undo-tree-id16536 . -1) (undo-tree-id16537 . -1) (undo-tree-id16538 . -1) (undo-tree-id16539 . -1) (undo-tree-id16540 . -1) (undo-tree-id16541 . -1) (undo-tree-id16542 . -1) (undo-tree-id16543 . -1) (undo-tree-id16544 . -1) (undo-tree-id16545 . -1) (undo-tree-id16546 . -1) (undo-tree-id16547 . -1) (undo-tree-id16548 . -1) (undo-tree-id16549 . -1) (undo-tree-id16550 . -1) (undo-tree-id16551 . -1) (undo-tree-id16552 . -1) (undo-tree-id16553 . -1) (undo-tree-id16554 . -1) (undo-tree-id16555 . -1) (undo-tree-id16556 . -1) (undo-tree-id16557 . -1) (undo-tree-id16558 . -1) (#("n" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68829) (undo-tree-id16559 . -1) (undo-tree-id16560 . -1) (undo-tree-id16561 . -1) (undo-tree-id16562 . -1) (undo-tree-id16563 . -1) (undo-tree-id16564 . -1) (undo-tree-id16565 . -1) (undo-tree-id16566 . -1) (undo-tree-id16567 . -1) (undo-tree-id16568 . -1) (undo-tree-id16569 . -1) (undo-tree-id16570 . -1) (undo-tree-id16571 . -1) (undo-tree-id16572 . -1) (undo-tree-id16573 . -1) (undo-tree-id16574 . -1) (undo-tree-id16575 . -1) (undo-tree-id16576 . -1) (undo-tree-id16577 . -1) (undo-tree-id16578 . -1) (undo-tree-id16579 . -1) (undo-tree-id16580 . -1) (undo-tree-id16581 . -1) (undo-tree-id16582 . -1) (undo-tree-id16583 . -1) (undo-tree-id16584 . -1) (undo-tree-id16585 . -1) (undo-tree-id16586 . -1) (undo-tree-id16587 . -1) (undo-tree-id16588 . -1) (undo-tree-id16589 . -1) (undo-tree-id16590 . -1) (undo-tree-id16591 . -1) (undo-tree-id16592 . -1) (undo-tree-id16593 . -1) (undo-tree-id16594 . -1) (undo-tree-id16595 . -1) (undo-tree-id16596 . -1) (undo-tree-id16597 . -1) (undo-tree-id16598 . -1) (undo-tree-id16599 . -1) (undo-tree-id16600 . -1) (undo-tree-id16601 . -1) (undo-tree-id16602 . -1) (undo-tree-id16603 . -1) (undo-tree-id16604 . -1) (undo-tree-id16605 . -1) (undo-tree-id16606 . -1) (undo-tree-id16607 . -1) (undo-tree-id16608 . -1) (undo-tree-id16609 . -1) (undo-tree-id16610 . -1) (undo-tree-id16611 . -1) (undo-tree-id16612 . -1) (undo-tree-id16613 . -1) (undo-tree-id16614 . -1) (undo-tree-id16615 . -1) (undo-tree-id16616 . -1) (undo-tree-id16617 . -1) (undo-tree-id16618 . -1) (undo-tree-id16619 . -1) (undo-tree-id16620 . -1) (undo-tree-id16621 . -1) (undo-tree-id16622 . -1) (undo-tree-id16623 . -1) (undo-tree-id16624 . -1) (undo-tree-id16625 . -1) (undo-tree-id16626 . -1) (undo-tree-id16627 . -1) (undo-tree-id16628 . -1) (undo-tree-id16629 . -1) (undo-tree-id16630 . -1) (undo-tree-id16631 . -1) (undo-tree-id16632 . -1) (undo-tree-id16633 . -1) (undo-tree-id16634 . -1) (undo-tree-id16635 . -1) (undo-tree-id16636 . -1) (undo-tree-id16637 . -1) (undo-tree-id16638 . -1) (undo-tree-id16639 . -1) (undo-tree-id16640 . -1) (undo-tree-id16641 . -1) (undo-tree-id16642 . -1) (undo-tree-id16643 . -1) (undo-tree-id16644 . -1) (undo-tree-id16645 . -1) (undo-tree-id16646 . -1) (undo-tree-id16647 . -1) (undo-tree-id16648 . -1) (undo-tree-id16649 . -1) (undo-tree-id16650 . -1) (undo-tree-id16651 . -1) (undo-tree-id16652 . -1) (undo-tree-id16653 . -1) (undo-tree-id16654 . -1) (undo-tree-id16655 . -1) (undo-tree-id16656 . -1) (undo-tree-id16657 . -1) (undo-tree-id16658 . -1) (undo-tree-id16659 . -1) (undo-tree-id16660 . -1) (undo-tree-id16661 . -1) (undo-tree-id16662 . -1) (undo-tree-id16663 . -1) (undo-tree-id16664 . -1) (undo-tree-id16665 . -1) (undo-tree-id16666 . -1) (undo-tree-id16667 . -1) (#("d" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68830) (undo-tree-id16668 . -1) (undo-tree-id16669 . -1) (undo-tree-id16670 . -1) (undo-tree-id16671 . -1) (undo-tree-id16672 . -1) (undo-tree-id16673 . -1) (undo-tree-id16674 . -1) (undo-tree-id16675 . -1) (undo-tree-id16676 . -1) (undo-tree-id16677 . -1) (undo-tree-id16678 . -1) (undo-tree-id16679 . -1) (undo-tree-id16680 . -1) (undo-tree-id16681 . -1) (undo-tree-id16682 . -1) (undo-tree-id16683 . -1) (undo-tree-id16684 . -1) (undo-tree-id16685 . -1) (undo-tree-id16686 . -1) (undo-tree-id16687 . -1) (undo-tree-id16688 . -1) (undo-tree-id16689 . -1) (undo-tree-id16690 . -1) (undo-tree-id16691 . -1) (undo-tree-id16692 . -1) (undo-tree-id16693 . -1) (undo-tree-id16694 . -1) (undo-tree-id16695 . -1) (undo-tree-id16696 . -1) (undo-tree-id16697 . -1) (undo-tree-id16698 . -1) (undo-tree-id16699 . -1) (undo-tree-id16700 . -1) (undo-tree-id16701 . -1) (undo-tree-id16702 . -1) (undo-tree-id16703 . -1) (undo-tree-id16704 . -1) (undo-tree-id16705 . -1) (undo-tree-id16706 . -1) (undo-tree-id16707 . -1) (undo-tree-id16708 . -1) (undo-tree-id16709 . -1) (undo-tree-id16710 . -1) (undo-tree-id16711 . -1) (undo-tree-id16712 . -1) (undo-tree-id16713 . -1) (undo-tree-id16714 . -1) (undo-tree-id16715 . -1) (undo-tree-id16716 . -1) (undo-tree-id16717 . -1) (undo-tree-id16718 . -1) (undo-tree-id16719 . -1) (undo-tree-id16720 . -1) (undo-tree-id16721 . -1) (undo-tree-id16722 . -1) (undo-tree-id16723 . -1) (undo-tree-id16724 . -1) (undo-tree-id16725 . -1) (undo-tree-id16726 . -1) (undo-tree-id16727 . -1) (undo-tree-id16728 . -1) (undo-tree-id16729 . -1) (undo-tree-id16730 . -1) (undo-tree-id16731 . -1) (undo-tree-id16732 . -1) (undo-tree-id16733 . -1) (undo-tree-id16734 . -1) (undo-tree-id16735 . -1) (undo-tree-id16736 . -1) (undo-tree-id16737 . -1) (undo-tree-id16738 . -1) (undo-tree-id16739 . -1) (undo-tree-id16740 . -1) (undo-tree-id16741 . -1) (undo-tree-id16742 . -1) (undo-tree-id16743 . -1) (undo-tree-id16744 . -1) (undo-tree-id16745 . -1) (undo-tree-id16746 . -1) (undo-tree-id16747 . -1) (undo-tree-id16748 . -1) (undo-tree-id16749 . -1) (undo-tree-id16750 . -1) (undo-tree-id16751 . -1) (undo-tree-id16752 . -1) (undo-tree-id16753 . -1) (undo-tree-id16754 . -1) (undo-tree-id16755 . -1) (undo-tree-id16756 . -1) (undo-tree-id16757 . -1) (undo-tree-id16758 . -1) (undo-tree-id16759 . -1) (undo-tree-id16760 . -1) (undo-tree-id16761 . -1) (undo-tree-id16762 . -1) (undo-tree-id16763 . -1) (undo-tree-id16764 . -1) (undo-tree-id16765 . -1) (undo-tree-id16766 . -1) (undo-tree-id16767 . -1) (undo-tree-id16768 . -1) (#("-" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68831) (undo-tree-id16769 . -1) (undo-tree-id16770 . -1) (undo-tree-id16771 . -1) (undo-tree-id16772 . -1) (undo-tree-id16773 . -1) (undo-tree-id16774 . -1) (undo-tree-id16775 . -1) (undo-tree-id16776 . -1) (undo-tree-id16777 . -1) (undo-tree-id16778 . -1) (undo-tree-id16779 . -1) (undo-tree-id16780 . -1) (undo-tree-id16781 . -1) (undo-tree-id16782 . -1) (undo-tree-id16783 . -1) (undo-tree-id16784 . -1) (undo-tree-id16785 . -1) (undo-tree-id16786 . -1) (undo-tree-id16787 . -1) (undo-tree-id16788 . -1) (undo-tree-id16789 . -1) (undo-tree-id16790 . -1) (undo-tree-id16791 . -1) (undo-tree-id16792 . -1) (undo-tree-id16793 . -1) (undo-tree-id16794 . -1) (undo-tree-id16795 . -1) (undo-tree-id16796 . -1) (undo-tree-id16797 . -1) (undo-tree-id16798 . -1) (undo-tree-id16799 . -1) (undo-tree-id16800 . -1) (undo-tree-id16801 . -1) (undo-tree-id16802 . -1) (undo-tree-id16803 . -1) (undo-tree-id16804 . -1) (undo-tree-id16805 . -1) (undo-tree-id16806 . -1) (undo-tree-id16807 . -1) (undo-tree-id16808 . -1) (undo-tree-id16809 . -1) (undo-tree-id16810 . -1) (undo-tree-id16811 . -1) (undo-tree-id16812 . -1) (undo-tree-id16813 . -1) (undo-tree-id16814 . -1) (undo-tree-id16815 . -1) (undo-tree-id16816 . -1) (undo-tree-id16817 . -1) (undo-tree-id16818 . -1) (undo-tree-id16819 . -1) (undo-tree-id16820 . -1) (undo-tree-id16821 . -1) (undo-tree-id16822 . -1) (undo-tree-id16823 . -1) (undo-tree-id16824 . -1) (undo-tree-id16825 . -1) (undo-tree-id16826 . -1) (undo-tree-id16827 . -1) (undo-tree-id16828 . -1) (undo-tree-id16829 . -1) (undo-tree-id16830 . -1) (undo-tree-id16831 . -1) (undo-tree-id16832 . -1) (undo-tree-id16833 . -1) (undo-tree-id16834 . -1) (undo-tree-id16835 . -1) (undo-tree-id16836 . -1) (undo-tree-id16837 . -1) (undo-tree-id16838 . -1) (undo-tree-id16839 . -1) (undo-tree-id16840 . -1) (undo-tree-id16841 . -1) (undo-tree-id16842 . -1) (undo-tree-id16843 . -1) (undo-tree-id16844 . -1) (undo-tree-id16845 . -1) (undo-tree-id16846 . -1) (undo-tree-id16847 . -1) (undo-tree-id16848 . -1) (undo-tree-id16849 . -1) (undo-tree-id16850 . -1) (undo-tree-id16851 . -1) (undo-tree-id16852 . -1) (undo-tree-id16853 . -1) (undo-tree-id16854 . -1) (undo-tree-id16855 . -1) (undo-tree-id16856 . -1) (undo-tree-id16857 . -1) (undo-tree-id16858 . -1) (undo-tree-id16859 . -1) (undo-tree-id16860 . -1) (undo-tree-id16861 . -1) (#("f" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68832) (undo-tree-id16862 . -1) (undo-tree-id16863 . -1) (undo-tree-id16864 . -1) (undo-tree-id16865 . -1) (undo-tree-id16866 . -1) (undo-tree-id16867 . -1) (undo-tree-id16868 . -1) (undo-tree-id16869 . -1) (undo-tree-id16870 . -1) (undo-tree-id16871 . -1) (undo-tree-id16872 . -1) (undo-tree-id16873 . -1) (undo-tree-id16874 . -1) (undo-tree-id16875 . -1) (undo-tree-id16876 . -1) (undo-tree-id16877 . -1) (undo-tree-id16878 . -1) (undo-tree-id16879 . -1) (undo-tree-id16880 . -1) (undo-tree-id16881 . -1) (undo-tree-id16882 . -1) (undo-tree-id16883 . -1) (undo-tree-id16884 . -1) (undo-tree-id16885 . -1) (undo-tree-id16886 . -1) (undo-tree-id16887 . -1) (undo-tree-id16888 . -1) (undo-tree-id16889 . -1) (undo-tree-id16890 . -1) (undo-tree-id16891 . -1) (undo-tree-id16892 . -1) (undo-tree-id16893 . -1) (undo-tree-id16894 . -1) (undo-tree-id16895 . -1) (undo-tree-id16896 . -1) (undo-tree-id16897 . -1) (undo-tree-id16898 . -1) (undo-tree-id16899 . -1) (undo-tree-id16900 . -1) (undo-tree-id16901 . -1) (undo-tree-id16902 . -1) (undo-tree-id16903 . -1) (undo-tree-id16904 . -1) (undo-tree-id16905 . -1) (undo-tree-id16906 . -1) (undo-tree-id16907 . -1) (undo-tree-id16908 . -1) (undo-tree-id16909 . -1) (undo-tree-id16910 . -1) (undo-tree-id16911 . -1) (undo-tree-id16912 . -1) (undo-tree-id16913 . -1) (undo-tree-id16914 . -1) (undo-tree-id16915 . -1) (undo-tree-id16916 . -1) (undo-tree-id16917 . -1) (undo-tree-id16918 . -1) (undo-tree-id16919 . -1) (undo-tree-id16920 . -1) (undo-tree-id16921 . -1) (undo-tree-id16922 . -1) (undo-tree-id16923 . -1) (undo-tree-id16924 . -1) (undo-tree-id16925 . -1) (undo-tree-id16926 . -1) (undo-tree-id16927 . -1) (undo-tree-id16928 . -1) (undo-tree-id16929 . -1) (undo-tree-id16930 . -1) (undo-tree-id16931 . -1) (undo-tree-id16932 . -1) (undo-tree-id16933 . -1) (undo-tree-id16934 . -1) (undo-tree-id16935 . -1) (undo-tree-id16936 . -1) (undo-tree-id16937 . -1) (undo-tree-id16938 . -1) (undo-tree-id16939 . -1) (undo-tree-id16940 . -1) (undo-tree-id16941 . -1) (undo-tree-id16942 . -1) (undo-tree-id16943 . -1) (undo-tree-id16944 . -1) (undo-tree-id16945 . -1) (undo-tree-id16946 . -1) (#("i" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68833) (undo-tree-id16947 . -1) (undo-tree-id16948 . -1) (undo-tree-id16949 . -1) (undo-tree-id16950 . -1) (undo-tree-id16951 . -1) (undo-tree-id16952 . -1) (undo-tree-id16953 . -1) (undo-tree-id16954 . -1) (undo-tree-id16955 . -1) (undo-tree-id16956 . -1) (undo-tree-id16957 . -1) (undo-tree-id16958 . -1) (undo-tree-id16959 . -1) (undo-tree-id16960 . -1) (undo-tree-id16961 . -1) (undo-tree-id16962 . -1) (undo-tree-id16963 . -1) (undo-tree-id16964 . -1) (undo-tree-id16965 . -1) (undo-tree-id16966 . -1) (undo-tree-id16967 . -1) (undo-tree-id16968 . -1) (undo-tree-id16969 . -1) (undo-tree-id16970 . -1) (undo-tree-id16971 . -1) (undo-tree-id16972 . -1) (undo-tree-id16973 . -1) (undo-tree-id16974 . -1) (undo-tree-id16975 . -1) (undo-tree-id16976 . -1) (undo-tree-id16977 . -1) (undo-tree-id16978 . -1) (undo-tree-id16979 . -1) (undo-tree-id16980 . -1) (undo-tree-id16981 . -1) (undo-tree-id16982 . -1) (undo-tree-id16983 . -1) (undo-tree-id16984 . -1) (undo-tree-id16985 . -1) (undo-tree-id16986 . -1) (undo-tree-id16987 . -1) (undo-tree-id16988 . -1) (undo-tree-id16989 . -1) (undo-tree-id16990 . -1) (undo-tree-id16991 . -1) (undo-tree-id16992 . -1) (undo-tree-id16993 . -1) (undo-tree-id16994 . -1) (undo-tree-id16995 . -1) (undo-tree-id16996 . -1) (undo-tree-id16997 . -1) (undo-tree-id16998 . -1) (undo-tree-id16999 . -1) (undo-tree-id17000 . -1) (undo-tree-id17001 . -1) (undo-tree-id17002 . -1) (undo-tree-id17003 . -1) (undo-tree-id17004 . -1) (undo-tree-id17005 . -1) (undo-tree-id17006 . -1) (undo-tree-id17007 . -1) (undo-tree-id17008 . -1) (undo-tree-id17009 . -1) (undo-tree-id17010 . -1) (undo-tree-id17011 . -1) (undo-tree-id17012 . -1) (undo-tree-id17013 . -1) (undo-tree-id17014 . -1) (undo-tree-id17015 . -1) (undo-tree-id17016 . -1) (undo-tree-id17017 . -1) (undo-tree-id17018 . -1) (undo-tree-id17019 . -1) (undo-tree-id17020 . -1) (undo-tree-id17021 . -1) (undo-tree-id17022 . -1) (undo-tree-id17023 . -1) (#("l" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68834) (undo-tree-id17024 . -1) (undo-tree-id17025 . -1) (undo-tree-id17026 . -1) (undo-tree-id17027 . -1) (undo-tree-id17028 . -1) (undo-tree-id17029 . -1) (undo-tree-id17030 . -1) (undo-tree-id17031 . -1) (undo-tree-id17032 . -1) (undo-tree-id17033 . -1) (undo-tree-id17034 . -1) (undo-tree-id17035 . -1) (undo-tree-id17036 . -1) (undo-tree-id17037 . -1) (undo-tree-id17038 . -1) (undo-tree-id17039 . -1) (undo-tree-id17040 . -1) (undo-tree-id17041 . -1) (undo-tree-id17042 . -1) (undo-tree-id17043 . -1) (undo-tree-id17044 . -1) (undo-tree-id17045 . -1) (undo-tree-id17046 . -1) (undo-tree-id17047 . -1) (undo-tree-id17048 . -1) (undo-tree-id17049 . -1) (undo-tree-id17050 . -1) (undo-tree-id17051 . -1) (undo-tree-id17052 . -1) (undo-tree-id17053 . -1) (undo-tree-id17054 . -1) (undo-tree-id17055 . -1) (undo-tree-id17056 . -1) (undo-tree-id17057 . -1) (undo-tree-id17058 . -1) (undo-tree-id17059 . -1) (undo-tree-id17060 . -1) (undo-tree-id17061 . -1) (undo-tree-id17062 . -1) (undo-tree-id17063 . -1) (undo-tree-id17064 . -1) (undo-tree-id17065 . -1) (undo-tree-id17066 . -1) (undo-tree-id17067 . -1) (undo-tree-id17068 . -1) (undo-tree-id17069 . -1) (undo-tree-id17070 . -1) (undo-tree-id17071 . -1) (undo-tree-id17072 . -1) (undo-tree-id17073 . -1) (undo-tree-id17074 . -1) (#("e" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68835) (undo-tree-id17075 . -1) (undo-tree-id17076 . -1) (undo-tree-id17077 . -1) (undo-tree-id17078 . -1) (undo-tree-id17079 . -1) (undo-tree-id17080 . -1) (undo-tree-id17081 . -1) (undo-tree-id17082 . -1) (undo-tree-id17083 . -1) (undo-tree-id17084 . -1) 68836 (t 25147 27919 157481 620000)) nil (25147 28216 857499 148000) 0 nil] [nil nil ((68926 . 68929) (68926 . 68928) (68915 . 68960) (#("
" 0 1 (fontified nil)) . 68915) (68912 . 68915) (68911 . 68913) (t 25147 23455 884241 980000)) ((#("

" 0 1 (fontified t) 1 2 (fontified nil)) . 68911) (#("   " 0 3 (fontified nil font-lock-fontified t face org-meta-line)) . 68912) (68915 . 68916) (#("#+RESULTS:
zetteldesk-switch-to-margin-notes
" 0 10 (fontified t font-lock-fontified t face org-meta-line) 10 11 (fontified t) 11 12 (fontified nil face org-code) 12 45 (fontified t face org-code)) . 68915) (#(": " 0 1 (fontified nil face org-code) 1 2 (fontified t face org-code)) . 68926) (#("   " 0 3 (fontified t)) . 68926)) (25147 27912 566280 390000) 0 nil])
([nil nil ((#("(" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68841) (undo-tree-id17162 . -1) (undo-tree-id17163 . -1) (#(")" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 68842) (#("f" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68842) (undo-tree-id17164 . -1) (#("i" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68843) (undo-tree-id17165 . -1) 68844 (68842 . 68844) (68841 . 68843) (t 25147 28216 897572 639000)) nil (25147 28261 336312 723000) 0 nil])
([nil nil ((66757 . 68930) (#("
     (defun zetteldesk-remark-mark (beg end)
       \"Wrapper for `org-remark-mark'.

     Calls the function with `org-remark-notes-file-name' being set to
     zetteldesk-margin-notes.org in the `org-roam-directory'\"
       (interactive (org-remark-region-or-word))
       (let ((org-remark-notes-file-name
	      (concat org-roam-directory \"zetteldesk-margin-notes.org\")))
	 (org-remark-mark beg end)))

     (defun zetteldesk-remark-highlight-advice
	 (beg end &optional id mode label face properties)
       \"Advice function to be used with `org-remark-highlight-mark'.

     If the current buffer isn't associated to a file, find the
     heading's title, associate it with an org-roam-node and find the
     file associated with that node. Then run the part of
     `org-remark-highlight-save' that wasn't ran if the buffer isn't
     associated with a file. This part is a call to
     `org-remark-highlight-save'.

     This is meant to be used when taking margin notes from the
     ,*zetteldesk-scratch* buffer. However, this will only work if the
     current heading's title is associated with a node. In this case
     org-remark will be able to associate the margin note with the
     node its related to.\"
       (unless buffer-file-name
	 (let* ((title (org-entry-get nil \"ITEM\"))
		(node (org-roam-node-from-title-or-alias title))
		(file (org-roam-node-file node))
		(ov (make-overlay beg end nil :front-advance)))
	   (org-remark-highlight-save file
				      beg end
				      (overlay-properties ov)
				      title))))

     (advice-add 'org-remark-highlight-mark :after #'zetteldesk-remark-highlight-advice)

     (defun zetteldesk-switch-to-margin-notes ()
       \"Helper function which goes to the zetteldesk-margin-notes file.

     If `org-remark-mark' is called through its wrapper function
     `zetteldesk-remark-mark', it sets `org-remark-notes-file-name' to
     a specific file, which is meant to be used with all margin notes
     coming from zetteldesk-scratch. This function switches to that
     file.\"
       (interactive)
       (find-file (concat org-roam-directory \"zetteldesk-margin-notes.org\")))

" 0 7 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7 12 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12 13 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 35 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 35 53 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 53 67 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 67 82 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 82 116 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 116 142 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 142 198 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 198 216 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 216 218 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 218 227 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 227 238 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 238 249 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 249 276 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 276 279 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 279 343 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 343 372 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 372 413 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 413 418 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 418 419 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 419 453 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 453 465 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 465 474 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 474 513 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 513 547 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 547 572 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 572 774 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 774 799 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 799 895 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 895 920 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 920 1221 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1221 1230 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1230 1236 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1236 1257 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1257 1261 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1261 1289 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1289 1295 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1295 1416 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1416 1430 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1430 1587 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1587 1593 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1593 1639 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1639 1644 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1644 1645 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1645 1678 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 1678 1689 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1689 1764 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1764 1779 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1779 1826 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1826 1848 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1848 1860 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1860 1886 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1886 2040 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2040 2049 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2049 2060 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2060 2107 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2107 2136 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2136 2141 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 66757) (undo-tree-id451 . -2069) (undo-tree-id452 . -889) (undo-tree-id453 . -1488) (undo-tree-id454 . -1488) (undo-tree-id455 . -1488) (undo-tree-id456 . -1488) (undo-tree-id457 . -1488) (undo-tree-id458 . -1488) (undo-tree-id459 . -889) (undo-tree-id460 . -1488) (undo-tree-id461 . -1488) (undo-tree-id462 . -889) (undo-tree-id463 . -1488) (undo-tree-id464 . -1488) (undo-tree-id465 . -1488) (undo-tree-id466 . -889) (undo-tree-id467 . -265) (undo-tree-id468 . -266) (undo-tree-id469 . 1874) (undo-tree-id470 . -266) (undo-tree-id471 . -266) (undo-tree-id472 . -265) (undo-tree-id473 . -266) (undo-tree-id475 . -1488) (undo-tree-id477 . -1488) (undo-tree-id479 . -2069) (undo-tree-id480 . -2069) (undo-tree-id481 . -889) (undo-tree-id482 . -1488) (undo-tree-id483 . -1488) (undo-tree-id484 . -889) (undo-tree-id486 . -1488) (undo-tree-id488 . -1488) (undo-tree-id490 . -1488) (undo-tree-id492 . -2069) (undo-tree-id494 . -2069) (undo-tree-id496 . -2069) (undo-tree-id498 . -2069) (undo-tree-id500 . -2069) (undo-tree-id502 . -2069) (undo-tree-id504 . -889) (undo-tree-id506 . -2069) (undo-tree-id508 . -2069) (undo-tree-id510 . -2069) (undo-tree-id512 . -2069) (undo-tree-id514 . -2069) (undo-tree-id516 . -2069) (undo-tree-id518 . -2069) (undo-tree-id520 . -2069) (undo-tree-id522 . -2069) (undo-tree-id524 . -889) (undo-tree-id526 . -2069) (undo-tree-id527 . -2069) (undo-tree-id528 . -2069) (undo-tree-id529 . -889) (undo-tree-id531 . -2069) (undo-tree-id533 . -2069) (undo-tree-id535 . -2069) (undo-tree-id537 . -2069) (undo-tree-id539 . -2069) (undo-tree-id541 . -2069) (undo-tree-id543 . -2069) (undo-tree-id545 . -2069) (undo-tree-id547 . -2069) (undo-tree-id549 . -2069) (undo-tree-id551 . -2069) (undo-tree-id553 . -2069) (undo-tree-id555 . -2069) (undo-tree-id557 . -889) (undo-tree-id559 . -2069) (undo-tree-id561 . -2069) (undo-tree-id563 . -889) (undo-tree-id565 . -2069) (undo-tree-id567 . -2069) (undo-tree-id569 . -889) (undo-tree-id571 . -2069) (undo-tree-id573 . -2069) (undo-tree-id575 . -889) (undo-tree-id577 . -2069) (undo-tree-id579 . -2069) (undo-tree-id581 . -889) (undo-tree-id583 . -2069) (undo-tree-id585 . -2069) (undo-tree-id587 . -889) (undo-tree-id589 . -2069) (undo-tree-id591 . -2069) (undo-tree-id593 . -889) (undo-tree-id595 . -2069) (undo-tree-id597 . -2069) (undo-tree-id599 . -889) (undo-tree-id601 . -2069) (undo-tree-id603 . -2069) (undo-tree-id605 . -889) (undo-tree-id607 . -2069) (undo-tree-id609 . -2069) (undo-tree-id611 . -889) (undo-tree-id613 . -2069) (undo-tree-id615 . -2069) (undo-tree-id617 . -889) (undo-tree-id619 . -2069) (undo-tree-id621 . -2069) (undo-tree-id623 . -889) (undo-tree-id625 . -2069) (undo-tree-id627 . -2069) (undo-tree-id629 . -889) (undo-tree-id631 . -2069) (undo-tree-id633 . -2069) (undo-tree-id635 . -889) (undo-tree-id637 . -2069) (undo-tree-id639 . -2069) (undo-tree-id641 . -889) (undo-tree-id643 . -2069) (undo-tree-id645 . -2069) (undo-tree-id647 . -889) (undo-tree-id649 . -2069) (undo-tree-id651 . -2069) (undo-tree-id653 . -889) (undo-tree-id655 . -2069) (undo-tree-id657 . -2069) (undo-tree-id659 . -889) (undo-tree-id661 . -2069) (undo-tree-id663 . -2069) (undo-tree-id665 . -889) (undo-tree-id667 . -2069) (undo-tree-id669 . -2069) (undo-tree-id671 . -889) (undo-tree-id673 . -2069) (undo-tree-id675 . -2069) (undo-tree-id677 . -889) (undo-tree-id679 . -2069) (undo-tree-id681 . -2069) (undo-tree-id683 . -889) (undo-tree-id685 . -2069) (undo-tree-id687 . -2069) 68826 (t 25147 27440 547530 449000)) ((66757 . 68898) (#("
     (defun zetteldesk-remark-mark (beg end)
       \"Wrapper for `org-remark-mark'.

     Calls the function with `org-remark-notes-file-name' being set to
     zetteldesk-margin-notes.org in the `org-roam-directory'\"
       (interactive (org-remark-region-or-word))
       (let ((org-remark-notes-file-name
	      (concat org-roam-directory \"zetteldesk-margin-notes.org\")))
	 (org-remark-mark beg end)))

     (defun zetteldesk-remark-highlight-advice
	 (beg end &optional id mode label face properties)
       \"Advice function to be used with `org-remark-highlight-mark'.

     If the current buffer isn't associated to a file, find the
     heading's title, associate it with an org-roam-node and find the
     file associated with that node. Then run the part of
     `org-remark-highlight-save' that wasn't ran if the buffer isn't
     associated with a file. This part is a call to
     `org-remark-highlight-save'.

     This is meant to be used when taking margin notes from the
     ,*zetteldesk-scratch* buffer. However, this will only work if the
     current heading's title is associated with a node. In this case
     org-remark will be able to associate the margin note with the
     node its related to.\"
       (unless buffer-file-name
	 (let* ((title (org-entry-get nil \"ITEM\"))
		(node (org-roam-node-from-title-or-alias title))
		(file (org-roam-node-file node))
		(ov (make-overlay beg end nil :front-advance)))
	   (org-remark-highlight-save file
				      beg end
				      (overlay-properties ov)
				      title))))

     (advice-add 'org-remark-highlight-mark :after #'zetteldesk-remark-highlight-advice)

     (defun zetteldesk-switch-to-margin-notes ()
       \"Helper function which goes to the zetteldesk-margin-notes file.

     If `org-remark-mark' is called through its wrapper function
     `zetteldesk-remark-mark', it sets `org-remark-notes-file-name' to
     a specific file, which is meant to be used with all margin notes
     coming from zetteldesk-scratch. This function switches to that
     file.\"
       (interactive)
       (switch-to-buffer-other-window (find-file (concat org-roam-directory \"zetteldesk-margin-notes.org\"))))

" 0 7 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7 12 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12 13 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 35 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 35 53 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 53 67 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 67 82 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 82 116 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 116 142 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 142 198 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 198 216 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 216 218 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 218 227 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 227 238 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 238 276 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 276 279 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 279 343 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 343 372 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 372 413 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 413 418 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 418 419 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 419 453 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 453 465 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 465 474 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 474 500 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 500 513 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 513 547 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 547 572 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 572 768 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 768 774 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 774 799 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 799 895 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 895 920 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 920 1221 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1221 1230 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1230 1236 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1236 1254 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1254 1257 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1257 1261 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1261 1268 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1268 1289 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1289 1295 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1295 1416 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1416 1430 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1430 1587 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1587 1593 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1593 1639 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1639 1644 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1644 1645 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1645 1678 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 1678 1689 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1689 1754 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1754 1764 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1764 1779 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1779 1826 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1826 1848 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1848 1860 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1860 1886 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1886 2040 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2040 2049 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2049 2060 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2060 2099 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2099 2100 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2100 2101 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2101 2102 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2102 2103 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2103 2104 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2104 2105 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2105 2106 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2106 2107 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2107 2108 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2108 2109 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2109 2110 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2110 2111 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2111 2112 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2112 2113 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2113 2114 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2114 2115 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2115 2116 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2116 2117 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2117 2118 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2118 2119 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2119 2120 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2120 2121 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2121 2122 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2122 2123 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2123 2124 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2124 2125 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2125 2126 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2126 2127 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2127 2128 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2128 2129 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2129 2130 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2130 2131 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2131 2132 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2132 2133 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2133 2134 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2134 2135 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2135 2136 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2136 2137 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2137 2138 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2138 2139 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2139 2140 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2140 2141 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2141 2142 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2142 2143 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2143 2144 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2144 2145 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2145 2146 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2146 2147 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2147 2148 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2148 2149 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2149 2150 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2150 2151 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2151 2152 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2152 2153 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2153 2154 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2154 2155 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2155 2156 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2156 2157 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2157 2158 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2158 2159 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2159 2160 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2160 2161 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2161 2162 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2162 2163 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2163 2164 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2164 2165 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2165 2166 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2166 2167 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2167 2169 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 2169 2170 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 2170 2171 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 2171 2173 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 66757) (undo-tree-id16184 . -2169) (undo-tree-id16185 . 34) (undo-tree-id16186 . -1254) (undo-tree-id16187 . -2099) (undo-tree-id16188 . -2169) (undo-tree-id16189 . 1) (undo-tree-id16190 . -2169) (undo-tree-id16191 . -2169) (undo-tree-id16192 . -1470) (undo-tree-id16193 . -1470) (undo-tree-id16194 . -1254) (undo-tree-id16195 . -1470) (undo-tree-id16196 . -2090) (undo-tree-id16197 . -2090) (undo-tree-id16198 . -1254) (undo-tree-id16199 . -2090) (undo-tree-id16200 . -2090) (undo-tree-id16201 . -1254) (undo-tree-id16202 . -2103) (undo-tree-id16203 . -2102) (undo-tree-id16204 . -1254) (undo-tree-id16205 . -2103) (undo-tree-id16206 . -2103) (undo-tree-id16207 . -1254) (undo-tree-id16208 . -2103) (undo-tree-id16209 . -2103) (undo-tree-id16210 . -1254) (undo-tree-id16211 . -2103) (undo-tree-id16212 . -2103) (undo-tree-id16213 . -1254) (undo-tree-id16214 . -1470) (undo-tree-id16215 . -1470) (undo-tree-id16216 . -768) (undo-tree-id16217 . -1470) (undo-tree-id16218 . -1470) (undo-tree-id16219 . -768) (undo-tree-id16220 . -2061) (undo-tree-id16221 . -2061) (undo-tree-id16222 . -2171) (undo-tree-id16223 . -2100) (undo-tree-id16224 . -2169) (undo-tree-id16225 . -2169) (undo-tree-id16226 . -768) (undo-tree-id16227 . -2169) (undo-tree-id16228 . -2169) (undo-tree-id16229 . -768) (undo-tree-id16230 . -2169) (undo-tree-id16231 . -2169) (undo-tree-id16232 . -768) (undo-tree-id16233 . -2169) (undo-tree-id16234 . -2169) (undo-tree-id16235 . -768) (undo-tree-id16236 . -2169) (undo-tree-id16237 . -2169) (undo-tree-id16238 . -768) (undo-tree-id16239 . -2169) (undo-tree-id16240 . -2169) (undo-tree-id16241 . -768) (undo-tree-id16242 . -2090) (undo-tree-id16243 . -2089) (undo-tree-id16244 . -768) (undo-tree-id16245 . -2170) (undo-tree-id16246 . -2170) (undo-tree-id16247 . -2169) (undo-tree-id16248 . -2168) (undo-tree-id16249 . -2168) (undo-tree-id16250 . -1254) (undo-tree-id16251 . -2168) (undo-tree-id16252 . -2168) (undo-tree-id16253 . -1254) (undo-tree-id16254 . -2168) (undo-tree-id16255 . -2168) (undo-tree-id16256 . -1254) (undo-tree-id16257 . -2168) (undo-tree-id16258 . -2168) (undo-tree-id16259 . -1254) (undo-tree-id16260 . -2165) (undo-tree-id16261 . -2165) (undo-tree-id16262 . -1254) (undo-tree-id16263 . -2099) (undo-tree-id16264 . -2099) (undo-tree-id16265 . -1254) (undo-tree-id16266 . -2099) (undo-tree-id16267 . -2099) (undo-tree-id16268 . -1254) (undo-tree-id16269 . -2099) (undo-tree-id16270 . -2111) (undo-tree-id16271 . -1254) (undo-tree-id16272 . -2099) (undo-tree-id16273 . -2099) (undo-tree-id16274 . -1254) (undo-tree-id16275 . -1254) (undo-tree-id16276 . -2099) (undo-tree-id16277 . -2099) (undo-tree-id16278 . -2099) (undo-tree-id16279 . -2099) (undo-tree-id16280 . -2099) (undo-tree-id16281 . -2099) (undo-tree-id16282 . -2166) (undo-tree-id16283 . -2099) (undo-tree-id16284 . -1254) (undo-tree-id16285 . -1254) (undo-tree-id16286 . -2166) (undo-tree-id16287 . -2166) (undo-tree-id16288 . -2166) (undo-tree-id16289 . -2166) (undo-tree-id16290 . -2166) (undo-tree-id16291 . -2166) (undo-tree-id16292 . -2137) (undo-tree-id16293 . -2166) (undo-tree-id16294 . -1254) (undo-tree-id16295 . -1254) (undo-tree-id16296 . -2137) (undo-tree-id16297 . -2137) (undo-tree-id16298 . -2137) (undo-tree-id16299 . -2137) (undo-tree-id16300 . -2137) (undo-tree-id16301 . -2137) (undo-tree-id16302 . -2111) (undo-tree-id16303 . -2137) (undo-tree-id16304 . -1254) (undo-tree-id16305 . -1254) (undo-tree-id16306 . -2111) (undo-tree-id16307 . -2111) (undo-tree-id16308 . -2111) (undo-tree-id16309 . -2111) (undo-tree-id16310 . -2111) (undo-tree-id16311 . -2111) (undo-tree-id16312 . 62) (undo-tree-id16313 . -2112) (undo-tree-id16314 . 6) (undo-tree-id16315 . -2168) (undo-tree-id16316 . -2111)) (25147 27912 397511 464000) 0 nil])
([nil nil ((66757 . 68914) (#("
     (defun zetteldesk-remark-mark (beg end)
       \"Wrapper for `org-remark-mark'.

     Calls the function with `org-remark-notes-file-name' being set to
     zetteldesk-margin-notes.org in the `org-roam-directory'\"
       (interactive (org-remark-region-or-word))
       (let ((org-remark-notes-file-name
	      (concat org-roam-directory \"zetteldesk-margin-notes.org\")))
	 (org-remark-mark beg end)))

     (defun zetteldesk-remark-highlight-advice
	 (beg end &optional id mode label face properties)
       \"Advice function to be used with `org-remark-highlight-mark'.

     If the current buffer isn't associated to a file, find the
     heading's title, associate it with an org-roam-node and find the
     file associated with that node. Then run the part of
     `org-remark-highlight-save' that wasn't ran if the buffer isn't
     associated with a file. This part is a call to
     `org-remark-highlight-save'.

     This is meant to be used when taking margin notes from the
     ,*zetteldesk-scratch* buffer. However, this will only work if the
     current heading's title is associated with a node. In this case
     org-remark will be able to associate the margin note with the
     node its related to.\"
       (unless buffer-file-name
	 (let* ((title (org-entry-get nil \"ITEM\"))
		(node (org-roam-node-from-title-or-alias title))
		(file (org-roam-node-file node))
		(ov (make-overlay beg end nil :front-advance)))
	   (org-remark-highlight-save file
				      beg end
				      (overlay-properties ov)
				      title))))

     (advice-add 'org-remark-highlight-mark :after #'zetteldesk-remark-highlight-advice)

     (defun zetteldesk-switch-to-margin-notes ()
       \"Helper function which goes to the zetteldesk-margin-notes file.

     If `org-remark-mark' is called through its wrapper function
     `zetteldesk-remark-mark', it sets `org-remark-notes-file-name' to
     a specific file, which is meant to be used with all margin notes
     coming from zetteldesk-scratch. This function switches to that
     file.\"
       (interactive)
       (pop-to-buffer (concat org-roam-directory \"zetteldesk-margin-notes.org\")))

" 0 7 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7 12 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12 13 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 35 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 35 53 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 53 67 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 67 82 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 82 116 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 116 142 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 142 198 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 198 216 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 216 218 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 218 227 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 227 238 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 238 249 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 249 276 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 276 279 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 279 343 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 343 372 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 372 413 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 413 418 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 418 419 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 419 453 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 453 465 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 465 474 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 474 513 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 513 547 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 547 572 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 572 576 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 576 774 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 774 799 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 799 889 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 889 895 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 895 920 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 920 1076 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1076 1221 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1221 1230 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1230 1236 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1236 1257 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1257 1261 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1261 1289 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1289 1295 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1295 1389 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1389 1416 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1416 1430 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1430 1587 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1587 1593 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1593 1639 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1639 1644 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1644 1645 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1645 1678 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 1678 1689 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1689 1764 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1764 1779 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1779 1826 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1826 1848 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1848 1860 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1860 1886 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1886 2040 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2040 2049 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2049 2060 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2060 2070 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2070 2083 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2083 2084 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2084 2111 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2111 2140 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2140 2145 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 66757) (undo-tree-id17085 . -2083) (undo-tree-id17086 . 61) (undo-tree-id17087 . -889) (undo-tree-id17088 . -1488) (undo-tree-id17089 . -1488) (undo-tree-id17090 . -1488) (undo-tree-id17091 . -1488) (undo-tree-id17092 . -1488) (undo-tree-id17093 . -1488) (undo-tree-id17094 . -889) (undo-tree-id17095 . -1488) (undo-tree-id17096 . -576) (undo-tree-id17097 . -2142) (undo-tree-id17098 . -1488) (undo-tree-id17099 . -1488) (undo-tree-id17100 . -889) (undo-tree-id17101 . -265) (undo-tree-id17102 . -2083) (undo-tree-id17103 . 61) (undo-tree-id17104 . -2083) (undo-tree-id17105 . -2083) (undo-tree-id17106 . -265) (undo-tree-id17107 . -266) (undo-tree-id17108 . -1488) (undo-tree-id17109 . -1488) (undo-tree-id17110 . -889) (undo-tree-id17111 . -2069) (undo-tree-id17112 . -2069) (undo-tree-id17113 . -889) (undo-tree-id17114 . -2142) (undo-tree-id17115 . -2142) (undo-tree-id17116 . -889) (undo-tree-id17117 . -2143) (undo-tree-id17118 . -2142) (undo-tree-id17119 . -2142) (undo-tree-id17120 . -2142) (undo-tree-id17121 . -988) (undo-tree-id17122 . -988) (undo-tree-id17123 . -988) (undo-tree-id17124 . -988) (undo-tree-id17125 . -2142) (undo-tree-id17126 . -2142) (undo-tree-id17127 . -576) (undo-tree-id17128 . -2142) (undo-tree-id17129 . -2142) (undo-tree-id17130 . -576) (undo-tree-id17131 . -2142) (undo-tree-id17132 . -2142) (undo-tree-id17133 . -576) (undo-tree-id17134 . -576) (undo-tree-id17135 . -2083) (undo-tree-id17136 . -2083) (undo-tree-id17137 . -2084) (undo-tree-id17138 . -2084) (undo-tree-id17139 . -576) (undo-tree-id17140 . -2083) (undo-tree-id17141 . -2083) (undo-tree-id17142 . -576) (undo-tree-id17143 . -2083) (undo-tree-id17144 . -2083) (undo-tree-id17145 . -576) (undo-tree-id17146 . -2083) (undo-tree-id17147 . -2083) (undo-tree-id17148 . -576) (undo-tree-id17149 . -2083) (undo-tree-id17150 . -2083) (undo-tree-id17151 . -576) (undo-tree-id17152 . -2083) (undo-tree-id17153 . -2083) (undo-tree-id17154 . -576) (undo-tree-id17155 . -2083) (undo-tree-id17156 . -2083) (undo-tree-id17157 . -576) (undo-tree-id17158 . -2083) (undo-tree-id17159 . -2083) (undo-tree-id17160 . -576) (undo-tree-id17161 . -2083) 68840) nil (25147 28261 336286 44000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -68916) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . 1) (undo-tree-id691 . -1) (undo-tree-id693 . -1) (undo-tree-id695 . -1) (undo-tree-id697 . -1) (undo-tree-id699 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id708 . -1) (undo-tree-id710 . -1) (undo-tree-id712 . -1) (undo-tree-id714 . -1) (undo-tree-id716 . -1) (undo-tree-id718 . -1) 68917 (#("(" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68857) (undo-tree-id720 . -1) (undo-tree-id722 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id727 . -1) (undo-tree-id729 . -1) (undo-tree-id731 . -1) (undo-tree-id733 . -1) (undo-tree-id735 . -1) (undo-tree-id737 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id742 . -1) (undo-tree-id744 . -1) (undo-tree-id746 . -1) (undo-tree-id748 . -1) (undo-tree-id750 . -1) (undo-tree-id752 . -1) (undo-tree-id754 . -1) (undo-tree-id756 . -1) (undo-tree-id758 . -1) (undo-tree-id760 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id765 . -1) (undo-tree-id767 . -1) (undo-tree-id769 . -1) (undo-tree-id771 . -1) (undo-tree-id773 . -1) (undo-tree-id775 . -1) (undo-tree-id777 . -1) (undo-tree-id779 . -1) (undo-tree-id781 . -1) (undo-tree-id783 . -1) (undo-tree-id785 . -1) (undo-tree-id787 . -1) (undo-tree-id789 . -1) (undo-tree-id791 . -1) (undo-tree-id793 . -1) (undo-tree-id795 . -1) (undo-tree-id797 . -1) (undo-tree-id799 . -1) (undo-tree-id801 . -1) (undo-tree-id803 . -1) (undo-tree-id805 . -1) (undo-tree-id807 . -1) (undo-tree-id809 . -1) (undo-tree-id811 . -1) (undo-tree-id813 . -1) (undo-tree-id815 . -1) (undo-tree-id817 . -1) (undo-tree-id819 . -1) (undo-tree-id821 . -1) (undo-tree-id823 . -1) (undo-tree-id825 . -1) (undo-tree-id827 . -1) (undo-tree-id829 . -1) (undo-tree-id831 . -1) (undo-tree-id833 . -1) (undo-tree-id835 . -1) (undo-tree-id837 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id843 . -1) (undo-tree-id845 . -1) (undo-tree-id847 . -1) (undo-tree-id849 . -1) (undo-tree-id851 . -1) (undo-tree-id853 . -1) (undo-tree-id855 . -1) (undo-tree-id857 . -1) (undo-tree-id859 . -1) (undo-tree-id861 . -1) (undo-tree-id863 . -1) (undo-tree-id865 . -1) (undo-tree-id867 . -1) (undo-tree-id869 . -1) (undo-tree-id871 . -1) (undo-tree-id873 . -1) (undo-tree-id875 . -1) (undo-tree-id877 . -1) (undo-tree-id879 . -1) (undo-tree-id881 . -1) (undo-tree-id883 . -1) (undo-tree-id885 . -1) (undo-tree-id887 . -1) (undo-tree-id889 . -1) (undo-tree-id891 . -1) (undo-tree-id893 . -1) (undo-tree-id895 . -1) (undo-tree-id897 . -1) (undo-tree-id899 . -1) (undo-tree-id901 . -1) (undo-tree-id903 . -1) (undo-tree-id905 . -1) (undo-tree-id907 . -1) (undo-tree-id909 . -1) (undo-tree-id911 . -1) (undo-tree-id913 . -1) (undo-tree-id915 . -1) (undo-tree-id917 . -1) (undo-tree-id919 . -1) (undo-tree-id921 . -1) (undo-tree-id923 . -1) (undo-tree-id925 . -1) (undo-tree-id927 . -1) (undo-tree-id929 . -1) (undo-tree-id931 . -1) (undo-tree-id933 . -1) (undo-tree-id935 . -1) (undo-tree-id937 . -1) (undo-tree-id939 . -1) (undo-tree-id941 . -1) (undo-tree-id943 . -1) (undo-tree-id945 . -1) (undo-tree-id947 . -1) (undo-tree-id949 . -1) (undo-tree-id951 . -1) (undo-tree-id953 . -1) (undo-tree-id955 . -1) (undo-tree-id957 . -1) (undo-tree-id959 . -1) (undo-tree-id961 . -1) (undo-tree-id963 . -1) (undo-tree-id965 . -1) (undo-tree-id967 . -1) (undo-tree-id969 . -1) (undo-tree-id971 . -1) (undo-tree-id973 . -1) (undo-tree-id975 . -1) (undo-tree-id977 . -1) (undo-tree-id979 . -1) (undo-tree-id981 . -1) (undo-tree-id983 . -1) (undo-tree-id985 . -1) (undo-tree-id987 . -1) (undo-tree-id989 . -1) (undo-tree-id991 . -1) (undo-tree-id993 . -1) (undo-tree-id995 . -1) (undo-tree-id997 . -1) (undo-tree-id999 . -1) (undo-tree-id1001 . -1) (undo-tree-id1003 . -1) (undo-tree-id1005 . -1) (undo-tree-id1007 . -1) (undo-tree-id1009 . -1) (undo-tree-id1011 . -1) (undo-tree-id1013 . -1) (undo-tree-id1015 . -1) (#("f" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68858) (undo-tree-id1017 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1022 . -1) (undo-tree-id1024 . -1) (undo-tree-id1026 . -1) (undo-tree-id1028 . -1) (undo-tree-id1030 . -1) (undo-tree-id1032 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1037 . -1) (undo-tree-id1039 . -1) (undo-tree-id1041 . -1) (undo-tree-id1043 . -1) (undo-tree-id1045 . -1) (undo-tree-id1047 . -1) (undo-tree-id1049 . -1) (undo-tree-id1051 . -1) (undo-tree-id1053 . -1) (undo-tree-id1055 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1060 . -1) (undo-tree-id1062 . -1) (undo-tree-id1064 . -1) (undo-tree-id1066 . -1) (undo-tree-id1068 . -1) (undo-tree-id1070 . -1) (undo-tree-id1072 . -1) (undo-tree-id1074 . -1) (undo-tree-id1076 . -1) (undo-tree-id1078 . -1) (undo-tree-id1080 . -1) (undo-tree-id1082 . -1) (undo-tree-id1084 . -1) (undo-tree-id1086 . -1) (undo-tree-id1088 . -1) (undo-tree-id1090 . -1) (undo-tree-id1092 . -1) (undo-tree-id1094 . -1) (undo-tree-id1096 . -1) (undo-tree-id1098 . -1) (undo-tree-id1100 . -1) (undo-tree-id1102 . -1) (undo-tree-id1104 . -1) (undo-tree-id1106 . -1) (undo-tree-id1108 . -1) (undo-tree-id1110 . -1) (undo-tree-id1112 . -1) (undo-tree-id1114 . -1) (undo-tree-id1116 . -1) (undo-tree-id1118 . -1) (undo-tree-id1120 . -1) (undo-tree-id1122 . -1) (undo-tree-id1124 . -1) (undo-tree-id1126 . -1) (undo-tree-id1128 . -1) (undo-tree-id1130 . -1) (undo-tree-id1132 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1138 . -1) (undo-tree-id1140 . -1) (undo-tree-id1142 . -1) (undo-tree-id1144 . -1) (undo-tree-id1146 . -1) (undo-tree-id1148 . -1) (undo-tree-id1150 . -1) (undo-tree-id1152 . -1) (undo-tree-id1154 . -1) (undo-tree-id1156 . -1) (undo-tree-id1158 . -1) (undo-tree-id1160 . -1) (undo-tree-id1162 . -1) (undo-tree-id1164 . -1) (undo-tree-id1166 . -1) (undo-tree-id1168 . -1) (undo-tree-id1170 . -1) (undo-tree-id1172 . -1) (undo-tree-id1174 . -1) (undo-tree-id1176 . -1) (undo-tree-id1178 . -1) (undo-tree-id1180 . -1) (undo-tree-id1182 . -1) (undo-tree-id1184 . -1) (undo-tree-id1186 . -1) (undo-tree-id1188 . -1) (undo-tree-id1190 . -1) (undo-tree-id1192 . -1) (undo-tree-id1194 . -1) (undo-tree-id1196 . -1) (undo-tree-id1198 . -1) (undo-tree-id1200 . -1) (undo-tree-id1202 . -1) (undo-tree-id1204 . -1) (undo-tree-id1206 . -1) (undo-tree-id1208 . -1) (undo-tree-id1210 . -1) (undo-tree-id1212 . -1) (undo-tree-id1214 . -1) (undo-tree-id1216 . -1) (undo-tree-id1218 . -1) (undo-tree-id1220 . -1) (undo-tree-id1222 . -1) (undo-tree-id1224 . -1) (undo-tree-id1226 . -1) (undo-tree-id1228 . -1) (undo-tree-id1230 . -1) (undo-tree-id1232 . -1) (undo-tree-id1234 . -1) (undo-tree-id1236 . -1) (undo-tree-id1238 . -1) (undo-tree-id1240 . -1) (undo-tree-id1242 . -1) (undo-tree-id1244 . -1) (undo-tree-id1246 . -1) (undo-tree-id1248 . -1) (undo-tree-id1250 . -1) (undo-tree-id1252 . -1) (undo-tree-id1254 . -1) (undo-tree-id1256 . -1) (undo-tree-id1258 . -1) (undo-tree-id1260 . -1) (undo-tree-id1262 . -1) (undo-tree-id1264 . -1) (undo-tree-id1266 . -1) (undo-tree-id1268 . -1) (undo-tree-id1270 . -1) (undo-tree-id1272 . -1) (undo-tree-id1274 . -1) (undo-tree-id1276 . -1) (undo-tree-id1278 . -1) (undo-tree-id1280 . -1) (undo-tree-id1282 . -1) (undo-tree-id1284 . -1) (undo-tree-id1286 . -1) (undo-tree-id1288 . -1) (undo-tree-id1290 . -1) (undo-tree-id1292 . -1) (undo-tree-id1294 . -1) (undo-tree-id1296 . -1) (undo-tree-id1298 . -1) (undo-tree-id1300 . -1) (undo-tree-id1302 . -1) (#("i" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68859) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1307 . -1) (undo-tree-id1309 . -1) (undo-tree-id1311 . -1) (undo-tree-id1313 . -1) (undo-tree-id1315 . -1) (undo-tree-id1317 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1322 . -1) (undo-tree-id1324 . -1) (undo-tree-id1326 . -1) (undo-tree-id1328 . -1) (undo-tree-id1330 . -1) (undo-tree-id1332 . -1) (undo-tree-id1334 . -1) (undo-tree-id1336 . -1) (undo-tree-id1338 . -1) (undo-tree-id1340 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1345 . -1) (undo-tree-id1347 . -1) (undo-tree-id1349 . -1) (undo-tree-id1351 . -1) (undo-tree-id1353 . -1) (undo-tree-id1355 . -1) (undo-tree-id1357 . -1) (undo-tree-id1359 . -1) (undo-tree-id1361 . -1) (undo-tree-id1363 . -1) (undo-tree-id1365 . -1) (undo-tree-id1367 . -1) (undo-tree-id1369 . -1) (undo-tree-id1371 . -1) (undo-tree-id1373 . -1) (undo-tree-id1375 . -1) (undo-tree-id1377 . -1) (undo-tree-id1379 . -1) (undo-tree-id1381 . -1) (undo-tree-id1383 . -1) (undo-tree-id1385 . -1) (undo-tree-id1387 . -1) (undo-tree-id1389 . -1) (undo-tree-id1391 . -1) (undo-tree-id1393 . -1) (undo-tree-id1395 . -1) (undo-tree-id1397 . -1) (undo-tree-id1399 . -1) (undo-tree-id1401 . -1) (undo-tree-id1403 . -1) (undo-tree-id1405 . -1) (undo-tree-id1407 . -1) (undo-tree-id1409 . -1) (undo-tree-id1411 . -1) (undo-tree-id1413 . -1) (undo-tree-id1415 . -1) (undo-tree-id1417 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1423 . -1) (undo-tree-id1425 . -1) (undo-tree-id1427 . -1) (undo-tree-id1429 . -1) (undo-tree-id1431 . -1) (undo-tree-id1433 . -1) (undo-tree-id1435 . -1) (undo-tree-id1437 . -1) (undo-tree-id1439 . -1) (undo-tree-id1441 . -1) (undo-tree-id1443 . -1) (undo-tree-id1445 . -1) (undo-tree-id1447 . -1) (undo-tree-id1449 . -1) (undo-tree-id1451 . -1) (undo-tree-id1453 . -1) (undo-tree-id1455 . -1) (undo-tree-id1457 . -1) (undo-tree-id1459 . -1) (undo-tree-id1461 . -1) (undo-tree-id1463 . -1) (undo-tree-id1465 . -1) (undo-tree-id1467 . -1) (undo-tree-id1469 . -1) (undo-tree-id1471 . -1) (undo-tree-id1473 . -1) (undo-tree-id1475 . -1) (undo-tree-id1477 . -1) (undo-tree-id1479 . -1) (undo-tree-id1481 . -1) (undo-tree-id1483 . -1) (undo-tree-id1485 . -1) (undo-tree-id1487 . -1) (undo-tree-id1489 . -1) (undo-tree-id1491 . -1) (undo-tree-id1493 . -1) (undo-tree-id1495 . -1) (undo-tree-id1497 . -1) (undo-tree-id1499 . -1) (undo-tree-id1501 . -1) (undo-tree-id1503 . -1) (undo-tree-id1505 . -1) (undo-tree-id1507 . -1) (undo-tree-id1509 . -1) (undo-tree-id1511 . -1) (undo-tree-id1513 . -1) (undo-tree-id1515 . -1) (undo-tree-id1517 . -1) (undo-tree-id1519 . -1) (undo-tree-id1521 . -1) (undo-tree-id1523 . -1) (undo-tree-id1525 . -1) (undo-tree-id1527 . -1) (undo-tree-id1529 . -1) (undo-tree-id1531 . -1) (undo-tree-id1533 . -1) (undo-tree-id1535 . -1) (undo-tree-id1537 . -1) (undo-tree-id1539 . -1) (undo-tree-id1541 . -1) (undo-tree-id1543 . -1) (undo-tree-id1545 . -1) (undo-tree-id1547 . -1) (undo-tree-id1549 . -1) (undo-tree-id1551 . -1) (undo-tree-id1553 . -1) (undo-tree-id1555 . -1) (undo-tree-id1557 . -1) (undo-tree-id1559 . -1) (undo-tree-id1561 . -1) (undo-tree-id1563 . -1) (undo-tree-id1565 . -1) (undo-tree-id1567 . -1) (undo-tree-id1569 . -1) (undo-tree-id1571 . -1) (undo-tree-id1573 . -1) (undo-tree-id1575 . -1) (undo-tree-id1577 . -1) (undo-tree-id1579 . -1) (#("n" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68860) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1584 . -1) (undo-tree-id1586 . -1) (undo-tree-id1588 . -1) (undo-tree-id1590 . -1) (undo-tree-id1592 . -1) (undo-tree-id1594 . -1) (undo-tree-id1596 . -1) (undo-tree-id1598 . -1) (undo-tree-id1600 . -1) (undo-tree-id1602 . -1) (undo-tree-id1604 . -1) (undo-tree-id1606 . -1) (undo-tree-id1608 . -1) (undo-tree-id1610 . -1) (undo-tree-id1612 . -1) (undo-tree-id1614 . -1) (undo-tree-id1616 . -1) (undo-tree-id1618 . -1) (undo-tree-id1620 . -1) (undo-tree-id1622 . -1) (undo-tree-id1624 . -1) (undo-tree-id1626 . -1) (undo-tree-id1628 . -1) (undo-tree-id1630 . -1) (undo-tree-id1632 . -1) (undo-tree-id1634 . -1) (undo-tree-id1636 . -1) (undo-tree-id1638 . -1) (undo-tree-id1640 . -1) (undo-tree-id1642 . -1) (undo-tree-id1644 . -1) (undo-tree-id1646 . -1) (undo-tree-id1648 . -1) (undo-tree-id1650 . -1) (undo-tree-id1652 . -1) (undo-tree-id1654 . -1) (undo-tree-id1656 . -1) (undo-tree-id1658 . -1) (undo-tree-id1660 . -1) (undo-tree-id1662 . -1) (undo-tree-id1664 . -1) (undo-tree-id1666 . -1) (undo-tree-id1668 . -1) (undo-tree-id1670 . -1) (undo-tree-id1672 . -1) (undo-tree-id1674 . -1) (undo-tree-id1676 . -1) (undo-tree-id1678 . -1) (undo-tree-id1680 . -1) (undo-tree-id1682 . -1) (#("d" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68861) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1687 . -1) (undo-tree-id1689 . -1) (undo-tree-id1691 . -1) (undo-tree-id1693 . -1) (undo-tree-id1695 . -1) (undo-tree-id1697 . -1) (undo-tree-id1699 . -1) (undo-tree-id1701 . -1) (undo-tree-id1703 . -1) (undo-tree-id1705 . -1) (undo-tree-id1707 . -1) (undo-tree-id1709 . -1) (undo-tree-id1711 . -1) (undo-tree-id1713 . -1) (undo-tree-id1715 . -1) (undo-tree-id1717 . -1) (undo-tree-id1719 . -1) (undo-tree-id1721 . -1) (undo-tree-id1723 . -1) (undo-tree-id1725 . -1) (undo-tree-id1727 . -1) (undo-tree-id1729 . -1) (undo-tree-id1731 . -1) (undo-tree-id1733 . -1) (undo-tree-id1735 . -1) (undo-tree-id1737 . -1) (undo-tree-id1739 . -1) (undo-tree-id1741 . -1) (undo-tree-id1743 . -1) (undo-tree-id1745 . -1) (undo-tree-id1747 . -1) (undo-tree-id1749 . -1) (undo-tree-id1751 . -1) (undo-tree-id1753 . -1) (undo-tree-id1755 . -1) (undo-tree-id1757 . -1) (undo-tree-id1759 . -1) (undo-tree-id1761 . -1) (undo-tree-id1763 . -1) (undo-tree-id1765 . -1) (undo-tree-id1767 . -1) (undo-tree-id1769 . -1) (undo-tree-id1771 . -1) (undo-tree-id1773 . -1) (undo-tree-id1775 . -1) (undo-tree-id1777 . -1) (#("-" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68862) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1782 . -1) (undo-tree-id1784 . -1) (undo-tree-id1786 . -1) (undo-tree-id1788 . -1) (undo-tree-id1790 . -1) (undo-tree-id1792 . -1) (undo-tree-id1794 . -1) (undo-tree-id1796 . -1) (undo-tree-id1798 . -1) (undo-tree-id1800 . -1) (undo-tree-id1802 . -1) (undo-tree-id1804 . -1) (undo-tree-id1806 . -1) (undo-tree-id1808 . -1) (undo-tree-id1810 . -1) (undo-tree-id1812 . -1) (undo-tree-id1814 . -1) (undo-tree-id1816 . -1) (undo-tree-id1818 . -1) (undo-tree-id1820 . -1) (undo-tree-id1822 . -1) (undo-tree-id1824 . -1) (undo-tree-id1826 . -1) (undo-tree-id1828 . -1) (undo-tree-id1830 . -1) (undo-tree-id1832 . -1) (undo-tree-id1834 . -1) (undo-tree-id1836 . -1) (undo-tree-id1838 . -1) (undo-tree-id1840 . -1) (undo-tree-id1842 . -1) (undo-tree-id1844 . -1) (undo-tree-id1846 . -1) (undo-tree-id1848 . -1) (undo-tree-id1850 . -1) (undo-tree-id1852 . -1) (undo-tree-id1854 . -1) (undo-tree-id1856 . -1) (undo-tree-id1858 . -1) (undo-tree-id1860 . -1) (undo-tree-id1862 . -1) (undo-tree-id1864 . -1) (#("f" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68863) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1869 . -1) (undo-tree-id1871 . -1) (undo-tree-id1873 . -1) (undo-tree-id1875 . -1) (undo-tree-id1877 . -1) (undo-tree-id1879 . -1) (undo-tree-id1881 . -1) (undo-tree-id1883 . -1) (undo-tree-id1885 . -1) (undo-tree-id1887 . -1) (undo-tree-id1889 . -1) (undo-tree-id1891 . -1) (undo-tree-id1893 . -1) (undo-tree-id1895 . -1) (undo-tree-id1897 . -1) (undo-tree-id1899 . -1) (undo-tree-id1901 . -1) (undo-tree-id1903 . -1) (undo-tree-id1905 . -1) (undo-tree-id1907 . -1) (undo-tree-id1909 . -1) (undo-tree-id1911 . -1) (undo-tree-id1913 . -1) (undo-tree-id1915 . -1) (undo-tree-id1917 . -1) (undo-tree-id1919 . -1) (undo-tree-id1921 . -1) (undo-tree-id1923 . -1) (undo-tree-id1925 . -1) (undo-tree-id1927 . -1) (undo-tree-id1929 . -1) (undo-tree-id1931 . -1) (undo-tree-id1933 . -1) (undo-tree-id1935 . -1) (undo-tree-id1937 . -1) (undo-tree-id1939 . -1) (undo-tree-id1941 . -1) (undo-tree-id1943 . -1) (#("i" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68864) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1948 . -1) (undo-tree-id1950 . -1) (undo-tree-id1952 . -1) (undo-tree-id1954 . -1) (undo-tree-id1956 . -1) (undo-tree-id1958 . -1) (undo-tree-id1960 . -1) (undo-tree-id1962 . -1) (undo-tree-id1964 . -1) (undo-tree-id1966 . -1) (undo-tree-id1968 . -1) (undo-tree-id1970 . -1) (undo-tree-id1972 . -1) (undo-tree-id1974 . -1) (undo-tree-id1976 . -1) (undo-tree-id1978 . -1) (undo-tree-id1980 . -1) (undo-tree-id1982 . -1) (undo-tree-id1984 . -1) (undo-tree-id1986 . -1) (undo-tree-id1988 . -1) (undo-tree-id1990 . -1) (undo-tree-id1992 . -1) (undo-tree-id1994 . -1) (undo-tree-id1996 . -1) (undo-tree-id1998 . -1) (undo-tree-id2000 . -1) (undo-tree-id2002 . -1) (undo-tree-id2004 . -1) (undo-tree-id2006 . -1) (undo-tree-id2008 . -1) (undo-tree-id2010 . -1) (undo-tree-id2012 . -1) (undo-tree-id2014 . -1) (#("l" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68865) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2019 . -1) (undo-tree-id2021 . -1) (undo-tree-id2023 . -1) (undo-tree-id2025 . -1) (undo-tree-id2027 . -1) (undo-tree-id2029 . -1) (undo-tree-id2031 . -1) (undo-tree-id2033 . -1) (undo-tree-id2035 . -1) (undo-tree-id2037 . -1) (undo-tree-id2039 . -1) (undo-tree-id2041 . -1) (undo-tree-id2043 . -1) (undo-tree-id2045 . -1) (undo-tree-id2047 . -1) (undo-tree-id2049 . -1) (undo-tree-id2051 . -1) (undo-tree-id2053 . -1) (undo-tree-id2055 . -1) (undo-tree-id2057 . -1) (undo-tree-id2059 . -1) (undo-tree-id2061 . -1) (undo-tree-id2063 . -1) (undo-tree-id2065 . -1) (undo-tree-id2067 . -1) (undo-tree-id2069 . -1) (undo-tree-id2071 . -1) (undo-tree-id2073 . -1) (undo-tree-id2075 . -1) (undo-tree-id2077 . -1) (#("e" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68866) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2082 . -1) (undo-tree-id2084 . -1) (undo-tree-id2086 . -1) (undo-tree-id2088 . -1) (undo-tree-id2090 . -1) (undo-tree-id2092 . -1) (undo-tree-id2094 . -1) (undo-tree-id2096 . -1) (undo-tree-id2098 . -1) (undo-tree-id2100 . -1) (undo-tree-id2102 . -1) (undo-tree-id2104 . -1) (undo-tree-id2106 . -1) (undo-tree-id2108 . -1) (undo-tree-id2110 . -1) (undo-tree-id2112 . -1) (undo-tree-id2114 . -1) (undo-tree-id2116 . -1) (undo-tree-id2118 . -1) (undo-tree-id2120 . -1) (undo-tree-id2122 . -1) (undo-tree-id2124 . -1) (undo-tree-id2126 . -1) (undo-tree-id2128 . -1) (undo-tree-id2130 . -1) (undo-tree-id2132 . -1) (#(" " 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68867) (undo-tree-id2134 . -1) (undo-tree-id2136 . -1) (undo-tree-id2138 . -1) (undo-tree-id2140 . -1) (undo-tree-id2142 . -1) (undo-tree-id2144 . -1) (undo-tree-id2146 . -1) (undo-tree-id2148 . -1) 68868 (t 25147 27607 7484 803000)) ((68857 . 68868) (68916 . 68917)) (25147 27912 231422 782000) 0 nil])
([nil nil ((apply yas--snippet-revive 68974 69005 #s(yas--snippet nil (#s(yas--field 1 68986 68991 nil nil nil t #s(yas--field 2 68992 68992 nil nil nil nil nil)) #s(yas--field 2 68992 68992 nil nil nil nil nil)) nil 7 nil #s(yas--field 1 68986 68991 nil nil nil t #s(yas--field 2 68992 68992 nil nil nil nil nil)) nil nil)) (#(" " 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -68991) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) 68992 (68986 . 68992) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 68986 68991 nil nil nil t #s(yas--field 2 68992 68992 nil nil nil nil nil)) #s(yas--field 2 68992 68992 nil nil nil nil nil)) nil 7 nil #s(yas--field 1 68986 68991 nil nil nil t #s(yas--field 2 68992 68992 nil nil nil nil nil)) nil nil)) (68988 . 68991) (68974 . 68997) (#("\\s" 0 2 (fontified t)) . 68974) (undo-tree-id320 . -2) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -2) (undo-tree-id403 . -1) (undo-tree-id404 . -2) (undo-tree-id405 . -2) (undo-tree-id406 . -2) (undo-tree-id407 . -2) (undo-tree-id408 . -2) (undo-tree-id409 . -2) (undo-tree-id410 . -2) (undo-tree-id411 . -2) 68976 (68975 . 68976) (#("\\" 0 1 (fontified t)) . -68975) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (#("s" 0 1 (fontified t)) . -68976) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (#("q" 0 1 (fontified t)) . -68977) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (#("r" 0 1 (fontified t)) . -68978) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (#("t" 0 1 (fontified t)) . -68979) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) 68980 (#("{" 0 1 (fontified nil)) . -68980) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (#("}" 0 1 (fontified t)) . 68981) (apply yas--snippet-revive 68975 68983 #s(yas--snippet nil nil #s(yas--exit 68981 nil) 6 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 68981 nil) 6 nil nil nil nil)) (68975 . 68983) (#("sq" 0 2 (fontified t)) . 68975) (undo-tree-id586 . -2) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -2) (undo-tree-id596 . -1) (undo-tree-id597 . -2) (undo-tree-id598 . -2) (undo-tree-id599 . -2) (undo-tree-id600 . -2) (undo-tree-id601 . -2) (undo-tree-id602 . -2) (undo-tree-id603 . -2) (undo-tree-id604 . -2) 68977 (68974 . 68977) (68971 . 68974) (#("   " 0 3 (fontified nil)) . 68970) (undo-tree-id605 . -3) (undo-tree-id606 . -3) (undo-tree-id607 . -3) (undo-tree-id608 . -3) (undo-tree-id609 . -3) (undo-tree-id610 . -3) (undo-tree-id611 . -3) (undo-tree-id612 . -3) (undo-tree-id613 . -3) (68973 . 68974) (68969 . 68973) (68963 . 68969) (#("n" 0 1 (fontified t face org-level-2)) . -68963) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (#("b" 0 1 (fontified t face org-level-2)) . -68964) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) 68965 (68964 . 68965) (#("b" 0 1 (fontified t face org-level-2)) . -68964) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (#("e" 0 1 (fontified t face org-level-2)) . -68965) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) 68966 (68957 . 68966) (68936 . 68957) (#("N" 0 1 (fontified t face org-level-2)) . -68936) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (#("a" 0 1 (fontified t face org-level-2)) . -68937) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) 68938 (68936 . 68938) (68935 . 68936) (#("
" 0 1 (fontified t)) . -68930) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (#(" " 0 1 (fontified t)) . -68931) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) 68932 (#(" " 0 1 (fontified nil face org-level-2)) . 68937) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (68938 . 68939) (68934 . 68938) (68930 . 68934) (t 25147 28261 374260 375000) 68929) nil (25150 19470 664539 772000) 0 nil])
([nil nil ((68864 . 68869) (68863 . 68864) (#("-" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68863) (undo-tree-id2149 . -1) (undo-tree-id2151 . -1) (undo-tree-id2153 . -1) (undo-tree-id2155 . -1) (undo-tree-id2157 . -1) (undo-tree-id2159 . -1) (undo-tree-id2161 . -1) (undo-tree-id2163 . -1) (undo-tree-id2165 . -1) (undo-tree-id2167 . -1) (undo-tree-id2169 . -1) (undo-tree-id2171 . -1) (undo-tree-id2173 . -1) (undo-tree-id2175 . -1) (undo-tree-id2177 . -1) 68864 (68860 . 68864) (68858 . 68860) (#("/" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68858) (undo-tree-id2179 . -1) (undo-tree-id2181 . -1) (undo-tree-id2183 . -1) (undo-tree-id2185 . -1) (undo-tree-id2187 . -1) 68859 (68858 . 68859) (#(")" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -68888) (undo-tree-id2189 . -1) (undo-tree-id2191 . -1) (undo-tree-id2193 . -1) (undo-tree-id2195 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2200 . -1) (undo-tree-id2202 . -1) (undo-tree-id2204 . -1) (undo-tree-id2206 . -1) (undo-tree-id2208 . -1) (undo-tree-id2210 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2216 . -1) (undo-tree-id2218 . -1) (undo-tree-id2220 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2225 . -1) (undo-tree-id2227 . -1) (undo-tree-id2229 . -1) (undo-tree-id2231 . -1) (undo-tree-id2233 . 1) (undo-tree-id2234 . -1) 68889 (#(" " 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68856) (undo-tree-id2236 . -1) (undo-tree-id2238 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2243 . -1) (undo-tree-id2245 . -1) (undo-tree-id2247 . -1) (undo-tree-id2249 . -1) (undo-tree-id2251 . -1) (undo-tree-id2253 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2258 . -1) (undo-tree-id2260 . -1) (undo-tree-id2262 . -1) (undo-tree-id2264 . -1) (undo-tree-id2266 . -1) (undo-tree-id2268 . -1) (undo-tree-id2270 . -1) (undo-tree-id2272 . -1) (undo-tree-id2274 . -1) (undo-tree-id2276 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2281 . -1) (undo-tree-id2283 . -1) (undo-tree-id2285 . -1) (undo-tree-id2287 . -1) (undo-tree-id2289 . -1) (undo-tree-id2291 . -1) (undo-tree-id2293 . -1) (undo-tree-id2295 . -1) (undo-tree-id2297 . -1) (undo-tree-id2299 . -1) (undo-tree-id2301 . -1) (undo-tree-id2303 . -1) (undo-tree-id2305 . -1) (undo-tree-id2307 . -1) (undo-tree-id2309 . -1) (undo-tree-id2311 . -1) (undo-tree-id2313 . -1) (undo-tree-id2315 . -1) (undo-tree-id2317 . -1) (undo-tree-id2319 . -1) (undo-tree-id2321 . -1) (undo-tree-id2323 . -1) (undo-tree-id2325 . -1) (undo-tree-id2327 . -1) (undo-tree-id2329 . -1) (undo-tree-id2331 . -1) (undo-tree-id2333 . -1) (undo-tree-id2335 . -1) (undo-tree-id2337 . -1) (undo-tree-id2339 . -1) (undo-tree-id2341 . -1) (undo-tree-id2343 . -1) (undo-tree-id2345 . -1) (undo-tree-id2347 . -1) (undo-tree-id2349 . -1) (undo-tree-id2351 . -1) (undo-tree-id2353 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2359 . -1) (undo-tree-id2361 . -1) (undo-tree-id2363 . -1) (undo-tree-id2365 . -1) (undo-tree-id2367 . -1) (undo-tree-id2369 . -1) (undo-tree-id2371 . -1) (undo-tree-id2373 . -1) (undo-tree-id2375 . -1) (undo-tree-id2377 . -1) (undo-tree-id2379 . -1) (undo-tree-id2381 . -1) (undo-tree-id2383 . -1) (undo-tree-id2385 . -1) (undo-tree-id2387 . -1) (undo-tree-id2389 . -1) (undo-tree-id2391 . -1) (undo-tree-id2393 . -1) (undo-tree-id2395 . -1) (undo-tree-id2397 . -1) (undo-tree-id2399 . -1) (undo-tree-id2401 . -1) (undo-tree-id2403 . -1) (undo-tree-id2405 . -1) (undo-tree-id2407 . -1) (undo-tree-id2409 . -1) (undo-tree-id2411 . -1) (undo-tree-id2413 . -1) (undo-tree-id2415 . -1) (undo-tree-id2417 . -1) (undo-tree-id2419 . -1) (undo-tree-id2421 . -1) (undo-tree-id2423 . -1) (undo-tree-id2425 . -1) (undo-tree-id2427 . -1) (undo-tree-id2429 . -1) (undo-tree-id2431 . -1) (undo-tree-id2433 . -1) (undo-tree-id2435 . -1) (undo-tree-id2437 . -1) (undo-tree-id2439 . -1) (undo-tree-id2441 . -1) (undo-tree-id2443 . -1) (undo-tree-id2445 . -1) (undo-tree-id2447 . -1) (undo-tree-id2449 . -1) (undo-tree-id2451 . -1) (undo-tree-id2453 . -1) (undo-tree-id2455 . -1) (undo-tree-id2457 . -1) (undo-tree-id2459 . -1) (undo-tree-id2461 . -1) (undo-tree-id2463 . -1) (undo-tree-id2465 . -1) (undo-tree-id2467 . -1) (undo-tree-id2469 . -1) (undo-tree-id2471 . -1) (undo-tree-id2473 . -1) (undo-tree-id2475 . -1) (undo-tree-id2477 . -1) (undo-tree-id2479 . -1) (undo-tree-id2481 . -1) (undo-tree-id2483 . -1) (undo-tree-id2485 . -1) (undo-tree-id2487 . -1) (undo-tree-id2489 . -1) (undo-tree-id2491 . -1) (undo-tree-id2493 . -1) (undo-tree-id2495 . -1) (undo-tree-id2497 . -1) (undo-tree-id2499 . -1) (undo-tree-id2501 . -1) (undo-tree-id2503 . -1) (undo-tree-id2505 . -1) (undo-tree-id2507 . -1) (undo-tree-id2509 . -1) (undo-tree-id2511 . -1) (undo-tree-id2513 . -1) (undo-tree-id2515 . -1) (undo-tree-id2517 . -1) (undo-tree-id2519 . -1) (undo-tree-id2521 . -1) (undo-tree-id2523 . -1) (undo-tree-id2525 . -1) (undo-tree-id2527 . -1) (undo-tree-id2529 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2534 . -1) (undo-tree-id2536 . -1) (undo-tree-id2538 . -1) (undo-tree-id2540 . -1) (undo-tree-id2542 . -1) (undo-tree-id2544 . -1) (undo-tree-id2546 . -1) (undo-tree-id2548 . -1) (undo-tree-id2550 . -1) (undo-tree-id2552 . -1) (undo-tree-id2554 . -1) (undo-tree-id2556 . -1) (undo-tree-id2558 . -1) (undo-tree-id2560 . -1) (undo-tree-id2562 . -1) (undo-tree-id2564 . -1) (undo-tree-id2566 . -1) (undo-tree-id2568 . -1) (undo-tree-id2570 . -1) (undo-tree-id2572 . -1) (undo-tree-id2574 . -1) (undo-tree-id2576 . -1) (undo-tree-id2578 . -1) (undo-tree-id2580 . -1) (undo-tree-id2582 . -1) (undo-tree-id2584 . -1) (undo-tree-id2586 . -1) (undo-tree-id2588 . -1) (undo-tree-id2590 . -1) (undo-tree-id2592 . -1) (undo-tree-id2594 . -1) (undo-tree-id2596 . -1) (undo-tree-id2598 . -1) (undo-tree-id2600 . -1) (undo-tree-id2602 . -1) (undo-tree-id2604 . -1) (undo-tree-id2606 . -1) (undo-tree-id2608 . -1) (undo-tree-id2610 . -1) (undo-tree-id2612 . -1) (undo-tree-id2614 . -1) (undo-tree-id2616 . -1) (undo-tree-id2618 . -1) (undo-tree-id2620 . -1) (undo-tree-id2622 . -1) (undo-tree-id2624 . -1) (undo-tree-id2626 . -1) (undo-tree-id2628 . -1) (undo-tree-id2630 . -1) (undo-tree-id2632 . -1) (undo-tree-id2634 . -1) (undo-tree-id2636 . -1) (undo-tree-id2638 . -1) (undo-tree-id2640 . -1) (undo-tree-id2642 . -1) (undo-tree-id2644 . -1) (undo-tree-id2646 . -1) (undo-tree-id2648 . -1) (undo-tree-id2650 . -1) (undo-tree-id2652 . -1) (undo-tree-id2654 . -1) (undo-tree-id2656 . -1) (undo-tree-id2658 . -1) (undo-tree-id2660 . -1) (undo-tree-id2662 . -1) (undo-tree-id2664 . -1) (undo-tree-id2666 . -1) (undo-tree-id2668 . -1) (undo-tree-id2670 . -1) (undo-tree-id2672 . -1) (undo-tree-id2674 . -1) (undo-tree-id2676 . -1) (undo-tree-id2678 . -1) (undo-tree-id2680 . -1) (undo-tree-id2682 . -1) (undo-tree-id2684 . -1) (undo-tree-id2686 . -1) (undo-tree-id2688 . -1) (undo-tree-id2690 . -1) (undo-tree-id2692 . -1) (undo-tree-id2694 . -1) (undo-tree-id2696 . -1) (undo-tree-id2698 . -1) (undo-tree-id2700 . -1) (undo-tree-id2702 . -1) (undo-tree-id2704 . -1) (undo-tree-id2706 . -1) (undo-tree-id2708 . -1) (undo-tree-id2710 . -1) (undo-tree-id2712 . -1) (undo-tree-id2714 . -1) (undo-tree-id2716 . -1) (undo-tree-id2718 . -1) (undo-tree-id2720 . -1) (undo-tree-id2722 . -1) (undo-tree-id2724 . -1) (undo-tree-id2726 . -1) (undo-tree-id2728 . -1) (undo-tree-id2730 . -1) (undo-tree-id2732 . -1) (undo-tree-id2734 . -1) (undo-tree-id2736 . -1) (undo-tree-id2738 . -1) (undo-tree-id2740 . -1) (undo-tree-id2742 . -1) (undo-tree-id2744 . -1) (undo-tree-id2746 . -1) (undo-tree-id2748 . -1) (undo-tree-id2750 . -1) (undo-tree-id2752 . -1) (undo-tree-id2754 . -1) (undo-tree-id2756 . -1) (undo-tree-id2758 . -1) (undo-tree-id2760 . -1) (undo-tree-id2762 . -1) (undo-tree-id2764 . -1) (undo-tree-id2766 . -1) (undo-tree-id2768 . -1) (undo-tree-id2770 . -1) (undo-tree-id2772 . -1) (#("(" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68857) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2777 . -1) (undo-tree-id2779 . -1) (undo-tree-id2781 . -1) (undo-tree-id2783 . -1) (undo-tree-id2785 . -1) (undo-tree-id2787 . -1) (undo-tree-id2789 . -1) (undo-tree-id2791 . -1) (undo-tree-id2793 . -1) (undo-tree-id2795 . -1) (undo-tree-id2797 . -1) (undo-tree-id2799 . -1) (undo-tree-id2801 . -1) (undo-tree-id2803 . -1) (undo-tree-id2805 . -1) (undo-tree-id2807 . -1) (undo-tree-id2809 . -1) (undo-tree-id2811 . -1) (undo-tree-id2813 . -1) (undo-tree-id2815 . -1) (undo-tree-id2817 . -1) (undo-tree-id2819 . -1) (undo-tree-id2821 . -1) (undo-tree-id2823 . -1) (undo-tree-id2825 . -1) (undo-tree-id2827 . -1) (undo-tree-id2829 . -1) (undo-tree-id2831 . -1) (undo-tree-id2833 . -1) (undo-tree-id2835 . -1) (undo-tree-id2837 . -1) (undo-tree-id2839 . -1) (undo-tree-id2841 . -1) (undo-tree-id2843 . -1) (undo-tree-id2845 . -1) (undo-tree-id2847 . -1) (undo-tree-id2849 . -1) (undo-tree-id2851 . -1) (undo-tree-id2853 . -1) (undo-tree-id2855 . -1) (undo-tree-id2857 . -1) (undo-tree-id2859 . -1) (undo-tree-id2861 . -1) (undo-tree-id2863 . -1) (undo-tree-id2865 . -1) (undo-tree-id2867 . -1) (undo-tree-id2869 . -1) (undo-tree-id2871 . -1) (undo-tree-id2873 . -1) (undo-tree-id2875 . -1) (undo-tree-id2877 . -1) (undo-tree-id2879 . -1) (undo-tree-id2881 . -1) (undo-tree-id2883 . -1) (undo-tree-id2885 . -1) (undo-tree-id2887 . -1) (undo-tree-id2889 . -1) (undo-tree-id2891 . -1) (undo-tree-id2893 . -1) (undo-tree-id2895 . -1) (undo-tree-id2897 . -1) (undo-tree-id2899 . -1) (undo-tree-id2901 . -1) (undo-tree-id2903 . -1) (undo-tree-id2905 . -1) (undo-tree-id2907 . -1) (undo-tree-id2909 . -1) (undo-tree-id2911 . -1) (undo-tree-id2913 . -1) (undo-tree-id2915 . -1) (undo-tree-id2917 . -1) (undo-tree-id2919 . -1) (undo-tree-id2921 . -1) (undo-tree-id2923 . -1) (undo-tree-id2925 . -1) (undo-tree-id2927 . -1) (undo-tree-id2929 . -1) (undo-tree-id2931 . -1) (undo-tree-id2933 . -1) (undo-tree-id2935 . -1) (undo-tree-id2937 . -1) (undo-tree-id2939 . -1) (undo-tree-id2941 . -1) (undo-tree-id2943 . -1) (undo-tree-id2945 . -1) (undo-tree-id2947 . -1) (undo-tree-id2949 . -1) (undo-tree-id2951 . -1) (undo-tree-id2953 . -1) (undo-tree-id2955 . -1) (undo-tree-id2957 . -1) (undo-tree-id2959 . -1) (undo-tree-id2961 . -1) (undo-tree-id2963 . -1) (undo-tree-id2965 . -1) (undo-tree-id2967 . -1) (undo-tree-id2969 . -1) (undo-tree-id2971 . -1) (undo-tree-id2973 . -1) (undo-tree-id2975 . -1) (undo-tree-id2977 . -1) (undo-tree-id2979 . -1) (undo-tree-id2981 . -1) (undo-tree-id2983 . -1) (undo-tree-id2985 . -1) (undo-tree-id2987 . -1) (undo-tree-id2989 . -1) (undo-tree-id2991 . -1) (undo-tree-id2993 . -1) (undo-tree-id2995 . -1) (undo-tree-id2997 . -1) (undo-tree-id2999 . -1) (undo-tree-id3001 . -1) (undo-tree-id3003 . -1) (undo-tree-id3005 . -1) (undo-tree-id3007 . -1) (#("c" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68858) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3012 . -1) (undo-tree-id3014 . -1) (undo-tree-id3016 . -1) (undo-tree-id3018 . -1) (undo-tree-id3020 . -1) (undo-tree-id3022 . -1) (undo-tree-id3024 . -1) (undo-tree-id3026 . -1) (undo-tree-id3028 . -1) (undo-tree-id3030 . -1) (undo-tree-id3032 . -1) (undo-tree-id3034 . -1) (undo-tree-id3036 . -1) (undo-tree-id3038 . -1) (undo-tree-id3040 . -1) (undo-tree-id3042 . -1) (undo-tree-id3044 . -1) (undo-tree-id3046 . -1) (undo-tree-id3048 . -1) (undo-tree-id3050 . -1) (undo-tree-id3052 . -1) (undo-tree-id3054 . -1) (undo-tree-id3056 . -1) (undo-tree-id3058 . -1) (undo-tree-id3060 . -1) (undo-tree-id3062 . -1) (undo-tree-id3064 . -1) (undo-tree-id3066 . -1) (undo-tree-id3068 . -1) (undo-tree-id3070 . -1) (undo-tree-id3072 . -1) (undo-tree-id3074 . -1) (undo-tree-id3076 . -1) (undo-tree-id3078 . -1) (undo-tree-id3080 . -1) (undo-tree-id3082 . -1) (undo-tree-id3084 . -1) (undo-tree-id3086 . -1) (undo-tree-id3088 . -1) (undo-tree-id3090 . -1) (undo-tree-id3092 . -1) (undo-tree-id3094 . -1) (undo-tree-id3096 . -1) (undo-tree-id3098 . -1) (undo-tree-id3100 . -1) (undo-tree-id3102 . -1) (undo-tree-id3104 . -1) (undo-tree-id3106 . -1) (undo-tree-id3108 . -1) (undo-tree-id3110 . -1) (undo-tree-id3112 . -1) (undo-tree-id3114 . -1) (undo-tree-id3116 . -1) (undo-tree-id3118 . -1) (undo-tree-id3120 . -1) (undo-tree-id3122 . -1) (undo-tree-id3124 . -1) (undo-tree-id3126 . -1) (undo-tree-id3128 . -1) (undo-tree-id3130 . -1) (undo-tree-id3132 . -1) (undo-tree-id3134 . -1) (undo-tree-id3136 . -1) (undo-tree-id3138 . -1) (undo-tree-id3140 . -1) (undo-tree-id3142 . -1) (undo-tree-id3144 . -1) (undo-tree-id3146 . -1) (undo-tree-id3148 . -1) (undo-tree-id3150 . -1) (undo-tree-id3152 . -1) (undo-tree-id3154 . -1) (undo-tree-id3156 . -1) (undo-tree-id3158 . -1) (undo-tree-id3160 . -1) (undo-tree-id3162 . -1) (undo-tree-id3164 . -1) (undo-tree-id3166 . -1) (undo-tree-id3168 . -1) (undo-tree-id3170 . -1) (undo-tree-id3172 . -1) (undo-tree-id3174 . -1) (undo-tree-id3176 . -1) (undo-tree-id3178 . -1) (undo-tree-id3180 . -1) (undo-tree-id3182 . -1) (undo-tree-id3184 . -1) (undo-tree-id3186 . -1) (undo-tree-id3188 . -1) (undo-tree-id3190 . -1) (undo-tree-id3192 . -1) (undo-tree-id3194 . -1) (undo-tree-id3196 . -1) (undo-tree-id3198 . -1) (undo-tree-id3200 . -1) (undo-tree-id3202 . -1) (undo-tree-id3204 . -1) (undo-tree-id3206 . -1) (undo-tree-id3208 . -1) (undo-tree-id3210 . -1) (undo-tree-id3212 . -1) (undo-tree-id3214 . -1) (undo-tree-id3216 . -1) (undo-tree-id3218 . -1) (undo-tree-id3220 . -1) (undo-tree-id3222 . -1) (undo-tree-id3224 . -1) (undo-tree-id3226 . -1) (undo-tree-id3228 . -1) (undo-tree-id3230 . -1) (undo-tree-id3232 . -1) (undo-tree-id3234 . -1) (#("o" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68859) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3239 . -1) (undo-tree-id3241 . -1) (undo-tree-id3243 . -1) (undo-tree-id3245 . -1) (undo-tree-id3247 . -1) (undo-tree-id3249 . -1) (undo-tree-id3251 . -1) (undo-tree-id3253 . -1) (undo-tree-id3255 . -1) (undo-tree-id3257 . -1) (undo-tree-id3259 . -1) (undo-tree-id3261 . -1) (undo-tree-id3263 . -1) (undo-tree-id3265 . -1) (undo-tree-id3267 . -1) (undo-tree-id3269 . -1) (undo-tree-id3271 . -1) (undo-tree-id3273 . -1) (undo-tree-id3275 . -1) (undo-tree-id3277 . -1) (undo-tree-id3279 . -1) (undo-tree-id3281 . -1) (undo-tree-id3283 . -1) (undo-tree-id3285 . -1) (undo-tree-id3287 . -1) (undo-tree-id3289 . -1) (undo-tree-id3291 . -1) (undo-tree-id3293 . -1) (undo-tree-id3295 . -1) (undo-tree-id3297 . -1) (undo-tree-id3299 . -1) (undo-tree-id3301 . -1) (undo-tree-id3303 . -1) (undo-tree-id3305 . -1) (undo-tree-id3307 . -1) (undo-tree-id3309 . -1) (undo-tree-id3311 . -1) (undo-tree-id3313 . -1) (undo-tree-id3315 . -1) (undo-tree-id3317 . -1) (undo-tree-id3319 . -1) (undo-tree-id3321 . -1) (undo-tree-id3323 . -1) (undo-tree-id3325 . -1) (undo-tree-id3327 . -1) (undo-tree-id3329 . -1) (undo-tree-id3331 . -1) (undo-tree-id3333 . -1) (undo-tree-id3335 . -1) (undo-tree-id3337 . -1) (undo-tree-id3339 . -1) (undo-tree-id3341 . -1) (undo-tree-id3343 . -1) (undo-tree-id3345 . -1) (undo-tree-id3347 . -1) (undo-tree-id3349 . -1) (undo-tree-id3351 . -1) (undo-tree-id3353 . -1) (undo-tree-id3355 . -1) (undo-tree-id3357 . -1) (undo-tree-id3359 . -1) (undo-tree-id3361 . -1) (undo-tree-id3363 . -1) (undo-tree-id3365 . -1) (undo-tree-id3367 . -1) (undo-tree-id3369 . -1) (undo-tree-id3371 . -1) (undo-tree-id3373 . -1) (undo-tree-id3375 . -1) (undo-tree-id3377 . -1) (undo-tree-id3379 . -1) (undo-tree-id3381 . -1) (undo-tree-id3383 . -1) (undo-tree-id3385 . -1) (undo-tree-id3387 . -1) (undo-tree-id3389 . -1) (undo-tree-id3391 . -1) (undo-tree-id3393 . -1) (undo-tree-id3395 . -1) (undo-tree-id3397 . -1) (undo-tree-id3399 . -1) (undo-tree-id3401 . -1) (undo-tree-id3403 . -1) (undo-tree-id3405 . -1) (undo-tree-id3407 . -1) (undo-tree-id3409 . -1) (undo-tree-id3411 . -1) (undo-tree-id3413 . -1) (undo-tree-id3415 . -1) (undo-tree-id3417 . -1) (undo-tree-id3419 . -1) (undo-tree-id3421 . -1) (undo-tree-id3423 . -1) (undo-tree-id3425 . -1) (undo-tree-id3427 . -1) (undo-tree-id3429 . -1) (undo-tree-id3431 . -1) (undo-tree-id3433 . -1) (undo-tree-id3435 . -1) (undo-tree-id3437 . -1) (undo-tree-id3439 . -1) (undo-tree-id3441 . -1) (undo-tree-id3443 . -1) (undo-tree-id3445 . -1) (undo-tree-id3447 . -1) (undo-tree-id3449 . -1) (undo-tree-id3451 . -1) (undo-tree-id3453 . -1) (#("n" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68860) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3458 . -1) (undo-tree-id3460 . -1) (undo-tree-id3462 . -1) (undo-tree-id3464 . -1) (undo-tree-id3466 . -1) (undo-tree-id3468 . -1) (undo-tree-id3470 . -1) (undo-tree-id3472 . -1) (undo-tree-id3474 . -1) (undo-tree-id3476 . -1) (undo-tree-id3478 . -1) (undo-tree-id3480 . -1) (undo-tree-id3482 . -1) (undo-tree-id3484 . -1) (undo-tree-id3486 . -1) (undo-tree-id3488 . -1) (undo-tree-id3490 . -1) (undo-tree-id3492 . -1) (undo-tree-id3494 . -1) (undo-tree-id3496 . -1) (undo-tree-id3498 . -1) (undo-tree-id3500 . -1) (undo-tree-id3502 . -1) (undo-tree-id3504 . -1) (undo-tree-id3506 . -1) (undo-tree-id3508 . -1) (undo-tree-id3510 . -1) (undo-tree-id3512 . -1) (undo-tree-id3514 . -1) (undo-tree-id3516 . -1) (undo-tree-id3518 . -1) (undo-tree-id3520 . -1) (undo-tree-id3522 . -1) (undo-tree-id3524 . -1) (undo-tree-id3526 . -1) (undo-tree-id3528 . -1) (undo-tree-id3530 . -1) (undo-tree-id3532 . -1) (undo-tree-id3534 . -1) (undo-tree-id3536 . -1) (undo-tree-id3538 . -1) (undo-tree-id3540 . -1) (undo-tree-id3542 . -1) (undo-tree-id3544 . -1) (undo-tree-id3546 . -1) (undo-tree-id3548 . -1) (undo-tree-id3550 . -1) (undo-tree-id3552 . -1) (undo-tree-id3554 . -1) (undo-tree-id3556 . -1) (undo-tree-id3558 . -1) (undo-tree-id3560 . -1) (undo-tree-id3562 . -1) (undo-tree-id3564 . -1) (undo-tree-id3566 . -1) (undo-tree-id3568 . -1) (undo-tree-id3570 . -1) (undo-tree-id3572 . -1) (undo-tree-id3574 . -1) (undo-tree-id3576 . -1) (undo-tree-id3578 . -1) (undo-tree-id3580 . -1) (undo-tree-id3582 . -1) (undo-tree-id3584 . -1) (undo-tree-id3586 . -1) (undo-tree-id3588 . -1) (undo-tree-id3590 . -1) (undo-tree-id3592 . -1) (undo-tree-id3594 . -1) (undo-tree-id3596 . -1) (undo-tree-id3598 . -1) (undo-tree-id3600 . -1) (undo-tree-id3602 . -1) (undo-tree-id3604 . -1) (undo-tree-id3606 . -1) (undo-tree-id3608 . -1) (undo-tree-id3610 . -1) (undo-tree-id3612 . -1) (undo-tree-id3614 . -1) (undo-tree-id3616 . -1) (undo-tree-id3618 . -1) (undo-tree-id3620 . -1) (undo-tree-id3622 . -1) (undo-tree-id3624 . -1) (undo-tree-id3626 . -1) (undo-tree-id3628 . -1) (undo-tree-id3630 . -1) (undo-tree-id3632 . -1) (undo-tree-id3634 . -1) (undo-tree-id3636 . -1) (undo-tree-id3638 . -1) (undo-tree-id3640 . -1) (undo-tree-id3642 . -1) (undo-tree-id3644 . -1) (undo-tree-id3646 . -1) (undo-tree-id3648 . -1) (undo-tree-id3650 . -1) (undo-tree-id3652 . -1) (undo-tree-id3654 . -1) (undo-tree-id3656 . -1) (undo-tree-id3658 . -1) (undo-tree-id3660 . -1) (undo-tree-id3662 . -1) (undo-tree-id3664 . -1) (#("c" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68861) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (undo-tree-id3669 . -1) (undo-tree-id3671 . -1) (undo-tree-id3673 . -1) (undo-tree-id3675 . -1) (undo-tree-id3677 . -1) (undo-tree-id3679 . -1) (undo-tree-id3681 . -1) (undo-tree-id3683 . -1) (undo-tree-id3685 . -1) (undo-tree-id3687 . -1) (undo-tree-id3689 . -1) (undo-tree-id3691 . -1) (undo-tree-id3693 . -1) (undo-tree-id3695 . -1) (undo-tree-id3697 . -1) (undo-tree-id3699 . -1) (undo-tree-id3701 . -1) (undo-tree-id3703 . -1) (undo-tree-id3705 . -1) (undo-tree-id3707 . -1) (undo-tree-id3709 . -1) (undo-tree-id3711 . -1) (undo-tree-id3713 . -1) (undo-tree-id3715 . -1) (undo-tree-id3717 . -1) (undo-tree-id3719 . -1) (undo-tree-id3721 . -1) (undo-tree-id3723 . -1) (undo-tree-id3725 . -1) (undo-tree-id3727 . -1) (undo-tree-id3729 . -1) (undo-tree-id3731 . -1) (undo-tree-id3733 . -1) (undo-tree-id3735 . -1) (undo-tree-id3737 . -1) (undo-tree-id3739 . -1) (undo-tree-id3741 . -1) (undo-tree-id3743 . -1) (undo-tree-id3745 . -1) (undo-tree-id3747 . -1) (undo-tree-id3749 . -1) (undo-tree-id3751 . -1) (undo-tree-id3753 . -1) (undo-tree-id3755 . -1) (undo-tree-id3757 . -1) (undo-tree-id3759 . -1) (undo-tree-id3761 . -1) (undo-tree-id3763 . -1) (undo-tree-id3765 . -1) (undo-tree-id3767 . -1) (undo-tree-id3769 . -1) (undo-tree-id3771 . -1) (undo-tree-id3773 . -1) (undo-tree-id3775 . -1) (undo-tree-id3777 . -1) (undo-tree-id3779 . -1) (undo-tree-id3781 . -1) (undo-tree-id3783 . -1) (undo-tree-id3785 . -1) (undo-tree-id3787 . -1) (undo-tree-id3789 . -1) (undo-tree-id3791 . -1) (undo-tree-id3793 . -1) (undo-tree-id3795 . -1) (undo-tree-id3797 . -1) (undo-tree-id3799 . -1) (undo-tree-id3801 . -1) (undo-tree-id3803 . -1) (undo-tree-id3805 . -1) (undo-tree-id3807 . -1) (undo-tree-id3809 . -1) (undo-tree-id3811 . -1) (undo-tree-id3813 . -1) (undo-tree-id3815 . -1) (undo-tree-id3817 . -1) (undo-tree-id3819 . -1) (undo-tree-id3821 . -1) (undo-tree-id3823 . -1) (undo-tree-id3825 . -1) (undo-tree-id3827 . -1) (undo-tree-id3829 . -1) (undo-tree-id3831 . -1) (undo-tree-id3833 . -1) (undo-tree-id3835 . -1) (undo-tree-id3837 . -1) (undo-tree-id3839 . -1) (undo-tree-id3841 . -1) (undo-tree-id3843 . -1) (undo-tree-id3845 . -1) (undo-tree-id3847 . -1) (undo-tree-id3849 . -1) (undo-tree-id3851 . -1) (undo-tree-id3853 . -1) (undo-tree-id3855 . -1) (undo-tree-id3857 . -1) (undo-tree-id3859 . -1) (undo-tree-id3861 . -1) (undo-tree-id3863 . -1) (undo-tree-id3865 . -1) (undo-tree-id3867 . -1) 68862 (#("a" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68862) (undo-tree-id3869 . -1) (undo-tree-id3870 . -1) (undo-tree-id3872 . -1) (undo-tree-id3874 . -1) (undo-tree-id3876 . -1) (undo-tree-id3878 . -1) (undo-tree-id3880 . -1) (undo-tree-id3882 . -1) (undo-tree-id3884 . -1) (undo-tree-id3886 . -1) (undo-tree-id3888 . -1) (undo-tree-id3890 . -1) (undo-tree-id3892 . -1) (undo-tree-id3894 . -1) (undo-tree-id3896 . -1) (undo-tree-id3898 . -1) (undo-tree-id3900 . -1) (undo-tree-id3902 . -1) (undo-tree-id3904 . -1) (undo-tree-id3906 . -1) (undo-tree-id3908 . -1) (undo-tree-id3910 . -1) (undo-tree-id3912 . -1) (undo-tree-id3914 . -1) (undo-tree-id3916 . -1) (undo-tree-id3918 . -1) (undo-tree-id3920 . -1) (undo-tree-id3922 . -1) (undo-tree-id3924 . -1) (undo-tree-id3926 . -1) (undo-tree-id3928 . -1) (undo-tree-id3930 . -1) (undo-tree-id3932 . -1) (undo-tree-id3934 . -1) (undo-tree-id3936 . -1) (undo-tree-id3938 . -1) (undo-tree-id3940 . -1) (undo-tree-id3942 . -1) (undo-tree-id3944 . -1) (undo-tree-id3946 . -1) (undo-tree-id3948 . -1) (undo-tree-id3950 . -1) (undo-tree-id3952 . -1) (undo-tree-id3954 . -1) (undo-tree-id3956 . -1) (undo-tree-id3958 . -1) (undo-tree-id3960 . -1) (undo-tree-id3962 . -1) (undo-tree-id3964 . -1) (undo-tree-id3966 . -1) (undo-tree-id3968 . -1) (undo-tree-id3970 . -1) (undo-tree-id3972 . -1) (undo-tree-id3974 . -1) (undo-tree-id3976 . -1) (undo-tree-id3978 . -1) (undo-tree-id3980 . -1) (undo-tree-id3982 . -1) (undo-tree-id3984 . -1) (undo-tree-id3986 . -1) (undo-tree-id3988 . -1) (undo-tree-id3990 . -1) (undo-tree-id3992 . -1) (undo-tree-id3994 . -1) (undo-tree-id3996 . -1) (undo-tree-id3998 . -1) (undo-tree-id4000 . -1) (undo-tree-id4002 . -1) (undo-tree-id4004 . -1) (undo-tree-id4006 . -1) (undo-tree-id4008 . -1) (undo-tree-id4010 . -1) (undo-tree-id4012 . -1) (undo-tree-id4014 . -1) (undo-tree-id4016 . -1) (undo-tree-id4018 . -1) (undo-tree-id4020 . -1) (undo-tree-id4022 . -1) (undo-tree-id4024 . -1) (undo-tree-id4026 . -1) (undo-tree-id4028 . -1) (undo-tree-id4030 . -1) (undo-tree-id4032 . -1) (undo-tree-id4034 . -1) (undo-tree-id4036 . -1) (undo-tree-id4038 . -1) (undo-tree-id4040 . -1) (undo-tree-id4042 . -1) (undo-tree-id4044 . -1) (undo-tree-id4046 . -1) (undo-tree-id4048 . -1) (undo-tree-id4050 . -1) (undo-tree-id4052 . -1) (undo-tree-id4054 . -1) (undo-tree-id4056 . -1) (undo-tree-id4058 . -1) (undo-tree-id4060 . -1) (undo-tree-id4062 . -1) (#("t" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68863) (undo-tree-id4064 . -1) (undo-tree-id4065 . -1) (undo-tree-id4067 . -1) (undo-tree-id4069 . -1) (undo-tree-id4071 . -1) (undo-tree-id4073 . -1) (undo-tree-id4075 . -1) (undo-tree-id4077 . -1) (undo-tree-id4079 . -1) (undo-tree-id4081 . -1) (undo-tree-id4083 . -1) (undo-tree-id4085 . -1) (undo-tree-id4087 . -1) (undo-tree-id4089 . -1) (undo-tree-id4091 . -1) (undo-tree-id4093 . -1) (undo-tree-id4095 . -1) (undo-tree-id4097 . -1) (undo-tree-id4099 . -1) (undo-tree-id4101 . -1) (undo-tree-id4103 . -1) (undo-tree-id4105 . -1) (undo-tree-id4107 . -1) (undo-tree-id4109 . -1) (undo-tree-id4111 . -1) (undo-tree-id4113 . -1) (undo-tree-id4115 . -1) (undo-tree-id4117 . -1) (undo-tree-id4119 . -1) (undo-tree-id4121 . -1) (undo-tree-id4123 . -1) (undo-tree-id4125 . -1) (undo-tree-id4127 . -1) (undo-tree-id4129 . -1) (undo-tree-id4131 . -1) (undo-tree-id4133 . -1) (undo-tree-id4135 . -1) (undo-tree-id4137 . -1) (undo-tree-id4139 . -1) (undo-tree-id4141 . -1) (undo-tree-id4143 . -1) (undo-tree-id4145 . -1) (undo-tree-id4147 . -1) (undo-tree-id4149 . -1) (undo-tree-id4151 . -1) (undo-tree-id4153 . -1) (undo-tree-id4155 . -1) (undo-tree-id4157 . -1) (undo-tree-id4159 . -1) (undo-tree-id4161 . -1) (undo-tree-id4163 . -1) (undo-tree-id4165 . -1) (undo-tree-id4167 . -1) (undo-tree-id4169 . -1) (undo-tree-id4171 . -1) (undo-tree-id4173 . -1) (undo-tree-id4175 . -1) (undo-tree-id4177 . -1) (undo-tree-id4179 . -1) (undo-tree-id4181 . -1) (undo-tree-id4183 . -1) (undo-tree-id4185 . -1) (undo-tree-id4187 . -1) (undo-tree-id4189 . -1) (undo-tree-id4191 . -1) (undo-tree-id4193 . -1) (undo-tree-id4195 . -1) (undo-tree-id4197 . -1) (undo-tree-id4199 . -1) (undo-tree-id4201 . -1) (undo-tree-id4203 . -1) (undo-tree-id4205 . -1) (undo-tree-id4207 . -1) (undo-tree-id4209 . -1) (undo-tree-id4211 . -1) (undo-tree-id4213 . -1) (undo-tree-id4215 . -1) (undo-tree-id4217 . -1) (undo-tree-id4219 . -1) (undo-tree-id4221 . -1) (undo-tree-id4223 . -1) (undo-tree-id4225 . -1) (undo-tree-id4227 . -1) (undo-tree-id4229 . -1) (undo-tree-id4231 . -1) (undo-tree-id4233 . -1) (undo-tree-id4235 . -1) (undo-tree-id4237 . -1) (undo-tree-id4239 . -1) (undo-tree-id4241 . -1) (undo-tree-id4243 . -1) (undo-tree-id4245 . -1) (undo-tree-id4247 . -1) (undo-tree-id4249 . -1) (#(" " 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68864) (undo-tree-id4251 . -1) (undo-tree-id4252 . -1) (undo-tree-id4254 . -1) (undo-tree-id4256 . -1) (undo-tree-id4258 . -1) (undo-tree-id4260 . -1) (undo-tree-id4262 . -1) (undo-tree-id4264 . -1) (undo-tree-id4266 . -1) (undo-tree-id4268 . -1) (undo-tree-id4270 . -1) (undo-tree-id4272 . -1) (undo-tree-id4274 . -1) (undo-tree-id4276 . -1) (undo-tree-id4278 . -1) (undo-tree-id4280 . -1) (undo-tree-id4282 . -1) (undo-tree-id4284 . -1) (undo-tree-id4286 . -1) (undo-tree-id4288 . -1) (undo-tree-id4290 . -1) (undo-tree-id4292 . -1) (undo-tree-id4294 . -1) (undo-tree-id4296 . -1) (undo-tree-id4298 . -1) (undo-tree-id4300 . -1) (undo-tree-id4302 . -1) (undo-tree-id4304 . -1) (undo-tree-id4306 . -1) (undo-tree-id4308 . -1) (undo-tree-id4310 . -1) (undo-tree-id4312 . -1) (undo-tree-id4314 . -1) (undo-tree-id4316 . -1) (undo-tree-id4318 . -1) (undo-tree-id4320 . -1) (undo-tree-id4322 . -1) (undo-tree-id4324 . -1) (undo-tree-id4326 . -1) (undo-tree-id4328 . -1) (undo-tree-id4330 . -1) (undo-tree-id4332 . -1) (undo-tree-id4334 . -1) (undo-tree-id4336 . -1) (undo-tree-id4338 . -1) (undo-tree-id4340 . -1) (undo-tree-id4342 . -1) (undo-tree-id4344 . -1) (undo-tree-id4346 . -1) (undo-tree-id4348 . -1) (undo-tree-id4350 . -1) (undo-tree-id4352 . -1) (undo-tree-id4354 . -1) (undo-tree-id4356 . -1) (undo-tree-id4358 . -1) (undo-tree-id4360 . -1) (undo-tree-id4362 . -1) (undo-tree-id4364 . -1) (undo-tree-id4366 . -1) (undo-tree-id4368 . -1) (undo-tree-id4370 . -1) (undo-tree-id4372 . -1) (undo-tree-id4374 . -1) (undo-tree-id4376 . -1) (undo-tree-id4378 . -1) (undo-tree-id4380 . -1) (undo-tree-id4382 . -1) (undo-tree-id4384 . -1) (undo-tree-id4386 . -1) (undo-tree-id4388 . -1) (undo-tree-id4390 . -1) (undo-tree-id4392 . -1) (undo-tree-id4394 . -1) (undo-tree-id4396 . -1) (undo-tree-id4398 . -1) (undo-tree-id4400 . -1) (undo-tree-id4402 . -1) (undo-tree-id4404 . -1) (undo-tree-id4406 . -1) (undo-tree-id4408 . -1) (undo-tree-id4410 . -1) (undo-tree-id4412 . -1) (undo-tree-id4414 . -1) (undo-tree-id4416 . -1) (undo-tree-id4418 . -1) (undo-tree-id4420 . -1) (undo-tree-id4422 . -1) (undo-tree-id4424 . -1) (undo-tree-id4426 . -1) (undo-tree-id4428 . -1) (#("o" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68865) (undo-tree-id4430 . -1) (undo-tree-id4431 . -1) (undo-tree-id4433 . -1) (undo-tree-id4435 . -1) (undo-tree-id4437 . -1) (undo-tree-id4439 . -1) (undo-tree-id4441 . -1) (undo-tree-id4443 . -1) (undo-tree-id4445 . -1) (undo-tree-id4447 . -1) (undo-tree-id4449 . -1) (undo-tree-id4451 . -1) (undo-tree-id4453 . -1) (undo-tree-id4455 . -1) (undo-tree-id4457 . -1) (undo-tree-id4459 . -1) (undo-tree-id4461 . -1) (undo-tree-id4463 . -1) (undo-tree-id4465 . -1) (undo-tree-id4467 . -1) (undo-tree-id4469 . -1) (undo-tree-id4471 . -1) (undo-tree-id4473 . -1) (undo-tree-id4475 . -1) (undo-tree-id4477 . -1) (undo-tree-id4479 . -1) (undo-tree-id4481 . -1) (undo-tree-id4483 . -1) (undo-tree-id4485 . -1) (undo-tree-id4487 . -1) (undo-tree-id4489 . -1) (undo-tree-id4491 . -1) (undo-tree-id4493 . -1) (undo-tree-id4495 . -1) (undo-tree-id4497 . -1) (undo-tree-id4499 . -1) (undo-tree-id4501 . -1) (undo-tree-id4503 . -1) (undo-tree-id4505 . -1) (undo-tree-id4507 . -1) (undo-tree-id4509 . -1) (undo-tree-id4511 . -1) (undo-tree-id4513 . -1) (undo-tree-id4515 . -1) (undo-tree-id4517 . -1) (undo-tree-id4519 . -1) (undo-tree-id4521 . -1) (undo-tree-id4523 . -1) (undo-tree-id4525 . -1) (undo-tree-id4527 . -1) (undo-tree-id4529 . -1) (undo-tree-id4531 . -1) (undo-tree-id4533 . -1) (undo-tree-id4535 . -1) (undo-tree-id4537 . -1) (undo-tree-id4539 . -1) (undo-tree-id4541 . -1) (undo-tree-id4543 . -1) (undo-tree-id4545 . -1) (undo-tree-id4547 . -1) (undo-tree-id4549 . -1) (undo-tree-id4551 . -1) (undo-tree-id4553 . -1) (undo-tree-id4555 . -1) (undo-tree-id4557 . -1) (undo-tree-id4559 . -1) (undo-tree-id4561 . -1) (undo-tree-id4563 . -1) (undo-tree-id4565 . -1) (undo-tree-id4567 . -1) (undo-tree-id4569 . -1) (undo-tree-id4571 . -1) (undo-tree-id4573 . -1) (undo-tree-id4575 . -1) (undo-tree-id4577 . -1) (undo-tree-id4579 . -1) (undo-tree-id4581 . -1) (undo-tree-id4583 . -1) (undo-tree-id4585 . -1) (undo-tree-id4587 . -1) (undo-tree-id4589 . -1) (undo-tree-id4591 . -1) (undo-tree-id4593 . -1) (undo-tree-id4595 . -1) (undo-tree-id4597 . -1) (undo-tree-id4599 . -1) (#("r" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68866) (undo-tree-id4601 . -1) (undo-tree-id4602 . -1) (undo-tree-id4604 . -1) (undo-tree-id4606 . -1) (undo-tree-id4608 . -1) (undo-tree-id4610 . -1) (undo-tree-id4612 . -1) (undo-tree-id4614 . -1) (undo-tree-id4616 . -1) (undo-tree-id4618 . -1) (undo-tree-id4620 . -1) (undo-tree-id4622 . -1) (undo-tree-id4624 . -1) (undo-tree-id4626 . -1) (undo-tree-id4628 . -1) (undo-tree-id4630 . -1) (undo-tree-id4632 . -1) (undo-tree-id4634 . -1) (undo-tree-id4636 . -1) (undo-tree-id4638 . -1) (undo-tree-id4640 . -1) (undo-tree-id4642 . -1) (undo-tree-id4644 . -1) (undo-tree-id4646 . -1) (undo-tree-id4648 . -1) (undo-tree-id4650 . -1) (undo-tree-id4652 . -1) (undo-tree-id4654 . -1) (undo-tree-id4656 . -1) (undo-tree-id4658 . -1) (undo-tree-id4660 . -1) (undo-tree-id4662 . -1) (undo-tree-id4664 . -1) (undo-tree-id4666 . -1) (undo-tree-id4668 . -1) (undo-tree-id4670 . -1) (undo-tree-id4672 . -1) (undo-tree-id4674 . -1) (undo-tree-id4676 . -1) (undo-tree-id4678 . -1) (undo-tree-id4680 . -1) (undo-tree-id4682 . -1) (undo-tree-id4684 . -1) (undo-tree-id4686 . -1) (undo-tree-id4688 . -1) (undo-tree-id4690 . -1) (undo-tree-id4692 . -1) (undo-tree-id4694 . -1) (undo-tree-id4696 . -1) (undo-tree-id4698 . -1) (undo-tree-id4700 . -1) (undo-tree-id4702 . -1) (undo-tree-id4704 . -1) (undo-tree-id4706 . -1) (undo-tree-id4708 . -1) (undo-tree-id4710 . -1) (undo-tree-id4712 . -1) (undo-tree-id4714 . -1) (undo-tree-id4716 . -1) (undo-tree-id4718 . -1) (undo-tree-id4720 . -1) (undo-tree-id4722 . -1) (undo-tree-id4724 . -1) (undo-tree-id4726 . -1) (undo-tree-id4728 . -1) (undo-tree-id4730 . -1) (undo-tree-id4732 . -1) (undo-tree-id4734 . -1) (undo-tree-id4736 . -1) (undo-tree-id4738 . -1) (undo-tree-id4740 . -1) (undo-tree-id4742 . -1) (undo-tree-id4744 . -1) (undo-tree-id4746 . -1) (undo-tree-id4748 . -1) (undo-tree-id4750 . -1) (undo-tree-id4752 . -1) (undo-tree-id4754 . -1) (undo-tree-id4756 . -1) (undo-tree-id4758 . -1) (undo-tree-id4760 . -1) (undo-tree-id4762 . -1) (#("g" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68867) (undo-tree-id4764 . -1) (undo-tree-id4765 . -1) (undo-tree-id4767 . -1) (undo-tree-id4769 . -1) (undo-tree-id4771 . -1) (undo-tree-id4773 . -1) (undo-tree-id4775 . -1) (undo-tree-id4777 . -1) (undo-tree-id4779 . -1) (undo-tree-id4781 . -1) (undo-tree-id4783 . -1) (undo-tree-id4785 . -1) (undo-tree-id4787 . -1) (undo-tree-id4789 . -1) (undo-tree-id4791 . -1) (undo-tree-id4793 . -1) (undo-tree-id4795 . -1) (undo-tree-id4797 . -1) (undo-tree-id4799 . -1) (undo-tree-id4801 . -1) (undo-tree-id4803 . -1) (undo-tree-id4805 . -1) (undo-tree-id4807 . -1) (undo-tree-id4809 . -1) (undo-tree-id4811 . -1) (undo-tree-id4813 . -1) (undo-tree-id4815 . -1) (undo-tree-id4817 . -1) (undo-tree-id4819 . -1) (undo-tree-id4821 . -1) (undo-tree-id4823 . -1) (undo-tree-id4825 . -1) (undo-tree-id4827 . -1) (undo-tree-id4829 . -1) (undo-tree-id4831 . -1) (undo-tree-id4833 . -1) (undo-tree-id4835 . -1) (undo-tree-id4837 . -1) (undo-tree-id4839 . -1) (undo-tree-id4841 . -1) (undo-tree-id4843 . -1) (undo-tree-id4845 . -1) (undo-tree-id4847 . -1) (undo-tree-id4849 . -1) (undo-tree-id4851 . -1) (undo-tree-id4853 . -1) (undo-tree-id4855 . -1) (undo-tree-id4857 . -1) (undo-tree-id4859 . -1) (undo-tree-id4861 . -1) (undo-tree-id4863 . -1) (undo-tree-id4865 . -1) (undo-tree-id4867 . -1) (undo-tree-id4869 . -1) (undo-tree-id4871 . -1) (undo-tree-id4873 . -1) (undo-tree-id4875 . -1) (undo-tree-id4877 . -1) (undo-tree-id4879 . -1) (undo-tree-id4881 . -1) (undo-tree-id4883 . -1) (undo-tree-id4885 . -1) (undo-tree-id4887 . -1) (undo-tree-id4889 . -1) (undo-tree-id4891 . -1) (undo-tree-id4893 . -1) (undo-tree-id4895 . -1) (undo-tree-id4897 . -1) (undo-tree-id4899 . -1) (undo-tree-id4901 . -1) (undo-tree-id4903 . -1) (undo-tree-id4905 . -1) (undo-tree-id4907 . -1) (undo-tree-id4909 . -1) (undo-tree-id4911 . -1) (undo-tree-id4913 . -1) (undo-tree-id4915 . -1) (undo-tree-id4917 . -1) (#("-" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68868) (undo-tree-id4919 . -1) (undo-tree-id4920 . -1) (undo-tree-id4922 . -1) (undo-tree-id4924 . -1) (undo-tree-id4926 . -1) (undo-tree-id4928 . -1) (undo-tree-id4930 . -1) (undo-tree-id4932 . -1) (undo-tree-id4934 . -1) (undo-tree-id4936 . -1) (undo-tree-id4938 . -1) (undo-tree-id4940 . -1) (undo-tree-id4942 . -1) (undo-tree-id4944 . -1) (undo-tree-id4946 . -1) (undo-tree-id4948 . -1) (undo-tree-id4950 . -1) (undo-tree-id4952 . -1) (undo-tree-id4954 . -1) (undo-tree-id4956 . -1) (undo-tree-id4958 . -1) (undo-tree-id4960 . -1) (undo-tree-id4962 . -1) (undo-tree-id4964 . -1) (undo-tree-id4966 . -1) (undo-tree-id4968 . -1) (undo-tree-id4970 . -1) (undo-tree-id4972 . -1) (undo-tree-id4974 . -1) (undo-tree-id4976 . -1) (undo-tree-id4978 . -1) (undo-tree-id4980 . -1) (undo-tree-id4982 . -1) (undo-tree-id4984 . -1) (undo-tree-id4986 . -1) (undo-tree-id4988 . -1) (undo-tree-id4990 . -1) (undo-tree-id4992 . -1) (undo-tree-id4994 . -1) (undo-tree-id4996 . -1) (undo-tree-id4998 . -1) (undo-tree-id5000 . -1) (undo-tree-id5002 . -1) (undo-tree-id5004 . -1) (undo-tree-id5006 . -1) (undo-tree-id5008 . -1) (undo-tree-id5010 . -1) (undo-tree-id5012 . -1) (undo-tree-id5014 . -1) (undo-tree-id5016 . -1) (undo-tree-id5018 . -1) (undo-tree-id5020 . -1) (undo-tree-id5022 . -1) (undo-tree-id5024 . -1) (undo-tree-id5026 . -1) (undo-tree-id5028 . -1) (undo-tree-id5030 . -1) (undo-tree-id5032 . -1) (undo-tree-id5034 . -1) (undo-tree-id5036 . -1) (undo-tree-id5038 . -1) (undo-tree-id5040 . -1) (undo-tree-id5042 . -1) (undo-tree-id5044 . -1) (undo-tree-id5046 . -1) (undo-tree-id5048 . -1) (undo-tree-id5050 . -1) (undo-tree-id5052 . -1) (undo-tree-id5054 . -1) (undo-tree-id5056 . -1) (undo-tree-id5058 . -1) (undo-tree-id5060 . -1) (undo-tree-id5062 . -1) (undo-tree-id5064 . -1) (#("r" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68869) (undo-tree-id5066 . -1) (undo-tree-id5067 . -1) (undo-tree-id5069 . -1) (undo-tree-id5071 . -1) (undo-tree-id5073 . -1) (undo-tree-id5075 . -1) (undo-tree-id5077 . -1) (undo-tree-id5079 . -1) (undo-tree-id5081 . -1) (undo-tree-id5083 . -1) (undo-tree-id5085 . -1) (undo-tree-id5087 . -1) (undo-tree-id5089 . -1) (undo-tree-id5091 . -1) (undo-tree-id5093 . -1) (undo-tree-id5095 . -1) (undo-tree-id5097 . -1) (undo-tree-id5099 . -1) (undo-tree-id5101 . -1) (undo-tree-id5103 . -1) (undo-tree-id5105 . -1) (undo-tree-id5107 . -1) (undo-tree-id5109 . -1) (undo-tree-id5111 . -1) (undo-tree-id5113 . -1) (undo-tree-id5115 . -1) (undo-tree-id5117 . -1) (undo-tree-id5119 . -1) (undo-tree-id5121 . -1) (undo-tree-id5123 . -1) (undo-tree-id5125 . -1) (undo-tree-id5127 . -1) (undo-tree-id5129 . -1) (undo-tree-id5131 . -1) (undo-tree-id5133 . -1) (undo-tree-id5135 . -1) (undo-tree-id5137 . -1) (undo-tree-id5139 . -1) (undo-tree-id5141 . -1) (undo-tree-id5143 . -1) (undo-tree-id5145 . -1) (undo-tree-id5147 . -1) (undo-tree-id5149 . -1) (undo-tree-id5151 . -1) (undo-tree-id5153 . -1) (undo-tree-id5155 . -1) (undo-tree-id5157 . -1) (undo-tree-id5159 . -1) (undo-tree-id5161 . -1) (undo-tree-id5163 . -1) (undo-tree-id5165 . -1) (undo-tree-id5167 . -1) (undo-tree-id5169 . -1) (undo-tree-id5171 . -1) (undo-tree-id5173 . -1) (undo-tree-id5175 . -1) (undo-tree-id5177 . -1) (undo-tree-id5179 . -1) (undo-tree-id5181 . -1) (undo-tree-id5183 . -1) (undo-tree-id5185 . -1) (undo-tree-id5187 . -1) (undo-tree-id5189 . -1) (undo-tree-id5191 . -1) (undo-tree-id5193 . -1) (undo-tree-id5195 . -1) (undo-tree-id5197 . -1) (undo-tree-id5199 . -1) (undo-tree-id5201 . -1) (undo-tree-id5203 . -1) (#("o" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68870) (undo-tree-id5205 . -1) (undo-tree-id5206 . -1) (undo-tree-id5208 . -1) (undo-tree-id5210 . -1) (undo-tree-id5212 . -1) (undo-tree-id5214 . -1) (undo-tree-id5216 . -1) (undo-tree-id5218 . -1) (undo-tree-id5220 . -1) (undo-tree-id5222 . -1) (undo-tree-id5224 . -1) (undo-tree-id5226 . -1) (undo-tree-id5228 . -1) (undo-tree-id5230 . -1) (undo-tree-id5232 . -1) (undo-tree-id5234 . -1) (undo-tree-id5236 . -1) (undo-tree-id5238 . -1) (undo-tree-id5240 . -1) (undo-tree-id5242 . -1) (undo-tree-id5244 . -1) (undo-tree-id5246 . -1) (undo-tree-id5248 . -1) (undo-tree-id5250 . -1) (undo-tree-id5252 . -1) (undo-tree-id5254 . -1) (undo-tree-id5256 . -1) (undo-tree-id5258 . -1) (undo-tree-id5260 . -1) (undo-tree-id5262 . -1) (undo-tree-id5264 . -1) (undo-tree-id5266 . -1) (undo-tree-id5268 . -1) (undo-tree-id5270 . -1) (undo-tree-id5272 . -1) (undo-tree-id5274 . -1) (undo-tree-id5276 . -1) (undo-tree-id5278 . -1) (undo-tree-id5280 . -1) (undo-tree-id5282 . -1) (undo-tree-id5284 . -1) (undo-tree-id5286 . -1) (undo-tree-id5288 . -1) (undo-tree-id5290 . -1) (undo-tree-id5292 . -1) (undo-tree-id5294 . -1) (undo-tree-id5296 . -1) (undo-tree-id5298 . -1) (undo-tree-id5300 . -1) (undo-tree-id5302 . -1) (undo-tree-id5304 . -1) (undo-tree-id5306 . -1) (undo-tree-id5308 . -1) (undo-tree-id5310 . -1) (undo-tree-id5312 . -1) (undo-tree-id5314 . -1) (undo-tree-id5316 . -1) (undo-tree-id5318 . -1) (undo-tree-id5320 . -1) (undo-tree-id5322 . -1) (undo-tree-id5324 . -1) (undo-tree-id5326 . -1) (undo-tree-id5328 . -1) (undo-tree-id5330 . -1) (undo-tree-id5332 . -1) (undo-tree-id5334 . -1) (#("a" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68871) (undo-tree-id5336 . -1) (undo-tree-id5337 . -1) (undo-tree-id5339 . -1) (undo-tree-id5341 . -1) (undo-tree-id5343 . -1) (undo-tree-id5345 . -1) (undo-tree-id5347 . -1) (undo-tree-id5349 . -1) (undo-tree-id5351 . -1) (undo-tree-id5353 . -1) (undo-tree-id5355 . -1) (undo-tree-id5357 . -1) (undo-tree-id5359 . -1) (undo-tree-id5361 . -1) (undo-tree-id5363 . -1) (undo-tree-id5365 . -1) (undo-tree-id5367 . -1) (undo-tree-id5369 . -1) (undo-tree-id5371 . -1) (undo-tree-id5373 . -1) (undo-tree-id5375 . -1) (undo-tree-id5377 . -1) (undo-tree-id5379 . -1) (undo-tree-id5381 . -1) (undo-tree-id5383 . -1) (undo-tree-id5385 . -1) (undo-tree-id5387 . -1) (undo-tree-id5389 . -1) (undo-tree-id5391 . -1) (undo-tree-id5393 . -1) (undo-tree-id5395 . -1) (undo-tree-id5397 . -1) (undo-tree-id5399 . -1) (undo-tree-id5401 . -1) (undo-tree-id5403 . -1) (undo-tree-id5405 . -1) (undo-tree-id5407 . -1) (undo-tree-id5409 . -1) (undo-tree-id5411 . -1) (undo-tree-id5413 . -1) (undo-tree-id5415 . -1) (undo-tree-id5417 . -1) (undo-tree-id5419 . -1) (undo-tree-id5421 . -1) (undo-tree-id5423 . -1) (undo-tree-id5425 . -1) (undo-tree-id5427 . -1) (undo-tree-id5429 . -1) (undo-tree-id5431 . -1) (undo-tree-id5433 . -1) (undo-tree-id5435 . -1) (undo-tree-id5437 . -1) (undo-tree-id5439 . -1) (undo-tree-id5441 . -1) (undo-tree-id5443 . -1) (undo-tree-id5445 . -1) (undo-tree-id5447 . -1) (undo-tree-id5449 . -1) (undo-tree-id5451 . -1) (undo-tree-id5453 . -1) (undo-tree-id5455 . -1) (undo-tree-id5457 . -1) (#("m" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68872) (undo-tree-id5459 . -1) (undo-tree-id5460 . -1) (undo-tree-id5462 . -1) (undo-tree-id5464 . -1) (undo-tree-id5466 . -1) (undo-tree-id5468 . -1) (undo-tree-id5470 . -1) (undo-tree-id5472 . -1) (undo-tree-id5474 . -1) (undo-tree-id5476 . -1) (undo-tree-id5478 . -1) (undo-tree-id5480 . -1) (undo-tree-id5482 . -1) (undo-tree-id5484 . -1) (undo-tree-id5486 . -1) (undo-tree-id5488 . -1) (undo-tree-id5490 . -1) (undo-tree-id5492 . -1) (undo-tree-id5494 . -1) (undo-tree-id5496 . -1) (undo-tree-id5498 . -1) (undo-tree-id5500 . -1) (undo-tree-id5502 . -1) (undo-tree-id5504 . -1) (undo-tree-id5506 . -1) (undo-tree-id5508 . -1) (undo-tree-id5510 . -1) (undo-tree-id5512 . -1) (undo-tree-id5514 . -1) (undo-tree-id5516 . -1) (undo-tree-id5518 . -1) (undo-tree-id5520 . -1) (undo-tree-id5522 . -1) (undo-tree-id5524 . -1) (undo-tree-id5526 . -1) (undo-tree-id5528 . -1) (undo-tree-id5530 . -1) (undo-tree-id5532 . -1) (undo-tree-id5534 . -1) (undo-tree-id5536 . -1) (undo-tree-id5538 . -1) (undo-tree-id5540 . -1) (undo-tree-id5542 . -1) (undo-tree-id5544 . -1) (undo-tree-id5546 . -1) (undo-tree-id5548 . -1) (undo-tree-id5550 . -1) (undo-tree-id5552 . -1) (undo-tree-id5554 . -1) (undo-tree-id5556 . -1) (undo-tree-id5558 . -1) (undo-tree-id5560 . -1) (undo-tree-id5562 . -1) (undo-tree-id5564 . -1) (undo-tree-id5566 . -1) (undo-tree-id5568 . -1) (undo-tree-id5570 . -1) (undo-tree-id5572 . -1) (#("-" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68873) (undo-tree-id5574 . -1) (undo-tree-id5575 . -1) (undo-tree-id5577 . -1) (undo-tree-id5579 . -1) (undo-tree-id5581 . -1) (undo-tree-id5583 . -1) (undo-tree-id5585 . -1) (undo-tree-id5587 . -1) (undo-tree-id5589 . -1) (undo-tree-id5591 . -1) (undo-tree-id5593 . -1) (undo-tree-id5595 . -1) (undo-tree-id5597 . -1) (undo-tree-id5599 . -1) (undo-tree-id5601 . -1) (undo-tree-id5603 . -1) (undo-tree-id5605 . -1) (undo-tree-id5607 . -1) (undo-tree-id5609 . -1) (undo-tree-id5611 . -1) (undo-tree-id5613 . -1) (undo-tree-id5615 . -1) (undo-tree-id5617 . -1) (undo-tree-id5619 . -1) (undo-tree-id5621 . -1) (undo-tree-id5623 . -1) (undo-tree-id5625 . -1) (undo-tree-id5627 . -1) (undo-tree-id5629 . -1) (undo-tree-id5631 . -1) (undo-tree-id5633 . -1) (undo-tree-id5635 . -1) (undo-tree-id5637 . -1) (undo-tree-id5639 . -1) (undo-tree-id5641 . -1) (undo-tree-id5643 . -1) (undo-tree-id5645 . -1) (undo-tree-id5647 . -1) (undo-tree-id5649 . -1) (undo-tree-id5651 . -1) (undo-tree-id5653 . -1) (undo-tree-id5655 . -1) (undo-tree-id5657 . -1) (undo-tree-id5659 . -1) (undo-tree-id5661 . -1) (undo-tree-id5663 . -1) (undo-tree-id5665 . -1) (undo-tree-id5667 . -1) (undo-tree-id5669 . -1) (undo-tree-id5671 . -1) (undo-tree-id5673 . -1) (undo-tree-id5675 . -1) (undo-tree-id5677 . -1) (undo-tree-id5679 . -1) (#("d" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68874) (undo-tree-id5681 . -1) (undo-tree-id5682 . -1) (undo-tree-id5684 . -1) (undo-tree-id5686 . -1) (undo-tree-id5688 . -1) (undo-tree-id5690 . -1) (undo-tree-id5692 . -1) (undo-tree-id5694 . -1) (undo-tree-id5696 . -1) (undo-tree-id5698 . -1) (undo-tree-id5700 . -1) (undo-tree-id5702 . -1) (undo-tree-id5704 . -1) (undo-tree-id5706 . -1) (undo-tree-id5708 . -1) (undo-tree-id5710 . -1) (undo-tree-id5712 . -1) (undo-tree-id5714 . -1) (undo-tree-id5716 . -1) (undo-tree-id5718 . -1) (undo-tree-id5720 . -1) (undo-tree-id5722 . -1) (undo-tree-id5724 . -1) (undo-tree-id5726 . -1) (undo-tree-id5728 . -1) (undo-tree-id5730 . -1) (undo-tree-id5732 . -1) (undo-tree-id5734 . -1) (undo-tree-id5736 . -1) (undo-tree-id5738 . -1) (undo-tree-id5740 . -1) (undo-tree-id5742 . -1) (undo-tree-id5744 . -1) (undo-tree-id5746 . -1) (undo-tree-id5748 . -1) (undo-tree-id5750 . -1) (undo-tree-id5752 . -1) (undo-tree-id5754 . -1) (undo-tree-id5756 . -1) (undo-tree-id5758 . -1) (undo-tree-id5760 . -1) (undo-tree-id5762 . -1) (undo-tree-id5764 . -1) (undo-tree-id5766 . -1) (undo-tree-id5768 . -1) (undo-tree-id5770 . -1) (undo-tree-id5772 . -1) (undo-tree-id5774 . -1) (undo-tree-id5776 . -1) (undo-tree-id5778 . -1) (#("i" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68875) (undo-tree-id5780 . -1) (undo-tree-id5781 . -1) (undo-tree-id5783 . -1) (undo-tree-id5785 . -1) (undo-tree-id5787 . -1) (undo-tree-id5789 . -1) (undo-tree-id5791 . -1) (undo-tree-id5793 . -1) (undo-tree-id5795 . -1) (undo-tree-id5797 . -1) (undo-tree-id5799 . -1) (undo-tree-id5801 . -1) (undo-tree-id5803 . -1) (undo-tree-id5805 . -1) (undo-tree-id5807 . -1) (undo-tree-id5809 . -1) (undo-tree-id5811 . -1) (undo-tree-id5813 . -1) (undo-tree-id5815 . -1) (undo-tree-id5817 . -1) (undo-tree-id5819 . -1) (undo-tree-id5821 . -1) (undo-tree-id5823 . -1) (undo-tree-id5825 . -1) (undo-tree-id5827 . -1) (undo-tree-id5829 . -1) (undo-tree-id5831 . -1) (undo-tree-id5833 . -1) (undo-tree-id5835 . -1) (undo-tree-id5837 . -1) (undo-tree-id5839 . -1) (undo-tree-id5841 . -1) (undo-tree-id5843 . -1) (undo-tree-id5845 . -1) (undo-tree-id5847 . -1) (undo-tree-id5849 . -1) (undo-tree-id5851 . -1) (undo-tree-id5853 . -1) (undo-tree-id5855 . -1) (undo-tree-id5857 . -1) (undo-tree-id5859 . -1) (undo-tree-id5861 . -1) (undo-tree-id5863 . -1) (undo-tree-id5865 . -1) (undo-tree-id5867 . -1) (undo-tree-id5869 . -1) (#("r" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68876) (undo-tree-id5871 . -1) (undo-tree-id5872 . -1) (undo-tree-id5874 . -1) (undo-tree-id5876 . -1) (undo-tree-id5878 . -1) (undo-tree-id5880 . -1) (undo-tree-id5882 . -1) (undo-tree-id5884 . -1) (undo-tree-id5886 . -1) (undo-tree-id5888 . -1) (undo-tree-id5890 . -1) (undo-tree-id5892 . -1) (undo-tree-id5894 . -1) (undo-tree-id5896 . -1) (undo-tree-id5898 . -1) (undo-tree-id5900 . -1) (undo-tree-id5902 . -1) (undo-tree-id5904 . -1) (undo-tree-id5906 . -1) (undo-tree-id5908 . -1) (undo-tree-id5910 . -1) (undo-tree-id5912 . -1) (undo-tree-id5914 . -1) (undo-tree-id5916 . -1) (undo-tree-id5918 . -1) (undo-tree-id5920 . -1) (undo-tree-id5922 . -1) (undo-tree-id5924 . -1) (undo-tree-id5926 . -1) (undo-tree-id5928 . -1) (undo-tree-id5930 . -1) (undo-tree-id5932 . -1) (undo-tree-id5934 . -1) (undo-tree-id5936 . -1) (undo-tree-id5938 . -1) (undo-tree-id5940 . -1) (undo-tree-id5942 . -1) (undo-tree-id5944 . -1) (undo-tree-id5946 . -1) (undo-tree-id5948 . -1) (undo-tree-id5950 . -1) (undo-tree-id5952 . -1) (#("e" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68877) (undo-tree-id5954 . -1) (undo-tree-id5955 . -1) (undo-tree-id5957 . -1) (undo-tree-id5959 . -1) (undo-tree-id5961 . -1) (undo-tree-id5963 . -1) (undo-tree-id5965 . -1) (undo-tree-id5967 . -1) (undo-tree-id5969 . -1) (undo-tree-id5971 . -1) (undo-tree-id5973 . -1) (undo-tree-id5975 . -1) (undo-tree-id5977 . -1) (undo-tree-id5979 . -1) (undo-tree-id5981 . -1) (undo-tree-id5983 . -1) (undo-tree-id5985 . -1) (undo-tree-id5987 . -1) (undo-tree-id5989 . -1) (undo-tree-id5991 . -1) (undo-tree-id5993 . -1) (undo-tree-id5995 . -1) (undo-tree-id5997 . -1) (undo-tree-id5999 . -1) (undo-tree-id6001 . -1) (undo-tree-id6003 . -1) (undo-tree-id6005 . -1) (undo-tree-id6007 . -1) (undo-tree-id6009 . -1) (undo-tree-id6011 . -1) (undo-tree-id6013 . -1) (undo-tree-id6015 . -1) (undo-tree-id6017 . -1) (undo-tree-id6019 . -1) (undo-tree-id6021 . -1) (undo-tree-id6023 . -1) (undo-tree-id6025 . -1) (undo-tree-id6027 . -1) (#("c" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68878) (undo-tree-id6029 . -1) (undo-tree-id6030 . -1) (undo-tree-id6032 . -1) (undo-tree-id6034 . -1) (undo-tree-id6036 . -1) (undo-tree-id6038 . -1) (undo-tree-id6040 . -1) (undo-tree-id6042 . -1) (undo-tree-id6044 . -1) (undo-tree-id6046 . -1) (undo-tree-id6048 . -1) (undo-tree-id6050 . -1) (undo-tree-id6052 . -1) (undo-tree-id6054 . -1) (undo-tree-id6056 . -1) (undo-tree-id6058 . -1) (undo-tree-id6060 . -1) (undo-tree-id6062 . -1) (undo-tree-id6064 . -1) (undo-tree-id6066 . -1) (undo-tree-id6068 . -1) (undo-tree-id6070 . -1) (undo-tree-id6072 . -1) (undo-tree-id6074 . -1) (undo-tree-id6076 . -1) (undo-tree-id6078 . -1) (undo-tree-id6080 . -1) (undo-tree-id6082 . -1) (undo-tree-id6084 . -1) (undo-tree-id6086 . -1) (undo-tree-id6088 . -1) (undo-tree-id6090 . -1) (undo-tree-id6092 . -1) (undo-tree-id6094 . -1) (#("t" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68879) (undo-tree-id6096 . -1) (undo-tree-id6097 . -1) (undo-tree-id6099 . -1) (undo-tree-id6101 . -1) (undo-tree-id6103 . -1) (undo-tree-id6105 . -1) (undo-tree-id6107 . -1) (undo-tree-id6109 . -1) (undo-tree-id6111 . -1) (undo-tree-id6113 . -1) (undo-tree-id6115 . -1) (undo-tree-id6117 . -1) (undo-tree-id6119 . -1) (undo-tree-id6121 . -1) (undo-tree-id6123 . -1) (undo-tree-id6125 . -1) (undo-tree-id6127 . -1) (undo-tree-id6129 . -1) (undo-tree-id6131 . -1) (undo-tree-id6133 . -1) (undo-tree-id6135 . -1) (undo-tree-id6137 . -1) (undo-tree-id6139 . -1) (undo-tree-id6141 . -1) (undo-tree-id6143 . -1) (undo-tree-id6145 . -1) (undo-tree-id6147 . -1) (undo-tree-id6149 . -1) (undo-tree-id6151 . -1) (undo-tree-id6153 . -1) (#("o" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68880) (undo-tree-id6155 . -1) (undo-tree-id6156 . -1) (undo-tree-id6158 . -1) (undo-tree-id6160 . -1) (undo-tree-id6162 . -1) (undo-tree-id6164 . -1) (undo-tree-id6166 . -1) (undo-tree-id6168 . -1) (undo-tree-id6170 . -1) (undo-tree-id6172 . -1) (undo-tree-id6174 . -1) (undo-tree-id6176 . -1) (undo-tree-id6178 . -1) (undo-tree-id6180 . -1) (undo-tree-id6182 . -1) (undo-tree-id6184 . -1) (undo-tree-id6186 . -1) (undo-tree-id6188 . -1) (undo-tree-id6190 . -1) (undo-tree-id6192 . -1) (undo-tree-id6194 . -1) (undo-tree-id6196 . -1) (undo-tree-id6198 . -1) (undo-tree-id6200 . -1) (undo-tree-id6202 . -1) (undo-tree-id6204 . -1) (#("r" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68881) (undo-tree-id6206 . -1) (undo-tree-id6207 . -1) (undo-tree-id6209 . -1) (undo-tree-id6211 . -1) (undo-tree-id6213 . -1) (undo-tree-id6215 . -1) (undo-tree-id6217 . -1) (undo-tree-id6219 . -1) (undo-tree-id6221 . -1) (undo-tree-id6223 . -1) (undo-tree-id6225 . -1) (undo-tree-id6227 . -1) (undo-tree-id6229 . -1) (undo-tree-id6231 . -1) (undo-tree-id6233 . -1) (undo-tree-id6235 . -1) (undo-tree-id6237 . -1) (undo-tree-id6239 . -1) (undo-tree-id6241 . -1) (undo-tree-id6243 . -1) (undo-tree-id6245 . -1) (undo-tree-id6247 . -1) (#("y" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68882) (undo-tree-id6249 . -1) (undo-tree-id6250 . -1) (undo-tree-id6252 . -1) (undo-tree-id6254 . -1) (undo-tree-id6256 . -1) (undo-tree-id6258 . -1) (undo-tree-id6260 . -1) (undo-tree-id6262 . -1) (undo-tree-id6264 . -1) (undo-tree-id6266 . -1) (undo-tree-id6268 . -1) (undo-tree-id6270 . -1) 68883 (t 25147 27719 117471 568000)) ((68856 . 68883) (68888 . 68889) (#("/" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 68858) (68858 . 68859) (#("~/" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1 2 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 68858) (#("org-" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1 2 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2 3 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 3 4 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 68860) (68863 . 68864) (#("_" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 68863) (#("roam/" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1 2 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2 3 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 3 4 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 4 5 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 68864)) (25147 27912 63994 956000) 0 nil])
([nil nil ((nil rear-nonsticky nil 72575 . 72576) (nil fontified nil 68992 . 72576) (68992 . 72576)) nil (25150 19470 663673 514000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68857) (undo-tree-id8120 . -1) (undo-tree-id8122 . -1) (undo-tree-id8124 . -1) (undo-tree-id8126 . -1) (undo-tree-id8128 . -1) (undo-tree-id8130 . -1) (undo-tree-id8132 . -1) (undo-tree-id8134 . -1) (undo-tree-id8136 . -1) (undo-tree-id8138 . -1) (undo-tree-id8140 . -1) (undo-tree-id8142 . -1) (undo-tree-id8144 . -1) (undo-tree-id8146 . -1) (undo-tree-id8148 . -1) (undo-tree-id8150 . -1) (undo-tree-id8152 . -1) (undo-tree-id8153 . -1) (undo-tree-id8155 . -1) (undo-tree-id8157 . -1) (undo-tree-id8159 . -1) (undo-tree-id8161 . -1) (undo-tree-id8163 . -1) (undo-tree-id8165 . -1) (undo-tree-id8167 . -1) (undo-tree-id8169 . -1) (undo-tree-id8171 . -1) (undo-tree-id8173 . -1) (undo-tree-id8174 . -1) (undo-tree-id8176 . -1) (undo-tree-id8178 . -1) (undo-tree-id8180 . -1) (undo-tree-id8182 . -1) (undo-tree-id8184 . -1) (undo-tree-id8186 . -1) (undo-tree-id8188 . -1) (undo-tree-id8190 . -1) (undo-tree-id8192 . -1) (undo-tree-id8194 . -1) (undo-tree-id8196 . -1) (undo-tree-id8198 . -1) (undo-tree-id8200 . -1) (undo-tree-id8202 . -1) (undo-tree-id8204 . -1) (undo-tree-id8206 . -1) (undo-tree-id8208 . -1) (undo-tree-id8210 . -1) (undo-tree-id8212 . -1) (undo-tree-id8214 . -1) (undo-tree-id8216 . -1) (undo-tree-id8218 . -1) (undo-tree-id8220 . -1) (undo-tree-id8222 . -1) (undo-tree-id8224 . -1) (undo-tree-id8226 . -1) (undo-tree-id8228 . -1) (undo-tree-id8230 . -1) (undo-tree-id8232 . -1) (undo-tree-id8234 . -1) (undo-tree-id8236 . -1) (undo-tree-id8238 . -1) (undo-tree-id8240 . -1) (undo-tree-id8242 . -1) (undo-tree-id8244 . -1) (undo-tree-id8246 . -1) (undo-tree-id8248 . -1) (undo-tree-id8250 . -1) (undo-tree-id8252 . -1) (undo-tree-id8254 . -1) (undo-tree-id8256 . -1) (undo-tree-id8258 . -1) (undo-tree-id8260 . -1) (undo-tree-id8262 . -1) (undo-tree-id8264 . -1) (undo-tree-id8266 . -1) (undo-tree-id8268 . -1) (undo-tree-id8270 . -1) (undo-tree-id8272 . -1) (undo-tree-id8274 . -1) (undo-tree-id8276 . -1) (undo-tree-id8278 . -1) (undo-tree-id8280 . -1) (undo-tree-id8282 . -1) (undo-tree-id8284 . -1) (undo-tree-id8286 . -1) (undo-tree-id8288 . -1) (undo-tree-id8290 . -1) (undo-tree-id8292 . -1) (undo-tree-id8294 . -1) (undo-tree-id8296 . -1) (undo-tree-id8298 . -1) (undo-tree-id8300 . -1) (undo-tree-id8302 . -1) (undo-tree-id8304 . -1) (undo-tree-id8306 . -1) (undo-tree-id8308 . -1) (undo-tree-id8310 . -1) (undo-tree-id8312 . -1) (undo-tree-id8314 . -1) (undo-tree-id8316 . -1) (undo-tree-id8318 . -1) (undo-tree-id8320 . -1) (undo-tree-id8322 . -1) (undo-tree-id8324 . -1) (undo-tree-id8326 . -1) (undo-tree-id8328 . -1) (undo-tree-id8330 . -1) (undo-tree-id8332 . -1) (undo-tree-id8334 . -1) (undo-tree-id8336 . -1) (undo-tree-id8338 . -1) (undo-tree-id8340 . -1) (undo-tree-id8342 . -1) (undo-tree-id8344 . -1) (undo-tree-id8346 . -1) (undo-tree-id8348 . -1) (undo-tree-id8350 . -1) (undo-tree-id8352 . -1) (undo-tree-id8354 . -1) (undo-tree-id8356 . -1) (undo-tree-id8358 . -1) (undo-tree-id8360 . -1) (undo-tree-id8362 . -1) (undo-tree-id8364 . -1) (undo-tree-id8366 . -1) (undo-tree-id8368 . -1) (undo-tree-id8370 . -1) (undo-tree-id8372 . -1) (undo-tree-id8374 . -1) (undo-tree-id8376 . -1) (undo-tree-id8378 . -1) (undo-tree-id8380 . -1) (undo-tree-id8382 . -1) (undo-tree-id8384 . -1) (undo-tree-id8386 . -1) (undo-tree-id8388 . -1) (undo-tree-id8390 . -1) (undo-tree-id8392 . -1) (undo-tree-id8394 . -1) (undo-tree-id8396 . -1) (undo-tree-id8398 . -1) (undo-tree-id8400 . -1) (undo-tree-id8402 . -1) (undo-tree-id8404 . -1) (undo-tree-id8406 . -1) (undo-tree-id8408 . -1) (undo-tree-id8410 . -1) (undo-tree-id8412 . -1) (undo-tree-id8414 . -1) (undo-tree-id8416 . -1) (undo-tree-id8418 . -1) (undo-tree-id8420 . -1) (undo-tree-id8422 . -1) (undo-tree-id8424 . -1) (undo-tree-id8426 . -1) (undo-tree-id8428 . -1) (undo-tree-id8430 . -1) (undo-tree-id8432 . -1) (undo-tree-id8434 . -1) (undo-tree-id8436 . -1) (undo-tree-id8438 . -1) (undo-tree-id8440 . -1) (undo-tree-id8442 . -1) (undo-tree-id8444 . -1) (undo-tree-id8446 . -1) (undo-tree-id8448 . -1) (undo-tree-id8450 . -1) (undo-tree-id8452 . -1) (undo-tree-id8454 . -1) (undo-tree-id8456 . -1) (undo-tree-id8458 . -1) (undo-tree-id8460 . -1) (undo-tree-id8462 . -1) (undo-tree-id8464 . -1) (undo-tree-id8466 . -1) (undo-tree-id8468 . -1) (undo-tree-id8470 . -1) (undo-tree-id8472 . -1) (undo-tree-id8474 . -1) (undo-tree-id8476 . -1) (undo-tree-id8478 . -1) (undo-tree-id8480 . -1) (undo-tree-id8482 . -1) (undo-tree-id8484 . -1) (undo-tree-id8486 . -1) (undo-tree-id8488 . -1) (#("\"" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 68858) (undo-tree-id8490 . 1) (undo-tree-id8492 . -1) (undo-tree-id8494 . -1) (undo-tree-id8496 . -1) (#("~" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68858) (undo-tree-id8499 . -1) (undo-tree-id8501 . -1) (undo-tree-id8503 . -1) (undo-tree-id8505 . -1) (undo-tree-id8507 . -1) (undo-tree-id8509 . -1) (undo-tree-id8511 . -1) (undo-tree-id8513 . -1) (undo-tree-id8515 . -1) (undo-tree-id8517 . -1) (undo-tree-id8519 . -1) (undo-tree-id8521 . -1) (undo-tree-id8523 . -1) (undo-tree-id8525 . -1) (undo-tree-id8527 . -1) (undo-tree-id8529 . -1) (undo-tree-id8531 . -1) (undo-tree-id8533 . -1) (undo-tree-id8535 . -1) (undo-tree-id8537 . -1) (undo-tree-id8538 . -1) (undo-tree-id8539 . -1) (undo-tree-id8541 . -1) (undo-tree-id8543 . -1) (undo-tree-id8545 . -1) (undo-tree-id8547 . -1) (undo-tree-id8549 . -1) (undo-tree-id8551 . -1) (undo-tree-id8553 . -1) (undo-tree-id8555 . -1) (undo-tree-id8557 . -1) (undo-tree-id8559 . -1) (undo-tree-id8561 . -1) (undo-tree-id8563 . -1) (undo-tree-id8565 . -1) (undo-tree-id8567 . -1) (undo-tree-id8569 . -1) (undo-tree-id8571 . -1) (undo-tree-id8573 . -1) (undo-tree-id8575 . -1) (undo-tree-id8577 . -1) (undo-tree-id8579 . -1) (undo-tree-id8581 . -1) (undo-tree-id8583 . -1) (undo-tree-id8585 . -1) (undo-tree-id8587 . -1) (undo-tree-id8589 . -1) (undo-tree-id8591 . -1) (undo-tree-id8593 . -1) (undo-tree-id8595 . -1) (undo-tree-id8597 . -1) (undo-tree-id8599 . -1) (undo-tree-id8601 . -1) (undo-tree-id8603 . -1) (undo-tree-id8605 . -1) (undo-tree-id8607 . -1) (undo-tree-id8609 . -1) (undo-tree-id8611 . -1) (undo-tree-id8613 . -1) (undo-tree-id8615 . -1) (undo-tree-id8617 . -1) (undo-tree-id8619 . -1) (undo-tree-id8621 . -1) (undo-tree-id8623 . -1) (undo-tree-id8625 . -1) (undo-tree-id8627 . -1) (undo-tree-id8629 . -1) (undo-tree-id8631 . -1) (undo-tree-id8633 . -1) (undo-tree-id8635 . -1) (undo-tree-id8637 . -1) (undo-tree-id8639 . -1) (undo-tree-id8641 . -1) (undo-tree-id8643 . -1) (undo-tree-id8645 . -1) (undo-tree-id8647 . -1) (undo-tree-id8649 . -1) (undo-tree-id8651 . -1) (undo-tree-id8653 . -1) (undo-tree-id8655 . -1) (undo-tree-id8657 . -1) (undo-tree-id8659 . -1) (undo-tree-id8661 . -1) (undo-tree-id8663 . -1) (undo-tree-id8665 . -1) (undo-tree-id8667 . -1) (undo-tree-id8669 . -1) (undo-tree-id8671 . -1) (undo-tree-id8673 . -1) (undo-tree-id8675 . -1) (undo-tree-id8677 . -1) (undo-tree-id8679 . -1) (undo-tree-id8681 . -1) (undo-tree-id8683 . -1) (undo-tree-id8685 . -1) (undo-tree-id8687 . -1) (undo-tree-id8689 . -1) (undo-tree-id8691 . -1) (undo-tree-id8693 . -1) (undo-tree-id8695 . -1) (undo-tree-id8697 . -1) (undo-tree-id8699 . -1) (undo-tree-id8701 . -1) (undo-tree-id8703 . -1) (undo-tree-id8705 . -1) (undo-tree-id8707 . -1) (undo-tree-id8709 . -1) (undo-tree-id8711 . -1) (undo-tree-id8713 . -1) (undo-tree-id8715 . -1) (undo-tree-id8717 . -1) (undo-tree-id8719 . -1) (undo-tree-id8721 . -1) (undo-tree-id8723 . -1) (undo-tree-id8725 . -1) (undo-tree-id8727 . -1) (undo-tree-id8729 . -1) (undo-tree-id8731 . -1) (undo-tree-id8733 . -1) (undo-tree-id8735 . -1) (undo-tree-id8737 . -1) (undo-tree-id8739 . -1) (undo-tree-id8741 . -1) (undo-tree-id8743 . -1) (undo-tree-id8745 . -1) (undo-tree-id8747 . -1) (undo-tree-id8749 . -1) (undo-tree-id8751 . -1) (undo-tree-id8753 . -1) (undo-tree-id8755 . -1) (undo-tree-id8757 . -1) (undo-tree-id8759 . -1) (undo-tree-id8761 . -1) (undo-tree-id8763 . -1) (undo-tree-id8765 . -1) (undo-tree-id8767 . -1) (undo-tree-id8769 . -1) (undo-tree-id8771 . -1) (undo-tree-id8773 . -1) (undo-tree-id8775 . -1) (undo-tree-id8777 . -1) (undo-tree-id8779 . -1) (undo-tree-id8781 . -1) (undo-tree-id8783 . -1) (undo-tree-id8785 . -1) (undo-tree-id8787 . -1) (undo-tree-id8789 . -1) (undo-tree-id8791 . -1) (undo-tree-id8793 . -1) (undo-tree-id8795 . -1) (undo-tree-id8797 . -1) (undo-tree-id8799 . -1) (undo-tree-id8801 . -1) (undo-tree-id8803 . -1) (undo-tree-id8805 . -1) (undo-tree-id8807 . -1) (undo-tree-id8809 . -1) (undo-tree-id8811 . -1) (undo-tree-id8813 . -1) (undo-tree-id8815 . -1) (undo-tree-id8817 . -1) (undo-tree-id8819 . -1) (undo-tree-id8821 . -1) (undo-tree-id8823 . -1) (undo-tree-id8825 . -1) (undo-tree-id8827 . -1) (undo-tree-id8829 . -1) (undo-tree-id8831 . -1) (undo-tree-id8833 . -1) (undo-tree-id8835 . -1) (undo-tree-id8837 . -1) (undo-tree-id8839 . -1) (undo-tree-id8841 . -1) (undo-tree-id8843 . -1) (undo-tree-id8845 . -1) (#("/" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68859) (undo-tree-id8848 . -1) (undo-tree-id8850 . -1) (undo-tree-id8852 . -1) (undo-tree-id8854 . -1) (undo-tree-id8856 . -1) (undo-tree-id8858 . -1) (undo-tree-id8860 . -1) (undo-tree-id8862 . -1) (undo-tree-id8864 . -1) (undo-tree-id8866 . -1) (undo-tree-id8868 . -1) (undo-tree-id8870 . -1) (undo-tree-id8872 . -1) (undo-tree-id8874 . -1) (undo-tree-id8876 . -1) (undo-tree-id8878 . -1) (undo-tree-id8880 . -1) (undo-tree-id8882 . -1) (undo-tree-id8884 . -1) (undo-tree-id8886 . -1) (undo-tree-id8887 . -1) (undo-tree-id8888 . -1) (undo-tree-id8890 . -1) (undo-tree-id8892 . -1) (undo-tree-id8894 . -1) (undo-tree-id8896 . -1) (undo-tree-id8898 . -1) (undo-tree-id8900 . -1) (undo-tree-id8902 . -1) (undo-tree-id8904 . -1) (undo-tree-id8906 . -1) (undo-tree-id8908 . -1) (undo-tree-id8910 . -1) (undo-tree-id8912 . -1) (undo-tree-id8914 . -1) (undo-tree-id8916 . -1) (undo-tree-id8918 . -1) (undo-tree-id8920 . -1) (undo-tree-id8922 . -1) (undo-tree-id8924 . -1) (undo-tree-id8926 . -1) (undo-tree-id8928 . -1) (undo-tree-id8930 . -1) (undo-tree-id8932 . -1) (undo-tree-id8934 . -1) (undo-tree-id8936 . -1) (undo-tree-id8938 . -1) (undo-tree-id8940 . -1) (undo-tree-id8942 . -1) (undo-tree-id8944 . -1) (undo-tree-id8946 . -1) (undo-tree-id8948 . -1) (undo-tree-id8950 . -1) (undo-tree-id8952 . -1) (undo-tree-id8954 . -1) (undo-tree-id8956 . -1) (undo-tree-id8958 . -1) (undo-tree-id8960 . -1) (undo-tree-id8962 . -1) (undo-tree-id8964 . -1) (undo-tree-id8966 . -1) (undo-tree-id8968 . -1) (undo-tree-id8970 . -1) (undo-tree-id8972 . -1) (undo-tree-id8974 . -1) (undo-tree-id8976 . -1) (undo-tree-id8978 . -1) (undo-tree-id8980 . -1) (undo-tree-id8982 . -1) (undo-tree-id8984 . -1) (undo-tree-id8986 . -1) (undo-tree-id8988 . -1) (undo-tree-id8990 . -1) (undo-tree-id8992 . -1) (undo-tree-id8994 . -1) (undo-tree-id8996 . -1) (undo-tree-id8998 . -1) (undo-tree-id9000 . -1) (undo-tree-id9002 . -1) (undo-tree-id9004 . -1) (undo-tree-id9006 . -1) (undo-tree-id9008 . -1) (undo-tree-id9010 . -1) (undo-tree-id9012 . -1) (undo-tree-id9014 . -1) (undo-tree-id9016 . -1) (undo-tree-id9018 . -1) (undo-tree-id9020 . -1) (undo-tree-id9022 . -1) (undo-tree-id9024 . -1) (undo-tree-id9026 . -1) (undo-tree-id9028 . -1) (undo-tree-id9030 . -1) (undo-tree-id9032 . -1) (undo-tree-id9034 . -1) (undo-tree-id9036 . -1) (undo-tree-id9038 . -1) (undo-tree-id9040 . -1) (undo-tree-id9042 . -1) (undo-tree-id9044 . -1) (undo-tree-id9046 . -1) (undo-tree-id9048 . -1) (undo-tree-id9050 . -1) (undo-tree-id9052 . -1) (undo-tree-id9054 . -1) (undo-tree-id9056 . -1) (undo-tree-id9058 . -1) (undo-tree-id9060 . -1) (undo-tree-id9062 . -1) (undo-tree-id9064 . -1) (undo-tree-id9066 . -1) (undo-tree-id9068 . -1) (undo-tree-id9070 . -1) (undo-tree-id9072 . -1) (undo-tree-id9074 . -1) (undo-tree-id9076 . -1) (undo-tree-id9078 . -1) (undo-tree-id9080 . -1) (undo-tree-id9082 . -1) (undo-tree-id9084 . -1) (undo-tree-id9086 . -1) (undo-tree-id9088 . -1) (undo-tree-id9090 . -1) (undo-tree-id9092 . -1) (undo-tree-id9094 . -1) (undo-tree-id9096 . -1) (undo-tree-id9098 . -1) (undo-tree-id9100 . -1) (undo-tree-id9102 . -1) (undo-tree-id9104 . -1) (undo-tree-id9106 . -1) (undo-tree-id9108 . -1) (undo-tree-id9110 . -1) (undo-tree-id9112 . -1) (undo-tree-id9114 . -1) (undo-tree-id9116 . -1) (undo-tree-id9118 . -1) (undo-tree-id9120 . -1) (undo-tree-id9122 . -1) (undo-tree-id9124 . -1) (undo-tree-id9126 . -1) (undo-tree-id9128 . -1) (undo-tree-id9130 . -1) (undo-tree-id9132 . -1) (undo-tree-id9134 . -1) (undo-tree-id9136 . -1) (undo-tree-id9138 . -1) (undo-tree-id9140 . -1) (undo-tree-id9142 . -1) (undo-tree-id9144 . -1) (undo-tree-id9146 . -1) (undo-tree-id9148 . -1) (undo-tree-id9150 . -1) (undo-tree-id9152 . -1) (undo-tree-id9154 . -1) (undo-tree-id9156 . -1) (undo-tree-id9158 . -1) (undo-tree-id9160 . -1) (undo-tree-id9162 . -1) (undo-tree-id9164 . -1) (undo-tree-id9166 . -1) (undo-tree-id9168 . -1) (undo-tree-id9170 . -1) (undo-tree-id9172 . -1) (undo-tree-id9174 . -1) (undo-tree-id9176 . -1) (undo-tree-id9178 . -1) (undo-tree-id9180 . -1) (undo-tree-id9182 . -1) (undo-tree-id9184 . -1) (undo-tree-id9186 . -1) (#("o" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68860) (undo-tree-id9189 . -1) (undo-tree-id9191 . -1) (undo-tree-id9193 . -1) (undo-tree-id9195 . -1) (undo-tree-id9197 . -1) (undo-tree-id9199 . -1) (undo-tree-id9201 . -1) (undo-tree-id9203 . -1) (undo-tree-id9205 . -1) (undo-tree-id9207 . -1) (undo-tree-id9209 . -1) (undo-tree-id9211 . -1) (undo-tree-id9213 . -1) (undo-tree-id9215 . -1) (undo-tree-id9217 . -1) (undo-tree-id9219 . -1) (undo-tree-id9221 . -1) (undo-tree-id9223 . -1) (undo-tree-id9225 . -1) (undo-tree-id9227 . -1) (undo-tree-id9228 . -1) (undo-tree-id9229 . -1) (undo-tree-id9231 . -1) (undo-tree-id9233 . -1) (undo-tree-id9235 . -1) (undo-tree-id9237 . -1) (undo-tree-id9239 . -1) (undo-tree-id9241 . -1) (undo-tree-id9243 . -1) (undo-tree-id9245 . -1) (undo-tree-id9247 . -1) (undo-tree-id9249 . -1) (undo-tree-id9251 . -1) (undo-tree-id9253 . -1) (undo-tree-id9255 . -1) (undo-tree-id9257 . -1) (undo-tree-id9259 . -1) (undo-tree-id9261 . -1) (undo-tree-id9263 . -1) (undo-tree-id9265 . -1) (undo-tree-id9267 . -1) (undo-tree-id9269 . -1) (undo-tree-id9271 . -1) (undo-tree-id9273 . -1) (undo-tree-id9275 . -1) (undo-tree-id9277 . -1) (undo-tree-id9279 . -1) (undo-tree-id9281 . -1) (undo-tree-id9283 . -1) (undo-tree-id9285 . -1) (undo-tree-id9287 . -1) (undo-tree-id9289 . -1) (undo-tree-id9291 . -1) (undo-tree-id9293 . -1) (undo-tree-id9295 . -1) (undo-tree-id9297 . -1) (undo-tree-id9299 . -1) (undo-tree-id9301 . -1) (undo-tree-id9303 . -1) (undo-tree-id9305 . -1) (undo-tree-id9307 . -1) (undo-tree-id9309 . -1) (undo-tree-id9311 . -1) (undo-tree-id9313 . -1) (undo-tree-id9315 . -1) (undo-tree-id9317 . -1) (undo-tree-id9319 . -1) (undo-tree-id9321 . -1) (undo-tree-id9323 . -1) (undo-tree-id9325 . -1) (undo-tree-id9327 . -1) (undo-tree-id9329 . -1) (undo-tree-id9331 . -1) (undo-tree-id9333 . -1) (undo-tree-id9335 . -1) (undo-tree-id9337 . -1) (undo-tree-id9339 . -1) (undo-tree-id9341 . -1) (undo-tree-id9343 . -1) (undo-tree-id9345 . -1) (undo-tree-id9347 . -1) (undo-tree-id9349 . -1) (undo-tree-id9351 . -1) (undo-tree-id9353 . -1) (undo-tree-id9355 . -1) (undo-tree-id9357 . -1) (undo-tree-id9359 . -1) (undo-tree-id9361 . -1) (undo-tree-id9363 . -1) (undo-tree-id9365 . -1) (undo-tree-id9367 . -1) (undo-tree-id9369 . -1) (undo-tree-id9371 . -1) (undo-tree-id9373 . -1) (undo-tree-id9375 . -1) (undo-tree-id9377 . -1) (undo-tree-id9379 . -1) (undo-tree-id9381 . -1) (undo-tree-id9383 . -1) (undo-tree-id9385 . -1) (undo-tree-id9387 . -1) (undo-tree-id9389 . -1) (undo-tree-id9391 . -1) (undo-tree-id9393 . -1) (undo-tree-id9395 . -1) (undo-tree-id9397 . -1) (undo-tree-id9399 . -1) (undo-tree-id9401 . -1) (undo-tree-id9403 . -1) (undo-tree-id9405 . -1) (undo-tree-id9407 . -1) (undo-tree-id9409 . -1) (undo-tree-id9411 . -1) (undo-tree-id9413 . -1) (undo-tree-id9415 . -1) (undo-tree-id9417 . -1) (undo-tree-id9419 . -1) (undo-tree-id9421 . -1) (undo-tree-id9423 . -1) (undo-tree-id9425 . -1) (undo-tree-id9427 . -1) (undo-tree-id9429 . -1) (undo-tree-id9431 . -1) (undo-tree-id9433 . -1) (undo-tree-id9435 . -1) (undo-tree-id9437 . -1) (undo-tree-id9439 . -1) (undo-tree-id9441 . -1) (undo-tree-id9443 . -1) (undo-tree-id9445 . -1) (undo-tree-id9447 . -1) (undo-tree-id9449 . -1) (undo-tree-id9451 . -1) (undo-tree-id9453 . -1) (undo-tree-id9455 . -1) (undo-tree-id9457 . -1) (undo-tree-id9459 . -1) (undo-tree-id9461 . -1) (undo-tree-id9463 . -1) (undo-tree-id9465 . -1) (undo-tree-id9467 . -1) (undo-tree-id9469 . -1) (undo-tree-id9471 . -1) (undo-tree-id9473 . -1) (undo-tree-id9475 . -1) (undo-tree-id9477 . -1) (undo-tree-id9479 . -1) (undo-tree-id9481 . -1) (undo-tree-id9483 . -1) (undo-tree-id9485 . -1) (undo-tree-id9487 . -1) (undo-tree-id9489 . -1) (undo-tree-id9491 . -1) (undo-tree-id9493 . -1) (undo-tree-id9495 . -1) (undo-tree-id9497 . -1) (undo-tree-id9499 . -1) (undo-tree-id9501 . -1) (undo-tree-id9503 . -1) (undo-tree-id9505 . -1) (undo-tree-id9507 . -1) (undo-tree-id9509 . -1) (undo-tree-id9511 . -1) (undo-tree-id9513 . -1) (undo-tree-id9515 . -1) (undo-tree-id9517 . -1) (undo-tree-id9519 . -1) (#("r" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68861) (undo-tree-id9522 . -1) (undo-tree-id9524 . -1) (undo-tree-id9526 . -1) (undo-tree-id9528 . -1) (undo-tree-id9530 . -1) (undo-tree-id9532 . -1) (undo-tree-id9534 . -1) (undo-tree-id9536 . -1) (undo-tree-id9538 . -1) (undo-tree-id9540 . -1) (undo-tree-id9542 . -1) (undo-tree-id9544 . -1) (undo-tree-id9546 . -1) (undo-tree-id9548 . -1) (undo-tree-id9550 . -1) (undo-tree-id9552 . -1) (undo-tree-id9554 . -1) (undo-tree-id9556 . -1) (undo-tree-id9558 . -1) (undo-tree-id9560 . -1) (undo-tree-id9561 . -1) (undo-tree-id9562 . -1) (undo-tree-id9564 . -1) (undo-tree-id9566 . -1) (undo-tree-id9568 . -1) (undo-tree-id9570 . -1) (undo-tree-id9572 . -1) (undo-tree-id9574 . -1) (undo-tree-id9576 . -1) (undo-tree-id9578 . -1) (undo-tree-id9580 . -1) (undo-tree-id9582 . -1) (undo-tree-id9584 . -1) (undo-tree-id9586 . -1) (undo-tree-id9588 . -1) (undo-tree-id9590 . -1) (undo-tree-id9592 . -1) (undo-tree-id9594 . -1) (undo-tree-id9596 . -1) (undo-tree-id9598 . -1) (undo-tree-id9600 . -1) (undo-tree-id9602 . -1) (undo-tree-id9604 . -1) (undo-tree-id9606 . -1) (undo-tree-id9608 . -1) (undo-tree-id9610 . -1) (undo-tree-id9612 . -1) (undo-tree-id9614 . -1) (undo-tree-id9616 . -1) (undo-tree-id9618 . -1) (undo-tree-id9620 . -1) (undo-tree-id9622 . -1) (undo-tree-id9624 . -1) (undo-tree-id9626 . -1) (undo-tree-id9628 . -1) (undo-tree-id9630 . -1) (undo-tree-id9632 . -1) (undo-tree-id9634 . -1) (undo-tree-id9636 . -1) (undo-tree-id9638 . -1) (undo-tree-id9640 . -1) (undo-tree-id9642 . -1) (undo-tree-id9644 . -1) (undo-tree-id9646 . -1) (undo-tree-id9648 . -1) (undo-tree-id9650 . -1) (undo-tree-id9652 . -1) (undo-tree-id9654 . -1) (undo-tree-id9656 . -1) (undo-tree-id9658 . -1) (undo-tree-id9660 . -1) (undo-tree-id9662 . -1) (undo-tree-id9664 . -1) (undo-tree-id9666 . -1) (undo-tree-id9668 . -1) (undo-tree-id9670 . -1) (undo-tree-id9672 . -1) (undo-tree-id9674 . -1) (undo-tree-id9676 . -1) (undo-tree-id9678 . -1) (undo-tree-id9680 . -1) (undo-tree-id9682 . -1) (undo-tree-id9684 . -1) (undo-tree-id9686 . -1) (undo-tree-id9688 . -1) (undo-tree-id9690 . -1) (undo-tree-id9692 . -1) (undo-tree-id9694 . -1) (undo-tree-id9696 . -1) (undo-tree-id9698 . -1) (undo-tree-id9700 . -1) (undo-tree-id9702 . -1) (undo-tree-id9704 . -1) (undo-tree-id9706 . -1) (undo-tree-id9708 . -1) (undo-tree-id9710 . -1) (undo-tree-id9712 . -1) (undo-tree-id9714 . -1) (undo-tree-id9716 . -1) (undo-tree-id9718 . -1) (undo-tree-id9720 . -1) (undo-tree-id9722 . -1) (undo-tree-id9724 . -1) (undo-tree-id9726 . -1) (undo-tree-id9728 . -1) (undo-tree-id9730 . -1) (undo-tree-id9732 . -1) (undo-tree-id9734 . -1) (undo-tree-id9736 . -1) (undo-tree-id9738 . -1) (undo-tree-id9740 . -1) (undo-tree-id9742 . -1) (undo-tree-id9744 . -1) (undo-tree-id9746 . -1) (undo-tree-id9748 . -1) (undo-tree-id9750 . -1) (undo-tree-id9752 . -1) (undo-tree-id9754 . -1) (undo-tree-id9756 . -1) (undo-tree-id9758 . -1) (undo-tree-id9760 . -1) (undo-tree-id9762 . -1) (undo-tree-id9764 . -1) (undo-tree-id9766 . -1) (undo-tree-id9768 . -1) (undo-tree-id9770 . -1) (undo-tree-id9772 . -1) (undo-tree-id9774 . -1) (undo-tree-id9776 . -1) (undo-tree-id9778 . -1) (undo-tree-id9780 . -1) (undo-tree-id9782 . -1) (undo-tree-id9784 . -1) (undo-tree-id9786 . -1) (undo-tree-id9788 . -1) (undo-tree-id9790 . -1) (undo-tree-id9792 . -1) (undo-tree-id9794 . -1) (undo-tree-id9796 . -1) (undo-tree-id9798 . -1) (undo-tree-id9800 . -1) (undo-tree-id9802 . -1) (undo-tree-id9804 . -1) (undo-tree-id9806 . -1) (undo-tree-id9808 . -1) (undo-tree-id9810 . -1) (undo-tree-id9812 . -1) (undo-tree-id9814 . -1) (undo-tree-id9816 . -1) (undo-tree-id9818 . -1) (undo-tree-id9820 . -1) (undo-tree-id9822 . -1) (undo-tree-id9824 . -1) (undo-tree-id9826 . -1) (undo-tree-id9828 . -1) (undo-tree-id9830 . -1) (undo-tree-id9832 . -1) (undo-tree-id9834 . -1) (undo-tree-id9836 . -1) (undo-tree-id9838 . -1) (undo-tree-id9840 . -1) (undo-tree-id9842 . -1) (undo-tree-id9844 . -1) (#("g" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68862) (undo-tree-id9847 . -1) (undo-tree-id9849 . -1) (undo-tree-id9851 . -1) (undo-tree-id9853 . -1) (undo-tree-id9855 . -1) (undo-tree-id9857 . -1) (undo-tree-id9859 . -1) (undo-tree-id9861 . -1) (undo-tree-id9863 . -1) (undo-tree-id9865 . -1) (undo-tree-id9867 . -1) (undo-tree-id9869 . -1) (undo-tree-id9871 . -1) (undo-tree-id9873 . -1) (undo-tree-id9875 . -1) (undo-tree-id9877 . -1) (undo-tree-id9879 . -1) (undo-tree-id9881 . -1) (undo-tree-id9883 . -1) (undo-tree-id9885 . -1) (undo-tree-id9886 . -1) (undo-tree-id9887 . -1) (undo-tree-id9889 . -1) (undo-tree-id9891 . -1) (undo-tree-id9893 . -1) (undo-tree-id9895 . -1) (undo-tree-id9897 . -1) (undo-tree-id9899 . -1) (undo-tree-id9901 . -1) (undo-tree-id9903 . -1) (undo-tree-id9905 . -1) (undo-tree-id9907 . -1) (undo-tree-id9909 . -1) (undo-tree-id9911 . -1) (undo-tree-id9913 . -1) (undo-tree-id9915 . -1) (undo-tree-id9917 . -1) (undo-tree-id9919 . -1) (undo-tree-id9921 . -1) (undo-tree-id9923 . -1) (undo-tree-id9925 . -1) (undo-tree-id9927 . -1) (undo-tree-id9929 . -1) (undo-tree-id9931 . -1) (undo-tree-id9933 . -1) (undo-tree-id9935 . -1) (undo-tree-id9937 . -1) (undo-tree-id9939 . -1) (undo-tree-id9941 . -1) (undo-tree-id9943 . -1) (undo-tree-id9945 . -1) (undo-tree-id9947 . -1) (undo-tree-id9949 . -1) (undo-tree-id9951 . -1) (undo-tree-id9953 . -1) (undo-tree-id9955 . -1) (undo-tree-id9957 . -1) (undo-tree-id9959 . -1) (undo-tree-id9961 . -1) (undo-tree-id9963 . -1) (undo-tree-id9965 . -1) (undo-tree-id9967 . -1) (undo-tree-id9969 . -1) (undo-tree-id9971 . -1) (undo-tree-id9973 . -1) (undo-tree-id9975 . -1) (undo-tree-id9977 . -1) (undo-tree-id9979 . -1) (undo-tree-id9981 . -1) (undo-tree-id9983 . -1) (undo-tree-id9985 . -1) (undo-tree-id9987 . -1) (undo-tree-id9989 . -1) (undo-tree-id9991 . -1) (undo-tree-id9993 . -1) (undo-tree-id9995 . -1) (undo-tree-id9997 . -1) (undo-tree-id9999 . -1) (undo-tree-id10001 . -1) (undo-tree-id10003 . -1) (undo-tree-id10005 . -1) (undo-tree-id10007 . -1) (undo-tree-id10009 . -1) (undo-tree-id10011 . -1) (undo-tree-id10013 . -1) (undo-tree-id10015 . -1) (undo-tree-id10017 . -1) (undo-tree-id10019 . -1) (undo-tree-id10021 . -1) (undo-tree-id10023 . -1) (undo-tree-id10025 . -1) (undo-tree-id10027 . -1) (undo-tree-id10029 . -1) (undo-tree-id10031 . -1) (undo-tree-id10033 . -1) (undo-tree-id10035 . -1) (undo-tree-id10037 . -1) (undo-tree-id10039 . -1) (undo-tree-id10041 . -1) (undo-tree-id10043 . -1) (undo-tree-id10045 . -1) (undo-tree-id10047 . -1) (undo-tree-id10049 . -1) (undo-tree-id10051 . -1) (undo-tree-id10053 . -1) (undo-tree-id10055 . -1) (undo-tree-id10057 . -1) (undo-tree-id10059 . -1) (undo-tree-id10061 . -1) (undo-tree-id10063 . -1) (undo-tree-id10065 . -1) (undo-tree-id10067 . -1) (undo-tree-id10069 . -1) (undo-tree-id10071 . -1) (undo-tree-id10073 . -1) (undo-tree-id10075 . -1) (undo-tree-id10077 . -1) (undo-tree-id10079 . -1) (undo-tree-id10081 . -1) (undo-tree-id10083 . -1) (undo-tree-id10085 . -1) (undo-tree-id10087 . -1) (undo-tree-id10089 . -1) (undo-tree-id10091 . -1) (undo-tree-id10093 . -1) (undo-tree-id10095 . -1) (undo-tree-id10097 . -1) (undo-tree-id10099 . -1) (undo-tree-id10101 . -1) (undo-tree-id10103 . -1) (undo-tree-id10105 . -1) (undo-tree-id10107 . -1) (undo-tree-id10109 . -1) (undo-tree-id10111 . -1) (undo-tree-id10113 . -1) (undo-tree-id10115 . -1) (undo-tree-id10117 . -1) (undo-tree-id10119 . -1) (undo-tree-id10121 . -1) (undo-tree-id10123 . -1) (undo-tree-id10125 . -1) (undo-tree-id10127 . -1) (undo-tree-id10129 . -1) (undo-tree-id10131 . -1) (undo-tree-id10133 . -1) (undo-tree-id10135 . -1) (undo-tree-id10137 . -1) (undo-tree-id10139 . -1) (undo-tree-id10141 . -1) (undo-tree-id10143 . -1) (undo-tree-id10145 . -1) (undo-tree-id10147 . -1) (undo-tree-id10149 . -1) (undo-tree-id10151 . -1) (undo-tree-id10153 . -1) (undo-tree-id10155 . -1) (undo-tree-id10157 . -1) (undo-tree-id10159 . -1) (undo-tree-id10161 . -1) (#("_" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68863) (undo-tree-id10163 . -1) (undo-tree-id10165 . -1) (undo-tree-id10167 . -1) (undo-tree-id10169 . -1) (undo-tree-id10171 . -1) (undo-tree-id10173 . -1) (undo-tree-id10175 . -1) (undo-tree-id10176 . -1) (undo-tree-id10177 . -1) (undo-tree-id10179 . -1) (undo-tree-id10181 . -1) (undo-tree-id10183 . -1) (undo-tree-id10185 . -1) (undo-tree-id10187 . -1) (undo-tree-id10189 . -1) (undo-tree-id10191 . -1) (undo-tree-id10193 . -1) (undo-tree-id10195 . -1) (undo-tree-id10197 . -1) (undo-tree-id10199 . -1) (undo-tree-id10201 . -1) (undo-tree-id10203 . -1) (undo-tree-id10205 . -1) (undo-tree-id10207 . -1) (undo-tree-id10209 . -1) (undo-tree-id10211 . -1) (undo-tree-id10213 . -1) (undo-tree-id10215 . -1) (undo-tree-id10217 . -1) (undo-tree-id10219 . -1) (undo-tree-id10221 . -1) (undo-tree-id10223 . -1) (undo-tree-id10225 . -1) (undo-tree-id10227 . -1) (undo-tree-id10229 . -1) (undo-tree-id10231 . -1) (undo-tree-id10233 . -1) (undo-tree-id10235 . -1) (undo-tree-id10237 . -1) (undo-tree-id10239 . -1) (undo-tree-id10241 . -1) (undo-tree-id10243 . -1) (undo-tree-id10245 . -1) (undo-tree-id10247 . -1) (undo-tree-id10249 . -1) (undo-tree-id10251 . -1) (undo-tree-id10253 . -1) (undo-tree-id10255 . -1) (undo-tree-id10257 . -1) (undo-tree-id10259 . -1) (undo-tree-id10261 . -1) (undo-tree-id10263 . -1) (undo-tree-id10265 . -1) (undo-tree-id10267 . -1) (undo-tree-id10269 . -1) (undo-tree-id10271 . -1) (undo-tree-id10273 . -1) (undo-tree-id10275 . -1) (undo-tree-id10277 . -1) (undo-tree-id10279 . -1) (undo-tree-id10281 . -1) (undo-tree-id10283 . -1) (undo-tree-id10285 . -1) (undo-tree-id10287 . -1) (undo-tree-id10289 . -1) (undo-tree-id10291 . -1) (undo-tree-id10293 . -1) (undo-tree-id10295 . -1) (undo-tree-id10297 . -1) (undo-tree-id10299 . -1) (undo-tree-id10301 . -1) (undo-tree-id10303 . -1) (undo-tree-id10305 . -1) (undo-tree-id10307 . -1) (undo-tree-id10309 . -1) (undo-tree-id10311 . -1) (undo-tree-id10313 . -1) (undo-tree-id10315 . -1) (undo-tree-id10317 . -1) (undo-tree-id10319 . -1) (undo-tree-id10321 . -1) (undo-tree-id10323 . -1) (undo-tree-id10325 . -1) (undo-tree-id10327 . -1) (undo-tree-id10329 . -1) (undo-tree-id10331 . -1) (undo-tree-id10333 . -1) (undo-tree-id10335 . -1) (undo-tree-id10337 . -1) (undo-tree-id10339 . -1) (undo-tree-id10341 . -1) (undo-tree-id10343 . -1) (undo-tree-id10345 . -1) (undo-tree-id10347 . -1) (undo-tree-id10349 . -1) (undo-tree-id10351 . -1) (undo-tree-id10353 . -1) (undo-tree-id10355 . -1) (undo-tree-id10357 . -1) (undo-tree-id10359 . -1) (undo-tree-id10361 . -1) (undo-tree-id10363 . -1) (undo-tree-id10365 . -1) (undo-tree-id10367 . -1) (undo-tree-id10369 . -1) (undo-tree-id10371 . -1) (undo-tree-id10373 . -1) (undo-tree-id10375 . -1) (undo-tree-id10377 . -1) (undo-tree-id10379 . -1) (undo-tree-id10381 . -1) (undo-tree-id10383 . -1) (undo-tree-id10385 . -1) (undo-tree-id10387 . -1) (undo-tree-id10389 . -1) (undo-tree-id10391 . -1) (undo-tree-id10393 . -1) (undo-tree-id10395 . -1) (undo-tree-id10397 . -1) (undo-tree-id10399 . -1) (undo-tree-id10401 . -1) (undo-tree-id10403 . -1) (undo-tree-id10405 . -1) (undo-tree-id10407 . -1) (undo-tree-id10409 . -1) (undo-tree-id10411 . -1) (undo-tree-id10413 . -1) (undo-tree-id10415 . -1) (undo-tree-id10417 . -1) (undo-tree-id10419 . -1) (undo-tree-id10421 . -1) (undo-tree-id10423 . -1) (undo-tree-id10425 . -1) (undo-tree-id10427 . -1) (undo-tree-id10429 . -1) (undo-tree-id10431 . -1) (undo-tree-id10433 . -1) (undo-tree-id10435 . -1) (undo-tree-id10437 . -1) (undo-tree-id10439 . -1) (undo-tree-id10441 . -1) (undo-tree-id10443 . -1) (#("r" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68864) (undo-tree-id10445 . -1) (undo-tree-id10447 . -1) (undo-tree-id10449 . -1) (undo-tree-id10451 . -1) (undo-tree-id10453 . -1) (undo-tree-id10455 . -1) (undo-tree-id10457 . -1) (undo-tree-id10458 . -1) (undo-tree-id10459 . -1) (undo-tree-id10461 . -1) (undo-tree-id10463 . -1) (undo-tree-id10465 . -1) (undo-tree-id10467 . -1) (undo-tree-id10469 . -1) (undo-tree-id10471 . -1) (undo-tree-id10473 . -1) (undo-tree-id10475 . -1) (undo-tree-id10477 . -1) (undo-tree-id10479 . -1) (undo-tree-id10481 . -1) (undo-tree-id10483 . -1) (undo-tree-id10485 . -1) (undo-tree-id10487 . -1) (undo-tree-id10489 . -1) (undo-tree-id10491 . -1) (undo-tree-id10493 . -1) (undo-tree-id10495 . -1) (undo-tree-id10497 . -1) (undo-tree-id10499 . -1) (undo-tree-id10501 . -1) (undo-tree-id10503 . -1) (undo-tree-id10505 . -1) (undo-tree-id10507 . -1) (undo-tree-id10509 . -1) (undo-tree-id10511 . -1) (undo-tree-id10513 . -1) (undo-tree-id10515 . -1) (undo-tree-id10517 . -1) (undo-tree-id10519 . -1) (undo-tree-id10521 . -1) (undo-tree-id10523 . -1) (undo-tree-id10525 . -1) (undo-tree-id10527 . -1) (undo-tree-id10529 . -1) (undo-tree-id10531 . -1) (undo-tree-id10533 . -1) (undo-tree-id10535 . -1) (undo-tree-id10537 . -1) (undo-tree-id10539 . -1) (undo-tree-id10541 . -1) (undo-tree-id10543 . -1) (undo-tree-id10545 . -1) (undo-tree-id10547 . -1) (undo-tree-id10549 . -1) (undo-tree-id10551 . -1) (undo-tree-id10553 . -1) (undo-tree-id10555 . -1) (undo-tree-id10557 . -1) (undo-tree-id10559 . -1) (undo-tree-id10561 . -1) (undo-tree-id10563 . -1) (undo-tree-id10565 . -1) (undo-tree-id10567 . -1) (undo-tree-id10569 . -1) (undo-tree-id10571 . -1) (undo-tree-id10573 . -1) (undo-tree-id10575 . -1) (undo-tree-id10577 . -1) (undo-tree-id10579 . -1) (undo-tree-id10581 . -1) (undo-tree-id10583 . -1) (undo-tree-id10585 . -1) (undo-tree-id10587 . -1) (undo-tree-id10589 . -1) (undo-tree-id10591 . -1) (undo-tree-id10593 . -1) (undo-tree-id10595 . -1) (undo-tree-id10597 . -1) (undo-tree-id10599 . -1) (undo-tree-id10601 . -1) (undo-tree-id10603 . -1) (undo-tree-id10605 . -1) (undo-tree-id10607 . -1) (undo-tree-id10609 . -1) (undo-tree-id10611 . -1) (undo-tree-id10613 . -1) (undo-tree-id10615 . -1) (undo-tree-id10617 . -1) (undo-tree-id10619 . -1) (undo-tree-id10621 . -1) (undo-tree-id10623 . -1) (undo-tree-id10625 . -1) (undo-tree-id10627 . -1) (undo-tree-id10629 . -1) (undo-tree-id10631 . -1) (undo-tree-id10633 . -1) (undo-tree-id10635 . -1) (undo-tree-id10637 . -1) (undo-tree-id10639 . -1) (undo-tree-id10641 . -1) (undo-tree-id10643 . -1) (undo-tree-id10645 . -1) (undo-tree-id10647 . -1) (undo-tree-id10649 . -1) (undo-tree-id10651 . -1) (undo-tree-id10653 . -1) (undo-tree-id10655 . -1) (undo-tree-id10657 . -1) (undo-tree-id10659 . -1) (undo-tree-id10661 . -1) (undo-tree-id10663 . -1) (undo-tree-id10665 . -1) (undo-tree-id10667 . -1) (undo-tree-id10669 . -1) (undo-tree-id10671 . -1) (undo-tree-id10673 . -1) (undo-tree-id10675 . -1) (undo-tree-id10677 . -1) (undo-tree-id10679 . -1) (undo-tree-id10681 . -1) (undo-tree-id10683 . -1) (undo-tree-id10685 . -1) (undo-tree-id10687 . -1) (undo-tree-id10689 . -1) (undo-tree-id10691 . -1) (undo-tree-id10693 . -1) (undo-tree-id10695 . -1) (undo-tree-id10697 . -1) (undo-tree-id10699 . -1) (undo-tree-id10701 . -1) (undo-tree-id10703 . -1) (undo-tree-id10705 . -1) (undo-tree-id10707 . -1) (undo-tree-id10709 . -1) (undo-tree-id10711 . -1) (undo-tree-id10713 . -1) (undo-tree-id10715 . -1) (undo-tree-id10717 . -1) (#("o" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68865) (undo-tree-id10719 . -1) (undo-tree-id10721 . -1) (undo-tree-id10723 . -1) (undo-tree-id10725 . -1) (undo-tree-id10727 . -1) (undo-tree-id10729 . -1) (undo-tree-id10731 . -1) (undo-tree-id10732 . -1) (undo-tree-id10733 . -1) (undo-tree-id10735 . -1) (undo-tree-id10737 . -1) (undo-tree-id10739 . -1) (undo-tree-id10741 . -1) (undo-tree-id10743 . -1) (undo-tree-id10745 . -1) (undo-tree-id10747 . -1) (undo-tree-id10749 . -1) (undo-tree-id10751 . -1) (undo-tree-id10753 . -1) (undo-tree-id10755 . -1) (undo-tree-id10757 . -1) (undo-tree-id10759 . -1) (undo-tree-id10761 . -1) (undo-tree-id10763 . -1) (undo-tree-id10765 . -1) (undo-tree-id10767 . -1) (undo-tree-id10769 . -1) (undo-tree-id10771 . -1) (undo-tree-id10773 . -1) (undo-tree-id10775 . -1) (undo-tree-id10777 . -1) (undo-tree-id10779 . -1) (undo-tree-id10781 . -1) (undo-tree-id10783 . -1) (undo-tree-id10785 . -1) (undo-tree-id10787 . -1) (undo-tree-id10789 . -1) (undo-tree-id10791 . -1) (undo-tree-id10793 . -1) (undo-tree-id10795 . -1) (undo-tree-id10797 . -1) (undo-tree-id10799 . -1) (undo-tree-id10801 . -1) (undo-tree-id10803 . -1) (undo-tree-id10805 . -1) (undo-tree-id10807 . -1) (undo-tree-id10809 . -1) (undo-tree-id10811 . -1) (undo-tree-id10813 . -1) (undo-tree-id10815 . -1) (undo-tree-id10817 . -1) (undo-tree-id10819 . -1) (undo-tree-id10821 . -1) (undo-tree-id10823 . -1) (undo-tree-id10825 . -1) (undo-tree-id10827 . -1) (undo-tree-id10829 . -1) (undo-tree-id10831 . -1) (undo-tree-id10833 . -1) (undo-tree-id10835 . -1) (undo-tree-id10837 . -1) (undo-tree-id10839 . -1) (undo-tree-id10841 . -1) (undo-tree-id10843 . -1) (undo-tree-id10845 . -1) (undo-tree-id10847 . -1) (undo-tree-id10849 . -1) (undo-tree-id10851 . -1) (undo-tree-id10853 . -1) (undo-tree-id10855 . -1) (undo-tree-id10857 . -1) (undo-tree-id10859 . -1) (undo-tree-id10861 . -1) (undo-tree-id10863 . -1) (undo-tree-id10865 . -1) (undo-tree-id10867 . -1) (undo-tree-id10869 . -1) (undo-tree-id10871 . -1) (undo-tree-id10873 . -1) (undo-tree-id10875 . -1) (undo-tree-id10877 . -1) (undo-tree-id10879 . -1) (undo-tree-id10881 . -1) (undo-tree-id10883 . -1) (undo-tree-id10885 . -1) (undo-tree-id10887 . -1) (undo-tree-id10889 . -1) (undo-tree-id10891 . -1) (undo-tree-id10893 . -1) (undo-tree-id10895 . -1) (undo-tree-id10897 . -1) (undo-tree-id10899 . -1) (undo-tree-id10901 . -1) (undo-tree-id10903 . -1) (undo-tree-id10905 . -1) (undo-tree-id10907 . -1) (undo-tree-id10909 . -1) (undo-tree-id10911 . -1) (undo-tree-id10913 . -1) (undo-tree-id10915 . -1) (undo-tree-id10917 . -1) (undo-tree-id10919 . -1) (undo-tree-id10921 . -1) (undo-tree-id10923 . -1) (undo-tree-id10925 . -1) (undo-tree-id10927 . -1) (undo-tree-id10929 . -1) (undo-tree-id10931 . -1) (undo-tree-id10933 . -1) (undo-tree-id10935 . -1) (undo-tree-id10937 . -1) (undo-tree-id10939 . -1) (undo-tree-id10941 . -1) (undo-tree-id10943 . -1) (undo-tree-id10945 . -1) (undo-tree-id10947 . -1) (undo-tree-id10949 . -1) (undo-tree-id10951 . -1) (undo-tree-id10953 . -1) (undo-tree-id10955 . -1) (undo-tree-id10957 . -1) (undo-tree-id10959 . -1) (undo-tree-id10961 . -1) (undo-tree-id10963 . -1) (undo-tree-id10965 . -1) (undo-tree-id10967 . -1) (undo-tree-id10969 . -1) (undo-tree-id10971 . -1) (undo-tree-id10973 . -1) (undo-tree-id10975 . -1) (undo-tree-id10977 . -1) (undo-tree-id10979 . -1) (undo-tree-id10981 . -1) (undo-tree-id10983 . -1) (#("a" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68866) (undo-tree-id10985 . -1) (undo-tree-id10987 . -1) (undo-tree-id10989 . -1) (undo-tree-id10991 . -1) (undo-tree-id10993 . -1) (undo-tree-id10995 . -1) (undo-tree-id10997 . -1) (undo-tree-id10998 . -1) (undo-tree-id10999 . -1) (undo-tree-id11001 . -1) (undo-tree-id11003 . -1) (undo-tree-id11005 . -1) (undo-tree-id11007 . -1) (undo-tree-id11009 . -1) (undo-tree-id11011 . -1) (undo-tree-id11013 . -1) (undo-tree-id11015 . -1) (undo-tree-id11017 . -1) (undo-tree-id11019 . -1) (undo-tree-id11021 . -1) (undo-tree-id11023 . -1) (undo-tree-id11025 . -1) (undo-tree-id11027 . -1) (undo-tree-id11029 . -1) (undo-tree-id11031 . -1) (undo-tree-id11033 . -1) (undo-tree-id11035 . -1) (undo-tree-id11037 . -1) (undo-tree-id11039 . -1) (undo-tree-id11041 . -1) (undo-tree-id11043 . -1) (undo-tree-id11045 . -1) (undo-tree-id11047 . -1) (undo-tree-id11049 . -1) (undo-tree-id11051 . -1) (undo-tree-id11053 . -1) (undo-tree-id11055 . -1) (undo-tree-id11057 . -1) (undo-tree-id11059 . -1) (undo-tree-id11061 . -1) (undo-tree-id11063 . -1) (undo-tree-id11065 . -1) (undo-tree-id11067 . -1) (undo-tree-id11069 . -1) (undo-tree-id11071 . -1) (undo-tree-id11073 . -1) (undo-tree-id11075 . -1) (undo-tree-id11077 . -1) (undo-tree-id11079 . -1) (undo-tree-id11081 . -1) (undo-tree-id11083 . -1) (undo-tree-id11085 . -1) (undo-tree-id11087 . -1) (undo-tree-id11089 . -1) (undo-tree-id11091 . -1) (undo-tree-id11093 . -1) (undo-tree-id11095 . -1) (undo-tree-id11097 . -1) (undo-tree-id11099 . -1) (undo-tree-id11101 . -1) (undo-tree-id11103 . -1) (undo-tree-id11105 . -1) (undo-tree-id11107 . -1) (undo-tree-id11109 . -1) (undo-tree-id11111 . -1) (undo-tree-id11113 . -1) (undo-tree-id11115 . -1) (undo-tree-id11117 . -1) (undo-tree-id11119 . -1) (undo-tree-id11121 . -1) (undo-tree-id11123 . -1) (undo-tree-id11125 . -1) (undo-tree-id11127 . -1) (undo-tree-id11129 . -1) (undo-tree-id11131 . -1) (undo-tree-id11133 . -1) (undo-tree-id11135 . -1) (undo-tree-id11137 . -1) (undo-tree-id11139 . -1) (undo-tree-id11141 . -1) (undo-tree-id11143 . -1) (undo-tree-id11145 . -1) (undo-tree-id11147 . -1) (undo-tree-id11149 . -1) (undo-tree-id11151 . -1) (undo-tree-id11153 . -1) (undo-tree-id11155 . -1) (undo-tree-id11157 . -1) (undo-tree-id11159 . -1) (undo-tree-id11161 . -1) (undo-tree-id11163 . -1) (undo-tree-id11165 . -1) (undo-tree-id11167 . -1) (undo-tree-id11169 . -1) (undo-tree-id11171 . -1) (undo-tree-id11173 . -1) (undo-tree-id11175 . -1) (undo-tree-id11177 . -1) (undo-tree-id11179 . -1) (undo-tree-id11181 . -1) (undo-tree-id11183 . -1) (undo-tree-id11185 . -1) (undo-tree-id11187 . -1) (undo-tree-id11189 . -1) (undo-tree-id11191 . -1) (undo-tree-id11193 . -1) (undo-tree-id11195 . -1) (undo-tree-id11197 . -1) (undo-tree-id11199 . -1) (undo-tree-id11201 . -1) (undo-tree-id11203 . -1) (undo-tree-id11205 . -1) (undo-tree-id11207 . -1) (undo-tree-id11209 . -1) (undo-tree-id11211 . -1) (undo-tree-id11213 . -1) (undo-tree-id11215 . -1) (undo-tree-id11217 . -1) (undo-tree-id11219 . -1) (undo-tree-id11221 . -1) (undo-tree-id11223 . -1) (undo-tree-id11225 . -1) (undo-tree-id11227 . -1) (undo-tree-id11229 . -1) (undo-tree-id11231 . -1) (undo-tree-id11233 . -1) (undo-tree-id11235 . -1) (undo-tree-id11237 . -1) (undo-tree-id11239 . -1) (undo-tree-id11241 . -1) (#("m" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68867) (undo-tree-id11243 . -1) (undo-tree-id11245 . -1) (undo-tree-id11247 . -1) (undo-tree-id11249 . -1) (undo-tree-id11251 . -1) (undo-tree-id11253 . -1) (undo-tree-id11255 . -1) (undo-tree-id11256 . -1) (undo-tree-id11257 . -1) (undo-tree-id11259 . -1) (undo-tree-id11261 . -1) (undo-tree-id11263 . -1) (undo-tree-id11265 . -1) (undo-tree-id11267 . -1) (undo-tree-id11269 . -1) (undo-tree-id11271 . -1) (undo-tree-id11273 . -1) (undo-tree-id11275 . -1) (undo-tree-id11277 . -1) (undo-tree-id11279 . -1) (undo-tree-id11281 . -1) (undo-tree-id11283 . -1) (undo-tree-id11285 . -1) (undo-tree-id11287 . -1) (undo-tree-id11289 . -1) (undo-tree-id11291 . -1) (undo-tree-id11293 . -1) (undo-tree-id11295 . -1) (undo-tree-id11297 . -1) (undo-tree-id11299 . -1) (undo-tree-id11301 . -1) (undo-tree-id11303 . -1) (undo-tree-id11305 . -1) (undo-tree-id11307 . -1) (undo-tree-id11309 . -1) (undo-tree-id11311 . -1) (undo-tree-id11313 . -1) (undo-tree-id11315 . -1) (undo-tree-id11317 . -1) (undo-tree-id11319 . -1) (undo-tree-id11321 . -1) (undo-tree-id11323 . -1) (undo-tree-id11325 . -1) (undo-tree-id11327 . -1) (undo-tree-id11329 . -1) (undo-tree-id11331 . -1) (undo-tree-id11333 . -1) (undo-tree-id11335 . -1) (undo-tree-id11337 . -1) (undo-tree-id11339 . -1) (undo-tree-id11341 . -1) (undo-tree-id11343 . -1) (undo-tree-id11345 . -1) (undo-tree-id11347 . -1) (undo-tree-id11349 . -1) (undo-tree-id11351 . -1) (undo-tree-id11353 . -1) (undo-tree-id11355 . -1) (undo-tree-id11357 . -1) (undo-tree-id11359 . -1) (undo-tree-id11361 . -1) (undo-tree-id11363 . -1) (undo-tree-id11365 . -1) (undo-tree-id11367 . -1) (undo-tree-id11369 . -1) (undo-tree-id11371 . -1) (undo-tree-id11373 . -1) (undo-tree-id11375 . -1) (undo-tree-id11377 . -1) (undo-tree-id11379 . -1) (undo-tree-id11381 . -1) (undo-tree-id11383 . -1) (undo-tree-id11385 . -1) (undo-tree-id11387 . -1) (undo-tree-id11389 . -1) (undo-tree-id11391 . -1) (undo-tree-id11393 . -1) (undo-tree-id11395 . -1) (undo-tree-id11397 . -1) (undo-tree-id11399 . -1) (undo-tree-id11401 . -1) (undo-tree-id11403 . -1) (undo-tree-id11405 . -1) (undo-tree-id11407 . -1) (undo-tree-id11409 . -1) (undo-tree-id11411 . -1) (undo-tree-id11413 . -1) (undo-tree-id11415 . -1) (undo-tree-id11417 . -1) (undo-tree-id11419 . -1) (undo-tree-id11421 . -1) (undo-tree-id11423 . -1) (undo-tree-id11425 . -1) (undo-tree-id11427 . -1) (undo-tree-id11429 . -1) (undo-tree-id11431 . -1) (undo-tree-id11433 . -1) (undo-tree-id11435 . -1) (undo-tree-id11437 . -1) (undo-tree-id11439 . -1) (undo-tree-id11441 . -1) (undo-tree-id11443 . -1) (undo-tree-id11445 . -1) (undo-tree-id11447 . -1) (undo-tree-id11449 . -1) (undo-tree-id11451 . -1) (undo-tree-id11453 . -1) (undo-tree-id11455 . -1) (undo-tree-id11457 . -1) (undo-tree-id11459 . -1) (undo-tree-id11461 . -1) (undo-tree-id11463 . -1) (undo-tree-id11465 . -1) (undo-tree-id11467 . -1) (undo-tree-id11469 . -1) (undo-tree-id11471 . -1) (undo-tree-id11473 . -1) (undo-tree-id11475 . -1) (undo-tree-id11477 . -1) (undo-tree-id11479 . -1) (undo-tree-id11481 . -1) (undo-tree-id11483 . -1) (undo-tree-id11485 . -1) (undo-tree-id11487 . -1) (undo-tree-id11489 . -1) (undo-tree-id11491 . -1) (#("/" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68868) (undo-tree-id11493 . -1) (undo-tree-id11495 . -1) (undo-tree-id11497 . -1) (undo-tree-id11499 . -1) (undo-tree-id11501 . -1) (undo-tree-id11503 . -1) (undo-tree-id11505 . -1) (undo-tree-id11506 . -1) (undo-tree-id11507 . -1) (undo-tree-id11509 . -1) (undo-tree-id11511 . -1) (undo-tree-id11513 . -1) (undo-tree-id11515 . -1) (undo-tree-id11517 . -1) (undo-tree-id11519 . -1) (undo-tree-id11521 . -1) (undo-tree-id11523 . -1) (undo-tree-id11525 . -1) (undo-tree-id11527 . -1) (undo-tree-id11529 . -1) (undo-tree-id11531 . -1) (undo-tree-id11533 . -1) (undo-tree-id11535 . -1) (undo-tree-id11537 . -1) (undo-tree-id11539 . -1) (undo-tree-id11541 . -1) (undo-tree-id11543 . -1) (undo-tree-id11545 . -1) (undo-tree-id11547 . -1) (undo-tree-id11549 . -1) (undo-tree-id11551 . -1) (undo-tree-id11553 . -1) (undo-tree-id11555 . -1) (undo-tree-id11557 . -1) (undo-tree-id11559 . -1) (undo-tree-id11561 . -1) (undo-tree-id11563 . -1) (undo-tree-id11565 . -1) (undo-tree-id11567 . -1) (undo-tree-id11569 . -1) (undo-tree-id11571 . -1) (undo-tree-id11573 . -1) (undo-tree-id11575 . -1) (undo-tree-id11577 . -1) (undo-tree-id11579 . -1) (undo-tree-id11581 . -1) (undo-tree-id11583 . -1) (undo-tree-id11585 . -1) (undo-tree-id11587 . -1) (undo-tree-id11589 . -1) (undo-tree-id11591 . -1) (undo-tree-id11593 . -1) (undo-tree-id11595 . -1) (undo-tree-id11597 . -1) (undo-tree-id11599 . -1) (undo-tree-id11601 . -1) (undo-tree-id11603 . -1) (undo-tree-id11605 . -1) (undo-tree-id11607 . -1) (undo-tree-id11609 . -1) (undo-tree-id11611 . -1) (undo-tree-id11613 . -1) (undo-tree-id11615 . -1) (undo-tree-id11617 . -1) (undo-tree-id11619 . -1) (undo-tree-id11621 . -1) (undo-tree-id11623 . -1) (undo-tree-id11625 . -1) (undo-tree-id11627 . -1) (undo-tree-id11629 . -1) (undo-tree-id11631 . -1) (undo-tree-id11633 . -1) (undo-tree-id11635 . -1) (undo-tree-id11637 . -1) (undo-tree-id11639 . -1) (undo-tree-id11641 . -1) (undo-tree-id11643 . -1) (undo-tree-id11645 . -1) (undo-tree-id11647 . -1) (undo-tree-id11649 . -1) (undo-tree-id11651 . -1) (undo-tree-id11653 . -1) (undo-tree-id11655 . -1) (undo-tree-id11657 . -1) (undo-tree-id11659 . -1) (undo-tree-id11661 . -1) (undo-tree-id11663 . -1) (undo-tree-id11665 . -1) (undo-tree-id11667 . -1) (undo-tree-id11669 . -1) (undo-tree-id11671 . -1) (undo-tree-id11673 . -1) (undo-tree-id11675 . -1) (undo-tree-id11677 . -1) (undo-tree-id11679 . -1) (undo-tree-id11681 . -1) (undo-tree-id11683 . -1) (undo-tree-id11685 . -1) (undo-tree-id11687 . -1) (undo-tree-id11689 . -1) (undo-tree-id11691 . -1) (undo-tree-id11693 . -1) (undo-tree-id11695 . -1) (undo-tree-id11697 . -1) (undo-tree-id11699 . -1) (undo-tree-id11701 . -1) (undo-tree-id11703 . -1) (undo-tree-id11705 . -1) (undo-tree-id11707 . -1) (undo-tree-id11709 . -1) (undo-tree-id11711 . -1) (undo-tree-id11713 . -1) (undo-tree-id11715 . -1) (undo-tree-id11717 . -1) (undo-tree-id11719 . -1) (undo-tree-id11721 . -1) (undo-tree-id11723 . -1) (undo-tree-id11725 . -1) (undo-tree-id11727 . -1) (undo-tree-id11729 . -1) (undo-tree-id11731 . -1) (undo-tree-id11733 . -1) (#("z" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68869) (undo-tree-id11735 . 1) (undo-tree-id11736 . -1) (undo-tree-id11738 . -1) (undo-tree-id11740 . -1) (undo-tree-id11742 . -1) (undo-tree-id11744 . -1) (undo-tree-id11746 . -1) (undo-tree-id11748 . -1) (undo-tree-id11749 . -1) (undo-tree-id11750 . -1) (undo-tree-id11752 . -1) (undo-tree-id11754 . -1) (undo-tree-id11756 . -1) (undo-tree-id11758 . -1) (undo-tree-id11760 . -1) (undo-tree-id11762 . -1) (undo-tree-id11764 . -1) (undo-tree-id11766 . -1) (undo-tree-id11768 . -1) (undo-tree-id11770 . -1) (undo-tree-id11772 . -1) (undo-tree-id11774 . -1) (undo-tree-id11776 . -1) (undo-tree-id11778 . -1) (undo-tree-id11780 . -1) (undo-tree-id11782 . -1) (undo-tree-id11784 . -1) (undo-tree-id11786 . -1) (undo-tree-id11788 . -1) (undo-tree-id11790 . -1) (undo-tree-id11792 . -1) (undo-tree-id11794 . -1) (undo-tree-id11796 . -1) (undo-tree-id11798 . -1) (undo-tree-id11800 . -1) (undo-tree-id11802 . -1) (undo-tree-id11804 . -1) (undo-tree-id11806 . -1) (undo-tree-id11808 . -1) (undo-tree-id11810 . -1) (undo-tree-id11812 . -1) (undo-tree-id11814 . -1) (undo-tree-id11816 . -1) (undo-tree-id11818 . -1) (undo-tree-id11820 . -1) (undo-tree-id11822 . -1) (undo-tree-id11824 . -1) (undo-tree-id11826 . -1) (undo-tree-id11828 . -1) (undo-tree-id11830 . -1) (undo-tree-id11832 . -1) (undo-tree-id11834 . -1) (undo-tree-id11836 . -1) (undo-tree-id11838 . -1) (undo-tree-id11840 . -1) (undo-tree-id11842 . -1) (undo-tree-id11844 . -1) (undo-tree-id11846 . -1) (undo-tree-id11848 . -1) (undo-tree-id11850 . -1) (undo-tree-id11852 . -1) (undo-tree-id11854 . -1) (undo-tree-id11856 . -1) (undo-tree-id11858 . -1) (undo-tree-id11860 . -1) (undo-tree-id11862 . -1) (undo-tree-id11864 . -1) (undo-tree-id11866 . -1) (undo-tree-id11868 . -1) (undo-tree-id11870 . -1) (undo-tree-id11872 . -1) (undo-tree-id11874 . -1) (undo-tree-id11876 . -1) (undo-tree-id11878 . -1) (undo-tree-id11880 . -1) (undo-tree-id11882 . -1) (undo-tree-id11884 . -1) (undo-tree-id11886 . -1) (undo-tree-id11888 . -1) (undo-tree-id11890 . -1) (undo-tree-id11892 . -1) (undo-tree-id11894 . -1) (undo-tree-id11896 . -1) (undo-tree-id11898 . -1) (undo-tree-id11900 . -1) (undo-tree-id11902 . -1) (undo-tree-id11904 . -1) (undo-tree-id11906 . -1) (undo-tree-id11908 . -1) (undo-tree-id11910 . -1) (undo-tree-id11912 . -1) (undo-tree-id11914 . -1) (undo-tree-id11916 . -1) (undo-tree-id11918 . -1) (undo-tree-id11920 . -1) (undo-tree-id11922 . -1) (undo-tree-id11924 . -1) (undo-tree-id11926 . -1) (undo-tree-id11928 . -1) (undo-tree-id11930 . -1) (undo-tree-id11932 . -1) (undo-tree-id11934 . -1) (undo-tree-id11936 . -1) (undo-tree-id11938 . -1) (undo-tree-id11940 . -1) (undo-tree-id11942 . -1) (undo-tree-id11944 . -1) (undo-tree-id11946 . -1) (undo-tree-id11948 . -1) (undo-tree-id11950 . -1) (undo-tree-id11952 . -1) (undo-tree-id11954 . -1) (undo-tree-id11956 . -1) (undo-tree-id11958 . -1) (undo-tree-id11960 . -1) (undo-tree-id11962 . -1) (undo-tree-id11964 . -1) (undo-tree-id11966 . -1) (undo-tree-id11968 . -1) (#("e" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68870) (undo-tree-id11970 . -1) (undo-tree-id11972 . -1) (undo-tree-id11974 . -1) (undo-tree-id11976 . -1) (undo-tree-id11978 . -1) (undo-tree-id11980 . -1) (undo-tree-id11982 . -1) (undo-tree-id11983 . -1) (undo-tree-id11984 . -1) (undo-tree-id11986 . -1) (undo-tree-id11988 . -1) (undo-tree-id11990 . -1) (undo-tree-id11992 . -1) (undo-tree-id11994 . -1) (undo-tree-id11996 . -1) (undo-tree-id11998 . -1) (undo-tree-id12000 . -1) (undo-tree-id12002 . -1) (undo-tree-id12004 . -1) (undo-tree-id12006 . -1) (undo-tree-id12008 . -1) (undo-tree-id12010 . -1) (undo-tree-id12012 . -1) (undo-tree-id12014 . -1) (undo-tree-id12016 . -1) (undo-tree-id12018 . -1) (undo-tree-id12020 . -1) (undo-tree-id12022 . -1) (undo-tree-id12024 . -1) (undo-tree-id12026 . -1) (undo-tree-id12028 . -1) (undo-tree-id12030 . -1) (undo-tree-id12032 . -1) (undo-tree-id12034 . -1) (undo-tree-id12036 . -1) (undo-tree-id12038 . -1) (undo-tree-id12040 . -1) (undo-tree-id12042 . -1) (undo-tree-id12044 . -1) (undo-tree-id12046 . -1) (undo-tree-id12048 . -1) (undo-tree-id12050 . -1) (undo-tree-id12052 . -1) (undo-tree-id12054 . -1) (undo-tree-id12056 . -1) (undo-tree-id12058 . -1) (undo-tree-id12060 . -1) (undo-tree-id12062 . -1) (undo-tree-id12064 . -1) (undo-tree-id12066 . -1) (undo-tree-id12068 . -1) (undo-tree-id12070 . -1) (undo-tree-id12072 . -1) (undo-tree-id12074 . -1) (undo-tree-id12076 . -1) (undo-tree-id12078 . -1) (undo-tree-id12080 . -1) (undo-tree-id12082 . -1) (undo-tree-id12084 . -1) (undo-tree-id12086 . -1) (undo-tree-id12088 . -1) (undo-tree-id12090 . -1) (undo-tree-id12092 . -1) (undo-tree-id12094 . -1) (undo-tree-id12096 . -1) (undo-tree-id12098 . -1) (undo-tree-id12100 . -1) (undo-tree-id12102 . -1) (undo-tree-id12104 . -1) (undo-tree-id12106 . -1) (undo-tree-id12108 . -1) (undo-tree-id12110 . -1) (undo-tree-id12112 . -1) (undo-tree-id12114 . -1) (undo-tree-id12116 . -1) (undo-tree-id12118 . -1) (undo-tree-id12120 . -1) (undo-tree-id12122 . -1) (undo-tree-id12124 . -1) (undo-tree-id12126 . -1) (undo-tree-id12128 . -1) (undo-tree-id12130 . -1) (undo-tree-id12132 . -1) (undo-tree-id12134 . -1) (undo-tree-id12136 . -1) (undo-tree-id12138 . -1) (undo-tree-id12140 . -1) (undo-tree-id12142 . -1) (undo-tree-id12144 . -1) (undo-tree-id12146 . -1) (undo-tree-id12148 . -1) (undo-tree-id12150 . -1) (undo-tree-id12152 . -1) (undo-tree-id12154 . -1) (undo-tree-id12156 . -1) (undo-tree-id12158 . -1) (undo-tree-id12160 . -1) (undo-tree-id12162 . -1) (undo-tree-id12164 . -1) (undo-tree-id12166 . -1) (undo-tree-id12168 . -1) (undo-tree-id12170 . -1) (undo-tree-id12172 . -1) (undo-tree-id12174 . -1) (undo-tree-id12176 . -1) (undo-tree-id12178 . -1) (undo-tree-id12180 . -1) (undo-tree-id12182 . -1) (undo-tree-id12184 . -1) (undo-tree-id12186 . -1) (undo-tree-id12188 . -1) (undo-tree-id12190 . -1) (undo-tree-id12192 . -1) (undo-tree-id12194 . -1) (#("t" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68871) (undo-tree-id12196 . -1) (undo-tree-id12198 . -1) (undo-tree-id12200 . -1) (undo-tree-id12202 . -1) (undo-tree-id12204 . -1) (undo-tree-id12206 . -1) (undo-tree-id12208 . -1) (undo-tree-id12209 . -1) (undo-tree-id12210 . -1) (undo-tree-id12212 . -1) (undo-tree-id12214 . -1) (undo-tree-id12216 . -1) (undo-tree-id12218 . -1) (undo-tree-id12220 . -1) (undo-tree-id12222 . -1) (undo-tree-id12224 . -1) (undo-tree-id12226 . -1) (undo-tree-id12228 . -1) (undo-tree-id12230 . -1) (undo-tree-id12232 . -1) (undo-tree-id12234 . -1) (undo-tree-id12236 . -1) (undo-tree-id12238 . -1) (undo-tree-id12240 . -1) (undo-tree-id12242 . -1) (undo-tree-id12244 . -1) (undo-tree-id12246 . -1) (undo-tree-id12248 . -1) (undo-tree-id12250 . -1) (undo-tree-id12252 . -1) (undo-tree-id12254 . -1) (undo-tree-id12256 . -1) (undo-tree-id12258 . -1) (undo-tree-id12260 . -1) (undo-tree-id12262 . -1) (undo-tree-id12264 . -1) (undo-tree-id12266 . -1) (undo-tree-id12268 . -1) (undo-tree-id12270 . -1) (undo-tree-id12272 . -1) (undo-tree-id12274 . -1) (undo-tree-id12276 . -1) (undo-tree-id12278 . -1) (undo-tree-id12280 . -1) (undo-tree-id12282 . -1) (undo-tree-id12284 . -1) (undo-tree-id12286 . -1) (undo-tree-id12288 . -1) (undo-tree-id12290 . -1) (undo-tree-id12292 . -1) (undo-tree-id12294 . -1) (undo-tree-id12296 . -1) (undo-tree-id12298 . -1) (undo-tree-id12300 . -1) (undo-tree-id12302 . -1) (undo-tree-id12304 . -1) (undo-tree-id12306 . -1) (undo-tree-id12308 . -1) (undo-tree-id12310 . -1) (undo-tree-id12312 . -1) (undo-tree-id12314 . -1) (undo-tree-id12316 . -1) (undo-tree-id12318 . -1) (undo-tree-id12320 . -1) (undo-tree-id12322 . -1) (undo-tree-id12324 . -1) (undo-tree-id12326 . -1) (undo-tree-id12328 . -1) (undo-tree-id12330 . -1) (undo-tree-id12332 . -1) (undo-tree-id12334 . -1) (undo-tree-id12336 . -1) (undo-tree-id12338 . -1) (undo-tree-id12340 . -1) (undo-tree-id12342 . -1) (undo-tree-id12344 . -1) (undo-tree-id12346 . -1) (undo-tree-id12348 . -1) (undo-tree-id12350 . -1) (undo-tree-id12352 . -1) (undo-tree-id12354 . -1) (undo-tree-id12356 . -1) (undo-tree-id12358 . -1) (undo-tree-id12360 . -1) (undo-tree-id12362 . -1) (undo-tree-id12364 . -1) (undo-tree-id12366 . -1) (undo-tree-id12368 . -1) (undo-tree-id12370 . -1) (undo-tree-id12372 . -1) (undo-tree-id12374 . -1) (undo-tree-id12376 . -1) (undo-tree-id12378 . -1) (undo-tree-id12380 . -1) (undo-tree-id12382 . -1) (undo-tree-id12384 . -1) (undo-tree-id12386 . -1) (undo-tree-id12388 . -1) (undo-tree-id12390 . -1) (undo-tree-id12392 . -1) (undo-tree-id12394 . -1) (undo-tree-id12396 . -1) (undo-tree-id12398 . -1) (undo-tree-id12400 . -1) (undo-tree-id12402 . -1) (undo-tree-id12404 . -1) (undo-tree-id12406 . -1) (undo-tree-id12408 . -1) (undo-tree-id12410 . -1) (undo-tree-id12412 . -1) (#("t" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68872) (undo-tree-id12414 . -1) (undo-tree-id12416 . -1) (undo-tree-id12418 . -1) (undo-tree-id12420 . -1) (undo-tree-id12422 . -1) (undo-tree-id12424 . -1) (undo-tree-id12426 . -1) (undo-tree-id12427 . -1) (undo-tree-id12428 . -1) (undo-tree-id12430 . -1) (undo-tree-id12432 . -1) (undo-tree-id12434 . -1) (undo-tree-id12436 . -1) (undo-tree-id12438 . -1) (undo-tree-id12440 . -1) (undo-tree-id12442 . -1) (undo-tree-id12444 . -1) (undo-tree-id12446 . -1) (undo-tree-id12448 . -1) (undo-tree-id12450 . -1) (undo-tree-id12452 . -1) (undo-tree-id12454 . -1) (undo-tree-id12456 . -1) (undo-tree-id12458 . -1) (undo-tree-id12460 . -1) (undo-tree-id12462 . -1) (undo-tree-id12464 . -1) (undo-tree-id12466 . -1) (undo-tree-id12468 . -1) (undo-tree-id12470 . -1) (undo-tree-id12472 . -1) (undo-tree-id12474 . -1) (undo-tree-id12476 . -1) (undo-tree-id12478 . -1) (undo-tree-id12480 . -1) (undo-tree-id12482 . -1) (undo-tree-id12484 . -1) (undo-tree-id12486 . -1) (undo-tree-id12488 . -1) (undo-tree-id12490 . -1) (undo-tree-id12492 . -1) (undo-tree-id12494 . -1) (undo-tree-id12496 . -1) (undo-tree-id12498 . -1) (undo-tree-id12500 . -1) (undo-tree-id12502 . -1) (undo-tree-id12504 . -1) (undo-tree-id12506 . -1) (undo-tree-id12508 . -1) (undo-tree-id12510 . -1) (undo-tree-id12512 . -1) (undo-tree-id12514 . -1) (undo-tree-id12516 . -1) (undo-tree-id12518 . -1) (undo-tree-id12520 . -1) (undo-tree-id12522 . -1) (undo-tree-id12524 . -1) (undo-tree-id12526 . -1) (undo-tree-id12528 . -1) (undo-tree-id12530 . -1) (undo-tree-id12532 . -1) (undo-tree-id12534 . -1) (undo-tree-id12536 . -1) (undo-tree-id12538 . -1) (undo-tree-id12540 . -1) (undo-tree-id12542 . -1) (undo-tree-id12544 . -1) (undo-tree-id12546 . -1) (undo-tree-id12548 . -1) (undo-tree-id12550 . -1) (undo-tree-id12552 . -1) (undo-tree-id12554 . -1) (undo-tree-id12556 . -1) (undo-tree-id12558 . -1) (undo-tree-id12560 . -1) (undo-tree-id12562 . -1) (undo-tree-id12564 . -1) (undo-tree-id12566 . -1) (undo-tree-id12568 . -1) (undo-tree-id12570 . -1) (undo-tree-id12572 . -1) (undo-tree-id12574 . -1) (undo-tree-id12576 . -1) (undo-tree-id12578 . -1) (undo-tree-id12580 . -1) (undo-tree-id12582 . -1) (undo-tree-id12584 . -1) (undo-tree-id12586 . -1) (undo-tree-id12588 . -1) (undo-tree-id12590 . -1) (undo-tree-id12592 . -1) (undo-tree-id12594 . -1) (undo-tree-id12596 . -1) (undo-tree-id12598 . -1) (undo-tree-id12600 . -1) (undo-tree-id12602 . -1) (undo-tree-id12604 . -1) (undo-tree-id12606 . -1) (undo-tree-id12608 . -1) (undo-tree-id12610 . -1) (undo-tree-id12612 . -1) (undo-tree-id12614 . -1) (undo-tree-id12616 . -1) (undo-tree-id12618 . -1) (undo-tree-id12620 . -1) (undo-tree-id12622 . -1) (#("e" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68873) (undo-tree-id12624 . -1) (undo-tree-id12626 . -1) (undo-tree-id12628 . -1) (undo-tree-id12630 . -1) (undo-tree-id12632 . -1) (undo-tree-id12634 . -1) (undo-tree-id12636 . -1) (undo-tree-id12637 . -1) (undo-tree-id12638 . -1) (undo-tree-id12640 . -1) (undo-tree-id12642 . -1) (undo-tree-id12644 . -1) (undo-tree-id12646 . -1) (undo-tree-id12648 . -1) (undo-tree-id12650 . -1) (undo-tree-id12652 . -1) (undo-tree-id12654 . -1) (undo-tree-id12656 . -1) (undo-tree-id12658 . -1) (undo-tree-id12660 . -1) (undo-tree-id12662 . -1) (undo-tree-id12664 . -1) (undo-tree-id12666 . -1) (undo-tree-id12668 . -1) (undo-tree-id12670 . -1) (undo-tree-id12672 . -1) (undo-tree-id12674 . -1) (undo-tree-id12676 . -1) (undo-tree-id12678 . -1) (undo-tree-id12680 . -1) (undo-tree-id12682 . -1) (undo-tree-id12684 . -1) (undo-tree-id12686 . -1) (undo-tree-id12688 . -1) (undo-tree-id12690 . -1) (undo-tree-id12692 . -1) (undo-tree-id12694 . -1) (undo-tree-id12696 . -1) (undo-tree-id12698 . -1) (undo-tree-id12700 . -1) (undo-tree-id12702 . -1) (undo-tree-id12704 . -1) (undo-tree-id12706 . -1) (undo-tree-id12708 . -1) (undo-tree-id12710 . -1) (undo-tree-id12712 . -1) (undo-tree-id12714 . -1) (undo-tree-id12716 . -1) (undo-tree-id12718 . -1) (undo-tree-id12720 . -1) (undo-tree-id12722 . -1) (undo-tree-id12724 . -1) (undo-tree-id12726 . -1) (undo-tree-id12728 . -1) (undo-tree-id12730 . -1) (undo-tree-id12732 . -1) (undo-tree-id12734 . -1) (undo-tree-id12736 . -1) (undo-tree-id12738 . -1) (undo-tree-id12740 . -1) (undo-tree-id12742 . -1) (undo-tree-id12744 . -1) (undo-tree-id12746 . -1) (undo-tree-id12748 . -1) (undo-tree-id12750 . -1) (undo-tree-id12752 . -1) (undo-tree-id12754 . -1) (undo-tree-id12756 . -1) (undo-tree-id12758 . -1) (undo-tree-id12760 . -1) (undo-tree-id12762 . -1) (undo-tree-id12764 . -1) (undo-tree-id12766 . -1) (undo-tree-id12768 . -1) (undo-tree-id12770 . -1) (undo-tree-id12772 . -1) (undo-tree-id12774 . -1) (undo-tree-id12776 . -1) (undo-tree-id12778 . -1) (undo-tree-id12780 . -1) (undo-tree-id12782 . -1) (undo-tree-id12784 . -1) (undo-tree-id12786 . -1) (undo-tree-id12788 . -1) (undo-tree-id12790 . -1) (undo-tree-id12792 . -1) (undo-tree-id12794 . -1) (undo-tree-id12796 . -1) (undo-tree-id12798 . -1) (undo-tree-id12800 . -1) (undo-tree-id12802 . -1) (undo-tree-id12804 . -1) (undo-tree-id12806 . -1) (undo-tree-id12808 . -1) (undo-tree-id12810 . -1) (undo-tree-id12812 . -1) (undo-tree-id12814 . -1) (undo-tree-id12816 . -1) (undo-tree-id12818 . -1) (undo-tree-id12820 . -1) (undo-tree-id12822 . -1) (undo-tree-id12824 . -1) 68874 (#("l" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68874) (undo-tree-id12826 . -1) (undo-tree-id12828 . -1) (undo-tree-id12830 . -1) (undo-tree-id12832 . -1) (undo-tree-id12834 . -1) (undo-tree-id12836 . -1) (undo-tree-id12838 . -1) (undo-tree-id12839 . -1) (undo-tree-id12840 . -1) (undo-tree-id12842 . -1) (undo-tree-id12844 . -1) (undo-tree-id12846 . -1) (undo-tree-id12848 . -1) (undo-tree-id12850 . -1) (undo-tree-id12852 . -1) (undo-tree-id12854 . -1) (undo-tree-id12856 . -1) (undo-tree-id12858 . -1) (undo-tree-id12860 . -1) (undo-tree-id12862 . -1) (undo-tree-id12864 . -1) (undo-tree-id12866 . -1) (undo-tree-id12868 . -1) (undo-tree-id12870 . -1) (undo-tree-id12872 . -1) (undo-tree-id12874 . -1) (undo-tree-id12876 . -1) (undo-tree-id12878 . -1) (undo-tree-id12880 . -1) (undo-tree-id12882 . -1) (undo-tree-id12884 . -1) (undo-tree-id12886 . -1) (undo-tree-id12888 . -1) (undo-tree-id12890 . -1) (undo-tree-id12892 . -1) (undo-tree-id12894 . -1) (undo-tree-id12896 . -1) (undo-tree-id12898 . -1) (undo-tree-id12900 . -1) (undo-tree-id12902 . -1) (undo-tree-id12904 . -1) (undo-tree-id12906 . -1) (undo-tree-id12908 . -1) (undo-tree-id12910 . -1) (undo-tree-id12912 . -1) (undo-tree-id12914 . -1) (undo-tree-id12916 . -1) (undo-tree-id12918 . -1) (undo-tree-id12920 . -1) (undo-tree-id12922 . -1) (undo-tree-id12924 . -1) (undo-tree-id12926 . -1) (undo-tree-id12928 . -1) (undo-tree-id12930 . -1) (undo-tree-id12932 . -1) (undo-tree-id12934 . -1) (undo-tree-id12936 . -1) (undo-tree-id12938 . -1) (undo-tree-id12940 . -1) (undo-tree-id12942 . -1) (undo-tree-id12944 . -1) (undo-tree-id12946 . -1) (undo-tree-id12948 . -1) (undo-tree-id12950 . -1) (undo-tree-id12952 . -1) (undo-tree-id12954 . -1) (undo-tree-id12956 . -1) (undo-tree-id12958 . -1) (undo-tree-id12960 . -1) (undo-tree-id12962 . -1) (undo-tree-id12964 . -1) (undo-tree-id12966 . -1) (undo-tree-id12968 . -1) (undo-tree-id12970 . -1) (undo-tree-id12972 . -1) (undo-tree-id12974 . -1) (undo-tree-id12976 . -1) (undo-tree-id12978 . -1) (undo-tree-id12980 . -1) (undo-tree-id12982 . -1) (undo-tree-id12984 . -1) (undo-tree-id12986 . -1) (undo-tree-id12988 . -1) (undo-tree-id12990 . -1) (undo-tree-id12992 . -1) (undo-tree-id12994 . -1) (undo-tree-id12996 . -1) (undo-tree-id12998 . -1) (undo-tree-id13000 . -1) (undo-tree-id13002 . -1) (undo-tree-id13004 . -1) (undo-tree-id13006 . -1) (undo-tree-id13008 . -1) (undo-tree-id13010 . -1) (undo-tree-id13012 . -1) (undo-tree-id13014 . -1) (undo-tree-id13016 . -1) (undo-tree-id13018 . -1) (#("d" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68875) (undo-tree-id13020 . -1) (undo-tree-id13022 . -1) (undo-tree-id13024 . -1) (undo-tree-id13026 . -1) (undo-tree-id13028 . -1) (undo-tree-id13030 . -1) (undo-tree-id13032 . -1) (undo-tree-id13033 . -1) (undo-tree-id13034 . -1) (undo-tree-id13036 . -1) (undo-tree-id13038 . -1) (undo-tree-id13040 . -1) (undo-tree-id13042 . -1) (undo-tree-id13044 . -1) (undo-tree-id13046 . -1) (undo-tree-id13048 . -1) (undo-tree-id13050 . -1) (undo-tree-id13052 . -1) (undo-tree-id13054 . -1) (undo-tree-id13056 . -1) (undo-tree-id13058 . -1) (undo-tree-id13060 . -1) (undo-tree-id13062 . -1) (undo-tree-id13064 . -1) (undo-tree-id13066 . -1) (undo-tree-id13068 . -1) (undo-tree-id13070 . -1) (undo-tree-id13072 . -1) (undo-tree-id13074 . -1) (undo-tree-id13076 . -1) (undo-tree-id13078 . -1) (undo-tree-id13080 . -1) (undo-tree-id13082 . -1) (undo-tree-id13084 . -1) (undo-tree-id13086 . -1) (undo-tree-id13088 . -1) (undo-tree-id13090 . -1) (undo-tree-id13092 . -1) (undo-tree-id13094 . -1) (undo-tree-id13096 . -1) (undo-tree-id13098 . -1) (undo-tree-id13100 . -1) (undo-tree-id13102 . -1) (undo-tree-id13104 . -1) (undo-tree-id13106 . -1) (undo-tree-id13108 . -1) (undo-tree-id13110 . -1) (undo-tree-id13112 . -1) (undo-tree-id13114 . -1) (undo-tree-id13116 . -1) (undo-tree-id13118 . -1) (undo-tree-id13120 . -1) (undo-tree-id13122 . -1) (undo-tree-id13124 . -1) (undo-tree-id13126 . -1) (undo-tree-id13128 . -1) (undo-tree-id13130 . -1) (undo-tree-id13132 . -1) (undo-tree-id13134 . -1) (undo-tree-id13136 . -1) (undo-tree-id13138 . -1) (undo-tree-id13140 . -1) (undo-tree-id13142 . -1) (undo-tree-id13144 . -1) (undo-tree-id13146 . -1) (undo-tree-id13148 . -1) (undo-tree-id13150 . -1) (undo-tree-id13152 . -1) (undo-tree-id13154 . -1) (undo-tree-id13156 . -1) (undo-tree-id13158 . -1) (undo-tree-id13160 . -1) (undo-tree-id13162 . -1) (undo-tree-id13164 . -1) (undo-tree-id13166 . -1) (undo-tree-id13168 . -1) (undo-tree-id13170 . -1) (undo-tree-id13172 . -1) (undo-tree-id13174 . -1) (undo-tree-id13176 . -1) (undo-tree-id13178 . -1) (undo-tree-id13180 . -1) (undo-tree-id13182 . -1) (undo-tree-id13184 . -1) (undo-tree-id13186 . -1) (undo-tree-id13188 . -1) (undo-tree-id13190 . -1) (undo-tree-id13192 . -1) (undo-tree-id13194 . -1) (undo-tree-id13196 . -1) (undo-tree-id13198 . -1) (undo-tree-id13200 . -1) (undo-tree-id13202 . -1) (undo-tree-id13204 . -1) (#("e" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68876) (undo-tree-id13206 . -1) (undo-tree-id13208 . -1) (undo-tree-id13210 . -1) (undo-tree-id13212 . -1) (undo-tree-id13214 . -1) (undo-tree-id13216 . -1) (undo-tree-id13218 . -1) (undo-tree-id13219 . -1) (undo-tree-id13220 . -1) (undo-tree-id13222 . -1) (undo-tree-id13224 . -1) (undo-tree-id13226 . -1) (undo-tree-id13228 . -1) (undo-tree-id13230 . -1) (undo-tree-id13232 . -1) (undo-tree-id13234 . -1) (undo-tree-id13236 . -1) (undo-tree-id13238 . -1) (undo-tree-id13240 . -1) (undo-tree-id13242 . -1) (undo-tree-id13244 . -1) (undo-tree-id13246 . -1) (undo-tree-id13248 . -1) (undo-tree-id13250 . -1) (undo-tree-id13252 . -1) (undo-tree-id13254 . -1) (undo-tree-id13256 . -1) (undo-tree-id13258 . -1) (undo-tree-id13260 . -1) (undo-tree-id13262 . -1) (undo-tree-id13264 . -1) (undo-tree-id13266 . -1) (undo-tree-id13268 . -1) (undo-tree-id13270 . -1) (undo-tree-id13272 . -1) (undo-tree-id13274 . -1) (undo-tree-id13276 . -1) (undo-tree-id13278 . -1) (undo-tree-id13280 . -1) (undo-tree-id13282 . -1) (undo-tree-id13284 . -1) (undo-tree-id13286 . -1) (undo-tree-id13288 . -1) (undo-tree-id13290 . -1) (undo-tree-id13292 . -1) (undo-tree-id13294 . -1) (undo-tree-id13296 . -1) (undo-tree-id13298 . -1) (undo-tree-id13300 . -1) (undo-tree-id13302 . -1) (undo-tree-id13304 . -1) (undo-tree-id13306 . -1) (undo-tree-id13308 . -1) (undo-tree-id13310 . -1) (undo-tree-id13312 . -1) (undo-tree-id13314 . -1) (undo-tree-id13316 . -1) (undo-tree-id13318 . -1) (undo-tree-id13320 . -1) (undo-tree-id13322 . -1) (undo-tree-id13324 . -1) (undo-tree-id13326 . -1) (undo-tree-id13328 . -1) (undo-tree-id13330 . -1) (undo-tree-id13332 . -1) (undo-tree-id13334 . -1) (undo-tree-id13336 . -1) (undo-tree-id13338 . -1) (undo-tree-id13340 . -1) (undo-tree-id13342 . -1) (undo-tree-id13344 . -1) (undo-tree-id13346 . -1) (undo-tree-id13348 . -1) (undo-tree-id13350 . -1) (undo-tree-id13352 . -1) (undo-tree-id13354 . -1) (undo-tree-id13356 . -1) (undo-tree-id13358 . -1) (undo-tree-id13360 . -1) (undo-tree-id13362 . -1) (undo-tree-id13364 . -1) (undo-tree-id13366 . -1) (undo-tree-id13368 . -1) (undo-tree-id13370 . -1) (undo-tree-id13372 . -1) (undo-tree-id13374 . -1) (undo-tree-id13376 . -1) (undo-tree-id13378 . -1) (undo-tree-id13380 . -1) (undo-tree-id13382 . -1) (#("s" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68877) (undo-tree-id13384 . -1) (undo-tree-id13386 . -1) (undo-tree-id13388 . -1) (undo-tree-id13390 . -1) (undo-tree-id13392 . -1) (undo-tree-id13394 . -1) (undo-tree-id13396 . -1) (undo-tree-id13397 . -1) (undo-tree-id13398 . -1) (undo-tree-id13400 . -1) (undo-tree-id13402 . -1) (undo-tree-id13404 . -1) (undo-tree-id13406 . -1) (undo-tree-id13408 . -1) (undo-tree-id13410 . -1) (undo-tree-id13412 . -1) (undo-tree-id13414 . -1) (undo-tree-id13416 . -1) (undo-tree-id13418 . -1) (undo-tree-id13420 . -1) (undo-tree-id13422 . -1) (undo-tree-id13424 . -1) (undo-tree-id13426 . -1) (undo-tree-id13428 . -1) (undo-tree-id13430 . -1) (undo-tree-id13432 . -1) (undo-tree-id13434 . -1) (undo-tree-id13436 . -1) (undo-tree-id13438 . -1) (undo-tree-id13440 . -1) (undo-tree-id13442 . -1) (undo-tree-id13444 . -1) (undo-tree-id13446 . -1) (undo-tree-id13448 . -1) (undo-tree-id13450 . -1) (undo-tree-id13452 . -1) (undo-tree-id13454 . -1) (undo-tree-id13456 . -1) (undo-tree-id13458 . -1) (undo-tree-id13460 . -1) (undo-tree-id13462 . -1) (undo-tree-id13464 . -1) (undo-tree-id13466 . -1) (undo-tree-id13468 . -1) (undo-tree-id13470 . -1) (undo-tree-id13472 . -1) (undo-tree-id13474 . -1) (undo-tree-id13476 . -1) (undo-tree-id13478 . -1) (undo-tree-id13480 . -1) (undo-tree-id13482 . -1) (undo-tree-id13484 . -1) (undo-tree-id13486 . -1) (undo-tree-id13488 . -1) (undo-tree-id13490 . -1) (undo-tree-id13492 . -1) (undo-tree-id13494 . -1) (undo-tree-id13496 . -1) (undo-tree-id13498 . -1) (undo-tree-id13500 . -1) (undo-tree-id13502 . -1) (undo-tree-id13504 . -1) (undo-tree-id13506 . -1) (undo-tree-id13508 . -1) (undo-tree-id13510 . -1) (undo-tree-id13512 . -1) (undo-tree-id13514 . -1) (undo-tree-id13516 . -1) (undo-tree-id13518 . -1) (undo-tree-id13520 . -1) (undo-tree-id13522 . -1) (undo-tree-id13524 . -1) (undo-tree-id13526 . -1) (undo-tree-id13528 . -1) (undo-tree-id13530 . -1) (undo-tree-id13532 . -1) (undo-tree-id13534 . -1) (undo-tree-id13536 . -1) (undo-tree-id13538 . -1) (undo-tree-id13540 . -1) (undo-tree-id13542 . -1) (undo-tree-id13544 . -1) (undo-tree-id13546 . -1) (undo-tree-id13548 . -1) (undo-tree-id13550 . -1) (undo-tree-id13552 . -1) (#("k" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68878) (undo-tree-id13554 . -1) (undo-tree-id13556 . -1) (undo-tree-id13558 . -1) (undo-tree-id13560 . -1) (undo-tree-id13562 . -1) (undo-tree-id13564 . -1) (undo-tree-id13566 . -1) (undo-tree-id13567 . -1) (undo-tree-id13568 . -1) (undo-tree-id13570 . -1) (undo-tree-id13572 . -1) (undo-tree-id13574 . -1) (undo-tree-id13576 . -1) (undo-tree-id13578 . -1) (undo-tree-id13580 . -1) (undo-tree-id13582 . -1) (undo-tree-id13584 . -1) (undo-tree-id13586 . -1) (undo-tree-id13588 . -1) (undo-tree-id13590 . -1) (undo-tree-id13592 . -1) (undo-tree-id13594 . -1) (undo-tree-id13596 . -1) (undo-tree-id13598 . -1) (undo-tree-id13600 . -1) (undo-tree-id13602 . -1) (undo-tree-id13604 . -1) (undo-tree-id13606 . -1) (undo-tree-id13608 . -1) (undo-tree-id13610 . -1) (undo-tree-id13612 . -1) (undo-tree-id13614 . -1) (undo-tree-id13616 . -1) (undo-tree-id13618 . -1) (undo-tree-id13620 . -1) (undo-tree-id13622 . -1) (undo-tree-id13624 . -1) (undo-tree-id13626 . -1) (undo-tree-id13628 . -1) (undo-tree-id13630 . -1) (undo-tree-id13632 . -1) (undo-tree-id13634 . -1) (undo-tree-id13636 . -1) (undo-tree-id13638 . -1) (undo-tree-id13640 . -1) (undo-tree-id13642 . -1) (undo-tree-id13644 . -1) (undo-tree-id13646 . -1) (undo-tree-id13648 . -1) (undo-tree-id13650 . -1) (undo-tree-id13652 . -1) (undo-tree-id13654 . -1) (undo-tree-id13656 . -1) (undo-tree-id13658 . -1) (undo-tree-id13660 . -1) (undo-tree-id13662 . -1) (undo-tree-id13664 . -1) (undo-tree-id13666 . -1) (undo-tree-id13668 . -1) (undo-tree-id13670 . -1) (undo-tree-id13672 . -1) (undo-tree-id13674 . -1) (undo-tree-id13676 . -1) (undo-tree-id13678 . -1) (undo-tree-id13680 . -1) (undo-tree-id13682 . -1) (undo-tree-id13684 . -1) (undo-tree-id13686 . -1) (undo-tree-id13688 . -1) (undo-tree-id13690 . -1) (undo-tree-id13692 . -1) (undo-tree-id13694 . -1) (undo-tree-id13696 . -1) (undo-tree-id13698 . -1) (undo-tree-id13700 . -1) (undo-tree-id13702 . -1) (undo-tree-id13704 . -1) (undo-tree-id13706 . -1) (undo-tree-id13708 . -1) (undo-tree-id13710 . -1) (undo-tree-id13712 . -1) (undo-tree-id13714 . -1) (#("-" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68879) (undo-tree-id13716 . -1) (undo-tree-id13718 . -1) (undo-tree-id13720 . -1) (undo-tree-id13722 . -1) (undo-tree-id13724 . -1) (undo-tree-id13726 . -1) (undo-tree-id13728 . -1) (undo-tree-id13729 . -1) (undo-tree-id13730 . -1) (undo-tree-id13732 . -1) (undo-tree-id13734 . -1) (undo-tree-id13736 . -1) (undo-tree-id13738 . -1) (undo-tree-id13740 . -1) (undo-tree-id13742 . -1) (undo-tree-id13744 . -1) (undo-tree-id13746 . -1) (undo-tree-id13748 . -1) (undo-tree-id13750 . -1) (undo-tree-id13752 . -1) (undo-tree-id13754 . -1) (undo-tree-id13756 . -1) (undo-tree-id13758 . -1) (undo-tree-id13760 . -1) (undo-tree-id13762 . -1) (undo-tree-id13764 . -1) (undo-tree-id13766 . -1) (undo-tree-id13768 . -1) (undo-tree-id13770 . -1) (undo-tree-id13772 . -1) (undo-tree-id13774 . -1) (undo-tree-id13776 . -1) (undo-tree-id13778 . -1) (undo-tree-id13780 . -1) (undo-tree-id13782 . -1) (undo-tree-id13784 . -1) (undo-tree-id13786 . -1) (undo-tree-id13788 . -1) (undo-tree-id13790 . -1) (undo-tree-id13792 . -1) (undo-tree-id13794 . -1) (undo-tree-id13796 . -1) (undo-tree-id13798 . -1) (undo-tree-id13800 . -1) (undo-tree-id13802 . -1) (undo-tree-id13804 . -1) (undo-tree-id13806 . -1) (undo-tree-id13808 . -1) (undo-tree-id13810 . -1) (undo-tree-id13812 . -1) (undo-tree-id13814 . -1) (undo-tree-id13816 . -1) (undo-tree-id13818 . -1) (undo-tree-id13820 . -1) (undo-tree-id13822 . -1) (undo-tree-id13824 . -1) (undo-tree-id13826 . -1) (undo-tree-id13828 . -1) (undo-tree-id13830 . -1) (undo-tree-id13832 . -1) (undo-tree-id13834 . -1) (undo-tree-id13836 . -1) (undo-tree-id13838 . -1) (undo-tree-id13840 . -1) (undo-tree-id13842 . -1) (undo-tree-id13844 . -1) (undo-tree-id13846 . -1) (undo-tree-id13848 . -1) (undo-tree-id13850 . -1) (undo-tree-id13852 . -1) (undo-tree-id13854 . -1) (undo-tree-id13856 . -1) (undo-tree-id13858 . -1) (undo-tree-id13860 . -1) (undo-tree-id13862 . -1) (undo-tree-id13864 . -1) (undo-tree-id13866 . -1) (undo-tree-id13868 . -1) (#("m" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68880) (undo-tree-id13870 . -1) (undo-tree-id13872 . -1) (undo-tree-id13874 . -1) (undo-tree-id13876 . -1) (undo-tree-id13878 . -1) (undo-tree-id13880 . -1) (undo-tree-id13882 . -1) (undo-tree-id13883 . -1) (undo-tree-id13884 . -1) (undo-tree-id13886 . -1) (undo-tree-id13888 . -1) (undo-tree-id13890 . -1) (undo-tree-id13892 . -1) (undo-tree-id13894 . -1) (undo-tree-id13896 . -1) (undo-tree-id13898 . -1) (undo-tree-id13900 . -1) (undo-tree-id13902 . -1) (undo-tree-id13904 . -1) (undo-tree-id13906 . -1) (undo-tree-id13908 . -1) (undo-tree-id13910 . -1) (undo-tree-id13912 . -1) (undo-tree-id13914 . -1) (undo-tree-id13916 . -1) (undo-tree-id13918 . -1) (undo-tree-id13920 . -1) (undo-tree-id13922 . -1) (undo-tree-id13924 . -1) (undo-tree-id13926 . -1) (undo-tree-id13928 . -1) (undo-tree-id13930 . -1) (undo-tree-id13932 . -1) (undo-tree-id13934 . -1) (undo-tree-id13936 . -1) (undo-tree-id13938 . -1) (undo-tree-id13940 . -1) (undo-tree-id13942 . -1) (undo-tree-id13944 . -1) (undo-tree-id13946 . -1) (undo-tree-id13948 . -1) (undo-tree-id13950 . -1) (undo-tree-id13952 . -1) (undo-tree-id13954 . -1) (undo-tree-id13956 . -1) (undo-tree-id13958 . -1) (undo-tree-id13960 . -1) (undo-tree-id13962 . -1) (undo-tree-id13964 . -1) (undo-tree-id13966 . -1) (undo-tree-id13968 . -1) (undo-tree-id13970 . -1) (undo-tree-id13972 . -1) (undo-tree-id13974 . -1) (undo-tree-id13976 . -1) (undo-tree-id13978 . -1) (undo-tree-id13980 . -1) (undo-tree-id13982 . -1) (undo-tree-id13984 . -1) (undo-tree-id13986 . -1) (undo-tree-id13988 . -1) (undo-tree-id13990 . -1) (undo-tree-id13992 . -1) (undo-tree-id13994 . -1) (undo-tree-id13996 . -1) (undo-tree-id13998 . -1) (undo-tree-id14000 . -1) (undo-tree-id14002 . -1) (undo-tree-id14004 . -1) (undo-tree-id14006 . -1) (undo-tree-id14008 . -1) (undo-tree-id14010 . -1) (undo-tree-id14012 . -1) (undo-tree-id14014 . -1) (#("a" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68881) (undo-tree-id14016 . -1) (undo-tree-id14018 . -1) (undo-tree-id14020 . -1) (undo-tree-id14022 . -1) (undo-tree-id14024 . -1) (undo-tree-id14026 . -1) (undo-tree-id14028 . -1) (undo-tree-id14029 . -1) (undo-tree-id14030 . -1) (undo-tree-id14032 . -1) (undo-tree-id14034 . -1) (undo-tree-id14036 . -1) (undo-tree-id14038 . -1) (undo-tree-id14040 . -1) (undo-tree-id14042 . -1) (undo-tree-id14044 . -1) (undo-tree-id14046 . -1) (undo-tree-id14048 . -1) (undo-tree-id14050 . -1) (undo-tree-id14052 . -1) (undo-tree-id14054 . -1) (undo-tree-id14056 . -1) (undo-tree-id14058 . -1) (undo-tree-id14060 . -1) (undo-tree-id14062 . -1) (undo-tree-id14064 . -1) (undo-tree-id14066 . -1) (undo-tree-id14068 . -1) (undo-tree-id14070 . -1) (undo-tree-id14072 . -1) (undo-tree-id14074 . -1) (undo-tree-id14076 . -1) (undo-tree-id14078 . -1) (undo-tree-id14080 . -1) (undo-tree-id14082 . -1) (undo-tree-id14084 . -1) (undo-tree-id14086 . -1) (undo-tree-id14088 . -1) (undo-tree-id14090 . -1) (undo-tree-id14092 . -1) (undo-tree-id14094 . -1) (undo-tree-id14096 . -1) (undo-tree-id14098 . -1) (undo-tree-id14100 . -1) (undo-tree-id14102 . -1) (undo-tree-id14104 . -1) (undo-tree-id14106 . -1) (undo-tree-id14108 . -1) (undo-tree-id14110 . -1) (undo-tree-id14112 . -1) (undo-tree-id14114 . -1) (undo-tree-id14116 . -1) (undo-tree-id14118 . -1) (undo-tree-id14120 . -1) (undo-tree-id14122 . -1) (undo-tree-id14124 . -1) (undo-tree-id14126 . -1) (undo-tree-id14128 . -1) (undo-tree-id14130 . -1) (undo-tree-id14132 . -1) (undo-tree-id14134 . -1) (undo-tree-id14136 . -1) (undo-tree-id14138 . -1) (undo-tree-id14140 . -1) (undo-tree-id14142 . -1) (undo-tree-id14144 . -1) (undo-tree-id14146 . -1) (undo-tree-id14148 . -1) (undo-tree-id14150 . -1) (undo-tree-id14152 . -1) (#("r" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68882) (undo-tree-id14154 . -1) (undo-tree-id14156 . -1) (undo-tree-id14158 . -1) (undo-tree-id14160 . -1) (undo-tree-id14162 . -1) (undo-tree-id14164 . -1) (undo-tree-id14166 . -1) (undo-tree-id14167 . -1) (undo-tree-id14168 . -1) (undo-tree-id14170 . -1) (undo-tree-id14172 . -1) (undo-tree-id14174 . -1) (undo-tree-id14176 . -1) (undo-tree-id14178 . -1) (undo-tree-id14180 . -1) (undo-tree-id14182 . -1) (undo-tree-id14184 . -1) (undo-tree-id14186 . -1) (undo-tree-id14188 . -1) (undo-tree-id14190 . -1) (undo-tree-id14192 . -1) (undo-tree-id14194 . -1) (undo-tree-id14196 . -1) (undo-tree-id14198 . -1) (undo-tree-id14200 . -1) (undo-tree-id14202 . -1) (undo-tree-id14204 . -1) (undo-tree-id14206 . -1) (undo-tree-id14208 . -1) (undo-tree-id14210 . -1) (undo-tree-id14212 . -1) (undo-tree-id14214 . -1) (undo-tree-id14216 . -1) (undo-tree-id14218 . -1) (undo-tree-id14220 . -1) (undo-tree-id14222 . -1) (undo-tree-id14224 . -1) (undo-tree-id14226 . -1) (undo-tree-id14228 . -1) (undo-tree-id14230 . -1) (undo-tree-id14232 . -1) (undo-tree-id14234 . -1) (undo-tree-id14236 . -1) (undo-tree-id14238 . -1) (undo-tree-id14240 . -1) (undo-tree-id14242 . -1) (undo-tree-id14244 . -1) (undo-tree-id14246 . -1) (undo-tree-id14248 . -1) (undo-tree-id14250 . -1) (undo-tree-id14252 . -1) (undo-tree-id14254 . -1) (undo-tree-id14256 . -1) (undo-tree-id14258 . -1) (undo-tree-id14260 . -1) (undo-tree-id14262 . -1) (undo-tree-id14264 . -1) (undo-tree-id14266 . -1) (undo-tree-id14268 . -1) (undo-tree-id14270 . -1) (undo-tree-id14272 . -1) (undo-tree-id14274 . -1) (undo-tree-id14276 . -1) (undo-tree-id14278 . -1) (undo-tree-id14280 . -1) (undo-tree-id14282 . -1) (#("g" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68883) (undo-tree-id14284 . -1) (undo-tree-id14286 . -1) (undo-tree-id14288 . -1) (undo-tree-id14290 . -1) (undo-tree-id14292 . -1) (undo-tree-id14294 . -1) (undo-tree-id14296 . -1) (undo-tree-id14297 . -1) (undo-tree-id14298 . -1) (undo-tree-id14300 . -1) (undo-tree-id14302 . -1) (undo-tree-id14304 . -1) (undo-tree-id14306 . -1) (undo-tree-id14308 . -1) (undo-tree-id14310 . -1) (undo-tree-id14312 . -1) (undo-tree-id14314 . -1) (undo-tree-id14316 . -1) (undo-tree-id14318 . -1) (undo-tree-id14320 . -1) (undo-tree-id14322 . -1) (undo-tree-id14324 . -1) (undo-tree-id14326 . -1) (undo-tree-id14328 . -1) (undo-tree-id14330 . -1) (undo-tree-id14332 . -1) (undo-tree-id14334 . -1) (undo-tree-id14336 . -1) (undo-tree-id14338 . -1) (undo-tree-id14340 . -1) (undo-tree-id14342 . -1) (undo-tree-id14344 . -1) (undo-tree-id14346 . -1) (undo-tree-id14348 . -1) (undo-tree-id14350 . -1) (undo-tree-id14352 . -1) (undo-tree-id14354 . -1) (undo-tree-id14356 . -1) (undo-tree-id14358 . -1) (undo-tree-id14360 . -1) (undo-tree-id14362 . -1) (undo-tree-id14364 . -1) (undo-tree-id14366 . -1) (undo-tree-id14368 . -1) (undo-tree-id14370 . -1) (undo-tree-id14372 . -1) (undo-tree-id14374 . -1) (undo-tree-id14376 . -1) (undo-tree-id14378 . -1) (undo-tree-id14380 . -1) (undo-tree-id14382 . -1) (undo-tree-id14384 . -1) (undo-tree-id14386 . -1) (undo-tree-id14388 . -1) (undo-tree-id14390 . -1) (undo-tree-id14392 . -1) (undo-tree-id14394 . -1) (undo-tree-id14396 . -1) (undo-tree-id14398 . -1) (undo-tree-id14400 . -1) (undo-tree-id14402 . -1) (undo-tree-id14404 . -1) (#("i" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68884) (undo-tree-id14406 . -1) (undo-tree-id14408 . -1) (undo-tree-id14410 . -1) (undo-tree-id14412 . -1) (undo-tree-id14414 . -1) (undo-tree-id14416 . -1) (undo-tree-id14418 . -1) (undo-tree-id14419 . -1) (undo-tree-id14420 . -1) (undo-tree-id14422 . -1) (undo-tree-id14424 . -1) (undo-tree-id14426 . -1) (undo-tree-id14428 . -1) (undo-tree-id14430 . -1) (undo-tree-id14432 . -1) (undo-tree-id14434 . -1) (undo-tree-id14436 . -1) (undo-tree-id14438 . -1) (undo-tree-id14440 . -1) (undo-tree-id14442 . -1) (undo-tree-id14444 . -1) (undo-tree-id14446 . -1) (undo-tree-id14448 . -1) (undo-tree-id14450 . -1) (undo-tree-id14452 . -1) (undo-tree-id14454 . -1) (undo-tree-id14456 . -1) (undo-tree-id14458 . -1) (undo-tree-id14460 . -1) (undo-tree-id14462 . -1) (undo-tree-id14464 . -1) (undo-tree-id14466 . -1) (undo-tree-id14468 . -1) (undo-tree-id14470 . -1) (undo-tree-id14472 . -1) (undo-tree-id14474 . -1) (undo-tree-id14476 . -1) (undo-tree-id14478 . -1) (undo-tree-id14480 . -1) (undo-tree-id14482 . -1) (undo-tree-id14484 . -1) (undo-tree-id14486 . -1) (undo-tree-id14488 . -1) (undo-tree-id14490 . -1) (undo-tree-id14492 . -1) (undo-tree-id14494 . -1) (undo-tree-id14496 . -1) (undo-tree-id14498 . -1) (undo-tree-id14500 . -1) (undo-tree-id14502 . -1) (undo-tree-id14504 . -1) (undo-tree-id14506 . -1) (undo-tree-id14508 . -1) (undo-tree-id14510 . -1) (undo-tree-id14512 . -1) (undo-tree-id14514 . -1) (undo-tree-id14516 . -1) (undo-tree-id14518 . -1) (#("n" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68885) (undo-tree-id14520 . -1) (undo-tree-id14522 . -1) (undo-tree-id14524 . -1) (undo-tree-id14526 . -1) (undo-tree-id14528 . -1) (undo-tree-id14530 . -1) (undo-tree-id14532 . -1) (undo-tree-id14533 . -1) (undo-tree-id14534 . -1) (undo-tree-id14536 . -1) (undo-tree-id14538 . -1) (undo-tree-id14540 . -1) (undo-tree-id14542 . -1) (undo-tree-id14544 . -1) (undo-tree-id14546 . -1) (undo-tree-id14548 . -1) (undo-tree-id14550 . -1) (undo-tree-id14552 . -1) (undo-tree-id14554 . -1) (undo-tree-id14556 . -1) (undo-tree-id14558 . -1) (undo-tree-id14560 . -1) (undo-tree-id14562 . -1) (undo-tree-id14564 . -1) (undo-tree-id14566 . -1) (undo-tree-id14568 . -1) (undo-tree-id14570 . -1) (undo-tree-id14572 . -1) (undo-tree-id14574 . -1) (undo-tree-id14576 . -1) (undo-tree-id14578 . -1) (undo-tree-id14580 . -1) (undo-tree-id14582 . -1) (undo-tree-id14584 . -1) (undo-tree-id14586 . -1) (undo-tree-id14588 . -1) (undo-tree-id14590 . -1) (undo-tree-id14592 . -1) (undo-tree-id14594 . -1) (undo-tree-id14596 . -1) (undo-tree-id14598 . -1) (undo-tree-id14600 . -1) (undo-tree-id14602 . -1) (undo-tree-id14604 . -1) (undo-tree-id14606 . -1) (undo-tree-id14608 . -1) (undo-tree-id14610 . -1) (undo-tree-id14612 . -1) (undo-tree-id14614 . -1) (undo-tree-id14616 . -1) (undo-tree-id14618 . -1) (undo-tree-id14620 . -1) (undo-tree-id14622 . -1) (undo-tree-id14624 . -1) (#("-" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68886) (undo-tree-id14626 . -1) (undo-tree-id14628 . -1) (undo-tree-id14630 . -1) (undo-tree-id14632 . -1) (undo-tree-id14634 . -1) (undo-tree-id14636 . -1) (undo-tree-id14638 . -1) (undo-tree-id14639 . -1) (undo-tree-id14640 . -1) (undo-tree-id14642 . -1) (undo-tree-id14644 . -1) (undo-tree-id14646 . -1) (undo-tree-id14648 . -1) (undo-tree-id14650 . -1) (undo-tree-id14652 . -1) (undo-tree-id14654 . -1) (undo-tree-id14656 . -1) (undo-tree-id14658 . -1) (undo-tree-id14660 . -1) (undo-tree-id14662 . -1) (undo-tree-id14664 . -1) (undo-tree-id14666 . -1) (undo-tree-id14668 . -1) (undo-tree-id14670 . -1) (undo-tree-id14672 . -1) (undo-tree-id14674 . -1) (undo-tree-id14676 . -1) (undo-tree-id14678 . -1) (undo-tree-id14680 . -1) (undo-tree-id14682 . -1) (undo-tree-id14684 . -1) (undo-tree-id14686 . -1) (undo-tree-id14688 . -1) (undo-tree-id14690 . -1) (undo-tree-id14692 . -1) (undo-tree-id14694 . -1) (undo-tree-id14696 . -1) (undo-tree-id14698 . -1) (undo-tree-id14700 . -1) (undo-tree-id14702 . -1) (undo-tree-id14704 . -1) (undo-tree-id14706 . -1) (undo-tree-id14708 . -1) (undo-tree-id14710 . -1) (undo-tree-id14712 . -1) (undo-tree-id14714 . -1) (undo-tree-id14716 . -1) (undo-tree-id14718 . -1) (undo-tree-id14720 . -1) (undo-tree-id14722 . -1) (#("n" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68887) (undo-tree-id14724 . -1) (undo-tree-id14726 . -1) (undo-tree-id14728 . -1) (undo-tree-id14730 . -1) (undo-tree-id14732 . -1) (undo-tree-id14734 . -1) (undo-tree-id14736 . -1) (undo-tree-id14737 . -1) (undo-tree-id14738 . -1) (undo-tree-id14740 . -1) (undo-tree-id14742 . -1) (undo-tree-id14744 . -1) (undo-tree-id14746 . -1) (undo-tree-id14748 . -1) (undo-tree-id14750 . -1) (undo-tree-id14752 . -1) (undo-tree-id14754 . -1) (undo-tree-id14756 . -1) (undo-tree-id14758 . -1) (undo-tree-id14760 . -1) (undo-tree-id14762 . -1) (undo-tree-id14764 . -1) (undo-tree-id14766 . -1) (undo-tree-id14768 . -1) (undo-tree-id14770 . -1) (undo-tree-id14772 . -1) (undo-tree-id14774 . -1) (undo-tree-id14776 . -1) (undo-tree-id14778 . -1) (undo-tree-id14780 . -1) (undo-tree-id14782 . -1) (undo-tree-id14784 . -1) (undo-tree-id14786 . -1) (undo-tree-id14788 . -1) (undo-tree-id14790 . -1) (undo-tree-id14792 . -1) (undo-tree-id14794 . -1) (undo-tree-id14796 . -1) (undo-tree-id14798 . -1) (undo-tree-id14800 . -1) (undo-tree-id14802 . -1) (undo-tree-id14804 . -1) (undo-tree-id14806 . -1) (undo-tree-id14808 . -1) (undo-tree-id14810 . -1) (undo-tree-id14812 . -1) (#("o" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68888) (undo-tree-id14814 . -1) (undo-tree-id14816 . -1) (undo-tree-id14818 . -1) (undo-tree-id14820 . -1) (undo-tree-id14822 . -1) (undo-tree-id14824 . -1) (undo-tree-id14826 . -1) (undo-tree-id14827 . -1) (undo-tree-id14828 . -1) (undo-tree-id14830 . -1) (undo-tree-id14832 . -1) (undo-tree-id14834 . -1) (undo-tree-id14836 . -1) (undo-tree-id14838 . -1) (undo-tree-id14840 . -1) (undo-tree-id14842 . -1) (undo-tree-id14844 . -1) (undo-tree-id14846 . -1) (undo-tree-id14848 . -1) (undo-tree-id14850 . -1) (undo-tree-id14852 . -1) (undo-tree-id14854 . -1) (undo-tree-id14856 . -1) (undo-tree-id14858 . -1) (undo-tree-id14860 . -1) (undo-tree-id14862 . -1) (undo-tree-id14864 . -1) (undo-tree-id14866 . -1) (undo-tree-id14868 . -1) (undo-tree-id14870 . -1) (undo-tree-id14872 . -1) (undo-tree-id14874 . -1) (undo-tree-id14876 . -1) (undo-tree-id14878 . -1) (undo-tree-id14880 . -1) (undo-tree-id14882 . -1) (undo-tree-id14884 . -1) (undo-tree-id14886 . -1) (undo-tree-id14888 . -1) (undo-tree-id14890 . -1) (undo-tree-id14892 . -1) (undo-tree-id14894 . -1) (#("t" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68889) (undo-tree-id14896 . -1) (undo-tree-id14898 . -1) (undo-tree-id14900 . -1) (undo-tree-id14902 . -1) (undo-tree-id14904 . -1) (undo-tree-id14906 . -1) (undo-tree-id14908 . -1) (undo-tree-id14909 . -1) (undo-tree-id14910 . -1) (undo-tree-id14912 . -1) (undo-tree-id14914 . -1) (undo-tree-id14916 . -1) (undo-tree-id14918 . -1) (undo-tree-id14920 . -1) (undo-tree-id14922 . -1) (undo-tree-id14924 . -1) (undo-tree-id14926 . -1) (undo-tree-id14928 . -1) (undo-tree-id14930 . -1) (undo-tree-id14932 . -1) (undo-tree-id14934 . -1) (undo-tree-id14936 . -1) (undo-tree-id14938 . -1) (undo-tree-id14940 . -1) (undo-tree-id14942 . -1) (undo-tree-id14944 . -1) (undo-tree-id14946 . -1) (undo-tree-id14948 . -1) (undo-tree-id14950 . -1) (undo-tree-id14952 . -1) (undo-tree-id14954 . -1) (undo-tree-id14956 . -1) (undo-tree-id14958 . -1) (undo-tree-id14960 . -1) (undo-tree-id14962 . -1) (undo-tree-id14964 . -1) (undo-tree-id14966 . -1) (undo-tree-id14968 . -1) (#("e" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68890) (undo-tree-id14970 . -1) (undo-tree-id14972 . -1) (undo-tree-id14974 . -1) (undo-tree-id14976 . -1) (undo-tree-id14978 . -1) (undo-tree-id14980 . -1) (undo-tree-id14982 . -1) (undo-tree-id14983 . -1) (undo-tree-id14984 . -1) (undo-tree-id14986 . -1) (undo-tree-id14988 . -1) (undo-tree-id14990 . -1) (undo-tree-id14992 . -1) (undo-tree-id14994 . -1) (undo-tree-id14996 . -1) (undo-tree-id14998 . -1) (undo-tree-id15000 . -1) (undo-tree-id15002 . -1) (undo-tree-id15004 . -1) (undo-tree-id15006 . -1) (undo-tree-id15008 . -1) (undo-tree-id15010 . -1) (undo-tree-id15012 . -1) (undo-tree-id15014 . -1) (undo-tree-id15016 . -1) (undo-tree-id15018 . -1) (undo-tree-id15020 . -1) (undo-tree-id15022 . -1) (undo-tree-id15024 . -1) (undo-tree-id15026 . -1) (undo-tree-id15028 . -1) (undo-tree-id15030 . -1) (undo-tree-id15032 . -1) (undo-tree-id15034 . -1) (#("s" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68891) (undo-tree-id15036 . -1) (undo-tree-id15038 . -1) (undo-tree-id15040 . -1) (undo-tree-id15042 . -1) (undo-tree-id15044 . -1) (undo-tree-id15046 . -1) (undo-tree-id15048 . -1) (undo-tree-id15049 . -1) (undo-tree-id15050 . -1) (undo-tree-id15052 . -1) (undo-tree-id15054 . -1) (undo-tree-id15056 . -1) (undo-tree-id15058 . -1) (undo-tree-id15060 . -1) (undo-tree-id15062 . -1) (undo-tree-id15064 . -1) (undo-tree-id15066 . -1) (undo-tree-id15068 . -1) (undo-tree-id15070 . -1) (undo-tree-id15072 . -1) (undo-tree-id15074 . -1) (undo-tree-id15076 . -1) (undo-tree-id15078 . -1) (undo-tree-id15080 . -1) (undo-tree-id15082 . -1) (undo-tree-id15084 . -1) (undo-tree-id15086 . -1) (undo-tree-id15088 . -1) (undo-tree-id15090 . -1) (undo-tree-id15092 . -1) (#("." 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68892) (undo-tree-id15094 . -1) (undo-tree-id15096 . -1) (undo-tree-id15098 . -1) (undo-tree-id15100 . -1) (undo-tree-id15102 . -1) (undo-tree-id15104 . -1) (undo-tree-id15106 . -1) (undo-tree-id15107 . -1) (undo-tree-id15108 . -1) (undo-tree-id15110 . -1) (undo-tree-id15112 . -1) (undo-tree-id15114 . -1) (undo-tree-id15116 . -1) (undo-tree-id15118 . -1) (undo-tree-id15120 . -1) (undo-tree-id15122 . -1) (undo-tree-id15124 . -1) (undo-tree-id15126 . -1) (undo-tree-id15128 . -1) (undo-tree-id15130 . -1) (undo-tree-id15132 . -1) (undo-tree-id15134 . -1) (undo-tree-id15136 . -1) (undo-tree-id15138 . -1) (undo-tree-id15140 . -1) (undo-tree-id15142 . -1) (#("o" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68893) (undo-tree-id15144 . -1) (undo-tree-id15146 . -1) (undo-tree-id15148 . -1) (undo-tree-id15150 . -1) (undo-tree-id15152 . -1) (undo-tree-id15154 . -1) (undo-tree-id15156 . -1) (undo-tree-id15157 . -1) (undo-tree-id15158 . -1) (undo-tree-id15160 . -1) (undo-tree-id15162 . -1) (undo-tree-id15164 . -1) (undo-tree-id15166 . -1) (undo-tree-id15168 . -1) (undo-tree-id15170 . -1) (undo-tree-id15172 . -1) (undo-tree-id15174 . -1) (undo-tree-id15176 . -1) (undo-tree-id15178 . -1) (undo-tree-id15180 . -1) (undo-tree-id15182 . -1) (undo-tree-id15184 . -1) (#("r" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68894) (undo-tree-id15186 . -1) (undo-tree-id15188 . -1) (undo-tree-id15190 . -1) (undo-tree-id15192 . -1) (undo-tree-id15194 . -1) (undo-tree-id15196 . -1) (undo-tree-id15198 . -1) (undo-tree-id15199 . -1) (undo-tree-id15200 . -1) (undo-tree-id15202 . -1) (undo-tree-id15204 . -1) (undo-tree-id15206 . -1) (undo-tree-id15208 . -1) (undo-tree-id15210 . -1) (undo-tree-id15212 . -1) (undo-tree-id15214 . -1) (undo-tree-id15216 . -1) (undo-tree-id15218 . -1) 68895 (#("g" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -68895) (undo-tree-id15220 . -1) (undo-tree-id15222 . -1) (undo-tree-id15224 . -1) (undo-tree-id15226 . -1) (undo-tree-id15228 . -1) (undo-tree-id15230 . -1) 68896 (t 25147 27779 77470 116000)) ((68858 . 68896) (68857 . 68859)) (25147 27911 845385 681000) 0 nil])
([nil nil ((68992 . 72312) (#("
(defun zetteldesk-has-note-p (refs)
  \"Helper function for use in `zetteldesk-note-refs-p'.

Iterates over REFS which is a list of items and for each item
checks if it is a list and if it is, checks if its car is
\\\"=has-note=\\\" and if so collects it.\"
  (cl-loop for item in refs
	   if (listp item)
	   if (assoc \"=has-note=\" (list item))
	   collect item))

(defun zetteldesk-note-refs-p ()
  \"Predicate function that finds all bibtex completion candidates with a note.

Uses `zetteldesk-has-note-p' to find all
bibtex-completion-candidates that have a note.\"
  (cl-loop for ref in (bibtex-completion-candidates)
	   if (zetteldesk-has-note-p ref)
	   collect ref))

(defun org-roam-node-read--completions* (node-list &optional filter-fn sort-fn)
  \"Runs `org-roam-node-read--completions' with NODE-LIST being a list of nodes.

Typically, the function takes `org-roam-node-list' as the initial
list of nodes and creates the alist `org-roam-node-read'
uses. However, it can be helpful to supply the list of nodes
yourself, when the predicate function used cannot be inferred
through a filter function of the form this function
takes. FILTER-FN and SORT-FN are the same as in
`org-roam-node-read--completions'. The resulting alist is to be
used with `org-roam-node-read*'.\"
  (let* ((template (org-roam-node--process-display-format org-roam-node-display-template))
         (nodes node-list)
         (nodes (mapcar (lambda (node)
                          (org-roam-node-read--to-candidate node template)) nodes))
         (nodes (if filter-fn
                    (cl-remove-if-not
                     (lambda (n) (funcall filter-fn (cdr n)))
                     nodes)
                  nodes))
         (sort-fn (or sort-fn
                      (when org-roam-node-default-sort
                        (intern (concat \"org-roam-node-read-sort-by-\"
                                        (symbol-name org-roam-node-default-sort))))))
         (nodes (if sort-fn (seq-sort sort-fn nodes)
                  nodes)))
    nodes))

(defun org-roam-node-read* (node-list &optional initial-input filter-fn sort-fn require-match prompt)
  \"Runs `org-roam-node-read' with the nodes supplied by NODE-LIST.

NODE-LIST is a list of nodes passed to
`org-roam-node-read--completions*', which creates an alist of
nodes with the proper formatting to be used in this
function. This is for those cases where it is helpful to use your
own list of nodes, because a predicate function can not filter
them in the way you want easily.\"
  (let* ((nodes (org-roam-node-read--completions* node-list filter-fn sort-fn))
         (prompt (or prompt \"Node: \"))
         (node (completing-read
                prompt
                (lambda (string pred action)
                  (if (eq action 'metadata)
                      `(metadata
                        ;; Preserve sorting in the completion UI if a sort-fn is used
                        ,@(when sort-fn
                            '((display-sort-function . identity)
                              (cycle-sort-function . identity)))
                        (annotation-function
                         . ,(lambda (title)
                              (funcall org-roam-node-annotation-function
                                       (get-text-property 0 'node title))))
                        (category . org-roam-node))
                    (complete-with-action action nodes string pred)))
                nil require-match initial-input 'org-roam-node-history)))
    (or (cdr (assoc node nodes))
        (org-roam-node-create :title node))))

" 0 1 (fontified nil font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line) 1 2 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 7 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 7 8 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8 29 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 29 39 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 39 68 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 68 90 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 90 216 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 216 217 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 217 225 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 225 226 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 226 252 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 252 256 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 256 263 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 263 315 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 315 316 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 316 317 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 317 325 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 325 326 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 326 327 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 327 362 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 362 367 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 367 368 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 368 390 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 390 396 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 396 480 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 480 501 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 501 562 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 562 566 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 566 573 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 573 671 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 671 676 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 676 677 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 677 709 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 709 721 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 721 730 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 730 752 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 752 759 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 759 790 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 790 862 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 862 880 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 880 934 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 934 952 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 952 1178 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1178 1209 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1209 1252 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1252 1271 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1271 1274 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1274 1278 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1278 1282 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1282 1418 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1418 1424 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1424 1508 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1508 1515 (fontified nil font-lock-fontified t help-echo "Hidden behind deeper element; move to another line?" src-block t font-lock-multiline t face (font-lock-warning-face org-block)) 1515 1533 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1533 1535 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1535 1606 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1606 1612 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1612 1719 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1719 1721 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1721 1753 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1753 1757 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1757 1825 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1825 1854 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1854 1958 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1958 1960 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1960 2035 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2035 2040 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2040 2041 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2041 2060 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 2060 2072 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2072 2081 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 2081 2138 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2138 2145 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2145 2163 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2163 2244 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2244 2276 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2276 2519 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2519 2523 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2523 2527 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2527 2618 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2618 2620 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2620 2628 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2628 2636 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2636 2711 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2711 2717 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2717 2758 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2758 2760 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2760 2840 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2840 2843 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2843 2902 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 2902 2929 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2929 2933 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2933 3146 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3146 3152 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3152 3511 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3511 3513 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3513 3569 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3569 3575 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 3575 3584 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 3584 3585 (fontified nil rear-nonsticky t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 3585 3586 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 68992) (undo-tree-id0 . -2520) (undo-tree-id1 . -3585) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . 1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -3584) (undo-tree-id162 . -3585) (undo-tree-id163 . -1) (undo-tree-id164 . -3586) (undo-tree-id165 . -3585) (undo-tree-id166 . -3585) (undo-tree-id167 . -3585) (undo-tree-id168 . -3585) (undo-tree-id169 . -3585) (undo-tree-id170 . -3585) (undo-tree-id171 . -3585) (undo-tree-id172 . -3585) (undo-tree-id173 . -3585) (undo-tree-id174 . -3585) (undo-tree-id175 . -3585) (undo-tree-id176 . -3585) (undo-tree-id177 . -3585) (undo-tree-id178 . -2520) (undo-tree-id179 . -3585) (undo-tree-id180 . -3585) (undo-tree-id181 . -2520) (undo-tree-id182 . -3585) (undo-tree-id183 . -3585) (undo-tree-id184 . -2520) (undo-tree-id185 . -3585) (undo-tree-id186 . -3585) (undo-tree-id187 . -2520) (undo-tree-id188 . -3585) (undo-tree-id189 . -3585) (undo-tree-id190 . -3585) (undo-tree-id191 . -3585) (undo-tree-id192 . -3585) (undo-tree-id193 . -3585) (undo-tree-id194 . -3585) (undo-tree-id195 . -3585) (undo-tree-id196 . -2520) (undo-tree-id197 . -3585) (undo-tree-id198 . -3585) (undo-tree-id199 . -2520) (undo-tree-id200 . -3585) (undo-tree-id201 . -3585) (undo-tree-id202 . -3585) (undo-tree-id203 . -3585) (undo-tree-id204 . -3585) (undo-tree-id205 . -3585) (undo-tree-id206 . -3585) (undo-tree-id207 . -3585) (undo-tree-id208 . -3585) (undo-tree-id209 . -3585) (undo-tree-id210 . -3585) (undo-tree-id211 . -3585) (undo-tree-id212 . -3585) (undo-tree-id213 . -3585) (undo-tree-id214 . -2243) (undo-tree-id215 . -3585) (undo-tree-id216 . -3585) (undo-tree-id217 . -3585) (undo-tree-id218 . -3585) (undo-tree-id219 . -3585) (undo-tree-id220 . -3585) (undo-tree-id221 . -3585) (undo-tree-id222 . -3585) (undo-tree-id223 . -3585) (undo-tree-id224 . -3585) (undo-tree-id225 . -3585) (undo-tree-id226 . -3585) (undo-tree-id227 . -3585) (undo-tree-id228 . -3585) (undo-tree-id229 . -2033) (undo-tree-id230 . -3585) (undo-tree-id231 . -3585) (undo-tree-id232 . -3585) (undo-tree-id233 . -3585) (undo-tree-id234 . -3585) (undo-tree-id235 . -3506) (undo-tree-id236 . -3506) (undo-tree-id237 . -1584) (undo-tree-id238 . -3506) (undo-tree-id239 . -3506) (undo-tree-id240 . -3506) (undo-tree-id241 . -3506) (undo-tree-id242 . -3506) (undo-tree-id243 . -2671) (undo-tree-id244 . -2671) (undo-tree-id245 . -830) (undo-tree-id246 . -2671) (undo-tree-id247 . -2671) (undo-tree-id248 . -2671) (undo-tree-id249 . -2671) (undo-tree-id250 . -2671) (undo-tree-id251 . -2671) (undo-tree-id252 . -2671) (undo-tree-id253 . -2671) (undo-tree-id254 . -2671) (undo-tree-id255 . -2671) (undo-tree-id256 . -2671) (undo-tree-id257 . -2671) (undo-tree-id258 . -1700) (undo-tree-id259 . -1700) (undo-tree-id260 . -93) (undo-tree-id261 . -1700) (undo-tree-id262 . -1700) (undo-tree-id263 . -1700) (undo-tree-id264 . -1700) (undo-tree-id265 . -1700) (undo-tree-id266 . -1700) (undo-tree-id267 . -1700) (undo-tree-id268 . -1700) (undo-tree-id269 . -1700) (undo-tree-id270 . -1700) (undo-tree-id271 . -1700) (undo-tree-id272 . -1700) (undo-tree-id273 . -1516) (undo-tree-id274 . -1516) (undo-tree-id275 . -1516) (undo-tree-id276 . -1516) (undo-tree-id277 . -1516) (undo-tree-id278 . -1516) (undo-tree-id279 . -1516) (undo-tree-id280 . -1516) (undo-tree-id281 . -1516) (undo-tree-id282 . -1516) (undo-tree-id283 . -1516) (undo-tree-id284 . -1516) (undo-tree-id285 . -1516) (undo-tree-id286 . -1516) (undo-tree-id287 . -954) (undo-tree-id288 . -954) (undo-tree-id289 . -954) (undo-tree-id290 . -954) (undo-tree-id291 . -954) (undo-tree-id292 . -954) (undo-tree-id293 . -954) (undo-tree-id294 . -954) (undo-tree-id295 . -954) (undo-tree-id296 . -954) (undo-tree-id297 . -954) (undo-tree-id298 . -954) (undo-tree-id299 . -954) (undo-tree-id300 . -954) (undo-tree-id301 . -360) (undo-tree-id302 . -360) (undo-tree-id303 . -360) (undo-tree-id304 . -360) (undo-tree-id305 . -360) (undo-tree-id306 . -360) (undo-tree-id307 . -360) (undo-tree-id308 . -360) (undo-tree-id309 . -360) (68991 . 68992) 68990) nil (25150 19470 663613 450000) 0 nil])
([nil nil ((66757 . 68938) (#("
     (defun zetteldesk-remark-mark (beg end)
       \"Wrapper for `org-remark-mark'.

     Calls the function with `org-remark-notes-file-name' being set to
     zetteldesk-margin-notes.org in the `org-roam-directory'\"
       (interactive (org-remark-region-or-word))
       (let ((org-remark-notes-file-name
	      (concat org-roam-directory \"zetteldesk-margin-notes.org\")))
	 (org-remark-mark beg end)))

     (defun zetteldesk-remark-highlight-advice
	 (beg end &optional id mode label face properties)
       \"Advice function to be used with `org-remark-highlight-mark'.

     If the current buffer isn't associated to a file, find the
     heading's title, associate it with an org-roam-node and find the
     file associated with that node. Then run the part of
     `org-remark-highlight-save' that wasn't ran if the buffer isn't
     associated with a file. This part is a call to
     `org-remark-highlight-save'.

     This is meant to be used when taking margin notes from the
     ,*zetteldesk-scratch* buffer. However, this will only work if the
     current heading's title is associated with a node. In this case
     org-remark will be able to associate the margin note with the
     node its related to.\"
       (unless buffer-file-name
	 (let* ((title (org-entry-get nil \"ITEM\"))
		(node (org-roam-node-from-title-or-alias title))
		(file (org-roam-node-file node))
		(ov (make-overlay beg end nil :front-advance)))
	   (org-remark-highlight-save file
				      beg end
				      (overlay-properties ov)
				      title))))

     (advice-add 'org-remark-highlight-mark :after #'zetteldesk-remark-highlight-advice)

     (defun zetteldesk-switch-to-margin-notes ()
       \"Helper function which goes to the zetteldesk-margin-notes file.

     If `org-remark-mark' is called through its wrapper function
     `zetteldesk-remark-mark', it sets `org-remark-notes-file-name' to
     a specific file, which is meant to be used with all margin notes
     coming from zetteldesk-scratch. This function switches to that
     file.\"
       (interactive)
       (switch-to-buffer-other-window ))

" 0 7 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7 12 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12 13 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 35 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 35 53 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 53 67 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 67 82 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 82 116 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 116 142 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 142 198 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 198 216 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 216 218 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 218 227 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 227 238 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 238 276 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 276 279 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 279 343 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 343 372 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 372 413 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 413 418 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 418 419 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 419 453 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 453 465 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 465 474 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 474 500 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 500 513 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 513 547 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 547 572 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 572 768 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 768 774 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 774 799 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 799 895 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 895 920 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 920 1221 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1221 1230 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1230 1236 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1236 1254 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1254 1257 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1257 1261 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1261 1268 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1268 1289 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1289 1295 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1295 1416 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1416 1430 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1430 1587 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1587 1593 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1593 1639 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1639 1644 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1644 1645 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1645 1678 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 1678 1689 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1689 1754 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1754 1764 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1764 1779 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1779 1826 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1826 1848 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1848 1860 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1860 1886 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1886 2040 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2040 2049 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2049 2060 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2060 2100 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2100 2104 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 66757) (undo-tree-id6272 . -2102) (undo-tree-id6273 . 4) (undo-tree-id6274 . -1254) (undo-tree-id6275 . -2099) (undo-tree-id6276 . -2102) (undo-tree-id6277 . 1) (undo-tree-id6278 . -2102) (undo-tree-id6279 . -2102) (undo-tree-id6280 . -1470) (undo-tree-id6281 . -1470) (undo-tree-id6282 . -1254) (undo-tree-id6283 . -1470) (undo-tree-id6284 . -2090) (undo-tree-id6285 . -2090) (undo-tree-id6286 . -1254) (undo-tree-id6287 . -2090) (undo-tree-id6288 . -2090) (undo-tree-id6289 . -1254) (undo-tree-id6291 . -2099) (undo-tree-id6293 . -2099) (undo-tree-id6294 . -2099) (undo-tree-id6295 . -1254) (undo-tree-id6297 . -2099) (undo-tree-id6299 . -2099) (undo-tree-id6301 . -2099) (undo-tree-id6303 . -2099) (undo-tree-id6305 . -2099) (undo-tree-id6307 . -2099) (undo-tree-id6309 . -2099) (undo-tree-id6310 . -2099) (undo-tree-id6311 . -1254) (undo-tree-id6313 . -2099) (undo-tree-id6315 . -2099) (undo-tree-id6317 . -2099) (undo-tree-id6319 . -2099) (undo-tree-id6321 . -2099) (undo-tree-id6323 . -2099) (undo-tree-id6325 . -2099) (undo-tree-id6327 . -2099) (undo-tree-id6329 . -2099) (undo-tree-id6331 . -2099) (undo-tree-id6333 . -2099) (undo-tree-id6334 . -2099) (undo-tree-id6335 . -1254) (undo-tree-id6337 . -2099) (undo-tree-id6339 . -2099) (undo-tree-id6341 . -2099) (undo-tree-id6343 . -2099) (undo-tree-id6345 . -2099) (undo-tree-id6347 . -2099) (undo-tree-id6349 . -2099) (undo-tree-id6351 . -2099) (undo-tree-id6353 . -2099) (undo-tree-id6355 . -2099) (undo-tree-id6357 . -2099) (undo-tree-id6359 . -2099) (undo-tree-id6361 . -2099) (undo-tree-id6363 . -2099) (undo-tree-id6365 . -2099) (undo-tree-id6367 . -2099) (undo-tree-id6369 . -2099) (undo-tree-id6371 . -2099) (undo-tree-id6373 . -2099) (undo-tree-id6375 . -2099) (undo-tree-id6377 . -2099) (undo-tree-id6379 . -2099) (undo-tree-id6381 . -2099) (undo-tree-id6383 . -2099) (undo-tree-id6385 . -2099) (undo-tree-id6387 . -2099) (undo-tree-id6389 . -2099) (undo-tree-id6391 . -2099) (undo-tree-id6393 . -2099) (undo-tree-id6395 . -2099) (undo-tree-id6397 . -2099) (undo-tree-id6399 . -2099) (undo-tree-id6401 . -2099) (undo-tree-id6403 . -2099) (undo-tree-id6405 . -2099) (undo-tree-id6407 . -2099) (undo-tree-id6409 . -2099) (undo-tree-id6411 . -2099) (undo-tree-id6412 . -2099) (undo-tree-id6413 . -2099) (undo-tree-id6414 . -1254) (undo-tree-id6416 . -2099) (undo-tree-id6418 . -2099) (undo-tree-id6420 . -2099) (undo-tree-id6422 . -2099) (undo-tree-id6424 . -2099) (undo-tree-id6426 . -2099) (undo-tree-id6428 . -2099) (undo-tree-id6430 . -2099) (undo-tree-id6432 . -2099) (undo-tree-id6434 . -2099) (undo-tree-id6436 . -2099) (undo-tree-id6438 . -2099) (undo-tree-id6440 . -2099) (undo-tree-id6442 . -2099) (undo-tree-id6444 . -2099) (undo-tree-id6446 . -2099) (undo-tree-id6448 . -2099) (undo-tree-id6450 . -2099) (undo-tree-id6452 . -2099) (undo-tree-id6454 . -2099) (undo-tree-id6456 . -2099) (undo-tree-id6458 . -2099) (undo-tree-id6460 . -2099) (undo-tree-id6462 . -2099) (undo-tree-id6464 . -1470) (undo-tree-id6465 . -1470) (undo-tree-id6466 . -768) (undo-tree-id6467 . -1470) (undo-tree-id6468 . -1470) (undo-tree-id6469 . -768) (undo-tree-id6471 . -2099) (undo-tree-id6473 . -2099) (undo-tree-id6475 . -2099) (undo-tree-id6477 . -2099) (undo-tree-id6479 . -2099) (undo-tree-id6481 . -2099) (undo-tree-id6483 . -2099) (undo-tree-id6485 . -2099) (undo-tree-id6487 . -2099) (undo-tree-id6489 . -2099) (undo-tree-id6491 . -2099) (undo-tree-id6493 . -2099) (undo-tree-id6495 . -2099) (undo-tree-id6497 . -2099) (undo-tree-id6499 . -2099) (undo-tree-id6501 . -2099) (undo-tree-id6503 . -2099) (undo-tree-id6505 . -2099) (undo-tree-id6507 . -2099) (undo-tree-id6509 . -2099) (undo-tree-id6511 . -2099) (undo-tree-id6513 . -2099) (undo-tree-id6515 . -2099) (undo-tree-id6517 . -2099) (undo-tree-id6519 . -2099) (undo-tree-id6521 . -2099) (undo-tree-id6523 . -2099) (undo-tree-id6525 . -2099) (undo-tree-id6527 . -2099) (undo-tree-id6529 . -2099) (undo-tree-id6531 . -2099) (undo-tree-id6533 . -2099) (undo-tree-id6535 . -2099) (undo-tree-id6537 . -2099) (undo-tree-id6539 . -2099) (undo-tree-id6541 . -2099) (undo-tree-id6543 . -2099) (undo-tree-id6545 . -2099) (undo-tree-id6547 . -2099) (undo-tree-id6549 . -2099) (undo-tree-id6551 . -2099) (undo-tree-id6553 . -2099) (undo-tree-id6555 . -2099) (undo-tree-id6557 . -2099) (undo-tree-id6559 . -2099) (undo-tree-id6561 . -2099) (undo-tree-id6563 . -2099) (undo-tree-id6565 . -2099) (undo-tree-id6567 . -2099) (undo-tree-id6569 . -2099) (undo-tree-id6571 . -2099) (undo-tree-id6573 . -2099) (undo-tree-id6575 . -2099) (undo-tree-id6577 . -2099) (undo-tree-id6579 . -2099) (undo-tree-id6581 . -2099) (undo-tree-id6583 . -2099) (undo-tree-id6585 . -2099) (undo-tree-id6587 . -2099) (undo-tree-id6589 . -2099) (undo-tree-id6591 . -2099) (undo-tree-id6593 . -2099) (undo-tree-id6594 . -2061) (undo-tree-id6595 . -2061) (undo-tree-id6597 . -2102) (undo-tree-id6599 . -2102) (undo-tree-id6601 . -2102) (undo-tree-id6603 . -2102) (undo-tree-id6605 . -2102) (undo-tree-id6606 . -2102) (undo-tree-id6607 . -2099) (undo-tree-id6609 . -2102) (undo-tree-id6611 . -2102) (undo-tree-id6613 . -2102) (undo-tree-id6615 . -2102) (undo-tree-id6617 . -2102) (undo-tree-id6619 . -2102) (undo-tree-id6621 . -2102) (undo-tree-id6622 . -2102) (undo-tree-id6623 . -2102) (undo-tree-id6624 . -768) (undo-tree-id6625 . -2102) (undo-tree-id6626 . -2102) (undo-tree-id6627 . -768) (undo-tree-id6628 . -2102) (undo-tree-id6629 . -2102) (undo-tree-id6630 . -768) (undo-tree-id6631 . -2102) (undo-tree-id6632 . -2102) (undo-tree-id6633 . -768) (undo-tree-id6634 . -2102) (undo-tree-id6635 . -2102) (undo-tree-id6636 . -768) (undo-tree-id6637 . -2102) (undo-tree-id6638 . -2102) (undo-tree-id6639 . -768) (undo-tree-id6640 . -2090) (undo-tree-id6641 . -2089) (undo-tree-id6642 . -768) (undo-tree-id6644 . -2099) (undo-tree-id6646 . -2099) (undo-tree-id6648 . -2099) (undo-tree-id6650 . -2099) (undo-tree-id6652 . -2099) (undo-tree-id6654 . -2099) (undo-tree-id6656 . -2099) (undo-tree-id6658 . -2099) (undo-tree-id6660 . -2099) (undo-tree-id6662 . -2099) (undo-tree-id6664 . -2099) (undo-tree-id6666 . -2099) (undo-tree-id6668 . -2099) (undo-tree-id6670 . -2099) (undo-tree-id6672 . -2099) (undo-tree-id6674 . -2099) (undo-tree-id6676 . -2099) (undo-tree-id6678 . -2099) (undo-tree-id6680 . -2099) (undo-tree-id6682 . -2099) (undo-tree-id6684 . -2099) (undo-tree-id6686 . -2099) (undo-tree-id6688 . -2099) (undo-tree-id6690 . -2099) (undo-tree-id6692 . -2099) (undo-tree-id6694 . -2099) (undo-tree-id6696 . -2099) (undo-tree-id6698 . -2099) (undo-tree-id6700 . -2099) (undo-tree-id6702 . -2099) (undo-tree-id6704 . -2099) (undo-tree-id6706 . -2099) (undo-tree-id6708 . -2099) (undo-tree-id6710 . -2099) (undo-tree-id6712 . -2099) (undo-tree-id6714 . -2099) (undo-tree-id6716 . -2099) (undo-tree-id6718 . -2099) (undo-tree-id6720 . -2099) (undo-tree-id6722 . -2099) (undo-tree-id6724 . -2099) (undo-tree-id6726 . -2099) (undo-tree-id6728 . -2099) (undo-tree-id6730 . -2099) (undo-tree-id6732 . -2099) (undo-tree-id6734 . -2099) (undo-tree-id6736 . -2099) (undo-tree-id6738 . -2099) (undo-tree-id6740 . -2099) (undo-tree-id6742 . -2099) (undo-tree-id6744 . -2099) (undo-tree-id6746 . -2099) (undo-tree-id6748 . -2099) (undo-tree-id6750 . -2099) (undo-tree-id6752 . -2099) (undo-tree-id6754 . -2099) (undo-tree-id6756 . -2099) (undo-tree-id6758 . -2099) (undo-tree-id6760 . -2099) (undo-tree-id6762 . -2099) (undo-tree-id6764 . -2099) (undo-tree-id6766 . -2099) (undo-tree-id6768 . -2099) (undo-tree-id6770 . -2099) (undo-tree-id6772 . -2099) (undo-tree-id6774 . -2099) (undo-tree-id6776 . -2099) (undo-tree-id6778 . -2099) (undo-tree-id6780 . -2099) (undo-tree-id6782 . -2099) (undo-tree-id6784 . -2099) (undo-tree-id6786 . -2099) (undo-tree-id6788 . -2099) (undo-tree-id6790 . -2099) (undo-tree-id6792 . -2099) (undo-tree-id6794 . -2099) (undo-tree-id6796 . -2099) (undo-tree-id6798 . -2099) (undo-tree-id6800 . -2099) (undo-tree-id6802 . -2099) (undo-tree-id6804 . -2099) (undo-tree-id6806 . -2099) (undo-tree-id6808 . -2099) (undo-tree-id6810 . -2099) (undo-tree-id6812 . -2099) (undo-tree-id6814 . -2099) (undo-tree-id6816 . -2099) (undo-tree-id6818 . -2099) (undo-tree-id6820 . -2099) (undo-tree-id6822 . -2099) (undo-tree-id6824 . -2099) (undo-tree-id6826 . -2099) (undo-tree-id6828 . -2099) (undo-tree-id6830 . -2099) (undo-tree-id6832 . -2099) (undo-tree-id6834 . -2099) (undo-tree-id6836 . -2099) (undo-tree-id6838 . -2099) (undo-tree-id6840 . -2099) (undo-tree-id6842 . -2099) (undo-tree-id6844 . -2099) (undo-tree-id6846 . -2099) (undo-tree-id6848 . -2099) (undo-tree-id6850 . -2099) (undo-tree-id6852 . -2099) (undo-tree-id6854 . -2099) (undo-tree-id6856 . -2099) (undo-tree-id6858 . -2099) (undo-tree-id6860 . -2099) (undo-tree-id6862 . -2099) (undo-tree-id6864 . -2099) (undo-tree-id6866 . -2099) (undo-tree-id6868 . -2099) (undo-tree-id6870 . -2099) (undo-tree-id6872 . -2099) (undo-tree-id6874 . -2099) (undo-tree-id6876 . -2099) (undo-tree-id6878 . -2099) (undo-tree-id6880 . -2099) (undo-tree-id6882 . -2099) (undo-tree-id6883 . -2102) (undo-tree-id6885 . -2102) (undo-tree-id6887 . -2102) (undo-tree-id6889 . -2102) (undo-tree-id6891 . -2102) (undo-tree-id6892 . -2102) (undo-tree-id6894 . -2102) (undo-tree-id6896 . -2102) (undo-tree-id6898 . -2102) (undo-tree-id6900 . -2102) (undo-tree-id6902 . -2100) (undo-tree-id6904 . -2100) (undo-tree-id6906 . -2100) (undo-tree-id6908 . -2100) (undo-tree-id6910 . -2100) (undo-tree-id6912 . -2100) (undo-tree-id6914 . -2100) (undo-tree-id6916 . -2100) (undo-tree-id6918 . -2100) (undo-tree-id6920 . -2100) (undo-tree-id6922 . -2100) (undo-tree-id6924 . -2100) (undo-tree-id6926 . -2100) (undo-tree-id6928 . -2100) (undo-tree-id6930 . -2100) (undo-tree-id6932 . -2100) (undo-tree-id6934 . -2100) (undo-tree-id6936 . -2102) (undo-tree-id6938 . -2101) (undo-tree-id6940 . -2101) (undo-tree-id6942 . -1254) (undo-tree-id6944 . -2101) (undo-tree-id6946 . -2101) (undo-tree-id6948 . -2101) (undo-tree-id6950 . -2101) (undo-tree-id6952 . -2101) (undo-tree-id6954 . -2101) (undo-tree-id6956 . -2101) (undo-tree-id6958 . -2101) (undo-tree-id6960 . -2101) (undo-tree-id6962 . -2101) (undo-tree-id6964 . -2101) (undo-tree-id6966 . -2101) (undo-tree-id6967 . -2101) (undo-tree-id6968 . -1254) (undo-tree-id6970 . -2101) (undo-tree-id6972 . -2101) (undo-tree-id6974 . -2101) (undo-tree-id6976 . -2101) (undo-tree-id6978 . -2101) (undo-tree-id6980 . -2101) (undo-tree-id6982 . -2101) (undo-tree-id6984 . -2101) (undo-tree-id6986 . -2101) (undo-tree-id6988 . -2101) (undo-tree-id6990 . -2101) (undo-tree-id6992 . -2101) (undo-tree-id6994 . -2101) (undo-tree-id6996 . -2101) (undo-tree-id6998 . -2101) (undo-tree-id7000 . -2101) (undo-tree-id7002 . -2101) (undo-tree-id7004 . -2101) (undo-tree-id7006 . -2101) (undo-tree-id7008 . -2101) (undo-tree-id7010 . -2101) (undo-tree-id7012 . -2101) (undo-tree-id7014 . -2101) (undo-tree-id7016 . -2101) (undo-tree-id7018 . -2101) (undo-tree-id7020 . -2101) (undo-tree-id7022 . -2101) (undo-tree-id7024 . -2101) (undo-tree-id7026 . -2101) (undo-tree-id7028 . -2101) (undo-tree-id7030 . -1254) (undo-tree-id7031 . -2101) (undo-tree-id7032 . -2101) (undo-tree-id7033 . -1254) (undo-tree-id7035 . -2101) (undo-tree-id7037 . -2101) (undo-tree-id7039 . -2101) (undo-tree-id7041 . -1254) (undo-tree-id7043 . -2101) (undo-tree-id7045 . -2101) (undo-tree-id7047 . -2101) (undo-tree-id7049 . -2101) (undo-tree-id7051 . -2101) (undo-tree-id7053 . -2101) (undo-tree-id7055 . -2101) (undo-tree-id7057 . -2101) (undo-tree-id7059 . -2101) (undo-tree-id7061 . -2101) (undo-tree-id7063 . -2101) (undo-tree-id7065 . -2101) (undo-tree-id7067 . -2101) (undo-tree-id7069 . -1254) (undo-tree-id7071 . -2101) (undo-tree-id7073 . -2101) (undo-tree-id7075 . -2101) (undo-tree-id7077 . -2101) (undo-tree-id7079 . -2101) (undo-tree-id7081 . -2101) (undo-tree-id7083 . -2101) (undo-tree-id7085 . -2101) (undo-tree-id7087 . -2101) (undo-tree-id7089 . -2101) (undo-tree-id7091 . -2101) (undo-tree-id7093 . -2101) (undo-tree-id7095 . -2101) (undo-tree-id7097 . -2101) (undo-tree-id7099 . -2101) (undo-tree-id7101 . -2101) (undo-tree-id7103 . -2101) (undo-tree-id7105 . -2101) (undo-tree-id7107 . -2101) (undo-tree-id7109 . -2101) (undo-tree-id7111 . -2101) (undo-tree-id7113 . -2101) (undo-tree-id7115 . -2101) (undo-tree-id7117 . -2101) (undo-tree-id7119 . -2101) (undo-tree-id7121 . -2101) (undo-tree-id7123 . -2101) (undo-tree-id7125 . -1254) (undo-tree-id7127 . -2101) (undo-tree-id7129 . -2101) (undo-tree-id7131 . -2101) (undo-tree-id7133 . -1254) (undo-tree-id7135 . -2101) (undo-tree-id7137 . -2101) (undo-tree-id7139 . -2101) (undo-tree-id7141 . -2101) (undo-tree-id7143 . -2101) (undo-tree-id7145 . -2101) (undo-tree-id7147 . -2101) (undo-tree-id7149 . -2101) (undo-tree-id7150 . -2101) (undo-tree-id7151 . -1254) (undo-tree-id7153 . -2101) (undo-tree-id7155 . -2101) (undo-tree-id7157 . -2101) (undo-tree-id7159 . -2101) (undo-tree-id7161 . -2101) (undo-tree-id7163 . -2101) (undo-tree-id7165 . -2101) (undo-tree-id7167 . -2101) (undo-tree-id7169 . -2101) (undo-tree-id7171 . -2101) (undo-tree-id7173 . -2101) (undo-tree-id7175 . -2101) (undo-tree-id7177 . -2101) (undo-tree-id7179 . -2101) (undo-tree-id7181 . -2101) (undo-tree-id7183 . -2101) (undo-tree-id7185 . -2101) (undo-tree-id7187 . -2101) (undo-tree-id7189 . -2101) (undo-tree-id7191 . -2101) (undo-tree-id7193 . -2101) (undo-tree-id7195 . -2101) (undo-tree-id7197 . -2101) (undo-tree-id7199 . -2101) (undo-tree-id7201 . -1254) (undo-tree-id7202 . -2101) (undo-tree-id7203 . -2101) (undo-tree-id7204 . -1254) (undo-tree-id7206 . -2101) (undo-tree-id7208 . -2101) (undo-tree-id7210 . -2101) (undo-tree-id7212 . -1254) (undo-tree-id7214 . -2101) (undo-tree-id7216 . -2101) (undo-tree-id7218 . -2101) (undo-tree-id7220 . -2101) (undo-tree-id7222 . -2101) (undo-tree-id7224 . -2101) (undo-tree-id7226 . -2101) (undo-tree-id7228 . -2101) (undo-tree-id7230 . -2101) (undo-tree-id7232 . -2101) (undo-tree-id7234 . -2101) (undo-tree-id7236 . -2101) (undo-tree-id7238 . -2101) (undo-tree-id7240 . -1254) (undo-tree-id7242 . -2101) (undo-tree-id7244 . -2101) (undo-tree-id7246 . -2101) (undo-tree-id7248 . -2101) (undo-tree-id7250 . -2101) (undo-tree-id7252 . -2101) (undo-tree-id7254 . -2101) (undo-tree-id7256 . -2101) (undo-tree-id7258 . -2101) (undo-tree-id7260 . -2101) (undo-tree-id7262 . -2101) (undo-tree-id7264 . -2101) (undo-tree-id7266 . -2101) (undo-tree-id7268 . -2101) (undo-tree-id7270 . -2101) (undo-tree-id7272 . -2101) (undo-tree-id7274 . -2101) (undo-tree-id7276 . -2101) (undo-tree-id7278 . -2101) (undo-tree-id7280 . -2101) (undo-tree-id7282 . -2101) (undo-tree-id7284 . -2101) (undo-tree-id7286 . -2101) (undo-tree-id7288 . -2101) (undo-tree-id7290 . -2101) (undo-tree-id7292 . -2103) (undo-tree-id7294 . -2103) (undo-tree-id7296 . -2103) (undo-tree-id7298 . -2103) (undo-tree-id7300 . -2103) (undo-tree-id7302 . -2103) (undo-tree-id7304 . -1254) (undo-tree-id7306 . -2103) (undo-tree-id7308 . -2101) (undo-tree-id7310 . -2101) (undo-tree-id7312 . -2101) (undo-tree-id7314 . -2101) (undo-tree-id7316 . -2101) (undo-tree-id7318 . -2100) (undo-tree-id7320 . -1254) (undo-tree-id7322 . -2100) (undo-tree-id7324 . -2100) (undo-tree-id7326 . -2100) (undo-tree-id7328 . -1254) (undo-tree-id7330 . -2100) (undo-tree-id7332 . -2100) (undo-tree-id7334 . -1254) (undo-tree-id7336 . -2100) (undo-tree-id7338 . -2100) (undo-tree-id7340 . -2100) (undo-tree-id7342 . -2100) (undo-tree-id7343 . -2100) (undo-tree-id7344 . -1254) (undo-tree-id7346 . -2100) (undo-tree-id7348 . -2100) (undo-tree-id7350 . -2100) (undo-tree-id7352 . -2100) (undo-tree-id7354 . -2100) (undo-tree-id7356 . -2100) (undo-tree-id7358 . -2100) (undo-tree-id7360 . -2100) (undo-tree-id7362 . -2100) (undo-tree-id7364 . -2100) (undo-tree-id7366 . -1254) (undo-tree-id7368 . -2100) (undo-tree-id7370 . -2100) (undo-tree-id7372 . -2100) (undo-tree-id7374 . -2100) (undo-tree-id7376 . -1254) (undo-tree-id7378 . -2100) (undo-tree-id7380 . -2100) (undo-tree-id7382 . -2100) (undo-tree-id7384 . -2100) (undo-tree-id7386 . -1254) (undo-tree-id7388 . -2100) (undo-tree-id7390 . -2100) (undo-tree-id7392 . -2100) (undo-tree-id7394 . -2100) (undo-tree-id7396 . -1254) (undo-tree-id7398 . -2100) (undo-tree-id7400 . -2100) (undo-tree-id7402 . -2100) (undo-tree-id7404 . -2100) (undo-tree-id7406 . -1254) (undo-tree-id7408 . -2100) (undo-tree-id7410 . -2100) (undo-tree-id7412 . -2100) (undo-tree-id7414 . -2100) (undo-tree-id7416 . -1254) (undo-tree-id7418 . -2100) (undo-tree-id7420 . -2100) (undo-tree-id7422 . -2100) (undo-tree-id7424 . -2100) (undo-tree-id7426 . -1254) (undo-tree-id7428 . -2100) (undo-tree-id7430 . -2100) (undo-tree-id7432 . -2100) (undo-tree-id7434 . -2100) (undo-tree-id7436 . -1254) (undo-tree-id7438 . -2100) (undo-tree-id7440 . -2100) (undo-tree-id7442 . -2100) (undo-tree-id7444 . -2100) (undo-tree-id7446 . -1254) (undo-tree-id7448 . -2100) (undo-tree-id7450 . -2100) (undo-tree-id7452 . -2100) (undo-tree-id7454 . -2100) (undo-tree-id7456 . -1254) (undo-tree-id7458 . -2100) (undo-tree-id7460 . -2100) (undo-tree-id7462 . -2100) (undo-tree-id7464 . -2100) (undo-tree-id7466 . -1254) (undo-tree-id7468 . -2100) (undo-tree-id7470 . -2100) (undo-tree-id7472 . -2100) (undo-tree-id7474 . -2100) (undo-tree-id7476 . -1254) (undo-tree-id7478 . -2100) (undo-tree-id7480 . -2100) (undo-tree-id7482 . -2100) (undo-tree-id7484 . -2100) (undo-tree-id7486 . -1254) (undo-tree-id7488 . -2100) (undo-tree-id7490 . -2100) (undo-tree-id7492 . -2100) (undo-tree-id7494 . -2100) (undo-tree-id7496 . -1254) (undo-tree-id7498 . -2100) (undo-tree-id7500 . -2100) (undo-tree-id7502 . -2100) (undo-tree-id7504 . -2100) (undo-tree-id7506 . -1254) (undo-tree-id7508 . -2100) (undo-tree-id7510 . -2100) (undo-tree-id7512 . -2100) (undo-tree-id7514 . -2100) (undo-tree-id7516 . -1254) (undo-tree-id7518 . -2100) (undo-tree-id7520 . -2100) (undo-tree-id7522 . -2100) (undo-tree-id7524 . -2100) (undo-tree-id7526 . -1254) (undo-tree-id7528 . -2100) (undo-tree-id7530 . -2100) (undo-tree-id7532 . -2100) (undo-tree-id7534 . -2100) (undo-tree-id7536 . -1254) (undo-tree-id7538 . -2100) (undo-tree-id7540 . -2100) (undo-tree-id7542 . -2100) (undo-tree-id7544 . -2100) (undo-tree-id7546 . -1254) (undo-tree-id7548 . -2100) (undo-tree-id7550 . -2100) (undo-tree-id7552 . -2100) (undo-tree-id7554 . -2100) (undo-tree-id7556 . -1254) (undo-tree-id7558 . -2100) (undo-tree-id7560 . -2100) (undo-tree-id7562 . -2100) (undo-tree-id7564 . -2100) (undo-tree-id7566 . -1254) (undo-tree-id7568 . -2100) (undo-tree-id7570 . -2100) (undo-tree-id7572 . -2100) (undo-tree-id7574 . -2100) (undo-tree-id7576 . -1254) (undo-tree-id7578 . -2100) (undo-tree-id7580 . -2100) (undo-tree-id7582 . -2100) (undo-tree-id7584 . -2100) (undo-tree-id7586 . -1254) (undo-tree-id7588 . -2100) (undo-tree-id7590 . -2100) (undo-tree-id7592 . -2100) (undo-tree-id7594 . -2100) (undo-tree-id7596 . -1254) (undo-tree-id7598 . -2100) (undo-tree-id7600 . -2100) (undo-tree-id7602 . -2100) (undo-tree-id7604 . -2100) (undo-tree-id7606 . -1254) (undo-tree-id7608 . -2100) (undo-tree-id7610 . -2100) (undo-tree-id7612 . -2100) (undo-tree-id7614 . -2100) (undo-tree-id7616 . -1254) (undo-tree-id7618 . -2100) (undo-tree-id7620 . -2100) (undo-tree-id7622 . -2100) (undo-tree-id7624 . -2100) (undo-tree-id7626 . -1254) (undo-tree-id7628 . -2100) (undo-tree-id7630 . -2100) (undo-tree-id7632 . -2100) (undo-tree-id7634 . -2100) (undo-tree-id7636 . -1254) (undo-tree-id7638 . -2100) (undo-tree-id7640 . -2100) (undo-tree-id7642 . -2100) (undo-tree-id7644 . -2100) (undo-tree-id7646 . -1254) (undo-tree-id7648 . -2100) (undo-tree-id7650 . -2100) (undo-tree-id7652 . -2100) (undo-tree-id7654 . -2100) (undo-tree-id7656 . -1254) (undo-tree-id7658 . -2100) (undo-tree-id7660 . -2100) (undo-tree-id7662 . -2100) (undo-tree-id7664 . -2100) (undo-tree-id7666 . -1254) (undo-tree-id7668 . -2100) (undo-tree-id7670 . -2100) (undo-tree-id7672 . -2100) (undo-tree-id7674 . -2100) (undo-tree-id7676 . -1254) (undo-tree-id7678 . -2100) (undo-tree-id7680 . -2100) (undo-tree-id7682 . -2100) (undo-tree-id7684 . -2100) (undo-tree-id7686 . -1254) (undo-tree-id7688 . -2100) (undo-tree-id7690 . -2100) (undo-tree-id7692 . -2100) (undo-tree-id7694 . -2100) (undo-tree-id7696 . -1254) (undo-tree-id7698 . -2100) (undo-tree-id7700 . -2100) (undo-tree-id7702 . -2100) (undo-tree-id7704 . -2100) (undo-tree-id7706 . -1254) (undo-tree-id7708 . -2100) (undo-tree-id7710 . -2100) (undo-tree-id7712 . -2100) (undo-tree-id7714 . -2100) (undo-tree-id7716 . -1254) (undo-tree-id7718 . -2100) (undo-tree-id7720 . -2100) (undo-tree-id7722 . -2100) (undo-tree-id7724 . -2100) (undo-tree-id7726 . -1254) (undo-tree-id7728 . -2100) (undo-tree-id7730 . -2100) (undo-tree-id7732 . -2100) (undo-tree-id7734 . -2100) (undo-tree-id7736 . -1254) (undo-tree-id7738 . -2100) (undo-tree-id7740 . -2100) (undo-tree-id7742 . -2100) (undo-tree-id7744 . -2099) (undo-tree-id7746 . -2099) (undo-tree-id7748 . -2099) (undo-tree-id7750 . -2099) (undo-tree-id7752 . -2099) (undo-tree-id7754 . -2099) (undo-tree-id7756 . -2099) (undo-tree-id7758 . -2099) (undo-tree-id7760 . -2099) (undo-tree-id7762 . -2099) (undo-tree-id7764 . -1254) (undo-tree-id7766 . -2099) (undo-tree-id7768 . -1254) (undo-tree-id7770 . -2099) (undo-tree-id7772 . -2099) (undo-tree-id7774 . -2099) (undo-tree-id7776 . -2099) (undo-tree-id7778 . -2099) (undo-tree-id7780 . -2099) (undo-tree-id7782 . -2099) (undo-tree-id7784 . -2099) (undo-tree-id7786 . -2099) (undo-tree-id7788 . -2099) (undo-tree-id7790 . -2099) (undo-tree-id7792 . -2099) (undo-tree-id7794 . -1254) (undo-tree-id7795 . -2099) (undo-tree-id7796 . -2099) (undo-tree-id7797 . -1254) (undo-tree-id7799 . -2099) (undo-tree-id7801 . -2099) (undo-tree-id7803 . -1254) (undo-tree-id7805 . -2099) (undo-tree-id7807 . -2099) (undo-tree-id7809 . -2099) (undo-tree-id7811 . -2099) (undo-tree-id7813 . -2099) (undo-tree-id7815 . -2099) (undo-tree-id7817 . -2099) (undo-tree-id7819 . -2099) (undo-tree-id7821 . -2099) (undo-tree-id7823 . -1254) (undo-tree-id7825 . -2099) (undo-tree-id7827 . -2099) (undo-tree-id7829 . -1254) (undo-tree-id7831 . -2099) (undo-tree-id7833 . -2099) (undo-tree-id7835 . -1254) (undo-tree-id7837 . -2099) (undo-tree-id7839 . -2099) (undo-tree-id7841 . -1254) (undo-tree-id7843 . -2099) (undo-tree-id7845 . -2099) (undo-tree-id7847 . -1254) (undo-tree-id7849 . -2099) (undo-tree-id7851 . -2099) (undo-tree-id7853 . -1254) (undo-tree-id7855 . -2099) (undo-tree-id7857 . -2099) (undo-tree-id7859 . -1254) (undo-tree-id7861 . -2099) (undo-tree-id7863 . -2099) (undo-tree-id7865 . -1254) (undo-tree-id7867 . -2099) (undo-tree-id7869 . -2099) (undo-tree-id7871 . -1254) (undo-tree-id7873 . -2099) (undo-tree-id7875 . -2099) (undo-tree-id7877 . -1254) (undo-tree-id7879 . -2099) (undo-tree-id7881 . -2099) (undo-tree-id7883 . -1254) (undo-tree-id7885 . -2099) (undo-tree-id7887 . -2099) (undo-tree-id7889 . -1254) (undo-tree-id7891 . -2099) (undo-tree-id7893 . -2099) (undo-tree-id7895 . -1254) (undo-tree-id7897 . -2099) (undo-tree-id7899 . -2099) (undo-tree-id7901 . -1254) (undo-tree-id7903 . -2099) (undo-tree-id7905 . -2099) (undo-tree-id7907 . -1254) (undo-tree-id7909 . -2099) (undo-tree-id7911 . -2099) (undo-tree-id7913 . -1254) (undo-tree-id7915 . -2099) (undo-tree-id7917 . -2099) (undo-tree-id7919 . -1254) (undo-tree-id7921 . -2099) (undo-tree-id7923 . -2099) (undo-tree-id7925 . -1254) (undo-tree-id7927 . -2099) (undo-tree-id7929 . -2099) (undo-tree-id7931 . -1254) (undo-tree-id7933 . -2099) (undo-tree-id7935 . -2099) (undo-tree-id7937 . -1254) (undo-tree-id7939 . -2099) (undo-tree-id7941 . -2099) (undo-tree-id7943 . -1254) (undo-tree-id7945 . -2099) (undo-tree-id7947 . -2099) (undo-tree-id7949 . -1254) (undo-tree-id7951 . -2099) (undo-tree-id7953 . -2099) (undo-tree-id7955 . -1254) (undo-tree-id7957 . -2099) (undo-tree-id7959 . -2099) (undo-tree-id7961 . -1254) (undo-tree-id7963 . -2099) (undo-tree-id7965 . -2099) (undo-tree-id7967 . -1254) (undo-tree-id7969 . -2099) (undo-tree-id7971 . -2099) (undo-tree-id7973 . -1254) (undo-tree-id7975 . -2099) (undo-tree-id7977 . -2099) (undo-tree-id7979 . -1254) (undo-tree-id7981 . -2099) (undo-tree-id7983 . -2099) (undo-tree-id7985 . -1254) (undo-tree-id7987 . -2099) (undo-tree-id7989 . -2099) (undo-tree-id7991 . -1254) (undo-tree-id7993 . -2099) (undo-tree-id7995 . -2099) (undo-tree-id7997 . -1254) (undo-tree-id7999 . -2099) (undo-tree-id8001 . -2099) (undo-tree-id8003 . -1254) (undo-tree-id8005 . -2099) (undo-tree-id8007 . -2099) (undo-tree-id8009 . -1254) (undo-tree-id8011 . -2099) (undo-tree-id8013 . -2099) (undo-tree-id8015 . -1254) (undo-tree-id8017 . -2099) (undo-tree-id8019 . -2099) (undo-tree-id8021 . -1254) (undo-tree-id8023 . -2099) (undo-tree-id8025 . -2099) (undo-tree-id8027 . -1254) (undo-tree-id8029 . -2099) (undo-tree-id8031 . -2099) (undo-tree-id8033 . -1254) (undo-tree-id8035 . -2099) (undo-tree-id8037 . -2099) (undo-tree-id8039 . -1254) (undo-tree-id8041 . -2099) (undo-tree-id8043 . -2099) (undo-tree-id8045 . -1254) (undo-tree-id8047 . -2099) (undo-tree-id8049 . -2099) (undo-tree-id8051 . -1254) (undo-tree-id8053 . -2099) (undo-tree-id8055 . -2099) (undo-tree-id8057 . -1254) (undo-tree-id8059 . -2099) (undo-tree-id8061 . -2099) (undo-tree-id8063 . -1254) (undo-tree-id8065 . -2099) (undo-tree-id8067 . -2099) (undo-tree-id8069 . -2099) (undo-tree-id8071 . -2099) (undo-tree-id8073 . -2099) (undo-tree-id8075 . -2099) (undo-tree-id8077 . -2099) (undo-tree-id8079 . -1254) (undo-tree-id8080 . -2099) (undo-tree-id8081 . -2099) (undo-tree-id8082 . -2099) (undo-tree-id8083 . -2099) (undo-tree-id8084 . -1254) (undo-tree-id8086 . -2099) (undo-tree-id8088 . -2099) (undo-tree-id8090 . -2099) (undo-tree-id8092 . -2099) (undo-tree-id8094 . -2099) (undo-tree-id8096 . -2099) (undo-tree-id8098 . -2099) (undo-tree-id8100 . -2099) (undo-tree-id8102 . -1254) (undo-tree-id8104 . -2099) (undo-tree-id8106 . -2099) (undo-tree-id8108 . -1254) (undo-tree-id8110 . -2099) (undo-tree-id8112 . -2099) (undo-tree-id8114 . -1254) (undo-tree-id8116 . -2099) (undo-tree-id8118 . -2099) 68856) ((66757 . 68861) (#("
     (defun zetteldesk-remark-mark (beg end)
       \"Wrapper for `org-remark-mark'.

     Calls the function with `org-remark-notes-file-name' being set to
     zetteldesk-margin-notes.org in the `org-roam-directory'\"
       (interactive (org-remark-region-or-word))
       (let ((org-remark-notes-file-name
	      (concat org-roam-directory \"zetteldesk-margin-notes.org\")))
	 (org-remark-mark beg end)))

     (defun zetteldesk-remark-highlight-advice
	 (beg end &optional id mode label face properties)
       \"Advice function to be used with `org-remark-highlight-mark'.

     If the current buffer isn't associated to a file, find the
     heading's title, associate it with an org-roam-node and find the
     file associated with that node. Then run the part of
     `org-remark-highlight-save' that wasn't ran if the buffer isn't
     associated with a file. This part is a call to
     `org-remark-highlight-save'.

     This is meant to be used when taking margin notes from the
     ,*zetteldesk-scratch* buffer. However, this will only work if the
     current heading's title is associated with a node. In this case
     org-remark will be able to associate the margin note with the
     node its related to.\"
       (unless buffer-file-name
	 (let* ((title (org-entry-get nil \"ITEM\"))
		(node (org-roam-node-from-title-or-alias title))
		(file (org-roam-node-file node))
		(ov (make-overlay beg end nil :front-advance)))
	   (org-remark-highlight-save file
				      beg end
				      (overlay-properties ov)
				      title))))

     (advice-add 'org-remark-highlight-mark :after #'zetteldesk-remark-highlight-advice)

     (defun zetteldesk-switch-to-margin-notes ()
       \"Helper function which goes to the zetteldesk-margin-notes file.

     If `org-remark-mark' is called through its wrapper function
     `zetteldesk-remark-mark', it sets `org-remark-notes-file-name' to
     a specific file, which is meant to be used with all margin notes
     coming from zetteldesk-scratch. This function switches to that
     file.\"
       (interactive)
       (switch-to-buffer-other-window (find-file-noselect (concat org-roam-directory \"zettldesk-margin-notes.org\"))))

" 0 7 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7 12 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12 13 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 35 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 35 53 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 53 67 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 67 82 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 82 116 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 116 142 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 142 198 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 198 216 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 216 218 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 218 227 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 227 238 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 238 276 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 276 279 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 279 343 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 343 372 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 372 413 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 413 418 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 418 419 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 419 453 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 453 465 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 465 474 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 474 500 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 500 513 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 513 547 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 547 572 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 572 774 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 774 799 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 799 895 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 895 920 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 920 1221 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1221 1230 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1230 1236 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1236 1254 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1254 1257 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1257 1261 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1261 1289 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1289 1295 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1295 1416 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1416 1430 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1430 1587 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1587 1593 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1593 1639 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1639 1644 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1644 1645 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1645 1678 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 1678 1689 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1689 1754 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1754 1764 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1764 1779 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1779 1826 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1826 1848 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1848 1860 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1860 1886 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1886 2040 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2040 2049 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2049 2060 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2060 2110 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2110 2111 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2111 2112 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2112 2113 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2113 2114 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2114 2115 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2115 2116 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2116 2117 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2117 2118 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2118 2119 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2119 2147 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2147 2175 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2175 2181 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 66757) (undo-tree-id16027 . -2178) (undo-tree-id16028 . 62) (undo-tree-id16029 . -1254) (undo-tree-id16030 . -2178) (undo-tree-id16031 . -2061) (undo-tree-id16032 . 2) (undo-tree-id16033 . -2061) (undo-tree-id16034 . -2178) (undo-tree-id16035 . -2178) (undo-tree-id16036 . -2178) (undo-tree-id16037 . -1254) (undo-tree-id16038 . -2178) (undo-tree-id16039 . -2178) (undo-tree-id16040 . -1254) (undo-tree-id16041 . -2178) (undo-tree-id16042 . -2178) (undo-tree-id16043 . -1254) (undo-tree-id16044 . -2178) (undo-tree-id16045 . -2178) (undo-tree-id16046 . -1254) (undo-tree-id16047 . -2178) (undo-tree-id16048 . -2178) (undo-tree-id16049 . -1254) (undo-tree-id16050 . -2178) (undo-tree-id16051 . -2178) (undo-tree-id16052 . -1254) (undo-tree-id16053 . -1254) (undo-tree-id16054 . -2178) (undo-tree-id16055 . -2178) (undo-tree-id16056 . -2178) (undo-tree-id16057 . -1254) (undo-tree-id16058 . -2178) (undo-tree-id16059 . -2178) (undo-tree-id16060 . -1254) (undo-tree-id16061 . -2178) (undo-tree-id16062 . -2178) (undo-tree-id16063 . -1254) (undo-tree-id16064 . -2178) (undo-tree-id16065 . -2178) (undo-tree-id16066 . -1254) (undo-tree-id16067 . -1254) (undo-tree-id16068 . -2178) (undo-tree-id16069 . -2178) (undo-tree-id16070 . -2178) (undo-tree-id16071 . -1254) (undo-tree-id16072 . -2178) (undo-tree-id16073 . -2178) (undo-tree-id16074 . -1254) (undo-tree-id16075 . -1254) (undo-tree-id16076 . -2178) (undo-tree-id16077 . -2178) (undo-tree-id16078 . -2178) (undo-tree-id16079 . -1254) (undo-tree-id16080 . -2178) (undo-tree-id16081 . -2179) (undo-tree-id16082 . -2178) (undo-tree-id16083 . -2178) (undo-tree-id16084 . -2178) (undo-tree-id16085 . -2178) (undo-tree-id16086 . -2178) (undo-tree-id16087 . -2178) (undo-tree-id16088 . -2178) (undo-tree-id16089 . -2178) (undo-tree-id16090 . -2178) (undo-tree-id16091 . -2178) (undo-tree-id16092 . -2178) (undo-tree-id16093 . -2178) (undo-tree-id16094 . -2178) (undo-tree-id16095 . -2178) (undo-tree-id16096 . -2178) (undo-tree-id16097 . -2178) (undo-tree-id16098 . -2178) (undo-tree-id16099 . -2178) (undo-tree-id16100 . -2178) (undo-tree-id16101 . -1254) (undo-tree-id16102 . -2178) (undo-tree-id16103 . -2178) (undo-tree-id16104 . -2178) (undo-tree-id16105 . -2178) (undo-tree-id16106 . -2178) (undo-tree-id16107 . -2178) (undo-tree-id16108 . -2178) (undo-tree-id16109 . -2178) (undo-tree-id16110 . -2178) (undo-tree-id16111 . -2178) (undo-tree-id16112 . -2178) (undo-tree-id16113 . -2178) (undo-tree-id16114 . -2178) (undo-tree-id16115 . -2178) (undo-tree-id16116 . -2178) (undo-tree-id16117 . -2178) (undo-tree-id16118 . -2178) (undo-tree-id16119 . -2178) (undo-tree-id16120 . -2178) (undo-tree-id16121 . -2178) (undo-tree-id16122 . -2178) (undo-tree-id16123 . -2178) (undo-tree-id16124 . -2178) (undo-tree-id16125 . -2178) (undo-tree-id16126 . -2178) (undo-tree-id16127 . -2178) (undo-tree-id16128 . -2178) (undo-tree-id16129 . -2178) (undo-tree-id16130 . -2178) (undo-tree-id16131 . -2178) (undo-tree-id16132 . -2178) (undo-tree-id16133 . -2178) (undo-tree-id16134 . -2178) (undo-tree-id16135 . -2178) (undo-tree-id16136 . -2178) (undo-tree-id16137 . -2178) (undo-tree-id16138 . -2178) (undo-tree-id16139 . -2119) (undo-tree-id16140 . -1254) (undo-tree-id16141 . -2178) (undo-tree-id16142 . -2178) (undo-tree-id16143 . -1254) (undo-tree-id16144 . -2178) (undo-tree-id16145 . -2178) (undo-tree-id16146 . -2178) (undo-tree-id16147 . -2178) (undo-tree-id16148 . -2178) (undo-tree-id16149 . -2178) (undo-tree-id16150 . -2178) (undo-tree-id16151 . -2178) (undo-tree-id16152 . -2178) (undo-tree-id16153 . -2178) (undo-tree-id16154 . -2178) (undo-tree-id16155 . -2178) (undo-tree-id16156 . -2119) (undo-tree-id16157 . -2178) (undo-tree-id16158 . -1254) (undo-tree-id16159 . -1254) (undo-tree-id16160 . -2119) (undo-tree-id16161 . -2119) (undo-tree-id16162 . -2119) (undo-tree-id16163 . -2119) (undo-tree-id16164 . -2119) (undo-tree-id16165 . -2119) (undo-tree-id16166 . -2119) (undo-tree-id16167 . -2119) (undo-tree-id16168 . -2119) (undo-tree-id16169 . -2119) (undo-tree-id16170 . -2119) (undo-tree-id16171 . -2119) (undo-tree-id16172 . -2119) (undo-tree-id16173 . -2119) (undo-tree-id16174 . -2119) (undo-tree-id16175 . -2119) (undo-tree-id16176 . -2119) (undo-tree-id16177 . -2119) (undo-tree-id16178 . -2119) (undo-tree-id16179 . -2119) (undo-tree-id16180 . -2119) (undo-tree-id16181 . -2119) (undo-tree-id16182 . -2119) (undo-tree-id16183 . -2119)) (25147 27911 548530 49000) 0 nil])
([nil nil ((69616 . 69618) (69595 . 69616) (69574 . 69595) (69572 . 69574) (69551 . 69572) (69530 . 69551) (#("t" 0 1 (fontified t)) . -69530) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (#("w" 0 1 (fontified t)) . -69531) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) 69532 (69530 . 69532) (69516 . 69530) (#("o" 0 1 (fontified t)) . -69516) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) 69517 (69496 . 69517) (#(" " 0 1 (fontified t)) . -69496) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) 69497 (69495 . 69497) (69475 . 69476) (69058 . 69059) (69048 . 69049) (69326 . 69327) (69303 . 69304) (69275 . 69276) (69246 . 69247) (69487 . 69488) (#("~" 0 1 (fontified t)) . -69487) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) 69488 (69480 . 69488) (69459 . 69480) (69453 . 69459) (69432 . 69453) (69411 . 69432) (69402 . 69411) (#("o" 0 1 (fontified t)) . -69402) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (#("i" 0 1 (fontified t)) . -69403) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) 69404 (69398 . 69404) (69381 . 69398) (#("d" 0 1 (fontified t)) . -69381) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (#("n" 0 1 (fontified t)) . -69382) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) 69383 (69380 . 69383) (#(" " 0 1 (fontified t)) . -69380) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (#("-" 0 1 (fontified t)) . -69381) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) 69382 (69381 . 69382) (#("n" 0 1 (fontified t)) . -69381) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) 69382 (69379 . 69382) (#("n" 0 1 (fontified t)) . -69379) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) 69380 (69359 . 69380) (69357 . 69359) (#("r" 0 1 (fontified t)) . -69357) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (#("t" 0 1 (fontified t)) . -69358) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) 69359 (69341 . 69359) (69337 . 69341) (#("r" 0 1 (fontified t)) . -69337) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (#("t" 0 1 (fontified t)) . -69338) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) 69339 (69338 . 69339) (#("t" 0 1 (fontified t)) . -69338) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (#("o" 0 1 (fontified t)) . -69339) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) 69340 (69319 . 69340) (#("d" 0 1 (fontified t)) . -69319) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) 69320 (69318 . 69320) (#("r" 0 1 (fontified t)) . -69318) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (#("e" 0 1 (fontified t)) . -69319) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) 69320 (69318 . 69320) (#("e" 0 1 (fontified t)) . -69318) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) 69319 (69313 . 69319) (#("i" 0 1 (fontified t)) . -69313) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (#("t" 0 1 (fontified t)) . -69314) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (#("e" 0 1 (fontified t)) . -69315) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) 69316 (69313 . 69316) (#("t" 0 1 (fontified t)) . -69313) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (#("e" 0 1 (fontified t)) . -69314) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) 69315 (69313 . 69315) (#("o" 0 1 (fontified t)) . -69313) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (#("d" 0 1 (fontified t)) . -69314) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (#("e" 0 1 (fontified t)) . -69315) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) 69316 (69305 . 69316) (#("l" 0 1 (fontified t)) . -69305) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (#("e" 0 1 (fontified t)) . -69306) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (#("d" 0 1 (fontified t)) . -69307) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) 69308 (69290 . 69308) (#("e" 0 1 (fontified t)) . -69290) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (#("n" 0 1 (fontified t)) . -69291) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) 69292 (69281 . 69292) (#("a" 0 1 (fontified t)) . -69281) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (#("I" 0 1 (fontified t)) . -69282) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) 69283 (69282 . 69283) (#("I" 0 1 (fontified t)) . -69282) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (#(" " 0 1 (fontified t)) . -69283) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (#("h" 0 1 (fontified t)) . -69284) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) 69285 (#("a" 0 1 (fontified t)) . -69285) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) 69286 (69277 . 69286) (#("c" 0 1 (fontified t)) . -69277) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (#("i" 0 1 (fontified t)) . -69278) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (#("h" 0 1 (fontified t)) . -69279) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (#(" " 0 1 (fontified t)) . -69280) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) 69281 (69275 . 69281) (#(" " 0 1 (fontified t)) . -69275) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (#("w" 0 1 (fontified t)) . -69276) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) 69277 (69269 . 69277) (#("a" 0 1 (fontified t)) . -69269) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) 69270 (69256 . 69270) (#("e" 0 1 (fontified t)) . -69256) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (#("p" 0 1 (fontified t)) . -69257) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (#("l" 0 1 (fontified t)) . -69258) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) 69259 (69256 . 69259) (69248 . 69256) (#("v" 0 1 (fontified t)) . -69248) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) 69249 (69231 . 69249) (#(" " 0 1 (fontified t)) . -69231) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (#("t" 0 1 (fontified t)) . -69232) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -1) (undo-tree-id3100 . -1) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1) (undo-tree-id3109 . -1) (undo-tree-id3110 . -1) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (undo-tree-id3114 . -1) (undo-tree-id3115 . -1) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) (undo-tree-id3219 . -1) (undo-tree-id3220 . -1) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (undo-tree-id3250 . -1) (undo-tree-id3251 . -1) (undo-tree-id3252 . -1) (undo-tree-id3253 . -1) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (#("h" 0 1 (fontified t)) . -69233) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) (undo-tree-id3318 . -1) (undo-tree-id3319 . -1) (undo-tree-id3320 . -1) (undo-tree-id3321 . -1) (undo-tree-id3322 . -1) (undo-tree-id3323 . -1) (undo-tree-id3324 . -1) (undo-tree-id3325 . -1) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (undo-tree-id3328 . -1) (undo-tree-id3329 . -1) (undo-tree-id3330 . -1) (undo-tree-id3331 . -1) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (undo-tree-id3336 . -1) (undo-tree-id3337 . -1) (undo-tree-id3338 . -1) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) (undo-tree-id3348 . -1) (undo-tree-id3349 . -1) (undo-tree-id3350 . -1) (undo-tree-id3351 . -1) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (undo-tree-id3482 . -1) (undo-tree-id3483 . -1) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3487 . -1) (undo-tree-id3488 . -1) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) (undo-tree-id3491 . -1) (undo-tree-id3492 . -1) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) (undo-tree-id3500 . -1) (undo-tree-id3501 . -1) (undo-tree-id3502 . -1) (undo-tree-id3503 . -1) (undo-tree-id3504 . -1) (undo-tree-id3505 . -1) (undo-tree-id3506 . -1) (undo-tree-id3507 . -1) (undo-tree-id3508 . -1) (undo-tree-id3509 . -1) (undo-tree-id3510 . -1) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) (undo-tree-id3514 . -1) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) (undo-tree-id3517 . -1) (undo-tree-id3518 . -1) (undo-tree-id3519 . -1) (#("e" 0 1 (fontified t)) . -69234) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (undo-tree-id3523 . -1) (undo-tree-id3524 . -1) (undo-tree-id3525 . -1) (undo-tree-id3526 . -1) (undo-tree-id3527 . -1) (undo-tree-id3528 . -1) (undo-tree-id3529 . -1) (undo-tree-id3530 . -1) (undo-tree-id3531 . -1) (undo-tree-id3532 . -1) (undo-tree-id3533 . -1) (undo-tree-id3534 . -1) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (undo-tree-id3538 . -1) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (undo-tree-id3566 . -1) (undo-tree-id3567 . -1) (undo-tree-id3568 . -1) (undo-tree-id3569 . -1) (undo-tree-id3570 . -1) (undo-tree-id3571 . -1) (undo-tree-id3572 . -1) (undo-tree-id3573 . -1) (undo-tree-id3574 . -1) (undo-tree-id3575 . -1) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1) (undo-tree-id3624 . -1) (undo-tree-id3625 . -1) (undo-tree-id3626 . -1) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (undo-tree-id3629 . -1) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) (undo-tree-id3633 . -1) (undo-tree-id3634 . -1) (undo-tree-id3635 . -1) (undo-tree-id3636 . -1) (undo-tree-id3637 . -1) (undo-tree-id3638 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (undo-tree-id3651 . -1) (undo-tree-id3652 . -1) (undo-tree-id3653 . -1) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1) (undo-tree-id3662 . -1) (undo-tree-id3663 . -1) (undo-tree-id3664 . -1) (undo-tree-id3665 . -1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (undo-tree-id3670 . -1) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (undo-tree-id3682 . -1) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (#(" " 0 1 (fontified t)) . -69235) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (undo-tree-id3800 . -1) (undo-tree-id3801 . -1) (undo-tree-id3802 . -1) (undo-tree-id3803 . -1) (undo-tree-id3804 . -1) (undo-tree-id3805 . -1) (undo-tree-id3806 . -1) (undo-tree-id3807 . -1) (undo-tree-id3808 . -1) (undo-tree-id3809 . -1) (undo-tree-id3810 . -1) (undo-tree-id3811 . -1) (undo-tree-id3812 . -1) (undo-tree-id3813 . -1) (undo-tree-id3814 . -1) (undo-tree-id3815 . -1) (undo-tree-id3816 . -1) (undo-tree-id3817 . -1) (undo-tree-id3818 . -1) (undo-tree-id3819 . -1) (undo-tree-id3820 . -1) (undo-tree-id3821 . -1) (undo-tree-id3822 . -1) (undo-tree-id3823 . -1) (undo-tree-id3824 . -1) (undo-tree-id3825 . -1) (undo-tree-id3826 . -1) (undo-tree-id3827 . -1) (undo-tree-id3828 . -1) (undo-tree-id3829 . -1) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (undo-tree-id3832 . -1) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) (undo-tree-id3843 . -1) (undo-tree-id3844 . -1) (undo-tree-id3845 . -1) (undo-tree-id3846 . -1) (undo-tree-id3847 . -1) (undo-tree-id3848 . -1) (undo-tree-id3849 . -1) (undo-tree-id3850 . -1) (undo-tree-id3851 . -1) (undo-tree-id3852 . -1) (undo-tree-id3853 . -1) (undo-tree-id3854 . -1) (undo-tree-id3855 . -1) (undo-tree-id3856 . -1) (undo-tree-id3857 . -1) (undo-tree-id3858 . -1) (undo-tree-id3859 . -1) (undo-tree-id3860 . -1) (undo-tree-id3861 . -1) (undo-tree-id3862 . -1) (undo-tree-id3863 . -1) (undo-tree-id3864 . -1) (undo-tree-id3865 . -1) (undo-tree-id3866 . -1) (undo-tree-id3867 . -1) (undo-tree-id3868 . -1) (undo-tree-id3869 . -1) (undo-tree-id3870 . -1) (undo-tree-id3871 . -1) (undo-tree-id3872 . -1) (undo-tree-id3873 . -1) (undo-tree-id3874 . -1) (undo-tree-id3875 . -1) (undo-tree-id3876 . -1) (undo-tree-id3877 . -1) (undo-tree-id3878 . -1) (undo-tree-id3879 . -1) (undo-tree-id3880 . -1) (undo-tree-id3881 . -1) (undo-tree-id3882 . -1) (undo-tree-id3883 . -1) (undo-tree-id3884 . -1) (undo-tree-id3885 . -1) (undo-tree-id3886 . -1) (undo-tree-id3887 . -1) (undo-tree-id3888 . -1) (undo-tree-id3889 . -1) (undo-tree-id3890 . -1) (undo-tree-id3891 . -1) (undo-tree-id3892 . -1) (undo-tree-id3893 . -1) (undo-tree-id3894 . -1) (undo-tree-id3895 . -1) (undo-tree-id3896 . -1) (undo-tree-id3897 . -1) (undo-tree-id3898 . -1) (undo-tree-id3899 . -1) (undo-tree-id3900 . -1) (undo-tree-id3901 . -1) (undo-tree-id3902 . -1) (undo-tree-id3903 . -1) (undo-tree-id3904 . -1) (undo-tree-id3905 . -1) (undo-tree-id3906 . -1) (undo-tree-id3907 . -1) (undo-tree-id3908 . -1) (undo-tree-id3909 . -1) (#("b" 0 1 (fontified t)) . -69236) (undo-tree-id3910 . -1) (undo-tree-id3911 . -1) (undo-tree-id3912 . -1) (undo-tree-id3913 . -1) (undo-tree-id3914 . -1) (undo-tree-id3915 . -1) (undo-tree-id3916 . -1) (undo-tree-id3917 . -1) (undo-tree-id3918 . -1) (undo-tree-id3919 . -1) (undo-tree-id3920 . -1) (undo-tree-id3921 . -1) (undo-tree-id3922 . -1) (undo-tree-id3923 . -1) (undo-tree-id3924 . -1) (undo-tree-id3925 . -1) (undo-tree-id3926 . -1) (undo-tree-id3927 . -1) (undo-tree-id3928 . -1) (undo-tree-id3929 . -1) (undo-tree-id3930 . -1) (undo-tree-id3931 . -1) (undo-tree-id3932 . -1) (undo-tree-id3933 . -1) (undo-tree-id3934 . -1) (undo-tree-id3935 . -1) (undo-tree-id3936 . -1) (undo-tree-id3937 . -1) (undo-tree-id3938 . -1) (undo-tree-id3939 . -1) (undo-tree-id3940 . -1) (undo-tree-id3941 . -1) (undo-tree-id3942 . -1) (undo-tree-id3943 . -1) (undo-tree-id3944 . -1) (undo-tree-id3945 . -1) (undo-tree-id3946 . -1) (undo-tree-id3947 . -1) (undo-tree-id3948 . -1) (undo-tree-id3949 . -1) (undo-tree-id3950 . -1) (undo-tree-id3951 . -1) (undo-tree-id3952 . -1) (undo-tree-id3953 . -1) (undo-tree-id3954 . -1) (undo-tree-id3955 . -1) (undo-tree-id3956 . -1) (undo-tree-id3957 . -1) (undo-tree-id3958 . -1) (undo-tree-id3959 . -1) (undo-tree-id3960 . -1) (undo-tree-id3961 . -1) (undo-tree-id3962 . -1) (undo-tree-id3963 . -1) (undo-tree-id3964 . -1) (undo-tree-id3965 . -1) (undo-tree-id3966 . -1) (undo-tree-id3967 . -1) (undo-tree-id3968 . -1) (undo-tree-id3969 . -1) (undo-tree-id3970 . -1) (undo-tree-id3971 . -1) (undo-tree-id3972 . -1) (undo-tree-id3973 . -1) (undo-tree-id3974 . -1) (undo-tree-id3975 . -1) (undo-tree-id3976 . -1) (undo-tree-id3977 . -1) (undo-tree-id3978 . -1) (undo-tree-id3979 . -1) (undo-tree-id3980 . -1) (undo-tree-id3981 . -1) (undo-tree-id3982 . -1) (undo-tree-id3983 . -1) (undo-tree-id3984 . -1) (undo-tree-id3985 . -1) (undo-tree-id3986 . -1) (undo-tree-id3987 . -1) (undo-tree-id3988 . -1) (undo-tree-id3989 . -1) (undo-tree-id3990 . -1) (undo-tree-id3991 . -1) (undo-tree-id3992 . -1) (undo-tree-id3993 . -1) (undo-tree-id3994 . -1) (undo-tree-id3995 . -1) (undo-tree-id3996 . -1) (undo-tree-id3997 . -1) (undo-tree-id3998 . -1) (undo-tree-id3999 . -1) (undo-tree-id4000 . -1) (undo-tree-id4001 . -1) (undo-tree-id4002 . -1) (undo-tree-id4003 . -1) (undo-tree-id4004 . -1) (undo-tree-id4005 . -1) (undo-tree-id4006 . -1) (undo-tree-id4007 . -1) (undo-tree-id4008 . -1) (undo-tree-id4009 . -1) (undo-tree-id4010 . -1) (undo-tree-id4011 . -1) (undo-tree-id4012 . -1) (undo-tree-id4013 . -1) (undo-tree-id4014 . -1) (undo-tree-id4015 . -1) (undo-tree-id4016 . -1) (undo-tree-id4017 . -1) (undo-tree-id4018 . -1) (undo-tree-id4019 . -1) (undo-tree-id4020 . -1) (undo-tree-id4021 . -1) (undo-tree-id4022 . -1) (undo-tree-id4023 . -1) (undo-tree-id4024 . -1) (undo-tree-id4025 . -1) (undo-tree-id4026 . -1) (undo-tree-id4027 . -1) (undo-tree-id4028 . -1) (undo-tree-id4029 . -1) (undo-tree-id4030 . -1) (undo-tree-id4031 . -1) (undo-tree-id4032 . -1) (undo-tree-id4033 . -1) (undo-tree-id4034 . -1) (undo-tree-id4035 . -1) (undo-tree-id4036 . -1) (undo-tree-id4037 . -1) (undo-tree-id4038 . -1) (undo-tree-id4039 . -1) (undo-tree-id4040 . -1) (undo-tree-id4041 . -1) (undo-tree-id4042 . -1) (undo-tree-id4043 . -1) (undo-tree-id4044 . -1) (undo-tree-id4045 . -1) (undo-tree-id4046 . -1) (undo-tree-id4047 . -1) (undo-tree-id4048 . -1) (undo-tree-id4049 . -1) (undo-tree-id4050 . -1) (undo-tree-id4051 . -1) (undo-tree-id4052 . -1) (undo-tree-id4053 . -1) (undo-tree-id4054 . -1) (undo-tree-id4055 . -1) (undo-tree-id4056 . -1) (undo-tree-id4057 . -1) (undo-tree-id4058 . -1) (undo-tree-id4059 . -1) (undo-tree-id4060 . -1) (undo-tree-id4061 . -1) (undo-tree-id4062 . -1) (undo-tree-id4063 . -1) (undo-tree-id4064 . -1) (undo-tree-id4065 . -1) (undo-tree-id4066 . -1) (undo-tree-id4067 . -1) (undo-tree-id4068 . -1) (undo-tree-id4069 . -1) (undo-tree-id4070 . -1) (undo-tree-id4071 . -1) (undo-tree-id4072 . -1) (undo-tree-id4073 . -1) (undo-tree-id4074 . -1) (undo-tree-id4075 . -1) (undo-tree-id4076 . -1) (undo-tree-id4077 . -1) (undo-tree-id4078 . -1) (undo-tree-id4079 . -1) (undo-tree-id4080 . -1) (#("i" 0 1 (fontified t)) . -69237) (undo-tree-id4081 . -1) (undo-tree-id4082 . -1) (undo-tree-id4083 . -1) (undo-tree-id4084 . -1) (undo-tree-id4085 . -1) (undo-tree-id4086 . -1) (undo-tree-id4087 . -1) (undo-tree-id4088 . -1) (undo-tree-id4089 . -1) (undo-tree-id4090 . -1) (undo-tree-id4091 . -1) (undo-tree-id4092 . -1) (undo-tree-id4093 . -1) (undo-tree-id4094 . -1) (undo-tree-id4095 . -1) (undo-tree-id4096 . -1) (undo-tree-id4097 . -1) (undo-tree-id4098 . -1) (undo-tree-id4099 . -1) (undo-tree-id4100 . -1) (undo-tree-id4101 . -1) (undo-tree-id4102 . -1) (undo-tree-id4103 . -1) (undo-tree-id4104 . -1) (undo-tree-id4105 . -1) (undo-tree-id4106 . -1) (undo-tree-id4107 . -1) (undo-tree-id4108 . -1) (undo-tree-id4109 . -1) (undo-tree-id4110 . -1) (undo-tree-id4111 . -1) (undo-tree-id4112 . -1) (undo-tree-id4113 . -1) (undo-tree-id4114 . -1) (undo-tree-id4115 . -1) (undo-tree-id4116 . -1) (undo-tree-id4117 . -1) (undo-tree-id4118 . -1) (undo-tree-id4119 . -1) (undo-tree-id4120 . -1) (undo-tree-id4121 . -1) (undo-tree-id4122 . -1) (undo-tree-id4123 . -1) (undo-tree-id4124 . -1) (undo-tree-id4125 . -1) (undo-tree-id4126 . -1) (undo-tree-id4127 . -1) (undo-tree-id4128 . -1) (undo-tree-id4129 . -1) (undo-tree-id4130 . -1) (undo-tree-id4131 . -1) (undo-tree-id4132 . -1) (undo-tree-id4133 . -1) (undo-tree-id4134 . -1) (undo-tree-id4135 . -1) (undo-tree-id4136 . -1) (undo-tree-id4137 . -1) (undo-tree-id4138 . -1) (undo-tree-id4139 . -1) (undo-tree-id4140 . -1) (undo-tree-id4141 . -1) (undo-tree-id4142 . -1) (undo-tree-id4143 . -1) (undo-tree-id4144 . -1) (undo-tree-id4145 . -1) (undo-tree-id4146 . -1) (undo-tree-id4147 . -1) (undo-tree-id4148 . -1) (undo-tree-id4149 . -1) (undo-tree-id4150 . -1) (undo-tree-id4151 . -1) (undo-tree-id4152 . -1) (undo-tree-id4153 . -1) (undo-tree-id4154 . -1) (undo-tree-id4155 . -1) (undo-tree-id4156 . -1) (undo-tree-id4157 . -1) (undo-tree-id4158 . -1) (undo-tree-id4159 . -1) (undo-tree-id4160 . -1) (undo-tree-id4161 . -1) (undo-tree-id4162 . -1) (undo-tree-id4163 . -1) (undo-tree-id4164 . -1) (undo-tree-id4165 . -1) (undo-tree-id4166 . -1) (undo-tree-id4167 . -1) (undo-tree-id4168 . -1) (undo-tree-id4169 . -1) (undo-tree-id4170 . -1) (undo-tree-id4171 . -1) (undo-tree-id4172 . -1) (undo-tree-id4173 . -1) (undo-tree-id4174 . -1) (undo-tree-id4175 . -1) (undo-tree-id4176 . -1) (undo-tree-id4177 . -1) (undo-tree-id4178 . -1) (undo-tree-id4179 . -1) (undo-tree-id4180 . -1) (undo-tree-id4181 . -1) (undo-tree-id4182 . -1) (undo-tree-id4183 . -1) (undo-tree-id4184 . -1) (undo-tree-id4185 . -1) (undo-tree-id4186 . -1) (undo-tree-id4187 . -1) (undo-tree-id4188 . -1) (undo-tree-id4189 . -1) (undo-tree-id4190 . -1) (undo-tree-id4191 . -1) (undo-tree-id4192 . -1) (undo-tree-id4193 . -1) (undo-tree-id4194 . -1) (undo-tree-id4195 . -1) (undo-tree-id4196 . -1) (undo-tree-id4197 . -1) (undo-tree-id4198 . -1) (undo-tree-id4199 . -1) (undo-tree-id4200 . -1) (undo-tree-id4201 . -1) (undo-tree-id4202 . -1) (undo-tree-id4203 . -1) (undo-tree-id4204 . -1) (undo-tree-id4205 . -1) (undo-tree-id4206 . -1) (undo-tree-id4207 . -1) (undo-tree-id4208 . -1) (undo-tree-id4209 . -1) (undo-tree-id4210 . -1) (undo-tree-id4211 . -1) (undo-tree-id4212 . -1) (undo-tree-id4213 . -1) (undo-tree-id4214 . -1) (undo-tree-id4215 . -1) (undo-tree-id4216 . -1) (undo-tree-id4217 . -1) (undo-tree-id4218 . -1) (undo-tree-id4219 . -1) (undo-tree-id4220 . -1) (undo-tree-id4221 . -1) (undo-tree-id4222 . -1) (undo-tree-id4223 . -1) (undo-tree-id4224 . -1) (undo-tree-id4225 . -1) (undo-tree-id4226 . -1) (undo-tree-id4227 . -1) (undo-tree-id4228 . -1) (undo-tree-id4229 . -1) (undo-tree-id4230 . -1) (#("b" 0 1 (fontified t)) . -69238) (undo-tree-id4231 . -1) (undo-tree-id4232 . -1) (undo-tree-id4233 . -1) (undo-tree-id4234 . -1) (undo-tree-id4235 . -1) (undo-tree-id4236 . -1) (undo-tree-id4237 . -1) (undo-tree-id4238 . -1) (undo-tree-id4239 . -1) (undo-tree-id4240 . -1) (undo-tree-id4241 . -1) (undo-tree-id4242 . -1) (undo-tree-id4243 . -1) (undo-tree-id4244 . -1) (undo-tree-id4245 . -1) (undo-tree-id4246 . -1) (undo-tree-id4247 . -1) (undo-tree-id4248 . -1) (undo-tree-id4249 . -1) (undo-tree-id4250 . -1) (undo-tree-id4251 . -1) (undo-tree-id4252 . -1) (undo-tree-id4253 . -1) (undo-tree-id4254 . -1) (undo-tree-id4255 . -1) (undo-tree-id4256 . -1) (undo-tree-id4257 . -1) (undo-tree-id4258 . -1) (undo-tree-id4259 . -1) (undo-tree-id4260 . -1) (undo-tree-id4261 . -1) (undo-tree-id4262 . -1) (undo-tree-id4263 . -1) (undo-tree-id4264 . -1) (undo-tree-id4265 . -1) (undo-tree-id4266 . -1) (undo-tree-id4267 . -1) (undo-tree-id4268 . -1) (undo-tree-id4269 . -1) (undo-tree-id4270 . -1) (undo-tree-id4271 . -1) (undo-tree-id4272 . -1) (undo-tree-id4273 . -1) (undo-tree-id4274 . -1) (undo-tree-id4275 . -1) (undo-tree-id4276 . -1) (undo-tree-id4277 . -1) (undo-tree-id4278 . -1) (undo-tree-id4279 . -1) (undo-tree-id4280 . -1) (undo-tree-id4281 . -1) (undo-tree-id4282 . -1) (undo-tree-id4283 . -1) (undo-tree-id4284 . -1) (undo-tree-id4285 . -1) (undo-tree-id4286 . -1) (undo-tree-id4287 . -1) (undo-tree-id4288 . -1) (undo-tree-id4289 . -1) (undo-tree-id4290 . -1) (undo-tree-id4291 . -1) (undo-tree-id4292 . -1) (undo-tree-id4293 . -1) (undo-tree-id4294 . -1) (undo-tree-id4295 . -1) (undo-tree-id4296 . -1) (undo-tree-id4297 . -1) (undo-tree-id4298 . -1) (undo-tree-id4299 . -1) (undo-tree-id4300 . -1) (undo-tree-id4301 . -1) (undo-tree-id4302 . -1) (undo-tree-id4303 . -1) (undo-tree-id4304 . -1) (undo-tree-id4305 . -1) (undo-tree-id4306 . -1) (undo-tree-id4307 . -1) (undo-tree-id4308 . -1) (undo-tree-id4309 . -1) (undo-tree-id4310 . -1) (undo-tree-id4311 . -1) (undo-tree-id4312 . -1) (undo-tree-id4313 . -1) (undo-tree-id4314 . -1) (undo-tree-id4315 . -1) (undo-tree-id4316 . -1) (undo-tree-id4317 . -1) (undo-tree-id4318 . -1) (undo-tree-id4319 . -1) (undo-tree-id4320 . -1) (undo-tree-id4321 . -1) (undo-tree-id4322 . -1) (undo-tree-id4323 . -1) (undo-tree-id4324 . -1) (undo-tree-id4325 . -1) (undo-tree-id4326 . -1) (undo-tree-id4327 . -1) (undo-tree-id4328 . -1) (undo-tree-id4329 . -1) (undo-tree-id4330 . -1) (undo-tree-id4331 . -1) (undo-tree-id4332 . -1) (undo-tree-id4333 . -1) (undo-tree-id4334 . -1) (undo-tree-id4335 . -1) (undo-tree-id4336 . -1) (undo-tree-id4337 . -1) (undo-tree-id4338 . -1) (undo-tree-id4339 . -1) (undo-tree-id4340 . -1) (undo-tree-id4341 . -1) (undo-tree-id4342 . -1) (undo-tree-id4343 . -1) (undo-tree-id4344 . -1) (undo-tree-id4345 . -1) (undo-tree-id4346 . -1) (undo-tree-id4347 . -1) (undo-tree-id4348 . -1) (undo-tree-id4349 . -1) (undo-tree-id4350 . -1) (undo-tree-id4351 . -1) (undo-tree-id4352 . -1) (undo-tree-id4353 . -1) (undo-tree-id4354 . -1) (undo-tree-id4355 . -1) (undo-tree-id4356 . -1) (undo-tree-id4357 . -1) (undo-tree-id4358 . -1) (undo-tree-id4359 . -1) (#("t" 0 1 (fontified t)) . -69239) (undo-tree-id4360 . -1) (undo-tree-id4361 . -1) (undo-tree-id4362 . -1) (undo-tree-id4363 . -1) (undo-tree-id4364 . -1) (undo-tree-id4365 . -1) (undo-tree-id4366 . -1) (undo-tree-id4367 . -1) (undo-tree-id4368 . -1) (undo-tree-id4369 . -1) (undo-tree-id4370 . -1) (undo-tree-id4371 . -1) (undo-tree-id4372 . -1) (undo-tree-id4373 . -1) (undo-tree-id4374 . -1) (undo-tree-id4375 . -1) (undo-tree-id4376 . -1) (undo-tree-id4377 . -1) (undo-tree-id4378 . -1) (undo-tree-id4379 . -1) (undo-tree-id4380 . -1) (undo-tree-id4381 . -1) (undo-tree-id4382 . -1) (undo-tree-id4383 . -1) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) (undo-tree-id4390 . -1) (undo-tree-id4391 . -1) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1) (undo-tree-id4394 . -1) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (undo-tree-id4402 . -1) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) (undo-tree-id4405 . -1) (undo-tree-id4406 . -1) (undo-tree-id4407 . -1) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) (undo-tree-id4410 . -1) (undo-tree-id4411 . -1) (undo-tree-id4412 . -1) (undo-tree-id4413 . -1) (undo-tree-id4414 . -1) (undo-tree-id4415 . -1) (undo-tree-id4416 . -1) (undo-tree-id4417 . -1) (undo-tree-id4418 . -1) (undo-tree-id4419 . -1) (undo-tree-id4420 . -1) (undo-tree-id4421 . -1) (undo-tree-id4422 . -1) (undo-tree-id4423 . -1) (undo-tree-id4424 . -1) (undo-tree-id4425 . -1) (undo-tree-id4426 . -1) (undo-tree-id4427 . -1) (undo-tree-id4428 . -1) (undo-tree-id4429 . -1) (undo-tree-id4430 . -1) (undo-tree-id4431 . -1) (undo-tree-id4432 . -1) (undo-tree-id4433 . -1) (undo-tree-id4434 . -1) (undo-tree-id4435 . -1) (undo-tree-id4436 . -1) (undo-tree-id4437 . -1) (undo-tree-id4438 . -1) (undo-tree-id4439 . -1) (undo-tree-id4440 . -1) (undo-tree-id4441 . -1) (undo-tree-id4442 . -1) (undo-tree-id4443 . -1) (undo-tree-id4444 . -1) (undo-tree-id4445 . -1) (undo-tree-id4446 . -1) (undo-tree-id4447 . -1) (undo-tree-id4448 . -1) (undo-tree-id4449 . -1) (undo-tree-id4450 . -1) (undo-tree-id4451 . -1) (undo-tree-id4452 . -1) (undo-tree-id4453 . -1) (undo-tree-id4454 . -1) (undo-tree-id4455 . -1) (undo-tree-id4456 . -1) (undo-tree-id4457 . -1) (undo-tree-id4458 . -1) (undo-tree-id4459 . -1) (undo-tree-id4460 . -1) (undo-tree-id4461 . -1) (undo-tree-id4462 . -1) (undo-tree-id4463 . -1) (undo-tree-id4464 . -1) (undo-tree-id4465 . -1) (undo-tree-id4466 . -1) (undo-tree-id4467 . -1) (undo-tree-id4468 . -1) (undo-tree-id4469 . -1) (undo-tree-id4470 . -1) (undo-tree-id4471 . -1) (undo-tree-id4472 . -1) (#("e" 0 1 (fontified t)) . -69240) (undo-tree-id4473 . -1) (undo-tree-id4474 . -1) (undo-tree-id4475 . -1) (undo-tree-id4476 . -1) (undo-tree-id4477 . -1) (undo-tree-id4478 . -1) (undo-tree-id4479 . -1) (undo-tree-id4480 . -1) (undo-tree-id4481 . -1) (undo-tree-id4482 . -1) (undo-tree-id4483 . -1) (undo-tree-id4484 . -1) (undo-tree-id4485 . -1) (undo-tree-id4486 . -1) (undo-tree-id4487 . -1) (undo-tree-id4488 . -1) (undo-tree-id4489 . -1) (undo-tree-id4490 . -1) (undo-tree-id4491 . -1) (undo-tree-id4492 . -1) (undo-tree-id4493 . -1) (undo-tree-id4494 . -1) (undo-tree-id4495 . -1) (undo-tree-id4496 . -1) (undo-tree-id4497 . -1) (undo-tree-id4498 . -1) (undo-tree-id4499 . -1) (undo-tree-id4500 . -1) (undo-tree-id4501 . -1) (undo-tree-id4502 . -1) (undo-tree-id4503 . -1) (undo-tree-id4504 . -1) (undo-tree-id4505 . -1) (undo-tree-id4506 . -1) (undo-tree-id4507 . -1) (undo-tree-id4508 . -1) (undo-tree-id4509 . -1) (undo-tree-id4510 . -1) (undo-tree-id4511 . -1) (undo-tree-id4512 . -1) (undo-tree-id4513 . -1) (undo-tree-id4514 . -1) (undo-tree-id4515 . -1) (undo-tree-id4516 . -1) (undo-tree-id4517 . -1) (undo-tree-id4518 . -1) (undo-tree-id4519 . -1) (undo-tree-id4520 . -1) (undo-tree-id4521 . -1) (undo-tree-id4522 . -1) (undo-tree-id4523 . -1) (undo-tree-id4524 . -1) (undo-tree-id4525 . -1) (undo-tree-id4526 . -1) (undo-tree-id4527 . -1) (undo-tree-id4528 . -1) (undo-tree-id4529 . -1) (undo-tree-id4530 . -1) (undo-tree-id4531 . -1) (undo-tree-id4532 . -1) (undo-tree-id4533 . -1) (undo-tree-id4534 . -1) (undo-tree-id4535 . -1) (undo-tree-id4536 . -1) (undo-tree-id4537 . -1) (undo-tree-id4538 . -1) (undo-tree-id4539 . -1) (undo-tree-id4540 . -1) (undo-tree-id4541 . -1) (undo-tree-id4542 . -1) (undo-tree-id4543 . -1) (undo-tree-id4544 . -1) (undo-tree-id4545 . -1) (undo-tree-id4546 . -1) (undo-tree-id4547 . -1) (undo-tree-id4548 . -1) (undo-tree-id4549 . -1) (undo-tree-id4550 . -1) (undo-tree-id4551 . -1) (undo-tree-id4552 . -1) (undo-tree-id4553 . -1) (undo-tree-id4554 . -1) (undo-tree-id4555 . -1) (undo-tree-id4556 . -1) (undo-tree-id4557 . -1) (undo-tree-id4558 . -1) (undo-tree-id4559 . -1) (#("x" 0 1 (fontified t)) . -69241) (undo-tree-id4560 . -1) (undo-tree-id4561 . -1) (undo-tree-id4562 . -1) (undo-tree-id4563 . -1) (undo-tree-id4564 . -1) (undo-tree-id4565 . -1) (undo-tree-id4566 . -1) (undo-tree-id4567 . -1) (undo-tree-id4568 . -1) (undo-tree-id4569 . -1) (undo-tree-id4570 . -1) (undo-tree-id4571 . -1) (undo-tree-id4572 . -1) (undo-tree-id4573 . -1) (undo-tree-id4574 . -1) (undo-tree-id4575 . -1) (undo-tree-id4576 . -1) (undo-tree-id4577 . -1) (undo-tree-id4578 . -1) (undo-tree-id4579 . -1) (undo-tree-id4580 . -1) (undo-tree-id4581 . -1) (undo-tree-id4582 . -1) (undo-tree-id4583 . -1) (undo-tree-id4584 . -1) (undo-tree-id4585 . -1) (undo-tree-id4586 . -1) (undo-tree-id4587 . -1) (undo-tree-id4588 . -1) (undo-tree-id4589 . -1) (undo-tree-id4590 . -1) (undo-tree-id4591 . -1) (undo-tree-id4592 . -1) (undo-tree-id4593 . -1) (undo-tree-id4594 . -1) (undo-tree-id4595 . -1) (undo-tree-id4596 . -1) (undo-tree-id4597 . -1) (undo-tree-id4598 . -1) (undo-tree-id4599 . -1) (undo-tree-id4600 . -1) (undo-tree-id4601 . -1) (undo-tree-id4602 . -1) (undo-tree-id4603 . -1) (undo-tree-id4604 . -1) (undo-tree-id4605 . -1) (#("-" 0 1 (fontified t)) . -69242) (undo-tree-id4606 . -1) (undo-tree-id4607 . -1) (undo-tree-id4608 . -1) (undo-tree-id4609 . -1) (undo-tree-id4610 . -1) (undo-tree-id4611 . -1) (undo-tree-id4612 . -1) (undo-tree-id4613 . -1) (undo-tree-id4614 . -1) (undo-tree-id4615 . -1) (undo-tree-id4616 . -1) (undo-tree-id4617 . -1) (undo-tree-id4618 . -1) (undo-tree-id4619 . -1) (undo-tree-id4620 . -1) (undo-tree-id4621 . -1) (undo-tree-id4622 . -1) (undo-tree-id4623 . -1) (undo-tree-id4624 . -1) 69243 (69232 . 69243) (#("b" 0 1 (fontified t)) . -69232) (undo-tree-id4625 . -1) (undo-tree-id4626 . -1) (undo-tree-id4627 . -1) (undo-tree-id4628 . -1) (undo-tree-id4629 . -1) (undo-tree-id4630 . -1) (undo-tree-id4631 . -1) (undo-tree-id4632 . -1) (undo-tree-id4633 . -1) (undo-tree-id4634 . -1) (undo-tree-id4635 . -1) (undo-tree-id4636 . -1) (undo-tree-id4637 . -1) (undo-tree-id4638 . -1) (undo-tree-id4639 . -1) (undo-tree-id4640 . -1) (undo-tree-id4641 . -1) (undo-tree-id4642 . -1) (undo-tree-id4643 . -1) (undo-tree-id4644 . -1) (undo-tree-id4645 . -1) (undo-tree-id4646 . -1) (undo-tree-id4647 . -1) (undo-tree-id4648 . -1) (undo-tree-id4649 . -1) (undo-tree-id4650 . -1) (undo-tree-id4651 . -1) (undo-tree-id4652 . -1) (undo-tree-id4653 . -1) (undo-tree-id4654 . -1) (undo-tree-id4655 . -1) (undo-tree-id4656 . -1) (undo-tree-id4657 . -1) (undo-tree-id4658 . -1) (undo-tree-id4659 . -1) (undo-tree-id4660 . -1) (undo-tree-id4661 . -1) (undo-tree-id4662 . -1) (undo-tree-id4663 . -1) (undo-tree-id4664 . -1) (undo-tree-id4665 . -1) (undo-tree-id4666 . -1) (undo-tree-id4667 . -1) (undo-tree-id4668 . -1) (undo-tree-id4669 . -1) (undo-tree-id4670 . -1) (undo-tree-id4671 . -1) (undo-tree-id4672 . -1) (undo-tree-id4673 . -1) (undo-tree-id4674 . -1) (undo-tree-id4675 . -1) (undo-tree-id4676 . -1) (undo-tree-id4677 . -1) (undo-tree-id4678 . -1) (undo-tree-id4679 . -1) (undo-tree-id4680 . -1) (undo-tree-id4681 . -1) (undo-tree-id4682 . -1) (undo-tree-id4683 . -1) (undo-tree-id4684 . -1) (undo-tree-id4685 . -1) (undo-tree-id4686 . -1) (undo-tree-id4687 . -1) (undo-tree-id4688 . -1) (undo-tree-id4689 . -1) (undo-tree-id4690 . -1) (undo-tree-id4691 . -1) (undo-tree-id4692 . -1) (undo-tree-id4693 . -1) (undo-tree-id4694 . -1) (undo-tree-id4695 . -1) (undo-tree-id4696 . -1) (undo-tree-id4697 . -1) (undo-tree-id4698 . -1) (undo-tree-id4699 . -1) (undo-tree-id4700 . -1) (undo-tree-id4701 . -1) (undo-tree-id4702 . -1) (undo-tree-id4703 . -1) (undo-tree-id4704 . -1) (undo-tree-id4705 . -1) (undo-tree-id4706 . -1) (undo-tree-id4707 . -1) (undo-tree-id4708 . -1) (undo-tree-id4709 . -1) (undo-tree-id4710 . -1) (undo-tree-id4711 . -1) (undo-tree-id4712 . -1) (undo-tree-id4713 . -1) (undo-tree-id4714 . -1) (undo-tree-id4715 . -1) (undo-tree-id4716 . -1) (undo-tree-id4717 . -1) (undo-tree-id4718 . -1) (undo-tree-id4719 . -1) (undo-tree-id4720 . -1) (undo-tree-id4721 . -1) (undo-tree-id4722 . -1) (undo-tree-id4723 . -1) (undo-tree-id4724 . -1) (undo-tree-id4725 . -1) (undo-tree-id4726 . -1) (undo-tree-id4727 . -1) (undo-tree-id4728 . -1) (undo-tree-id4729 . -1) (undo-tree-id4730 . -1) (undo-tree-id4731 . -1) (undo-tree-id4732 . -1) (undo-tree-id4733 . -1) (undo-tree-id4734 . -1) (undo-tree-id4735 . -1) (undo-tree-id4736 . -1) (#("i" 0 1 (fontified t)) . -69233) (undo-tree-id4737 . -1) (undo-tree-id4738 . -1) (undo-tree-id4739 . -1) (undo-tree-id4740 . -1) (undo-tree-id4741 . -1) (undo-tree-id4742 . -1) (undo-tree-id4743 . -1) (undo-tree-id4744 . -1) (undo-tree-id4745 . -1) (undo-tree-id4746 . -1) (undo-tree-id4747 . -1) (undo-tree-id4748 . -1) (undo-tree-id4749 . -1) (undo-tree-id4750 . -1) (undo-tree-id4751 . -1) (undo-tree-id4752 . -1) (undo-tree-id4753 . -1) (undo-tree-id4754 . -1) (undo-tree-id4755 . -1) (undo-tree-id4756 . -1) (undo-tree-id4757 . -1) (undo-tree-id4758 . -1) (undo-tree-id4759 . -1) (undo-tree-id4760 . -1) (undo-tree-id4761 . -1) (undo-tree-id4762 . -1) (undo-tree-id4763 . -1) (undo-tree-id4764 . -1) (undo-tree-id4765 . -1) (undo-tree-id4766 . -1) (undo-tree-id4767 . -1) (undo-tree-id4768 . -1) (undo-tree-id4769 . -1) (undo-tree-id4770 . -1) (undo-tree-id4771 . -1) (undo-tree-id4772 . -1) (undo-tree-id4773 . -1) (undo-tree-id4774 . -1) (undo-tree-id4775 . -1) (undo-tree-id4776 . -1) (undo-tree-id4777 . -1) (undo-tree-id4778 . -1) (undo-tree-id4779 . -1) (undo-tree-id4780 . -1) (undo-tree-id4781 . -1) (undo-tree-id4782 . -1) (undo-tree-id4783 . -1) (undo-tree-id4784 . -1) (undo-tree-id4785 . -1) (undo-tree-id4786 . -1) (undo-tree-id4787 . -1) (undo-tree-id4788 . -1) (undo-tree-id4789 . -1) (undo-tree-id4790 . -1) (undo-tree-id4791 . -1) (undo-tree-id4792 . -1) (undo-tree-id4793 . -1) (undo-tree-id4794 . -1) (undo-tree-id4795 . -1) (undo-tree-id4796 . -1) (undo-tree-id4797 . -1) (undo-tree-id4798 . -1) (undo-tree-id4799 . -1) (undo-tree-id4800 . -1) (undo-tree-id4801 . -1) (undo-tree-id4802 . -1) (undo-tree-id4803 . -1) (undo-tree-id4804 . -1) (undo-tree-id4805 . -1) (undo-tree-id4806 . -1) (undo-tree-id4807 . -1) (undo-tree-id4808 . -1) (undo-tree-id4809 . -1) (undo-tree-id4810 . -1) (undo-tree-id4811 . -1) (undo-tree-id4812 . -1) (undo-tree-id4813 . -1) (undo-tree-id4814 . -1) (undo-tree-id4815 . -1) (undo-tree-id4816 . -1) (undo-tree-id4817 . -1) (#("b" 0 1 (fontified t)) . -69234) (undo-tree-id4818 . -1) (undo-tree-id4819 . -1) (undo-tree-id4820 . -1) (undo-tree-id4821 . -1) (undo-tree-id4822 . -1) (undo-tree-id4823 . -1) (undo-tree-id4824 . -1) (undo-tree-id4825 . -1) (undo-tree-id4826 . -1) (undo-tree-id4827 . -1) (undo-tree-id4828 . -1) (undo-tree-id4829 . -1) (undo-tree-id4830 . -1) (undo-tree-id4831 . -1) (undo-tree-id4832 . -1) (undo-tree-id4833 . -1) (undo-tree-id4834 . -1) (undo-tree-id4835 . -1) (undo-tree-id4836 . -1) (undo-tree-id4837 . -1) (undo-tree-id4838 . -1) (undo-tree-id4839 . -1) (undo-tree-id4840 . -1) (undo-tree-id4841 . -1) (undo-tree-id4842 . -1) (undo-tree-id4843 . -1) (undo-tree-id4844 . -1) (undo-tree-id4845 . -1) (undo-tree-id4846 . -1) (undo-tree-id4847 . -1) (undo-tree-id4848 . -1) (undo-tree-id4849 . -1) (undo-tree-id4850 . -1) (undo-tree-id4851 . -1) (undo-tree-id4852 . -1) (undo-tree-id4853 . -1) (undo-tree-id4854 . -1) (undo-tree-id4855 . -1) (undo-tree-id4856 . -1) (undo-tree-id4857 . -1) (undo-tree-id4858 . -1) (undo-tree-id4859 . -1) (undo-tree-id4860 . -1) (undo-tree-id4861 . -1) (undo-tree-id4862 . -1) 69235 (69234 . 69235) (69230 . 69234) (#("r" 0 1 (fontified t)) . -69230) (undo-tree-id4863 . -1) (undo-tree-id4864 . -1) (undo-tree-id4865 . -1) (undo-tree-id4866 . -1) (undo-tree-id4867 . -1) (undo-tree-id4868 . -1) (undo-tree-id4869 . -1) (undo-tree-id4870 . -1) (undo-tree-id4871 . -1) (undo-tree-id4872 . -1) (undo-tree-id4873 . -1) (undo-tree-id4874 . -1) (undo-tree-id4875 . -1) (undo-tree-id4876 . -1) (undo-tree-id4877 . -1) (undo-tree-id4878 . -1) (undo-tree-id4879 . -1) (undo-tree-id4880 . -1) (undo-tree-id4881 . -1) 69231 (69222 . 69231) (#(" " 0 1 (fontified t)) . -69222) (undo-tree-id4882 . -1) (undo-tree-id4883 . -1) (undo-tree-id4884 . -1) (undo-tree-id4885 . -1) (undo-tree-id4886 . -1) (undo-tree-id4887 . -1) (undo-tree-id4888 . -1) (undo-tree-id4889 . -1) (undo-tree-id4890 . -1) (undo-tree-id4891 . -1) (undo-tree-id4892 . -1) (undo-tree-id4893 . -1) (undo-tree-id4894 . -1) (undo-tree-id4895 . -1) (undo-tree-id4896 . -1) (undo-tree-id4897 . -1) (undo-tree-id4898 . -1) (undo-tree-id4899 . -1) (undo-tree-id4900 . -1) (undo-tree-id4901 . -1) (undo-tree-id4902 . -1) (undo-tree-id4903 . -1) (undo-tree-id4904 . -1) (undo-tree-id4905 . -1) (undo-tree-id4906 . -1) (undo-tree-id4907 . -1) (undo-tree-id4908 . -1) (undo-tree-id4909 . -1) (undo-tree-id4910 . -1) (undo-tree-id4911 . -1) (undo-tree-id4912 . -1) (undo-tree-id4913 . -1) (undo-tree-id4914 . -1) (undo-tree-id4915 . -1) (undo-tree-id4916 . -1) (undo-tree-id4917 . -1) (undo-tree-id4918 . -1) (undo-tree-id4919 . -1) (undo-tree-id4920 . -1) (undo-tree-id4921 . -1) (#("o" 0 1 (fontified t)) . -69223) (undo-tree-id4922 . -1) (undo-tree-id4923 . -1) (undo-tree-id4924 . -1) (undo-tree-id4925 . -1) (undo-tree-id4926 . -1) (undo-tree-id4927 . -1) (undo-tree-id4928 . -1) (undo-tree-id4929 . -1) (undo-tree-id4930 . -1) (undo-tree-id4931 . -1) (undo-tree-id4932 . -1) (undo-tree-id4933 . -1) (undo-tree-id4934 . -1) (undo-tree-id4935 . -1) (undo-tree-id4936 . -1) (undo-tree-id4937 . -1) (undo-tree-id4938 . -1) (undo-tree-id4939 . -1) (undo-tree-id4940 . -1) 69224 (69210 . 69224) (#("w" 0 1 (fontified t)) . -69210) (undo-tree-id4941 . -1) (undo-tree-id4942 . -1) (undo-tree-id4943 . -1) (undo-tree-id4944 . -1) (undo-tree-id4945 . -1) (undo-tree-id4946 . -1) (undo-tree-id4947 . -1) (undo-tree-id4948 . -1) (undo-tree-id4949 . -1) (undo-tree-id4950 . -1) (undo-tree-id4951 . -1) (undo-tree-id4952 . -1) (undo-tree-id4953 . -1) (undo-tree-id4954 . -1) (undo-tree-id4955 . -1) (undo-tree-id4956 . -1) (undo-tree-id4957 . -1) (undo-tree-id4958 . -1) (undo-tree-id4959 . -1) (undo-tree-id4960 . -1) (undo-tree-id4961 . -1) (undo-tree-id4962 . -1) (undo-tree-id4963 . -1) (undo-tree-id4964 . -1) (undo-tree-id4965 . -1) (undo-tree-id4966 . -1) (undo-tree-id4967 . -1) (undo-tree-id4968 . -1) (undo-tree-id4969 . -1) (undo-tree-id4970 . -1) (undo-tree-id4971 . -1) (undo-tree-id4972 . -1) (undo-tree-id4973 . -1) (undo-tree-id4974 . -1) (undo-tree-id4975 . -1) (undo-tree-id4976 . -1) (undo-tree-id4977 . -1) (undo-tree-id4978 . -1) (undo-tree-id4979 . -1) (undo-tree-id4980 . -1) (undo-tree-id4981 . -1) (undo-tree-id4982 . -1) (undo-tree-id4983 . -1) (undo-tree-id4984 . -1) (undo-tree-id4985 . -1) (undo-tree-id4986 . -1) (undo-tree-id4987 . -1) (undo-tree-id4988 . -1) (undo-tree-id4989 . -1) (undo-tree-id4990 . -1) (undo-tree-id4991 . -1) (undo-tree-id4992 . -1) (undo-tree-id4993 . -1) (undo-tree-id4994 . -1) (undo-tree-id4995 . -1) (undo-tree-id4996 . -1) (undo-tree-id4997 . -1) (undo-tree-id4998 . -1) (undo-tree-id4999 . -1) (undo-tree-id5000 . -1) (undo-tree-id5001 . -1) (undo-tree-id5002 . -1) (undo-tree-id5003 . -1) (undo-tree-id5004 . -1) (undo-tree-id5005 . -1) (undo-tree-id5006 . -1) (undo-tree-id5007 . -1) (undo-tree-id5008 . -1) (undo-tree-id5009 . -1) (undo-tree-id5010 . -1) (undo-tree-id5011 . -1) (undo-tree-id5012 . -1) (undo-tree-id5013 . -1) (undo-tree-id5014 . -1) (undo-tree-id5015 . -1) (undo-tree-id5016 . -1) (undo-tree-id5017 . -1) (undo-tree-id5018 . -1) (undo-tree-id5019 . -1) (undo-tree-id5020 . -1) (undo-tree-id5021 . -1) (undo-tree-id5022 . -1) (undo-tree-id5023 . -1) (undo-tree-id5024 . -1) (undo-tree-id5025 . -1) (undo-tree-id5026 . -1) (undo-tree-id5027 . -1) (undo-tree-id5028 . -1) (undo-tree-id5029 . -1) (undo-tree-id5030 . -1) (undo-tree-id5031 . -1) (undo-tree-id5032 . -1) (undo-tree-id5033 . -1) (undo-tree-id5034 . -1) (undo-tree-id5035 . -1) (undo-tree-id5036 . -1) (undo-tree-id5037 . -1) (undo-tree-id5038 . -1) (undo-tree-id5039 . -1) (undo-tree-id5040 . -1) (undo-tree-id5041 . -1) (undo-tree-id5042 . -1) (undo-tree-id5043 . -1) (undo-tree-id5044 . -1) (undo-tree-id5045 . -1) (undo-tree-id5046 . -1) (undo-tree-id5047 . -1) (undo-tree-id5048 . -1) (undo-tree-id5049 . -1) (#("h" 0 1 (fontified t)) . -69211) (undo-tree-id5050 . -1) (undo-tree-id5051 . -1) (undo-tree-id5052 . -1) (undo-tree-id5053 . -1) (undo-tree-id5054 . -1) (undo-tree-id5055 . -1) (undo-tree-id5056 . -1) (undo-tree-id5057 . -1) (undo-tree-id5058 . -1) (undo-tree-id5059 . -1) (undo-tree-id5060 . -1) (undo-tree-id5061 . -1) (undo-tree-id5062 . -1) (undo-tree-id5063 . -1) (undo-tree-id5064 . -1) (undo-tree-id5065 . -1) (undo-tree-id5066 . -1) (undo-tree-id5067 . -1) (undo-tree-id5068 . -1) (undo-tree-id5069 . -1) (undo-tree-id5070 . -1) (undo-tree-id5071 . -1) (undo-tree-id5072 . -1) (undo-tree-id5073 . -1) (undo-tree-id5074 . -1) (undo-tree-id5075 . -1) (undo-tree-id5076 . -1) (undo-tree-id5077 . -1) (undo-tree-id5078 . -1) (undo-tree-id5079 . -1) (undo-tree-id5080 . -1) (undo-tree-id5081 . -1) (undo-tree-id5082 . -1) (undo-tree-id5083 . -1) (undo-tree-id5084 . -1) (undo-tree-id5085 . -1) (undo-tree-id5086 . -1) (undo-tree-id5087 . -1) (undo-tree-id5088 . -1) (undo-tree-id5089 . -1) (undo-tree-id5090 . -1) (undo-tree-id5091 . -1) (undo-tree-id5092 . -1) (undo-tree-id5093 . -1) (undo-tree-id5094 . -1) (undo-tree-id5095 . -1) (undo-tree-id5096 . -1) (undo-tree-id5097 . -1) (undo-tree-id5098 . -1) (undo-tree-id5099 . -1) (undo-tree-id5100 . -1) (undo-tree-id5101 . -1) (undo-tree-id5102 . -1) (undo-tree-id5103 . -1) (undo-tree-id5104 . -1) (undo-tree-id5105 . -1) (undo-tree-id5106 . -1) (undo-tree-id5107 . -1) (undo-tree-id5108 . -1) (undo-tree-id5109 . -1) (undo-tree-id5110 . -1) (undo-tree-id5111 . -1) (undo-tree-id5112 . -1) (undo-tree-id5113 . -1) (undo-tree-id5114 . -1) (undo-tree-id5115 . -1) (undo-tree-id5116 . -1) (undo-tree-id5117 . -1) (undo-tree-id5118 . -1) (undo-tree-id5119 . -1) (undo-tree-id5120 . -1) (undo-tree-id5121 . -1) (undo-tree-id5122 . -1) (undo-tree-id5123 . -1) (undo-tree-id5124 . -1) (undo-tree-id5125 . -1) (undo-tree-id5126 . -1) (undo-tree-id5127 . -1) (undo-tree-id5128 . -1) (undo-tree-id5129 . -1) (undo-tree-id5130 . -1) (undo-tree-id5131 . -1) (undo-tree-id5132 . -1) (undo-tree-id5133 . -1) (undo-tree-id5134 . -1) (undo-tree-id5135 . -1) (undo-tree-id5136 . -1) (undo-tree-id5137 . -1) (undo-tree-id5138 . -1) (undo-tree-id5139 . -1) (undo-tree-id5140 . -1) (undo-tree-id5141 . -1) (undo-tree-id5142 . -1) (#("i" 0 1 (fontified t)) . -69212) (undo-tree-id5143 . -1) (undo-tree-id5144 . -1) (undo-tree-id5145 . -1) (undo-tree-id5146 . -1) (undo-tree-id5147 . -1) (undo-tree-id5148 . -1) (undo-tree-id5149 . -1) (undo-tree-id5150 . -1) (undo-tree-id5151 . -1) (undo-tree-id5152 . -1) (undo-tree-id5153 . -1) (undo-tree-id5154 . -1) (undo-tree-id5155 . -1) (undo-tree-id5156 . -1) (undo-tree-id5157 . -1) (undo-tree-id5158 . -1) (undo-tree-id5159 . -1) (undo-tree-id5160 . -1) (undo-tree-id5161 . -1) (undo-tree-id5162 . -1) (undo-tree-id5163 . -1) (undo-tree-id5164 . -1) (undo-tree-id5165 . -1) (undo-tree-id5166 . -1) (undo-tree-id5167 . -1) (undo-tree-id5168 . -1) (undo-tree-id5169 . -1) (undo-tree-id5170 . -1) (undo-tree-id5171 . -1) (undo-tree-id5172 . -1) (undo-tree-id5173 . -1) (undo-tree-id5174 . -1) (undo-tree-id5175 . -1) (undo-tree-id5176 . -1) (undo-tree-id5177 . -1) (undo-tree-id5178 . -1) (undo-tree-id5179 . -1) (undo-tree-id5180 . -1) (undo-tree-id5181 . -1) (undo-tree-id5182 . -1) (undo-tree-id5183 . -1) (undo-tree-id5184 . -1) (undo-tree-id5185 . -1) (undo-tree-id5186 . -1) (undo-tree-id5187 . -1) (undo-tree-id5188 . -1) (undo-tree-id5189 . -1) (undo-tree-id5190 . -1) (undo-tree-id5191 . -1) (undo-tree-id5192 . -1) (undo-tree-id5193 . -1) (undo-tree-id5194 . -1) (undo-tree-id5195 . -1) (undo-tree-id5196 . -1) (undo-tree-id5197 . -1) (undo-tree-id5198 . -1) (undo-tree-id5199 . -1) (undo-tree-id5200 . -1) (undo-tree-id5201 . -1) (undo-tree-id5202 . -1) (undo-tree-id5203 . -1) (undo-tree-id5204 . -1) (undo-tree-id5205 . -1) (undo-tree-id5206 . -1) (undo-tree-id5207 . -1) (undo-tree-id5208 . -1) (undo-tree-id5209 . -1) (#("c" 0 1 (fontified t)) . -69213) (undo-tree-id5210 . -1) (undo-tree-id5211 . -1) (undo-tree-id5212 . -1) (undo-tree-id5213 . -1) (undo-tree-id5214 . -1) (undo-tree-id5215 . -1) (undo-tree-id5216 . -1) (undo-tree-id5217 . -1) (undo-tree-id5218 . -1) (undo-tree-id5219 . -1) (undo-tree-id5220 . -1) (undo-tree-id5221 . -1) (undo-tree-id5222 . -1) (undo-tree-id5223 . -1) (undo-tree-id5224 . -1) (undo-tree-id5225 . -1) (undo-tree-id5226 . -1) (undo-tree-id5227 . -1) (undo-tree-id5228 . -1) (undo-tree-id5229 . -1) (undo-tree-id5230 . -1) (undo-tree-id5231 . -1) (undo-tree-id5232 . -1) (undo-tree-id5233 . -1) (undo-tree-id5234 . -1) (undo-tree-id5235 . -1) (undo-tree-id5236 . -1) (undo-tree-id5237 . -1) (undo-tree-id5238 . -1) (undo-tree-id5239 . -1) (undo-tree-id5240 . -1) (undo-tree-id5241 . -1) (undo-tree-id5242 . -1) (undo-tree-id5243 . -1) (undo-tree-id5244 . -1) (undo-tree-id5245 . -1) (undo-tree-id5246 . -1) (undo-tree-id5247 . -1) (undo-tree-id5248 . -1) (undo-tree-id5249 . -1) (undo-tree-id5250 . -1) (undo-tree-id5251 . -1) (undo-tree-id5252 . -1) (undo-tree-id5253 . -1) (undo-tree-id5254 . -1) (undo-tree-id5255 . -1) (undo-tree-id5256 . -1) (undo-tree-id5257 . -1) (undo-tree-id5258 . -1) (undo-tree-id5259 . -1) (undo-tree-id5260 . -1) (#("h" 0 1 (fontified t)) . -69214) (undo-tree-id5261 . -1) (undo-tree-id5262 . -1) (undo-tree-id5263 . -1) (undo-tree-id5264 . -1) (undo-tree-id5265 . -1) (undo-tree-id5266 . -1) (undo-tree-id5267 . -1) (undo-tree-id5268 . -1) (undo-tree-id5269 . -1) (undo-tree-id5270 . -1) (undo-tree-id5271 . -1) (undo-tree-id5272 . -1) (undo-tree-id5273 . -1) (undo-tree-id5274 . -1) (undo-tree-id5275 . -1) (undo-tree-id5276 . -1) (undo-tree-id5277 . -1) (undo-tree-id5278 . -1) (undo-tree-id5279 . -1) (undo-tree-id5280 . -1) (undo-tree-id5281 . -1) (undo-tree-id5282 . -1) (undo-tree-id5283 . -1) (undo-tree-id5284 . -1) (undo-tree-id5285 . -1) (undo-tree-id5286 . -1) (undo-tree-id5287 . -1) (undo-tree-id5288 . -1) (undo-tree-id5289 . -1) (undo-tree-id5290 . -1) (undo-tree-id5291 . -1) (undo-tree-id5292 . -1) (undo-tree-id5293 . -1) (undo-tree-id5294 . -1) (undo-tree-id5295 . -1) (#(" " 0 1 (fontified t)) . -69215) (undo-tree-id5296 . -1) (undo-tree-id5297 . -1) (undo-tree-id5298 . -1) (undo-tree-id5299 . -1) (undo-tree-id5300 . -1) (undo-tree-id5301 . -1) (undo-tree-id5302 . -1) (undo-tree-id5303 . -1) (undo-tree-id5304 . -1) (undo-tree-id5305 . -1) (undo-tree-id5306 . -1) (undo-tree-id5307 . -1) (undo-tree-id5308 . -1) (undo-tree-id5309 . -1) (undo-tree-id5310 . -1) (undo-tree-id5311 . -1) (undo-tree-id5312 . -1) (undo-tree-id5313 . -1) (undo-tree-id5314 . -1) 69216 (69208 . 69216) (#("." 0 1 (fontified t)) . -69208) (undo-tree-id5315 . -1) (undo-tree-id5316 . -1) (undo-tree-id5317 . -1) (undo-tree-id5318 . -1) (undo-tree-id5319 . -1) (undo-tree-id5320 . -1) (undo-tree-id5321 . -1) (undo-tree-id5322 . -1) (undo-tree-id5323 . -1) (undo-tree-id5324 . -1) (undo-tree-id5325 . -1) (undo-tree-id5326 . -1) (undo-tree-id5327 . -1) (undo-tree-id5328 . -1) (undo-tree-id5329 . -1) (undo-tree-id5330 . -1) (undo-tree-id5331 . -1) (undo-tree-id5332 . -1) (undo-tree-id5333 . -1) (undo-tree-id5334 . -1) (undo-tree-id5335 . -1) (undo-tree-id5336 . -1) (undo-tree-id5337 . -1) (undo-tree-id5338 . -1) (undo-tree-id5339 . -1) (undo-tree-id5340 . -1) (undo-tree-id5341 . -1) (undo-tree-id5342 . -1) (undo-tree-id5343 . -1) (undo-tree-id5344 . -1) (undo-tree-id5345 . -1) (undo-tree-id5346 . -1) (undo-tree-id5347 . -1) (undo-tree-id5348 . -1) (undo-tree-id5349 . -1) (undo-tree-id5350 . -1) (undo-tree-id5351 . -1) (undo-tree-id5352 . -1) (undo-tree-id5353 . -1) (undo-tree-id5354 . -1) (undo-tree-id5355 . -1) (undo-tree-id5356 . -1) (undo-tree-id5357 . -1) (undo-tree-id5358 . -1) (undo-tree-id5359 . -1) (undo-tree-id5360 . -1) (undo-tree-id5361 . -1) (undo-tree-id5362 . -1) (undo-tree-id5363 . -1) (undo-tree-id5364 . -1) (#(" " 0 1 (fontified t)) . -69209) (undo-tree-id5365 . -1) (undo-tree-id5366 . -1) (undo-tree-id5367 . -1) (undo-tree-id5368 . -1) (undo-tree-id5369 . -1) (undo-tree-id5370 . -1) (undo-tree-id5371 . -1) (undo-tree-id5372 . -1) (undo-tree-id5373 . -1) (undo-tree-id5374 . -1) (undo-tree-id5375 . -1) (undo-tree-id5376 . -1) (undo-tree-id5377 . -1) (undo-tree-id5378 . -1) (undo-tree-id5379 . -1) (undo-tree-id5380 . -1) (undo-tree-id5381 . -1) (undo-tree-id5382 . -1) (undo-tree-id5383 . -1) (undo-tree-id5384 . -1) (undo-tree-id5385 . -1) (undo-tree-id5386 . -1) (undo-tree-id5387 . -1) (undo-tree-id5388 . -1) (undo-tree-id5389 . -1) (undo-tree-id5390 . -1) (undo-tree-id5391 . -1) (undo-tree-id5392 . -1) (undo-tree-id5393 . -1) (undo-tree-id5394 . -1) (undo-tree-id5395 . -1) (undo-tree-id5396 . -1) (undo-tree-id5397 . -1) (undo-tree-id5398 . -1) 69210 (69199 . 69210) (69178 . 69199) (#("f" 0 1 (fontified t)) . -69178) (undo-tree-id5399 . -1) (undo-tree-id5400 . -1) (undo-tree-id5401 . -1) (undo-tree-id5402 . -1) (undo-tree-id5403 . -1) (undo-tree-id5404 . -1) (undo-tree-id5405 . -1) (undo-tree-id5406 . -1) (undo-tree-id5407 . -1) (undo-tree-id5408 . -1) (undo-tree-id5409 . -1) (undo-tree-id5410 . -1) (undo-tree-id5411 . -1) (undo-tree-id5412 . -1) (undo-tree-id5413 . -1) (undo-tree-id5414 . -1) (undo-tree-id5415 . -1) (undo-tree-id5416 . -1) (undo-tree-id5417 . -1) 69179 (69178 . 69179) (#("f" 0 1 (fontified t)) . -69178) (undo-tree-id5418 . -1) (undo-tree-id5419 . -1) (undo-tree-id5420 . -1) (undo-tree-id5421 . -1) (undo-tree-id5422 . -1) (undo-tree-id5423 . -1) (undo-tree-id5424 . -1) (undo-tree-id5425 . -1) (undo-tree-id5426 . -1) (undo-tree-id5427 . -1) (undo-tree-id5428 . -1) (undo-tree-id5429 . -1) (undo-tree-id5430 . -1) (undo-tree-id5431 . -1) (undo-tree-id5432 . -1) (undo-tree-id5433 . -1) (undo-tree-id5434 . -1) (undo-tree-id5435 . -1) (undo-tree-id5436 . -1) (undo-tree-id5437 . -1) (undo-tree-id5438 . -1) (undo-tree-id5439 . -1) (undo-tree-id5440 . -1) (undo-tree-id5441 . -1) (undo-tree-id5442 . -1) (undo-tree-id5443 . -1) (undo-tree-id5444 . -1) (undo-tree-id5445 . -1) (undo-tree-id5446 . -1) (undo-tree-id5447 . -1) (undo-tree-id5448 . -1) (undo-tree-id5449 . -1) (undo-tree-id5450 . -1) (undo-tree-id5451 . -1) (undo-tree-id5452 . -1) (#("i" 0 1 (fontified t)) . -69179) (undo-tree-id5453 . -1) (undo-tree-id5454 . -1) (undo-tree-id5455 . -1) (undo-tree-id5456 . -1) (undo-tree-id5457 . -1) (undo-tree-id5458 . -1) (undo-tree-id5459 . -1) (undo-tree-id5460 . -1) (undo-tree-id5461 . -1) (undo-tree-id5462 . -1) (undo-tree-id5463 . -1) (undo-tree-id5464 . -1) (undo-tree-id5465 . -1) (undo-tree-id5466 . -1) (undo-tree-id5467 . -1) (undo-tree-id5468 . -1) (undo-tree-id5469 . -1) (undo-tree-id5470 . -1) (undo-tree-id5471 . -1) 69180 (69161 . 69180) (69150 . 69161) (69129 . 69150) (#("a" 0 1 (fontified t)) . -69129) (undo-tree-id5472 . -1) (undo-tree-id5473 . -1) (undo-tree-id5474 . -1) (undo-tree-id5475 . -1) (undo-tree-id5476 . -1) (undo-tree-id5477 . -1) (undo-tree-id5478 . -1) (undo-tree-id5479 . -1) (undo-tree-id5480 . -1) (undo-tree-id5481 . -1) (undo-tree-id5482 . -1) (undo-tree-id5483 . -1) (undo-tree-id5484 . -1) (undo-tree-id5485 . -1) (undo-tree-id5486 . -1) 69130 (69124 . 69130) (#(" " 0 1 (fontified t)) . -69124) (undo-tree-id5487 . -1) (undo-tree-id5488 . -1) (undo-tree-id5489 . -1) (undo-tree-id5490 . -1) (undo-tree-id5491 . -1) (undo-tree-id5492 . -1) (undo-tree-id5493 . -1) (undo-tree-id5494 . -1) (undo-tree-id5495 . -1) (undo-tree-id5496 . -1) (undo-tree-id5497 . -1) (undo-tree-id5498 . -1) (undo-tree-id5499 . -1) (undo-tree-id5500 . -1) (undo-tree-id5501 . -1) (undo-tree-id5502 . -1) (undo-tree-id5503 . -1) (undo-tree-id5504 . -1) (undo-tree-id5505 . -1) (undo-tree-id5506 . -1) (undo-tree-id5507 . -1) (undo-tree-id5508 . -1) (undo-tree-id5509 . -1) (undo-tree-id5510 . -1) (undo-tree-id5511 . -1) (undo-tree-id5512 . -1) (undo-tree-id5513 . -1) (undo-tree-id5514 . -1) (undo-tree-id5515 . -1) (undo-tree-id5516 . -1) (undo-tree-id5517 . -1) (undo-tree-id5518 . -1) (undo-tree-id5519 . -1) (undo-tree-id5520 . -1) (undo-tree-id5521 . -1) (undo-tree-id5522 . -1) (undo-tree-id5523 . -1) (undo-tree-id5524 . -1) (undo-tree-id5525 . -1) (undo-tree-id5526 . -1) (undo-tree-id5527 . -1) (undo-tree-id5528 . -1) (undo-tree-id5529 . -1) (undo-tree-id5530 . -1) (undo-tree-id5531 . -1) (undo-tree-id5532 . -1) (undo-tree-id5533 . -1) (undo-tree-id5534 . -1) (undo-tree-id5535 . -1) (undo-tree-id5536 . -1) (undo-tree-id5537 . -1) (undo-tree-id5538 . -1) (undo-tree-id5539 . -1) (undo-tree-id5540 . -1) (undo-tree-id5541 . -1) (undo-tree-id5542 . -1) (undo-tree-id5543 . -1) (#("t" 0 1 (fontified t)) . -69125) (undo-tree-id5544 . -1) (undo-tree-id5545 . -1) (undo-tree-id5546 . -1) (undo-tree-id5547 . -1) (undo-tree-id5548 . -1) (undo-tree-id5549 . -1) (undo-tree-id5550 . -1) (undo-tree-id5551 . -1) (undo-tree-id5552 . -1) (undo-tree-id5553 . -1) (undo-tree-id5554 . -1) (undo-tree-id5555 . -1) (undo-tree-id5556 . -1) (undo-tree-id5557 . -1) (undo-tree-id5558 . -1) (undo-tree-id5559 . -1) (undo-tree-id5560 . -1) (undo-tree-id5561 . -1) (undo-tree-id5562 . -1) (undo-tree-id5563 . -1) (undo-tree-id5564 . -1) (undo-tree-id5565 . -1) (undo-tree-id5566 . -1) (undo-tree-id5567 . -1) (undo-tree-id5568 . -1) (undo-tree-id5569 . -1) (undo-tree-id5570 . -1) (undo-tree-id5571 . -1) (undo-tree-id5572 . -1) (undo-tree-id5573 . -1) (undo-tree-id5574 . -1) (undo-tree-id5575 . -1) (undo-tree-id5576 . -1) (undo-tree-id5577 . -1) (undo-tree-id5578 . -1) (undo-tree-id5579 . -1) (undo-tree-id5580 . -1) (undo-tree-id5581 . -1) (undo-tree-id5582 . -1) (undo-tree-id5583 . -1) (undo-tree-id5584 . -1) (#(" " 0 1 (fontified t)) . -69126) (undo-tree-id5585 . -1) (undo-tree-id5586 . -1) (undo-tree-id5587 . -1) (undo-tree-id5588 . -1) (undo-tree-id5589 . -1) (undo-tree-id5590 . -1) (undo-tree-id5591 . -1) (undo-tree-id5592 . -1) (undo-tree-id5593 . -1) (undo-tree-id5594 . -1) (undo-tree-id5595 . -1) (undo-tree-id5596 . -1) (undo-tree-id5597 . -1) (undo-tree-id5598 . -1) (undo-tree-id5599 . -1) (undo-tree-id5600 . -1) (undo-tree-id5601 . -1) (undo-tree-id5602 . -1) (undo-tree-id5603 . -1) (undo-tree-id5604 . -1) (undo-tree-id5605 . -1) (undo-tree-id5606 . -1) (undo-tree-id5607 . -1) (undo-tree-id5608 . -1) (undo-tree-id5609 . -1) 69127 (#("f" 0 1 (fontified t)) . -69127) (undo-tree-id5610 . -1) (undo-tree-id5611 . -1) (undo-tree-id5612 . -1) (undo-tree-id5613 . -1) (undo-tree-id5614 . -1) (undo-tree-id5615 . -1) (undo-tree-id5616 . -1) (undo-tree-id5617 . -1) (undo-tree-id5618 . -1) 69128 (69111 . 69128) (#("o" 0 1 (fontified t)) . -69111) (undo-tree-id5619 . -1) (undo-tree-id5620 . -1) (undo-tree-id5621 . -1) (undo-tree-id5622 . -1) (undo-tree-id5623 . -1) (undo-tree-id5624 . -1) (undo-tree-id5625 . -1) (undo-tree-id5626 . -1) (undo-tree-id5627 . -1) (undo-tree-id5628 . -1) (undo-tree-id5629 . -1) (undo-tree-id5630 . -1) (undo-tree-id5631 . -1) (undo-tree-id5632 . -1) (undo-tree-id5633 . -1) (undo-tree-id5634 . -1) (undo-tree-id5635 . -1) (undo-tree-id5636 . -1) (undo-tree-id5637 . -1) (undo-tree-id5638 . -1) (undo-tree-id5639 . -1) (undo-tree-id5640 . -1) (undo-tree-id5641 . -1) (undo-tree-id5642 . -1) (undo-tree-id5643 . -1) (undo-tree-id5644 . -1) (undo-tree-id5645 . -1) (undo-tree-id5646 . -1) (undo-tree-id5647 . -1) (undo-tree-id5648 . -1) (undo-tree-id5649 . -1) (undo-tree-id5650 . -1) (undo-tree-id5651 . -1) (undo-tree-id5652 . -1) (undo-tree-id5653 . -1) (undo-tree-id5654 . -1) (undo-tree-id5655 . -1) (undo-tree-id5656 . -1) (undo-tree-id5657 . -1) (undo-tree-id5658 . -1) (undo-tree-id5659 . -1) (undo-tree-id5660 . -1) (undo-tree-id5661 . -1) (undo-tree-id5662 . -1) (undo-tree-id5663 . -1) (undo-tree-id5664 . -1) (undo-tree-id5665 . -1) (undo-tree-id5666 . -1) (undo-tree-id5667 . -1) (undo-tree-id5668 . -1) (undo-tree-id5669 . -1) (undo-tree-id5670 . -1) (undo-tree-id5671 . -1) (undo-tree-id5672 . -1) (undo-tree-id5673 . -1) (undo-tree-id5674 . -1) (undo-tree-id5675 . -1) (undo-tree-id5676 . -1) (undo-tree-id5677 . -1) (undo-tree-id5678 . -1) (undo-tree-id5679 . -1) (undo-tree-id5680 . -1) (undo-tree-id5681 . -1) (undo-tree-id5682 . -1) (undo-tree-id5683 . -1) (undo-tree-id5684 . -1) (undo-tree-id5685 . -1) (undo-tree-id5686 . -1) (undo-tree-id5687 . -1) (undo-tree-id5688 . -1) (undo-tree-id5689 . -1) (undo-tree-id5690 . -1) (undo-tree-id5691 . -1) (undo-tree-id5692 . -1) (undo-tree-id5693 . -1) (undo-tree-id5694 . -1) (undo-tree-id5695 . -1) (undo-tree-id5696 . -1) (undo-tree-id5697 . -1) (undo-tree-id5698 . -1) (undo-tree-id5699 . -1) (undo-tree-id5700 . -1) (undo-tree-id5701 . -1) (undo-tree-id5702 . -1) (undo-tree-id5703 . -1) (undo-tree-id5704 . -1) (undo-tree-id5705 . -1) (undo-tree-id5706 . -1) (undo-tree-id5707 . -1) (undo-tree-id5708 . -1) (undo-tree-id5709 . -1) (undo-tree-id5710 . -1) (undo-tree-id5711 . -1) (undo-tree-id5712 . -1) (undo-tree-id5713 . -1) (undo-tree-id5714 . -1) (undo-tree-id5715 . -1) (undo-tree-id5716 . -1) (undo-tree-id5717 . -1) (undo-tree-id5718 . -1) (undo-tree-id5719 . -1) (undo-tree-id5720 . -1) (undo-tree-id5721 . -1) (undo-tree-id5722 . -1) (undo-tree-id5723 . -1) (undo-tree-id5724 . -1) (undo-tree-id5725 . -1) (undo-tree-id5726 . -1) (undo-tree-id5727 . -1) (undo-tree-id5728 . -1) (undo-tree-id5729 . -1) (undo-tree-id5730 . -1) (undo-tree-id5731 . -1) (undo-tree-id5732 . -1) (undo-tree-id5733 . -1) (undo-tree-id5734 . -1) (undo-tree-id5735 . -1) (undo-tree-id5736 . -1) (undo-tree-id5737 . -1) (undo-tree-id5738 . -1) (undo-tree-id5739 . -1) (undo-tree-id5740 . -1) (undo-tree-id5741 . -1) (undo-tree-id5742 . -1) (undo-tree-id5743 . -1) (undo-tree-id5744 . -1) (undo-tree-id5745 . -1) (undo-tree-id5746 . -1) (undo-tree-id5747 . -1) (undo-tree-id5748 . -1) (undo-tree-id5749 . -1) (undo-tree-id5750 . -1) (undo-tree-id5751 . -1) (undo-tree-id5752 . -1) (undo-tree-id5753 . -1) (undo-tree-id5754 . -1) (undo-tree-id5755 . -1) (undo-tree-id5756 . -1) (undo-tree-id5757 . -1) (undo-tree-id5758 . -1) (undo-tree-id5759 . -1) (undo-tree-id5760 . -1) (undo-tree-id5761 . -1) (undo-tree-id5762 . -1) (undo-tree-id5763 . -1) (undo-tree-id5764 . -1) (undo-tree-id5765 . -1) (undo-tree-id5766 . -1) (undo-tree-id5767 . -1) (undo-tree-id5768 . -1) (undo-tree-id5769 . -1) (undo-tree-id5770 . -1) (undo-tree-id5771 . -1) (undo-tree-id5772 . -1) (undo-tree-id5773 . -1) (undo-tree-id5774 . -1) (undo-tree-id5775 . -1) (undo-tree-id5776 . -1) (undo-tree-id5777 . -1) (undo-tree-id5778 . -1) (undo-tree-id5779 . -1) (undo-tree-id5780 . -1) (undo-tree-id5781 . -1) (undo-tree-id5782 . -1) (undo-tree-id5783 . -1) (undo-tree-id5784 . -1) (undo-tree-id5785 . -1) (undo-tree-id5786 . -1) (undo-tree-id5787 . -1) (undo-tree-id5788 . -1) (undo-tree-id5789 . -1) (undo-tree-id5790 . -1) (undo-tree-id5791 . -1) (undo-tree-id5792 . -1) (undo-tree-id5793 . -1) (undo-tree-id5794 . -1) (undo-tree-id5795 . -1) (undo-tree-id5796 . -1) (undo-tree-id5797 . -1) (undo-tree-id5798 . -1) (undo-tree-id5799 . -1) (undo-tree-id5800 . -1) (undo-tree-id5801 . -1) (undo-tree-id5802 . -1) (undo-tree-id5803 . -1) (undo-tree-id5804 . -1) (undo-tree-id5805 . -1) (undo-tree-id5806 . -1) (undo-tree-id5807 . -1) (undo-tree-id5808 . -1) (undo-tree-id5809 . -1) (undo-tree-id5810 . -1) (undo-tree-id5811 . -1) (undo-tree-id5812 . -1) (undo-tree-id5813 . -1) (undo-tree-id5814 . -1) (undo-tree-id5815 . -1) (undo-tree-id5816 . -1) (undo-tree-id5817 . -1) (undo-tree-id5818 . -1) (undo-tree-id5819 . -1) (undo-tree-id5820 . -1) (undo-tree-id5821 . -1) (undo-tree-id5822 . -1) (undo-tree-id5823 . -1) (undo-tree-id5824 . -1) (undo-tree-id5825 . -1) (undo-tree-id5826 . -1) (undo-tree-id5827 . -1) (undo-tree-id5828 . -1) (undo-tree-id5829 . -1) (undo-tree-id5830 . -1) (undo-tree-id5831 . -1) (undo-tree-id5832 . -1) (undo-tree-id5833 . -1) (undo-tree-id5834 . -1) (undo-tree-id5835 . -1) (undo-tree-id5836 . -1) (undo-tree-id5837 . -1) (undo-tree-id5838 . -1) (undo-tree-id5839 . -1) (undo-tree-id5840 . -1) (undo-tree-id5841 . -1) (undo-tree-id5842 . -1) (undo-tree-id5843 . -1) (undo-tree-id5844 . -1) (undo-tree-id5845 . -1) (undo-tree-id5846 . -1) (undo-tree-id5847 . -1) (undo-tree-id5848 . -1) (undo-tree-id5849 . -1) (undo-tree-id5850 . -1) (undo-tree-id5851 . -1) (undo-tree-id5852 . -1) (undo-tree-id5853 . -1) (undo-tree-id5854 . -1) (undo-tree-id5855 . -1) (undo-tree-id5856 . -1) (undo-tree-id5857 . -1) (undo-tree-id5858 . -1) (undo-tree-id5859 . -1) (undo-tree-id5860 . -1) (undo-tree-id5861 . -1) (undo-tree-id5862 . -1) (undo-tree-id5863 . -1) (undo-tree-id5864 . -1) (undo-tree-id5865 . -1) (undo-tree-id5866 . -1) (undo-tree-id5867 . -1) (undo-tree-id5868 . -1) (undo-tree-id5869 . -1) (undo-tree-id5870 . -1) (undo-tree-id5871 . -1) (undo-tree-id5872 . -1) (undo-tree-id5873 . -1) (undo-tree-id5874 . -1) (undo-tree-id5875 . -1) (undo-tree-id5876 . -1) (undo-tree-id5877 . -1) (undo-tree-id5878 . -1) (undo-tree-id5879 . -1) (undo-tree-id5880 . -1) (undo-tree-id5881 . -1) (undo-tree-id5882 . -1) (undo-tree-id5883 . -1) (undo-tree-id5884 . -1) (undo-tree-id5885 . -1) (undo-tree-id5886 . -1) (undo-tree-id5887 . -1) (undo-tree-id5888 . -1) (undo-tree-id5889 . -1) (undo-tree-id5890 . -1) (undo-tree-id5891 . -1) (undo-tree-id5892 . -1) (undo-tree-id5893 . -1) (undo-tree-id5894 . -1) (undo-tree-id5895 . -1) (undo-tree-id5896 . -1) (undo-tree-id5897 . -1) (undo-tree-id5898 . -1) (undo-tree-id5899 . -1) (undo-tree-id5900 . -1) (undo-tree-id5901 . -1) (undo-tree-id5902 . -1) (undo-tree-id5903 . -1) (undo-tree-id5904 . -1) (undo-tree-id5905 . -1) (undo-tree-id5906 . -1) (undo-tree-id5907 . -1) (undo-tree-id5908 . -1) (undo-tree-id5909 . -1) (undo-tree-id5910 . -1) (undo-tree-id5911 . -1) (undo-tree-id5912 . -1) (undo-tree-id5913 . -1) (undo-tree-id5914 . -1) (undo-tree-id5915 . -1) (undo-tree-id5916 . -1) (undo-tree-id5917 . -1) (undo-tree-id5918 . -1) (undo-tree-id5919 . -1) (undo-tree-id5920 . -1) (undo-tree-id5921 . -1) (undo-tree-id5922 . -1) (undo-tree-id5923 . -1) (undo-tree-id5924 . -1) (undo-tree-id5925 . -1) (undo-tree-id5926 . -1) (undo-tree-id5927 . -1) (undo-tree-id5928 . -1) (undo-tree-id5929 . -1) (undo-tree-id5930 . -1) (undo-tree-id5931 . -1) (undo-tree-id5932 . -1) (undo-tree-id5933 . -1) (undo-tree-id5934 . -1) (undo-tree-id5935 . -1) (undo-tree-id5936 . -1) (undo-tree-id5937 . -1) (undo-tree-id5938 . -1) (undo-tree-id5939 . -1) (undo-tree-id5940 . -1) (undo-tree-id5941 . -1) (undo-tree-id5942 . -1) (undo-tree-id5943 . -1) (undo-tree-id5944 . -1) (undo-tree-id5945 . -1) (undo-tree-id5946 . -1) (undo-tree-id5947 . -1) (undo-tree-id5948 . -1) (undo-tree-id5949 . -1) (undo-tree-id5950 . -1) (undo-tree-id5951 . -1) (undo-tree-id5952 . -1) (undo-tree-id5953 . -1) (undo-tree-id5954 . -1) (undo-tree-id5955 . -1) (undo-tree-id5956 . -1) (undo-tree-id5957 . -1) (undo-tree-id5958 . -1) (undo-tree-id5959 . -1) (undo-tree-id5960 . -1) (undo-tree-id5961 . -1) (undo-tree-id5962 . -1) (undo-tree-id5963 . -1) (undo-tree-id5964 . -1) (undo-tree-id5965 . -1) (undo-tree-id5966 . -1) (undo-tree-id5967 . -1) (undo-tree-id5968 . -1) (undo-tree-id5969 . -1) (undo-tree-id5970 . -1) (undo-tree-id5971 . -1) (undo-tree-id5972 . -1) (undo-tree-id5973 . -1) (undo-tree-id5974 . -1) (undo-tree-id5975 . -1) (undo-tree-id5976 . -1) (undo-tree-id5977 . -1) (undo-tree-id5978 . -1) (undo-tree-id5979 . -1) (undo-tree-id5980 . -1) (undo-tree-id5981 . -1) (undo-tree-id5982 . -1) (undo-tree-id5983 . -1) (undo-tree-id5984 . -1) (undo-tree-id5985 . -1) (undo-tree-id5986 . -1) (undo-tree-id5987 . -1) (undo-tree-id5988 . -1) (undo-tree-id5989 . -1) (undo-tree-id5990 . -1) (undo-tree-id5991 . -1) (undo-tree-id5992 . -1) (undo-tree-id5993 . -1) (undo-tree-id5994 . -1) (undo-tree-id5995 . -1) (undo-tree-id5996 . -1) (undo-tree-id5997 . -1) (undo-tree-id5998 . -1) (undo-tree-id5999 . -1) (undo-tree-id6000 . -1) (undo-tree-id6001 . -1) (undo-tree-id6002 . -1) (undo-tree-id6003 . -1) (undo-tree-id6004 . -1) (undo-tree-id6005 . -1) (undo-tree-id6006 . -1) (undo-tree-id6007 . -1) (undo-tree-id6008 . -1) (undo-tree-id6009 . -1) (undo-tree-id6010 . -1) (undo-tree-id6011 . -1) (undo-tree-id6012 . -1) (undo-tree-id6013 . -1) (undo-tree-id6014 . -1) (undo-tree-id6015 . -1) (undo-tree-id6016 . -1) (undo-tree-id6017 . -1) (undo-tree-id6018 . -1) (undo-tree-id6019 . -1) (undo-tree-id6020 . -1) (undo-tree-id6021 . -1) (undo-tree-id6022 . -1) (undo-tree-id6023 . -1) (undo-tree-id6024 . -1) (undo-tree-id6025 . -1) (undo-tree-id6026 . -1) (undo-tree-id6027 . -1) (undo-tree-id6028 . -1) (undo-tree-id6029 . -1) (undo-tree-id6030 . -1) (undo-tree-id6031 . -1) (undo-tree-id6032 . -1) (undo-tree-id6033 . -1) (undo-tree-id6034 . -1) (undo-tree-id6035 . -1) (undo-tree-id6036 . -1) (undo-tree-id6037 . -1) (undo-tree-id6038 . -1) (undo-tree-id6039 . -1) (undo-tree-id6040 . -1) (undo-tree-id6041 . -1) (undo-tree-id6042 . -1) (undo-tree-id6043 . -1) (undo-tree-id6044 . -1) (undo-tree-id6045 . -1) (undo-tree-id6046 . -1) (undo-tree-id6047 . -1) (undo-tree-id6048 . -1) (undo-tree-id6049 . -1) (undo-tree-id6050 . -1) (undo-tree-id6051 . -1) (undo-tree-id6052 . -1) (undo-tree-id6053 . -1) (undo-tree-id6054 . -1) (undo-tree-id6055 . -1) (undo-tree-id6056 . -1) (undo-tree-id6057 . -1) (undo-tree-id6058 . -1) (undo-tree-id6059 . -1) (undo-tree-id6060 . -1) (undo-tree-id6061 . -1) (undo-tree-id6062 . -1) (undo-tree-id6063 . -1) (undo-tree-id6064 . -1) (#("r" 0 1 (fontified t)) . -69112) (undo-tree-id6065 . -1) (undo-tree-id6066 . -1) (undo-tree-id6067 . -1) (undo-tree-id6068 . -1) (undo-tree-id6069 . -1) (undo-tree-id6070 . -1) (undo-tree-id6071 . -1) (undo-tree-id6072 . -1) (undo-tree-id6073 . -1) (undo-tree-id6074 . -1) (undo-tree-id6075 . -1) (undo-tree-id6076 . -1) (undo-tree-id6077 . -1) (undo-tree-id6078 . -1) (undo-tree-id6079 . -1) (undo-tree-id6080 . -1) (undo-tree-id6081 . -1) (undo-tree-id6082 . -1) (undo-tree-id6083 . -1) (undo-tree-id6084 . -1) (undo-tree-id6085 . -1) (undo-tree-id6086 . -1) (undo-tree-id6087 . -1) (undo-tree-id6088 . -1) (undo-tree-id6089 . -1) (undo-tree-id6090 . -1) (undo-tree-id6091 . -1) (undo-tree-id6092 . -1) (undo-tree-id6093 . -1) (undo-tree-id6094 . -1) (undo-tree-id6095 . -1) (undo-tree-id6096 . -1) (undo-tree-id6097 . -1) (undo-tree-id6098 . -1) (undo-tree-id6099 . -1) (undo-tree-id6100 . -1) (undo-tree-id6101 . -1) (undo-tree-id6102 . -1) (undo-tree-id6103 . -1) (undo-tree-id6104 . -1) (undo-tree-id6105 . -1) (undo-tree-id6106 . -1) (undo-tree-id6107 . -1) (undo-tree-id6108 . -1) (undo-tree-id6109 . -1) (undo-tree-id6110 . -1) (undo-tree-id6111 . -1) (undo-tree-id6112 . -1) (undo-tree-id6113 . -1) (undo-tree-id6114 . -1) (undo-tree-id6115 . -1) (undo-tree-id6116 . -1) (undo-tree-id6117 . -1) (undo-tree-id6118 . -1) (undo-tree-id6119 . -1) (undo-tree-id6120 . -1) (undo-tree-id6121 . -1) (undo-tree-id6122 . -1) (undo-tree-id6123 . -1) (undo-tree-id6124 . -1) (undo-tree-id6125 . -1) (undo-tree-id6126 . -1) (undo-tree-id6127 . -1) (undo-tree-id6128 . -1) (undo-tree-id6129 . -1) (undo-tree-id6130 . -1) (undo-tree-id6131 . -1) (undo-tree-id6132 . -1) (undo-tree-id6133 . -1) (undo-tree-id6134 . -1) (undo-tree-id6135 . -1) (undo-tree-id6136 . -1) (undo-tree-id6137 . -1) (undo-tree-id6138 . -1) (undo-tree-id6139 . -1) (undo-tree-id6140 . -1) (undo-tree-id6141 . -1) (undo-tree-id6142 . -1) (undo-tree-id6143 . -1) (undo-tree-id6144 . -1) (undo-tree-id6145 . -1) (undo-tree-id6146 . -1) (undo-tree-id6147 . -1) (undo-tree-id6148 . -1) (undo-tree-id6149 . -1) (undo-tree-id6150 . -1) (undo-tree-id6151 . -1) (undo-tree-id6152 . -1) (undo-tree-id6153 . -1) (undo-tree-id6154 . -1) (undo-tree-id6155 . -1) (undo-tree-id6156 . -1) (undo-tree-id6157 . -1) (undo-tree-id6158 . -1) (undo-tree-id6159 . -1) (undo-tree-id6160 . -1) (undo-tree-id6161 . -1) (undo-tree-id6162 . -1) (undo-tree-id6163 . -1) (undo-tree-id6164 . -1) (undo-tree-id6165 . -1) (undo-tree-id6166 . -1) (undo-tree-id6167 . -1) (undo-tree-id6168 . -1) (undo-tree-id6169 . -1) (undo-tree-id6170 . -1) (undo-tree-id6171 . -1) (undo-tree-id6172 . -1) (undo-tree-id6173 . -1) (undo-tree-id6174 . -1) (undo-tree-id6175 . -1) (undo-tree-id6176 . -1) (undo-tree-id6177 . -1) (undo-tree-id6178 . -1) (undo-tree-id6179 . -1) (undo-tree-id6180 . -1) (undo-tree-id6181 . -1) (undo-tree-id6182 . -1) (undo-tree-id6183 . -1) (undo-tree-id6184 . -1) (undo-tree-id6185 . -1) (undo-tree-id6186 . -1) (undo-tree-id6187 . -1) (undo-tree-id6188 . -1) (undo-tree-id6189 . -1) (undo-tree-id6190 . -1) (undo-tree-id6191 . -1) (undo-tree-id6192 . -1) (undo-tree-id6193 . -1) (undo-tree-id6194 . -1) (undo-tree-id6195 . -1) (undo-tree-id6196 . -1) (undo-tree-id6197 . -1) (undo-tree-id6198 . -1) (undo-tree-id6199 . -1) (undo-tree-id6200 . -1) (undo-tree-id6201 . -1) (undo-tree-id6202 . -1) (undo-tree-id6203 . -1) (undo-tree-id6204 . -1) (undo-tree-id6205 . -1) (undo-tree-id6206 . -1) (undo-tree-id6207 . -1) (undo-tree-id6208 . -1) (undo-tree-id6209 . -1) (undo-tree-id6210 . -1) (undo-tree-id6211 . -1) (undo-tree-id6212 . -1) (undo-tree-id6213 . -1) (undo-tree-id6214 . -1) (undo-tree-id6215 . -1) (undo-tree-id6216 . -1) (undo-tree-id6217 . -1) (undo-tree-id6218 . -1) (undo-tree-id6219 . -1) (undo-tree-id6220 . -1) (undo-tree-id6221 . -1) (undo-tree-id6222 . -1) (undo-tree-id6223 . -1) (undo-tree-id6224 . -1) (undo-tree-id6225 . -1) (undo-tree-id6226 . -1) (undo-tree-id6227 . -1) (undo-tree-id6228 . -1) (undo-tree-id6229 . -1) (undo-tree-id6230 . -1) (undo-tree-id6231 . -1) (undo-tree-id6232 . -1) (undo-tree-id6233 . -1) (undo-tree-id6234 . -1) (undo-tree-id6235 . -1) (undo-tree-id6236 . -1) (undo-tree-id6237 . -1) (undo-tree-id6238 . -1) (undo-tree-id6239 . -1) (undo-tree-id6240 . -1) (undo-tree-id6241 . -1) (undo-tree-id6242 . -1) (undo-tree-id6243 . -1) (undo-tree-id6244 . -1) (undo-tree-id6245 . -1) (undo-tree-id6246 . -1) (undo-tree-id6247 . -1) (undo-tree-id6248 . -1) (undo-tree-id6249 . -1) (undo-tree-id6250 . -1) (undo-tree-id6251 . -1) (undo-tree-id6252 . -1) (undo-tree-id6253 . -1) (undo-tree-id6254 . -1) (undo-tree-id6255 . -1) (undo-tree-id6256 . -1) (undo-tree-id6257 . -1) (undo-tree-id6258 . -1) (undo-tree-id6259 . -1) (undo-tree-id6260 . -1) (undo-tree-id6261 . -1) (undo-tree-id6262 . -1) (undo-tree-id6263 . -1) (undo-tree-id6264 . -1) (undo-tree-id6265 . -1) (undo-tree-id6266 . -1) (undo-tree-id6267 . -1) (undo-tree-id6268 . -1) (undo-tree-id6269 . -1) (undo-tree-id6270 . -1) (undo-tree-id6271 . -1) (undo-tree-id6272 . -1) (undo-tree-id6273 . -1) (undo-tree-id6274 . -1) (undo-tree-id6275 . -1) (undo-tree-id6276 . -1) (undo-tree-id6277 . -1) (undo-tree-id6278 . -1) (undo-tree-id6279 . -1) (undo-tree-id6280 . -1) (undo-tree-id6281 . -1) (undo-tree-id6282 . -1) (undo-tree-id6283 . -1) (undo-tree-id6284 . -1) (undo-tree-id6285 . -1) (undo-tree-id6286 . -1) (undo-tree-id6287 . -1) (undo-tree-id6288 . -1) (undo-tree-id6289 . -1) (undo-tree-id6290 . -1) (undo-tree-id6291 . -1) (undo-tree-id6292 . -1) (undo-tree-id6293 . -1) (undo-tree-id6294 . -1) (undo-tree-id6295 . -1) (undo-tree-id6296 . -1) (undo-tree-id6297 . -1) (undo-tree-id6298 . -1) (undo-tree-id6299 . -1) (undo-tree-id6300 . -1) (undo-tree-id6301 . -1) (undo-tree-id6302 . -1) (undo-tree-id6303 . -1) (undo-tree-id6304 . -1) (undo-tree-id6305 . -1) (undo-tree-id6306 . -1) (undo-tree-id6307 . -1) (undo-tree-id6308 . -1) (undo-tree-id6309 . -1) (undo-tree-id6310 . -1) (undo-tree-id6311 . -1) (undo-tree-id6312 . -1) (undo-tree-id6313 . -1) (undo-tree-id6314 . -1) (undo-tree-id6315 . -1) (undo-tree-id6316 . -1) (undo-tree-id6317 . -1) (undo-tree-id6318 . -1) (undo-tree-id6319 . -1) (undo-tree-id6320 . -1) (undo-tree-id6321 . -1) (undo-tree-id6322 . -1) (undo-tree-id6323 . -1) (undo-tree-id6324 . -1) (undo-tree-id6325 . -1) (undo-tree-id6326 . -1) (undo-tree-id6327 . -1) (undo-tree-id6328 . -1) (undo-tree-id6329 . -1) (undo-tree-id6330 . -1) (undo-tree-id6331 . -1) (undo-tree-id6332 . -1) (undo-tree-id6333 . -1) (undo-tree-id6334 . -1) (undo-tree-id6335 . -1) (undo-tree-id6336 . -1) (undo-tree-id6337 . -1) (undo-tree-id6338 . -1) (undo-tree-id6339 . -1) (undo-tree-id6340 . -1) (undo-tree-id6341 . -1) (undo-tree-id6342 . -1) (undo-tree-id6343 . -1) (undo-tree-id6344 . -1) (undo-tree-id6345 . -1) (undo-tree-id6346 . -1) (undo-tree-id6347 . -1) (undo-tree-id6348 . -1) (undo-tree-id6349 . -1) (undo-tree-id6350 . -1) (undo-tree-id6351 . -1) (undo-tree-id6352 . -1) (undo-tree-id6353 . -1) (undo-tree-id6354 . -1) (undo-tree-id6355 . -1) (undo-tree-id6356 . -1) (undo-tree-id6357 . -1) (undo-tree-id6358 . -1) (undo-tree-id6359 . -1) (undo-tree-id6360 . -1) (undo-tree-id6361 . -1) (undo-tree-id6362 . -1) (undo-tree-id6363 . -1) (undo-tree-id6364 . -1) (undo-tree-id6365 . -1) (undo-tree-id6366 . -1) (undo-tree-id6367 . -1) (undo-tree-id6368 . -1) (undo-tree-id6369 . -1) (undo-tree-id6370 . -1) (undo-tree-id6371 . -1) (undo-tree-id6372 . -1) (undo-tree-id6373 . -1) (undo-tree-id6374 . -1) (undo-tree-id6375 . -1) (undo-tree-id6376 . -1) (undo-tree-id6377 . -1) (undo-tree-id6378 . -1) (undo-tree-id6379 . -1) (undo-tree-id6380 . -1) (undo-tree-id6381 . -1) (undo-tree-id6382 . -1) (undo-tree-id6383 . -1) (undo-tree-id6384 . -1) (undo-tree-id6385 . -1) (undo-tree-id6386 . -1) (undo-tree-id6387 . -1) (undo-tree-id6388 . -1) (undo-tree-id6389 . -1) (undo-tree-id6390 . -1) (undo-tree-id6391 . -1) (undo-tree-id6392 . -1) (undo-tree-id6393 . -1) (undo-tree-id6394 . -1) (undo-tree-id6395 . -1) (undo-tree-id6396 . -1) (undo-tree-id6397 . -1) (undo-tree-id6398 . -1) (undo-tree-id6399 . -1) (undo-tree-id6400 . -1) (undo-tree-id6401 . -1) (undo-tree-id6402 . -1) (undo-tree-id6403 . -1) (undo-tree-id6404 . -1) (undo-tree-id6405 . -1) (undo-tree-id6406 . -1) (undo-tree-id6407 . -1) (undo-tree-id6408 . -1) (undo-tree-id6409 . -1) (undo-tree-id6410 . -1) (undo-tree-id6411 . -1) (undo-tree-id6412 . -1) (undo-tree-id6413 . -1) (undo-tree-id6414 . -1) (undo-tree-id6415 . -1) (undo-tree-id6416 . -1) (undo-tree-id6417 . -1) (undo-tree-id6418 . -1) (undo-tree-id6419 . -1) (undo-tree-id6420 . -1) (undo-tree-id6421 . -1) (undo-tree-id6422 . -1) (undo-tree-id6423 . -1) (undo-tree-id6424 . -1) (undo-tree-id6425 . -1) (undo-tree-id6426 . -1) (undo-tree-id6427 . -1) (undo-tree-id6428 . -1) (undo-tree-id6429 . -1) (undo-tree-id6430 . -1) (undo-tree-id6431 . -1) (undo-tree-id6432 . -1) (undo-tree-id6433 . -1) (undo-tree-id6434 . -1) (undo-tree-id6435 . -1) (undo-tree-id6436 . -1) (undo-tree-id6437 . -1) (undo-tree-id6438 . -1) (undo-tree-id6439 . -1) (undo-tree-id6440 . -1) (undo-tree-id6441 . -1) (undo-tree-id6442 . -1) (undo-tree-id6443 . -1) (undo-tree-id6444 . -1) (undo-tree-id6445 . -1) (undo-tree-id6446 . -1) (undo-tree-id6447 . -1) (undo-tree-id6448 . -1) (undo-tree-id6449 . -1) (undo-tree-id6450 . -1) (undo-tree-id6451 . -1) (undo-tree-id6452 . -1) (undo-tree-id6453 . -1) (undo-tree-id6454 . -1) (undo-tree-id6455 . -1) (undo-tree-id6456 . -1) (undo-tree-id6457 . -1) (undo-tree-id6458 . -1) (undo-tree-id6459 . -1) (undo-tree-id6460 . -1) (undo-tree-id6461 . -1) (undo-tree-id6462 . -1) (undo-tree-id6463 . -1) (undo-tree-id6464 . -1) (undo-tree-id6465 . -1) (undo-tree-id6466 . -1) (undo-tree-id6467 . -1) (undo-tree-id6468 . -1) (undo-tree-id6469 . -1) (undo-tree-id6470 . -1) (undo-tree-id6471 . -1) (undo-tree-id6472 . -1) (undo-tree-id6473 . -1) (undo-tree-id6474 . -1) (undo-tree-id6475 . -1) (undo-tree-id6476 . -1) (undo-tree-id6477 . -1) (undo-tree-id6478 . -1) (undo-tree-id6479 . -1) (undo-tree-id6480 . -1) (undo-tree-id6481 . -1) (undo-tree-id6482 . -1) (undo-tree-id6483 . -1) (undo-tree-id6484 . -1) (undo-tree-id6485 . -1) (undo-tree-id6486 . -1) (undo-tree-id6487 . -1) (undo-tree-id6488 . -1) (undo-tree-id6489 . -1) (undo-tree-id6490 . -1) (undo-tree-id6491 . -1) (undo-tree-id6492 . -1) (undo-tree-id6493 . -1) (undo-tree-id6494 . -1) (#(" " 0 1 (fontified t)) . -69113) (undo-tree-id6495 . -1) (undo-tree-id6496 . -1) (undo-tree-id6497 . -1) (undo-tree-id6498 . -1) (undo-tree-id6499 . -1) (undo-tree-id6500 . -1) (undo-tree-id6501 . -1) (undo-tree-id6502 . -1) (undo-tree-id6503 . -1) (undo-tree-id6504 . -1) (undo-tree-id6505 . -1) (undo-tree-id6506 . -1) (undo-tree-id6507 . -1) (undo-tree-id6508 . -1) (undo-tree-id6509 . -1) (undo-tree-id6510 . -1) (undo-tree-id6511 . -1) (undo-tree-id6512 . -1) (undo-tree-id6513 . -1) (undo-tree-id6514 . -1) (undo-tree-id6515 . -1) (undo-tree-id6516 . -1) (undo-tree-id6517 . -1) (undo-tree-id6518 . -1) (undo-tree-id6519 . -1) (undo-tree-id6520 . -1) (undo-tree-id6521 . -1) (undo-tree-id6522 . -1) (undo-tree-id6523 . -1) (undo-tree-id6524 . -1) (undo-tree-id6525 . -1) (undo-tree-id6526 . -1) (undo-tree-id6527 . -1) (undo-tree-id6528 . -1) (undo-tree-id6529 . -1) (undo-tree-id6530 . -1) (undo-tree-id6531 . -1) (undo-tree-id6532 . -1) (undo-tree-id6533 . -1) (undo-tree-id6534 . -1) (undo-tree-id6535 . -1) (undo-tree-id6536 . -1) (undo-tree-id6537 . -1) (undo-tree-id6538 . -1) (undo-tree-id6539 . -1) (undo-tree-id6540 . -1) (undo-tree-id6541 . -1) (undo-tree-id6542 . -1) (undo-tree-id6543 . -1) (undo-tree-id6544 . -1) (undo-tree-id6545 . -1) (undo-tree-id6546 . -1) (undo-tree-id6547 . -1) (undo-tree-id6548 . -1) (undo-tree-id6549 . -1) (undo-tree-id6550 . -1) (undo-tree-id6551 . -1) (undo-tree-id6552 . -1) (undo-tree-id6553 . -1) (undo-tree-id6554 . -1) (undo-tree-id6555 . -1) (undo-tree-id6556 . -1) (undo-tree-id6557 . -1) (undo-tree-id6558 . -1) (undo-tree-id6559 . -1) (undo-tree-id6560 . -1) (undo-tree-id6561 . -1) (undo-tree-id6562 . -1) (undo-tree-id6563 . -1) (undo-tree-id6564 . -1) (undo-tree-id6565 . -1) (undo-tree-id6566 . -1) (undo-tree-id6567 . -1) (undo-tree-id6568 . -1) (undo-tree-id6569 . -1) (undo-tree-id6570 . -1) (undo-tree-id6571 . -1) (undo-tree-id6572 . -1) (undo-tree-id6573 . -1) (undo-tree-id6574 . -1) (undo-tree-id6575 . -1) (undo-tree-id6576 . -1) (undo-tree-id6577 . -1) (undo-tree-id6578 . -1) (undo-tree-id6579 . -1) (undo-tree-id6580 . -1) (undo-tree-id6581 . -1) (undo-tree-id6582 . -1) (undo-tree-id6583 . -1) (undo-tree-id6584 . -1) (undo-tree-id6585 . -1) (undo-tree-id6586 . -1) (undo-tree-id6587 . -1) (undo-tree-id6588 . -1) (undo-tree-id6589 . -1) (undo-tree-id6590 . -1) (undo-tree-id6591 . -1) (undo-tree-id6592 . -1) (undo-tree-id6593 . -1) (undo-tree-id6594 . -1) (undo-tree-id6595 . -1) (undo-tree-id6596 . -1) (undo-tree-id6597 . -1) (undo-tree-id6598 . -1) (undo-tree-id6599 . -1) (undo-tree-id6600 . -1) (undo-tree-id6601 . -1) (undo-tree-id6602 . -1) (undo-tree-id6603 . -1) (undo-tree-id6604 . -1) (undo-tree-id6605 . -1) (undo-tree-id6606 . -1) (undo-tree-id6607 . -1) (undo-tree-id6608 . -1) (undo-tree-id6609 . -1) (undo-tree-id6610 . -1) (undo-tree-id6611 . -1) (undo-tree-id6612 . -1) (undo-tree-id6613 . -1) (undo-tree-id6614 . -1) (undo-tree-id6615 . -1) (undo-tree-id6616 . -1) (undo-tree-id6617 . -1) (undo-tree-id6618 . -1) (undo-tree-id6619 . -1) (undo-tree-id6620 . -1) (undo-tree-id6621 . -1) (undo-tree-id6622 . -1) (undo-tree-id6623 . -1) (undo-tree-id6624 . -1) (undo-tree-id6625 . -1) (undo-tree-id6626 . -1) (undo-tree-id6627 . -1) (undo-tree-id6628 . -1) (undo-tree-id6629 . -1) (undo-tree-id6630 . -1) (undo-tree-id6631 . -1) (undo-tree-id6632 . -1) (undo-tree-id6633 . -1) (undo-tree-id6634 . -1) (undo-tree-id6635 . -1) (undo-tree-id6636 . -1) (undo-tree-id6637 . -1) (undo-tree-id6638 . -1) (undo-tree-id6639 . -1) (undo-tree-id6640 . -1) (undo-tree-id6641 . -1) (undo-tree-id6642 . -1) (undo-tree-id6643 . -1) (undo-tree-id6644 . -1) (undo-tree-id6645 . -1) (undo-tree-id6646 . -1) (undo-tree-id6647 . -1) (undo-tree-id6648 . -1) (undo-tree-id6649 . -1) (undo-tree-id6650 . -1) (undo-tree-id6651 . -1) (undo-tree-id6652 . -1) (undo-tree-id6653 . -1) (undo-tree-id6654 . -1) (undo-tree-id6655 . -1) (undo-tree-id6656 . -1) (undo-tree-id6657 . -1) (undo-tree-id6658 . -1) (undo-tree-id6659 . -1) (undo-tree-id6660 . -1) (undo-tree-id6661 . -1) (undo-tree-id6662 . -1) (undo-tree-id6663 . -1) (undo-tree-id6664 . -1) (undo-tree-id6665 . -1) (undo-tree-id6666 . -1) (undo-tree-id6667 . -1) (undo-tree-id6668 . -1) (undo-tree-id6669 . -1) (undo-tree-id6670 . -1) (undo-tree-id6671 . -1) (undo-tree-id6672 . -1) (undo-tree-id6673 . -1) (undo-tree-id6674 . -1) (undo-tree-id6675 . -1) (undo-tree-id6676 . -1) (undo-tree-id6677 . -1) (undo-tree-id6678 . -1) (undo-tree-id6679 . -1) (undo-tree-id6680 . -1) (undo-tree-id6681 . -1) (undo-tree-id6682 . -1) (undo-tree-id6683 . -1) (undo-tree-id6684 . -1) (undo-tree-id6685 . -1) (undo-tree-id6686 . -1) (undo-tree-id6687 . -1) (undo-tree-id6688 . -1) (undo-tree-id6689 . -1) (undo-tree-id6690 . -1) (undo-tree-id6691 . -1) (undo-tree-id6692 . -1) (undo-tree-id6693 . -1) (undo-tree-id6694 . -1) (undo-tree-id6695 . -1) (undo-tree-id6696 . -1) (undo-tree-id6697 . -1) (undo-tree-id6698 . -1) (undo-tree-id6699 . -1) (undo-tree-id6700 . -1) (undo-tree-id6701 . -1) (undo-tree-id6702 . -1) (undo-tree-id6703 . -1) (undo-tree-id6704 . -1) (undo-tree-id6705 . -1) (undo-tree-id6706 . -1) (undo-tree-id6707 . -1) (undo-tree-id6708 . -1) (undo-tree-id6709 . -1) (undo-tree-id6710 . -1) (undo-tree-id6711 . -1) (undo-tree-id6712 . -1) (undo-tree-id6713 . -1) (undo-tree-id6714 . -1) (undo-tree-id6715 . -1) (undo-tree-id6716 . -1) (undo-tree-id6717 . -1) (undo-tree-id6718 . -1) (undo-tree-id6719 . -1) (undo-tree-id6720 . -1) (undo-tree-id6721 . -1) (undo-tree-id6722 . -1) (undo-tree-id6723 . -1) (undo-tree-id6724 . -1) (undo-tree-id6725 . -1) (undo-tree-id6726 . -1) (undo-tree-id6727 . -1) (undo-tree-id6728 . -1) (undo-tree-id6729 . -1) (undo-tree-id6730 . -1) (undo-tree-id6731 . -1) (undo-tree-id6732 . -1) (undo-tree-id6733 . -1) (undo-tree-id6734 . -1) (undo-tree-id6735 . -1) (undo-tree-id6736 . -1) (undo-tree-id6737 . -1) (undo-tree-id6738 . -1) (undo-tree-id6739 . -1) (undo-tree-id6740 . -1) (undo-tree-id6741 . -1) (undo-tree-id6742 . -1) (undo-tree-id6743 . -1) (undo-tree-id6744 . -1) (undo-tree-id6745 . -1) (undo-tree-id6746 . -1) (undo-tree-id6747 . -1) (undo-tree-id6748 . -1) (undo-tree-id6749 . -1) (undo-tree-id6750 . -1) (undo-tree-id6751 . -1) (undo-tree-id6752 . -1) (undo-tree-id6753 . -1) (undo-tree-id6754 . -1) (undo-tree-id6755 . -1) (undo-tree-id6756 . -1) (undo-tree-id6757 . -1) (undo-tree-id6758 . -1) (undo-tree-id6759 . -1) (undo-tree-id6760 . -1) (undo-tree-id6761 . -1) (undo-tree-id6762 . -1) (undo-tree-id6763 . -1) (undo-tree-id6764 . -1) (undo-tree-id6765 . -1) (undo-tree-id6766 . -1) (undo-tree-id6767 . -1) (undo-tree-id6768 . -1) (undo-tree-id6769 . -1) (undo-tree-id6770 . -1) (undo-tree-id6771 . -1) (undo-tree-id6772 . -1) (undo-tree-id6773 . -1) (undo-tree-id6774 . -1) (undo-tree-id6775 . -1) (undo-tree-id6776 . -1) (undo-tree-id6777 . -1) (undo-tree-id6778 . -1) (undo-tree-id6779 . -1) (undo-tree-id6780 . -1) (undo-tree-id6781 . -1) (undo-tree-id6782 . -1) (undo-tree-id6783 . -1) (undo-tree-id6784 . -1) (undo-tree-id6785 . -1) (undo-tree-id6786 . -1) (undo-tree-id6787 . -1) (undo-tree-id6788 . -1) (undo-tree-id6789 . -1) (undo-tree-id6790 . -1) (undo-tree-id6791 . -1) (undo-tree-id6792 . -1) (undo-tree-id6793 . -1) (undo-tree-id6794 . -1) (undo-tree-id6795 . -1) (undo-tree-id6796 . -1) (undo-tree-id6797 . -1) (undo-tree-id6798 . -1) (undo-tree-id6799 . -1) (undo-tree-id6800 . -1) (undo-tree-id6801 . -1) (undo-tree-id6802 . -1) (undo-tree-id6803 . -1) (undo-tree-id6804 . -1) (undo-tree-id6805 . -1) (undo-tree-id6806 . -1) (undo-tree-id6807 . -1) (undo-tree-id6808 . -1) (undo-tree-id6809 . -1) (undo-tree-id6810 . -1) (undo-tree-id6811 . -1) (undo-tree-id6812 . -1) (undo-tree-id6813 . -1) (undo-tree-id6814 . -1) (undo-tree-id6815 . -1) (undo-tree-id6816 . -1) (undo-tree-id6817 . -1) (undo-tree-id6818 . -1) (undo-tree-id6819 . -1) (undo-tree-id6820 . -1) (undo-tree-id6821 . -1) (undo-tree-id6822 . -1) (undo-tree-id6823 . -1) (undo-tree-id6824 . -1) (undo-tree-id6825 . -1) (undo-tree-id6826 . -1) (undo-tree-id6827 . -1) (undo-tree-id6828 . -1) (undo-tree-id6829 . -1) (undo-tree-id6830 . -1) (undo-tree-id6831 . -1) (undo-tree-id6832 . -1) (undo-tree-id6833 . -1) (undo-tree-id6834 . -1) (undo-tree-id6835 . -1) (undo-tree-id6836 . -1) (undo-tree-id6837 . -1) (undo-tree-id6838 . -1) (undo-tree-id6839 . -1) (undo-tree-id6840 . -1) (undo-tree-id6841 . -1) (undo-tree-id6842 . -1) (undo-tree-id6843 . -1) (undo-tree-id6844 . -1) (undo-tree-id6845 . -1) (undo-tree-id6846 . -1) (undo-tree-id6847 . -1) (undo-tree-id6848 . -1) (undo-tree-id6849 . -1) (undo-tree-id6850 . -1) (undo-tree-id6851 . -1) (undo-tree-id6852 . -1) (undo-tree-id6853 . -1) (undo-tree-id6854 . -1) (undo-tree-id6855 . -1) (undo-tree-id6856 . -1) (undo-tree-id6857 . -1) (undo-tree-id6858 . -1) (undo-tree-id6859 . -1) (undo-tree-id6860 . -1) (undo-tree-id6861 . -1) (undo-tree-id6862 . -1) (undo-tree-id6863 . -1) (undo-tree-id6864 . -1) (undo-tree-id6865 . -1) (undo-tree-id6866 . -1) (undo-tree-id6867 . -1) (undo-tree-id6868 . -1) (undo-tree-id6869 . -1) (undo-tree-id6870 . -1) (undo-tree-id6871 . -1) (undo-tree-id6872 . -1) (undo-tree-id6873 . -1) (undo-tree-id6874 . -1) (undo-tree-id6875 . -1) (undo-tree-id6876 . -1) (undo-tree-id6877 . -1) (undo-tree-id6878 . -1) (undo-tree-id6879 . -1) (undo-tree-id6880 . -1) (undo-tree-id6881 . -1) (undo-tree-id6882 . -1) (undo-tree-id6883 . -1) (undo-tree-id6884 . -1) (undo-tree-id6885 . -1) (undo-tree-id6886 . -1) (undo-tree-id6887 . -1) (undo-tree-id6888 . -1) (undo-tree-id6889 . -1) (undo-tree-id6890 . -1) (undo-tree-id6891 . -1) (undo-tree-id6892 . -1) (undo-tree-id6893 . -1) (undo-tree-id6894 . -1) (undo-tree-id6895 . -1) (undo-tree-id6896 . -1) (undo-tree-id6897 . -1) (undo-tree-id6898 . -1) (undo-tree-id6899 . -1) (undo-tree-id6900 . -1) (undo-tree-id6901 . -1) (undo-tree-id6902 . -1) (undo-tree-id6903 . -1) (undo-tree-id6904 . -1) (undo-tree-id6905 . -1) (undo-tree-id6906 . -1) (undo-tree-id6907 . -1) (undo-tree-id6908 . -1) (#("t" 0 1 (fontified t)) . -69114) (undo-tree-id6909 . -1) (undo-tree-id6910 . -1) (undo-tree-id6911 . -1) (undo-tree-id6912 . -1) (undo-tree-id6913 . -1) (undo-tree-id6914 . -1) (undo-tree-id6915 . -1) (undo-tree-id6916 . -1) (undo-tree-id6917 . -1) (undo-tree-id6918 . -1) (undo-tree-id6919 . -1) (undo-tree-id6920 . -1) (undo-tree-id6921 . -1) (undo-tree-id6922 . -1) (undo-tree-id6923 . -1) (undo-tree-id6924 . -1) (undo-tree-id6925 . -1) (undo-tree-id6926 . -1) (undo-tree-id6927 . -1) (undo-tree-id6928 . -1) (undo-tree-id6929 . -1) (undo-tree-id6930 . -1) (undo-tree-id6931 . -1) (undo-tree-id6932 . -1) (undo-tree-id6933 . -1) (undo-tree-id6934 . -1) (undo-tree-id6935 . -1) (undo-tree-id6936 . -1) (undo-tree-id6937 . -1) (undo-tree-id6938 . -1) (undo-tree-id6939 . -1) (undo-tree-id6940 . -1) (undo-tree-id6941 . -1) (undo-tree-id6942 . -1) (undo-tree-id6943 . -1) (undo-tree-id6944 . -1) (undo-tree-id6945 . -1) (undo-tree-id6946 . -1) (undo-tree-id6947 . -1) (undo-tree-id6948 . -1) (undo-tree-id6949 . -1) (undo-tree-id6950 . -1) (undo-tree-id6951 . -1) (undo-tree-id6952 . -1) (undo-tree-id6953 . -1) (undo-tree-id6954 . -1) (undo-tree-id6955 . -1) (undo-tree-id6956 . -1) (undo-tree-id6957 . -1) (undo-tree-id6958 . -1) (undo-tree-id6959 . -1) (undo-tree-id6960 . -1) (undo-tree-id6961 . -1) (undo-tree-id6962 . -1) (undo-tree-id6963 . -1) (undo-tree-id6964 . -1) (undo-tree-id6965 . -1) (undo-tree-id6966 . -1) (undo-tree-id6967 . -1) (undo-tree-id6968 . -1) (undo-tree-id6969 . -1) (undo-tree-id6970 . -1) (undo-tree-id6971 . -1) (undo-tree-id6972 . -1) (undo-tree-id6973 . -1) (undo-tree-id6974 . -1) (undo-tree-id6975 . -1) (undo-tree-id6976 . -1) (undo-tree-id6977 . -1) (undo-tree-id6978 . -1) (undo-tree-id6979 . -1) (undo-tree-id6980 . -1) (undo-tree-id6981 . -1) (undo-tree-id6982 . -1) (undo-tree-id6983 . -1) (undo-tree-id6984 . -1) (undo-tree-id6985 . -1) (undo-tree-id6986 . -1) (undo-tree-id6987 . -1) (undo-tree-id6988 . -1) (undo-tree-id6989 . -1) (undo-tree-id6990 . -1) (undo-tree-id6991 . -1) (undo-tree-id6992 . -1) (undo-tree-id6993 . -1) (undo-tree-id6994 . -1) (undo-tree-id6995 . -1) (undo-tree-id6996 . -1) (undo-tree-id6997 . -1) (undo-tree-id6998 . -1) (undo-tree-id6999 . -1) (undo-tree-id7000 . -1) (undo-tree-id7001 . -1) (undo-tree-id7002 . -1) (undo-tree-id7003 . -1) (undo-tree-id7004 . -1) (undo-tree-id7005 . -1) (undo-tree-id7006 . -1) (undo-tree-id7007 . -1) (undo-tree-id7008 . -1) (undo-tree-id7009 . -1) (undo-tree-id7010 . -1) (undo-tree-id7011 . -1) (undo-tree-id7012 . -1) (undo-tree-id7013 . -1) (undo-tree-id7014 . -1) (undo-tree-id7015 . -1) (undo-tree-id7016 . -1) (undo-tree-id7017 . -1) (undo-tree-id7018 . -1) (undo-tree-id7019 . -1) (undo-tree-id7020 . -1) (undo-tree-id7021 . -1) (undo-tree-id7022 . -1) (undo-tree-id7023 . -1) (undo-tree-id7024 . -1) (undo-tree-id7025 . -1) (undo-tree-id7026 . -1) (undo-tree-id7027 . -1) (undo-tree-id7028 . -1) (undo-tree-id7029 . -1) (undo-tree-id7030 . -1) (undo-tree-id7031 . -1) (undo-tree-id7032 . -1) (undo-tree-id7033 . -1) (undo-tree-id7034 . -1) (undo-tree-id7035 . -1) (undo-tree-id7036 . -1) (undo-tree-id7037 . -1) (undo-tree-id7038 . -1) (undo-tree-id7039 . -1) (undo-tree-id7040 . -1) (undo-tree-id7041 . -1) (undo-tree-id7042 . -1) (undo-tree-id7043 . -1) (undo-tree-id7044 . -1) (undo-tree-id7045 . -1) (undo-tree-id7046 . -1) (undo-tree-id7047 . -1) (undo-tree-id7048 . -1) (undo-tree-id7049 . -1) (undo-tree-id7050 . -1) (undo-tree-id7051 . -1) (undo-tree-id7052 . -1) (undo-tree-id7053 . -1) (undo-tree-id7054 . -1) (undo-tree-id7055 . -1) (undo-tree-id7056 . -1) (undo-tree-id7057 . -1) (undo-tree-id7058 . -1) (undo-tree-id7059 . -1) (undo-tree-id7060 . -1) (undo-tree-id7061 . -1) (undo-tree-id7062 . -1) (undo-tree-id7063 . -1) (undo-tree-id7064 . -1) (undo-tree-id7065 . -1) (undo-tree-id7066 . -1) (undo-tree-id7067 . -1) (undo-tree-id7068 . -1) (undo-tree-id7069 . -1) (undo-tree-id7070 . -1) (undo-tree-id7071 . -1) (undo-tree-id7072 . -1) (undo-tree-id7073 . -1) (undo-tree-id7074 . -1) (undo-tree-id7075 . -1) (undo-tree-id7076 . -1) (undo-tree-id7077 . -1) (undo-tree-id7078 . -1) (undo-tree-id7079 . -1) (undo-tree-id7080 . -1) (undo-tree-id7081 . -1) (undo-tree-id7082 . -1) (undo-tree-id7083 . -1) (undo-tree-id7084 . -1) (undo-tree-id7085 . -1) (undo-tree-id7086 . -1) (undo-tree-id7087 . -1) (undo-tree-id7088 . -1) (undo-tree-id7089 . -1) (undo-tree-id7090 . -1) (undo-tree-id7091 . -1) (undo-tree-id7092 . -1) (undo-tree-id7093 . -1) (undo-tree-id7094 . -1) (undo-tree-id7095 . -1) (undo-tree-id7096 . -1) (undo-tree-id7097 . -1) (undo-tree-id7098 . -1) (undo-tree-id7099 . -1) (undo-tree-id7100 . -1) (undo-tree-id7101 . -1) (undo-tree-id7102 . -1) (undo-tree-id7103 . -1) (undo-tree-id7104 . -1) (undo-tree-id7105 . -1) (undo-tree-id7106 . -1) (undo-tree-id7107 . -1) (undo-tree-id7108 . -1) (undo-tree-id7109 . -1) (undo-tree-id7110 . -1) (undo-tree-id7111 . -1) (undo-tree-id7112 . -1) (undo-tree-id7113 . -1) (undo-tree-id7114 . -1) (undo-tree-id7115 . -1) (undo-tree-id7116 . -1) (undo-tree-id7117 . -1) (undo-tree-id7118 . -1) (undo-tree-id7119 . -1) (undo-tree-id7120 . -1) (undo-tree-id7121 . -1) (undo-tree-id7122 . -1) (undo-tree-id7123 . -1) (undo-tree-id7124 . -1) (undo-tree-id7125 . -1) (undo-tree-id7126 . -1) (undo-tree-id7127 . -1) (undo-tree-id7128 . -1) (undo-tree-id7129 . -1) (undo-tree-id7130 . -1) (undo-tree-id7131 . -1) (undo-tree-id7132 . -1) (undo-tree-id7133 . -1) (undo-tree-id7134 . -1) (undo-tree-id7135 . -1) (undo-tree-id7136 . -1) (undo-tree-id7137 . -1) (undo-tree-id7138 . -1) (undo-tree-id7139 . -1) (undo-tree-id7140 . -1) (undo-tree-id7141 . -1) (undo-tree-id7142 . -1) (undo-tree-id7143 . -1) (undo-tree-id7144 . -1) (undo-tree-id7145 . -1) (undo-tree-id7146 . -1) (undo-tree-id7147 . -1) (undo-tree-id7148 . -1) (undo-tree-id7149 . -1) (undo-tree-id7150 . -1) (undo-tree-id7151 . -1) (undo-tree-id7152 . -1) (undo-tree-id7153 . -1) (undo-tree-id7154 . -1) (undo-tree-id7155 . -1) (undo-tree-id7156 . -1) (undo-tree-id7157 . -1) (undo-tree-id7158 . -1) (undo-tree-id7159 . -1) (undo-tree-id7160 . -1) (undo-tree-id7161 . -1) (undo-tree-id7162 . -1) (undo-tree-id7163 . -1) (undo-tree-id7164 . -1) (undo-tree-id7165 . -1) (undo-tree-id7166 . -1) (undo-tree-id7167 . -1) (undo-tree-id7168 . -1) (undo-tree-id7169 . -1) (undo-tree-id7170 . -1) (undo-tree-id7171 . -1) (undo-tree-id7172 . -1) (undo-tree-id7173 . -1) (undo-tree-id7174 . -1) (undo-tree-id7175 . -1) (undo-tree-id7176 . -1) (undo-tree-id7177 . -1) (undo-tree-id7178 . -1) (undo-tree-id7179 . -1) (undo-tree-id7180 . -1) (undo-tree-id7181 . -1) (undo-tree-id7182 . -1) (undo-tree-id7183 . -1) (undo-tree-id7184 . -1) (undo-tree-id7185 . -1) (undo-tree-id7186 . -1) (undo-tree-id7187 . -1) (undo-tree-id7188 . -1) (undo-tree-id7189 . -1) (undo-tree-id7190 . -1) (undo-tree-id7191 . -1) (undo-tree-id7192 . -1) (undo-tree-id7193 . -1) (undo-tree-id7194 . -1) (undo-tree-id7195 . -1) (undo-tree-id7196 . -1) (undo-tree-id7197 . -1) (undo-tree-id7198 . -1) (undo-tree-id7199 . -1) (undo-tree-id7200 . -1) (undo-tree-id7201 . -1) (undo-tree-id7202 . -1) (undo-tree-id7203 . -1) (undo-tree-id7204 . -1) (undo-tree-id7205 . -1) (undo-tree-id7206 . -1) (undo-tree-id7207 . -1) (undo-tree-id7208 . -1) (undo-tree-id7209 . -1) (undo-tree-id7210 . -1) (undo-tree-id7211 . -1) (undo-tree-id7212 . -1) (undo-tree-id7213 . -1) (undo-tree-id7214 . -1) (undo-tree-id7215 . -1) (undo-tree-id7216 . -1) (undo-tree-id7217 . -1) (undo-tree-id7218 . -1) (undo-tree-id7219 . -1) (undo-tree-id7220 . -1) (undo-tree-id7221 . -1) (undo-tree-id7222 . -1) (undo-tree-id7223 . -1) (undo-tree-id7224 . -1) (undo-tree-id7225 . -1) (undo-tree-id7226 . -1) (undo-tree-id7227 . -1) (undo-tree-id7228 . -1) (undo-tree-id7229 . -1) (undo-tree-id7230 . -1) (undo-tree-id7231 . -1) (undo-tree-id7232 . -1) (undo-tree-id7233 . -1) (undo-tree-id7234 . -1) (undo-tree-id7235 . -1) (undo-tree-id7236 . -1) (undo-tree-id7237 . -1) (undo-tree-id7238 . -1) (undo-tree-id7239 . -1) (undo-tree-id7240 . -1) (undo-tree-id7241 . -1) (undo-tree-id7242 . -1) (undo-tree-id7243 . -1) (undo-tree-id7244 . -1) (undo-tree-id7245 . -1) (undo-tree-id7246 . -1) (undo-tree-id7247 . -1) (undo-tree-id7248 . -1) (undo-tree-id7249 . -1) (undo-tree-id7250 . -1) (undo-tree-id7251 . -1) (undo-tree-id7252 . -1) (undo-tree-id7253 . -1) (undo-tree-id7254 . -1) (undo-tree-id7255 . -1) (undo-tree-id7256 . -1) (undo-tree-id7257 . -1) (undo-tree-id7258 . -1) (undo-tree-id7259 . -1) (undo-tree-id7260 . -1) (undo-tree-id7261 . -1) (undo-tree-id7262 . -1) (undo-tree-id7263 . -1) (undo-tree-id7264 . -1) (undo-tree-id7265 . -1) (undo-tree-id7266 . -1) (undo-tree-id7267 . -1) (undo-tree-id7268 . -1) (undo-tree-id7269 . -1) (undo-tree-id7270 . -1) (undo-tree-id7271 . -1) (undo-tree-id7272 . -1) (undo-tree-id7273 . -1) (undo-tree-id7274 . -1) (undo-tree-id7275 . -1) (undo-tree-id7276 . -1) (undo-tree-id7277 . -1) (undo-tree-id7278 . -1) (undo-tree-id7279 . -1) (undo-tree-id7280 . -1) (undo-tree-id7281 . -1) (undo-tree-id7282 . -1) (undo-tree-id7283 . -1) (undo-tree-id7284 . -1) (undo-tree-id7285 . -1) (undo-tree-id7286 . -1) (undo-tree-id7287 . -1) (undo-tree-id7288 . -1) (undo-tree-id7289 . -1) (undo-tree-id7290 . -1) (undo-tree-id7291 . -1) (undo-tree-id7292 . -1) (undo-tree-id7293 . -1) (undo-tree-id7294 . -1) (undo-tree-id7295 . -1) (undo-tree-id7296 . -1) (undo-tree-id7297 . -1) (undo-tree-id7298 . -1) (undo-tree-id7299 . -1) (undo-tree-id7300 . -1) (undo-tree-id7301 . -1) (undo-tree-id7302 . -1) (undo-tree-id7303 . -1) (undo-tree-id7304 . -1) (undo-tree-id7305 . -1) (undo-tree-id7306 . -1) (#("h" 0 1 (fontified t)) . -69115) (undo-tree-id7307 . -1) (undo-tree-id7308 . -1) (undo-tree-id7309 . -1) (undo-tree-id7310 . -1) (undo-tree-id7311 . -1) (undo-tree-id7312 . -1) (undo-tree-id7313 . -1) (undo-tree-id7314 . -1) (undo-tree-id7315 . -1) (undo-tree-id7316 . -1) (undo-tree-id7317 . -1) (undo-tree-id7318 . -1) (undo-tree-id7319 . -1) (undo-tree-id7320 . -1) (undo-tree-id7321 . -1) (undo-tree-id7322 . -1) (undo-tree-id7323 . -1) (undo-tree-id7324 . -1) (undo-tree-id7325 . -1) (undo-tree-id7326 . -1) (undo-tree-id7327 . -1) (undo-tree-id7328 . -1) (undo-tree-id7329 . -1) (undo-tree-id7330 . -1) (undo-tree-id7331 . -1) (undo-tree-id7332 . -1) (undo-tree-id7333 . -1) (undo-tree-id7334 . -1) (undo-tree-id7335 . -1) (undo-tree-id7336 . -1) (undo-tree-id7337 . -1) (undo-tree-id7338 . -1) (undo-tree-id7339 . -1) (undo-tree-id7340 . -1) (undo-tree-id7341 . -1) (undo-tree-id7342 . -1) (undo-tree-id7343 . -1) (undo-tree-id7344 . -1) (undo-tree-id7345 . -1) (undo-tree-id7346 . -1) (undo-tree-id7347 . -1) (undo-tree-id7348 . -1) (undo-tree-id7349 . -1) (undo-tree-id7350 . -1) (undo-tree-id7351 . -1) (undo-tree-id7352 . -1) (undo-tree-id7353 . -1) (undo-tree-id7354 . -1) (undo-tree-id7355 . -1) (undo-tree-id7356 . -1) (undo-tree-id7357 . -1) (undo-tree-id7358 . -1) (undo-tree-id7359 . -1) (undo-tree-id7360 . -1) (undo-tree-id7361 . -1) (undo-tree-id7362 . -1) (undo-tree-id7363 . -1) (undo-tree-id7364 . -1) (undo-tree-id7365 . -1) (undo-tree-id7366 . -1) (undo-tree-id7367 . -1) (undo-tree-id7368 . -1) (undo-tree-id7369 . -1) (undo-tree-id7370 . -1) (undo-tree-id7371 . -1) (undo-tree-id7372 . -1) (undo-tree-id7373 . -1) (undo-tree-id7374 . -1) (undo-tree-id7375 . -1) (undo-tree-id7376 . -1) (undo-tree-id7377 . -1) (undo-tree-id7378 . -1) (undo-tree-id7379 . -1) (undo-tree-id7380 . -1) (undo-tree-id7381 . -1) (undo-tree-id7382 . -1) (undo-tree-id7383 . -1) (undo-tree-id7384 . -1) (undo-tree-id7385 . -1) (undo-tree-id7386 . -1) (undo-tree-id7387 . -1) (undo-tree-id7388 . -1) (undo-tree-id7389 . -1) (undo-tree-id7390 . -1) (undo-tree-id7391 . -1) (undo-tree-id7392 . -1) (undo-tree-id7393 . -1) (undo-tree-id7394 . -1) (undo-tree-id7395 . -1) (undo-tree-id7396 . -1) (undo-tree-id7397 . -1) (undo-tree-id7398 . -1) (undo-tree-id7399 . -1) (undo-tree-id7400 . -1) (undo-tree-id7401 . -1) (undo-tree-id7402 . -1) (undo-tree-id7403 . -1) (undo-tree-id7404 . -1) (undo-tree-id7405 . -1) (undo-tree-id7406 . -1) (undo-tree-id7407 . -1) (undo-tree-id7408 . -1) (undo-tree-id7409 . -1) (undo-tree-id7410 . -1) (undo-tree-id7411 . -1) (undo-tree-id7412 . -1) (undo-tree-id7413 . -1) (undo-tree-id7414 . -1) (undo-tree-id7415 . -1) (undo-tree-id7416 . -1) (undo-tree-id7417 . -1) (undo-tree-id7418 . -1) (undo-tree-id7419 . -1) (undo-tree-id7420 . -1) (undo-tree-id7421 . -1) (undo-tree-id7422 . -1) (undo-tree-id7423 . -1) (undo-tree-id7424 . -1) (undo-tree-id7425 . -1) (undo-tree-id7426 . -1) (undo-tree-id7427 . -1) (undo-tree-id7428 . -1) (undo-tree-id7429 . -1) (undo-tree-id7430 . -1) (undo-tree-id7431 . -1) (undo-tree-id7432 . -1) (undo-tree-id7433 . -1) (undo-tree-id7434 . -1) (undo-tree-id7435 . -1) (undo-tree-id7436 . -1) (undo-tree-id7437 . -1) (undo-tree-id7438 . -1) (undo-tree-id7439 . -1) (undo-tree-id7440 . -1) (undo-tree-id7441 . -1) (undo-tree-id7442 . -1) (undo-tree-id7443 . -1) (undo-tree-id7444 . -1) (undo-tree-id7445 . -1) (undo-tree-id7446 . -1) (undo-tree-id7447 . -1) (undo-tree-id7448 . -1) (undo-tree-id7449 . -1) (undo-tree-id7450 . -1) (undo-tree-id7451 . -1) (undo-tree-id7452 . -1) (undo-tree-id7453 . -1) (undo-tree-id7454 . -1) (undo-tree-id7455 . -1) (undo-tree-id7456 . -1) (undo-tree-id7457 . -1) (undo-tree-id7458 . -1) (undo-tree-id7459 . -1) (undo-tree-id7460 . -1) (undo-tree-id7461 . -1) (undo-tree-id7462 . -1) (undo-tree-id7463 . -1) (undo-tree-id7464 . -1) (undo-tree-id7465 . -1) (undo-tree-id7466 . -1) (undo-tree-id7467 . -1) (undo-tree-id7468 . -1) (undo-tree-id7469 . -1) (undo-tree-id7470 . -1) (undo-tree-id7471 . -1) (undo-tree-id7472 . -1) (undo-tree-id7473 . -1) (undo-tree-id7474 . -1) (undo-tree-id7475 . -1) (undo-tree-id7476 . -1) (undo-tree-id7477 . -1) (undo-tree-id7478 . -1) (undo-tree-id7479 . -1) (undo-tree-id7480 . -1) (undo-tree-id7481 . -1) (undo-tree-id7482 . -1) (undo-tree-id7483 . -1) (undo-tree-id7484 . -1) (undo-tree-id7485 . -1) (undo-tree-id7486 . -1) (undo-tree-id7487 . -1) (undo-tree-id7488 . -1) (undo-tree-id7489 . -1) (undo-tree-id7490 . -1) (undo-tree-id7491 . -1) (undo-tree-id7492 . -1) (undo-tree-id7493 . -1) (undo-tree-id7494 . -1) (undo-tree-id7495 . -1) (undo-tree-id7496 . -1) (undo-tree-id7497 . -1) (undo-tree-id7498 . -1) (undo-tree-id7499 . -1) (undo-tree-id7500 . -1) (undo-tree-id7501 . -1) (undo-tree-id7502 . -1) (undo-tree-id7503 . -1) (undo-tree-id7504 . -1) (undo-tree-id7505 . -1) (undo-tree-id7506 . -1) (undo-tree-id7507 . -1) (undo-tree-id7508 . -1) (undo-tree-id7509 . -1) (undo-tree-id7510 . -1) (undo-tree-id7511 . -1) (undo-tree-id7512 . -1) (undo-tree-id7513 . -1) (undo-tree-id7514 . -1) (undo-tree-id7515 . -1) (undo-tree-id7516 . -1) (undo-tree-id7517 . -1) (undo-tree-id7518 . -1) (undo-tree-id7519 . -1) (undo-tree-id7520 . -1) (undo-tree-id7521 . -1) (undo-tree-id7522 . -1) (undo-tree-id7523 . -1) (undo-tree-id7524 . -1) (undo-tree-id7525 . -1) (undo-tree-id7526 . -1) (undo-tree-id7527 . -1) (undo-tree-id7528 . -1) (undo-tree-id7529 . -1) (undo-tree-id7530 . -1) (undo-tree-id7531 . -1) (undo-tree-id7532 . -1) (undo-tree-id7533 . -1) (undo-tree-id7534 . -1) (undo-tree-id7535 . -1) (undo-tree-id7536 . -1) (undo-tree-id7537 . -1) (undo-tree-id7538 . -1) (undo-tree-id7539 . -1) (undo-tree-id7540 . -1) (undo-tree-id7541 . -1) (undo-tree-id7542 . -1) (undo-tree-id7543 . -1) (undo-tree-id7544 . -1) (undo-tree-id7545 . -1) (undo-tree-id7546 . -1) (undo-tree-id7547 . -1) (undo-tree-id7548 . -1) (undo-tree-id7549 . -1) (undo-tree-id7550 . -1) (undo-tree-id7551 . -1) (undo-tree-id7552 . -1) (undo-tree-id7553 . -1) (undo-tree-id7554 . -1) (undo-tree-id7555 . -1) (undo-tree-id7556 . -1) (undo-tree-id7557 . -1) (undo-tree-id7558 . -1) (undo-tree-id7559 . -1) (undo-tree-id7560 . -1) (undo-tree-id7561 . -1) (undo-tree-id7562 . -1) (undo-tree-id7563 . -1) (undo-tree-id7564 . -1) (undo-tree-id7565 . -1) (undo-tree-id7566 . -1) (undo-tree-id7567 . -1) (undo-tree-id7568 . -1) (undo-tree-id7569 . -1) (undo-tree-id7570 . -1) (undo-tree-id7571 . -1) (undo-tree-id7572 . -1) (undo-tree-id7573 . -1) (undo-tree-id7574 . -1) (undo-tree-id7575 . -1) (undo-tree-id7576 . -1) (undo-tree-id7577 . -1) (undo-tree-id7578 . -1) (undo-tree-id7579 . -1) (undo-tree-id7580 . -1) (undo-tree-id7581 . -1) (undo-tree-id7582 . -1) (undo-tree-id7583 . -1) (undo-tree-id7584 . -1) (undo-tree-id7585 . -1) (undo-tree-id7586 . -1) (undo-tree-id7587 . -1) (undo-tree-id7588 . -1) (undo-tree-id7589 . -1) (undo-tree-id7590 . -1) (undo-tree-id7591 . -1) (undo-tree-id7592 . -1) (undo-tree-id7593 . -1) (undo-tree-id7594 . -1) (undo-tree-id7595 . -1) (undo-tree-id7596 . -1) (undo-tree-id7597 . -1) (undo-tree-id7598 . -1) (undo-tree-id7599 . -1) (undo-tree-id7600 . -1) (undo-tree-id7601 . -1) (undo-tree-id7602 . -1) (undo-tree-id7603 . -1) (undo-tree-id7604 . -1) (undo-tree-id7605 . -1) (undo-tree-id7606 . -1) (undo-tree-id7607 . -1) (undo-tree-id7608 . -1) (undo-tree-id7609 . -1) (undo-tree-id7610 . -1) (undo-tree-id7611 . -1) (undo-tree-id7612 . -1) (undo-tree-id7613 . -1) (undo-tree-id7614 . -1) (undo-tree-id7615 . -1) (undo-tree-id7616 . -1) (undo-tree-id7617 . -1) (undo-tree-id7618 . -1) (undo-tree-id7619 . -1) (undo-tree-id7620 . -1) (undo-tree-id7621 . -1) (undo-tree-id7622 . -1) (undo-tree-id7623 . -1) (undo-tree-id7624 . -1) (undo-tree-id7625 . -1) (undo-tree-id7626 . -1) (undo-tree-id7627 . -1) (undo-tree-id7628 . -1) (undo-tree-id7629 . -1) (undo-tree-id7630 . -1) (undo-tree-id7631 . -1) (undo-tree-id7632 . -1) (undo-tree-id7633 . -1) (undo-tree-id7634 . -1) (undo-tree-id7635 . -1) (undo-tree-id7636 . -1) (undo-tree-id7637 . -1) (undo-tree-id7638 . -1) (undo-tree-id7639 . -1) (undo-tree-id7640 . -1) (undo-tree-id7641 . -1) (undo-tree-id7642 . -1) (undo-tree-id7643 . -1) (undo-tree-id7644 . -1) (undo-tree-id7645 . -1) (undo-tree-id7646 . -1) (undo-tree-id7647 . -1) (undo-tree-id7648 . -1) (undo-tree-id7649 . -1) (undo-tree-id7650 . -1) (undo-tree-id7651 . -1) (undo-tree-id7652 . -1) (undo-tree-id7653 . -1) (undo-tree-id7654 . -1) (undo-tree-id7655 . -1) (undo-tree-id7656 . -1) (undo-tree-id7657 . -1) (undo-tree-id7658 . -1) (undo-tree-id7659 . -1) (undo-tree-id7660 . -1) (undo-tree-id7661 . -1) (undo-tree-id7662 . -1) (undo-tree-id7663 . -1) (undo-tree-id7664 . -1) (undo-tree-id7665 . -1) (undo-tree-id7666 . -1) (undo-tree-id7667 . -1) (undo-tree-id7668 . -1) (undo-tree-id7669 . -1) (undo-tree-id7670 . -1) (undo-tree-id7671 . -1) (undo-tree-id7672 . -1) (undo-tree-id7673 . -1) (undo-tree-id7674 . -1) (undo-tree-id7675 . -1) (undo-tree-id7676 . -1) (undo-tree-id7677 . -1) (undo-tree-id7678 . -1) (undo-tree-id7679 . -1) (undo-tree-id7680 . -1) (undo-tree-id7681 . -1) (undo-tree-id7682 . -1) (undo-tree-id7683 . -1) (undo-tree-id7684 . -1) (undo-tree-id7685 . -1) (undo-tree-id7686 . -1) (undo-tree-id7687 . -1) (undo-tree-id7688 . -1) 69116 (#("i" 0 1 (fontified t)) . -69116) (undo-tree-id7689 . -1) (undo-tree-id7690 . -1) (undo-tree-id7691 . -1) (undo-tree-id7692 . -1) (undo-tree-id7693 . -1) (undo-tree-id7694 . -1) (undo-tree-id7695 . -1) (undo-tree-id7696 . -1) (undo-tree-id7697 . -1) (undo-tree-id7698 . -1) (undo-tree-id7699 . -1) (undo-tree-id7700 . -1) (undo-tree-id7701 . -1) (undo-tree-id7702 . -1) (undo-tree-id7703 . -1) (undo-tree-id7704 . -1) (undo-tree-id7705 . -1) (undo-tree-id7706 . -1) (undo-tree-id7707 . -1) (undo-tree-id7708 . -1) (undo-tree-id7709 . -1) (undo-tree-id7710 . -1) (undo-tree-id7711 . -1) (undo-tree-id7712 . -1) (undo-tree-id7713 . -1) (undo-tree-id7714 . -1) (undo-tree-id7715 . -1) (undo-tree-id7716 . -1) (undo-tree-id7717 . -1) (undo-tree-id7718 . -1) (undo-tree-id7719 . -1) (undo-tree-id7720 . -1) (undo-tree-id7721 . -1) (undo-tree-id7722 . -1) (undo-tree-id7723 . -1) (undo-tree-id7724 . -1) (undo-tree-id7725 . -1) (undo-tree-id7726 . -1) (undo-tree-id7727 . -1) (undo-tree-id7728 . -1) (undo-tree-id7729 . -1) (undo-tree-id7730 . -1) (undo-tree-id7731 . -1) (undo-tree-id7732 . -1) (undo-tree-id7733 . -1) (undo-tree-id7734 . -1) (undo-tree-id7735 . -1) (undo-tree-id7736 . -1) (undo-tree-id7737 . -1) (undo-tree-id7738 . -1) (undo-tree-id7739 . -1) (undo-tree-id7740 . -1) (undo-tree-id7741 . -1) (undo-tree-id7742 . -1) (undo-tree-id7743 . -1) (undo-tree-id7744 . -1) (undo-tree-id7745 . -1) (undo-tree-id7746 . -1) (undo-tree-id7747 . -1) (undo-tree-id7748 . -1) (undo-tree-id7749 . -1) (undo-tree-id7750 . -1) (undo-tree-id7751 . -1) (undo-tree-id7752 . -1) (undo-tree-id7753 . -1) (undo-tree-id7754 . -1) (undo-tree-id7755 . -1) (undo-tree-id7756 . -1) (undo-tree-id7757 . -1) (undo-tree-id7758 . -1) (undo-tree-id7759 . -1) (undo-tree-id7760 . -1) (undo-tree-id7761 . -1) (undo-tree-id7762 . -1) (undo-tree-id7763 . -1) (undo-tree-id7764 . -1) (undo-tree-id7765 . -1) (undo-tree-id7766 . -1) (undo-tree-id7767 . -1) (undo-tree-id7768 . -1) (undo-tree-id7769 . -1) (undo-tree-id7770 . -1) (undo-tree-id7771 . -1) (undo-tree-id7772 . -1) (undo-tree-id7773 . -1) (undo-tree-id7774 . -1) (undo-tree-id7775 . -1) (undo-tree-id7776 . -1) (undo-tree-id7777 . -1) (undo-tree-id7778 . -1) (undo-tree-id7779 . -1) (undo-tree-id7780 . -1) (undo-tree-id7781 . -1) (undo-tree-id7782 . -1) (undo-tree-id7783 . -1) (undo-tree-id7784 . -1) (undo-tree-id7785 . -1) (undo-tree-id7786 . -1) (undo-tree-id7787 . -1) (undo-tree-id7788 . -1) (undo-tree-id7789 . -1) (undo-tree-id7790 . -1) (undo-tree-id7791 . -1) (undo-tree-id7792 . -1) (undo-tree-id7793 . -1) (undo-tree-id7794 . -1) (undo-tree-id7795 . -1) (undo-tree-id7796 . -1) (undo-tree-id7797 . -1) (undo-tree-id7798 . -1) (undo-tree-id7799 . -1) (undo-tree-id7800 . -1) (undo-tree-id7801 . -1) (undo-tree-id7802 . -1) (undo-tree-id7803 . -1) (undo-tree-id7804 . -1) (undo-tree-id7805 . -1) (undo-tree-id7806 . -1) (undo-tree-id7807 . -1) (undo-tree-id7808 . -1) (undo-tree-id7809 . -1) (undo-tree-id7810 . -1) (undo-tree-id7811 . -1) (undo-tree-id7812 . -1) (undo-tree-id7813 . -1) (undo-tree-id7814 . -1) (undo-tree-id7815 . -1) (undo-tree-id7816 . -1) (undo-tree-id7817 . -1) (undo-tree-id7818 . -1) (undo-tree-id7819 . -1) (undo-tree-id7820 . -1) (undo-tree-id7821 . -1) (undo-tree-id7822 . -1) (undo-tree-id7823 . -1) (undo-tree-id7824 . -1) (undo-tree-id7825 . -1) (undo-tree-id7826 . -1) (undo-tree-id7827 . -1) (undo-tree-id7828 . -1) (undo-tree-id7829 . -1) (undo-tree-id7830 . -1) (undo-tree-id7831 . -1) (undo-tree-id7832 . -1) (undo-tree-id7833 . -1) (undo-tree-id7834 . -1) (undo-tree-id7835 . -1) (undo-tree-id7836 . -1) (undo-tree-id7837 . -1) (undo-tree-id7838 . -1) (undo-tree-id7839 . -1) (undo-tree-id7840 . -1) (undo-tree-id7841 . -1) (undo-tree-id7842 . -1) (undo-tree-id7843 . -1) (undo-tree-id7844 . -1) (undo-tree-id7845 . -1) (undo-tree-id7846 . -1) (undo-tree-id7847 . -1) (undo-tree-id7848 . -1) (undo-tree-id7849 . -1) (undo-tree-id7850 . -1) (undo-tree-id7851 . -1) (undo-tree-id7852 . -1) (undo-tree-id7853 . -1) (undo-tree-id7854 . -1) (undo-tree-id7855 . -1) (undo-tree-id7856 . -1) (undo-tree-id7857 . -1) (undo-tree-id7858 . -1) (undo-tree-id7859 . -1) (undo-tree-id7860 . -1) (undo-tree-id7861 . -1) (undo-tree-id7862 . -1) (undo-tree-id7863 . -1) (undo-tree-id7864 . -1) (undo-tree-id7865 . -1) (undo-tree-id7866 . -1) (undo-tree-id7867 . -1) (undo-tree-id7868 . -1) (undo-tree-id7869 . -1) (undo-tree-id7870 . -1) (undo-tree-id7871 . -1) (undo-tree-id7872 . -1) (undo-tree-id7873 . -1) (undo-tree-id7874 . -1) (undo-tree-id7875 . -1) (undo-tree-id7876 . -1) (undo-tree-id7877 . -1) (undo-tree-id7878 . -1) (undo-tree-id7879 . -1) (undo-tree-id7880 . -1) (undo-tree-id7881 . -1) (undo-tree-id7882 . -1) (undo-tree-id7883 . -1) (undo-tree-id7884 . -1) (undo-tree-id7885 . -1) (undo-tree-id7886 . -1) (undo-tree-id7887 . -1) (undo-tree-id7888 . -1) (undo-tree-id7889 . -1) (undo-tree-id7890 . -1) (undo-tree-id7891 . -1) (undo-tree-id7892 . -1) (undo-tree-id7893 . -1) (undo-tree-id7894 . -1) (undo-tree-id7895 . -1) (undo-tree-id7896 . -1) (undo-tree-id7897 . -1) (undo-tree-id7898 . -1) (undo-tree-id7899 . -1) (undo-tree-id7900 . -1) (undo-tree-id7901 . -1) (undo-tree-id7902 . -1) (undo-tree-id7903 . -1) (undo-tree-id7904 . -1) (undo-tree-id7905 . -1) (undo-tree-id7906 . -1) (undo-tree-id7907 . -1) (undo-tree-id7908 . -1) (undo-tree-id7909 . -1) (undo-tree-id7910 . -1) (undo-tree-id7911 . -1) (undo-tree-id7912 . -1) (undo-tree-id7913 . -1) (undo-tree-id7914 . -1) (undo-tree-id7915 . -1) (undo-tree-id7916 . -1) (undo-tree-id7917 . -1) (undo-tree-id7918 . -1) (undo-tree-id7919 . -1) (undo-tree-id7920 . -1) (undo-tree-id7921 . -1) (undo-tree-id7922 . -1) (undo-tree-id7923 . -1) (undo-tree-id7924 . -1) (undo-tree-id7925 . -1) (undo-tree-id7926 . -1) (undo-tree-id7927 . -1) (undo-tree-id7928 . -1) (undo-tree-id7929 . -1) (undo-tree-id7930 . -1) (undo-tree-id7931 . -1) (undo-tree-id7932 . -1) (undo-tree-id7933 . -1) (undo-tree-id7934 . -1) (undo-tree-id7935 . -1) (undo-tree-id7936 . -1) (undo-tree-id7937 . -1) (undo-tree-id7938 . -1) (undo-tree-id7939 . -1) (undo-tree-id7940 . -1) (undo-tree-id7941 . -1) (undo-tree-id7942 . -1) (undo-tree-id7943 . -1) (undo-tree-id7944 . -1) (undo-tree-id7945 . -1) (undo-tree-id7946 . -1) (undo-tree-id7947 . -1) (undo-tree-id7948 . -1) (undo-tree-id7949 . -1) (undo-tree-id7950 . -1) (undo-tree-id7951 . -1) (undo-tree-id7952 . -1) (undo-tree-id7953 . -1) (undo-tree-id7954 . -1) (undo-tree-id7955 . -1) (undo-tree-id7956 . -1) (undo-tree-id7957 . -1) (undo-tree-id7958 . -1) (undo-tree-id7959 . -1) (undo-tree-id7960 . -1) (undo-tree-id7961 . -1) (undo-tree-id7962 . -1) (undo-tree-id7963 . -1) (undo-tree-id7964 . -1) (undo-tree-id7965 . -1) (undo-tree-id7966 . -1) (undo-tree-id7967 . -1) (undo-tree-id7968 . -1) (undo-tree-id7969 . -1) (undo-tree-id7970 . -1) (undo-tree-id7971 . -1) (undo-tree-id7972 . -1) (undo-tree-id7973 . -1) (undo-tree-id7974 . -1) (undo-tree-id7975 . -1) (undo-tree-id7976 . -1) (undo-tree-id7977 . -1) (undo-tree-id7978 . -1) (undo-tree-id7979 . -1) (undo-tree-id7980 . -1) (undo-tree-id7981 . -1) (undo-tree-id7982 . -1) (undo-tree-id7983 . -1) (undo-tree-id7984 . -1) (undo-tree-id7985 . -1) (undo-tree-id7986 . -1) (undo-tree-id7987 . -1) (undo-tree-id7988 . -1) (undo-tree-id7989 . -1) (undo-tree-id7990 . -1) (undo-tree-id7991 . -1) (undo-tree-id7992 . -1) (undo-tree-id7993 . -1) (undo-tree-id7994 . -1) (undo-tree-id7995 . -1) (undo-tree-id7996 . -1) (undo-tree-id7997 . -1) (undo-tree-id7998 . -1) (undo-tree-id7999 . -1) (undo-tree-id8000 . -1) (undo-tree-id8001 . -1) (undo-tree-id8002 . -1) (undo-tree-id8003 . -1) (undo-tree-id8004 . -1) (undo-tree-id8005 . -1) (undo-tree-id8006 . -1) (undo-tree-id8007 . -1) (undo-tree-id8008 . -1) (undo-tree-id8009 . -1) (undo-tree-id8010 . -1) (undo-tree-id8011 . -1) (undo-tree-id8012 . -1) (undo-tree-id8013 . -1) (undo-tree-id8014 . -1) (undo-tree-id8015 . -1) (undo-tree-id8016 . -1) (undo-tree-id8017 . -1) (undo-tree-id8018 . -1) (undo-tree-id8019 . -1) (undo-tree-id8020 . -1) (undo-tree-id8021 . -1) (undo-tree-id8022 . -1) (undo-tree-id8023 . -1) (undo-tree-id8024 . -1) (undo-tree-id8025 . -1) (undo-tree-id8026 . -1) (undo-tree-id8027 . -1) (undo-tree-id8028 . -1) (undo-tree-id8029 . -1) (undo-tree-id8030 . -1) (undo-tree-id8031 . -1) (undo-tree-id8032 . -1) (undo-tree-id8033 . -1) (undo-tree-id8034 . -1) (undo-tree-id8035 . -1) (undo-tree-id8036 . -1) (undo-tree-id8037 . -1) (undo-tree-id8038 . -1) (undo-tree-id8039 . -1) (undo-tree-id8040 . -1) (undo-tree-id8041 . -1) (undo-tree-id8042 . -1) (undo-tree-id8043 . -1) (undo-tree-id8044 . -1) (undo-tree-id8045 . -1) (undo-tree-id8046 . -1) (undo-tree-id8047 . -1) (undo-tree-id8048 . -1) (undo-tree-id8049 . -1) (undo-tree-id8050 . -1) (undo-tree-id8051 . -1) (undo-tree-id8052 . -1) (undo-tree-id8053 . -1) (undo-tree-id8054 . -1) (#("s" 0 1 (fontified t)) . -69117) (undo-tree-id8055 . -1) (undo-tree-id8056 . -1) (undo-tree-id8057 . -1) (undo-tree-id8058 . -1) (undo-tree-id8059 . -1) (undo-tree-id8060 . -1) (undo-tree-id8061 . -1) (undo-tree-id8062 . -1) (undo-tree-id8063 . -1) (undo-tree-id8064 . -1) (undo-tree-id8065 . -1) (undo-tree-id8066 . -1) (undo-tree-id8067 . -1) (undo-tree-id8068 . -1) (undo-tree-id8069 . -1) (undo-tree-id8070 . -1) (undo-tree-id8071 . -1) (undo-tree-id8072 . -1) (undo-tree-id8073 . -1) (undo-tree-id8074 . -1) (undo-tree-id8075 . -1) (undo-tree-id8076 . -1) (undo-tree-id8077 . -1) (undo-tree-id8078 . -1) (undo-tree-id8079 . -1) (undo-tree-id8080 . -1) (undo-tree-id8081 . -1) (undo-tree-id8082 . -1) (undo-tree-id8083 . -1) (undo-tree-id8084 . -1) (undo-tree-id8085 . -1) (undo-tree-id8086 . -1) (undo-tree-id8087 . -1) (undo-tree-id8088 . -1) (undo-tree-id8089 . -1) (undo-tree-id8090 . -1) (undo-tree-id8091 . -1) (undo-tree-id8092 . -1) (undo-tree-id8093 . -1) (undo-tree-id8094 . -1) (undo-tree-id8095 . -1) (undo-tree-id8096 . -1) (undo-tree-id8097 . -1) (undo-tree-id8098 . -1) (undo-tree-id8099 . -1) (undo-tree-id8100 . -1) (undo-tree-id8101 . -1) (undo-tree-id8102 . -1) (undo-tree-id8103 . -1) (undo-tree-id8104 . -1) (undo-tree-id8105 . -1) (undo-tree-id8106 . -1) (undo-tree-id8107 . -1) (undo-tree-id8108 . -1) (undo-tree-id8109 . -1) (undo-tree-id8110 . -1) (undo-tree-id8111 . -1) (undo-tree-id8112 . -1) (undo-tree-id8113 . -1) (undo-tree-id8114 . -1) (undo-tree-id8115 . -1) (undo-tree-id8116 . -1) (undo-tree-id8117 . -1) (undo-tree-id8118 . -1) (undo-tree-id8119 . -1) (undo-tree-id8120 . -1) (undo-tree-id8121 . -1) (undo-tree-id8122 . -1) (undo-tree-id8123 . -1) (undo-tree-id8124 . -1) (undo-tree-id8125 . -1) (undo-tree-id8126 . -1) (undo-tree-id8127 . -1) (undo-tree-id8128 . -1) (undo-tree-id8129 . -1) (undo-tree-id8130 . -1) (undo-tree-id8131 . -1) (undo-tree-id8132 . -1) (undo-tree-id8133 . -1) (undo-tree-id8134 . -1) (undo-tree-id8135 . -1) (undo-tree-id8136 . -1) (undo-tree-id8137 . -1) (undo-tree-id8138 . -1) (undo-tree-id8139 . -1) (undo-tree-id8140 . -1) (undo-tree-id8141 . -1) (undo-tree-id8142 . -1) (undo-tree-id8143 . -1) (undo-tree-id8144 . -1) (undo-tree-id8145 . -1) (undo-tree-id8146 . -1) (undo-tree-id8147 . -1) (undo-tree-id8148 . -1) (undo-tree-id8149 . -1) (undo-tree-id8150 . -1) (undo-tree-id8151 . -1) (undo-tree-id8152 . -1) (undo-tree-id8153 . -1) (undo-tree-id8154 . -1) (undo-tree-id8155 . -1) (undo-tree-id8156 . -1) (undo-tree-id8157 . -1) (undo-tree-id8158 . -1) (undo-tree-id8159 . -1) (undo-tree-id8160 . -1) (undo-tree-id8161 . -1) (undo-tree-id8162 . -1) (undo-tree-id8163 . -1) (undo-tree-id8164 . -1) (undo-tree-id8165 . -1) (undo-tree-id8166 . -1) (undo-tree-id8167 . -1) (undo-tree-id8168 . -1) (undo-tree-id8169 . -1) (undo-tree-id8170 . -1) (undo-tree-id8171 . -1) (undo-tree-id8172 . -1) (undo-tree-id8173 . -1) (undo-tree-id8174 . -1) (undo-tree-id8175 . -1) (undo-tree-id8176 . -1) (undo-tree-id8177 . -1) (undo-tree-id8178 . -1) (undo-tree-id8179 . -1) (undo-tree-id8180 . -1) (undo-tree-id8181 . -1) (undo-tree-id8182 . -1) (undo-tree-id8183 . -1) (undo-tree-id8184 . -1) (undo-tree-id8185 . -1) (undo-tree-id8186 . -1) (undo-tree-id8187 . -1) (undo-tree-id8188 . -1) (undo-tree-id8189 . -1) (undo-tree-id8190 . -1) (undo-tree-id8191 . -1) (undo-tree-id8192 . -1) (undo-tree-id8193 . -1) (undo-tree-id8194 . -1) (undo-tree-id8195 . -1) (undo-tree-id8196 . -1) (undo-tree-id8197 . -1) (undo-tree-id8198 . -1) (undo-tree-id8199 . -1) (undo-tree-id8200 . -1) (undo-tree-id8201 . -1) (undo-tree-id8202 . -1) (undo-tree-id8203 . -1) (undo-tree-id8204 . -1) (undo-tree-id8205 . -1) (undo-tree-id8206 . -1) (undo-tree-id8207 . -1) (undo-tree-id8208 . -1) (undo-tree-id8209 . -1) (undo-tree-id8210 . -1) (undo-tree-id8211 . -1) (undo-tree-id8212 . -1) (undo-tree-id8213 . -1) (undo-tree-id8214 . -1) (undo-tree-id8215 . -1) (undo-tree-id8216 . -1) (undo-tree-id8217 . -1) (undo-tree-id8218 . -1) (undo-tree-id8219 . -1) (undo-tree-id8220 . -1) (undo-tree-id8221 . -1) (undo-tree-id8222 . -1) (undo-tree-id8223 . -1) (undo-tree-id8224 . -1) (undo-tree-id8225 . -1) (undo-tree-id8226 . -1) (undo-tree-id8227 . -1) (undo-tree-id8228 . -1) (undo-tree-id8229 . -1) (undo-tree-id8230 . -1) (undo-tree-id8231 . -1) (undo-tree-id8232 . -1) (undo-tree-id8233 . -1) (undo-tree-id8234 . -1) (undo-tree-id8235 . -1) (undo-tree-id8236 . -1) (undo-tree-id8237 . -1) (undo-tree-id8238 . -1) (undo-tree-id8239 . -1) (undo-tree-id8240 . -1) (undo-tree-id8241 . -1) (undo-tree-id8242 . -1) (undo-tree-id8243 . -1) (undo-tree-id8244 . -1) (undo-tree-id8245 . -1) (undo-tree-id8246 . -1) (undo-tree-id8247 . -1) (undo-tree-id8248 . -1) (undo-tree-id8249 . -1) (undo-tree-id8250 . -1) (undo-tree-id8251 . -1) (undo-tree-id8252 . -1) (undo-tree-id8253 . -1) (undo-tree-id8254 . -1) (undo-tree-id8255 . -1) (undo-tree-id8256 . -1) (undo-tree-id8257 . -1) (undo-tree-id8258 . -1) (undo-tree-id8259 . -1) (undo-tree-id8260 . -1) (undo-tree-id8261 . -1) (undo-tree-id8262 . -1) (undo-tree-id8263 . -1) (undo-tree-id8264 . -1) (undo-tree-id8265 . -1) (undo-tree-id8266 . -1) (undo-tree-id8267 . -1) (undo-tree-id8268 . -1) (undo-tree-id8269 . -1) (undo-tree-id8270 . -1) (undo-tree-id8271 . -1) (undo-tree-id8272 . -1) (undo-tree-id8273 . -1) (undo-tree-id8274 . -1) (undo-tree-id8275 . -1) (undo-tree-id8276 . -1) (undo-tree-id8277 . -1) (undo-tree-id8278 . -1) (undo-tree-id8279 . -1) (undo-tree-id8280 . -1) (undo-tree-id8281 . -1) (undo-tree-id8282 . -1) (undo-tree-id8283 . -1) (undo-tree-id8284 . -1) (undo-tree-id8285 . -1) (undo-tree-id8286 . -1) (undo-tree-id8287 . -1) (undo-tree-id8288 . -1) (undo-tree-id8289 . -1) (undo-tree-id8290 . -1) (undo-tree-id8291 . -1) (undo-tree-id8292 . -1) (undo-tree-id8293 . -1) (undo-tree-id8294 . -1) (undo-tree-id8295 . -1) (undo-tree-id8296 . -1) (undo-tree-id8297 . -1) (undo-tree-id8298 . -1) (undo-tree-id8299 . -1) (undo-tree-id8300 . -1) (undo-tree-id8301 . -1) (undo-tree-id8302 . -1) (undo-tree-id8303 . -1) (undo-tree-id8304 . -1) (undo-tree-id8305 . -1) (undo-tree-id8306 . -1) (undo-tree-id8307 . -1) (undo-tree-id8308 . -1) (undo-tree-id8309 . -1) (undo-tree-id8310 . -1) (undo-tree-id8311 . -1) (undo-tree-id8312 . -1) (undo-tree-id8313 . -1) (undo-tree-id8314 . -1) (undo-tree-id8315 . -1) (undo-tree-id8316 . -1) (undo-tree-id8317 . -1) (undo-tree-id8318 . -1) (undo-tree-id8319 . -1) (undo-tree-id8320 . -1) (undo-tree-id8321 . -1) (undo-tree-id8322 . -1) (undo-tree-id8323 . -1) (undo-tree-id8324 . -1) (undo-tree-id8325 . -1) (undo-tree-id8326 . -1) (undo-tree-id8327 . -1) (undo-tree-id8328 . -1) (undo-tree-id8329 . -1) (undo-tree-id8330 . -1) (undo-tree-id8331 . -1) (undo-tree-id8332 . -1) (undo-tree-id8333 . -1) (undo-tree-id8334 . -1) (undo-tree-id8335 . -1) (undo-tree-id8336 . -1) (undo-tree-id8337 . -1) (undo-tree-id8338 . -1) (undo-tree-id8339 . -1) (undo-tree-id8340 . -1) (undo-tree-id8341 . -1) (undo-tree-id8342 . -1) (undo-tree-id8343 . -1) (undo-tree-id8344 . -1) (undo-tree-id8345 . -1) (undo-tree-id8346 . -1) (undo-tree-id8347 . -1) (undo-tree-id8348 . -1) (undo-tree-id8349 . -1) (undo-tree-id8350 . -1) (undo-tree-id8351 . -1) (undo-tree-id8352 . -1) (undo-tree-id8353 . -1) (undo-tree-id8354 . -1) (undo-tree-id8355 . -1) (undo-tree-id8356 . -1) (undo-tree-id8357 . -1) (undo-tree-id8358 . -1) (undo-tree-id8359 . -1) (undo-tree-id8360 . -1) (undo-tree-id8361 . -1) (undo-tree-id8362 . -1) (undo-tree-id8363 . -1) (undo-tree-id8364 . -1) (undo-tree-id8365 . -1) (undo-tree-id8366 . -1) (undo-tree-id8367 . -1) (undo-tree-id8368 . -1) (undo-tree-id8369 . -1) (undo-tree-id8370 . -1) (undo-tree-id8371 . -1) (undo-tree-id8372 . -1) (undo-tree-id8373 . -1) (undo-tree-id8374 . -1) (undo-tree-id8375 . -1) (undo-tree-id8376 . -1) (undo-tree-id8377 . -1) (undo-tree-id8378 . -1) (undo-tree-id8379 . -1) (undo-tree-id8380 . -1) (undo-tree-id8381 . -1) (undo-tree-id8382 . -1) (undo-tree-id8383 . -1) (undo-tree-id8384 . -1) (undo-tree-id8385 . -1) (undo-tree-id8386 . -1) (undo-tree-id8387 . -1) (undo-tree-id8388 . -1) (undo-tree-id8389 . -1) (undo-tree-id8390 . -1) (undo-tree-id8391 . -1) (undo-tree-id8392 . -1) (undo-tree-id8393 . -1) (undo-tree-id8394 . -1) (undo-tree-id8395 . -1) (undo-tree-id8396 . -1) (undo-tree-id8397 . -1) (undo-tree-id8398 . -1) (undo-tree-id8399 . -1) (undo-tree-id8400 . -1) (undo-tree-id8401 . -1) (undo-tree-id8402 . -1) (undo-tree-id8403 . -1) (undo-tree-id8404 . -1) (#(" " 0 1 (fontified t)) . -69118) (undo-tree-id8405 . -1) (undo-tree-id8406 . -1) (undo-tree-id8407 . -1) (undo-tree-id8408 . -1) (undo-tree-id8409 . -1) (undo-tree-id8410 . -1) (undo-tree-id8411 . -1) (undo-tree-id8412 . -1) (undo-tree-id8413 . -1) (undo-tree-id8414 . -1) (undo-tree-id8415 . -1) (undo-tree-id8416 . -1) (undo-tree-id8417 . -1) (undo-tree-id8418 . -1) (undo-tree-id8419 . -1) (undo-tree-id8420 . -1) (undo-tree-id8421 . -1) (undo-tree-id8422 . -1) (undo-tree-id8423 . -1) (undo-tree-id8424 . -1) (undo-tree-id8425 . -1) (undo-tree-id8426 . -1) (undo-tree-id8427 . -1) (undo-tree-id8428 . -1) (undo-tree-id8429 . -1) (undo-tree-id8430 . -1) (undo-tree-id8431 . -1) (undo-tree-id8432 . -1) (undo-tree-id8433 . -1) (undo-tree-id8434 . -1) (undo-tree-id8435 . -1) (undo-tree-id8436 . -1) (undo-tree-id8437 . -1) (undo-tree-id8438 . -1) (undo-tree-id8439 . -1) (undo-tree-id8440 . -1) (undo-tree-id8441 . -1) (undo-tree-id8442 . -1) (undo-tree-id8443 . -1) (undo-tree-id8444 . -1) (undo-tree-id8445 . -1) (undo-tree-id8446 . -1) (undo-tree-id8447 . -1) (undo-tree-id8448 . -1) (undo-tree-id8449 . -1) (undo-tree-id8450 . -1) (undo-tree-id8451 . -1) (undo-tree-id8452 . -1) (undo-tree-id8453 . -1) (undo-tree-id8454 . -1) (undo-tree-id8455 . -1) (undo-tree-id8456 . -1) (undo-tree-id8457 . -1) (undo-tree-id8458 . -1) (undo-tree-id8459 . -1) (undo-tree-id8460 . -1) (undo-tree-id8461 . -1) (undo-tree-id8462 . -1) (undo-tree-id8463 . -1) (undo-tree-id8464 . -1) (undo-tree-id8465 . -1) (undo-tree-id8466 . -1) (undo-tree-id8467 . -1) (undo-tree-id8468 . -1) (undo-tree-id8469 . -1) (undo-tree-id8470 . -1) (undo-tree-id8471 . -1) (undo-tree-id8472 . -1) (undo-tree-id8473 . -1) (undo-tree-id8474 . -1) (undo-tree-id8475 . -1) (undo-tree-id8476 . -1) (undo-tree-id8477 . -1) (undo-tree-id8478 . -1) (undo-tree-id8479 . -1) (undo-tree-id8480 . -1) (undo-tree-id8481 . -1) (undo-tree-id8482 . -1) (undo-tree-id8483 . -1) (undo-tree-id8484 . -1) (undo-tree-id8485 . -1) (undo-tree-id8486 . -1) (undo-tree-id8487 . -1) (undo-tree-id8488 . -1) (undo-tree-id8489 . -1) (undo-tree-id8490 . -1) (undo-tree-id8491 . -1) (undo-tree-id8492 . -1) (undo-tree-id8493 . -1) (undo-tree-id8494 . -1) (undo-tree-id8495 . -1) (undo-tree-id8496 . -1) (undo-tree-id8497 . -1) (undo-tree-id8498 . -1) (undo-tree-id8499 . -1) (undo-tree-id8500 . -1) (undo-tree-id8501 . -1) (undo-tree-id8502 . -1) (undo-tree-id8503 . -1) (undo-tree-id8504 . -1) (undo-tree-id8505 . -1) (undo-tree-id8506 . -1) (undo-tree-id8507 . -1) (undo-tree-id8508 . -1) (undo-tree-id8509 . -1) (undo-tree-id8510 . -1) (undo-tree-id8511 . -1) (undo-tree-id8512 . -1) (undo-tree-id8513 . -1) (undo-tree-id8514 . -1) (undo-tree-id8515 . -1) (undo-tree-id8516 . -1) (undo-tree-id8517 . -1) (undo-tree-id8518 . -1) (undo-tree-id8519 . -1) (undo-tree-id8520 . -1) (undo-tree-id8521 . -1) (undo-tree-id8522 . -1) (undo-tree-id8523 . -1) (undo-tree-id8524 . -1) (undo-tree-id8525 . -1) (undo-tree-id8526 . -1) (undo-tree-id8527 . -1) (undo-tree-id8528 . -1) (undo-tree-id8529 . -1) (undo-tree-id8530 . -1) (undo-tree-id8531 . -1) (undo-tree-id8532 . -1) (undo-tree-id8533 . -1) (undo-tree-id8534 . -1) (undo-tree-id8535 . -1) (undo-tree-id8536 . -1) (undo-tree-id8537 . -1) (undo-tree-id8538 . -1) (undo-tree-id8539 . -1) (undo-tree-id8540 . -1) (undo-tree-id8541 . -1) (undo-tree-id8542 . -1) (undo-tree-id8543 . -1) (undo-tree-id8544 . -1) (undo-tree-id8545 . -1) (undo-tree-id8546 . -1) (undo-tree-id8547 . -1) (undo-tree-id8548 . -1) (undo-tree-id8549 . -1) (undo-tree-id8550 . -1) (undo-tree-id8551 . -1) (undo-tree-id8552 . -1) (undo-tree-id8553 . -1) (undo-tree-id8554 . -1) (undo-tree-id8555 . -1) (undo-tree-id8556 . -1) (undo-tree-id8557 . -1) (undo-tree-id8558 . -1) (undo-tree-id8559 . -1) (undo-tree-id8560 . -1) (undo-tree-id8561 . -1) (undo-tree-id8562 . -1) (undo-tree-id8563 . -1) (undo-tree-id8564 . -1) (undo-tree-id8565 . -1) (undo-tree-id8566 . -1) (undo-tree-id8567 . -1) (undo-tree-id8568 . -1) (undo-tree-id8569 . -1) (undo-tree-id8570 . -1) (undo-tree-id8571 . -1) (undo-tree-id8572 . -1) (undo-tree-id8573 . -1) (undo-tree-id8574 . -1) (undo-tree-id8575 . -1) (undo-tree-id8576 . -1) (undo-tree-id8577 . -1) (undo-tree-id8578 . -1) (undo-tree-id8579 . -1) (undo-tree-id8580 . -1) (undo-tree-id8581 . -1) (undo-tree-id8582 . -1) (undo-tree-id8583 . -1) (undo-tree-id8584 . -1) (undo-tree-id8585 . -1) (undo-tree-id8586 . -1) (undo-tree-id8587 . -1) (undo-tree-id8588 . -1) (undo-tree-id8589 . -1) (undo-tree-id8590 . -1) (undo-tree-id8591 . -1) (undo-tree-id8592 . -1) (undo-tree-id8593 . -1) (undo-tree-id8594 . -1) (undo-tree-id8595 . -1) (undo-tree-id8596 . -1) (undo-tree-id8597 . -1) (undo-tree-id8598 . -1) (undo-tree-id8599 . -1) (undo-tree-id8600 . -1) (undo-tree-id8601 . -1) (undo-tree-id8602 . -1) (undo-tree-id8603 . -1) (undo-tree-id8604 . -1) (undo-tree-id8605 . -1) (undo-tree-id8606 . -1) (undo-tree-id8607 . -1) (undo-tree-id8608 . -1) (undo-tree-id8609 . -1) (undo-tree-id8610 . -1) (undo-tree-id8611 . -1) (undo-tree-id8612 . -1) (undo-tree-id8613 . -1) (undo-tree-id8614 . -1) (undo-tree-id8615 . -1) (undo-tree-id8616 . -1) (undo-tree-id8617 . -1) (undo-tree-id8618 . -1) (undo-tree-id8619 . -1) (undo-tree-id8620 . -1) (undo-tree-id8621 . -1) (undo-tree-id8622 . -1) (undo-tree-id8623 . -1) (undo-tree-id8624 . -1) (undo-tree-id8625 . -1) (undo-tree-id8626 . -1) (undo-tree-id8627 . -1) (undo-tree-id8628 . -1) (undo-tree-id8629 . -1) (undo-tree-id8630 . -1) (undo-tree-id8631 . -1) (undo-tree-id8632 . -1) (undo-tree-id8633 . -1) (undo-tree-id8634 . -1) (undo-tree-id8635 . -1) (undo-tree-id8636 . -1) (undo-tree-id8637 . -1) (undo-tree-id8638 . -1) (undo-tree-id8639 . -1) (undo-tree-id8640 . -1) (undo-tree-id8641 . -1) (undo-tree-id8642 . -1) (undo-tree-id8643 . -1) (undo-tree-id8644 . -1) (undo-tree-id8645 . -1) (undo-tree-id8646 . -1) (undo-tree-id8647 . -1) (undo-tree-id8648 . -1) (undo-tree-id8649 . -1) (undo-tree-id8650 . -1) (undo-tree-id8651 . -1) (undo-tree-id8652 . -1) (undo-tree-id8653 . -1) (undo-tree-id8654 . -1) (undo-tree-id8655 . -1) (undo-tree-id8656 . -1) (undo-tree-id8657 . -1) (undo-tree-id8658 . -1) (undo-tree-id8659 . -1) (undo-tree-id8660 . -1) (undo-tree-id8661 . -1) (undo-tree-id8662 . -1) (undo-tree-id8663 . -1) (undo-tree-id8664 . -1) (undo-tree-id8665 . -1) (undo-tree-id8666 . -1) (undo-tree-id8667 . -1) (undo-tree-id8668 . -1) (undo-tree-id8669 . -1) (undo-tree-id8670 . -1) (undo-tree-id8671 . -1) (undo-tree-id8672 . -1) (undo-tree-id8673 . -1) (undo-tree-id8674 . -1) (undo-tree-id8675 . -1) (undo-tree-id8676 . -1) (undo-tree-id8677 . -1) (undo-tree-id8678 . -1) (undo-tree-id8679 . -1) (undo-tree-id8680 . -1) (undo-tree-id8681 . -1) (undo-tree-id8682 . -1) (undo-tree-id8683 . -1) (undo-tree-id8684 . -1) (undo-tree-id8685 . -1) (undo-tree-id8686 . -1) (undo-tree-id8687 . -1) (undo-tree-id8688 . -1) (undo-tree-id8689 . -1) (undo-tree-id8690 . -1) (undo-tree-id8691 . -1) (undo-tree-id8692 . -1) (undo-tree-id8693 . -1) (undo-tree-id8694 . -1) (undo-tree-id8695 . -1) (undo-tree-id8696 . -1) (undo-tree-id8697 . -1) (undo-tree-id8698 . -1) (undo-tree-id8699 . -1) (undo-tree-id8700 . -1) (undo-tree-id8701 . -1) (undo-tree-id8702 . -1) (undo-tree-id8703 . -1) (undo-tree-id8704 . -1) (undo-tree-id8705 . -1) (undo-tree-id8706 . -1) (undo-tree-id8707 . -1) (undo-tree-id8708 . -1) (undo-tree-id8709 . -1) (undo-tree-id8710 . -1) (undo-tree-id8711 . -1) (undo-tree-id8712 . -1) (undo-tree-id8713 . -1) (undo-tree-id8714 . -1) (undo-tree-id8715 . -1) (undo-tree-id8716 . -1) (undo-tree-id8717 . -1) (undo-tree-id8718 . -1) (undo-tree-id8719 . -1) (undo-tree-id8720 . -1) (undo-tree-id8721 . -1) (undo-tree-id8722 . -1) (undo-tree-id8723 . -1) (undo-tree-id8724 . -1) (undo-tree-id8725 . -1) (undo-tree-id8726 . -1) (undo-tree-id8727 . -1) (undo-tree-id8728 . -1) (undo-tree-id8729 . -1) (undo-tree-id8730 . -1) (undo-tree-id8731 . -1) (undo-tree-id8732 . -1) (undo-tree-id8733 . -1) (undo-tree-id8734 . -1) (undo-tree-id8735 . -1) (undo-tree-id8736 . -1) (undo-tree-id8737 . -1) (undo-tree-id8738 . -1) (#("i" 0 1 (fontified t)) . -69119) (undo-tree-id8739 . -1) (undo-tree-id8740 . -1) (undo-tree-id8741 . -1) (undo-tree-id8742 . -1) (undo-tree-id8743 . -1) (undo-tree-id8744 . -1) (undo-tree-id8745 . -1) (undo-tree-id8746 . -1) (undo-tree-id8747 . -1) (undo-tree-id8748 . -1) (undo-tree-id8749 . -1) (undo-tree-id8750 . -1) (undo-tree-id8751 . -1) (undo-tree-id8752 . -1) (undo-tree-id8753 . -1) (undo-tree-id8754 . -1) (undo-tree-id8755 . -1) (undo-tree-id8756 . -1) (undo-tree-id8757 . -1) (undo-tree-id8758 . -1) (undo-tree-id8759 . -1) (undo-tree-id8760 . -1) (undo-tree-id8761 . -1) (undo-tree-id8762 . -1) (undo-tree-id8763 . -1) (undo-tree-id8764 . -1) (undo-tree-id8765 . -1) (undo-tree-id8766 . -1) (undo-tree-id8767 . -1) (undo-tree-id8768 . -1) (undo-tree-id8769 . -1) (undo-tree-id8770 . -1) (undo-tree-id8771 . -1) (undo-tree-id8772 . -1) (undo-tree-id8773 . -1) (undo-tree-id8774 . -1) (undo-tree-id8775 . -1) (undo-tree-id8776 . -1) (undo-tree-id8777 . -1) (undo-tree-id8778 . -1) (undo-tree-id8779 . -1) (undo-tree-id8780 . -1) (undo-tree-id8781 . -1) (undo-tree-id8782 . -1) (undo-tree-id8783 . -1) (undo-tree-id8784 . -1) (undo-tree-id8785 . -1) (undo-tree-id8786 . -1) (undo-tree-id8787 . -1) (undo-tree-id8788 . -1) (undo-tree-id8789 . -1) (undo-tree-id8790 . -1) (undo-tree-id8791 . -1) (undo-tree-id8792 . -1) (undo-tree-id8793 . -1) (undo-tree-id8794 . -1) (undo-tree-id8795 . -1) (undo-tree-id8796 . -1) (undo-tree-id8797 . -1) (undo-tree-id8798 . -1) (undo-tree-id8799 . -1) (undo-tree-id8800 . -1) (undo-tree-id8801 . -1) (undo-tree-id8802 . -1) (undo-tree-id8803 . -1) (undo-tree-id8804 . -1) (undo-tree-id8805 . -1) (undo-tree-id8806 . -1) (undo-tree-id8807 . -1) (undo-tree-id8808 . -1) (undo-tree-id8809 . -1) (undo-tree-id8810 . -1) (undo-tree-id8811 . -1) (undo-tree-id8812 . -1) (undo-tree-id8813 . -1) (undo-tree-id8814 . -1) (undo-tree-id8815 . -1) (undo-tree-id8816 . -1) (undo-tree-id8817 . -1) (undo-tree-id8818 . -1) (undo-tree-id8819 . -1) (undo-tree-id8820 . -1) (undo-tree-id8821 . -1) (undo-tree-id8822 . -1) (undo-tree-id8823 . -1) (undo-tree-id8824 . -1) (undo-tree-id8825 . -1) (undo-tree-id8826 . -1) (undo-tree-id8827 . -1) (undo-tree-id8828 . -1) (undo-tree-id8829 . -1) (undo-tree-id8830 . -1) (undo-tree-id8831 . -1) (undo-tree-id8832 . -1) (undo-tree-id8833 . -1) (undo-tree-id8834 . -1) (undo-tree-id8835 . -1) (undo-tree-id8836 . -1) (undo-tree-id8837 . -1) (undo-tree-id8838 . -1) (undo-tree-id8839 . -1) (undo-tree-id8840 . -1) (undo-tree-id8841 . -1) (undo-tree-id8842 . -1) (undo-tree-id8843 . -1) (undo-tree-id8844 . -1) (undo-tree-id8845 . -1) (undo-tree-id8846 . -1) (undo-tree-id8847 . -1) (undo-tree-id8848 . -1) (undo-tree-id8849 . -1) (undo-tree-id8850 . -1) (undo-tree-id8851 . -1) (undo-tree-id8852 . -1) (undo-tree-id8853 . -1) (undo-tree-id8854 . -1) (undo-tree-id8855 . -1) (undo-tree-id8856 . -1) (undo-tree-id8857 . -1) (undo-tree-id8858 . -1) (undo-tree-id8859 . -1) (undo-tree-id8860 . -1) (undo-tree-id8861 . -1) (undo-tree-id8862 . -1) (undo-tree-id8863 . -1) (undo-tree-id8864 . -1) (undo-tree-id8865 . -1) (undo-tree-id8866 . -1) (undo-tree-id8867 . -1) (undo-tree-id8868 . -1) (undo-tree-id8869 . -1) (undo-tree-id8870 . -1) (undo-tree-id8871 . -1) (undo-tree-id8872 . -1) (undo-tree-id8873 . -1) (undo-tree-id8874 . -1) (undo-tree-id8875 . -1) (undo-tree-id8876 . -1) (undo-tree-id8877 . -1) (undo-tree-id8878 . -1) (undo-tree-id8879 . -1) (undo-tree-id8880 . -1) (undo-tree-id8881 . -1) (undo-tree-id8882 . -1) (undo-tree-id8883 . -1) (undo-tree-id8884 . -1) (undo-tree-id8885 . -1) (undo-tree-id8886 . -1) (undo-tree-id8887 . -1) (undo-tree-id8888 . -1) (undo-tree-id8889 . -1) (undo-tree-id8890 . -1) (undo-tree-id8891 . -1) (undo-tree-id8892 . -1) (undo-tree-id8893 . -1) (undo-tree-id8894 . -1) (undo-tree-id8895 . -1) (undo-tree-id8896 . -1) (undo-tree-id8897 . -1) (undo-tree-id8898 . -1) (undo-tree-id8899 . -1) (undo-tree-id8900 . -1) (undo-tree-id8901 . -1) (undo-tree-id8902 . -1) (undo-tree-id8903 . -1) (undo-tree-id8904 . -1) (undo-tree-id8905 . -1) (undo-tree-id8906 . -1) (undo-tree-id8907 . -1) (undo-tree-id8908 . -1) (undo-tree-id8909 . -1) (undo-tree-id8910 . -1) (undo-tree-id8911 . -1) (undo-tree-id8912 . -1) (undo-tree-id8913 . -1) (undo-tree-id8914 . -1) (undo-tree-id8915 . -1) (undo-tree-id8916 . -1) (undo-tree-id8917 . -1) (undo-tree-id8918 . -1) (undo-tree-id8919 . -1) (undo-tree-id8920 . -1) (undo-tree-id8921 . -1) (undo-tree-id8922 . -1) (undo-tree-id8923 . -1) (undo-tree-id8924 . -1) (undo-tree-id8925 . -1) (undo-tree-id8926 . -1) (undo-tree-id8927 . -1) (undo-tree-id8928 . -1) (undo-tree-id8929 . -1) (undo-tree-id8930 . -1) (undo-tree-id8931 . -1) (undo-tree-id8932 . -1) (undo-tree-id8933 . -1) (undo-tree-id8934 . -1) (undo-tree-id8935 . -1) (undo-tree-id8936 . -1) (undo-tree-id8937 . -1) (undo-tree-id8938 . -1) (undo-tree-id8939 . -1) (undo-tree-id8940 . -1) (undo-tree-id8941 . -1) (undo-tree-id8942 . -1) (undo-tree-id8943 . -1) (undo-tree-id8944 . -1) (undo-tree-id8945 . -1) (undo-tree-id8946 . -1) (undo-tree-id8947 . -1) (undo-tree-id8948 . -1) (undo-tree-id8949 . -1) (undo-tree-id8950 . -1) (undo-tree-id8951 . -1) (undo-tree-id8952 . -1) (undo-tree-id8953 . -1) (undo-tree-id8954 . -1) (undo-tree-id8955 . -1) (undo-tree-id8956 . -1) (undo-tree-id8957 . -1) (undo-tree-id8958 . -1) (undo-tree-id8959 . -1) (undo-tree-id8960 . -1) (undo-tree-id8961 . -1) (undo-tree-id8962 . -1) (undo-tree-id8963 . -1) (undo-tree-id8964 . -1) (undo-tree-id8965 . -1) (undo-tree-id8966 . -1) (undo-tree-id8967 . -1) (undo-tree-id8968 . -1) (undo-tree-id8969 . -1) (undo-tree-id8970 . -1) (undo-tree-id8971 . -1) (undo-tree-id8972 . -1) (undo-tree-id8973 . -1) (undo-tree-id8974 . -1) (undo-tree-id8975 . -1) (undo-tree-id8976 . -1) (undo-tree-id8977 . -1) (undo-tree-id8978 . -1) (undo-tree-id8979 . -1) (undo-tree-id8980 . -1) (undo-tree-id8981 . -1) (undo-tree-id8982 . -1) (undo-tree-id8983 . -1) (undo-tree-id8984 . -1) (undo-tree-id8985 . -1) (undo-tree-id8986 . -1) (undo-tree-id8987 . -1) (undo-tree-id8988 . -1) (undo-tree-id8989 . -1) (undo-tree-id8990 . -1) (undo-tree-id8991 . -1) (undo-tree-id8992 . -1) (undo-tree-id8993 . -1) (undo-tree-id8994 . -1) (undo-tree-id8995 . -1) (undo-tree-id8996 . -1) (undo-tree-id8997 . -1) (undo-tree-id8998 . -1) (undo-tree-id8999 . -1) (undo-tree-id9000 . -1) (undo-tree-id9001 . -1) (undo-tree-id9002 . -1) (undo-tree-id9003 . -1) (undo-tree-id9004 . -1) (undo-tree-id9005 . -1) (undo-tree-id9006 . -1) (undo-tree-id9007 . -1) (undo-tree-id9008 . -1) (undo-tree-id9009 . -1) (undo-tree-id9010 . -1) (undo-tree-id9011 . -1) (undo-tree-id9012 . -1) (undo-tree-id9013 . -1) (undo-tree-id9014 . -1) (undo-tree-id9015 . -1) (undo-tree-id9016 . -1) (undo-tree-id9017 . -1) (undo-tree-id9018 . -1) (undo-tree-id9019 . -1) (undo-tree-id9020 . -1) (undo-tree-id9021 . -1) (undo-tree-id9022 . -1) (undo-tree-id9023 . -1) (undo-tree-id9024 . -1) (undo-tree-id9025 . -1) (undo-tree-id9026 . -1) (undo-tree-id9027 . -1) (undo-tree-id9028 . -1) (undo-tree-id9029 . -1) (undo-tree-id9030 . -1) (undo-tree-id9031 . -1) (undo-tree-id9032 . -1) (undo-tree-id9033 . -1) (undo-tree-id9034 . -1) (undo-tree-id9035 . -1) (undo-tree-id9036 . -1) (undo-tree-id9037 . -1) (undo-tree-id9038 . -1) (undo-tree-id9039 . -1) (undo-tree-id9040 . -1) (undo-tree-id9041 . -1) (undo-tree-id9042 . -1) (undo-tree-id9043 . -1) (undo-tree-id9044 . -1) (undo-tree-id9045 . -1) (undo-tree-id9046 . -1) (undo-tree-id9047 . -1) (undo-tree-id9048 . -1) (undo-tree-id9049 . -1) (undo-tree-id9050 . -1) (undo-tree-id9051 . -1) (undo-tree-id9052 . -1) (undo-tree-id9053 . -1) (undo-tree-id9054 . -1) (undo-tree-id9055 . -1) (undo-tree-id9056 . -1) (#("n" 0 1 (fontified t)) . -69120) (undo-tree-id9057 . -1) (undo-tree-id9058 . -1) (undo-tree-id9059 . -1) (undo-tree-id9060 . -1) (undo-tree-id9061 . -1) (undo-tree-id9062 . -1) (undo-tree-id9063 . -1) (undo-tree-id9064 . -1) (undo-tree-id9065 . -1) (undo-tree-id9066 . -1) (undo-tree-id9067 . -1) (undo-tree-id9068 . -1) (undo-tree-id9069 . -1) (undo-tree-id9070 . -1) (undo-tree-id9071 . -1) (undo-tree-id9072 . -1) (undo-tree-id9073 . -1) (undo-tree-id9074 . -1) (undo-tree-id9075 . -1) (undo-tree-id9076 . -1) (undo-tree-id9077 . -1) (undo-tree-id9078 . -1) (undo-tree-id9079 . -1) (undo-tree-id9080 . -1) (undo-tree-id9081 . -1) (undo-tree-id9082 . -1) (undo-tree-id9083 . -1) (undo-tree-id9084 . -1) (undo-tree-id9085 . -1) (undo-tree-id9086 . -1) (undo-tree-id9087 . -1) (undo-tree-id9088 . -1) (undo-tree-id9089 . -1) (undo-tree-id9090 . -1) (undo-tree-id9091 . -1) (undo-tree-id9092 . -1) (undo-tree-id9093 . -1) (undo-tree-id9094 . -1) (undo-tree-id9095 . -1) (undo-tree-id9096 . -1) (undo-tree-id9097 . -1) (undo-tree-id9098 . -1) (undo-tree-id9099 . -1) (undo-tree-id9100 . -1) (undo-tree-id9101 . -1) (undo-tree-id9102 . -1) (undo-tree-id9103 . -1) (undo-tree-id9104 . -1) (undo-tree-id9105 . -1) (undo-tree-id9106 . -1) (undo-tree-id9107 . -1) (undo-tree-id9108 . -1) (undo-tree-id9109 . -1) (undo-tree-id9110 . -1) (undo-tree-id9111 . -1) (undo-tree-id9112 . -1) (undo-tree-id9113 . -1) (undo-tree-id9114 . -1) (undo-tree-id9115 . -1) (undo-tree-id9116 . -1) (undo-tree-id9117 . -1) (undo-tree-id9118 . -1) (undo-tree-id9119 . -1) (undo-tree-id9120 . -1) (undo-tree-id9121 . -1) (undo-tree-id9122 . -1) (undo-tree-id9123 . -1) (undo-tree-id9124 . -1) (undo-tree-id9125 . -1) (undo-tree-id9126 . -1) (undo-tree-id9127 . -1) (undo-tree-id9128 . -1) (undo-tree-id9129 . -1) (undo-tree-id9130 . -1) (undo-tree-id9131 . -1) (undo-tree-id9132 . -1) (undo-tree-id9133 . -1) (undo-tree-id9134 . -1) (undo-tree-id9135 . -1) (undo-tree-id9136 . -1) (undo-tree-id9137 . -1) (undo-tree-id9138 . -1) (undo-tree-id9139 . -1) (undo-tree-id9140 . -1) (undo-tree-id9141 . -1) (undo-tree-id9142 . -1) (undo-tree-id9143 . -1) (undo-tree-id9144 . -1) (undo-tree-id9145 . -1) (undo-tree-id9146 . -1) (undo-tree-id9147 . -1) (undo-tree-id9148 . -1) (undo-tree-id9149 . -1) (undo-tree-id9150 . -1) (undo-tree-id9151 . -1) (undo-tree-id9152 . -1) (undo-tree-id9153 . -1) (undo-tree-id9154 . -1) (undo-tree-id9155 . -1) (undo-tree-id9156 . -1) (undo-tree-id9157 . -1) (undo-tree-id9158 . -1) (undo-tree-id9159 . -1) (undo-tree-id9160 . -1) (undo-tree-id9161 . -1) (undo-tree-id9162 . -1) (undo-tree-id9163 . -1) (undo-tree-id9164 . -1) (undo-tree-id9165 . -1) (undo-tree-id9166 . -1) (undo-tree-id9167 . -1) (undo-tree-id9168 . -1) (undo-tree-id9169 . -1) (undo-tree-id9170 . -1) (undo-tree-id9171 . -1) (undo-tree-id9172 . -1) (undo-tree-id9173 . -1) (undo-tree-id9174 . -1) (undo-tree-id9175 . -1) (undo-tree-id9176 . -1) (undo-tree-id9177 . -1) (undo-tree-id9178 . -1) (undo-tree-id9179 . -1) (undo-tree-id9180 . -1) (undo-tree-id9181 . -1) (undo-tree-id9182 . -1) (undo-tree-id9183 . -1) (undo-tree-id9184 . -1) (undo-tree-id9185 . -1) (undo-tree-id9186 . -1) (undo-tree-id9187 . -1) (undo-tree-id9188 . -1) (undo-tree-id9189 . -1) (undo-tree-id9190 . -1) (undo-tree-id9191 . -1) (undo-tree-id9192 . -1) (undo-tree-id9193 . -1) (undo-tree-id9194 . -1) (undo-tree-id9195 . -1) (undo-tree-id9196 . -1) (undo-tree-id9197 . -1) (undo-tree-id9198 . -1) (undo-tree-id9199 . -1) (undo-tree-id9200 . -1) (undo-tree-id9201 . -1) (undo-tree-id9202 . -1) (undo-tree-id9203 . -1) (undo-tree-id9204 . -1) (undo-tree-id9205 . -1) (undo-tree-id9206 . -1) (undo-tree-id9207 . -1) (undo-tree-id9208 . -1) (undo-tree-id9209 . -1) (undo-tree-id9210 . -1) (undo-tree-id9211 . -1) (undo-tree-id9212 . -1) (undo-tree-id9213 . -1) (undo-tree-id9214 . -1) (undo-tree-id9215 . -1) (undo-tree-id9216 . -1) (undo-tree-id9217 . -1) (undo-tree-id9218 . -1) (undo-tree-id9219 . -1) (undo-tree-id9220 . -1) (undo-tree-id9221 . -1) (undo-tree-id9222 . -1) (undo-tree-id9223 . -1) (undo-tree-id9224 . -1) (undo-tree-id9225 . -1) (undo-tree-id9226 . -1) (undo-tree-id9227 . -1) (undo-tree-id9228 . -1) (undo-tree-id9229 . -1) (undo-tree-id9230 . -1) (undo-tree-id9231 . -1) (undo-tree-id9232 . -1) (undo-tree-id9233 . -1) (undo-tree-id9234 . -1) (undo-tree-id9235 . -1) (undo-tree-id9236 . -1) (undo-tree-id9237 . -1) (undo-tree-id9238 . -1) (undo-tree-id9239 . -1) (undo-tree-id9240 . -1) (undo-tree-id9241 . -1) (undo-tree-id9242 . -1) (undo-tree-id9243 . -1) (undo-tree-id9244 . -1) (undo-tree-id9245 . -1) (undo-tree-id9246 . -1) (undo-tree-id9247 . -1) (undo-tree-id9248 . -1) (undo-tree-id9249 . -1) (undo-tree-id9250 . -1) (undo-tree-id9251 . -1) (undo-tree-id9252 . -1) (undo-tree-id9253 . -1) (undo-tree-id9254 . -1) (undo-tree-id9255 . -1) (undo-tree-id9256 . -1) (undo-tree-id9257 . -1) (undo-tree-id9258 . -1) (undo-tree-id9259 . -1) (undo-tree-id9260 . -1) (undo-tree-id9261 . -1) (undo-tree-id9262 . -1) (undo-tree-id9263 . -1) (undo-tree-id9264 . -1) (undo-tree-id9265 . -1) (undo-tree-id9266 . -1) (undo-tree-id9267 . -1) (undo-tree-id9268 . -1) (undo-tree-id9269 . -1) (undo-tree-id9270 . -1) (undo-tree-id9271 . -1) (undo-tree-id9272 . -1) (undo-tree-id9273 . -1) (undo-tree-id9274 . -1) (undo-tree-id9275 . -1) (undo-tree-id9276 . -1) (undo-tree-id9277 . -1) (undo-tree-id9278 . -1) (undo-tree-id9279 . -1) (undo-tree-id9280 . -1) (undo-tree-id9281 . -1) (undo-tree-id9282 . -1) (undo-tree-id9283 . -1) (undo-tree-id9284 . -1) (undo-tree-id9285 . -1) (undo-tree-id9286 . -1) (undo-tree-id9287 . -1) (undo-tree-id9288 . -1) (undo-tree-id9289 . -1) (undo-tree-id9290 . -1) (undo-tree-id9291 . -1) (undo-tree-id9292 . -1) (undo-tree-id9293 . -1) (undo-tree-id9294 . -1) (undo-tree-id9295 . -1) (undo-tree-id9296 . -1) (undo-tree-id9297 . -1) (undo-tree-id9298 . -1) (undo-tree-id9299 . -1) (undo-tree-id9300 . -1) (undo-tree-id9301 . -1) (undo-tree-id9302 . -1) (undo-tree-id9303 . -1) (undo-tree-id9304 . -1) (undo-tree-id9305 . -1) (undo-tree-id9306 . -1) (undo-tree-id9307 . -1) (undo-tree-id9308 . -1) (undo-tree-id9309 . -1) (undo-tree-id9310 . -1) (undo-tree-id9311 . -1) (undo-tree-id9312 . -1) (undo-tree-id9313 . -1) (undo-tree-id9314 . -1) (undo-tree-id9315 . -1) (undo-tree-id9316 . -1) (undo-tree-id9317 . -1) (undo-tree-id9318 . -1) (undo-tree-id9319 . -1) (undo-tree-id9320 . -1) (undo-tree-id9321 . -1) (undo-tree-id9322 . -1) (undo-tree-id9323 . -1) (undo-tree-id9324 . -1) (undo-tree-id9325 . -1) (undo-tree-id9326 . -1) (undo-tree-id9327 . -1) (undo-tree-id9328 . -1) (undo-tree-id9329 . -1) (undo-tree-id9330 . -1) (undo-tree-id9331 . -1) (undo-tree-id9332 . -1) (undo-tree-id9333 . -1) (undo-tree-id9334 . -1) (undo-tree-id9335 . -1) (undo-tree-id9336 . -1) (undo-tree-id9337 . -1) (undo-tree-id9338 . -1) (undo-tree-id9339 . -1) (undo-tree-id9340 . -1) (undo-tree-id9341 . -1) (undo-tree-id9342 . -1) (undo-tree-id9343 . -1) (undo-tree-id9344 . -1) (undo-tree-id9345 . -1) (undo-tree-id9346 . -1) (undo-tree-id9347 . -1) (undo-tree-id9348 . -1) (undo-tree-id9349 . -1) (undo-tree-id9350 . -1) (undo-tree-id9351 . -1) (undo-tree-id9352 . -1) (undo-tree-id9353 . -1) (undo-tree-id9354 . -1) (undo-tree-id9355 . -1) (undo-tree-id9356 . -1) (undo-tree-id9357 . -1) (undo-tree-id9358 . -1) (#(" " 0 1 (fontified t)) . -69121) (undo-tree-id9359 . -1) (undo-tree-id9360 . -1) (undo-tree-id9361 . -1) (undo-tree-id9362 . -1) (undo-tree-id9363 . -1) (undo-tree-id9364 . -1) (undo-tree-id9365 . -1) (undo-tree-id9366 . -1) (undo-tree-id9367 . -1) (undo-tree-id9368 . -1) (undo-tree-id9369 . -1) (undo-tree-id9370 . -1) (undo-tree-id9371 . -1) (undo-tree-id9372 . -1) (undo-tree-id9373 . -1) (undo-tree-id9374 . -1) (undo-tree-id9375 . -1) (undo-tree-id9376 . -1) (undo-tree-id9377 . -1) (undo-tree-id9378 . -1) (undo-tree-id9379 . -1) (undo-tree-id9380 . -1) (undo-tree-id9381 . -1) (undo-tree-id9382 . -1) (undo-tree-id9383 . -1) (undo-tree-id9384 . -1) (undo-tree-id9385 . -1) (undo-tree-id9386 . -1) (undo-tree-id9387 . -1) (undo-tree-id9388 . -1) (undo-tree-id9389 . -1) (undo-tree-id9390 . -1) (undo-tree-id9391 . -1) (undo-tree-id9392 . -1) (undo-tree-id9393 . -1) (undo-tree-id9394 . -1) (undo-tree-id9395 . -1) (undo-tree-id9396 . -1) (undo-tree-id9397 . -1) (undo-tree-id9398 . -1) (undo-tree-id9399 . -1) (undo-tree-id9400 . -1) (undo-tree-id9401 . -1) (undo-tree-id9402 . -1) (undo-tree-id9403 . -1) (undo-tree-id9404 . -1) (undo-tree-id9405 . -1) (undo-tree-id9406 . -1) (undo-tree-id9407 . -1) (undo-tree-id9408 . -1) (undo-tree-id9409 . -1) (undo-tree-id9410 . -1) (undo-tree-id9411 . -1) (undo-tree-id9412 . -1) (undo-tree-id9413 . -1) (undo-tree-id9414 . -1) (undo-tree-id9415 . -1) (undo-tree-id9416 . -1) (undo-tree-id9417 . -1) (undo-tree-id9418 . -1) (undo-tree-id9419 . -1) (undo-tree-id9420 . -1) (undo-tree-id9421 . -1) (undo-tree-id9422 . -1) (undo-tree-id9423 . -1) (undo-tree-id9424 . -1) (undo-tree-id9425 . -1) (undo-tree-id9426 . -1) (undo-tree-id9427 . -1) (undo-tree-id9428 . -1) (undo-tree-id9429 . -1) (undo-tree-id9430 . -1) (undo-tree-id9431 . -1) (undo-tree-id9432 . -1) (undo-tree-id9433 . -1) (undo-tree-id9434 . -1) (undo-tree-id9435 . -1) (undo-tree-id9436 . -1) (undo-tree-id9437 . -1) (undo-tree-id9438 . -1) (undo-tree-id9439 . -1) (undo-tree-id9440 . -1) (undo-tree-id9441 . -1) (undo-tree-id9442 . -1) (undo-tree-id9443 . -1) (undo-tree-id9444 . -1) (undo-tree-id9445 . -1) (undo-tree-id9446 . -1) (undo-tree-id9447 . -1) (undo-tree-id9448 . -1) (undo-tree-id9449 . -1) (undo-tree-id9450 . -1) (undo-tree-id9451 . -1) (undo-tree-id9452 . -1) (undo-tree-id9453 . -1) (undo-tree-id9454 . -1) (undo-tree-id9455 . -1) (undo-tree-id9456 . -1) (undo-tree-id9457 . -1) (undo-tree-id9458 . -1) (undo-tree-id9459 . -1) (undo-tree-id9460 . -1) (undo-tree-id9461 . -1) (undo-tree-id9462 . -1) (undo-tree-id9463 . -1) (undo-tree-id9464 . -1) (undo-tree-id9465 . -1) (undo-tree-id9466 . -1) (undo-tree-id9467 . -1) (undo-tree-id9468 . -1) (undo-tree-id9469 . -1) (undo-tree-id9470 . -1) (undo-tree-id9471 . -1) (undo-tree-id9472 . -1) (undo-tree-id9473 . -1) (undo-tree-id9474 . -1) (undo-tree-id9475 . -1) (undo-tree-id9476 . -1) (undo-tree-id9477 . -1) (undo-tree-id9478 . -1) (undo-tree-id9479 . -1) (undo-tree-id9480 . -1) (undo-tree-id9481 . -1) (undo-tree-id9482 . -1) (undo-tree-id9483 . -1) (undo-tree-id9484 . -1) (undo-tree-id9485 . -1) (undo-tree-id9486 . -1) (undo-tree-id9487 . -1) (undo-tree-id9488 . -1) (undo-tree-id9489 . -1) (undo-tree-id9490 . -1) (undo-tree-id9491 . -1) (undo-tree-id9492 . -1) (undo-tree-id9493 . -1) (undo-tree-id9494 . -1) (undo-tree-id9495 . -1) (undo-tree-id9496 . -1) (undo-tree-id9497 . -1) (undo-tree-id9498 . -1) (undo-tree-id9499 . -1) (undo-tree-id9500 . -1) (undo-tree-id9501 . -1) (undo-tree-id9502 . -1) (undo-tree-id9503 . -1) (undo-tree-id9504 . -1) (undo-tree-id9505 . -1) (undo-tree-id9506 . -1) (undo-tree-id9507 . -1) (undo-tree-id9508 . -1) (undo-tree-id9509 . -1) (undo-tree-id9510 . -1) (undo-tree-id9511 . -1) (undo-tree-id9512 . -1) (undo-tree-id9513 . -1) (undo-tree-id9514 . -1) (undo-tree-id9515 . -1) (undo-tree-id9516 . -1) (undo-tree-id9517 . -1) (undo-tree-id9518 . -1) (undo-tree-id9519 . -1) (undo-tree-id9520 . -1) (undo-tree-id9521 . -1) (undo-tree-id9522 . -1) (undo-tree-id9523 . -1) (undo-tree-id9524 . -1) (undo-tree-id9525 . -1) (undo-tree-id9526 . -1) (undo-tree-id9527 . -1) (undo-tree-id9528 . -1) (undo-tree-id9529 . -1) (undo-tree-id9530 . -1) (undo-tree-id9531 . -1) (undo-tree-id9532 . -1) (undo-tree-id9533 . -1) (undo-tree-id9534 . -1) (undo-tree-id9535 . -1) (undo-tree-id9536 . -1) (undo-tree-id9537 . -1) (undo-tree-id9538 . -1) (undo-tree-id9539 . -1) (undo-tree-id9540 . -1) (undo-tree-id9541 . -1) (undo-tree-id9542 . -1) (undo-tree-id9543 . -1) (undo-tree-id9544 . -1) (undo-tree-id9545 . -1) (undo-tree-id9546 . -1) (undo-tree-id9547 . -1) (undo-tree-id9548 . -1) (undo-tree-id9549 . -1) (undo-tree-id9550 . -1) (undo-tree-id9551 . -1) (undo-tree-id9552 . -1) (undo-tree-id9553 . -1) (undo-tree-id9554 . -1) (undo-tree-id9555 . -1) (undo-tree-id9556 . -1) (undo-tree-id9557 . -1) (undo-tree-id9558 . -1) (undo-tree-id9559 . -1) (undo-tree-id9560 . -1) (undo-tree-id9561 . -1) (undo-tree-id9562 . -1) (undo-tree-id9563 . -1) (undo-tree-id9564 . -1) (undo-tree-id9565 . -1) (undo-tree-id9566 . -1) (undo-tree-id9567 . -1) (undo-tree-id9568 . -1) (undo-tree-id9569 . -1) (undo-tree-id9570 . -1) (undo-tree-id9571 . -1) (undo-tree-id9572 . -1) (undo-tree-id9573 . -1) (undo-tree-id9574 . -1) (undo-tree-id9575 . -1) (undo-tree-id9576 . -1) (undo-tree-id9577 . -1) (undo-tree-id9578 . -1) (undo-tree-id9579 . -1) (undo-tree-id9580 . -1) (undo-tree-id9581 . -1) (undo-tree-id9582 . -1) (undo-tree-id9583 . -1) (undo-tree-id9584 . -1) (undo-tree-id9585 . -1) (undo-tree-id9586 . -1) (undo-tree-id9587 . -1) (undo-tree-id9588 . -1) (undo-tree-id9589 . -1) (undo-tree-id9590 . -1) (undo-tree-id9591 . -1) (undo-tree-id9592 . -1) (undo-tree-id9593 . -1) (undo-tree-id9594 . -1) (undo-tree-id9595 . -1) (undo-tree-id9596 . -1) (undo-tree-id9597 . -1) (undo-tree-id9598 . -1) (undo-tree-id9599 . -1) (undo-tree-id9600 . -1) (undo-tree-id9601 . -1) (undo-tree-id9602 . -1) (undo-tree-id9603 . -1) (undo-tree-id9604 . -1) (undo-tree-id9605 . -1) (undo-tree-id9606 . -1) (undo-tree-id9607 . -1) (undo-tree-id9608 . -1) (undo-tree-id9609 . -1) (undo-tree-id9610 . -1) (undo-tree-id9611 . -1) (undo-tree-id9612 . -1) (undo-tree-id9613 . -1) (undo-tree-id9614 . -1) (undo-tree-id9615 . -1) (undo-tree-id9616 . -1) (undo-tree-id9617 . -1) (undo-tree-id9618 . -1) (undo-tree-id9619 . -1) (undo-tree-id9620 . -1) (undo-tree-id9621 . -1) (undo-tree-id9622 . -1) (undo-tree-id9623 . -1) (undo-tree-id9624 . -1) (undo-tree-id9625 . -1) (undo-tree-id9626 . -1) (undo-tree-id9627 . -1) (undo-tree-id9628 . -1) (undo-tree-id9629 . -1) (undo-tree-id9630 . -1) (undo-tree-id9631 . -1) (undo-tree-id9632 . -1) (undo-tree-id9633 . -1) (undo-tree-id9634 . -1) (undo-tree-id9635 . -1) (undo-tree-id9636 . -1) (undo-tree-id9637 . -1) (undo-tree-id9638 . -1) (undo-tree-id9639 . -1) (undo-tree-id9640 . -1) (undo-tree-id9641 . -1) (undo-tree-id9642 . -1) (undo-tree-id9643 . -1) (undo-tree-id9644 . -1) (#("a" 0 1 (fontified t)) . -69122) (undo-tree-id9645 . -1) (undo-tree-id9646 . -1) (undo-tree-id9647 . -1) (undo-tree-id9648 . -1) (undo-tree-id9649 . -1) (undo-tree-id9650 . -1) (undo-tree-id9651 . -1) (undo-tree-id9652 . -1) (undo-tree-id9653 . -1) (undo-tree-id9654 . -1) (undo-tree-id9655 . -1) (undo-tree-id9656 . -1) (undo-tree-id9657 . -1) (undo-tree-id9658 . -1) (undo-tree-id9659 . -1) (undo-tree-id9660 . -1) (undo-tree-id9661 . -1) (undo-tree-id9662 . -1) (undo-tree-id9663 . -1) (undo-tree-id9664 . -1) (undo-tree-id9665 . -1) (undo-tree-id9666 . -1) (undo-tree-id9667 . -1) (undo-tree-id9668 . -1) (undo-tree-id9669 . -1) (undo-tree-id9670 . -1) (undo-tree-id9671 . -1) (undo-tree-id9672 . -1) (undo-tree-id9673 . -1) (undo-tree-id9674 . -1) (undo-tree-id9675 . -1) (undo-tree-id9676 . -1) (undo-tree-id9677 . -1) (undo-tree-id9678 . -1) (undo-tree-id9679 . -1) (undo-tree-id9680 . -1) (undo-tree-id9681 . -1) (undo-tree-id9682 . -1) (undo-tree-id9683 . -1) (undo-tree-id9684 . -1) (undo-tree-id9685 . -1) (undo-tree-id9686 . -1) (undo-tree-id9687 . -1) (undo-tree-id9688 . -1) (undo-tree-id9689 . -1) (undo-tree-id9690 . -1) (undo-tree-id9691 . -1) (undo-tree-id9692 . -1) (undo-tree-id9693 . -1) (undo-tree-id9694 . -1) (undo-tree-id9695 . -1) (undo-tree-id9696 . -1) (undo-tree-id9697 . -1) (undo-tree-id9698 . -1) (undo-tree-id9699 . -1) (undo-tree-id9700 . -1) (undo-tree-id9701 . -1) (undo-tree-id9702 . -1) (undo-tree-id9703 . -1) (undo-tree-id9704 . -1) (undo-tree-id9705 . -1) (undo-tree-id9706 . -1) (undo-tree-id9707 . -1) (undo-tree-id9708 . -1) (undo-tree-id9709 . -1) (undo-tree-id9710 . -1) (undo-tree-id9711 . -1) (undo-tree-id9712 . -1) (undo-tree-id9713 . -1) (undo-tree-id9714 . -1) (undo-tree-id9715 . -1) (undo-tree-id9716 . -1) (undo-tree-id9717 . -1) (undo-tree-id9718 . -1) (undo-tree-id9719 . -1) (undo-tree-id9720 . -1) (undo-tree-id9721 . -1) (undo-tree-id9722 . -1) (undo-tree-id9723 . -1) (undo-tree-id9724 . -1) (undo-tree-id9725 . -1) (undo-tree-id9726 . -1) (undo-tree-id9727 . -1) (undo-tree-id9728 . -1) (undo-tree-id9729 . -1) (undo-tree-id9730 . -1) (undo-tree-id9731 . -1) (undo-tree-id9732 . -1) (undo-tree-id9733 . -1) (undo-tree-id9734 . -1) (undo-tree-id9735 . -1) (undo-tree-id9736 . -1) (undo-tree-id9737 . -1) (undo-tree-id9738 . -1) (undo-tree-id9739 . -1) (undo-tree-id9740 . -1) (undo-tree-id9741 . -1) (undo-tree-id9742 . -1) (undo-tree-id9743 . -1) (undo-tree-id9744 . -1) (undo-tree-id9745 . -1) (undo-tree-id9746 . -1) (undo-tree-id9747 . -1) (undo-tree-id9748 . -1) (undo-tree-id9749 . -1) (undo-tree-id9750 . -1) (undo-tree-id9751 . -1) (undo-tree-id9752 . -1) (undo-tree-id9753 . -1) (undo-tree-id9754 . -1) (undo-tree-id9755 . -1) (undo-tree-id9756 . -1) (undo-tree-id9757 . -1) (undo-tree-id9758 . -1) (undo-tree-id9759 . -1) (undo-tree-id9760 . -1) (undo-tree-id9761 . -1) (undo-tree-id9762 . -1) (undo-tree-id9763 . -1) (undo-tree-id9764 . -1) (undo-tree-id9765 . -1) (undo-tree-id9766 . -1) (undo-tree-id9767 . -1) (undo-tree-id9768 . -1) (undo-tree-id9769 . -1) (undo-tree-id9770 . -1) (undo-tree-id9771 . -1) (undo-tree-id9772 . -1) (undo-tree-id9773 . -1) (undo-tree-id9774 . -1) (undo-tree-id9775 . -1) (undo-tree-id9776 . -1) (undo-tree-id9777 . -1) (undo-tree-id9778 . -1) (undo-tree-id9779 . -1) (undo-tree-id9780 . -1) (undo-tree-id9781 . -1) (undo-tree-id9782 . -1) (undo-tree-id9783 . -1) (undo-tree-id9784 . -1) (undo-tree-id9785 . -1) (undo-tree-id9786 . -1) (undo-tree-id9787 . -1) (undo-tree-id9788 . -1) (undo-tree-id9789 . -1) (undo-tree-id9790 . -1) (undo-tree-id9791 . -1) (undo-tree-id9792 . -1) (undo-tree-id9793 . -1) (undo-tree-id9794 . -1) (undo-tree-id9795 . -1) (undo-tree-id9796 . -1) (undo-tree-id9797 . -1) (undo-tree-id9798 . -1) (undo-tree-id9799 . -1) (undo-tree-id9800 . -1) (undo-tree-id9801 . -1) (undo-tree-id9802 . -1) (undo-tree-id9803 . -1) (undo-tree-id9804 . -1) (undo-tree-id9805 . -1) (undo-tree-id9806 . -1) (undo-tree-id9807 . -1) (undo-tree-id9808 . -1) (undo-tree-id9809 . -1) (undo-tree-id9810 . -1) (undo-tree-id9811 . -1) (undo-tree-id9812 . -1) (undo-tree-id9813 . -1) (undo-tree-id9814 . -1) (undo-tree-id9815 . -1) (undo-tree-id9816 . -1) (undo-tree-id9817 . -1) (undo-tree-id9818 . -1) (undo-tree-id9819 . -1) (undo-tree-id9820 . -1) (undo-tree-id9821 . -1) (undo-tree-id9822 . -1) (undo-tree-id9823 . -1) (undo-tree-id9824 . -1) (undo-tree-id9825 . -1) (undo-tree-id9826 . -1) (undo-tree-id9827 . -1) (undo-tree-id9828 . -1) (undo-tree-id9829 . -1) (undo-tree-id9830 . -1) (undo-tree-id9831 . -1) (undo-tree-id9832 . -1) (undo-tree-id9833 . -1) (undo-tree-id9834 . -1) (undo-tree-id9835 . -1) (undo-tree-id9836 . -1) (undo-tree-id9837 . -1) (undo-tree-id9838 . -1) (undo-tree-id9839 . -1) (undo-tree-id9840 . -1) (undo-tree-id9841 . -1) (undo-tree-id9842 . -1) (undo-tree-id9843 . -1) (undo-tree-id9844 . -1) (undo-tree-id9845 . -1) (undo-tree-id9846 . -1) (undo-tree-id9847 . -1) (undo-tree-id9848 . -1) (undo-tree-id9849 . -1) (undo-tree-id9850 . -1) (undo-tree-id9851 . -1) (undo-tree-id9852 . -1) (undo-tree-id9853 . -1) (undo-tree-id9854 . -1) (undo-tree-id9855 . -1) (undo-tree-id9856 . -1) (undo-tree-id9857 . -1) (undo-tree-id9858 . -1) (undo-tree-id9859 . -1) (undo-tree-id9860 . -1) (undo-tree-id9861 . -1) (undo-tree-id9862 . -1) (undo-tree-id9863 . -1) (undo-tree-id9864 . -1) (undo-tree-id9865 . -1) (undo-tree-id9866 . -1) (undo-tree-id9867 . -1) (undo-tree-id9868 . -1) (undo-tree-id9869 . -1) (undo-tree-id9870 . -1) (undo-tree-id9871 . -1) (undo-tree-id9872 . -1) (undo-tree-id9873 . -1) (undo-tree-id9874 . -1) (undo-tree-id9875 . -1) (undo-tree-id9876 . -1) (undo-tree-id9877 . -1) (undo-tree-id9878 . -1) (undo-tree-id9879 . -1) (undo-tree-id9880 . -1) (undo-tree-id9881 . -1) (undo-tree-id9882 . -1) (undo-tree-id9883 . -1) (undo-tree-id9884 . -1) (undo-tree-id9885 . -1) (undo-tree-id9886 . -1) (undo-tree-id9887 . -1) (undo-tree-id9888 . -1) (undo-tree-id9889 . -1) (undo-tree-id9890 . -1) (undo-tree-id9891 . -1) (undo-tree-id9892 . -1) (undo-tree-id9893 . -1) (undo-tree-id9894 . -1) (undo-tree-id9895 . -1) (undo-tree-id9896 . -1) (undo-tree-id9897 . -1) (undo-tree-id9898 . -1) (undo-tree-id9899 . -1) (undo-tree-id9900 . -1) (undo-tree-id9901 . -1) (undo-tree-id9902 . -1) (undo-tree-id9903 . -1) (undo-tree-id9904 . -1) (undo-tree-id9905 . -1) (undo-tree-id9906 . -1) (undo-tree-id9907 . -1) (undo-tree-id9908 . -1) (undo-tree-id9909 . -1) (undo-tree-id9910 . -1) (undo-tree-id9911 . -1) (undo-tree-id9912 . -1) (undo-tree-id9913 . -1) (undo-tree-id9914 . -1) (#("n" 0 1 (fontified t)) . -69123) (undo-tree-id9915 . -1) (undo-tree-id9916 . -1) (undo-tree-id9917 . -1) (undo-tree-id9918 . -1) (undo-tree-id9919 . -1) (undo-tree-id9920 . -1) (undo-tree-id9921 . -1) (undo-tree-id9922 . -1) (undo-tree-id9923 . -1) (undo-tree-id9924 . -1) (undo-tree-id9925 . -1) (undo-tree-id9926 . -1) (undo-tree-id9927 . -1) (undo-tree-id9928 . -1) (undo-tree-id9929 . -1) (undo-tree-id9930 . -1) (undo-tree-id9931 . -1) (undo-tree-id9932 . -1) (undo-tree-id9933 . -1) (undo-tree-id9934 . -1) (undo-tree-id9935 . -1) (undo-tree-id9936 . -1) (undo-tree-id9937 . -1) (undo-tree-id9938 . -1) (undo-tree-id9939 . -1) (undo-tree-id9940 . -1) (undo-tree-id9941 . -1) (undo-tree-id9942 . -1) (undo-tree-id9943 . -1) (undo-tree-id9944 . -1) (undo-tree-id9945 . -1) (undo-tree-id9946 . -1) (undo-tree-id9947 . -1) (undo-tree-id9948 . -1) (undo-tree-id9949 . -1) (undo-tree-id9950 . -1) (undo-tree-id9951 . -1) (undo-tree-id9952 . -1) (undo-tree-id9953 . -1) (undo-tree-id9954 . -1) (undo-tree-id9955 . -1) (undo-tree-id9956 . -1) (undo-tree-id9957 . -1) (undo-tree-id9958 . -1) (undo-tree-id9959 . -1) (undo-tree-id9960 . -1) (undo-tree-id9961 . -1) (undo-tree-id9962 . -1) (undo-tree-id9963 . -1) (undo-tree-id9964 . -1) (undo-tree-id9965 . -1) (undo-tree-id9966 . -1) (undo-tree-id9967 . -1) (undo-tree-id9968 . -1) (undo-tree-id9969 . -1) (undo-tree-id9970 . -1) (undo-tree-id9971 . -1) (undo-tree-id9972 . -1) (undo-tree-id9973 . -1) (undo-tree-id9974 . -1) (undo-tree-id9975 . -1) (undo-tree-id9976 . -1) (undo-tree-id9977 . -1) (undo-tree-id9978 . -1) (undo-tree-id9979 . -1) (undo-tree-id9980 . -1) (undo-tree-id9981 . -1) (undo-tree-id9982 . -1) (undo-tree-id9983 . -1) (undo-tree-id9984 . -1) (undo-tree-id9985 . -1) (undo-tree-id9986 . -1) (undo-tree-id9987 . -1) (undo-tree-id9988 . -1) (undo-tree-id9989 . -1) (undo-tree-id9990 . -1) (undo-tree-id9991 . -1) (undo-tree-id9992 . -1) (undo-tree-id9993 . -1) (undo-tree-id9994 . -1) (undo-tree-id9995 . -1) (undo-tree-id9996 . -1) (undo-tree-id9997 . -1) (undo-tree-id9998 . -1) (undo-tree-id9999 . -1) (undo-tree-id10000 . -1) (undo-tree-id10001 . -1) (undo-tree-id10002 . -1) (undo-tree-id10003 . -1) (undo-tree-id10004 . -1) (undo-tree-id10005 . -1) (undo-tree-id10006 . -1) (undo-tree-id10007 . -1) (undo-tree-id10008 . -1) (undo-tree-id10009 . -1) (undo-tree-id10010 . -1) (undo-tree-id10011 . -1) (undo-tree-id10012 . -1) (undo-tree-id10013 . -1) (undo-tree-id10014 . -1) (undo-tree-id10015 . -1) (undo-tree-id10016 . -1) (undo-tree-id10017 . -1) (undo-tree-id10018 . -1) (undo-tree-id10019 . -1) (undo-tree-id10020 . -1) (undo-tree-id10021 . -1) (undo-tree-id10022 . -1) (undo-tree-id10023 . -1) (undo-tree-id10024 . -1) (undo-tree-id10025 . -1) (undo-tree-id10026 . -1) (undo-tree-id10027 . -1) (undo-tree-id10028 . -1) (undo-tree-id10029 . -1) (undo-tree-id10030 . -1) (undo-tree-id10031 . -1) (undo-tree-id10032 . -1) (undo-tree-id10033 . -1) (undo-tree-id10034 . -1) (undo-tree-id10035 . -1) (undo-tree-id10036 . -1) (undo-tree-id10037 . -1) (undo-tree-id10038 . -1) (undo-tree-id10039 . -1) (undo-tree-id10040 . -1) (undo-tree-id10041 . -1) (undo-tree-id10042 . -1) (undo-tree-id10043 . -1) (undo-tree-id10044 . -1) (undo-tree-id10045 . -1) (undo-tree-id10046 . -1) (undo-tree-id10047 . -1) (undo-tree-id10048 . -1) (undo-tree-id10049 . -1) (undo-tree-id10050 . -1) (undo-tree-id10051 . -1) (undo-tree-id10052 . -1) (undo-tree-id10053 . -1) (undo-tree-id10054 . -1) (undo-tree-id10055 . -1) (undo-tree-id10056 . -1) (undo-tree-id10057 . -1) (undo-tree-id10058 . -1) (undo-tree-id10059 . -1) (undo-tree-id10060 . -1) (undo-tree-id10061 . -1) (undo-tree-id10062 . -1) (undo-tree-id10063 . -1) (undo-tree-id10064 . -1) (undo-tree-id10065 . -1) (undo-tree-id10066 . -1) (undo-tree-id10067 . -1) (undo-tree-id10068 . -1) (undo-tree-id10069 . -1) (undo-tree-id10070 . -1) (undo-tree-id10071 . -1) (undo-tree-id10072 . -1) (undo-tree-id10073 . -1) (undo-tree-id10074 . -1) (undo-tree-id10075 . -1) (undo-tree-id10076 . -1) (undo-tree-id10077 . -1) (undo-tree-id10078 . -1) (undo-tree-id10079 . -1) (undo-tree-id10080 . -1) (undo-tree-id10081 . -1) (undo-tree-id10082 . -1) (undo-tree-id10083 . -1) (undo-tree-id10084 . -1) (undo-tree-id10085 . -1) (undo-tree-id10086 . -1) (undo-tree-id10087 . -1) (undo-tree-id10088 . -1) (undo-tree-id10089 . -1) (undo-tree-id10090 . -1) (undo-tree-id10091 . -1) (undo-tree-id10092 . -1) (undo-tree-id10093 . -1) (undo-tree-id10094 . -1) (undo-tree-id10095 . -1) (undo-tree-id10096 . -1) (undo-tree-id10097 . -1) (undo-tree-id10098 . -1) (undo-tree-id10099 . -1) (undo-tree-id10100 . -1) (undo-tree-id10101 . -1) (undo-tree-id10102 . -1) (undo-tree-id10103 . -1) (undo-tree-id10104 . -1) (undo-tree-id10105 . -1) (undo-tree-id10106 . -1) (undo-tree-id10107 . -1) (undo-tree-id10108 . -1) (undo-tree-id10109 . -1) (undo-tree-id10110 . -1) (undo-tree-id10111 . -1) (undo-tree-id10112 . -1) (undo-tree-id10113 . -1) (undo-tree-id10114 . -1) (undo-tree-id10115 . -1) (undo-tree-id10116 . -1) (undo-tree-id10117 . -1) (undo-tree-id10118 . -1) (undo-tree-id10119 . -1) (undo-tree-id10120 . -1) (undo-tree-id10121 . -1) (undo-tree-id10122 . -1) (undo-tree-id10123 . -1) (undo-tree-id10124 . -1) (undo-tree-id10125 . -1) (undo-tree-id10126 . -1) (undo-tree-id10127 . -1) (undo-tree-id10128 . -1) (undo-tree-id10129 . -1) (undo-tree-id10130 . -1) (undo-tree-id10131 . -1) (undo-tree-id10132 . -1) (undo-tree-id10133 . -1) (undo-tree-id10134 . -1) (undo-tree-id10135 . -1) (undo-tree-id10136 . -1) (undo-tree-id10137 . -1) (undo-tree-id10138 . -1) (undo-tree-id10139 . -1) (undo-tree-id10140 . -1) (undo-tree-id10141 . -1) (undo-tree-id10142 . -1) (undo-tree-id10143 . -1) (undo-tree-id10144 . -1) (undo-tree-id10145 . -1) (undo-tree-id10146 . -1) (undo-tree-id10147 . -1) (undo-tree-id10148 . -1) (undo-tree-id10149 . -1) (undo-tree-id10150 . -1) (undo-tree-id10151 . -1) (undo-tree-id10152 . -1) (#(" " 0 1 (fontified t)) . -69124) (undo-tree-id10153 . -1) (undo-tree-id10154 . -1) (undo-tree-id10155 . -1) (undo-tree-id10156 . -1) (undo-tree-id10157 . -1) (undo-tree-id10158 . -1) (undo-tree-id10159 . -1) (undo-tree-id10160 . -1) (undo-tree-id10161 . -1) (undo-tree-id10162 . -1) (undo-tree-id10163 . -1) (undo-tree-id10164 . -1) (undo-tree-id10165 . -1) (undo-tree-id10166 . -1) (undo-tree-id10167 . -1) (undo-tree-id10168 . -1) (undo-tree-id10169 . -1) (undo-tree-id10170 . -1) (undo-tree-id10171 . -1) (undo-tree-id10172 . -1) (undo-tree-id10173 . -1) (undo-tree-id10174 . -1) (undo-tree-id10175 . -1) (undo-tree-id10176 . -1) (undo-tree-id10177 . -1) (undo-tree-id10178 . -1) (undo-tree-id10179 . -1) (undo-tree-id10180 . -1) (undo-tree-id10181 . -1) (undo-tree-id10182 . -1) (undo-tree-id10183 . -1) (undo-tree-id10184 . -1) (undo-tree-id10185 . -1) (undo-tree-id10186 . -1) (undo-tree-id10187 . -1) (undo-tree-id10188 . -1) (undo-tree-id10189 . -1) (undo-tree-id10190 . -1) (undo-tree-id10191 . -1) (undo-tree-id10192 . -1) (undo-tree-id10193 . -1) (undo-tree-id10194 . -1) (undo-tree-id10195 . -1) (undo-tree-id10196 . -1) (undo-tree-id10197 . -1) (undo-tree-id10198 . -1) (undo-tree-id10199 . -1) (undo-tree-id10200 . -1) (undo-tree-id10201 . -1) (undo-tree-id10202 . -1) (undo-tree-id10203 . -1) (undo-tree-id10204 . -1) (undo-tree-id10205 . -1) (undo-tree-id10206 . -1) (undo-tree-id10207 . -1) (undo-tree-id10208 . -1) (undo-tree-id10209 . -1) (undo-tree-id10210 . -1) (undo-tree-id10211 . -1) (undo-tree-id10212 . -1) (undo-tree-id10213 . -1) (undo-tree-id10214 . -1) (undo-tree-id10215 . -1) (undo-tree-id10216 . -1) (undo-tree-id10217 . -1) (undo-tree-id10218 . -1) (undo-tree-id10219 . -1) (undo-tree-id10220 . -1) (undo-tree-id10221 . -1) (undo-tree-id10222 . -1) (undo-tree-id10223 . -1) (undo-tree-id10224 . -1) (undo-tree-id10225 . -1) (undo-tree-id10226 . -1) (undo-tree-id10227 . -1) (undo-tree-id10228 . -1) (undo-tree-id10229 . -1) (undo-tree-id10230 . -1) (undo-tree-id10231 . -1) (undo-tree-id10232 . -1) (undo-tree-id10233 . -1) (undo-tree-id10234 . -1) (undo-tree-id10235 . -1) (undo-tree-id10236 . -1) (undo-tree-id10237 . -1) (undo-tree-id10238 . -1) (undo-tree-id10239 . -1) (undo-tree-id10240 . -1) (undo-tree-id10241 . -1) (undo-tree-id10242 . -1) (undo-tree-id10243 . -1) (undo-tree-id10244 . -1) (undo-tree-id10245 . -1) (undo-tree-id10246 . -1) (undo-tree-id10247 . -1) (undo-tree-id10248 . -1) (undo-tree-id10249 . -1) (undo-tree-id10250 . -1) (undo-tree-id10251 . -1) (undo-tree-id10252 . -1) (undo-tree-id10253 . -1) (undo-tree-id10254 . -1) (undo-tree-id10255 . -1) (undo-tree-id10256 . -1) (undo-tree-id10257 . -1) (undo-tree-id10258 . -1) (undo-tree-id10259 . -1) (undo-tree-id10260 . -1) (undo-tree-id10261 . -1) (undo-tree-id10262 . -1) (undo-tree-id10263 . -1) (undo-tree-id10264 . -1) (undo-tree-id10265 . -1) (undo-tree-id10266 . -1) (undo-tree-id10267 . -1) (undo-tree-id10268 . -1) (undo-tree-id10269 . -1) (undo-tree-id10270 . -1) (undo-tree-id10271 . -1) (undo-tree-id10272 . -1) (undo-tree-id10273 . -1) (undo-tree-id10274 . -1) (undo-tree-id10275 . -1) (undo-tree-id10276 . -1) (undo-tree-id10277 . -1) (undo-tree-id10278 . -1) (undo-tree-id10279 . -1) (undo-tree-id10280 . -1) (undo-tree-id10281 . -1) (undo-tree-id10282 . -1) (undo-tree-id10283 . -1) (undo-tree-id10284 . -1) (undo-tree-id10285 . -1) (undo-tree-id10286 . -1) (undo-tree-id10287 . -1) (undo-tree-id10288 . -1) (undo-tree-id10289 . -1) (undo-tree-id10290 . -1) (undo-tree-id10291 . -1) (undo-tree-id10292 . -1) (undo-tree-id10293 . -1) (undo-tree-id10294 . -1) (undo-tree-id10295 . -1) (undo-tree-id10296 . -1) (undo-tree-id10297 . -1) (undo-tree-id10298 . -1) (undo-tree-id10299 . -1) (undo-tree-id10300 . -1) (undo-tree-id10301 . -1) (undo-tree-id10302 . -1) (undo-tree-id10303 . -1) (undo-tree-id10304 . -1) (undo-tree-id10305 . -1) (undo-tree-id10306 . -1) (undo-tree-id10307 . -1) (undo-tree-id10308 . -1) (undo-tree-id10309 . -1) (undo-tree-id10310 . -1) (undo-tree-id10311 . -1) (undo-tree-id10312 . -1) (undo-tree-id10313 . -1) (undo-tree-id10314 . -1) (undo-tree-id10315 . -1) (undo-tree-id10316 . -1) (undo-tree-id10317 . -1) (undo-tree-id10318 . -1) (undo-tree-id10319 . -1) (undo-tree-id10320 . -1) (undo-tree-id10321 . -1) (undo-tree-id10322 . -1) (undo-tree-id10323 . -1) (undo-tree-id10324 . -1) (undo-tree-id10325 . -1) (undo-tree-id10326 . -1) (undo-tree-id10327 . -1) (undo-tree-id10328 . -1) (undo-tree-id10329 . -1) (undo-tree-id10330 . -1) (undo-tree-id10331 . -1) (undo-tree-id10332 . -1) (undo-tree-id10333 . -1) (undo-tree-id10334 . -1) (undo-tree-id10335 . -1) (undo-tree-id10336 . -1) (undo-tree-id10337 . -1) (undo-tree-id10338 . -1) (undo-tree-id10339 . -1) (undo-tree-id10340 . -1) (undo-tree-id10341 . -1) (undo-tree-id10342 . -1) (undo-tree-id10343 . -1) (undo-tree-id10344 . -1) (undo-tree-id10345 . -1) (undo-tree-id10346 . -1) (undo-tree-id10347 . -1) (undo-tree-id10348 . -1) (undo-tree-id10349 . -1) (undo-tree-id10350 . -1) (undo-tree-id10351 . -1) (undo-tree-id10352 . -1) (undo-tree-id10353 . -1) (undo-tree-id10354 . -1) (undo-tree-id10355 . -1) (undo-tree-id10356 . -1) (undo-tree-id10357 . -1) (undo-tree-id10358 . -1) (undo-tree-id10359 . -1) (undo-tree-id10360 . -1) (undo-tree-id10361 . -1) (undo-tree-id10362 . -1) (undo-tree-id10363 . -1) (undo-tree-id10364 . -1) (undo-tree-id10365 . -1) (undo-tree-id10366 . -1) (undo-tree-id10367 . -1) (undo-tree-id10368 . -1) (undo-tree-id10369 . -1) (undo-tree-id10370 . -1) (undo-tree-id10371 . -1) (undo-tree-id10372 . -1) (undo-tree-id10373 . -1) (undo-tree-id10374 . -1) (#("e" 0 1 (fontified t)) . -69125) (undo-tree-id10375 . -1) (undo-tree-id10376 . -1) (undo-tree-id10377 . -1) (undo-tree-id10378 . -1) (undo-tree-id10379 . -1) (undo-tree-id10380 . -1) (undo-tree-id10381 . -1) (undo-tree-id10382 . -1) (undo-tree-id10383 . -1) (undo-tree-id10384 . -1) (undo-tree-id10385 . -1) (undo-tree-id10386 . -1) (undo-tree-id10387 . -1) (undo-tree-id10388 . -1) (undo-tree-id10389 . -1) (undo-tree-id10390 . -1) (undo-tree-id10391 . -1) (undo-tree-id10392 . -1) (undo-tree-id10393 . -1) (undo-tree-id10394 . -1) (undo-tree-id10395 . -1) (undo-tree-id10396 . -1) (undo-tree-id10397 . -1) (undo-tree-id10398 . -1) (undo-tree-id10399 . -1) (undo-tree-id10400 . -1) (undo-tree-id10401 . -1) (undo-tree-id10402 . -1) (undo-tree-id10403 . -1) (undo-tree-id10404 . -1) (undo-tree-id10405 . -1) (undo-tree-id10406 . -1) (undo-tree-id10407 . -1) (undo-tree-id10408 . -1) (undo-tree-id10409 . -1) (undo-tree-id10410 . -1) (undo-tree-id10411 . -1) (undo-tree-id10412 . -1) (undo-tree-id10413 . -1) (undo-tree-id10414 . -1) (undo-tree-id10415 . -1) (undo-tree-id10416 . -1) (undo-tree-id10417 . -1) (undo-tree-id10418 . -1) (undo-tree-id10419 . -1) (undo-tree-id10420 . -1) (undo-tree-id10421 . -1) (undo-tree-id10422 . -1) (undo-tree-id10423 . -1) (undo-tree-id10424 . -1) (undo-tree-id10425 . -1) (undo-tree-id10426 . -1) (undo-tree-id10427 . -1) (undo-tree-id10428 . -1) (undo-tree-id10429 . -1) (undo-tree-id10430 . -1) (undo-tree-id10431 . -1) (undo-tree-id10432 . -1) (undo-tree-id10433 . -1) (undo-tree-id10434 . -1) (undo-tree-id10435 . -1) (undo-tree-id10436 . -1) (undo-tree-id10437 . -1) (undo-tree-id10438 . -1) (undo-tree-id10439 . -1) (undo-tree-id10440 . -1) (undo-tree-id10441 . -1) (undo-tree-id10442 . -1) (undo-tree-id10443 . -1) (undo-tree-id10444 . -1) (undo-tree-id10445 . -1) (undo-tree-id10446 . -1) (undo-tree-id10447 . -1) (undo-tree-id10448 . -1) (undo-tree-id10449 . -1) (undo-tree-id10450 . -1) (undo-tree-id10451 . -1) (undo-tree-id10452 . -1) (undo-tree-id10453 . -1) (undo-tree-id10454 . -1) (undo-tree-id10455 . -1) (undo-tree-id10456 . -1) (undo-tree-id10457 . -1) (undo-tree-id10458 . -1) (undo-tree-id10459 . -1) (undo-tree-id10460 . -1) (undo-tree-id10461 . -1) (undo-tree-id10462 . -1) (undo-tree-id10463 . -1) (undo-tree-id10464 . -1) (undo-tree-id10465 . -1) (undo-tree-id10466 . -1) (undo-tree-id10467 . -1) (undo-tree-id10468 . -1) (undo-tree-id10469 . -1) (undo-tree-id10470 . -1) (undo-tree-id10471 . -1) (undo-tree-id10472 . -1) (undo-tree-id10473 . -1) (undo-tree-id10474 . -1) (undo-tree-id10475 . -1) (undo-tree-id10476 . -1) (undo-tree-id10477 . -1) (undo-tree-id10478 . -1) (undo-tree-id10479 . -1) (undo-tree-id10480 . -1) (undo-tree-id10481 . -1) (undo-tree-id10482 . -1) (undo-tree-id10483 . -1) (undo-tree-id10484 . -1) (undo-tree-id10485 . -1) (undo-tree-id10486 . -1) (undo-tree-id10487 . -1) (undo-tree-id10488 . -1) (undo-tree-id10489 . -1) (undo-tree-id10490 . -1) (undo-tree-id10491 . -1) (undo-tree-id10492 . -1) (undo-tree-id10493 . -1) (undo-tree-id10494 . -1) (undo-tree-id10495 . -1) (undo-tree-id10496 . -1) (undo-tree-id10497 . -1) (undo-tree-id10498 . -1) (undo-tree-id10499 . -1) (undo-tree-id10500 . -1) (undo-tree-id10501 . -1) (undo-tree-id10502 . -1) (undo-tree-id10503 . -1) (undo-tree-id10504 . -1) (undo-tree-id10505 . -1) (undo-tree-id10506 . -1) (undo-tree-id10507 . -1) (undo-tree-id10508 . -1) (undo-tree-id10509 . -1) (undo-tree-id10510 . -1) (undo-tree-id10511 . -1) (undo-tree-id10512 . -1) (undo-tree-id10513 . -1) (undo-tree-id10514 . -1) (undo-tree-id10515 . -1) (undo-tree-id10516 . -1) (undo-tree-id10517 . -1) (undo-tree-id10518 . -1) (undo-tree-id10519 . -1) (undo-tree-id10520 . -1) (undo-tree-id10521 . -1) (undo-tree-id10522 . -1) (undo-tree-id10523 . -1) (undo-tree-id10524 . -1) (undo-tree-id10525 . -1) (undo-tree-id10526 . -1) (undo-tree-id10527 . -1) (undo-tree-id10528 . -1) (undo-tree-id10529 . -1) (undo-tree-id10530 . -1) (undo-tree-id10531 . -1) (undo-tree-id10532 . -1) (undo-tree-id10533 . -1) (undo-tree-id10534 . -1) (undo-tree-id10535 . -1) (undo-tree-id10536 . -1) (undo-tree-id10537 . -1) (undo-tree-id10538 . -1) (undo-tree-id10539 . -1) (undo-tree-id10540 . -1) (undo-tree-id10541 . -1) (undo-tree-id10542 . -1) (undo-tree-id10543 . -1) (undo-tree-id10544 . -1) (undo-tree-id10545 . -1) (undo-tree-id10546 . -1) (undo-tree-id10547 . -1) (undo-tree-id10548 . -1) (undo-tree-id10549 . -1) (undo-tree-id10550 . -1) (undo-tree-id10551 . -1) (undo-tree-id10552 . -1) (undo-tree-id10553 . -1) (undo-tree-id10554 . -1) (undo-tree-id10555 . -1) (undo-tree-id10556 . -1) (undo-tree-id10557 . -1) (undo-tree-id10558 . -1) (undo-tree-id10559 . -1) (undo-tree-id10560 . -1) (undo-tree-id10561 . -1) (undo-tree-id10562 . -1) (undo-tree-id10563 . -1) (undo-tree-id10564 . -1) (undo-tree-id10565 . -1) (undo-tree-id10566 . -1) (undo-tree-id10567 . -1) (undo-tree-id10568 . -1) (undo-tree-id10569 . -1) (undo-tree-id10570 . -1) (undo-tree-id10571 . -1) (undo-tree-id10572 . -1) (undo-tree-id10573 . -1) (undo-tree-id10574 . -1) (undo-tree-id10575 . -1) (undo-tree-id10576 . -1) (undo-tree-id10577 . -1) (undo-tree-id10578 . -1) (undo-tree-id10579 . -1) (undo-tree-id10580 . -1) (#("a" 0 1 (fontified t)) . -69126) (undo-tree-id10581 . -1) (undo-tree-id10582 . -1) (undo-tree-id10583 . -1) (undo-tree-id10584 . -1) (undo-tree-id10585 . -1) (undo-tree-id10586 . -1) (undo-tree-id10587 . -1) (undo-tree-id10588 . -1) (undo-tree-id10589 . -1) (undo-tree-id10590 . -1) (undo-tree-id10591 . -1) (undo-tree-id10592 . -1) (undo-tree-id10593 . -1) (undo-tree-id10594 . -1) (undo-tree-id10595 . -1) (undo-tree-id10596 . -1) (undo-tree-id10597 . -1) (undo-tree-id10598 . -1) (undo-tree-id10599 . -1) (undo-tree-id10600 . -1) (undo-tree-id10601 . -1) (undo-tree-id10602 . -1) (undo-tree-id10603 . -1) (undo-tree-id10604 . -1) (undo-tree-id10605 . -1) (undo-tree-id10606 . -1) (undo-tree-id10607 . -1) (undo-tree-id10608 . -1) (undo-tree-id10609 . -1) (undo-tree-id10610 . -1) (undo-tree-id10611 . -1) (undo-tree-id10612 . -1) (undo-tree-id10613 . -1) (undo-tree-id10614 . -1) (undo-tree-id10615 . -1) (undo-tree-id10616 . -1) (undo-tree-id10617 . -1) (undo-tree-id10618 . -1) (undo-tree-id10619 . -1) (undo-tree-id10620 . -1) (undo-tree-id10621 . -1) (undo-tree-id10622 . -1) (undo-tree-id10623 . -1) (undo-tree-id10624 . -1) (undo-tree-id10625 . -1) (undo-tree-id10626 . -1) (undo-tree-id10627 . -1) (undo-tree-id10628 . -1) (undo-tree-id10629 . -1) (undo-tree-id10630 . -1) (undo-tree-id10631 . -1) (undo-tree-id10632 . -1) (undo-tree-id10633 . -1) (undo-tree-id10634 . -1) (undo-tree-id10635 . -1) (undo-tree-id10636 . -1) (undo-tree-id10637 . -1) (undo-tree-id10638 . -1) (undo-tree-id10639 . -1) (undo-tree-id10640 . -1) (undo-tree-id10641 . -1) (undo-tree-id10642 . -1) (undo-tree-id10643 . -1) (undo-tree-id10644 . -1) (undo-tree-id10645 . -1) (undo-tree-id10646 . -1) (undo-tree-id10647 . -1) (undo-tree-id10648 . -1) (undo-tree-id10649 . -1) (undo-tree-id10650 . -1) (undo-tree-id10651 . -1) (undo-tree-id10652 . -1) (undo-tree-id10653 . -1) (undo-tree-id10654 . -1) (undo-tree-id10655 . -1) (undo-tree-id10656 . -1) (undo-tree-id10657 . -1) (undo-tree-id10658 . -1) (undo-tree-id10659 . -1) (undo-tree-id10660 . -1) (undo-tree-id10661 . -1) (undo-tree-id10662 . -1) (undo-tree-id10663 . -1) (undo-tree-id10664 . -1) (undo-tree-id10665 . -1) (undo-tree-id10666 . -1) (undo-tree-id10667 . -1) (undo-tree-id10668 . -1) (undo-tree-id10669 . -1) (undo-tree-id10670 . -1) (undo-tree-id10671 . -1) (undo-tree-id10672 . -1) (undo-tree-id10673 . -1) (undo-tree-id10674 . -1) (undo-tree-id10675 . -1) (undo-tree-id10676 . -1) (undo-tree-id10677 . -1) (undo-tree-id10678 . -1) (undo-tree-id10679 . -1) (undo-tree-id10680 . -1) (undo-tree-id10681 . -1) (undo-tree-id10682 . -1) (undo-tree-id10683 . -1) (undo-tree-id10684 . -1) (undo-tree-id10685 . -1) (undo-tree-id10686 . -1) (undo-tree-id10687 . -1) (undo-tree-id10688 . -1) (undo-tree-id10689 . -1) (undo-tree-id10690 . -1) (undo-tree-id10691 . -1) (undo-tree-id10692 . -1) (undo-tree-id10693 . -1) (undo-tree-id10694 . -1) (undo-tree-id10695 . -1) (undo-tree-id10696 . -1) (undo-tree-id10697 . -1) (undo-tree-id10698 . -1) (undo-tree-id10699 . -1) (undo-tree-id10700 . -1) (undo-tree-id10701 . -1) (undo-tree-id10702 . -1) (undo-tree-id10703 . -1) (undo-tree-id10704 . -1) (undo-tree-id10705 . -1) (undo-tree-id10706 . -1) (undo-tree-id10707 . -1) (undo-tree-id10708 . -1) (undo-tree-id10709 . -1) (undo-tree-id10710 . -1) (undo-tree-id10711 . -1) (undo-tree-id10712 . -1) (undo-tree-id10713 . -1) (undo-tree-id10714 . -1) (undo-tree-id10715 . -1) (undo-tree-id10716 . -1) (undo-tree-id10717 . -1) (undo-tree-id10718 . -1) (undo-tree-id10719 . -1) (undo-tree-id10720 . -1) (undo-tree-id10721 . -1) (undo-tree-id10722 . -1) (undo-tree-id10723 . -1) (undo-tree-id10724 . -1) (undo-tree-id10725 . -1) (undo-tree-id10726 . -1) (undo-tree-id10727 . -1) (undo-tree-id10728 . -1) (undo-tree-id10729 . -1) (undo-tree-id10730 . -1) (undo-tree-id10731 . -1) (undo-tree-id10732 . -1) (undo-tree-id10733 . -1) (undo-tree-id10734 . -1) (undo-tree-id10735 . -1) (undo-tree-id10736 . -1) (undo-tree-id10737 . -1) (undo-tree-id10738 . -1) (undo-tree-id10739 . -1) (undo-tree-id10740 . -1) (undo-tree-id10741 . -1) (undo-tree-id10742 . -1) (undo-tree-id10743 . -1) (undo-tree-id10744 . -1) (undo-tree-id10745 . -1) (undo-tree-id10746 . -1) (undo-tree-id10747 . -1) (undo-tree-id10748 . -1) (undo-tree-id10749 . -1) (undo-tree-id10750 . -1) (undo-tree-id10751 . -1) (undo-tree-id10752 . -1) (undo-tree-id10753 . -1) (undo-tree-id10754 . -1) (undo-tree-id10755 . -1) (undo-tree-id10756 . -1) (undo-tree-id10757 . -1) (undo-tree-id10758 . -1) (undo-tree-id10759 . -1) (undo-tree-id10760 . -1) (undo-tree-id10761 . -1) (undo-tree-id10762 . -1) (undo-tree-id10763 . -1) (undo-tree-id10764 . -1) (undo-tree-id10765 . -1) (undo-tree-id10766 . -1) (undo-tree-id10767 . -1) (undo-tree-id10768 . -1) (undo-tree-id10769 . -1) (undo-tree-id10770 . -1) (#("s" 0 1 (fontified t)) . -69127) (undo-tree-id10771 . -1) (undo-tree-id10772 . -1) (undo-tree-id10773 . -1) (undo-tree-id10774 . -1) (undo-tree-id10775 . -1) (undo-tree-id10776 . -1) (undo-tree-id10777 . -1) (undo-tree-id10778 . -1) (undo-tree-id10779 . -1) (undo-tree-id10780 . -1) (undo-tree-id10781 . -1) (undo-tree-id10782 . -1) (undo-tree-id10783 . -1) (undo-tree-id10784 . -1) (undo-tree-id10785 . -1) (undo-tree-id10786 . -1) (undo-tree-id10787 . -1) (undo-tree-id10788 . -1) (undo-tree-id10789 . -1) (undo-tree-id10790 . -1) (undo-tree-id10791 . -1) (undo-tree-id10792 . -1) (undo-tree-id10793 . -1) (undo-tree-id10794 . -1) (undo-tree-id10795 . -1) (undo-tree-id10796 . -1) (undo-tree-id10797 . -1) (undo-tree-id10798 . -1) (undo-tree-id10799 . -1) (undo-tree-id10800 . -1) (undo-tree-id10801 . -1) (undo-tree-id10802 . -1) (undo-tree-id10803 . -1) (undo-tree-id10804 . -1) (undo-tree-id10805 . -1) (undo-tree-id10806 . -1) (undo-tree-id10807 . -1) (undo-tree-id10808 . -1) (undo-tree-id10809 . -1) (undo-tree-id10810 . -1) (undo-tree-id10811 . -1) (undo-tree-id10812 . -1) (undo-tree-id10813 . -1) (undo-tree-id10814 . -1) (undo-tree-id10815 . -1) (undo-tree-id10816 . -1) (undo-tree-id10817 . -1) (undo-tree-id10818 . -1) (undo-tree-id10819 . -1) (undo-tree-id10820 . -1) (undo-tree-id10821 . -1) (undo-tree-id10822 . -1) (undo-tree-id10823 . -1) (undo-tree-id10824 . -1) (undo-tree-id10825 . -1) (undo-tree-id10826 . -1) (undo-tree-id10827 . -1) (undo-tree-id10828 . -1) (undo-tree-id10829 . -1) (undo-tree-id10830 . -1) (undo-tree-id10831 . -1) (undo-tree-id10832 . -1) (undo-tree-id10833 . -1) (undo-tree-id10834 . -1) (undo-tree-id10835 . -1) (undo-tree-id10836 . -1) (undo-tree-id10837 . -1) (undo-tree-id10838 . -1) (undo-tree-id10839 . -1) (undo-tree-id10840 . -1) (undo-tree-id10841 . -1) (undo-tree-id10842 . -1) (undo-tree-id10843 . -1) (undo-tree-id10844 . -1) (undo-tree-id10845 . -1) (undo-tree-id10846 . -1) (undo-tree-id10847 . -1) (undo-tree-id10848 . -1) (undo-tree-id10849 . -1) (undo-tree-id10850 . -1) (undo-tree-id10851 . -1) (undo-tree-id10852 . -1) (undo-tree-id10853 . -1) (undo-tree-id10854 . -1) (undo-tree-id10855 . -1) (undo-tree-id10856 . -1) (undo-tree-id10857 . -1) (undo-tree-id10858 . -1) (undo-tree-id10859 . -1) (undo-tree-id10860 . -1) (undo-tree-id10861 . -1) (undo-tree-id10862 . -1) (undo-tree-id10863 . -1) (undo-tree-id10864 . -1) (undo-tree-id10865 . -1) (undo-tree-id10866 . -1) (undo-tree-id10867 . -1) (undo-tree-id10868 . -1) (undo-tree-id10869 . -1) (undo-tree-id10870 . -1) (undo-tree-id10871 . -1) (undo-tree-id10872 . -1) (undo-tree-id10873 . -1) (undo-tree-id10874 . -1) (undo-tree-id10875 . -1) (undo-tree-id10876 . -1) (undo-tree-id10877 . -1) (undo-tree-id10878 . -1) (undo-tree-id10879 . -1) (undo-tree-id10880 . -1) (undo-tree-id10881 . -1) (undo-tree-id10882 . -1) (undo-tree-id10883 . -1) (undo-tree-id10884 . -1) (undo-tree-id10885 . -1) (undo-tree-id10886 . -1) (undo-tree-id10887 . -1) (undo-tree-id10888 . -1) (undo-tree-id10889 . -1) (undo-tree-id10890 . -1) (undo-tree-id10891 . -1) (undo-tree-id10892 . -1) (undo-tree-id10893 . -1) (undo-tree-id10894 . -1) (undo-tree-id10895 . -1) (undo-tree-id10896 . -1) (undo-tree-id10897 . -1) (undo-tree-id10898 . -1) (undo-tree-id10899 . -1) (undo-tree-id10900 . -1) (undo-tree-id10901 . -1) (undo-tree-id10902 . -1) (undo-tree-id10903 . -1) (undo-tree-id10904 . -1) (undo-tree-id10905 . -1) (undo-tree-id10906 . -1) (undo-tree-id10907 . -1) (undo-tree-id10908 . -1) (undo-tree-id10909 . -1) (undo-tree-id10910 . -1) (undo-tree-id10911 . -1) (undo-tree-id10912 . -1) (undo-tree-id10913 . -1) (undo-tree-id10914 . -1) (undo-tree-id10915 . -1) (undo-tree-id10916 . -1) (undo-tree-id10917 . -1) (undo-tree-id10918 . -1) (undo-tree-id10919 . -1) (undo-tree-id10920 . -1) (undo-tree-id10921 . -1) (undo-tree-id10922 . -1) (undo-tree-id10923 . -1) (undo-tree-id10924 . -1) (undo-tree-id10925 . -1) (undo-tree-id10926 . -1) (undo-tree-id10927 . -1) (undo-tree-id10928 . -1) (undo-tree-id10929 . -1) (undo-tree-id10930 . -1) (undo-tree-id10931 . -1) (undo-tree-id10932 . -1) (undo-tree-id10933 . -1) (undo-tree-id10934 . -1) (undo-tree-id10935 . -1) (undo-tree-id10936 . -1) (undo-tree-id10937 . -1) (undo-tree-id10938 . -1) (undo-tree-id10939 . -1) (undo-tree-id10940 . -1) (undo-tree-id10941 . -1) (undo-tree-id10942 . -1) (undo-tree-id10943 . -1) (undo-tree-id10944 . -1) (#("i" 0 1 (fontified t)) . -69128) (undo-tree-id10945 . -1) (undo-tree-id10946 . -1) (undo-tree-id10947 . -1) (undo-tree-id10948 . -1) (undo-tree-id10949 . -1) (undo-tree-id10950 . -1) (undo-tree-id10951 . -1) (undo-tree-id10952 . -1) (undo-tree-id10953 . -1) (undo-tree-id10954 . -1) (undo-tree-id10955 . -1) (undo-tree-id10956 . -1) (undo-tree-id10957 . -1) (undo-tree-id10958 . -1) (undo-tree-id10959 . -1) (undo-tree-id10960 . -1) (undo-tree-id10961 . -1) (undo-tree-id10962 . -1) (undo-tree-id10963 . -1) (undo-tree-id10964 . -1) (undo-tree-id10965 . -1) (undo-tree-id10966 . -1) (undo-tree-id10967 . -1) (undo-tree-id10968 . -1) (undo-tree-id10969 . -1) (undo-tree-id10970 . -1) (undo-tree-id10971 . -1) (undo-tree-id10972 . -1) (undo-tree-id10973 . -1) (undo-tree-id10974 . -1) (undo-tree-id10975 . -1) (undo-tree-id10976 . -1) (undo-tree-id10977 . -1) (undo-tree-id10978 . -1) (undo-tree-id10979 . -1) (undo-tree-id10980 . -1) (undo-tree-id10981 . -1) (undo-tree-id10982 . -1) (undo-tree-id10983 . -1) (undo-tree-id10984 . -1) (undo-tree-id10985 . -1) (undo-tree-id10986 . -1) (undo-tree-id10987 . -1) (undo-tree-id10988 . -1) (undo-tree-id10989 . -1) (undo-tree-id10990 . -1) (undo-tree-id10991 . -1) (undo-tree-id10992 . -1) (undo-tree-id10993 . -1) (undo-tree-id10994 . -1) (undo-tree-id10995 . -1) (undo-tree-id10996 . -1) (undo-tree-id10997 . -1) (undo-tree-id10998 . -1) (undo-tree-id10999 . -1) (undo-tree-id11000 . -1) (undo-tree-id11001 . -1) (undo-tree-id11002 . -1) (undo-tree-id11003 . -1) (undo-tree-id11004 . -1) (undo-tree-id11005 . -1) (undo-tree-id11006 . -1) (undo-tree-id11007 . -1) (undo-tree-id11008 . -1) (undo-tree-id11009 . -1) (undo-tree-id11010 . -1) (undo-tree-id11011 . -1) (undo-tree-id11012 . -1) (undo-tree-id11013 . -1) (undo-tree-id11014 . -1) (undo-tree-id11015 . -1) (undo-tree-id11016 . -1) (undo-tree-id11017 . -1) (undo-tree-id11018 . -1) (undo-tree-id11019 . -1) (undo-tree-id11020 . -1) (undo-tree-id11021 . -1) (undo-tree-id11022 . -1) (undo-tree-id11023 . -1) (undo-tree-id11024 . -1) (undo-tree-id11025 . -1) (undo-tree-id11026 . -1) (undo-tree-id11027 . -1) (undo-tree-id11028 . -1) (undo-tree-id11029 . -1) (undo-tree-id11030 . -1) (undo-tree-id11031 . -1) (undo-tree-id11032 . -1) (undo-tree-id11033 . -1) (undo-tree-id11034 . -1) (undo-tree-id11035 . -1) (undo-tree-id11036 . -1) (undo-tree-id11037 . -1) (undo-tree-id11038 . -1) (undo-tree-id11039 . -1) (undo-tree-id11040 . -1) (undo-tree-id11041 . -1) (undo-tree-id11042 . -1) (undo-tree-id11043 . -1) (undo-tree-id11044 . -1) (undo-tree-id11045 . -1) (undo-tree-id11046 . -1) (undo-tree-id11047 . -1) (undo-tree-id11048 . -1) (undo-tree-id11049 . -1) (undo-tree-id11050 . -1) (undo-tree-id11051 . -1) (undo-tree-id11052 . -1) (undo-tree-id11053 . -1) (undo-tree-id11054 . -1) (undo-tree-id11055 . -1) (undo-tree-id11056 . -1) (undo-tree-id11057 . -1) (undo-tree-id11058 . -1) (undo-tree-id11059 . -1) (undo-tree-id11060 . -1) (undo-tree-id11061 . -1) (undo-tree-id11062 . -1) (undo-tree-id11063 . -1) (undo-tree-id11064 . -1) (undo-tree-id11065 . -1) (undo-tree-id11066 . -1) (undo-tree-id11067 . -1) (undo-tree-id11068 . -1) (undo-tree-id11069 . -1) (undo-tree-id11070 . -1) (undo-tree-id11071 . -1) (undo-tree-id11072 . -1) (undo-tree-id11073 . -1) (undo-tree-id11074 . -1) (undo-tree-id11075 . -1) (undo-tree-id11076 . -1) (undo-tree-id11077 . -1) (undo-tree-id11078 . -1) (undo-tree-id11079 . -1) (undo-tree-id11080 . -1) (undo-tree-id11081 . -1) (undo-tree-id11082 . -1) (undo-tree-id11083 . -1) (undo-tree-id11084 . -1) (undo-tree-id11085 . -1) (undo-tree-id11086 . -1) (undo-tree-id11087 . -1) (undo-tree-id11088 . -1) (undo-tree-id11089 . -1) (undo-tree-id11090 . -1) (undo-tree-id11091 . -1) (undo-tree-id11092 . -1) (undo-tree-id11093 . -1) (undo-tree-id11094 . -1) (undo-tree-id11095 . -1) (undo-tree-id11096 . -1) (undo-tree-id11097 . -1) (undo-tree-id11098 . -1) (undo-tree-id11099 . -1) (undo-tree-id11100 . -1) (undo-tree-id11101 . -1) (undo-tree-id11102 . -1) (#("e" 0 1 (fontified t)) . -69129) (undo-tree-id11103 . -1) (undo-tree-id11104 . -1) (undo-tree-id11105 . -1) (undo-tree-id11106 . -1) (undo-tree-id11107 . -1) (undo-tree-id11108 . -1) (undo-tree-id11109 . -1) (undo-tree-id11110 . -1) (undo-tree-id11111 . -1) (undo-tree-id11112 . -1) (undo-tree-id11113 . -1) (undo-tree-id11114 . -1) (undo-tree-id11115 . -1) (undo-tree-id11116 . -1) (undo-tree-id11117 . -1) (undo-tree-id11118 . -1) (undo-tree-id11119 . -1) (undo-tree-id11120 . -1) (undo-tree-id11121 . -1) (undo-tree-id11122 . -1) (undo-tree-id11123 . -1) (undo-tree-id11124 . -1) (undo-tree-id11125 . -1) (undo-tree-id11126 . -1) (undo-tree-id11127 . -1) (undo-tree-id11128 . -1) (undo-tree-id11129 . -1) (undo-tree-id11130 . -1) (undo-tree-id11131 . -1) (undo-tree-id11132 . -1) (undo-tree-id11133 . -1) (undo-tree-id11134 . -1) (undo-tree-id11135 . -1) (undo-tree-id11136 . -1) (undo-tree-id11137 . -1) (undo-tree-id11138 . -1) (undo-tree-id11139 . -1) (undo-tree-id11140 . -1) (undo-tree-id11141 . -1) (undo-tree-id11142 . -1) (undo-tree-id11143 . -1) (undo-tree-id11144 . -1) (undo-tree-id11145 . -1) (undo-tree-id11146 . -1) (undo-tree-id11147 . -1) (undo-tree-id11148 . -1) (undo-tree-id11149 . -1) (undo-tree-id11150 . -1) (undo-tree-id11151 . -1) (undo-tree-id11152 . -1) (undo-tree-id11153 . -1) (undo-tree-id11154 . -1) (undo-tree-id11155 . -1) (undo-tree-id11156 . -1) (undo-tree-id11157 . -1) (undo-tree-id11158 . -1) (undo-tree-id11159 . -1) (undo-tree-id11160 . -1) (undo-tree-id11161 . -1) (undo-tree-id11162 . -1) (undo-tree-id11163 . -1) (undo-tree-id11164 . -1) (undo-tree-id11165 . -1) (undo-tree-id11166 . -1) (undo-tree-id11167 . -1) (undo-tree-id11168 . -1) (undo-tree-id11169 . -1) (undo-tree-id11170 . -1) (undo-tree-id11171 . -1) (undo-tree-id11172 . -1) (undo-tree-id11173 . -1) (undo-tree-id11174 . -1) (undo-tree-id11175 . -1) (undo-tree-id11176 . -1) (undo-tree-id11177 . -1) (undo-tree-id11178 . -1) (undo-tree-id11179 . -1) (undo-tree-id11180 . -1) (undo-tree-id11181 . -1) (undo-tree-id11182 . -1) (undo-tree-id11183 . -1) (undo-tree-id11184 . -1) (undo-tree-id11185 . -1) (undo-tree-id11186 . -1) (undo-tree-id11187 . -1) (undo-tree-id11188 . -1) (undo-tree-id11189 . -1) (undo-tree-id11190 . -1) (undo-tree-id11191 . -1) (undo-tree-id11192 . -1) (undo-tree-id11193 . -1) (undo-tree-id11194 . -1) (undo-tree-id11195 . -1) (undo-tree-id11196 . -1) (undo-tree-id11197 . -1) (undo-tree-id11198 . -1) (undo-tree-id11199 . -1) (undo-tree-id11200 . -1) (undo-tree-id11201 . -1) (undo-tree-id11202 . -1) (undo-tree-id11203 . -1) (undo-tree-id11204 . -1) (undo-tree-id11205 . -1) (undo-tree-id11206 . -1) (undo-tree-id11207 . -1) (undo-tree-id11208 . -1) (undo-tree-id11209 . -1) (undo-tree-id11210 . -1) (undo-tree-id11211 . -1) (undo-tree-id11212 . -1) (undo-tree-id11213 . -1) (undo-tree-id11214 . -1) (undo-tree-id11215 . -1) (undo-tree-id11216 . -1) (undo-tree-id11217 . -1) (undo-tree-id11218 . -1) (undo-tree-id11219 . -1) (undo-tree-id11220 . -1) (undo-tree-id11221 . -1) (undo-tree-id11222 . -1) (undo-tree-id11223 . -1) (undo-tree-id11224 . -1) (undo-tree-id11225 . -1) (undo-tree-id11226 . -1) (undo-tree-id11227 . -1) (undo-tree-id11228 . -1) (undo-tree-id11229 . -1) (undo-tree-id11230 . -1) (undo-tree-id11231 . -1) (undo-tree-id11232 . -1) (undo-tree-id11233 . -1) (undo-tree-id11234 . -1) (undo-tree-id11235 . -1) (undo-tree-id11236 . -1) (undo-tree-id11237 . -1) (undo-tree-id11238 . -1) (undo-tree-id11239 . -1) (undo-tree-id11240 . -1) (undo-tree-id11241 . -1) (undo-tree-id11242 . -1) (undo-tree-id11243 . -1) (undo-tree-id11244 . -1) (#("r" 0 1 (fontified t)) . -69130) (undo-tree-id11245 . -1) (undo-tree-id11246 . -1) (undo-tree-id11247 . -1) (undo-tree-id11248 . -1) (undo-tree-id11249 . -1) (undo-tree-id11250 . -1) (undo-tree-id11251 . -1) (undo-tree-id11252 . -1) (undo-tree-id11253 . -1) (undo-tree-id11254 . -1) (undo-tree-id11255 . -1) (undo-tree-id11256 . -1) (undo-tree-id11257 . -1) (undo-tree-id11258 . -1) (undo-tree-id11259 . -1) (undo-tree-id11260 . -1) (undo-tree-id11261 . -1) (undo-tree-id11262 . -1) (undo-tree-id11263 . -1) (undo-tree-id11264 . -1) (undo-tree-id11265 . -1) (undo-tree-id11266 . -1) (undo-tree-id11267 . -1) (undo-tree-id11268 . -1) (undo-tree-id11269 . -1) (undo-tree-id11270 . -1) (undo-tree-id11271 . -1) (undo-tree-id11272 . -1) (undo-tree-id11273 . -1) (undo-tree-id11274 . -1) (undo-tree-id11275 . -1) (undo-tree-id11276 . -1) (undo-tree-id11277 . -1) (undo-tree-id11278 . -1) (undo-tree-id11279 . -1) (undo-tree-id11280 . -1) (undo-tree-id11281 . -1) (undo-tree-id11282 . -1) (undo-tree-id11283 . -1) (undo-tree-id11284 . -1) (undo-tree-id11285 . -1) (undo-tree-id11286 . -1) (undo-tree-id11287 . -1) (undo-tree-id11288 . -1) (undo-tree-id11289 . -1) (undo-tree-id11290 . -1) (undo-tree-id11291 . -1) (undo-tree-id11292 . -1) (undo-tree-id11293 . -1) (undo-tree-id11294 . -1) (undo-tree-id11295 . -1) (undo-tree-id11296 . -1) (undo-tree-id11297 . -1) (undo-tree-id11298 . -1) (undo-tree-id11299 . -1) (undo-tree-id11300 . -1) (undo-tree-id11301 . -1) (undo-tree-id11302 . -1) (undo-tree-id11303 . -1) (undo-tree-id11304 . -1) (undo-tree-id11305 . -1) (undo-tree-id11306 . -1) (undo-tree-id11307 . -1) (undo-tree-id11308 . -1) (undo-tree-id11309 . -1) (undo-tree-id11310 . -1) (undo-tree-id11311 . -1) (undo-tree-id11312 . -1) (undo-tree-id11313 . -1) (undo-tree-id11314 . -1) (undo-tree-id11315 . -1) (undo-tree-id11316 . -1) (undo-tree-id11317 . -1) (undo-tree-id11318 . -1) (undo-tree-id11319 . -1) (undo-tree-id11320 . -1) (undo-tree-id11321 . -1) (undo-tree-id11322 . -1) (undo-tree-id11323 . -1) (undo-tree-id11324 . -1) (undo-tree-id11325 . -1) (undo-tree-id11326 . -1) (undo-tree-id11327 . -1) (undo-tree-id11328 . -1) (undo-tree-id11329 . -1) (undo-tree-id11330 . -1) (undo-tree-id11331 . -1) (undo-tree-id11332 . -1) (undo-tree-id11333 . -1) (undo-tree-id11334 . -1) (undo-tree-id11335 . -1) (undo-tree-id11336 . -1) (undo-tree-id11337 . -1) (undo-tree-id11338 . -1) (undo-tree-id11339 . -1) (undo-tree-id11340 . -1) (undo-tree-id11341 . -1) (undo-tree-id11342 . -1) (undo-tree-id11343 . -1) (undo-tree-id11344 . -1) (undo-tree-id11345 . -1) (undo-tree-id11346 . -1) (undo-tree-id11347 . -1) (undo-tree-id11348 . -1) (undo-tree-id11349 . -1) (undo-tree-id11350 . -1) (undo-tree-id11351 . -1) (undo-tree-id11352 . -1) (undo-tree-id11353 . -1) (undo-tree-id11354 . -1) (undo-tree-id11355 . -1) (undo-tree-id11356 . -1) (undo-tree-id11357 . -1) (undo-tree-id11358 . -1) (undo-tree-id11359 . -1) (undo-tree-id11360 . -1) (undo-tree-id11361 . -1) (undo-tree-id11362 . -1) (undo-tree-id11363 . -1) (undo-tree-id11364 . -1) (undo-tree-id11365 . -1) (undo-tree-id11366 . -1) (undo-tree-id11367 . -1) (undo-tree-id11368 . -1) (undo-tree-id11369 . -1) (undo-tree-id11370 . -1) (#(" " 0 1 (fontified t)) . -69131) (undo-tree-id11371 . -1) (undo-tree-id11372 . -1) (undo-tree-id11373 . -1) (undo-tree-id11374 . -1) (undo-tree-id11375 . -1) (undo-tree-id11376 . -1) (undo-tree-id11377 . -1) (undo-tree-id11378 . -1) (undo-tree-id11379 . -1) (undo-tree-id11380 . -1) (undo-tree-id11381 . -1) (undo-tree-id11382 . -1) (undo-tree-id11383 . -1) (undo-tree-id11384 . -1) (undo-tree-id11385 . -1) (undo-tree-id11386 . -1) (undo-tree-id11387 . -1) (undo-tree-id11388 . -1) (undo-tree-id11389 . -1) (undo-tree-id11390 . -1) (undo-tree-id11391 . -1) (undo-tree-id11392 . -1) (undo-tree-id11393 . -1) (undo-tree-id11394 . -1) (undo-tree-id11395 . -1) (undo-tree-id11396 . -1) (undo-tree-id11397 . -1) (undo-tree-id11398 . -1) (undo-tree-id11399 . -1) (undo-tree-id11400 . -1) (undo-tree-id11401 . -1) (undo-tree-id11402 . -1) (undo-tree-id11403 . -1) (undo-tree-id11404 . -1) (undo-tree-id11405 . -1) (undo-tree-id11406 . -1) (undo-tree-id11407 . -1) (undo-tree-id11408 . -1) (undo-tree-id11409 . -1) (undo-tree-id11410 . -1) (undo-tree-id11411 . -1) (undo-tree-id11412 . -1) (undo-tree-id11413 . -1) (undo-tree-id11414 . -1) (undo-tree-id11415 . -1) (undo-tree-id11416 . -1) (undo-tree-id11417 . -1) (undo-tree-id11418 . -1) (undo-tree-id11419 . -1) (undo-tree-id11420 . -1) (undo-tree-id11421 . -1) (undo-tree-id11422 . -1) (undo-tree-id11423 . -1) (undo-tree-id11424 . -1) (undo-tree-id11425 . -1) (undo-tree-id11426 . -1) (undo-tree-id11427 . -1) (undo-tree-id11428 . -1) (undo-tree-id11429 . -1) (undo-tree-id11430 . -1) (undo-tree-id11431 . -1) (undo-tree-id11432 . -1) (undo-tree-id11433 . -1) (undo-tree-id11434 . -1) (undo-tree-id11435 . -1) (undo-tree-id11436 . -1) (undo-tree-id11437 . -1) (undo-tree-id11438 . -1) (undo-tree-id11439 . -1) (undo-tree-id11440 . -1) (undo-tree-id11441 . -1) (undo-tree-id11442 . -1) (undo-tree-id11443 . -1) (undo-tree-id11444 . -1) (undo-tree-id11445 . -1) (undo-tree-id11446 . -1) (undo-tree-id11447 . -1) (undo-tree-id11448 . -1) (undo-tree-id11449 . -1) (undo-tree-id11450 . -1) (undo-tree-id11451 . -1) (undo-tree-id11452 . -1) (undo-tree-id11453 . -1) (undo-tree-id11454 . -1) (undo-tree-id11455 . -1) (undo-tree-id11456 . -1) (undo-tree-id11457 . -1) (undo-tree-id11458 . -1) (undo-tree-id11459 . -1) (undo-tree-id11460 . -1) (undo-tree-id11461 . -1) (undo-tree-id11462 . -1) (undo-tree-id11463 . -1) (undo-tree-id11464 . -1) (undo-tree-id11465 . -1) (undo-tree-id11466 . -1) (undo-tree-id11467 . -1) (undo-tree-id11468 . -1) (undo-tree-id11469 . -1) (undo-tree-id11470 . -1) (undo-tree-id11471 . -1) (undo-tree-id11472 . -1) (undo-tree-id11473 . -1) (undo-tree-id11474 . -1) (undo-tree-id11475 . -1) (undo-tree-id11476 . -1) (undo-tree-id11477 . -1) (undo-tree-id11478 . -1) (undo-tree-id11479 . -1) (undo-tree-id11480 . -1) (#("w" 0 1 (fontified t)) . -69132) (undo-tree-id11481 . -1) (undo-tree-id11482 . -1) (undo-tree-id11483 . -1) (undo-tree-id11484 . -1) (undo-tree-id11485 . -1) (undo-tree-id11486 . -1) (undo-tree-id11487 . -1) (undo-tree-id11488 . -1) (undo-tree-id11489 . -1) (undo-tree-id11490 . -1) (undo-tree-id11491 . -1) (undo-tree-id11492 . -1) (undo-tree-id11493 . -1) (undo-tree-id11494 . -1) (undo-tree-id11495 . -1) (undo-tree-id11496 . -1) (undo-tree-id11497 . -1) (undo-tree-id11498 . -1) (undo-tree-id11499 . -1) (undo-tree-id11500 . -1) (undo-tree-id11501 . -1) (undo-tree-id11502 . -1) (undo-tree-id11503 . -1) (undo-tree-id11504 . -1) (undo-tree-id11505 . -1) (undo-tree-id11506 . -1) (undo-tree-id11507 . -1) (undo-tree-id11508 . -1) (undo-tree-id11509 . -1) (undo-tree-id11510 . -1) (undo-tree-id11511 . -1) (undo-tree-id11512 . -1) (undo-tree-id11513 . -1) (undo-tree-id11514 . -1) (undo-tree-id11515 . -1) (undo-tree-id11516 . -1) (undo-tree-id11517 . -1) (undo-tree-id11518 . -1) (undo-tree-id11519 . -1) (undo-tree-id11520 . -1) (undo-tree-id11521 . -1) (undo-tree-id11522 . -1) (undo-tree-id11523 . -1) (undo-tree-id11524 . -1) (undo-tree-id11525 . -1) (undo-tree-id11526 . -1) (undo-tree-id11527 . -1) (undo-tree-id11528 . -1) (undo-tree-id11529 . -1) (undo-tree-id11530 . -1) (undo-tree-id11531 . -1) (undo-tree-id11532 . -1) (undo-tree-id11533 . -1) (undo-tree-id11534 . -1) (undo-tree-id11535 . -1) (undo-tree-id11536 . -1) (undo-tree-id11537 . -1) (undo-tree-id11538 . -1) (undo-tree-id11539 . -1) (undo-tree-id11540 . -1) (undo-tree-id11541 . -1) (undo-tree-id11542 . -1) (undo-tree-id11543 . -1) (undo-tree-id11544 . -1) (undo-tree-id11545 . -1) (undo-tree-id11546 . -1) (undo-tree-id11547 . -1) (undo-tree-id11548 . -1) (undo-tree-id11549 . -1) (undo-tree-id11550 . -1) (undo-tree-id11551 . -1) (undo-tree-id11552 . -1) (undo-tree-id11553 . -1) (undo-tree-id11554 . -1) (undo-tree-id11555 . -1) (undo-tree-id11556 . -1) (undo-tree-id11557 . -1) (undo-tree-id11558 . -1) (undo-tree-id11559 . -1) (undo-tree-id11560 . -1) (undo-tree-id11561 . -1) (undo-tree-id11562 . -1) (undo-tree-id11563 . -1) (undo-tree-id11564 . -1) (undo-tree-id11565 . -1) (undo-tree-id11566 . -1) (undo-tree-id11567 . -1) (undo-tree-id11568 . -1) (undo-tree-id11569 . -1) (undo-tree-id11570 . -1) (undo-tree-id11571 . -1) (undo-tree-id11572 . -1) (undo-tree-id11573 . -1) (undo-tree-id11574 . -1) (#("a" 0 1 (fontified t)) . -69133) (undo-tree-id11575 . -1) (undo-tree-id11576 . -1) (undo-tree-id11577 . -1) (undo-tree-id11578 . -1) (undo-tree-id11579 . -1) (undo-tree-id11580 . -1) (undo-tree-id11581 . -1) (undo-tree-id11582 . -1) (undo-tree-id11583 . -1) (undo-tree-id11584 . -1) (undo-tree-id11585 . -1) (undo-tree-id11586 . -1) (undo-tree-id11587 . -1) (undo-tree-id11588 . -1) (undo-tree-id11589 . -1) (undo-tree-id11590 . -1) (undo-tree-id11591 . -1) (undo-tree-id11592 . -1) (undo-tree-id11593 . -1) (undo-tree-id11594 . -1) (undo-tree-id11595 . -1) (undo-tree-id11596 . -1) (undo-tree-id11597 . -1) (undo-tree-id11598 . -1) (undo-tree-id11599 . -1) (undo-tree-id11600 . -1) (undo-tree-id11601 . -1) (undo-tree-id11602 . -1) (undo-tree-id11603 . -1) (undo-tree-id11604 . -1) (undo-tree-id11605 . -1) (undo-tree-id11606 . -1) (undo-tree-id11607 . -1) (undo-tree-id11608 . -1) (undo-tree-id11609 . -1) (undo-tree-id11610 . -1) (undo-tree-id11611 . -1) (undo-tree-id11612 . -1) (undo-tree-id11613 . -1) (undo-tree-id11614 . -1) (undo-tree-id11615 . -1) (undo-tree-id11616 . -1) (undo-tree-id11617 . -1) (undo-tree-id11618 . -1) (undo-tree-id11619 . -1) (undo-tree-id11620 . -1) (undo-tree-id11621 . -1) (undo-tree-id11622 . -1) (undo-tree-id11623 . -1) (undo-tree-id11624 . -1) (undo-tree-id11625 . -1) (undo-tree-id11626 . -1) (undo-tree-id11627 . -1) (undo-tree-id11628 . -1) (undo-tree-id11629 . -1) (undo-tree-id11630 . -1) (undo-tree-id11631 . -1) (undo-tree-id11632 . -1) (undo-tree-id11633 . -1) (undo-tree-id11634 . -1) (undo-tree-id11635 . -1) (undo-tree-id11636 . -1) (undo-tree-id11637 . -1) (undo-tree-id11638 . -1) (undo-tree-id11639 . -1) (undo-tree-id11640 . -1) (undo-tree-id11641 . -1) (undo-tree-id11642 . -1) (undo-tree-id11643 . -1) (undo-tree-id11644 . -1) (undo-tree-id11645 . -1) (undo-tree-id11646 . -1) (undo-tree-id11647 . -1) (undo-tree-id11648 . -1) (undo-tree-id11649 . -1) (undo-tree-id11650 . -1) (undo-tree-id11651 . -1) (undo-tree-id11652 . -1) (#("y" 0 1 (fontified t)) . -69134) (undo-tree-id11653 . -1) (undo-tree-id11654 . -1) (undo-tree-id11655 . -1) (undo-tree-id11656 . -1) (undo-tree-id11657 . -1) (undo-tree-id11658 . -1) (undo-tree-id11659 . -1) (undo-tree-id11660 . -1) (undo-tree-id11661 . -1) (undo-tree-id11662 . -1) (undo-tree-id11663 . -1) (undo-tree-id11664 . -1) (undo-tree-id11665 . -1) (undo-tree-id11666 . -1) (undo-tree-id11667 . -1) (undo-tree-id11668 . -1) (undo-tree-id11669 . -1) (undo-tree-id11670 . -1) (undo-tree-id11671 . -1) (undo-tree-id11672 . -1) (undo-tree-id11673 . -1) (undo-tree-id11674 . -1) (undo-tree-id11675 . -1) (undo-tree-id11676 . -1) (undo-tree-id11677 . -1) (undo-tree-id11678 . -1) (undo-tree-id11679 . -1) (undo-tree-id11680 . -1) (undo-tree-id11681 . -1) (undo-tree-id11682 . -1) (undo-tree-id11683 . -1) (undo-tree-id11684 . -1) (undo-tree-id11685 . -1) (undo-tree-id11686 . -1) (undo-tree-id11687 . -1) (undo-tree-id11688 . -1) (undo-tree-id11689 . -1) (undo-tree-id11690 . -1) (undo-tree-id11691 . -1) (undo-tree-id11692 . -1) (undo-tree-id11693 . -1) (undo-tree-id11694 . -1) (undo-tree-id11695 . -1) (undo-tree-id11696 . -1) (undo-tree-id11697 . -1) (undo-tree-id11698 . -1) (undo-tree-id11699 . -1) (undo-tree-id11700 . -1) (undo-tree-id11701 . -1) (undo-tree-id11702 . -1) (undo-tree-id11703 . -1) (undo-tree-id11704 . -1) (undo-tree-id11705 . -1) (undo-tree-id11706 . -1) (undo-tree-id11707 . -1) (undo-tree-id11708 . -1) (undo-tree-id11709 . -1) (undo-tree-id11710 . -1) (undo-tree-id11711 . -1) (undo-tree-id11712 . -1) (undo-tree-id11713 . -1) (undo-tree-id11714 . -1) (#("." 0 1 (fontified t)) . -69135) (undo-tree-id11715 . -1) (undo-tree-id11716 . -1) (undo-tree-id11717 . -1) (undo-tree-id11718 . -1) (undo-tree-id11719 . -1) (undo-tree-id11720 . -1) (undo-tree-id11721 . -1) (undo-tree-id11722 . -1) (undo-tree-id11723 . -1) (undo-tree-id11724 . -1) (undo-tree-id11725 . -1) (undo-tree-id11726 . -1) (undo-tree-id11727 . -1) (undo-tree-id11728 . -1) (undo-tree-id11729 . -1) (undo-tree-id11730 . -1) (undo-tree-id11731 . -1) (undo-tree-id11732 . -1) (undo-tree-id11733 . -1) (undo-tree-id11734 . -1) (undo-tree-id11735 . -1) (undo-tree-id11736 . -1) (undo-tree-id11737 . -1) (undo-tree-id11738 . -1) (undo-tree-id11739 . -1) (undo-tree-id11740 . -1) (#(" " 0 1 (fontified t)) . -69136) (undo-tree-id11741 . -1) (undo-tree-id11742 . -1) (undo-tree-id11743 . -1) (undo-tree-id11744 . -1) (undo-tree-id11745 . -1) (undo-tree-id11746 . -1) (undo-tree-id11747 . -1) (undo-tree-id11748 . -1) (undo-tree-id11749 . -1) 69137 (69123 . 69137) (#(" " 0 1 (fontified t)) . -69123) (undo-tree-id11750 . -1) (undo-tree-id11751 . -1) (undo-tree-id11752 . -1) (undo-tree-id11753 . -1) (undo-tree-id11754 . -1) (undo-tree-id11755 . -1) (undo-tree-id11756 . -1) (undo-tree-id11757 . -1) (undo-tree-id11758 . -1) 69124 (69112 . 69124) (69091 . 69112) (#("c" 0 1 (fontified t)) . -69091) (undo-tree-id11759 . -1) (undo-tree-id11760 . -1) (undo-tree-id11761 . -1) (undo-tree-id11762 . -1) (undo-tree-id11763 . -1) (undo-tree-id11764 . -1) (undo-tree-id11765 . -1) (undo-tree-id11766 . -1) (undo-tree-id11767 . -1) (undo-tree-id11768 . -1) (undo-tree-id11769 . -1) (undo-tree-id11770 . -1) (undo-tree-id11771 . -1) (undo-tree-id11772 . -1) (undo-tree-id11773 . -1) (undo-tree-id11774 . -1) (undo-tree-id11775 . -1) (undo-tree-id11776 . -1) (undo-tree-id11777 . -1) (undo-tree-id11778 . -1) (undo-tree-id11779 . -1) (undo-tree-id11780 . -1) (undo-tree-id11781 . -1) (undo-tree-id11782 . -1) (undo-tree-id11783 . -1) (#("n" 0 1 (fontified t)) . -69092) (undo-tree-id11784 . -1) (undo-tree-id11785 . -1) (undo-tree-id11786 . -1) (undo-tree-id11787 . -1) (undo-tree-id11788 . -1) (undo-tree-id11789 . -1) (undo-tree-id11790 . -1) (undo-tree-id11791 . -1) (undo-tree-id11792 . -1) 69093 (69092 . 69093) (69091 . 69092) (69070 . 69091) (#("o" 0 1 (fontified t)) . -69070) (undo-tree-id11793 . -1) (undo-tree-id11794 . -1) (undo-tree-id11795 . -1) (undo-tree-id11796 . -1) (undo-tree-id11797 . -1) (undo-tree-id11798 . -1) (undo-tree-id11799 . -1) (undo-tree-id11800 . -1) (undo-tree-id11801 . -1) (undo-tree-id11802 . -1) (undo-tree-id11803 . -1) (undo-tree-id11804 . -1) (undo-tree-id11805 . -1) (undo-tree-id11806 . -1) (undo-tree-id11807 . -1) (undo-tree-id11808 . -1) (undo-tree-id11809 . -1) (undo-tree-id11810 . -1) (undo-tree-id11811 . -1) (undo-tree-id11812 . -1) (undo-tree-id11813 . -1) (undo-tree-id11814 . -1) (undo-tree-id11815 . -1) (undo-tree-id11816 . -1) (undo-tree-id11817 . -1) (#("e" 0 1 (fontified t)) . -69071) (undo-tree-id11818 . -1) (undo-tree-id11819 . -1) (undo-tree-id11820 . -1) (undo-tree-id11821 . -1) (undo-tree-id11822 . -1) (undo-tree-id11823 . -1) (undo-tree-id11824 . -1) (undo-tree-id11825 . -1) (undo-tree-id11826 . -1) 69072 (69056 . 69072) (#("s" 0 1 (fontified t)) . -69056) (undo-tree-id11827 . -1) (undo-tree-id11828 . -1) (undo-tree-id11829 . -1) (undo-tree-id11830 . -1) (undo-tree-id11831 . -1) (undo-tree-id11832 . -1) (undo-tree-id11833 . -1) (undo-tree-id11834 . -1) (undo-tree-id11835 . -1) (undo-tree-id11836 . -1) (undo-tree-id11837 . -1) (undo-tree-id11838 . -1) (undo-tree-id11839 . -1) (undo-tree-id11840 . -1) (undo-tree-id11841 . -1) (undo-tree-id11842 . -1) (undo-tree-id11843 . -1) (undo-tree-id11844 . -1) (undo-tree-id11845 . -1) (undo-tree-id11846 . -1) (undo-tree-id11847 . -1) (undo-tree-id11848 . -1) (undo-tree-id11849 . -1) (undo-tree-id11850 . -1) (undo-tree-id11851 . -1) (undo-tree-id11852 . -1) (undo-tree-id11853 . -1) (undo-tree-id11854 . -1) (undo-tree-id11855 . -1) (undo-tree-id11856 . -1) (undo-tree-id11857 . -1) (undo-tree-id11858 . -1) (undo-tree-id11859 . -1) (undo-tree-id11860 . -1) (undo-tree-id11861 . -1) (undo-tree-id11862 . -1) (undo-tree-id11863 . -1) (undo-tree-id11864 . -1) (undo-tree-id11865 . -1) (undo-tree-id11866 . -1) (undo-tree-id11867 . -1) (undo-tree-id11868 . -1) (undo-tree-id11869 . -1) (undo-tree-id11870 . -1) (undo-tree-id11871 . -1) (undo-tree-id11872 . -1) (undo-tree-id11873 . -1) (undo-tree-id11874 . -1) (undo-tree-id11875 . -1) (undo-tree-id11876 . -1) (undo-tree-id11877 . -1) (undo-tree-id11878 . -1) (undo-tree-id11879 . -1) (undo-tree-id11880 . -1) (undo-tree-id11881 . -1) (undo-tree-id11882 . -1) (undo-tree-id11883 . -1) (#("r" 0 1 (fontified t)) . -69057) (undo-tree-id11884 . -1) (undo-tree-id11885 . -1) (undo-tree-id11886 . -1) (undo-tree-id11887 . -1) (undo-tree-id11888 . -1) (undo-tree-id11889 . -1) (undo-tree-id11890 . -1) (undo-tree-id11891 . -1) (undo-tree-id11892 . -1) 69058 (69057 . 69058) (#("." 0 1 (fontified t)) . -69057) (undo-tree-id11893 . -1) (undo-tree-id11894 . -1) (undo-tree-id11895 . -1) (undo-tree-id11896 . -1) (undo-tree-id11897 . -1) (undo-tree-id11898 . -1) (undo-tree-id11899 . -1) (undo-tree-id11900 . -1) (undo-tree-id11901 . -1) (undo-tree-id11902 . -1) (undo-tree-id11903 . -1) (undo-tree-id11904 . -1) (undo-tree-id11905 . -1) (undo-tree-id11906 . -1) (undo-tree-id11907 . -1) (undo-tree-id11908 . -1) (undo-tree-id11909 . -1) (undo-tree-id11910 . -1) (undo-tree-id11911 . -1) (undo-tree-id11912 . -1) (undo-tree-id11913 . -1) (undo-tree-id11914 . -1) (undo-tree-id11915 . -1) (undo-tree-id11916 . -1) (undo-tree-id11917 . -1) (#(" " 0 1 (fontified t)) . -69058) (undo-tree-id11918 . -1) (undo-tree-id11919 . -1) (undo-tree-id11920 . -1) (undo-tree-id11921 . -1) (undo-tree-id11922 . -1) (undo-tree-id11923 . -1) (undo-tree-id11924 . -1) (undo-tree-id11925 . -1) (undo-tree-id11926 . -1) 69059 (69052 . 69059) (#("r" 0 1 (fontified t)) . -69052) (undo-tree-id11927 . -1) (undo-tree-id11928 . -1) (undo-tree-id11929 . -1) (undo-tree-id11930 . -1) (undo-tree-id11931 . -1) (undo-tree-id11932 . -1) (undo-tree-id11933 . -1) (undo-tree-id11934 . -1) (undo-tree-id11935 . -1) (undo-tree-id11936 . -1) (undo-tree-id11937 . -1) (undo-tree-id11938 . -1) (undo-tree-id11939 . -1) (undo-tree-id11940 . -1) (undo-tree-id11941 . -1) (undo-tree-id11942 . -1) (undo-tree-id11943 . -1) (undo-tree-id11944 . -1) (undo-tree-id11945 . -1) (undo-tree-id11946 . -1) (undo-tree-id11947 . -1) (undo-tree-id11948 . -1) (undo-tree-id11949 . -1) (undo-tree-id11950 . -1) (undo-tree-id11951 . -1) (#("n" 0 1 (fontified t)) . -69053) (undo-tree-id11952 . -1) (undo-tree-id11953 . -1) (undo-tree-id11954 . -1) (undo-tree-id11955 . -1) (undo-tree-id11956 . -1) (undo-tree-id11957 . -1) (undo-tree-id11958 . -1) (undo-tree-id11959 . -1) (undo-tree-id11960 . -1) 69054 (69045 . 69054) (69040 . 69045) (#("i" 0 1 (fontified t)) . -69040) (undo-tree-id11961 . -1) (undo-tree-id11962 . -1) (undo-tree-id11963 . -1) (undo-tree-id11964 . -1) (undo-tree-id11965 . -1) (undo-tree-id11966 . -1) (undo-tree-id11967 . -1) (undo-tree-id11968 . -1) (undo-tree-id11969 . -1) (undo-tree-id11970 . -1) (undo-tree-id11971 . -1) (undo-tree-id11972 . -1) (undo-tree-id11973 . -1) (undo-tree-id11974 . -1) (undo-tree-id11975 . -1) (undo-tree-id11976 . -1) (undo-tree-id11977 . -1) (undo-tree-id11978 . -1) (undo-tree-id11979 . -1) (undo-tree-id11980 . -1) (undo-tree-id11981 . -1) (undo-tree-id11982 . -1) (undo-tree-id11983 . -1) (undo-tree-id11984 . -1) (undo-tree-id11985 . -1) (undo-tree-id11986 . -1) (undo-tree-id11987 . -1) (undo-tree-id11988 . -1) (undo-tree-id11989 . -1) (undo-tree-id11990 . -1) 69041 (69035 . 69041) (#(" " 0 1 (fontified t)) . -69035) (undo-tree-id11991 . -1) (undo-tree-id11992 . -1) (undo-tree-id11993 . -1) (undo-tree-id11994 . -1) (undo-tree-id11995 . -1) (undo-tree-id11996 . -1) (undo-tree-id11997 . -1) (undo-tree-id11998 . -1) (undo-tree-id11999 . -1) (undo-tree-id12000 . -1) (undo-tree-id12001 . -1) (undo-tree-id12002 . -1) (undo-tree-id12003 . -1) (undo-tree-id12004 . -1) (undo-tree-id12005 . -1) (undo-tree-id12006 . -1) (undo-tree-id12007 . -1) (undo-tree-id12008 . -1) (undo-tree-id12009 . -1) (undo-tree-id12010 . -1) (undo-tree-id12011 . -1) (undo-tree-id12012 . -1) (undo-tree-id12013 . -1) (undo-tree-id12014 . -1) (undo-tree-id12015 . -1) (#("s" 0 1 (fontified t)) . -69036) (undo-tree-id12016 . -1) (undo-tree-id12017 . -1) (undo-tree-id12018 . -1) (undo-tree-id12019 . -1) (undo-tree-id12020 . -1) (undo-tree-id12021 . -1) (undo-tree-id12022 . -1) (undo-tree-id12023 . -1) (undo-tree-id12024 . -1) 69037 (69017 . 69037) (#("a" 0 1 (fontified t)) . -69017) (undo-tree-id12025 . -1) (undo-tree-id12026 . -1) (undo-tree-id12027 . -1) (undo-tree-id12028 . -1) (undo-tree-id12029 . -1) (undo-tree-id12030 . -1) (undo-tree-id12031 . -1) (undo-tree-id12032 . -1) (undo-tree-id12033 . -1) 69018 (69014 . 69018) (#("n" 0 1 (fontified t)) . -69014) (undo-tree-id12034 . -1) (undo-tree-id12035 . -1) (undo-tree-id12036 . -1) (undo-tree-id12037 . -1) (undo-tree-id12038 . -1) (undo-tree-id12039 . -1) (undo-tree-id12040 . -1) (undo-tree-id12041 . -1) (undo-tree-id12042 . -1) 69015 (68994 . 69015) (68991 . 68994) (#("i" 0 1 (fontified t)) . -68991) (undo-tree-id12043 . -1) (undo-tree-id12044 . -1) (undo-tree-id12045 . -1) (undo-tree-id12046 . -1) (undo-tree-id12047 . -1) (undo-tree-id12048 . -1) (undo-tree-id12049 . -1) (undo-tree-id12050 . -1) (undo-tree-id12051 . -1) 68992 (68985 . 68992) (#("d" 0 1 (fontified t)) . -68985) (undo-tree-id12052 . -1) (undo-tree-id12053 . -1) (undo-tree-id12054 . -1) (undo-tree-id12055 . -1) (undo-tree-id12056 . -1) (undo-tree-id12057 . -1) (undo-tree-id12058 . -1) (undo-tree-id12059 . -1) (undo-tree-id12060 . -1) 68986 (68973 . 68986) (68969 . 68973) (t 25150 19470 704972 667000) 68968) nil (25150 19699 441215 914000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68867) (undo-tree-id15232 . -1) (undo-tree-id15233 . -1) (undo-tree-id15235 . -1) (undo-tree-id15237 . -1) (undo-tree-id15239 . -1) (undo-tree-id15241 . -1) (undo-tree-id15243 . -1) (undo-tree-id15245 . -1) (undo-tree-id15247 . -1) (undo-tree-id15249 . -1) (undo-tree-id15251 . -1) (undo-tree-id15253 . -1) (undo-tree-id15255 . -1) (undo-tree-id15257 . -1) (undo-tree-id15259 . -1) (undo-tree-id15261 . -1) (undo-tree-id15263 . -1) (undo-tree-id15265 . -1) (undo-tree-id15267 . -1) (undo-tree-id15269 . -1) (undo-tree-id15271 . -1) (undo-tree-id15273 . -1) (undo-tree-id15275 . -1) (undo-tree-id15277 . -1) (undo-tree-id15279 . -1) (undo-tree-id15281 . -1) (undo-tree-id15283 . -1) (undo-tree-id15285 . -1) (undo-tree-id15287 . -1) (undo-tree-id15289 . -1) (undo-tree-id15291 . -1) (undo-tree-id15293 . -1) (undo-tree-id15295 . -1) (undo-tree-id15297 . -1) (undo-tree-id15299 . -1) (undo-tree-id15301 . -1) (undo-tree-id15303 . -1) (undo-tree-id15305 . -1) (undo-tree-id15307 . -1) (undo-tree-id15309 . -1) (undo-tree-id15311 . -1) (undo-tree-id15313 . -1) (undo-tree-id15315 . -1) (undo-tree-id15317 . -1) (undo-tree-id15319 . -1) (undo-tree-id15321 . -1) (undo-tree-id15323 . -1) (undo-tree-id15325 . -1) (undo-tree-id15327 . -1) (undo-tree-id15329 . -1) (undo-tree-id15331 . -1) (undo-tree-id15333 . -1) (undo-tree-id15335 . -1) (undo-tree-id15337 . -1) (undo-tree-id15339 . -1) (undo-tree-id15341 . -1) (undo-tree-id15343 . -1) (undo-tree-id15345 . -1) (undo-tree-id15347 . -1) (undo-tree-id15349 . -1) (undo-tree-id15351 . -1) (undo-tree-id15353 . -1) (undo-tree-id15355 . -1) (undo-tree-id15357 . -1) (undo-tree-id15359 . -1) (#("n" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68868) (undo-tree-id15361 . -1) (undo-tree-id15362 . -1) (undo-tree-id15364 . -1) (undo-tree-id15366 . -1) (undo-tree-id15368 . -1) (undo-tree-id15370 . -1) (undo-tree-id15372 . -1) (undo-tree-id15374 . -1) (undo-tree-id15376 . -1) (undo-tree-id15378 . -1) (undo-tree-id15380 . -1) (undo-tree-id15382 . -1) (undo-tree-id15384 . -1) (undo-tree-id15386 . -1) (undo-tree-id15388 . -1) (undo-tree-id15390 . -1) (undo-tree-id15392 . -1) (undo-tree-id15394 . -1) (undo-tree-id15396 . -1) (undo-tree-id15398 . -1) (undo-tree-id15400 . -1) (undo-tree-id15402 . -1) (undo-tree-id15404 . -1) (undo-tree-id15406 . -1) (undo-tree-id15408 . -1) (undo-tree-id15410 . -1) (undo-tree-id15412 . -1) (undo-tree-id15414 . -1) (undo-tree-id15416 . -1) (undo-tree-id15418 . -1) (undo-tree-id15420 . -1) (undo-tree-id15422 . -1) (undo-tree-id15424 . -1) (undo-tree-id15426 . -1) (undo-tree-id15428 . -1) (undo-tree-id15430 . -1) (undo-tree-id15432 . -1) (undo-tree-id15434 . -1) (undo-tree-id15436 . -1) (undo-tree-id15438 . -1) (undo-tree-id15440 . -1) (undo-tree-id15442 . -1) (undo-tree-id15444 . -1) (undo-tree-id15446 . -1) (undo-tree-id15448 . -1) (undo-tree-id15450 . -1) (undo-tree-id15452 . -1) (undo-tree-id15454 . -1) (undo-tree-id15456 . -1) (undo-tree-id15458 . -1) (undo-tree-id15460 . -1) (undo-tree-id15462 . -1) (undo-tree-id15464 . -1) (undo-tree-id15466 . -1) (undo-tree-id15468 . -1) (undo-tree-id15470 . -1) (undo-tree-id15472 . -1) (undo-tree-id15474 . -1) (undo-tree-id15476 . -1) (undo-tree-id15478 . -1) (undo-tree-id15480 . -1) (#("o" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68869) (undo-tree-id15482 . -1) (undo-tree-id15483 . -1) (undo-tree-id15485 . -1) (undo-tree-id15487 . -1) (undo-tree-id15489 . -1) (undo-tree-id15491 . -1) (undo-tree-id15493 . -1) (undo-tree-id15495 . -1) (undo-tree-id15497 . -1) (undo-tree-id15499 . -1) (undo-tree-id15501 . -1) (undo-tree-id15503 . -1) (undo-tree-id15505 . -1) (undo-tree-id15507 . -1) (undo-tree-id15509 . -1) (undo-tree-id15511 . -1) (undo-tree-id15513 . -1) (undo-tree-id15515 . -1) (undo-tree-id15517 . -1) (undo-tree-id15519 . -1) (undo-tree-id15521 . -1) (undo-tree-id15523 . -1) (undo-tree-id15525 . -1) (undo-tree-id15527 . -1) (undo-tree-id15529 . -1) (undo-tree-id15531 . -1) (undo-tree-id15533 . -1) (undo-tree-id15535 . -1) (undo-tree-id15537 . -1) (undo-tree-id15539 . -1) (undo-tree-id15541 . -1) (undo-tree-id15543 . -1) (undo-tree-id15545 . -1) (undo-tree-id15547 . -1) (undo-tree-id15549 . -1) (undo-tree-id15551 . -1) (undo-tree-id15553 . -1) (undo-tree-id15555 . -1) (undo-tree-id15557 . -1) (undo-tree-id15559 . -1) (undo-tree-id15561 . -1) (undo-tree-id15563 . -1) (undo-tree-id15565 . -1) (undo-tree-id15567 . -1) (undo-tree-id15569 . -1) (undo-tree-id15571 . -1) (undo-tree-id15573 . -1) (undo-tree-id15575 . -1) (undo-tree-id15577 . -1) (undo-tree-id15579 . -1) (undo-tree-id15581 . -1) (undo-tree-id15583 . -1) (undo-tree-id15585 . -1) (undo-tree-id15587 . -1) (undo-tree-id15589 . -1) (undo-tree-id15591 . -1) (undo-tree-id15593 . -1) (#("s" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68870) (undo-tree-id15595 . -1) (undo-tree-id15596 . -1) (undo-tree-id15598 . -1) (undo-tree-id15600 . -1) (undo-tree-id15602 . -1) (undo-tree-id15604 . -1) (undo-tree-id15606 . -1) (undo-tree-id15608 . -1) (undo-tree-id15610 . -1) (undo-tree-id15612 . -1) (undo-tree-id15614 . -1) (undo-tree-id15616 . -1) (undo-tree-id15618 . -1) (undo-tree-id15620 . -1) (undo-tree-id15622 . -1) (undo-tree-id15624 . -1) (undo-tree-id15626 . -1) (undo-tree-id15628 . -1) (undo-tree-id15630 . -1) (undo-tree-id15632 . -1) (undo-tree-id15634 . -1) (undo-tree-id15636 . -1) (undo-tree-id15638 . -1) (undo-tree-id15640 . -1) (undo-tree-id15642 . -1) (undo-tree-id15644 . -1) (undo-tree-id15646 . -1) (undo-tree-id15648 . -1) (undo-tree-id15650 . -1) (undo-tree-id15652 . -1) (undo-tree-id15654 . -1) (undo-tree-id15656 . -1) (undo-tree-id15658 . -1) (undo-tree-id15660 . -1) (undo-tree-id15662 . -1) (undo-tree-id15664 . -1) (undo-tree-id15666 . -1) (undo-tree-id15668 . -1) (undo-tree-id15670 . -1) (undo-tree-id15672 . -1) (undo-tree-id15674 . -1) (undo-tree-id15676 . -1) (undo-tree-id15678 . -1) (undo-tree-id15680 . -1) (undo-tree-id15682 . -1) (undo-tree-id15684 . -1) (undo-tree-id15686 . -1) (undo-tree-id15688 . -1) (undo-tree-id15690 . -1) (undo-tree-id15692 . -1) (undo-tree-id15694 . -1) (undo-tree-id15696 . -1) (undo-tree-id15698 . -1) (#("e" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68871) (undo-tree-id15700 . -1) (undo-tree-id15701 . -1) (undo-tree-id15703 . -1) (undo-tree-id15705 . -1) (undo-tree-id15707 . -1) (undo-tree-id15709 . -1) (undo-tree-id15711 . -1) (undo-tree-id15713 . -1) (undo-tree-id15715 . -1) (undo-tree-id15717 . -1) (undo-tree-id15719 . -1) (undo-tree-id15721 . -1) (undo-tree-id15723 . -1) (undo-tree-id15725 . -1) (undo-tree-id15727 . -1) (undo-tree-id15729 . -1) (undo-tree-id15731 . -1) (undo-tree-id15733 . -1) (undo-tree-id15735 . -1) (undo-tree-id15737 . -1) (undo-tree-id15739 . -1) (undo-tree-id15741 . -1) (undo-tree-id15743 . -1) (undo-tree-id15745 . -1) (undo-tree-id15747 . -1) (undo-tree-id15749 . -1) (undo-tree-id15751 . -1) (undo-tree-id15753 . -1) (undo-tree-id15755 . -1) (undo-tree-id15757 . -1) (undo-tree-id15759 . -1) (undo-tree-id15761 . -1) (undo-tree-id15763 . -1) (undo-tree-id15765 . -1) (undo-tree-id15767 . -1) (undo-tree-id15769 . -1) (undo-tree-id15771 . -1) (undo-tree-id15773 . -1) (undo-tree-id15775 . -1) (undo-tree-id15777 . -1) (undo-tree-id15779 . -1) (undo-tree-id15781 . -1) (undo-tree-id15783 . -1) (undo-tree-id15785 . -1) (undo-tree-id15787 . -1) (undo-tree-id15789 . -1) (undo-tree-id15791 . -1) (undo-tree-id15793 . -1) (undo-tree-id15795 . -1) (#("l" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68872) (undo-tree-id15797 . -1) (undo-tree-id15798 . -1) (undo-tree-id15800 . -1) (undo-tree-id15802 . -1) (undo-tree-id15804 . -1) (undo-tree-id15806 . -1) (undo-tree-id15808 . -1) (undo-tree-id15810 . -1) (undo-tree-id15812 . -1) (undo-tree-id15814 . -1) (undo-tree-id15816 . -1) (undo-tree-id15818 . -1) (undo-tree-id15820 . -1) (undo-tree-id15822 . -1) (undo-tree-id15824 . -1) (undo-tree-id15826 . -1) (undo-tree-id15828 . -1) (undo-tree-id15830 . -1) (undo-tree-id15832 . -1) (undo-tree-id15834 . -1) (undo-tree-id15836 . -1) (undo-tree-id15838 . -1) (undo-tree-id15840 . -1) (undo-tree-id15842 . -1) (undo-tree-id15844 . -1) (undo-tree-id15846 . -1) (undo-tree-id15848 . -1) (undo-tree-id15850 . -1) (undo-tree-id15852 . -1) (undo-tree-id15854 . -1) (undo-tree-id15856 . -1) (undo-tree-id15858 . -1) (undo-tree-id15860 . -1) (undo-tree-id15862 . -1) (undo-tree-id15864 . -1) (undo-tree-id15866 . -1) (undo-tree-id15868 . -1) (undo-tree-id15870 . -1) (undo-tree-id15872 . -1) (undo-tree-id15874 . -1) (undo-tree-id15876 . -1) (undo-tree-id15878 . -1) (undo-tree-id15880 . -1) (undo-tree-id15882 . -1) (undo-tree-id15884 . -1) (#("e" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68873) (undo-tree-id15886 . -1) (undo-tree-id15887 . -1) (undo-tree-id15889 . -1) (undo-tree-id15891 . -1) (undo-tree-id15893 . -1) (undo-tree-id15895 . -1) (undo-tree-id15897 . -1) (undo-tree-id15899 . -1) (undo-tree-id15901 . -1) (undo-tree-id15903 . -1) (undo-tree-id15905 . -1) (undo-tree-id15907 . -1) (undo-tree-id15909 . -1) (undo-tree-id15911 . -1) (undo-tree-id15913 . -1) (undo-tree-id15915 . -1) (undo-tree-id15917 . -1) (undo-tree-id15919 . -1) (undo-tree-id15921 . -1) (undo-tree-id15923 . -1) (undo-tree-id15925 . -1) (undo-tree-id15927 . -1) (undo-tree-id15929 . -1) (undo-tree-id15931 . -1) (undo-tree-id15933 . -1) (undo-tree-id15935 . -1) (undo-tree-id15937 . -1) (undo-tree-id15939 . -1) (undo-tree-id15941 . -1) (undo-tree-id15943 . -1) (undo-tree-id15945 . -1) (undo-tree-id15947 . -1) (undo-tree-id15949 . -1) (undo-tree-id15951 . -1) (undo-tree-id15953 . -1) (undo-tree-id15955 . -1) (undo-tree-id15957 . -1) (undo-tree-id15959 . -1) (undo-tree-id15961 . -1) (undo-tree-id15963 . -1) (undo-tree-id15965 . -1) (#("c" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68874) (undo-tree-id15967 . -1) (undo-tree-id15968 . -1) (undo-tree-id15970 . -1) (undo-tree-id15972 . -1) (undo-tree-id15974 . -1) (undo-tree-id15976 . -1) (undo-tree-id15978 . -1) (undo-tree-id15980 . -1) (undo-tree-id15982 . -1) (undo-tree-id15984 . -1) (undo-tree-id15986 . -1) (undo-tree-id15988 . -1) (undo-tree-id15990 . -1) (undo-tree-id15992 . -1) (undo-tree-id15994 . -1) (undo-tree-id15996 . -1) (undo-tree-id15998 . -1) (undo-tree-id16000 . -1) (undo-tree-id16002 . -1) (undo-tree-id16004 . -1) (undo-tree-id16006 . -1) (undo-tree-id16008 . -1) (undo-tree-id16010 . -1) (undo-tree-id16012 . -1) (undo-tree-id16014 . -1) (undo-tree-id16016 . -1) (#("t" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -68875) (undo-tree-id16017 . -1) (undo-tree-id16019 . -1) (undo-tree-id16021 . -1) (undo-tree-id16023 . -1) (undo-tree-id16025 . -1) 68876 (t 25147 27842 50806 65000)) ((68867 . 68876) (t 25147 27891 767477 753000)) (25147 27891 727381 855000) 0 nil])
([nil nil ((72989 . 72992) (72989 . 72991) (72978 . 73009) (#("
" 0 1 (fontified nil)) . 72978) (72975 . 72978) (72974 . 72976) (t 25150 19699 491159 754000)) nil (25151 22543 767753 27000) 0 nil])
nil
([nil nil ((70331 . 70334) (#("(" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -70331) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (#(")" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 70332) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (#("l" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -70332) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (#("i" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -70333) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (#("s" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -70334) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (#("t" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -70335) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (#(" " 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -70336) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (#("r" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -70337) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (#("e" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -70338) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (#("f" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -70339) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) 70340 (70337 . 70340) (#("i" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -70337) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (#("t" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -70338) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) 70339 (70336 . 70339) (70332 . 70336) (70330 . 70333) (70319 . 70329) (70318 . 70320) (#("\"" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -70318) (70312 . 70319) (70311 . 70313) (#("(" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -70311) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (#(")" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 70312) (#("z" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -70312) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (#("e" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -70313) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -1) (undo-tree-id3100 . -1) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1) (undo-tree-id3109 . -1) (undo-tree-id3110 . -1) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (undo-tree-id3114 . -1) (undo-tree-id3115 . -1) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) (undo-tree-id3219 . -1) (undo-tree-id3220 . -1) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (undo-tree-id3250 . -1) (undo-tree-id3251 . -1) (undo-tree-id3252 . -1) (undo-tree-id3253 . -1) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) (undo-tree-id3318 . -1) (undo-tree-id3319 . -1) (undo-tree-id3320 . -1) (undo-tree-id3321 . -1) (undo-tree-id3322 . -1) (undo-tree-id3323 . -1) (undo-tree-id3324 . -1) (undo-tree-id3325 . -1) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (undo-tree-id3328 . -1) (undo-tree-id3329 . -1) (undo-tree-id3330 . -1) (undo-tree-id3331 . -1) (#("t" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -70314) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (undo-tree-id3336 . -1) (undo-tree-id3337 . -1) (undo-tree-id3338 . -1) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) (undo-tree-id3348 . -1) (undo-tree-id3349 . -1) (undo-tree-id3350 . -1) (undo-tree-id3351 . -1) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (undo-tree-id3482 . -1) (undo-tree-id3483 . -1) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3487 . -1) (undo-tree-id3488 . -1) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) (undo-tree-id3491 . -1) (undo-tree-id3492 . -1) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) (undo-tree-id3500 . -1) (undo-tree-id3501 . -1) (undo-tree-id3502 . -1) (undo-tree-id3503 . -1) (undo-tree-id3504 . -1) (undo-tree-id3505 . -1) (undo-tree-id3506 . -1) (undo-tree-id3507 . -1) (undo-tree-id3508 . -1) (undo-tree-id3509 . -1) (undo-tree-id3510 . -1) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) (undo-tree-id3514 . -1) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) (undo-tree-id3517 . -1) (undo-tree-id3518 . -1) (undo-tree-id3519 . -1) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (undo-tree-id3523 . -1) (undo-tree-id3524 . -1) (undo-tree-id3525 . -1) (undo-tree-id3526 . -1) (undo-tree-id3527 . -1) (undo-tree-id3528 . -1) (undo-tree-id3529 . -1) (undo-tree-id3530 . -1) (undo-tree-id3531 . -1) (undo-tree-id3532 . -1) (undo-tree-id3533 . -1) (undo-tree-id3534 . -1) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (undo-tree-id3538 . -1) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (undo-tree-id3566 . -1) (undo-tree-id3567 . -1) (undo-tree-id3568 . -1) (#("t" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -70315) (undo-tree-id3569 . -1) (undo-tree-id3570 . -1) (undo-tree-id3571 . -1) (undo-tree-id3572 . -1) (undo-tree-id3573 . -1) (undo-tree-id3574 . -1) (undo-tree-id3575 . -1) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1) (undo-tree-id3624 . -1) (undo-tree-id3625 . -1) (undo-tree-id3626 . -1) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (undo-tree-id3629 . -1) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) (undo-tree-id3633 . -1) (undo-tree-id3634 . -1) (undo-tree-id3635 . -1) (undo-tree-id3636 . -1) (undo-tree-id3637 . -1) (undo-tree-id3638 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (undo-tree-id3651 . -1) (undo-tree-id3652 . -1) (undo-tree-id3653 . -1) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1) (undo-tree-id3662 . -1) (undo-tree-id3663 . -1) (undo-tree-id3664 . -1) (undo-tree-id3665 . -1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (undo-tree-id3670 . -1) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (undo-tree-id3682 . -1) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) (undo-tree-id3797 . -1) 70316 (#("e" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -70316) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (undo-tree-id3800 . -1) (undo-tree-id3801 . -1) (undo-tree-id3802 . -1) (undo-tree-id3803 . -1) (undo-tree-id3804 . -1) (undo-tree-id3805 . -1) (undo-tree-id3806 . -1) (undo-tree-id3807 . -1) (undo-tree-id3808 . -1) (undo-tree-id3809 . -1) (undo-tree-id3810 . -1) (undo-tree-id3811 . -1) (undo-tree-id3812 . -1) (undo-tree-id3813 . -1) (undo-tree-id3814 . -1) (undo-tree-id3815 . -1) (undo-tree-id3816 . -1) (undo-tree-id3817 . -1) (undo-tree-id3818 . -1) (undo-tree-id3819 . -1) (undo-tree-id3820 . -1) (undo-tree-id3821 . -1) (undo-tree-id3822 . -1) (undo-tree-id3823 . -1) (undo-tree-id3824 . -1) (undo-tree-id3825 . -1) (undo-tree-id3826 . -1) (undo-tree-id3827 . -1) (undo-tree-id3828 . -1) (undo-tree-id3829 . -1) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (undo-tree-id3832 . -1) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) (undo-tree-id3843 . -1) (undo-tree-id3844 . -1) (undo-tree-id3845 . -1) (undo-tree-id3846 . -1) (undo-tree-id3847 . -1) (undo-tree-id3848 . -1) (undo-tree-id3849 . -1) (undo-tree-id3850 . -1) (undo-tree-id3851 . -1) (undo-tree-id3852 . -1) (undo-tree-id3853 . -1) (undo-tree-id3854 . -1) (undo-tree-id3855 . -1) (undo-tree-id3856 . -1) (undo-tree-id3857 . -1) (undo-tree-id3858 . -1) (undo-tree-id3859 . -1) (undo-tree-id3860 . -1) (undo-tree-id3861 . -1) (undo-tree-id3862 . -1) (undo-tree-id3863 . -1) (undo-tree-id3864 . -1) (undo-tree-id3865 . -1) (undo-tree-id3866 . -1) (undo-tree-id3867 . -1) (undo-tree-id3868 . -1) (undo-tree-id3869 . -1) (undo-tree-id3870 . -1) (undo-tree-id3871 . -1) (undo-tree-id3872 . -1) (undo-tree-id3873 . -1) (undo-tree-id3874 . -1) (undo-tree-id3875 . -1) (undo-tree-id3876 . -1) (undo-tree-id3877 . -1) (undo-tree-id3878 . -1) (undo-tree-id3879 . -1) (undo-tree-id3880 . -1) (undo-tree-id3881 . -1) (undo-tree-id3882 . -1) (undo-tree-id3883 . -1) (undo-tree-id3884 . -1) (undo-tree-id3885 . -1) (undo-tree-id3886 . -1) (undo-tree-id3887 . -1) (undo-tree-id3888 . -1) (undo-tree-id3889 . -1) (undo-tree-id3890 . -1) (undo-tree-id3891 . -1) (undo-tree-id3892 . -1) (undo-tree-id3893 . -1) (undo-tree-id3894 . -1) (undo-tree-id3895 . -1) (undo-tree-id3896 . -1) (undo-tree-id3897 . -1) (undo-tree-id3898 . -1) (undo-tree-id3899 . -1) (undo-tree-id3900 . -1) (undo-tree-id3901 . -1) (undo-tree-id3902 . -1) (undo-tree-id3903 . -1) (undo-tree-id3904 . -1) (undo-tree-id3905 . -1) (undo-tree-id3906 . -1) (undo-tree-id3907 . -1) (undo-tree-id3908 . -1) (undo-tree-id3909 . -1) (undo-tree-id3910 . -1) (undo-tree-id3911 . -1) (undo-tree-id3912 . -1) (undo-tree-id3913 . -1) (undo-tree-id3914 . -1) (undo-tree-id3915 . -1) (undo-tree-id3916 . -1) (undo-tree-id3917 . -1) (undo-tree-id3918 . -1) (undo-tree-id3919 . -1) (undo-tree-id3920 . -1) (undo-tree-id3921 . -1) (undo-tree-id3922 . -1) (undo-tree-id3923 . -1) (undo-tree-id3924 . -1) (undo-tree-id3925 . -1) (undo-tree-id3926 . -1) (undo-tree-id3927 . -1) (undo-tree-id3928 . -1) (undo-tree-id3929 . -1) (undo-tree-id3930 . -1) (undo-tree-id3931 . -1) (undo-tree-id3932 . -1) (undo-tree-id3933 . -1) (undo-tree-id3934 . -1) (undo-tree-id3935 . -1) (undo-tree-id3936 . -1) (undo-tree-id3937 . -1) (undo-tree-id3938 . -1) (undo-tree-id3939 . -1) (undo-tree-id3940 . -1) (undo-tree-id3941 . -1) (undo-tree-id3942 . -1) (undo-tree-id3943 . -1) (undo-tree-id3944 . -1) (undo-tree-id3945 . -1) (undo-tree-id3946 . -1) (undo-tree-id3947 . -1) (undo-tree-id3948 . -1) (undo-tree-id3949 . -1) (undo-tree-id3950 . -1) (undo-tree-id3951 . -1) (undo-tree-id3952 . -1) (undo-tree-id3953 . -1) (undo-tree-id3954 . -1) (undo-tree-id3955 . -1) (undo-tree-id3956 . -1) (undo-tree-id3957 . -1) (undo-tree-id3958 . -1) (undo-tree-id3959 . -1) (undo-tree-id3960 . -1) (undo-tree-id3961 . -1) (undo-tree-id3962 . -1) (undo-tree-id3963 . -1) (undo-tree-id3964 . -1) (undo-tree-id3965 . -1) (undo-tree-id3966 . -1) (undo-tree-id3967 . -1) (undo-tree-id3968 . -1) (undo-tree-id3969 . -1) (undo-tree-id3970 . -1) (undo-tree-id3971 . -1) (undo-tree-id3972 . -1) (undo-tree-id3973 . -1) (undo-tree-id3974 . -1) (undo-tree-id3975 . -1) (undo-tree-id3976 . -1) (undo-tree-id3977 . -1) (undo-tree-id3978 . -1) (undo-tree-id3979 . -1) (undo-tree-id3980 . -1) (undo-tree-id3981 . -1) (undo-tree-id3982 . -1) (undo-tree-id3983 . -1) (undo-tree-id3984 . -1) (undo-tree-id3985 . -1) (undo-tree-id3986 . -1) (undo-tree-id3987 . -1) (undo-tree-id3988 . -1) (undo-tree-id3989 . -1) (undo-tree-id3990 . -1) (undo-tree-id3991 . -1) (undo-tree-id3992 . -1) (undo-tree-id3993 . -1) (undo-tree-id3994 . -1) (undo-tree-id3995 . -1) (undo-tree-id3996 . -1) (undo-tree-id3997 . -1) (undo-tree-id3998 . -1) (undo-tree-id3999 . -1) (undo-tree-id4000 . -1) (undo-tree-id4001 . -1) (undo-tree-id4002 . -1) (undo-tree-id4003 . -1) (undo-tree-id4004 . -1) (undo-tree-id4005 . -1) (undo-tree-id4006 . -1) (undo-tree-id4007 . -1) (undo-tree-id4008 . -1) (undo-tree-id4009 . -1) (undo-tree-id4010 . -1) (undo-tree-id4011 . -1) (undo-tree-id4012 . -1) (undo-tree-id4013 . -1) (undo-tree-id4014 . -1) (undo-tree-id4015 . -1) (undo-tree-id4016 . -1) (undo-tree-id4017 . -1) (undo-tree-id4018 . -1) (#("l" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -70317) (undo-tree-id4019 . -1) (undo-tree-id4020 . -1) (undo-tree-id4021 . -1) (undo-tree-id4022 . -1) (undo-tree-id4023 . -1) (undo-tree-id4024 . -1) (undo-tree-id4025 . -1) (undo-tree-id4026 . -1) (undo-tree-id4027 . -1) (undo-tree-id4028 . -1) (undo-tree-id4029 . -1) (undo-tree-id4030 . -1) (undo-tree-id4031 . -1) (undo-tree-id4032 . -1) (undo-tree-id4033 . -1) (undo-tree-id4034 . -1) (undo-tree-id4035 . -1) (undo-tree-id4036 . -1) (undo-tree-id4037 . -1) (undo-tree-id4038 . -1) (undo-tree-id4039 . -1) (undo-tree-id4040 . -1) (undo-tree-id4041 . -1) (undo-tree-id4042 . -1) (undo-tree-id4043 . -1) (undo-tree-id4044 . -1) (undo-tree-id4045 . -1) (undo-tree-id4046 . -1) (undo-tree-id4047 . -1) (undo-tree-id4048 . -1) (undo-tree-id4049 . -1) (undo-tree-id4050 . -1) (undo-tree-id4051 . -1) (undo-tree-id4052 . -1) (undo-tree-id4053 . -1) (undo-tree-id4054 . -1) (undo-tree-id4055 . -1) (undo-tree-id4056 . -1) (undo-tree-id4057 . -1) (undo-tree-id4058 . -1) (undo-tree-id4059 . -1) (undo-tree-id4060 . -1) (undo-tree-id4061 . -1) (undo-tree-id4062 . -1) (undo-tree-id4063 . -1) (undo-tree-id4064 . -1) (undo-tree-id4065 . -1) (undo-tree-id4066 . -1) (undo-tree-id4067 . -1) (undo-tree-id4068 . -1) (undo-tree-id4069 . -1) (undo-tree-id4070 . -1) (undo-tree-id4071 . -1) (undo-tree-id4072 . -1) (undo-tree-id4073 . -1) (undo-tree-id4074 . -1) (undo-tree-id4075 . -1) (undo-tree-id4076 . -1) (undo-tree-id4077 . -1) (undo-tree-id4078 . -1) (undo-tree-id4079 . -1) (undo-tree-id4080 . -1) (undo-tree-id4081 . -1) (undo-tree-id4082 . -1) (undo-tree-id4083 . -1) (undo-tree-id4084 . -1) (undo-tree-id4085 . -1) (undo-tree-id4086 . -1) (undo-tree-id4087 . -1) (undo-tree-id4088 . -1) (undo-tree-id4089 . -1) (undo-tree-id4090 . -1) (undo-tree-id4091 . -1) (undo-tree-id4092 . -1) (undo-tree-id4093 . -1) (undo-tree-id4094 . -1) (undo-tree-id4095 . -1) (undo-tree-id4096 . -1) (undo-tree-id4097 . -1) (undo-tree-id4098 . -1) (undo-tree-id4099 . -1) (undo-tree-id4100 . -1) (undo-tree-id4101 . -1) (undo-tree-id4102 . -1) (undo-tree-id4103 . -1) (undo-tree-id4104 . -1) (undo-tree-id4105 . -1) (undo-tree-id4106 . -1) (undo-tree-id4107 . -1) (undo-tree-id4108 . -1) (undo-tree-id4109 . -1) (undo-tree-id4110 . -1) (undo-tree-id4111 . -1) (undo-tree-id4112 . -1) (undo-tree-id4113 . -1) (undo-tree-id4114 . -1) (undo-tree-id4115 . -1) (undo-tree-id4116 . -1) (undo-tree-id4117 . -1) (undo-tree-id4118 . -1) (undo-tree-id4119 . -1) (undo-tree-id4120 . -1) (undo-tree-id4121 . -1) (undo-tree-id4122 . -1) (undo-tree-id4123 . -1) (undo-tree-id4124 . -1) (undo-tree-id4125 . -1) (undo-tree-id4126 . -1) (undo-tree-id4127 . -1) (undo-tree-id4128 . -1) (undo-tree-id4129 . -1) (undo-tree-id4130 . -1) (undo-tree-id4131 . -1) (undo-tree-id4132 . -1) (undo-tree-id4133 . -1) (undo-tree-id4134 . -1) (undo-tree-id4135 . -1) (undo-tree-id4136 . -1) (undo-tree-id4137 . -1) (undo-tree-id4138 . -1) (undo-tree-id4139 . -1) (undo-tree-id4140 . -1) (undo-tree-id4141 . -1) (undo-tree-id4142 . -1) (undo-tree-id4143 . -1) (undo-tree-id4144 . -1) (undo-tree-id4145 . -1) (undo-tree-id4146 . -1) (undo-tree-id4147 . -1) (undo-tree-id4148 . -1) (undo-tree-id4149 . -1) (undo-tree-id4150 . -1) (undo-tree-id4151 . -1) (undo-tree-id4152 . -1) (undo-tree-id4153 . -1) (undo-tree-id4154 . -1) (undo-tree-id4155 . -1) (undo-tree-id4156 . -1) (undo-tree-id4157 . -1) (undo-tree-id4158 . -1) (undo-tree-id4159 . -1) (undo-tree-id4160 . -1) (undo-tree-id4161 . -1) (undo-tree-id4162 . -1) (undo-tree-id4163 . -1) (undo-tree-id4164 . -1) (undo-tree-id4165 . -1) (undo-tree-id4166 . -1) (undo-tree-id4167 . -1) (undo-tree-id4168 . -1) (undo-tree-id4169 . -1) (undo-tree-id4170 . -1) (undo-tree-id4171 . -1) (undo-tree-id4172 . -1) (undo-tree-id4173 . -1) (undo-tree-id4174 . -1) (undo-tree-id4175 . -1) (undo-tree-id4176 . -1) (undo-tree-id4177 . -1) (undo-tree-id4178 . -1) (undo-tree-id4179 . -1) (undo-tree-id4180 . -1) (undo-tree-id4181 . -1) (undo-tree-id4182 . -1) (undo-tree-id4183 . -1) (undo-tree-id4184 . -1) (undo-tree-id4185 . -1) (undo-tree-id4186 . -1) (undo-tree-id4187 . -1) (undo-tree-id4188 . -1) (undo-tree-id4189 . -1) (undo-tree-id4190 . -1) (undo-tree-id4191 . -1) (undo-tree-id4192 . -1) (undo-tree-id4193 . -1) (undo-tree-id4194 . -1) (undo-tree-id4195 . -1) (undo-tree-id4196 . -1) (undo-tree-id4197 . -1) (undo-tree-id4198 . -1) (undo-tree-id4199 . -1) (undo-tree-id4200 . -1) (undo-tree-id4201 . -1) (undo-tree-id4202 . -1) (undo-tree-id4203 . -1) (undo-tree-id4204 . -1) (undo-tree-id4205 . -1) (undo-tree-id4206 . -1) (undo-tree-id4207 . -1) (undo-tree-id4208 . -1) (undo-tree-id4209 . -1) (undo-tree-id4210 . -1) (undo-tree-id4211 . -1) (undo-tree-id4212 . -1) (undo-tree-id4213 . -1) (undo-tree-id4214 . -1) (undo-tree-id4215 . -1) (undo-tree-id4216 . -1) (undo-tree-id4217 . -1) (undo-tree-id4218 . -1) (undo-tree-id4219 . -1) (undo-tree-id4220 . -1) (undo-tree-id4221 . -1) (undo-tree-id4222 . -1) (undo-tree-id4223 . -1) (undo-tree-id4224 . -1) (undo-tree-id4225 . -1) (undo-tree-id4226 . -1) (undo-tree-id4227 . -1) (undo-tree-id4228 . -1) (undo-tree-id4229 . -1) (undo-tree-id4230 . -1) (undo-tree-id4231 . -1) (#("d" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -70318) (undo-tree-id4232 . -1) (undo-tree-id4233 . -1) (undo-tree-id4234 . -1) (undo-tree-id4235 . -1) (undo-tree-id4236 . -1) (undo-tree-id4237 . -1) (undo-tree-id4238 . -1) (undo-tree-id4239 . -1) (undo-tree-id4240 . -1) (undo-tree-id4241 . -1) (undo-tree-id4242 . -1) (undo-tree-id4243 . -1) (undo-tree-id4244 . -1) (undo-tree-id4245 . -1) (undo-tree-id4246 . -1) (undo-tree-id4247 . -1) (undo-tree-id4248 . -1) (undo-tree-id4249 . -1) (undo-tree-id4250 . -1) (undo-tree-id4251 . -1) (undo-tree-id4252 . -1) (undo-tree-id4253 . -1) (undo-tree-id4254 . -1) (undo-tree-id4255 . -1) (undo-tree-id4256 . -1) (undo-tree-id4257 . -1) (undo-tree-id4258 . -1) (undo-tree-id4259 . -1) (undo-tree-id4260 . -1) (undo-tree-id4261 . -1) (undo-tree-id4262 . -1) (undo-tree-id4263 . -1) (undo-tree-id4264 . -1) (undo-tree-id4265 . -1) (undo-tree-id4266 . -1) (undo-tree-id4267 . -1) (undo-tree-id4268 . -1) (undo-tree-id4269 . -1) (undo-tree-id4270 . -1) (undo-tree-id4271 . -1) (undo-tree-id4272 . -1) (undo-tree-id4273 . -1) (undo-tree-id4274 . -1) (undo-tree-id4275 . -1) (undo-tree-id4276 . -1) (undo-tree-id4277 . -1) (undo-tree-id4278 . -1) (undo-tree-id4279 . -1) (undo-tree-id4280 . -1) (undo-tree-id4281 . -1) (undo-tree-id4282 . -1) (undo-tree-id4283 . -1) (undo-tree-id4284 . -1) (undo-tree-id4285 . -1) (undo-tree-id4286 . -1) (undo-tree-id4287 . -1) (undo-tree-id4288 . -1) (undo-tree-id4289 . -1) (undo-tree-id4290 . -1) (undo-tree-id4291 . -1) (undo-tree-id4292 . -1) (undo-tree-id4293 . -1) (undo-tree-id4294 . -1) (undo-tree-id4295 . -1) (undo-tree-id4296 . -1) (undo-tree-id4297 . -1) (undo-tree-id4298 . -1) (undo-tree-id4299 . -1) (undo-tree-id4300 . -1) (undo-tree-id4301 . -1) (undo-tree-id4302 . -1) (undo-tree-id4303 . -1) (undo-tree-id4304 . -1) (undo-tree-id4305 . -1) (undo-tree-id4306 . -1) (undo-tree-id4307 . -1) (undo-tree-id4308 . -1) (undo-tree-id4309 . -1) (undo-tree-id4310 . -1) (undo-tree-id4311 . -1) (undo-tree-id4312 . -1) (undo-tree-id4313 . -1) (undo-tree-id4314 . -1) (undo-tree-id4315 . -1) (undo-tree-id4316 . -1) (undo-tree-id4317 . -1) (undo-tree-id4318 . -1) (undo-tree-id4319 . -1) (undo-tree-id4320 . -1) (undo-tree-id4321 . -1) (undo-tree-id4322 . -1) (undo-tree-id4323 . -1) (undo-tree-id4324 . -1) (undo-tree-id4325 . -1) (undo-tree-id4326 . -1) (undo-tree-id4327 . -1) (undo-tree-id4328 . -1) (undo-tree-id4329 . -1) (undo-tree-id4330 . -1) (undo-tree-id4331 . -1) (undo-tree-id4332 . -1) (undo-tree-id4333 . -1) (undo-tree-id4334 . -1) (undo-tree-id4335 . -1) (undo-tree-id4336 . -1) (undo-tree-id4337 . -1) (undo-tree-id4338 . -1) (undo-tree-id4339 . -1) (undo-tree-id4340 . -1) (undo-tree-id4341 . -1) (undo-tree-id4342 . -1) (undo-tree-id4343 . -1) (undo-tree-id4344 . -1) (undo-tree-id4345 . -1) (undo-tree-id4346 . -1) (undo-tree-id4347 . -1) (undo-tree-id4348 . -1) (undo-tree-id4349 . -1) (undo-tree-id4350 . -1) (undo-tree-id4351 . -1) (undo-tree-id4352 . -1) (undo-tree-id4353 . -1) (undo-tree-id4354 . -1) (undo-tree-id4355 . -1) (undo-tree-id4356 . -1) (undo-tree-id4357 . -1) (undo-tree-id4358 . -1) (undo-tree-id4359 . -1) (undo-tree-id4360 . -1) (undo-tree-id4361 . -1) (undo-tree-id4362 . -1) (undo-tree-id4363 . -1) (undo-tree-id4364 . -1) (undo-tree-id4365 . -1) (undo-tree-id4366 . -1) (undo-tree-id4367 . -1) (undo-tree-id4368 . -1) (undo-tree-id4369 . -1) (undo-tree-id4370 . -1) (undo-tree-id4371 . -1) (undo-tree-id4372 . -1) (undo-tree-id4373 . -1) (undo-tree-id4374 . -1) (undo-tree-id4375 . -1) (undo-tree-id4376 . -1) (undo-tree-id4377 . -1) (undo-tree-id4378 . -1) (undo-tree-id4379 . -1) (undo-tree-id4380 . -1) (undo-tree-id4381 . -1) (undo-tree-id4382 . -1) (undo-tree-id4383 . -1) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) (undo-tree-id4390 . -1) (undo-tree-id4391 . -1) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1) (undo-tree-id4394 . -1) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (undo-tree-id4402 . -1) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) (undo-tree-id4405 . -1) (undo-tree-id4406 . -1) (undo-tree-id4407 . -1) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) (undo-tree-id4410 . -1) (undo-tree-id4411 . -1) (undo-tree-id4412 . -1) (undo-tree-id4413 . -1) (undo-tree-id4414 . -1) (undo-tree-id4415 . -1) (undo-tree-id4416 . -1) (undo-tree-id4417 . -1) (undo-tree-id4418 . -1) (undo-tree-id4419 . -1) (undo-tree-id4420 . -1) (undo-tree-id4421 . -1) (undo-tree-id4422 . -1) (undo-tree-id4423 . -1) (undo-tree-id4424 . -1) (undo-tree-id4425 . -1) (undo-tree-id4426 . -1) (undo-tree-id4427 . -1) (undo-tree-id4428 . -1) (undo-tree-id4429 . -1) (undo-tree-id4430 . -1) (undo-tree-id4431 . -1) (undo-tree-id4432 . -1) (undo-tree-id4433 . -1) (undo-tree-id4434 . -1) (undo-tree-id4435 . -1) (undo-tree-id4436 . -1) (#("e" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -70319) (undo-tree-id4437 . -1) (undo-tree-id4438 . -1) (undo-tree-id4439 . -1) (undo-tree-id4440 . -1) (undo-tree-id4441 . -1) (undo-tree-id4442 . -1) (undo-tree-id4443 . -1) (undo-tree-id4444 . -1) (undo-tree-id4445 . -1) (undo-tree-id4446 . -1) (undo-tree-id4447 . -1) (undo-tree-id4448 . -1) (undo-tree-id4449 . -1) (undo-tree-id4450 . -1) (undo-tree-id4451 . -1) (undo-tree-id4452 . -1) (undo-tree-id4453 . -1) (undo-tree-id4454 . -1) (undo-tree-id4455 . -1) (undo-tree-id4456 . -1) (undo-tree-id4457 . -1) (undo-tree-id4458 . -1) (undo-tree-id4459 . -1) (undo-tree-id4460 . -1) (undo-tree-id4461 . -1) (undo-tree-id4462 . -1) (undo-tree-id4463 . -1) (undo-tree-id4464 . -1) (undo-tree-id4465 . -1) (undo-tree-id4466 . -1) (undo-tree-id4467 . -1) (undo-tree-id4468 . -1) (undo-tree-id4469 . -1) (undo-tree-id4470 . -1) (undo-tree-id4471 . -1) (undo-tree-id4472 . -1) (undo-tree-id4473 . -1) (undo-tree-id4474 . -1) (undo-tree-id4475 . -1) (undo-tree-id4476 . -1) (undo-tree-id4477 . -1) (undo-tree-id4478 . -1) (undo-tree-id4479 . -1) (undo-tree-id4480 . -1) (undo-tree-id4481 . -1) (undo-tree-id4482 . -1) (undo-tree-id4483 . -1) (undo-tree-id4484 . -1) (undo-tree-id4485 . -1) (undo-tree-id4486 . -1) (undo-tree-id4487 . -1) (undo-tree-id4488 . -1) (undo-tree-id4489 . -1) (undo-tree-id4490 . -1) (undo-tree-id4491 . -1) (undo-tree-id4492 . -1) (undo-tree-id4493 . -1) (undo-tree-id4494 . -1) (undo-tree-id4495 . -1) (undo-tree-id4496 . -1) (undo-tree-id4497 . -1) (undo-tree-id4498 . -1) (undo-tree-id4499 . -1) (undo-tree-id4500 . -1) (undo-tree-id4501 . -1) (undo-tree-id4502 . -1) (undo-tree-id4503 . -1) (undo-tree-id4504 . -1) (undo-tree-id4505 . -1) (undo-tree-id4506 . -1) (undo-tree-id4507 . -1) (undo-tree-id4508 . -1) (undo-tree-id4509 . -1) (undo-tree-id4510 . -1) (undo-tree-id4511 . -1) (undo-tree-id4512 . -1) (undo-tree-id4513 . -1) (undo-tree-id4514 . -1) (undo-tree-id4515 . -1) (undo-tree-id4516 . -1) (undo-tree-id4517 . -1) (undo-tree-id4518 . -1) (undo-tree-id4519 . -1) (undo-tree-id4520 . -1) (undo-tree-id4521 . -1) (undo-tree-id4522 . -1) (undo-tree-id4523 . -1) (undo-tree-id4524 . -1) (undo-tree-id4525 . -1) (undo-tree-id4526 . -1) (undo-tree-id4527 . -1) (undo-tree-id4528 . -1) (undo-tree-id4529 . -1) (undo-tree-id4530 . -1) (undo-tree-id4531 . -1) (undo-tree-id4532 . -1) (undo-tree-id4533 . -1) (undo-tree-id4534 . -1) (undo-tree-id4535 . -1) (undo-tree-id4536 . -1) (undo-tree-id4537 . -1) (undo-tree-id4538 . -1) (undo-tree-id4539 . -1) (undo-tree-id4540 . -1) (undo-tree-id4541 . -1) (undo-tree-id4542 . -1) (undo-tree-id4543 . -1) (undo-tree-id4544 . -1) (undo-tree-id4545 . -1) (undo-tree-id4546 . -1) (undo-tree-id4547 . -1) (undo-tree-id4548 . -1) (undo-tree-id4549 . -1) (undo-tree-id4550 . -1) (undo-tree-id4551 . -1) (undo-tree-id4552 . -1) (undo-tree-id4553 . -1) (undo-tree-id4554 . -1) (undo-tree-id4555 . -1) (undo-tree-id4556 . -1) (undo-tree-id4557 . -1) (undo-tree-id4558 . -1) (undo-tree-id4559 . -1) (undo-tree-id4560 . -1) (undo-tree-id4561 . -1) (undo-tree-id4562 . -1) (undo-tree-id4563 . -1) (undo-tree-id4564 . -1) (undo-tree-id4565 . -1) (undo-tree-id4566 . -1) (undo-tree-id4567 . -1) (undo-tree-id4568 . -1) (undo-tree-id4569 . -1) (undo-tree-id4570 . -1) (undo-tree-id4571 . -1) (undo-tree-id4572 . -1) (undo-tree-id4573 . -1) (undo-tree-id4574 . -1) (undo-tree-id4575 . -1) (undo-tree-id4576 . -1) (undo-tree-id4577 . -1) (undo-tree-id4578 . -1) (undo-tree-id4579 . -1) (undo-tree-id4580 . -1) (undo-tree-id4581 . -1) (undo-tree-id4582 . -1) (undo-tree-id4583 . -1) (undo-tree-id4584 . -1) (undo-tree-id4585 . -1) (undo-tree-id4586 . -1) (undo-tree-id4587 . -1) (undo-tree-id4588 . -1) (undo-tree-id4589 . -1) (undo-tree-id4590 . -1) (undo-tree-id4591 . -1) (undo-tree-id4592 . -1) (undo-tree-id4593 . -1) (undo-tree-id4594 . -1) (undo-tree-id4595 . -1) (undo-tree-id4596 . -1) (undo-tree-id4597 . -1) (undo-tree-id4598 . -1) (undo-tree-id4599 . -1) (undo-tree-id4600 . -1) (undo-tree-id4601 . -1) (undo-tree-id4602 . -1) (undo-tree-id4603 . -1) (undo-tree-id4604 . -1) (undo-tree-id4605 . -1) (undo-tree-id4606 . -1) (undo-tree-id4607 . -1) (undo-tree-id4608 . -1) (undo-tree-id4609 . -1) (undo-tree-id4610 . -1) (undo-tree-id4611 . -1) (undo-tree-id4612 . -1) (undo-tree-id4613 . -1) (undo-tree-id4614 . -1) (undo-tree-id4615 . -1) (undo-tree-id4616 . -1) (undo-tree-id4617 . -1) (undo-tree-id4618 . -1) (undo-tree-id4619 . -1) (undo-tree-id4620 . -1) (undo-tree-id4621 . -1) (undo-tree-id4622 . -1) (undo-tree-id4623 . -1) (undo-tree-id4624 . -1) (undo-tree-id4625 . -1) (undo-tree-id4626 . -1) (undo-tree-id4627 . -1) (undo-tree-id4628 . -1) (undo-tree-id4629 . -1) (undo-tree-id4630 . -1) (undo-tree-id4631 . -1) (undo-tree-id4632 . -1) (undo-tree-id4633 . -1) (#("s" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -70320) (undo-tree-id4634 . -1) (undo-tree-id4635 . -1) (undo-tree-id4636 . -1) (undo-tree-id4637 . -1) (undo-tree-id4638 . -1) (undo-tree-id4639 . -1) (undo-tree-id4640 . -1) (undo-tree-id4641 . -1) (undo-tree-id4642 . -1) (undo-tree-id4643 . -1) (undo-tree-id4644 . -1) (undo-tree-id4645 . -1) (undo-tree-id4646 . -1) (undo-tree-id4647 . -1) (undo-tree-id4648 . -1) (undo-tree-id4649 . -1) (undo-tree-id4650 . -1) (undo-tree-id4651 . -1) (undo-tree-id4652 . -1) (undo-tree-id4653 . -1) (undo-tree-id4654 . -1) (undo-tree-id4655 . -1) (undo-tree-id4656 . -1) (undo-tree-id4657 . -1) (undo-tree-id4658 . -1) (undo-tree-id4659 . -1) (undo-tree-id4660 . -1) (undo-tree-id4661 . -1) (undo-tree-id4662 . -1) (undo-tree-id4663 . -1) (undo-tree-id4664 . -1) (undo-tree-id4665 . -1) (undo-tree-id4666 . -1) (undo-tree-id4667 . -1) (undo-tree-id4668 . -1) (undo-tree-id4669 . -1) (undo-tree-id4670 . -1) (undo-tree-id4671 . -1) (undo-tree-id4672 . -1) (undo-tree-id4673 . -1) (undo-tree-id4674 . -1) (undo-tree-id4675 . -1) (undo-tree-id4676 . -1) (undo-tree-id4677 . -1) (undo-tree-id4678 . -1) (undo-tree-id4679 . -1) (undo-tree-id4680 . -1) (undo-tree-id4681 . -1) (undo-tree-id4682 . -1) (undo-tree-id4683 . -1) (undo-tree-id4684 . -1) (undo-tree-id4685 . -1) (undo-tree-id4686 . -1) (undo-tree-id4687 . -1) (undo-tree-id4688 . -1) (undo-tree-id4689 . -1) (undo-tree-id4690 . -1) (undo-tree-id4691 . -1) (undo-tree-id4692 . -1) (undo-tree-id4693 . -1) (undo-tree-id4694 . -1) (undo-tree-id4695 . -1) (undo-tree-id4696 . -1) (undo-tree-id4697 . -1) (undo-tree-id4698 . -1) (undo-tree-id4699 . -1) (undo-tree-id4700 . -1) (undo-tree-id4701 . -1) (undo-tree-id4702 . -1) (undo-tree-id4703 . -1) (undo-tree-id4704 . -1) (undo-tree-id4705 . -1) (undo-tree-id4706 . -1) (undo-tree-id4707 . -1) (undo-tree-id4708 . -1) (undo-tree-id4709 . -1) (undo-tree-id4710 . -1) (undo-tree-id4711 . -1) (undo-tree-id4712 . -1) (undo-tree-id4713 . -1) (undo-tree-id4714 . -1) (undo-tree-id4715 . -1) (undo-tree-id4716 . -1) (undo-tree-id4717 . -1) (undo-tree-id4718 . -1) (undo-tree-id4719 . -1) (undo-tree-id4720 . -1) (undo-tree-id4721 . -1) (undo-tree-id4722 . -1) (undo-tree-id4723 . -1) (undo-tree-id4724 . -1) (undo-tree-id4725 . -1) (undo-tree-id4726 . -1) (undo-tree-id4727 . -1) (undo-tree-id4728 . -1) (undo-tree-id4729 . -1) (undo-tree-id4730 . -1) (undo-tree-id4731 . -1) (undo-tree-id4732 . -1) (undo-tree-id4733 . -1) (undo-tree-id4734 . -1) (undo-tree-id4735 . -1) (undo-tree-id4736 . -1) (undo-tree-id4737 . -1) (undo-tree-id4738 . -1) (undo-tree-id4739 . -1) (undo-tree-id4740 . -1) (undo-tree-id4741 . -1) (undo-tree-id4742 . -1) (undo-tree-id4743 . -1) (undo-tree-id4744 . -1) (undo-tree-id4745 . -1) (undo-tree-id4746 . -1) (undo-tree-id4747 . -1) (undo-tree-id4748 . -1) (undo-tree-id4749 . -1) (undo-tree-id4750 . -1) (undo-tree-id4751 . -1) (undo-tree-id4752 . -1) (undo-tree-id4753 . -1) (undo-tree-id4754 . -1) (undo-tree-id4755 . -1) (undo-tree-id4756 . -1) (undo-tree-id4757 . -1) (undo-tree-id4758 . -1) (undo-tree-id4759 . -1) (undo-tree-id4760 . -1) (undo-tree-id4761 . -1) (undo-tree-id4762 . -1) (undo-tree-id4763 . -1) (undo-tree-id4764 . -1) (undo-tree-id4765 . -1) (undo-tree-id4766 . -1) (undo-tree-id4767 . -1) (undo-tree-id4768 . -1) (undo-tree-id4769 . -1) (undo-tree-id4770 . -1) (undo-tree-id4771 . -1) (undo-tree-id4772 . -1) (undo-tree-id4773 . -1) (undo-tree-id4774 . -1) (undo-tree-id4775 . -1) (undo-tree-id4776 . -1) (undo-tree-id4777 . -1) (undo-tree-id4778 . -1) (undo-tree-id4779 . -1) (undo-tree-id4780 . -1) (undo-tree-id4781 . -1) (undo-tree-id4782 . -1) (undo-tree-id4783 . -1) (undo-tree-id4784 . -1) (undo-tree-id4785 . -1) (undo-tree-id4786 . -1) (undo-tree-id4787 . -1) (undo-tree-id4788 . -1) (undo-tree-id4789 . -1) (undo-tree-id4790 . -1) (undo-tree-id4791 . -1) (undo-tree-id4792 . -1) (undo-tree-id4793 . -1) (undo-tree-id4794 . -1) (undo-tree-id4795 . -1) (undo-tree-id4796 . -1) (undo-tree-id4797 . -1) (undo-tree-id4798 . -1) (undo-tree-id4799 . -1) (undo-tree-id4800 . -1) (undo-tree-id4801 . -1) (undo-tree-id4802 . -1) (undo-tree-id4803 . -1) (undo-tree-id4804 . -1) (undo-tree-id4805 . -1) (undo-tree-id4806 . -1) (undo-tree-id4807 . -1) (undo-tree-id4808 . -1) (undo-tree-id4809 . -1) (undo-tree-id4810 . -1) (undo-tree-id4811 . -1) (undo-tree-id4812 . -1) (undo-tree-id4813 . -1) (undo-tree-id4814 . -1) (undo-tree-id4815 . -1) (undo-tree-id4816 . -1) (undo-tree-id4817 . -1) (undo-tree-id4818 . -1) (undo-tree-id4819 . -1) (undo-tree-id4820 . -1) (undo-tree-id4821 . -1) (undo-tree-id4822 . -1) (#("k" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -70321) (undo-tree-id4823 . -1) (undo-tree-id4824 . -1) (undo-tree-id4825 . -1) (undo-tree-id4826 . -1) (undo-tree-id4827 . -1) (undo-tree-id4828 . -1) (undo-tree-id4829 . -1) (undo-tree-id4830 . -1) (undo-tree-id4831 . -1) (undo-tree-id4832 . -1) (undo-tree-id4833 . -1) (undo-tree-id4834 . -1) (undo-tree-id4835 . -1) (undo-tree-id4836 . -1) (undo-tree-id4837 . -1) (undo-tree-id4838 . -1) (undo-tree-id4839 . -1) (undo-tree-id4840 . -1) (undo-tree-id4841 . -1) (undo-tree-id4842 . -1) (undo-tree-id4843 . -1) (undo-tree-id4844 . -1) (undo-tree-id4845 . -1) (undo-tree-id4846 . -1) (undo-tree-id4847 . -1) (undo-tree-id4848 . -1) (undo-tree-id4849 . -1) (undo-tree-id4850 . -1) (undo-tree-id4851 . -1) (undo-tree-id4852 . -1) (undo-tree-id4853 . -1) (undo-tree-id4854 . -1) (undo-tree-id4855 . -1) (undo-tree-id4856 . -1) (undo-tree-id4857 . -1) (undo-tree-id4858 . -1) (undo-tree-id4859 . -1) (undo-tree-id4860 . -1) (undo-tree-id4861 . -1) (undo-tree-id4862 . -1) (undo-tree-id4863 . -1) (undo-tree-id4864 . -1) (undo-tree-id4865 . -1) (undo-tree-id4866 . -1) (undo-tree-id4867 . -1) (undo-tree-id4868 . -1) (undo-tree-id4869 . -1) (undo-tree-id4870 . -1) (undo-tree-id4871 . -1) (undo-tree-id4872 . -1) (undo-tree-id4873 . -1) (undo-tree-id4874 . -1) (undo-tree-id4875 . -1) (undo-tree-id4876 . -1) (undo-tree-id4877 . -1) (undo-tree-id4878 . -1) (undo-tree-id4879 . -1) (undo-tree-id4880 . -1) (undo-tree-id4881 . -1) (undo-tree-id4882 . -1) (undo-tree-id4883 . -1) (undo-tree-id4884 . -1) (undo-tree-id4885 . -1) (undo-tree-id4886 . -1) (undo-tree-id4887 . -1) (undo-tree-id4888 . -1) (undo-tree-id4889 . -1) (undo-tree-id4890 . -1) (undo-tree-id4891 . -1) (undo-tree-id4892 . -1) (undo-tree-id4893 . -1) (undo-tree-id4894 . -1) (undo-tree-id4895 . -1) (undo-tree-id4896 . -1) (undo-tree-id4897 . -1) (undo-tree-id4898 . -1) (undo-tree-id4899 . -1) (undo-tree-id4900 . -1) (undo-tree-id4901 . -1) (undo-tree-id4902 . -1) (undo-tree-id4903 . -1) (undo-tree-id4904 . -1) (undo-tree-id4905 . -1) (undo-tree-id4906 . -1) (undo-tree-id4907 . -1) (undo-tree-id4908 . -1) (undo-tree-id4909 . -1) (undo-tree-id4910 . -1) (undo-tree-id4911 . -1) (undo-tree-id4912 . -1) (undo-tree-id4913 . -1) (undo-tree-id4914 . -1) (undo-tree-id4915 . -1) (undo-tree-id4916 . -1) (undo-tree-id4917 . -1) (undo-tree-id4918 . -1) (undo-tree-id4919 . -1) (undo-tree-id4920 . -1) (undo-tree-id4921 . -1) (undo-tree-id4922 . -1) (undo-tree-id4923 . -1) (undo-tree-id4924 . -1) (undo-tree-id4925 . -1) (undo-tree-id4926 . -1) (undo-tree-id4927 . -1) (undo-tree-id4928 . -1) (undo-tree-id4929 . -1) (undo-tree-id4930 . -1) (undo-tree-id4931 . -1) (undo-tree-id4932 . -1) (undo-tree-id4933 . -1) (undo-tree-id4934 . -1) (undo-tree-id4935 . -1) (undo-tree-id4936 . -1) (undo-tree-id4937 . -1) (undo-tree-id4938 . -1) (undo-tree-id4939 . -1) (undo-tree-id4940 . -1) (undo-tree-id4941 . -1) (undo-tree-id4942 . -1) (undo-tree-id4943 . -1) (undo-tree-id4944 . -1) (undo-tree-id4945 . -1) (undo-tree-id4946 . -1) (undo-tree-id4947 . -1) (undo-tree-id4948 . -1) (undo-tree-id4949 . -1) (undo-tree-id4950 . -1) (undo-tree-id4951 . -1) (undo-tree-id4952 . -1) (undo-tree-id4953 . -1) (undo-tree-id4954 . -1) (undo-tree-id4955 . -1) (undo-tree-id4956 . -1) (undo-tree-id4957 . -1) (undo-tree-id4958 . -1) (undo-tree-id4959 . -1) (undo-tree-id4960 . -1) (undo-tree-id4961 . -1) (undo-tree-id4962 . -1) (undo-tree-id4963 . -1) (undo-tree-id4964 . -1) (undo-tree-id4965 . -1) (undo-tree-id4966 . -1) (undo-tree-id4967 . -1) (undo-tree-id4968 . -1) (undo-tree-id4969 . -1) (undo-tree-id4970 . -1) (undo-tree-id4971 . -1) (undo-tree-id4972 . -1) (undo-tree-id4973 . -1) (undo-tree-id4974 . -1) (undo-tree-id4975 . -1) (undo-tree-id4976 . -1) (undo-tree-id4977 . -1) (undo-tree-id4978 . -1) (undo-tree-id4979 . -1) (undo-tree-id4980 . -1) (undo-tree-id4981 . -1) (undo-tree-id4982 . -1) (undo-tree-id4983 . -1) (undo-tree-id4984 . -1) (undo-tree-id4985 . -1) (undo-tree-id4986 . -1) (undo-tree-id4987 . -1) (undo-tree-id4988 . -1) (undo-tree-id4989 . -1) (undo-tree-id4990 . -1) (undo-tree-id4991 . -1) (undo-tree-id4992 . -1) (undo-tree-id4993 . -1) (undo-tree-id4994 . -1) (undo-tree-id4995 . -1) (undo-tree-id4996 . -1) (undo-tree-id4997 . -1) (undo-tree-id4998 . -1) (undo-tree-id4999 . -1) (undo-tree-id5000 . -1) (undo-tree-id5001 . -1) (undo-tree-id5002 . -1) (undo-tree-id5003 . -1) (#("-" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -70322) (undo-tree-id5004 . -1) (undo-tree-id5005 . -1) (undo-tree-id5006 . -1) (undo-tree-id5007 . -1) (undo-tree-id5008 . -1) (undo-tree-id5009 . -1) (undo-tree-id5010 . -1) (undo-tree-id5011 . -1) (undo-tree-id5012 . -1) (undo-tree-id5013 . -1) (undo-tree-id5014 . -1) (undo-tree-id5015 . -1) (undo-tree-id5016 . -1) (undo-tree-id5017 . -1) (undo-tree-id5018 . -1) (undo-tree-id5019 . -1) (undo-tree-id5020 . -1) (undo-tree-id5021 . -1) (undo-tree-id5022 . -1) (undo-tree-id5023 . -1) (undo-tree-id5024 . -1) (undo-tree-id5025 . -1) (undo-tree-id5026 . -1) (undo-tree-id5027 . -1) (undo-tree-id5028 . -1) (undo-tree-id5029 . -1) (undo-tree-id5030 . -1) (undo-tree-id5031 . -1) (undo-tree-id5032 . -1) (undo-tree-id5033 . -1) (undo-tree-id5034 . -1) (undo-tree-id5035 . -1) (undo-tree-id5036 . -1) (undo-tree-id5037 . -1) (undo-tree-id5038 . -1) (undo-tree-id5039 . -1) (undo-tree-id5040 . -1) (undo-tree-id5041 . -1) (undo-tree-id5042 . -1) (undo-tree-id5043 . -1) (undo-tree-id5044 . -1) (undo-tree-id5045 . -1) (undo-tree-id5046 . -1) (undo-tree-id5047 . -1) (undo-tree-id5048 . -1) (undo-tree-id5049 . -1) (undo-tree-id5050 . -1) (undo-tree-id5051 . -1) (undo-tree-id5052 . -1) (undo-tree-id5053 . -1) (undo-tree-id5054 . -1) (undo-tree-id5055 . -1) (undo-tree-id5056 . -1) (undo-tree-id5057 . -1) (undo-tree-id5058 . -1) (undo-tree-id5059 . -1) (undo-tree-id5060 . -1) (undo-tree-id5061 . -1) (undo-tree-id5062 . -1) (undo-tree-id5063 . -1) (undo-tree-id5064 . -1) (undo-tree-id5065 . -1) (undo-tree-id5066 . -1) (undo-tree-id5067 . -1) (undo-tree-id5068 . -1) (undo-tree-id5069 . -1) (undo-tree-id5070 . -1) (undo-tree-id5071 . -1) (undo-tree-id5072 . -1) (undo-tree-id5073 . -1) (undo-tree-id5074 . -1) (undo-tree-id5075 . -1) (undo-tree-id5076 . -1) (undo-tree-id5077 . -1) (undo-tree-id5078 . -1) (undo-tree-id5079 . -1) (undo-tree-id5080 . -1) (undo-tree-id5081 . -1) (undo-tree-id5082 . -1) (undo-tree-id5083 . -1) (undo-tree-id5084 . -1) (undo-tree-id5085 . -1) (undo-tree-id5086 . -1) (undo-tree-id5087 . -1) (undo-tree-id5088 . -1) (undo-tree-id5089 . -1) (undo-tree-id5090 . -1) (undo-tree-id5091 . -1) (undo-tree-id5092 . -1) (undo-tree-id5093 . -1) (undo-tree-id5094 . -1) (undo-tree-id5095 . -1) (undo-tree-id5096 . -1) (undo-tree-id5097 . -1) (undo-tree-id5098 . -1) (undo-tree-id5099 . -1) (undo-tree-id5100 . -1) (undo-tree-id5101 . -1) (undo-tree-id5102 . -1) (undo-tree-id5103 . -1) (undo-tree-id5104 . -1) (undo-tree-id5105 . -1) (undo-tree-id5106 . -1) (undo-tree-id5107 . -1) (undo-tree-id5108 . -1) (undo-tree-id5109 . -1) (undo-tree-id5110 . -1) (undo-tree-id5111 . -1) (undo-tree-id5112 . -1) (undo-tree-id5113 . -1) (undo-tree-id5114 . -1) (undo-tree-id5115 . -1) (undo-tree-id5116 . -1) (undo-tree-id5117 . -1) (undo-tree-id5118 . -1) (undo-tree-id5119 . -1) (undo-tree-id5120 . -1) (undo-tree-id5121 . -1) (undo-tree-id5122 . -1) (undo-tree-id5123 . -1) (undo-tree-id5124 . -1) (undo-tree-id5125 . -1) (undo-tree-id5126 . -1) (undo-tree-id5127 . -1) (undo-tree-id5128 . -1) (undo-tree-id5129 . -1) (undo-tree-id5130 . -1) (undo-tree-id5131 . -1) (undo-tree-id5132 . -1) (undo-tree-id5133 . -1) (undo-tree-id5134 . -1) (undo-tree-id5135 . -1) (undo-tree-id5136 . -1) (undo-tree-id5137 . -1) (undo-tree-id5138 . -1) (undo-tree-id5139 . -1) (undo-tree-id5140 . -1) (undo-tree-id5141 . -1) (undo-tree-id5142 . -1) (undo-tree-id5143 . -1) (undo-tree-id5144 . -1) (undo-tree-id5145 . -1) (undo-tree-id5146 . -1) (undo-tree-id5147 . -1) (undo-tree-id5148 . -1) (undo-tree-id5149 . -1) (undo-tree-id5150 . -1) (undo-tree-id5151 . -1) (undo-tree-id5152 . -1) (undo-tree-id5153 . -1) (undo-tree-id5154 . -1) (undo-tree-id5155 . -1) (undo-tree-id5156 . -1) (undo-tree-id5157 . -1) (undo-tree-id5158 . -1) (undo-tree-id5159 . -1) (undo-tree-id5160 . -1) (undo-tree-id5161 . -1) (undo-tree-id5162 . -1) (undo-tree-id5163 . -1) (undo-tree-id5164 . -1) (undo-tree-id5165 . -1) (undo-tree-id5166 . -1) (undo-tree-id5167 . -1) (undo-tree-id5168 . -1) (undo-tree-id5169 . -1) (undo-tree-id5170 . -1) (undo-tree-id5171 . -1) (undo-tree-id5172 . -1) (undo-tree-id5173 . -1) (undo-tree-id5174 . -1) (undo-tree-id5175 . -1) (undo-tree-id5176 . -1) (#("h" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -70323) (undo-tree-id5177 . -1) (undo-tree-id5178 . -1) (undo-tree-id5179 . -1) (undo-tree-id5180 . -1) (undo-tree-id5181 . -1) (undo-tree-id5182 . -1) (undo-tree-id5183 . -1) (undo-tree-id5184 . -1) (undo-tree-id5185 . -1) (undo-tree-id5186 . -1) (undo-tree-id5187 . -1) (undo-tree-id5188 . -1) (undo-tree-id5189 . -1) (undo-tree-id5190 . -1) (undo-tree-id5191 . -1) (undo-tree-id5192 . -1) (undo-tree-id5193 . -1) (undo-tree-id5194 . -1) (undo-tree-id5195 . -1) (undo-tree-id5196 . -1) (undo-tree-id5197 . -1) (undo-tree-id5198 . -1) (undo-tree-id5199 . -1) (undo-tree-id5200 . -1) (undo-tree-id5201 . -1) (undo-tree-id5202 . -1) (undo-tree-id5203 . -1) (undo-tree-id5204 . -1) (undo-tree-id5205 . -1) (undo-tree-id5206 . -1) (undo-tree-id5207 . -1) (undo-tree-id5208 . -1) (undo-tree-id5209 . -1) (undo-tree-id5210 . -1) (undo-tree-id5211 . -1) (undo-tree-id5212 . -1) (undo-tree-id5213 . -1) (undo-tree-id5214 . -1) (undo-tree-id5215 . -1) (undo-tree-id5216 . -1) (undo-tree-id5217 . -1) (undo-tree-id5218 . -1) (undo-tree-id5219 . -1) (undo-tree-id5220 . -1) (undo-tree-id5221 . -1) (undo-tree-id5222 . -1) (undo-tree-id5223 . -1) (undo-tree-id5224 . -1) (undo-tree-id5225 . -1) (undo-tree-id5226 . -1) (undo-tree-id5227 . -1) (undo-tree-id5228 . -1) (undo-tree-id5229 . -1) (undo-tree-id5230 . -1) (undo-tree-id5231 . -1) (undo-tree-id5232 . -1) (undo-tree-id5233 . -1) (undo-tree-id5234 . -1) (undo-tree-id5235 . -1) (undo-tree-id5236 . -1) (undo-tree-id5237 . -1) (undo-tree-id5238 . -1) (undo-tree-id5239 . -1) (undo-tree-id5240 . -1) (undo-tree-id5241 . -1) (undo-tree-id5242 . -1) (undo-tree-id5243 . -1) (undo-tree-id5244 . -1) (undo-tree-id5245 . -1) (undo-tree-id5246 . -1) (undo-tree-id5247 . -1) (undo-tree-id5248 . -1) (undo-tree-id5249 . -1) (undo-tree-id5250 . -1) (undo-tree-id5251 . -1) (undo-tree-id5252 . -1) (undo-tree-id5253 . -1) (undo-tree-id5254 . -1) (undo-tree-id5255 . -1) (undo-tree-id5256 . -1) (undo-tree-id5257 . -1) (undo-tree-id5258 . -1) (undo-tree-id5259 . -1) (undo-tree-id5260 . -1) (undo-tree-id5261 . -1) (undo-tree-id5262 . -1) (undo-tree-id5263 . -1) (undo-tree-id5264 . -1) (undo-tree-id5265 . -1) (undo-tree-id5266 . -1) (undo-tree-id5267 . -1) (undo-tree-id5268 . -1) (undo-tree-id5269 . -1) (undo-tree-id5270 . -1) (undo-tree-id5271 . -1) (undo-tree-id5272 . -1) (undo-tree-id5273 . -1) (undo-tree-id5274 . -1) (undo-tree-id5275 . -1) (undo-tree-id5276 . -1) (undo-tree-id5277 . -1) (undo-tree-id5278 . -1) (undo-tree-id5279 . -1) (undo-tree-id5280 . -1) (undo-tree-id5281 . -1) (undo-tree-id5282 . -1) (undo-tree-id5283 . -1) (undo-tree-id5284 . -1) (undo-tree-id5285 . -1) (undo-tree-id5286 . -1) (undo-tree-id5287 . -1) (undo-tree-id5288 . -1) (undo-tree-id5289 . -1) (undo-tree-id5290 . -1) (undo-tree-id5291 . -1) (undo-tree-id5292 . -1) (undo-tree-id5293 . -1) (undo-tree-id5294 . -1) (undo-tree-id5295 . -1) (undo-tree-id5296 . -1) (undo-tree-id5297 . -1) (undo-tree-id5298 . -1) (undo-tree-id5299 . -1) (undo-tree-id5300 . -1) (undo-tree-id5301 . -1) (undo-tree-id5302 . -1) (undo-tree-id5303 . -1) (undo-tree-id5304 . -1) (undo-tree-id5305 . -1) (undo-tree-id5306 . -1) (undo-tree-id5307 . -1) (undo-tree-id5308 . -1) (undo-tree-id5309 . -1) (undo-tree-id5310 . -1) (undo-tree-id5311 . -1) (undo-tree-id5312 . -1) (undo-tree-id5313 . -1) (undo-tree-id5314 . -1) (undo-tree-id5315 . -1) (undo-tree-id5316 . -1) (undo-tree-id5317 . -1) (undo-tree-id5318 . -1) (undo-tree-id5319 . -1) (undo-tree-id5320 . -1) (undo-tree-id5321 . -1) (undo-tree-id5322 . -1) (undo-tree-id5323 . -1) (undo-tree-id5324 . -1) (undo-tree-id5325 . -1) (undo-tree-id5326 . -1) (undo-tree-id5327 . -1) (undo-tree-id5328 . -1) (undo-tree-id5329 . -1) (undo-tree-id5330 . -1) (undo-tree-id5331 . -1) (undo-tree-id5332 . -1) (undo-tree-id5333 . -1) (undo-tree-id5334 . -1) (undo-tree-id5335 . -1) (undo-tree-id5336 . -1) (undo-tree-id5337 . -1) (undo-tree-id5338 . -1) (undo-tree-id5339 . -1) (undo-tree-id5340 . -1) (undo-tree-id5341 . -1) (#("a" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -70324) (undo-tree-id5342 . -1) (undo-tree-id5343 . -1) (undo-tree-id5344 . -1) (undo-tree-id5345 . -1) (undo-tree-id5346 . -1) (undo-tree-id5347 . -1) (undo-tree-id5348 . -1) (undo-tree-id5349 . -1) (undo-tree-id5350 . -1) (undo-tree-id5351 . -1) (undo-tree-id5352 . -1) (undo-tree-id5353 . -1) (undo-tree-id5354 . -1) (undo-tree-id5355 . -1) (undo-tree-id5356 . -1) (undo-tree-id5357 . -1) (undo-tree-id5358 . -1) (undo-tree-id5359 . -1) (undo-tree-id5360 . -1) (undo-tree-id5361 . -1) (undo-tree-id5362 . -1) (undo-tree-id5363 . -1) (undo-tree-id5364 . -1) (undo-tree-id5365 . -1) (undo-tree-id5366 . -1) (undo-tree-id5367 . -1) (undo-tree-id5368 . -1) (undo-tree-id5369 . -1) (undo-tree-id5370 . -1) (undo-tree-id5371 . -1) (undo-tree-id5372 . -1) (undo-tree-id5373 . -1) (undo-tree-id5374 . -1) (undo-tree-id5375 . -1) (undo-tree-id5376 . -1) (undo-tree-id5377 . -1) (undo-tree-id5378 . -1) (undo-tree-id5379 . -1) (undo-tree-id5380 . -1) (undo-tree-id5381 . -1) (undo-tree-id5382 . -1) (undo-tree-id5383 . -1) (undo-tree-id5384 . -1) (undo-tree-id5385 . -1) (undo-tree-id5386 . -1) (undo-tree-id5387 . -1) (undo-tree-id5388 . -1) (undo-tree-id5389 . -1) (undo-tree-id5390 . -1) (undo-tree-id5391 . -1) (undo-tree-id5392 . -1) (undo-tree-id5393 . -1) (undo-tree-id5394 . -1) (undo-tree-id5395 . -1) (undo-tree-id5396 . -1) (undo-tree-id5397 . -1) (undo-tree-id5398 . -1) (undo-tree-id5399 . -1) (undo-tree-id5400 . -1) (undo-tree-id5401 . -1) (undo-tree-id5402 . -1) (undo-tree-id5403 . -1) (undo-tree-id5404 . -1) (undo-tree-id5405 . -1) (undo-tree-id5406 . -1) (undo-tree-id5407 . -1) (undo-tree-id5408 . -1) (undo-tree-id5409 . -1) (undo-tree-id5410 . -1) (undo-tree-id5411 . -1) (undo-tree-id5412 . -1) (undo-tree-id5413 . -1) (undo-tree-id5414 . -1) (undo-tree-id5415 . -1) (undo-tree-id5416 . -1) (undo-tree-id5417 . -1) (undo-tree-id5418 . -1) (undo-tree-id5419 . -1) (undo-tree-id5420 . -1) (undo-tree-id5421 . -1) (undo-tree-id5422 . -1) (undo-tree-id5423 . -1) (undo-tree-id5424 . -1) (undo-tree-id5425 . -1) (undo-tree-id5426 . -1) (undo-tree-id5427 . -1) (undo-tree-id5428 . -1) (undo-tree-id5429 . -1) (undo-tree-id5430 . -1) (undo-tree-id5431 . -1) (undo-tree-id5432 . -1) (undo-tree-id5433 . -1) (undo-tree-id5434 . -1) (undo-tree-id5435 . -1) (undo-tree-id5436 . -1) (undo-tree-id5437 . -1) (undo-tree-id5438 . -1) (undo-tree-id5439 . -1) (undo-tree-id5440 . -1) (undo-tree-id5441 . -1) (undo-tree-id5442 . -1) (undo-tree-id5443 . -1) (undo-tree-id5444 . -1) (undo-tree-id5445 . -1) (undo-tree-id5446 . -1) (undo-tree-id5447 . -1) (undo-tree-id5448 . -1) (undo-tree-id5449 . -1) (undo-tree-id5450 . -1) (undo-tree-id5451 . -1) (undo-tree-id5452 . -1) (undo-tree-id5453 . -1) (undo-tree-id5454 . -1) (undo-tree-id5455 . -1) (undo-tree-id5456 . -1) (undo-tree-id5457 . -1) (undo-tree-id5458 . -1) (undo-tree-id5459 . -1) (undo-tree-id5460 . -1) (undo-tree-id5461 . -1) (undo-tree-id5462 . -1) (undo-tree-id5463 . -1) (undo-tree-id5464 . -1) (undo-tree-id5465 . -1) (undo-tree-id5466 . -1) (undo-tree-id5467 . -1) (undo-tree-id5468 . -1) (undo-tree-id5469 . -1) (undo-tree-id5470 . -1) (undo-tree-id5471 . -1) (undo-tree-id5472 . -1) (undo-tree-id5473 . -1) (undo-tree-id5474 . -1) (undo-tree-id5475 . -1) (undo-tree-id5476 . -1) (undo-tree-id5477 . -1) (undo-tree-id5478 . -1) (undo-tree-id5479 . -1) (undo-tree-id5480 . -1) (undo-tree-id5481 . -1) (undo-tree-id5482 . -1) (undo-tree-id5483 . -1) (undo-tree-id5484 . -1) (undo-tree-id5485 . -1) (undo-tree-id5486 . -1) (undo-tree-id5487 . -1) (undo-tree-id5488 . -1) (undo-tree-id5489 . -1) (undo-tree-id5490 . -1) (undo-tree-id5491 . -1) (undo-tree-id5492 . -1) (undo-tree-id5493 . -1) (undo-tree-id5494 . -1) (undo-tree-id5495 . -1) (undo-tree-id5496 . -1) (undo-tree-id5497 . -1) (undo-tree-id5498 . -1) (#("s" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -70325) (undo-tree-id5499 . -1) (undo-tree-id5500 . -1) (undo-tree-id5501 . -1) (undo-tree-id5502 . -1) (undo-tree-id5503 . -1) (undo-tree-id5504 . -1) (undo-tree-id5505 . -1) (undo-tree-id5506 . -1) (undo-tree-id5507 . -1) (undo-tree-id5508 . -1) (undo-tree-id5509 . -1) (undo-tree-id5510 . -1) (undo-tree-id5511 . -1) (undo-tree-id5512 . -1) (undo-tree-id5513 . -1) (undo-tree-id5514 . -1) (undo-tree-id5515 . -1) (undo-tree-id5516 . -1) (undo-tree-id5517 . -1) (undo-tree-id5518 . -1) (undo-tree-id5519 . -1) (undo-tree-id5520 . -1) (undo-tree-id5521 . -1) (undo-tree-id5522 . -1) (undo-tree-id5523 . -1) (undo-tree-id5524 . -1) (undo-tree-id5525 . -1) (undo-tree-id5526 . -1) (undo-tree-id5527 . -1) (undo-tree-id5528 . -1) (undo-tree-id5529 . -1) (undo-tree-id5530 . -1) (undo-tree-id5531 . -1) (undo-tree-id5532 . -1) (undo-tree-id5533 . -1) (undo-tree-id5534 . -1) (undo-tree-id5535 . -1) (undo-tree-id5536 . -1) (undo-tree-id5537 . -1) (undo-tree-id5538 . -1) (undo-tree-id5539 . -1) (undo-tree-id5540 . -1) (undo-tree-id5541 . -1) (undo-tree-id5542 . -1) (undo-tree-id5543 . -1) (undo-tree-id5544 . -1) (undo-tree-id5545 . -1) (undo-tree-id5546 . -1) (undo-tree-id5547 . -1) (undo-tree-id5548 . -1) (undo-tree-id5549 . -1) (undo-tree-id5550 . -1) (undo-tree-id5551 . -1) (undo-tree-id5552 . -1) (undo-tree-id5553 . -1) (undo-tree-id5554 . -1) (undo-tree-id5555 . -1) (undo-tree-id5556 . -1) (undo-tree-id5557 . -1) (undo-tree-id5558 . -1) (undo-tree-id5559 . -1) (undo-tree-id5560 . -1) (undo-tree-id5561 . -1) (undo-tree-id5562 . -1) (undo-tree-id5563 . -1) (undo-tree-id5564 . -1) (undo-tree-id5565 . -1) (undo-tree-id5566 . -1) (undo-tree-id5567 . -1) (undo-tree-id5568 . -1) (undo-tree-id5569 . -1) (undo-tree-id5570 . -1) (undo-tree-id5571 . -1) (undo-tree-id5572 . -1) (undo-tree-id5573 . -1) (undo-tree-id5574 . -1) (undo-tree-id5575 . -1) (undo-tree-id5576 . -1) (undo-tree-id5577 . -1) (undo-tree-id5578 . -1) (undo-tree-id5579 . -1) (undo-tree-id5580 . -1) (undo-tree-id5581 . -1) (undo-tree-id5582 . -1) (undo-tree-id5583 . -1) (undo-tree-id5584 . -1) (undo-tree-id5585 . -1) (undo-tree-id5586 . -1) (undo-tree-id5587 . -1) (undo-tree-id5588 . -1) (undo-tree-id5589 . -1) (undo-tree-id5590 . -1) (undo-tree-id5591 . -1) (undo-tree-id5592 . -1) (undo-tree-id5593 . -1) (undo-tree-id5594 . -1) (undo-tree-id5595 . -1) (undo-tree-id5596 . -1) (undo-tree-id5597 . -1) (undo-tree-id5598 . -1) (undo-tree-id5599 . -1) (undo-tree-id5600 . -1) (undo-tree-id5601 . -1) (undo-tree-id5602 . -1) (undo-tree-id5603 . -1) (undo-tree-id5604 . -1) (undo-tree-id5605 . -1) (undo-tree-id5606 . -1) (undo-tree-id5607 . -1) (undo-tree-id5608 . -1) (undo-tree-id5609 . -1) (undo-tree-id5610 . -1) (undo-tree-id5611 . -1) (undo-tree-id5612 . -1) (undo-tree-id5613 . -1) (undo-tree-id5614 . -1) (undo-tree-id5615 . -1) (undo-tree-id5616 . -1) (undo-tree-id5617 . -1) (undo-tree-id5618 . -1) (undo-tree-id5619 . -1) (undo-tree-id5620 . -1) (undo-tree-id5621 . -1) (undo-tree-id5622 . -1) (undo-tree-id5623 . -1) (undo-tree-id5624 . -1) (undo-tree-id5625 . -1) (undo-tree-id5626 . -1) (undo-tree-id5627 . -1) (undo-tree-id5628 . -1) (undo-tree-id5629 . -1) (undo-tree-id5630 . -1) (undo-tree-id5631 . -1) (undo-tree-id5632 . -1) (undo-tree-id5633 . -1) (undo-tree-id5634 . -1) (undo-tree-id5635 . -1) (undo-tree-id5636 . -1) (undo-tree-id5637 . -1) (undo-tree-id5638 . -1) (undo-tree-id5639 . -1) (undo-tree-id5640 . -1) (undo-tree-id5641 . -1) (undo-tree-id5642 . -1) (undo-tree-id5643 . -1) (undo-tree-id5644 . -1) (undo-tree-id5645 . -1) (undo-tree-id5646 . -1) (undo-tree-id5647 . -1) (#("-" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -70326) (undo-tree-id5648 . -1) (undo-tree-id5649 . -1) (undo-tree-id5650 . -1) (undo-tree-id5651 . -1) (undo-tree-id5652 . -1) (undo-tree-id5653 . -1) (undo-tree-id5654 . -1) (undo-tree-id5655 . -1) (undo-tree-id5656 . -1) (undo-tree-id5657 . -1) (undo-tree-id5658 . -1) (undo-tree-id5659 . -1) (undo-tree-id5660 . -1) (undo-tree-id5661 . -1) (undo-tree-id5662 . -1) (undo-tree-id5663 . -1) (undo-tree-id5664 . -1) (undo-tree-id5665 . -1) (undo-tree-id5666 . -1) (undo-tree-id5667 . -1) (undo-tree-id5668 . -1) (undo-tree-id5669 . -1) (undo-tree-id5670 . -1) (undo-tree-id5671 . -1) (undo-tree-id5672 . -1) (undo-tree-id5673 . -1) (undo-tree-id5674 . -1) (undo-tree-id5675 . -1) (undo-tree-id5676 . -1) (undo-tree-id5677 . -1) (undo-tree-id5678 . -1) (undo-tree-id5679 . -1) (undo-tree-id5680 . -1) (undo-tree-id5681 . -1) (undo-tree-id5682 . -1) (undo-tree-id5683 . -1) (undo-tree-id5684 . -1) (undo-tree-id5685 . -1) (undo-tree-id5686 . -1) (undo-tree-id5687 . -1) (undo-tree-id5688 . -1) (undo-tree-id5689 . -1) (undo-tree-id5690 . -1) (undo-tree-id5691 . -1) (undo-tree-id5692 . -1) (undo-tree-id5693 . -1) (undo-tree-id5694 . -1) (undo-tree-id5695 . -1) (undo-tree-id5696 . -1) (undo-tree-id5697 . -1) (undo-tree-id5698 . -1) (undo-tree-id5699 . -1) (undo-tree-id5700 . -1) (undo-tree-id5701 . -1) (undo-tree-id5702 . -1) (undo-tree-id5703 . -1) (undo-tree-id5704 . -1) (undo-tree-id5705 . -1) (undo-tree-id5706 . -1) (undo-tree-id5707 . -1) (undo-tree-id5708 . -1) (undo-tree-id5709 . -1) (undo-tree-id5710 . -1) (undo-tree-id5711 . -1) (undo-tree-id5712 . -1) (undo-tree-id5713 . -1) (undo-tree-id5714 . -1) (undo-tree-id5715 . -1) (undo-tree-id5716 . -1) (undo-tree-id5717 . -1) (undo-tree-id5718 . -1) (undo-tree-id5719 . -1) (undo-tree-id5720 . -1) (undo-tree-id5721 . -1) (undo-tree-id5722 . -1) (undo-tree-id5723 . -1) (undo-tree-id5724 . -1) (undo-tree-id5725 . -1) (undo-tree-id5726 . -1) (undo-tree-id5727 . -1) (undo-tree-id5728 . -1) (undo-tree-id5729 . -1) (undo-tree-id5730 . -1) (undo-tree-id5731 . -1) (undo-tree-id5732 . -1) (undo-tree-id5733 . -1) (undo-tree-id5734 . -1) (undo-tree-id5735 . -1) (undo-tree-id5736 . -1) (undo-tree-id5737 . -1) (undo-tree-id5738 . -1) (undo-tree-id5739 . -1) (undo-tree-id5740 . -1) (undo-tree-id5741 . -1) (undo-tree-id5742 . -1) (undo-tree-id5743 . -1) (undo-tree-id5744 . -1) (undo-tree-id5745 . -1) (undo-tree-id5746 . -1) (undo-tree-id5747 . -1) (undo-tree-id5748 . -1) (undo-tree-id5749 . -1) (undo-tree-id5750 . -1) (undo-tree-id5751 . -1) (undo-tree-id5752 . -1) (undo-tree-id5753 . -1) (undo-tree-id5754 . -1) (undo-tree-id5755 . -1) (undo-tree-id5756 . -1) (undo-tree-id5757 . -1) (undo-tree-id5758 . -1) (undo-tree-id5759 . -1) (undo-tree-id5760 . -1) (undo-tree-id5761 . -1) (undo-tree-id5762 . -1) (undo-tree-id5763 . -1) (undo-tree-id5764 . -1) (undo-tree-id5765 . -1) (undo-tree-id5766 . -1) (undo-tree-id5767 . -1) (undo-tree-id5768 . -1) (undo-tree-id5769 . -1) (undo-tree-id5770 . -1) (undo-tree-id5771 . -1) (undo-tree-id5772 . -1) (undo-tree-id5773 . -1) (undo-tree-id5774 . -1) (undo-tree-id5775 . -1) (undo-tree-id5776 . -1) (undo-tree-id5777 . -1) (undo-tree-id5778 . -1) (undo-tree-id5779 . -1) (undo-tree-id5780 . -1) (undo-tree-id5781 . -1) (undo-tree-id5782 . -1) (undo-tree-id5783 . -1) (undo-tree-id5784 . -1) (undo-tree-id5785 . -1) (undo-tree-id5786 . -1) (undo-tree-id5787 . -1) (undo-tree-id5788 . -1) (#("n" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -70327) (undo-tree-id5789 . -1) (undo-tree-id5790 . -1) (undo-tree-id5791 . -1) (undo-tree-id5792 . -1) (undo-tree-id5793 . -1) (undo-tree-id5794 . -1) (undo-tree-id5795 . -1) (undo-tree-id5796 . -1) (undo-tree-id5797 . -1) (undo-tree-id5798 . -1) (undo-tree-id5799 . -1) (undo-tree-id5800 . -1) (undo-tree-id5801 . -1) (undo-tree-id5802 . -1) (undo-tree-id5803 . -1) (undo-tree-id5804 . -1) (undo-tree-id5805 . -1) (undo-tree-id5806 . -1) (undo-tree-id5807 . -1) (undo-tree-id5808 . -1) (undo-tree-id5809 . -1) (undo-tree-id5810 . -1) (undo-tree-id5811 . -1) (undo-tree-id5812 . -1) (undo-tree-id5813 . -1) (undo-tree-id5814 . -1) (undo-tree-id5815 . -1) (undo-tree-id5816 . -1) (undo-tree-id5817 . -1) (undo-tree-id5818 . -1) (undo-tree-id5819 . -1) (undo-tree-id5820 . -1) (undo-tree-id5821 . -1) (undo-tree-id5822 . -1) (undo-tree-id5823 . -1) (undo-tree-id5824 . -1) (undo-tree-id5825 . -1) (undo-tree-id5826 . -1) (undo-tree-id5827 . -1) (undo-tree-id5828 . -1) (undo-tree-id5829 . -1) (undo-tree-id5830 . -1) (undo-tree-id5831 . -1) (undo-tree-id5832 . -1) (undo-tree-id5833 . -1) (undo-tree-id5834 . -1) (undo-tree-id5835 . -1) (undo-tree-id5836 . -1) (undo-tree-id5837 . -1) (undo-tree-id5838 . -1) (undo-tree-id5839 . -1) (undo-tree-id5840 . -1) (undo-tree-id5841 . -1) (undo-tree-id5842 . -1) (undo-tree-id5843 . -1) (undo-tree-id5844 . -1) (undo-tree-id5845 . -1) (undo-tree-id5846 . -1) (undo-tree-id5847 . -1) (undo-tree-id5848 . -1) (undo-tree-id5849 . -1) (undo-tree-id5850 . -1) (undo-tree-id5851 . -1) (undo-tree-id5852 . -1) (undo-tree-id5853 . -1) (undo-tree-id5854 . -1) (undo-tree-id5855 . -1) (undo-tree-id5856 . -1) (undo-tree-id5857 . -1) (undo-tree-id5858 . -1) (undo-tree-id5859 . -1) (undo-tree-id5860 . -1) (undo-tree-id5861 . -1) (undo-tree-id5862 . -1) (undo-tree-id5863 . -1) (undo-tree-id5864 . -1) (undo-tree-id5865 . -1) (undo-tree-id5866 . -1) (undo-tree-id5867 . -1) (undo-tree-id5868 . -1) (undo-tree-id5869 . -1) (undo-tree-id5870 . -1) (undo-tree-id5871 . -1) (undo-tree-id5872 . -1) (undo-tree-id5873 . -1) (undo-tree-id5874 . -1) (undo-tree-id5875 . -1) (undo-tree-id5876 . -1) (undo-tree-id5877 . -1) (undo-tree-id5878 . -1) (undo-tree-id5879 . -1) (undo-tree-id5880 . -1) (undo-tree-id5881 . -1) (undo-tree-id5882 . -1) (undo-tree-id5883 . -1) (undo-tree-id5884 . -1) (undo-tree-id5885 . -1) (undo-tree-id5886 . -1) (undo-tree-id5887 . -1) (undo-tree-id5888 . -1) (undo-tree-id5889 . -1) (undo-tree-id5890 . -1) (undo-tree-id5891 . -1) (undo-tree-id5892 . -1) (undo-tree-id5893 . -1) (undo-tree-id5894 . -1) (undo-tree-id5895 . -1) (undo-tree-id5896 . -1) (undo-tree-id5897 . -1) (undo-tree-id5898 . -1) (undo-tree-id5899 . -1) (undo-tree-id5900 . -1) (undo-tree-id5901 . -1) (undo-tree-id5902 . -1) (undo-tree-id5903 . -1) (undo-tree-id5904 . -1) (undo-tree-id5905 . -1) (undo-tree-id5906 . -1) (undo-tree-id5907 . -1) (undo-tree-id5908 . -1) (undo-tree-id5909 . -1) (undo-tree-id5910 . -1) (undo-tree-id5911 . -1) (undo-tree-id5912 . -1) (undo-tree-id5913 . -1) (undo-tree-id5914 . -1) (undo-tree-id5915 . -1) (undo-tree-id5916 . -1) (undo-tree-id5917 . -1) (undo-tree-id5918 . -1) (undo-tree-id5919 . -1) (undo-tree-id5920 . -1) (undo-tree-id5921 . -1) (#("o" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -70328) (undo-tree-id5922 . -1) (undo-tree-id5923 . -1) (undo-tree-id5924 . -1) (undo-tree-id5925 . -1) (undo-tree-id5926 . -1) (undo-tree-id5927 . -1) (undo-tree-id5928 . -1) (undo-tree-id5929 . -1) (undo-tree-id5930 . -1) (undo-tree-id5931 . -1) (undo-tree-id5932 . -1) (undo-tree-id5933 . -1) (undo-tree-id5934 . -1) (undo-tree-id5935 . -1) (undo-tree-id5936 . -1) (undo-tree-id5937 . -1) (undo-tree-id5938 . -1) (undo-tree-id5939 . -1) (undo-tree-id5940 . -1) (undo-tree-id5941 . -1) (undo-tree-id5942 . -1) (undo-tree-id5943 . -1) (undo-tree-id5944 . -1) (undo-tree-id5945 . -1) (undo-tree-id5946 . -1) (undo-tree-id5947 . -1) (undo-tree-id5948 . -1) (undo-tree-id5949 . -1) (undo-tree-id5950 . -1) (undo-tree-id5951 . -1) (undo-tree-id5952 . -1) (undo-tree-id5953 . -1) (undo-tree-id5954 . -1) (undo-tree-id5955 . -1) (undo-tree-id5956 . -1) (undo-tree-id5957 . -1) (undo-tree-id5958 . -1) (undo-tree-id5959 . -1) (undo-tree-id5960 . -1) (undo-tree-id5961 . -1) (undo-tree-id5962 . -1) (undo-tree-id5963 . -1) (undo-tree-id5964 . -1) (undo-tree-id5965 . -1) (undo-tree-id5966 . -1) (undo-tree-id5967 . -1) (undo-tree-id5968 . -1) (undo-tree-id5969 . -1) (undo-tree-id5970 . -1) (undo-tree-id5971 . -1) (undo-tree-id5972 . -1) (undo-tree-id5973 . -1) (undo-tree-id5974 . -1) (undo-tree-id5975 . -1) (undo-tree-id5976 . -1) (undo-tree-id5977 . -1) (undo-tree-id5978 . -1) (undo-tree-id5979 . -1) (undo-tree-id5980 . -1) (undo-tree-id5981 . -1) (undo-tree-id5982 . -1) (undo-tree-id5983 . -1) (undo-tree-id5984 . -1) (undo-tree-id5985 . -1) (undo-tree-id5986 . -1) (undo-tree-id5987 . -1) (undo-tree-id5988 . -1) (undo-tree-id5989 . -1) (undo-tree-id5990 . -1) (undo-tree-id5991 . -1) (undo-tree-id5992 . -1) (undo-tree-id5993 . -1) (undo-tree-id5994 . -1) (undo-tree-id5995 . -1) (undo-tree-id5996 . -1) (undo-tree-id5997 . -1) (undo-tree-id5998 . -1) (undo-tree-id5999 . -1) (undo-tree-id6000 . -1) (undo-tree-id6001 . -1) (undo-tree-id6002 . -1) (undo-tree-id6003 . -1) (undo-tree-id6004 . -1) (undo-tree-id6005 . -1) (undo-tree-id6006 . -1) (undo-tree-id6007 . -1) (undo-tree-id6008 . -1) (undo-tree-id6009 . -1) (undo-tree-id6010 . -1) (undo-tree-id6011 . -1) (undo-tree-id6012 . -1) (undo-tree-id6013 . -1) (undo-tree-id6014 . -1) (undo-tree-id6015 . -1) (undo-tree-id6016 . -1) (undo-tree-id6017 . -1) (undo-tree-id6018 . -1) (undo-tree-id6019 . -1) (undo-tree-id6020 . -1) (undo-tree-id6021 . -1) (undo-tree-id6022 . -1) (undo-tree-id6023 . -1) (undo-tree-id6024 . -1) (undo-tree-id6025 . -1) (undo-tree-id6026 . -1) (undo-tree-id6027 . -1) (undo-tree-id6028 . -1) (undo-tree-id6029 . -1) (undo-tree-id6030 . -1) (undo-tree-id6031 . -1) (undo-tree-id6032 . -1) (undo-tree-id6033 . -1) (undo-tree-id6034 . -1) (undo-tree-id6035 . -1) (undo-tree-id6036 . -1) (undo-tree-id6037 . -1) (undo-tree-id6038 . -1) (undo-tree-id6039 . -1) (undo-tree-id6040 . -1) (undo-tree-id6041 . -1) (undo-tree-id6042 . -1) (undo-tree-id6043 . -1) (undo-tree-id6044 . -1) (undo-tree-id6045 . -1) (undo-tree-id6046 . -1) (#("t" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -70329) (undo-tree-id6047 . -1) (undo-tree-id6048 . -1) (undo-tree-id6049 . -1) (undo-tree-id6050 . -1) (undo-tree-id6051 . -1) (undo-tree-id6052 . -1) (undo-tree-id6053 . -1) (undo-tree-id6054 . -1) (undo-tree-id6055 . -1) (undo-tree-id6056 . -1) (undo-tree-id6057 . -1) (undo-tree-id6058 . -1) (undo-tree-id6059 . -1) (undo-tree-id6060 . -1) (undo-tree-id6061 . -1) (undo-tree-id6062 . -1) (undo-tree-id6063 . -1) (undo-tree-id6064 . -1) (undo-tree-id6065 . -1) (undo-tree-id6066 . -1) (undo-tree-id6067 . -1) (undo-tree-id6068 . -1) (undo-tree-id6069 . -1) (undo-tree-id6070 . -1) (undo-tree-id6071 . -1) (undo-tree-id6072 . -1) (undo-tree-id6073 . -1) (undo-tree-id6074 . -1) (undo-tree-id6075 . -1) (undo-tree-id6076 . -1) (undo-tree-id6077 . -1) (undo-tree-id6078 . -1) (undo-tree-id6079 . -1) (undo-tree-id6080 . -1) (undo-tree-id6081 . -1) (undo-tree-id6082 . -1) (undo-tree-id6083 . -1) (undo-tree-id6084 . -1) (undo-tree-id6085 . -1) (undo-tree-id6086 . -1) (undo-tree-id6087 . -1) (undo-tree-id6088 . -1) (undo-tree-id6089 . -1) (undo-tree-id6090 . -1) (undo-tree-id6091 . -1) (undo-tree-id6092 . -1) (undo-tree-id6093 . -1) (undo-tree-id6094 . -1) (undo-tree-id6095 . -1) (undo-tree-id6096 . -1) (undo-tree-id6097 . -1) (undo-tree-id6098 . -1) (undo-tree-id6099 . -1) (undo-tree-id6100 . -1) (undo-tree-id6101 . -1) (undo-tree-id6102 . -1) (undo-tree-id6103 . -1) (undo-tree-id6104 . -1) (undo-tree-id6105 . -1) (undo-tree-id6106 . -1) (undo-tree-id6107 . -1) (undo-tree-id6108 . -1) (undo-tree-id6109 . -1) (undo-tree-id6110 . -1) (undo-tree-id6111 . -1) (undo-tree-id6112 . -1) (undo-tree-id6113 . -1) (undo-tree-id6114 . -1) (undo-tree-id6115 . -1) (undo-tree-id6116 . -1) (undo-tree-id6117 . -1) (undo-tree-id6118 . -1) (undo-tree-id6119 . -1) (undo-tree-id6120 . -1) (undo-tree-id6121 . -1) (undo-tree-id6122 . -1) (undo-tree-id6123 . -1) (undo-tree-id6124 . -1) (undo-tree-id6125 . -1) (undo-tree-id6126 . -1) (undo-tree-id6127 . -1) (undo-tree-id6128 . -1) (undo-tree-id6129 . -1) (undo-tree-id6130 . -1) (undo-tree-id6131 . -1) (undo-tree-id6132 . -1) (undo-tree-id6133 . -1) (undo-tree-id6134 . -1) (undo-tree-id6135 . -1) (undo-tree-id6136 . -1) (undo-tree-id6137 . -1) (undo-tree-id6138 . -1) (undo-tree-id6139 . -1) (undo-tree-id6140 . -1) (undo-tree-id6141 . -1) (undo-tree-id6142 . -1) (undo-tree-id6143 . -1) (undo-tree-id6144 . -1) (undo-tree-id6145 . -1) (undo-tree-id6146 . -1) (undo-tree-id6147 . -1) (undo-tree-id6148 . -1) (undo-tree-id6149 . -1) (undo-tree-id6150 . -1) (undo-tree-id6151 . -1) (undo-tree-id6152 . -1) (undo-tree-id6153 . -1) (undo-tree-id6154 . -1) (undo-tree-id6155 . -1) (undo-tree-id6156 . -1) (undo-tree-id6157 . -1) (undo-tree-id6158 . -1) (undo-tree-id6159 . -1) (undo-tree-id6160 . -1) (undo-tree-id6161 . -1) (undo-tree-id6162 . -1) (undo-tree-id6163 . -1) (#("e" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -70330) (undo-tree-id6164 . -1) (undo-tree-id6165 . -1) (undo-tree-id6166 . -1) (undo-tree-id6167 . -1) (undo-tree-id6168 . -1) (undo-tree-id6169 . -1) (undo-tree-id6170 . -1) (undo-tree-id6171 . -1) (undo-tree-id6172 . -1) (undo-tree-id6173 . -1) (undo-tree-id6174 . -1) (undo-tree-id6175 . -1) (undo-tree-id6176 . -1) (undo-tree-id6177 . -1) (undo-tree-id6178 . -1) (undo-tree-id6179 . -1) (undo-tree-id6180 . -1) (undo-tree-id6181 . -1) (undo-tree-id6182 . -1) (undo-tree-id6183 . -1) (undo-tree-id6184 . -1) (undo-tree-id6185 . -1) (undo-tree-id6186 . -1) (undo-tree-id6187 . -1) (undo-tree-id6188 . -1) (undo-tree-id6189 . -1) (undo-tree-id6190 . -1) (undo-tree-id6191 . -1) (undo-tree-id6192 . -1) (undo-tree-id6193 . -1) (undo-tree-id6194 . -1) (undo-tree-id6195 . -1) (undo-tree-id6196 . -1) (undo-tree-id6197 . -1) (undo-tree-id6198 . -1) (undo-tree-id6199 . -1) (undo-tree-id6200 . -1) (undo-tree-id6201 . -1) (undo-tree-id6202 . -1) (undo-tree-id6203 . -1) (undo-tree-id6204 . -1) (undo-tree-id6205 . -1) (undo-tree-id6206 . -1) (undo-tree-id6207 . -1) (undo-tree-id6208 . -1) (undo-tree-id6209 . -1) (undo-tree-id6210 . -1) (undo-tree-id6211 . -1) (undo-tree-id6212 . -1) (undo-tree-id6213 . -1) (undo-tree-id6214 . -1) (undo-tree-id6215 . -1) (undo-tree-id6216 . -1) (undo-tree-id6217 . -1) (undo-tree-id6218 . -1) (undo-tree-id6219 . -1) (undo-tree-id6220 . -1) (undo-tree-id6221 . -1) (undo-tree-id6222 . -1) (undo-tree-id6223 . -1) (undo-tree-id6224 . -1) (undo-tree-id6225 . -1) (undo-tree-id6226 . -1) (undo-tree-id6227 . -1) (undo-tree-id6228 . -1) (undo-tree-id6229 . -1) (undo-tree-id6230 . -1) (undo-tree-id6231 . -1) (undo-tree-id6232 . -1) (undo-tree-id6233 . -1) (undo-tree-id6234 . -1) (undo-tree-id6235 . -1) (undo-tree-id6236 . -1) (undo-tree-id6237 . -1) (undo-tree-id6238 . -1) (undo-tree-id6239 . -1) (undo-tree-id6240 . -1) (undo-tree-id6241 . -1) (undo-tree-id6242 . -1) (undo-tree-id6243 . -1) (undo-tree-id6244 . -1) (undo-tree-id6245 . -1) (undo-tree-id6246 . -1) (undo-tree-id6247 . -1) (undo-tree-id6248 . -1) (undo-tree-id6249 . -1) (undo-tree-id6250 . -1) (undo-tree-id6251 . -1) (undo-tree-id6252 . -1) (undo-tree-id6253 . -1) (undo-tree-id6254 . -1) (undo-tree-id6255 . -1) (undo-tree-id6256 . -1) (undo-tree-id6257 . -1) (undo-tree-id6258 . -1) (undo-tree-id6259 . -1) (undo-tree-id6260 . -1) (undo-tree-id6261 . -1) (undo-tree-id6262 . -1) (undo-tree-id6263 . -1) (undo-tree-id6264 . -1) (undo-tree-id6265 . -1) (undo-tree-id6266 . -1) (undo-tree-id6267 . -1) (undo-tree-id6268 . -1) (undo-tree-id6269 . -1) (undo-tree-id6270 . -1) (undo-tree-id6271 . -1) (undo-tree-id6272 . -1) (#("-" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -70331) (undo-tree-id6273 . -1) (undo-tree-id6274 . -1) (undo-tree-id6275 . -1) (undo-tree-id6276 . -1) (undo-tree-id6277 . -1) (undo-tree-id6278 . -1) (undo-tree-id6279 . -1) (undo-tree-id6280 . -1) (undo-tree-id6281 . -1) (undo-tree-id6282 . -1) (undo-tree-id6283 . -1) (undo-tree-id6284 . -1) (undo-tree-id6285 . -1) (undo-tree-id6286 . -1) (undo-tree-id6287 . -1) (undo-tree-id6288 . -1) (undo-tree-id6289 . -1) (undo-tree-id6290 . -1) (undo-tree-id6291 . -1) (undo-tree-id6292 . -1) (undo-tree-id6293 . -1) (undo-tree-id6294 . -1) (undo-tree-id6295 . -1) (undo-tree-id6296 . -1) (undo-tree-id6297 . -1) (undo-tree-id6298 . -1) (undo-tree-id6299 . -1) (undo-tree-id6300 . -1) (undo-tree-id6301 . -1) (undo-tree-id6302 . -1) (undo-tree-id6303 . -1) (undo-tree-id6304 . -1) (undo-tree-id6305 . -1) (undo-tree-id6306 . -1) (undo-tree-id6307 . -1) (undo-tree-id6308 . -1) (undo-tree-id6309 . -1) (undo-tree-id6310 . -1) (undo-tree-id6311 . -1) (undo-tree-id6312 . -1) (undo-tree-id6313 . -1) (undo-tree-id6314 . -1) (undo-tree-id6315 . -1) (undo-tree-id6316 . -1) (undo-tree-id6317 . -1) (undo-tree-id6318 . -1) (undo-tree-id6319 . -1) (undo-tree-id6320 . -1) (undo-tree-id6321 . -1) (undo-tree-id6322 . -1) (undo-tree-id6323 . -1) (undo-tree-id6324 . -1) (undo-tree-id6325 . -1) (undo-tree-id6326 . -1) (undo-tree-id6327 . -1) (undo-tree-id6328 . -1) (undo-tree-id6329 . -1) (undo-tree-id6330 . -1) (undo-tree-id6331 . -1) (undo-tree-id6332 . -1) (undo-tree-id6333 . -1) (undo-tree-id6334 . -1) (undo-tree-id6335 . -1) (undo-tree-id6336 . -1) (undo-tree-id6337 . -1) (undo-tree-id6338 . -1) (undo-tree-id6339 . -1) (undo-tree-id6340 . -1) (undo-tree-id6341 . -1) (undo-tree-id6342 . -1) (undo-tree-id6343 . -1) (undo-tree-id6344 . -1) (undo-tree-id6345 . -1) (undo-tree-id6346 . -1) (undo-tree-id6347 . -1) (undo-tree-id6348 . -1) (undo-tree-id6349 . -1) (undo-tree-id6350 . -1) (undo-tree-id6351 . -1) (undo-tree-id6352 . -1) (undo-tree-id6353 . -1) (undo-tree-id6354 . -1) (undo-tree-id6355 . -1) (undo-tree-id6356 . -1) (undo-tree-id6357 . -1) (undo-tree-id6358 . -1) (undo-tree-id6359 . -1) (undo-tree-id6360 . -1) (undo-tree-id6361 . -1) (undo-tree-id6362 . -1) (undo-tree-id6363 . -1) (undo-tree-id6364 . -1) (undo-tree-id6365 . -1) (undo-tree-id6366 . -1) (undo-tree-id6367 . -1) (undo-tree-id6368 . -1) (undo-tree-id6369 . -1) (undo-tree-id6370 . -1) (undo-tree-id6371 . -1) (undo-tree-id6372 . -1) (undo-tree-id6373 . -1) (#("p" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -70332) (undo-tree-id6374 . -1) (undo-tree-id6375 . -1) (undo-tree-id6376 . -1) (undo-tree-id6377 . -1) (undo-tree-id6378 . -1) (undo-tree-id6379 . -1) (undo-tree-id6380 . -1) (undo-tree-id6381 . -1) (undo-tree-id6382 . -1) (undo-tree-id6383 . -1) (undo-tree-id6384 . -1) (undo-tree-id6385 . -1) (undo-tree-id6386 . -1) (undo-tree-id6387 . -1) (undo-tree-id6388 . -1) (undo-tree-id6389 . -1) (undo-tree-id6390 . -1) (undo-tree-id6391 . -1) (undo-tree-id6392 . -1) (undo-tree-id6393 . -1) (undo-tree-id6394 . -1) (undo-tree-id6395 . -1) (undo-tree-id6396 . -1) (undo-tree-id6397 . -1) (undo-tree-id6398 . -1) (undo-tree-id6399 . -1) (undo-tree-id6400 . -1) (undo-tree-id6401 . -1) (undo-tree-id6402 . -1) (undo-tree-id6403 . -1) (undo-tree-id6404 . -1) (undo-tree-id6405 . -1) (undo-tree-id6406 . -1) (undo-tree-id6407 . -1) (undo-tree-id6408 . -1) (undo-tree-id6409 . -1) (undo-tree-id6410 . -1) (undo-tree-id6411 . -1) (undo-tree-id6412 . -1) (undo-tree-id6413 . -1) (undo-tree-id6414 . -1) (undo-tree-id6415 . -1) (undo-tree-id6416 . -1) (undo-tree-id6417 . -1) (undo-tree-id6418 . -1) (undo-tree-id6419 . -1) (undo-tree-id6420 . -1) (undo-tree-id6421 . -1) (undo-tree-id6422 . -1) (undo-tree-id6423 . -1) (undo-tree-id6424 . -1) (undo-tree-id6425 . -1) (undo-tree-id6426 . -1) (undo-tree-id6427 . -1) (undo-tree-id6428 . -1) (undo-tree-id6429 . -1) (undo-tree-id6430 . -1) (undo-tree-id6431 . -1) (undo-tree-id6432 . -1) (undo-tree-id6433 . -1) (undo-tree-id6434 . -1) (undo-tree-id6435 . -1) (undo-tree-id6436 . -1) (undo-tree-id6437 . -1) (undo-tree-id6438 . -1) (undo-tree-id6439 . -1) (undo-tree-id6440 . -1) (undo-tree-id6441 . -1) (undo-tree-id6442 . -1) (undo-tree-id6443 . -1) (undo-tree-id6444 . -1) (undo-tree-id6445 . -1) (undo-tree-id6446 . -1) (undo-tree-id6447 . -1) (undo-tree-id6448 . -1) (#(" " 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -70333) (undo-tree-id6449 . -1) (undo-tree-id6450 . -1) (undo-tree-id6451 . -1) (undo-tree-id6452 . -1) (undo-tree-id6453 . -1) (undo-tree-id6454 . -1) (undo-tree-id6455 . -1) (undo-tree-id6456 . -1) (undo-tree-id6457 . -1) (undo-tree-id6458 . -1) (undo-tree-id6459 . -1) (undo-tree-id6460 . -1) (undo-tree-id6461 . -1) (undo-tree-id6462 . -1) (undo-tree-id6463 . -1) (undo-tree-id6464 . -1) (undo-tree-id6465 . -1) (undo-tree-id6466 . -1) (undo-tree-id6467 . -1) (undo-tree-id6468 . -1) (undo-tree-id6469 . -1) (undo-tree-id6470 . -1) (undo-tree-id6471 . -1) (undo-tree-id6472 . -1) (undo-tree-id6473 . -1) (undo-tree-id6474 . -1) (undo-tree-id6475 . -1) (undo-tree-id6476 . -1) (undo-tree-id6477 . -1) (undo-tree-id6478 . -1) (undo-tree-id6479 . -1) (undo-tree-id6480 . -1) (undo-tree-id6481 . -1) (undo-tree-id6482 . -1) (undo-tree-id6483 . -1) (undo-tree-id6484 . -1) (undo-tree-id6485 . -1) (undo-tree-id6486 . -1) (undo-tree-id6487 . -1) (undo-tree-id6488 . -1) (undo-tree-id6489 . -1) (undo-tree-id6490 . -1) (undo-tree-id6491 . -1) (undo-tree-id6492 . -1) (undo-tree-id6493 . -1) (undo-tree-id6494 . -1) (undo-tree-id6495 . -1) (undo-tree-id6496 . -1) (undo-tree-id6497 . -1) (undo-tree-id6498 . -1) (undo-tree-id6499 . -1) (undo-tree-id6500 . -1) (undo-tree-id6501 . -1) (undo-tree-id6502 . -1) (undo-tree-id6503 . -1) (undo-tree-id6504 . -1) (undo-tree-id6505 . -1) (undo-tree-id6506 . -1) (undo-tree-id6507 . -1) (undo-tree-id6508 . -1) (undo-tree-id6509 . -1) (undo-tree-id6510 . -1) (undo-tree-id6511 . -1) (undo-tree-id6512 . -1) (undo-tree-id6513 . -1) (undo-tree-id6514 . -1) (undo-tree-id6515 . -1) (#("r" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -70334) (undo-tree-id6516 . -1) (undo-tree-id6517 . -1) (undo-tree-id6518 . -1) (undo-tree-id6519 . -1) (undo-tree-id6520 . -1) (undo-tree-id6521 . -1) (undo-tree-id6522 . -1) (undo-tree-id6523 . -1) (undo-tree-id6524 . -1) (undo-tree-id6525 . -1) (undo-tree-id6526 . -1) (undo-tree-id6527 . -1) (undo-tree-id6528 . -1) (undo-tree-id6529 . -1) (undo-tree-id6530 . -1) (undo-tree-id6531 . -1) (undo-tree-id6532 . -1) (undo-tree-id6533 . -1) (undo-tree-id6534 . -1) (undo-tree-id6535 . -1) (undo-tree-id6536 . -1) (undo-tree-id6537 . -1) (undo-tree-id6538 . -1) (undo-tree-id6539 . -1) (undo-tree-id6540 . -1) (undo-tree-id6541 . -1) (undo-tree-id6542 . -1) (undo-tree-id6543 . -1) (undo-tree-id6544 . -1) (undo-tree-id6545 . -1) (undo-tree-id6546 . -1) (undo-tree-id6547 . -1) (undo-tree-id6548 . -1) (undo-tree-id6549 . -1) (undo-tree-id6550 . -1) (undo-tree-id6551 . -1) (undo-tree-id6552 . -1) (undo-tree-id6553 . -1) (undo-tree-id6554 . -1) (undo-tree-id6555 . -1) (undo-tree-id6556 . -1) (undo-tree-id6557 . -1) (undo-tree-id6558 . -1) (undo-tree-id6559 . -1) (undo-tree-id6560 . -1) (undo-tree-id6561 . -1) (undo-tree-id6562 . -1) (undo-tree-id6563 . -1) (undo-tree-id6564 . -1) (undo-tree-id6565 . -1) (undo-tree-id6566 . -1) (undo-tree-id6567 . -1) (undo-tree-id6568 . -1) (undo-tree-id6569 . -1) (undo-tree-id6570 . -1) (undo-tree-id6571 . -1) (undo-tree-id6572 . -1) (undo-tree-id6573 . -1) (undo-tree-id6574 . -1) (#("e" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -70335) (undo-tree-id6575 . -1) (undo-tree-id6576 . -1) (undo-tree-id6577 . -1) (undo-tree-id6578 . -1) (undo-tree-id6579 . -1) (undo-tree-id6580 . -1) (undo-tree-id6581 . -1) (undo-tree-id6582 . -1) (undo-tree-id6583 . -1) (undo-tree-id6584 . -1) (undo-tree-id6585 . -1) (undo-tree-id6586 . -1) (undo-tree-id6587 . -1) (undo-tree-id6588 . -1) (undo-tree-id6589 . -1) (undo-tree-id6590 . -1) (undo-tree-id6591 . -1) (undo-tree-id6592 . -1) (undo-tree-id6593 . -1) (undo-tree-id6594 . -1) (undo-tree-id6595 . -1) (undo-tree-id6596 . -1) (undo-tree-id6597 . -1) (undo-tree-id6598 . -1) (undo-tree-id6599 . -1) (undo-tree-id6600 . -1) (undo-tree-id6601 . -1) (undo-tree-id6602 . -1) (undo-tree-id6603 . -1) (undo-tree-id6604 . -1) (undo-tree-id6605 . -1) (undo-tree-id6606 . -1) (undo-tree-id6607 . -1) (undo-tree-id6608 . -1) (undo-tree-id6609 . -1) (undo-tree-id6610 . -1) (undo-tree-id6611 . -1) (undo-tree-id6612 . -1) (undo-tree-id6613 . -1) (undo-tree-id6614 . -1) (undo-tree-id6615 . -1) (undo-tree-id6616 . -1) (undo-tree-id6617 . -1) (undo-tree-id6618 . -1) (undo-tree-id6619 . -1) (undo-tree-id6620 . -1) (undo-tree-id6621 . -1) (undo-tree-id6622 . -1) (undo-tree-id6623 . -1) (undo-tree-id6624 . -1) (undo-tree-id6625 . -1) (#("f" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -70336) (undo-tree-id6626 . -1) (undo-tree-id6627 . -1) (undo-tree-id6628 . -1) (undo-tree-id6629 . -1) (undo-tree-id6630 . -1) (undo-tree-id6631 . -1) (undo-tree-id6632 . -1) (undo-tree-id6633 . -1) (undo-tree-id6634 . -1) (undo-tree-id6635 . -1) 70337 (t 25151 22543 807772 519000)) nil (25151 23826 881316 993000) 0 nil])
([nil nil ((69641 . 72574) (#("
     (defun zetteldesk-has-note-p (refs)
       \"Helper function for use in `zetteldesk-note-refs-p'.

     Iterates over REFS which is a list of items and for each item
     checks if it is a list and if it is, checks if its car is
     \\\"=has-note=\\\" and if so collects it.\"
       (cl-loop for item in refs
		if (listp item)
		if (assoc \"=has-note=\" (list item))
		collect item))

     (defun zetteldesk-note-refs-p ()
       \"Predicate function that finds all bibtex completion candidates with a note.

     Uses `zetteldesk-has-note-p' to find all
     bibtex-completion-candidates that have a note.\"
       (cl-loop for ref in (bibtex-completion-candidates)
		if (assoc \"=has-note=\" ref)
		collect ref))

     (defun org-roam-node-read--completions* (node-list &optional filter-fn sort-fn)
       \"Runs `org-roam-node-read--completions' with NODE-LIST being a list of nodes.

     Typically, the function takes `org-roam-node-list' as the initial
     list of nodes and creates the alist `org-roam-node-read'
     uses. However, it can be helpful to supply the list of nodes
     yourself, when the predicate function used cannot be inferred
     through a filter function of the form this function
     takes. FILTER-FN and SORT-FN are the same as in
     `org-roam-node-read--completions'. The resulting alist is to be
     used with `org-roam-node-read*'.\"
       (let* ((template (org-roam-node--process-display-format org-roam-node-display-template))
	      (nodes node-list)
	      (nodes (mapcar (lambda (node)
			       (org-roam-node-read--to-candidate node template)) nodes))
	      (nodes (if filter-fn
			 (cl-remove-if-not
			  (lambda (n) (funcall filter-fn (cdr n)))
			  nodes)
		       nodes))
	      (sort-fn (or sort-fn
			   (when org-roam-node-default-sort
			     (intern (concat \"org-roam-node-read-sort-by-\"
					     (symbol-name org-roam-node-default-sort))))))
	      (nodes (if sort-fn (seq-sort sort-fn nodes)
		       nodes)))
	 nodes))

     (defun org-roam-node-read* (node-list &optional initial-input filter-fn sort-fn require-match prompt)
       \"Runs `org-roam-node-read' with the nodes supplied by NODE-LIST.

     NODE-LIST is a list of nodes passed to
     `org-roam-node-read--completions*', which creates an alist of
     nodes with the proper formatting to be used in this
     function. This is for those cases where it is helpful to use your
     own list of nodes, because a predicate function can not filter
     them in the way you want easily.\"
       (let* ((nodes (org-roam-node-read--completions* node-list filter-fn sort-fn))
	      (prompt (or prompt \"Node: \"))
	      (node (completing-read
		     prompt
		     (lambda (string pred action)
		       (if (eq action 'metadata)
			   `(metadata
			     ;; Preserve sorting in the completion UI if a sort-fn is used
			     ,@(when sort-fn
				 '((display-sort-function . identity)
				   (cycle-sort-function . identity)))
			     (annotation-function
			      . ,(lambda (title)
				   (funcall org-roam-node-annotation-function
					    (get-text-property 0 'node title))))
			     (category . org-roam-node))
			 (complete-with-action action nodes string pred)))
		     nil require-match initial-input 'org-roam-node-history)))
	 (or (cdr (assoc node nodes))
	     (org-roam-node-create :title node))))

" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 7 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7 12 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12 13 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 34 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 34 49 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 49 78 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 78 100 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 100 241 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 241 242 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 242 250 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 250 251 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 251 277 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 277 286 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 286 293 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 293 341 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 341 342 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 342 343 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 343 351 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 351 352 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 352 353 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 353 391 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 391 396 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 396 397 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 397 419 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 419 430 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 430 479 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 479 501 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 501 507 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 507 508 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 508 519 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 519 540 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 540 554 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 554 606 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 606 615 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 615 622 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 622 670 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 670 677 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 677 678 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 678 679 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 679 687 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 687 688 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 688 689 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 689 693 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 693 694 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 694 718 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 718 723 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 723 724 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 724 756 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 756 768 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 768 777 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 777 804 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 804 811 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 811 842 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 842 919 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 919 937 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 937 954 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 954 996 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 996 1014 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1014 1016 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1016 1259 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1259 1265 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1265 1296 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1296 1328 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1328 1344 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1344 1363 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1363 1366 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1366 1375 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1375 1379 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1379 1511 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1511 1517 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1517 1585 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1585 1592 (fontified t font-lock-fontified t help-echo "Hidden behind deeper element; move to another line?" src-block t font-lock-multiline t face (font-lock-warning-face org-block)) 1592 1608 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1608 1610 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1610 1649 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1649 1655 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1655 1701 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1701 1718 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1718 1735 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1735 1737 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1737 1753 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1753 1757 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1757 1809 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1809 1838 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1838 1895 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1895 1910 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1910 1912 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1912 1946 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1946 1981 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1981 1986 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1986 1987 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1987 2006 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 2006 2018 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2018 2027 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 2027 2089 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2089 2096 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2096 2114 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2114 2205 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2205 2237 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2237 2446 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2446 2462 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2462 2500 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2500 2509 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2509 2513 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2513 2602 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2602 2604 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2604 2612 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2612 2620 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2620 2623 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2623 2653 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2653 2675 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2675 2681 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2681 2713 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2713 2715 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2715 2763 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2763 2766 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2766 2825 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 2825 2836 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2836 2840 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2840 2962 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2962 2975 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2975 2981 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2981 2990 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2990 3176 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3176 3241 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3241 3244 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3244 3246 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3246 3272 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3272 3300 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3300 3306 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 3306 3317 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 69641) (undo-tree-id0 . -382) (undo-tree-id1 . -381) (undo-tree-id2 . 2935) (undo-tree-id3 . -381) (undo-tree-id4 . -381) (undo-tree-id5 . -1365) (undo-tree-id6 . -1365) (undo-tree-id7 . -234) (undo-tree-id8 . -1365) (undo-tree-id9 . -1365) (undo-tree-id10 . -234) (undo-tree-id11 . -1365) (undo-tree-id12 . -1365) (undo-tree-id13 . -234) (undo-tree-id14 . -1365) (undo-tree-id15 . -1365) (undo-tree-id16 . -234) (undo-tree-id17 . -1839) (undo-tree-id18 . -1839) (undo-tree-id19 . -888) (undo-tree-id20 . -888) (undo-tree-id21 . -888) (undo-tree-id22 . -888) (undo-tree-id23 . -888) (undo-tree-id24 . -42) (undo-tree-id25 . -171) (undo-tree-id26 . -171) (undo-tree-id27 . -171) (undo-tree-id28 . -42) (undo-tree-id29 . -171) (undo-tree-id30 . -171) (undo-tree-id31 . -42) (undo-tree-id32 . -171) (undo-tree-id33 . -171) (undo-tree-id34 . -42) (undo-tree-id35 . -171) (undo-tree-id36 . -171) (undo-tree-id37 . -171) (undo-tree-id38 . -1839) (undo-tree-id39 . -1839) (undo-tree-id40 . -1839) (undo-tree-id41 . -1839) (undo-tree-id42 . -1839) (undo-tree-id43 . -1839) (undo-tree-id44 . -1839) (undo-tree-id45 . -1839) (undo-tree-id46 . -1839) (undo-tree-id47 . -1839) (undo-tree-id48 . -1839) (undo-tree-id49 . -1839) (undo-tree-id50 . -1839) (undo-tree-id51 . -1839) (undo-tree-id52 . -1839) (undo-tree-id53 . -1839) (undo-tree-id54 . -1839) (undo-tree-id55 . -1839) (undo-tree-id56 . -1839) (undo-tree-id57 . -1839) (undo-tree-id58 . -1839) (undo-tree-id59 . -1839) (undo-tree-id60 . -1839) (undo-tree-id61 . -1839) (undo-tree-id62 . -1839) (undo-tree-id63 . -1839) (undo-tree-id64 . -1839) (undo-tree-id65 . -1839) (undo-tree-id66 . -1839) (undo-tree-id67 . -1839) (undo-tree-id68 . -1839) (undo-tree-id69 . -1839) (undo-tree-id70 . -1839) (undo-tree-id71 . -507) (undo-tree-id72 . -507) (undo-tree-id73 . -670) (undo-tree-id74 . -670) (undo-tree-id75 . -670) (undo-tree-id76 . -670) (undo-tree-id77 . -670) (undo-tree-id78 . -670) (undo-tree-id79 . -670) (undo-tree-id80 . -670) (undo-tree-id81 . -670) (undo-tree-id82 . -670) (undo-tree-id83 . -670) (undo-tree-id84 . -670) (undo-tree-id85 . -670) (undo-tree-id86 . -670) (undo-tree-id87 . -670) (undo-tree-id88 . -670) (undo-tree-id89 . -670) (undo-tree-id90 . -670) (undo-tree-id91 . -670) (undo-tree-id92 . -670) (undo-tree-id93 . -670) (undo-tree-id94 . -670) (undo-tree-id95 . -670) (undo-tree-id96 . -670) (undo-tree-id97 . -670) (undo-tree-id98 . -670) (undo-tree-id99 . -670) (undo-tree-id100 . -670) (undo-tree-id101 . -670) (undo-tree-id102 . -670) (undo-tree-id103 . -670) (undo-tree-id104 . -670) (undo-tree-id105 . -670) (undo-tree-id106 . -670) (undo-tree-id107 . -670) (undo-tree-id108 . -670) (undo-tree-id109 . -670) (undo-tree-id110 . -670) (undo-tree-id111 . -670) (undo-tree-id112 . -670) (undo-tree-id113 . -670) (undo-tree-id114 . -670) (undo-tree-id115 . -670) (undo-tree-id116 . -670) (undo-tree-id117 . -670) (undo-tree-id118 . -670) (undo-tree-id119 . -670) (undo-tree-id120 . -670) (undo-tree-id121 . -670) (undo-tree-id122 . -670) (undo-tree-id123 . -670) (undo-tree-id124 . -670) (undo-tree-id125 . -670) (undo-tree-id126 . -670) (undo-tree-id127 . -670) (undo-tree-id128 . -670) (undo-tree-id129 . -670) (undo-tree-id130 . -670) (undo-tree-id131 . -670) (undo-tree-id132 . -670) (undo-tree-id133 . -670) (undo-tree-id134 . -670) (undo-tree-id135 . -670) (undo-tree-id136 . -670) (undo-tree-id137 . -670) (undo-tree-id138 . -670) (undo-tree-id139 . -670) (undo-tree-id140 . -670) (undo-tree-id141 . -670) (undo-tree-id142 . -670) (undo-tree-id143 . -670) (undo-tree-id144 . -670) (undo-tree-id145 . -670) (undo-tree-id146 . -670) (undo-tree-id147 . -670) (undo-tree-id148 . -670) (undo-tree-id149 . -670) (undo-tree-id150 . -670) (undo-tree-id151 . -670) (undo-tree-id152 . -670) (undo-tree-id153 . -670) (undo-tree-id154 . -670) (undo-tree-id155 . -670) (undo-tree-id156 . -670) (undo-tree-id157 . -670) (undo-tree-id158 . -670) (undo-tree-id159 . -670) (undo-tree-id160 . -670) (undo-tree-id161 . -670) (undo-tree-id162 . -670) (undo-tree-id163 . -670) (undo-tree-id164 . -670) (undo-tree-id165 . -670) (undo-tree-id166 . -670) (undo-tree-id167 . -670) (undo-tree-id168 . -670) (undo-tree-id169 . -670) (undo-tree-id170 . -670) (undo-tree-id171 . -670) (undo-tree-id172 . -670) (undo-tree-id173 . -670) (undo-tree-id174 . -670) (undo-tree-id175 . -670) (undo-tree-id176 . -670) (undo-tree-id177 . -670) (undo-tree-id178 . -670) (undo-tree-id179 . -670) (undo-tree-id180 . -670) (undo-tree-id181 . -670) (undo-tree-id182 . -670) (undo-tree-id183 . -670) (undo-tree-id184 . -670) (undo-tree-id185 . -670) (undo-tree-id186 . -670) (undo-tree-id187 . -670) (undo-tree-id188 . -670) (undo-tree-id189 . -670) (undo-tree-id190 . -670) (undo-tree-id191 . -670) (undo-tree-id192 . -670) (undo-tree-id193 . -670) (undo-tree-id194 . -670) (undo-tree-id195 . -670) (undo-tree-id196 . -670) (undo-tree-id197 . -670) (undo-tree-id198 . -670) (undo-tree-id199 . -670) (undo-tree-id200 . -670) (undo-tree-id201 . -670) (undo-tree-id202 . -670) (undo-tree-id203 . -670) (undo-tree-id204 . -670) (undo-tree-id205 . -670) (undo-tree-id206 . -670) (undo-tree-id207 . -670) (undo-tree-id208 . -670) (undo-tree-id209 . -670) (undo-tree-id210 . -670) (undo-tree-id211 . -670) (undo-tree-id212 . -670) (undo-tree-id213 . -670) (undo-tree-id214 . -670) (undo-tree-id215 . -670) (undo-tree-id216 . -670) (undo-tree-id217 . -670) (undo-tree-id218 . -670) (undo-tree-id219 . -670) (undo-tree-id220 . -670) (undo-tree-id221 . -670) (undo-tree-id222 . -670) (undo-tree-id223 . -670) (undo-tree-id224 . -670) (undo-tree-id225 . -670) (undo-tree-id226 . -670) (undo-tree-id227 . -670) (undo-tree-id228 . -670) (undo-tree-id229 . -670) (undo-tree-id230 . -670) (undo-tree-id231 . -670) (undo-tree-id232 . -670) (undo-tree-id233 . -670) (undo-tree-id234 . -670) (undo-tree-id235 . -670) (undo-tree-id236 . -670) (undo-tree-id237 . -670) (undo-tree-id238 . -670) (undo-tree-id239 . -670) (undo-tree-id240 . -670) (undo-tree-id241 . -670) (undo-tree-id242 . -670) (undo-tree-id243 . -670) (undo-tree-id244 . -670) (undo-tree-id245 . -670) (undo-tree-id246 . -670) (undo-tree-id247 . -670) (undo-tree-id248 . -670) (undo-tree-id249 . -670) (undo-tree-id250 . -670) (undo-tree-id251 . -670) (undo-tree-id252 . -670) (undo-tree-id253 . -670) (undo-tree-id254 . -670) (undo-tree-id255 . -670) (undo-tree-id256 . -670) (undo-tree-id257 . -670) (undo-tree-id258 . -670) (undo-tree-id259 . -670) (undo-tree-id260 . -670) (undo-tree-id261 . -670) (undo-tree-id262 . -670) (undo-tree-id263 . -670) (undo-tree-id264 . -670) (undo-tree-id265 . -670) (undo-tree-id266 . -670) (undo-tree-id267 . -670) (undo-tree-id268 . -670) (undo-tree-id269 . -670) (undo-tree-id270 . -670) (undo-tree-id271 . -670) (undo-tree-id272 . -670) (undo-tree-id273 . -670) (undo-tree-id274 . -670) (undo-tree-id275 . -670) (undo-tree-id276 . -670) (undo-tree-id277 . -670) (undo-tree-id278 . -670) (undo-tree-id279 . -670) (undo-tree-id280 . -670) (undo-tree-id281 . -670) (undo-tree-id282 . -670) (undo-tree-id283 . -670) (undo-tree-id284 . -670) (undo-tree-id285 . -670) (undo-tree-id286 . -670) (undo-tree-id287 . -670) (undo-tree-id288 . -670) (undo-tree-id289 . -670) (undo-tree-id290 . -670) (undo-tree-id291 . -670) (undo-tree-id292 . -670) (undo-tree-id293 . -670) (undo-tree-id294 . -670) (undo-tree-id295 . -670) (undo-tree-id296 . -670) (undo-tree-id297 . -670) (undo-tree-id298 . -670) (undo-tree-id299 . -670) (undo-tree-id300 . -670) (undo-tree-id301 . -670) (undo-tree-id302 . -670) (undo-tree-id303 . -670) (undo-tree-id304 . -670) (undo-tree-id305 . -670) (undo-tree-id306 . -670) (undo-tree-id307 . -670) (undo-tree-id308 . -670) (undo-tree-id309 . -670) (undo-tree-id310 . -670) (undo-tree-id311 . -670) (undo-tree-id312 . -670) (undo-tree-id313 . -670) (undo-tree-id314 . -670) (undo-tree-id315 . -670) (undo-tree-id316 . -670) (undo-tree-id317 . -670) (undo-tree-id318 . -670) (undo-tree-id319 . -670) (undo-tree-id320 . -670) (undo-tree-id321 . -670) (undo-tree-id322 . -670) (undo-tree-id323 . -670) (undo-tree-id324 . -670) (undo-tree-id325 . -670) (undo-tree-id326 . -670) (undo-tree-id327 . -670) (undo-tree-id328 . -670) (undo-tree-id329 . -670) (undo-tree-id330 . -670) (undo-tree-id331 . -670) (undo-tree-id332 . -670) (undo-tree-id333 . -670) (undo-tree-id334 . -670) (undo-tree-id335 . -670) (undo-tree-id336 . -670) (undo-tree-id337 . -670) (undo-tree-id338 . -671) (undo-tree-id339 . -670) (undo-tree-id340 . -671) (undo-tree-id341 . -671) (undo-tree-id342 . -671) (undo-tree-id343 . -671) (undo-tree-id344 . -671) (undo-tree-id345 . -671) (undo-tree-id346 . -672) (undo-tree-id347 . -671) (undo-tree-id348 . -672) (undo-tree-id349 . -672) (undo-tree-id350 . -672) (undo-tree-id351 . -672) (undo-tree-id352 . -672) (undo-tree-id353 . -672) (undo-tree-id354 . -673) (undo-tree-id355 . -672) (undo-tree-id356 . -673) (undo-tree-id357 . -673) (undo-tree-id358 . -673) (undo-tree-id359 . -673) (undo-tree-id360 . -673) (undo-tree-id361 . -673) (undo-tree-id362 . -674) (undo-tree-id363 . -673) (undo-tree-id364 . -674) (undo-tree-id365 . -674) (undo-tree-id366 . -674) (undo-tree-id367 . -674) (undo-tree-id368 . -674) (undo-tree-id369 . -674) (undo-tree-id370 . -675) (undo-tree-id371 . -674) (undo-tree-id372 . -675) (undo-tree-id373 . -675) (undo-tree-id374 . -675) (undo-tree-id375 . -675) (undo-tree-id376 . -675) (undo-tree-id377 . -675) (undo-tree-id378 . -676) (undo-tree-id379 . -675) (undo-tree-id380 . -676) (undo-tree-id381 . -676) (undo-tree-id382 . -676) (undo-tree-id383 . -676) (undo-tree-id384 . -676) (undo-tree-id385 . -676) (undo-tree-id386 . -676) (undo-tree-id387 . -676) (undo-tree-id388 . -676) (undo-tree-id389 . -676) (undo-tree-id390 . -676) (undo-tree-id391 . -676) (undo-tree-id392 . -676) (undo-tree-id393 . -676) (undo-tree-id394 . -676) (undo-tree-id395 . -676) (undo-tree-id396 . -676) (undo-tree-id397 . -676) (undo-tree-id398 . -676) (undo-tree-id399 . -676) (undo-tree-id400 . -676) (undo-tree-id401 . -676) (undo-tree-id402 . -676) (undo-tree-id403 . -676) (undo-tree-id404 . -676) (undo-tree-id405 . -676) (undo-tree-id406 . -677) (undo-tree-id407 . -676) (undo-tree-id408 . -677) (undo-tree-id409 . -677) (undo-tree-id410 . -677) (undo-tree-id411 . -677) (undo-tree-id412 . -677) (undo-tree-id413 . -677) (undo-tree-id414 . -677) (undo-tree-id415 . -678) (undo-tree-id416 . -677) (undo-tree-id417 . -678) (undo-tree-id418 . -678) (undo-tree-id419 . -678) (undo-tree-id420 . -678) (undo-tree-id421 . -678) (undo-tree-id422 . -678) (undo-tree-id423 . -679) (undo-tree-id424 . -678) (undo-tree-id425 . -679) (undo-tree-id426 . -679) (undo-tree-id427 . -679) (undo-tree-id428 . -679) (undo-tree-id429 . -679) (undo-tree-id430 . -679) (undo-tree-id431 . -680) (undo-tree-id432 . -679) (undo-tree-id433 . -680) (undo-tree-id434 . -680) (undo-tree-id435 . -680) (undo-tree-id436 . -680) (undo-tree-id437 . -680) (undo-tree-id438 . -680) (undo-tree-id439 . -681) (undo-tree-id440 . -680) (undo-tree-id441 . -681) (undo-tree-id442 . -681) (undo-tree-id443 . -681) (undo-tree-id444 . -681) (undo-tree-id445 . -681) (undo-tree-id446 . -681) (undo-tree-id447 . -682) (undo-tree-id448 . -681) (undo-tree-id449 . -682) (undo-tree-id450 . -682) (undo-tree-id451 . -682) (undo-tree-id452 . -682) (undo-tree-id453 . -682) (undo-tree-id454 . -682) (undo-tree-id455 . -683) (undo-tree-id456 . -682) (undo-tree-id457 . -683) (undo-tree-id458 . -683) (undo-tree-id459 . -683) (undo-tree-id460 . -683) (undo-tree-id461 . -683) (undo-tree-id462 . -683) (undo-tree-id463 . -684) (undo-tree-id464 . -683) (undo-tree-id465 . -684) (undo-tree-id466 . -684) (undo-tree-id467 . -684) (undo-tree-id468 . -684) (undo-tree-id469 . -684) (undo-tree-id470 . -684) (undo-tree-id471 . -685) (undo-tree-id472 . -684) (undo-tree-id473 . -685) (undo-tree-id474 . -685) (undo-tree-id475 . -685) (undo-tree-id476 . -685) (undo-tree-id477 . -685) (undo-tree-id478 . -685) (undo-tree-id479 . -686) (undo-tree-id480 . -685) (undo-tree-id481 . -686) (undo-tree-id482 . -686) (undo-tree-id483 . -686) (undo-tree-id484 . -686) (undo-tree-id485 . -686) (undo-tree-id486 . -686) (undo-tree-id487 . -687) (undo-tree-id488 . -686) (undo-tree-id489 . -687) (undo-tree-id490 . -687) (undo-tree-id491 . -687) (undo-tree-id492 . -687) (undo-tree-id493 . -687) (undo-tree-id494 . -687) (undo-tree-id495 . -687) (undo-tree-id496 . -687) (undo-tree-id497 . -687) (undo-tree-id498 . -687) (undo-tree-id499 . -687) (undo-tree-id500 . -687) (undo-tree-id501 . -687) (undo-tree-id502 . -687) (undo-tree-id503 . -687) (undo-tree-id504 . -687) (undo-tree-id505 . -687) (undo-tree-id506 . -687) (undo-tree-id507 . -687) (undo-tree-id508 . -687) (undo-tree-id509 . -687) (undo-tree-id510 . -687) (undo-tree-id511 . -687) (undo-tree-id512 . -687) (undo-tree-id513 . -687) (undo-tree-id514 . -687) (undo-tree-id515 . -688) (undo-tree-id516 . -687) (undo-tree-id517 . -688) (undo-tree-id518 . -688) (undo-tree-id519 . -688) (undo-tree-id520 . -688) (undo-tree-id521 . -688) (undo-tree-id522 . -688) (undo-tree-id523 . -688) (undo-tree-id524 . -689) (undo-tree-id525 . -688) (undo-tree-id526 . -690) (undo-tree-id527 . -689) (undo-tree-id528 . -690) (undo-tree-id529 . -690) (undo-tree-id530 . -690) (undo-tree-id531 . -690) (undo-tree-id532 . -690) (undo-tree-id533 . -690) (undo-tree-id534 . -690) (undo-tree-id535 . -690) (undo-tree-id536 . -690) (undo-tree-id537 . -690) (undo-tree-id538 . -690) (undo-tree-id539 . -690) (undo-tree-id540 . -690) (undo-tree-id541 . -690) (undo-tree-id542 . -690) (undo-tree-id543 . -690) (undo-tree-id544 . -690) (undo-tree-id545 . -690) (undo-tree-id546 . -690) (undo-tree-id547 . -690) (undo-tree-id548 . -690) (undo-tree-id549 . -690) (undo-tree-id550 . -690) (undo-tree-id551 . -690) (undo-tree-id552 . -690) (undo-tree-id553 . -690) (undo-tree-id554 . -690) (undo-tree-id555 . -690) (undo-tree-id556 . -690) (undo-tree-id557 . -690) (undo-tree-id558 . -690) (undo-tree-id559 . -690) (undo-tree-id560 . -690) (undo-tree-id561 . -690) (undo-tree-id562 . -690) (undo-tree-id563 . -690) (undo-tree-id564 . -690) (undo-tree-id565 . -690) (undo-tree-id566 . -690) (undo-tree-id567 . -690) (undo-tree-id568 . -690) (undo-tree-id569 . -690) (undo-tree-id570 . -690) (undo-tree-id571 . -690) (undo-tree-id572 . -690) (undo-tree-id573 . -690) (undo-tree-id574 . -690) (undo-tree-id575 . -690) (undo-tree-id576 . -690) (undo-tree-id577 . -690) (undo-tree-id578 . -690) (undo-tree-id579 . -690) (undo-tree-id580 . -690) (undo-tree-id581 . -690) (undo-tree-id582 . -690) (undo-tree-id583 . -690) (undo-tree-id584 . -690) (undo-tree-id585 . -690) (undo-tree-id586 . -690) (undo-tree-id587 . -690) (undo-tree-id588 . -690) (undo-tree-id589 . -690) (undo-tree-id590 . -690) (undo-tree-id591 . -690) (undo-tree-id592 . -690) (undo-tree-id593 . -690) (undo-tree-id594 . -690) (undo-tree-id595 . -690) (undo-tree-id596 . -690) (undo-tree-id597 . -690) (undo-tree-id598 . -690) (undo-tree-id599 . -690) (undo-tree-id600 . -690) (undo-tree-id601 . -690) (undo-tree-id602 . -690) (undo-tree-id603 . -690) (undo-tree-id604 . -690) (undo-tree-id605 . -690) (undo-tree-id606 . -690) (undo-tree-id607 . -690) (undo-tree-id608 . -690) (undo-tree-id609 . -690) (undo-tree-id610 . -690) (undo-tree-id611 . -690) (undo-tree-id612 . -690) (undo-tree-id613 . -690) (undo-tree-id614 . -690) (undo-tree-id615 . -690) (undo-tree-id616 . -690) (undo-tree-id617 . -690) (undo-tree-id618 . -690) (undo-tree-id619 . -690) (undo-tree-id620 . -690) (undo-tree-id621 . -690) (undo-tree-id622 . -690) (undo-tree-id623 . -690) (undo-tree-id624 . -690) (undo-tree-id625 . -690) (undo-tree-id626 . -690) (undo-tree-id627 . -690) (undo-tree-id628 . -690) (undo-tree-id629 . -690) (undo-tree-id630 . -690) (undo-tree-id631 . -690) (undo-tree-id632 . -690) (undo-tree-id633 . -690) (undo-tree-id634 . -690) (undo-tree-id635 . -690) (undo-tree-id636 . -690) (undo-tree-id637 . -690) (undo-tree-id638 . -690) (undo-tree-id639 . -690) (undo-tree-id640 . -690) (undo-tree-id641 . -690) (undo-tree-id642 . -690) (undo-tree-id643 . -690) (undo-tree-id644 . -690) (undo-tree-id645 . -690) (undo-tree-id646 . -690) (undo-tree-id647 . -690) (undo-tree-id648 . -690) (undo-tree-id649 . -690) (undo-tree-id650 . -690) (undo-tree-id651 . -690) (undo-tree-id652 . -690) (undo-tree-id653 . -690) (undo-tree-id654 . -690) (undo-tree-id655 . -690) (undo-tree-id656 . -690) (undo-tree-id657 . -690) (undo-tree-id658 . -690) (undo-tree-id659 . -690) (undo-tree-id660 . -690) (undo-tree-id661 . -690) (undo-tree-id662 . -690) (undo-tree-id663 . -690) (undo-tree-id664 . -690) (undo-tree-id665 . -690) (undo-tree-id666 . -690) (undo-tree-id667 . -690) (undo-tree-id668 . -690) (undo-tree-id669 . -690) (undo-tree-id670 . -690) (undo-tree-id671 . -690) (undo-tree-id672 . -690) (undo-tree-id673 . -690) (undo-tree-id674 . -690) (undo-tree-id675 . -690) (undo-tree-id676 . -690) (undo-tree-id677 . -690) (undo-tree-id678 . -690) (undo-tree-id679 . -690) (undo-tree-id680 . -690) (undo-tree-id681 . -690) (undo-tree-id682 . -690) (undo-tree-id683 . -690) (undo-tree-id684 . -690) (undo-tree-id685 . -690) (undo-tree-id686 . -690) (undo-tree-id687 . -690) (undo-tree-id688 . -690) (undo-tree-id689 . -690) (undo-tree-id690 . -690) (undo-tree-id691 . -690) (undo-tree-id692 . -690) (undo-tree-id693 . -690) (undo-tree-id694 . -694) (undo-tree-id695 . -690) (undo-tree-id696 . -690) (undo-tree-id697 . -694) (undo-tree-id698 . -690) (undo-tree-id699 . -690) (undo-tree-id700 . -690) (undo-tree-id701 . -690) (undo-tree-id702 . -690) (undo-tree-id703 . -690) (undo-tree-id704 . -690) (undo-tree-id705 . -690) (undo-tree-id706 . -690) (undo-tree-id707 . -690) (undo-tree-id708 . -690) (undo-tree-id709 . -690) (undo-tree-id710 . -690) (undo-tree-id711 . -690) (undo-tree-id712 . -690) (undo-tree-id713 . -690) (undo-tree-id714 . -690) (undo-tree-id715 . -690) (undo-tree-id716 . -690) (undo-tree-id717 . -690) (undo-tree-id718 . -690) (undo-tree-id719 . -690) (undo-tree-id720 . -690) (undo-tree-id721 . -690) (undo-tree-id722 . -690) (undo-tree-id723 . -690) (undo-tree-id724 . -690) (undo-tree-id725 . -690) (undo-tree-id726 . -690) (undo-tree-id727 . -690) (undo-tree-id728 . -690) (undo-tree-id729 . -690) (undo-tree-id730 . -690) (undo-tree-id731 . -690) (undo-tree-id732 . -690) (undo-tree-id733 . -690) (undo-tree-id734 . -690) (undo-tree-id735 . -690) (undo-tree-id736 . -690) (undo-tree-id737 . -690) (undo-tree-id738 . -690) (undo-tree-id739 . -690) (undo-tree-id740 . -690) (undo-tree-id741 . -690) (undo-tree-id742 . -690) (undo-tree-id743 . -690) (undo-tree-id744 . -690) (undo-tree-id745 . -690) (undo-tree-id746 . -690) (undo-tree-id747 . -690) (undo-tree-id748 . -690) (undo-tree-id749 . -690) (undo-tree-id750 . -690) (undo-tree-id751 . -690) (undo-tree-id752 . -690) (undo-tree-id753 . -690) (undo-tree-id754 . -690) (undo-tree-id755 . -690) (undo-tree-id756 . -690) (undo-tree-id757 . -690) (undo-tree-id758 . -690) (undo-tree-id759 . -690) (undo-tree-id760 . -690) (undo-tree-id761 . -690) (undo-tree-id762 . -690) (undo-tree-id763 . -690) (undo-tree-id764 . -690) (undo-tree-id765 . -690) (undo-tree-id766 . -690) (undo-tree-id767 . -690) (undo-tree-id768 . -690) (undo-tree-id769 . -690) (undo-tree-id770 . -690) (undo-tree-id771 . -690) (undo-tree-id772 . -691) (undo-tree-id773 . -690) (undo-tree-id774 . -691) (undo-tree-id775 . -691) (undo-tree-id776 . -691) (undo-tree-id777 . -691) (undo-tree-id778 . -691) (undo-tree-id779 . -691) (undo-tree-id780 . -692) (undo-tree-id781 . -691) (undo-tree-id782 . -692) (undo-tree-id783 . -692) (undo-tree-id784 . -692) (undo-tree-id785 . -692) (undo-tree-id786 . -692) (undo-tree-id787 . -692) (undo-tree-id788 . -693) (undo-tree-id789 . -692) (undo-tree-id790 . -693) (undo-tree-id791 . -693) (undo-tree-id792 . -693) (undo-tree-id793 . -693) (undo-tree-id794 . -693) (undo-tree-id795 . -693) (undo-tree-id796 . -693) (undo-tree-id797 . -693) (undo-tree-id798 . -693) (undo-tree-id799 . -693) (undo-tree-id800 . -693) (undo-tree-id801 . -693) (undo-tree-id802 . -693) (undo-tree-id803 . -693) (undo-tree-id804 . -693) (undo-tree-id805 . -693) (undo-tree-id806 . -693) (undo-tree-id807 . -693) (undo-tree-id808 . -693) (undo-tree-id809 . -693) (undo-tree-id810 . -693) (undo-tree-id811 . -693) (undo-tree-id812 . -693) (undo-tree-id813 . -693) (undo-tree-id814 . -693) (undo-tree-id815 . -693) (undo-tree-id816 . -694) (undo-tree-id817 . -693) (undo-tree-id818 . -694) (undo-tree-id819 . -694) (undo-tree-id820 . -694) (undo-tree-id821 . -694) (undo-tree-id822 . -694) (undo-tree-id823 . -694) (undo-tree-id824 . -694) (undo-tree-id825 . -694) (undo-tree-id826 . -694) (undo-tree-id827 . -694) (undo-tree-id828 . -694) (undo-tree-id829 . -694) (undo-tree-id830 . -710) (undo-tree-id831 . -694) (undo-tree-id832 . -710) (undo-tree-id833 . -710) (undo-tree-id834 . -710) (undo-tree-id835 . -710) (undo-tree-id836 . -710) (undo-tree-id837 . -710) (undo-tree-id838 . -710) (undo-tree-id839 . -710) (undo-tree-id840 . -710) (undo-tree-id841 . -710) (undo-tree-id842 . 2607) (undo-tree-id843 . -709) (undo-tree-id844 . -709) (undo-tree-id845 . -709) (undo-tree-id846 . -709) (undo-tree-id847 . -709) (undo-tree-id848 . -709) (undo-tree-id849 . -709) (undo-tree-id850 . -709) (undo-tree-id851 . -709) (undo-tree-id852 . -709) (undo-tree-id853 . -709) (undo-tree-id854 . -709) (undo-tree-id855 . -709) (undo-tree-id856 . -709) (undo-tree-id857 . -709) (undo-tree-id858 . -709) (undo-tree-id859 . -709) (undo-tree-id860 . -709) (undo-tree-id861 . -709) (undo-tree-id862 . -709) (undo-tree-id863 . -709) (undo-tree-id864 . -709) (undo-tree-id865 . -709) (undo-tree-id866 . -709) (undo-tree-id867 . -709) (undo-tree-id868 . -709) (undo-tree-id869 . -709) (undo-tree-id870 . -709) (undo-tree-id871 . -709) (undo-tree-id872 . -709) (undo-tree-id873 . -709) (undo-tree-id874 . -709) (undo-tree-id875 . -709) (undo-tree-id876 . -709) (undo-tree-id877 . -709) (undo-tree-id878 . -709) (undo-tree-id879 . -709) (undo-tree-id880 . -709) (undo-tree-id881 . -709) (undo-tree-id882 . -709) (undo-tree-id883 . -709) (undo-tree-id884 . -709) (undo-tree-id885 . -709) (undo-tree-id886 . -709) (undo-tree-id887 . -709) (undo-tree-id888 . -709) (undo-tree-id889 . -709) (undo-tree-id890 . -709) (undo-tree-id891 . -709) (undo-tree-id892 . -709) (undo-tree-id893 . -709) (undo-tree-id894 . -709) (undo-tree-id895 . -709) (undo-tree-id896 . -709) (undo-tree-id897 . -709) (undo-tree-id898 . -709) (undo-tree-id899 . -709) (undo-tree-id900 . -709) (undo-tree-id901 . -709) (undo-tree-id902 . -709) (undo-tree-id903 . -709) (undo-tree-id904 . -709) (undo-tree-id905 . -709) (undo-tree-id906 . -709) (undo-tree-id907 . -709) (undo-tree-id908 . -709) (undo-tree-id909 . -709) (undo-tree-id910 . -709) (undo-tree-id911 . -709) (undo-tree-id912 . -709) (undo-tree-id913 . -709) (undo-tree-id914 . -709) (undo-tree-id915 . -709) (undo-tree-id916 . -709) (undo-tree-id917 . -709) (undo-tree-id918 . -709) (undo-tree-id919 . -709) (undo-tree-id920 . -709) (undo-tree-id921 . -709) (undo-tree-id922 . -709) (undo-tree-id923 . -709) (undo-tree-id924 . -709) (undo-tree-id925 . -709) (undo-tree-id926 . -709) (undo-tree-id927 . -709) (undo-tree-id928 . -709) (undo-tree-id929 . -709) (undo-tree-id930 . -709) (undo-tree-id931 . -382) (undo-tree-id932 . -382) (undo-tree-id933 . -709) (undo-tree-id934 . -709) (undo-tree-id935 . -709) (undo-tree-id936 . -709) (undo-tree-id937 . -709) (undo-tree-id938 . -709) (undo-tree-id939 . -709) (undo-tree-id940 . -709) (undo-tree-id941 . -709) (undo-tree-id942 . -709) (undo-tree-id943 . -709) (undo-tree-id944 . -709) (undo-tree-id945 . -709) (undo-tree-id946 . -709) (undo-tree-id947 . -709) (undo-tree-id948 . -709) (undo-tree-id949 . -709) (undo-tree-id950 . -709) (undo-tree-id951 . -709) (undo-tree-id952 . -709) (undo-tree-id953 . -709) (undo-tree-id954 . -709) (undo-tree-id955 . -709) (undo-tree-id956 . -709) (undo-tree-id957 . -709) (undo-tree-id958 . -709) (undo-tree-id959 . -709) (undo-tree-id960 . -709) (undo-tree-id961 . -709) (undo-tree-id962 . -709) (undo-tree-id963 . -709) (undo-tree-id964 . -709) (undo-tree-id965 . -709) (undo-tree-id966 . -709) (undo-tree-id967 . -709) (undo-tree-id968 . -709) (undo-tree-id969 . -709) (undo-tree-id970 . -709) (undo-tree-id971 . -709) (undo-tree-id972 . -709) (undo-tree-id973 . -709) (undo-tree-id974 . -709) (undo-tree-id975 . -709) (undo-tree-id976 . -709) (undo-tree-id977 . -709) (undo-tree-id978 . -709) (undo-tree-id979 . -709) (undo-tree-id980 . -709) (undo-tree-id981 . -709) (undo-tree-id982 . -709) (undo-tree-id983 . -709) (undo-tree-id984 . -709) (undo-tree-id985 . -709) (undo-tree-id986 . -709) (undo-tree-id987 . -709) (undo-tree-id988 . -709) (undo-tree-id989 . -709) (undo-tree-id990 . -709) (undo-tree-id991 . -709) (undo-tree-id992 . -709) (undo-tree-id993 . -709) (undo-tree-id994 . -709) (undo-tree-id995 . -709) (undo-tree-id996 . -709) (undo-tree-id997 . -709) (undo-tree-id998 . -709) (undo-tree-id999 . -709) (undo-tree-id1000 . -709) (undo-tree-id1001 . -329) (undo-tree-id1002 . -329) (undo-tree-id1003 . -329) (undo-tree-id1004 . -329) (undo-tree-id1005 . -329) (undo-tree-id1006 . -329) (undo-tree-id1007 . -329) (undo-tree-id1008 . -329) (undo-tree-id1009 . -329) (undo-tree-id1010 . -329) (undo-tree-id1011 . -329) (undo-tree-id1012 . -329) (undo-tree-id1013 . -329) (undo-tree-id1014 . -329) (undo-tree-id1015 . -329) (undo-tree-id1016 . -329) (undo-tree-id1017 . -329) (undo-tree-id1018 . -329) (undo-tree-id1019 . -329) (undo-tree-id1020 . -329) (undo-tree-id1021 . -329) (undo-tree-id1022 . -329) (undo-tree-id1023 . -329) (undo-tree-id1024 . -329) (undo-tree-id1025 . -329) (undo-tree-id1026 . -329) (undo-tree-id1027 . -329) (undo-tree-id1028 . -329) (undo-tree-id1029 . -329) (undo-tree-id1030 . -329) (undo-tree-id1031 . -329) (undo-tree-id1032 . -329) (undo-tree-id1033 . -329) (undo-tree-id1034 . -329) (undo-tree-id1035 . -329) (undo-tree-id1036 . -329) (undo-tree-id1037 . -329) (undo-tree-id1038 . -329) (undo-tree-id1039 . -329) (undo-tree-id1040 . -329) (undo-tree-id1041 . -329) (undo-tree-id1042 . -329) (undo-tree-id1043 . -329) (undo-tree-id1044 . -329) (undo-tree-id1045 . -329) (undo-tree-id1046 . -329) (undo-tree-id1047 . -329) (undo-tree-id1048 . -329) (undo-tree-id1049 . -329) (undo-tree-id1050 . -329) (undo-tree-id1051 . -329) (undo-tree-id1052 . -329) (undo-tree-id1053 . -329) (undo-tree-id1054 . -329) (undo-tree-id1055 . -329) (undo-tree-id1056 . -329) (undo-tree-id1057 . -329) (undo-tree-id1058 . -329) (undo-tree-id1059 . -329) (undo-tree-id1060 . -329) (undo-tree-id1061 . -329) (undo-tree-id1062 . -329) (undo-tree-id1063 . -329) (undo-tree-id1064 . -329) (undo-tree-id1065 . -329) (undo-tree-id1066 . -329) (undo-tree-id1067 . -329) (undo-tree-id1068 . -329) (undo-tree-id1069 . -329) (undo-tree-id1070 . -329) (undo-tree-id1071 . -329) (undo-tree-id1072 . -329) (undo-tree-id1073 . -329) (undo-tree-id1074 . -329) (undo-tree-id1075 . -329) (undo-tree-id1076 . -329) (undo-tree-id1077 . -329) (undo-tree-id1078 . -329) (undo-tree-id1079 . -329) (undo-tree-id1080 . -329) (undo-tree-id1081 . -329) (undo-tree-id1082 . -329) (undo-tree-id1083 . -329) (undo-tree-id1084 . -329) (undo-tree-id1085 . -329) (undo-tree-id1086 . -329) (undo-tree-id1087 . -329) (undo-tree-id1088 . -329) (undo-tree-id1089 . -329) (undo-tree-id1090 . -329) (undo-tree-id1091 . -329) (undo-tree-id1092 . -329) (undo-tree-id1093 . -329) (undo-tree-id1094 . -329) (undo-tree-id1095 . -329) (undo-tree-id1096 . -329) (undo-tree-id1097 . -329) (undo-tree-id1098 . -329) (undo-tree-id1099 . -329) (undo-tree-id1100 . -329) (undo-tree-id1101 . -329) (undo-tree-id1102 . -329) (undo-tree-id1103 . -329) (undo-tree-id1104 . -329) (undo-tree-id1105 . -329) (undo-tree-id1106 . -329) (undo-tree-id1107 . -329) (undo-tree-id1108 . -329) (undo-tree-id1109 . -329) (undo-tree-id1110 . -329) (undo-tree-id1111 . -329) (undo-tree-id1112 . -329) (undo-tree-id1113 . -329) (undo-tree-id1114 . -329) (undo-tree-id1115 . -329) (undo-tree-id1116 . -329) (undo-tree-id1117 . -329) (undo-tree-id1118 . -329) (undo-tree-id1119 . -329) (undo-tree-id1120 . -329) (undo-tree-id1121 . -329) (undo-tree-id1122 . -329) (undo-tree-id1123 . -329) (undo-tree-id1124 . -329) (undo-tree-id1125 . -329) (undo-tree-id1126 . -329) (undo-tree-id1127 . -329) (undo-tree-id1128 . -329) (undo-tree-id1129 . -329) (undo-tree-id1130 . -329) (undo-tree-id1131 . -329) (undo-tree-id1132 . -329) (undo-tree-id1133 . -329) (undo-tree-id1134 . -329) (undo-tree-id1135 . -329) (undo-tree-id1136 . -329) (undo-tree-id1137 . -329) (undo-tree-id1138 . -329) (undo-tree-id1139 . -329) (undo-tree-id1140 . -329) (undo-tree-id1141 . -329) (undo-tree-id1142 . -329) (undo-tree-id1143 . -329) (undo-tree-id1144 . -329) (undo-tree-id1145 . -329) (undo-tree-id1146 . -329) (undo-tree-id1147 . -329) (undo-tree-id1148 . -329) (undo-tree-id1149 . -329) (undo-tree-id1150 . -329) (undo-tree-id1151 . -329) (undo-tree-id1152 . -329) (undo-tree-id1153 . -329) (undo-tree-id1154 . -329) (undo-tree-id1155 . -329) (undo-tree-id1156 . -329) (undo-tree-id1157 . -329) (undo-tree-id1158 . -329) (undo-tree-id1159 . -329) (undo-tree-id1160 . -329) (undo-tree-id1161 . -329) (undo-tree-id1162 . -329) (undo-tree-id1163 . -329) (undo-tree-id1164 . -329) (undo-tree-id1165 . -329) (undo-tree-id1166 . -329) (undo-tree-id1167 . -329) (undo-tree-id1168 . -329) (undo-tree-id1169 . -329) (undo-tree-id1170 . -329) (undo-tree-id1171 . -329) (undo-tree-id1172 . -329) (undo-tree-id1173 . -329) (undo-tree-id1174 . -329) (undo-tree-id1175 . -329) (undo-tree-id1176 . -329) (undo-tree-id1177 . -329) (undo-tree-id1178 . -329) (undo-tree-id1179 . -329) (undo-tree-id1180 . -329) (undo-tree-id1181 . -329) (undo-tree-id1182 . -329) (undo-tree-id1183 . -329) (undo-tree-id1184 . -329) (undo-tree-id1185 . -329) (undo-tree-id1186 . -329) (undo-tree-id1187 . -329) (undo-tree-id1188 . -329) (undo-tree-id1189 . -329) (undo-tree-id1190 . -329) (undo-tree-id1191 . -329) (undo-tree-id1192 . -329) (undo-tree-id1193 . -329) (undo-tree-id1194 . -329) (undo-tree-id1195 . -329) (undo-tree-id1196 . -329) (undo-tree-id1197 . -329) (undo-tree-id1198 . -329) (undo-tree-id1199 . -329) (undo-tree-id1200 . -329) (undo-tree-id1201 . -329) (undo-tree-id1202 . -329) (undo-tree-id1203 . -329) (undo-tree-id1204 . -329) (undo-tree-id1205 . -329) (undo-tree-id1206 . -329) (undo-tree-id1207 . -329) (undo-tree-id1208 . -329) (undo-tree-id1209 . -329) (undo-tree-id1210 . -329) (undo-tree-id1211 . -329) (undo-tree-id1212 . -329) (undo-tree-id1213 . -329) (undo-tree-id1214 . -329) (undo-tree-id1215 . -329) (undo-tree-id1216 . -329) (undo-tree-id1217 . -329) (undo-tree-id1218 . -329) (undo-tree-id1219 . -329) (undo-tree-id1220 . -329) (undo-tree-id1221 . -329) (undo-tree-id1222 . -329) (undo-tree-id1223 . -329) (undo-tree-id1224 . -329) (undo-tree-id1225 . -329) (undo-tree-id1226 . -329) (undo-tree-id1227 . -329) (undo-tree-id1228 . -329) (undo-tree-id1229 . -329) (undo-tree-id1230 . -329) (undo-tree-id1231 . -329) (undo-tree-id1232 . -329) (undo-tree-id1233 . -329) (undo-tree-id1234 . -329) (undo-tree-id1235 . -329) (undo-tree-id1236 . -329) (undo-tree-id1237 . -329) (undo-tree-id1238 . -329) (undo-tree-id1239 . -329) (undo-tree-id1240 . -329) (undo-tree-id1241 . -329) (undo-tree-id1242 . -329) (undo-tree-id1243 . -329) (undo-tree-id1244 . -329) (undo-tree-id1245 . -329) (undo-tree-id1246 . -329) (undo-tree-id1247 . -329) (undo-tree-id1248 . -329) (undo-tree-id1249 . -329) (undo-tree-id1250 . -329) (undo-tree-id1251 . -381) (undo-tree-id1252 . -381) (undo-tree-id1253 . -381) (undo-tree-id1254 . -381) (undo-tree-id1255 . -381) (undo-tree-id1256 . -381) (undo-tree-id1257 . -381) (undo-tree-id1258 . -381) (undo-tree-id1259 . -381) (undo-tree-id1260 . -381) (undo-tree-id1261 . -381) (undo-tree-id1262 . -381) (undo-tree-id1263 . -381) (undo-tree-id1264 . -381) (undo-tree-id1265 . -381) (undo-tree-id1266 . -381) (undo-tree-id1267 . -381) (undo-tree-id1268 . -381) (undo-tree-id1269 . -381) (undo-tree-id1270 . -381) (undo-tree-id1271 . -381) (undo-tree-id1272 . -381) (undo-tree-id1273 . -381) (undo-tree-id1274 . -381) (undo-tree-id1275 . -381) (undo-tree-id1276 . -381) (undo-tree-id1277 . -381) (undo-tree-id1278 . -381) (undo-tree-id1279 . -381) (undo-tree-id1280 . -381) (undo-tree-id1281 . -381) (undo-tree-id1282 . -381) (undo-tree-id1283 . -381) (undo-tree-id1284 . -381) (undo-tree-id1285 . -381) (undo-tree-id1286 . -382) (undo-tree-id1287 . -382) (undo-tree-id1288 . -382) (undo-tree-id1289 . -382) (undo-tree-id1290 . -382) (undo-tree-id1291 . -382) (undo-tree-id1292 . -382) (undo-tree-id1293 . -382) (undo-tree-id1294 . -382) (undo-tree-id1295 . -382) (undo-tree-id1296 . -382) (undo-tree-id1297 . -382) (undo-tree-id1298 . -382) (undo-tree-id1299 . -382) (undo-tree-id1300 . -382) (undo-tree-id1301 . -382) (undo-tree-id1302 . -382) (undo-tree-id1303 . -382) (undo-tree-id1304 . -382) (undo-tree-id1305 . -382) (undo-tree-id1306 . -382) (undo-tree-id1307 . -382) (undo-tree-id1308 . -382) (undo-tree-id1309 . -382) (undo-tree-id1310 . -382) (undo-tree-id1311 . -382) (undo-tree-id1312 . -382) (undo-tree-id1313 . -382) (undo-tree-id1314 . -382) (undo-tree-id1315 . -382) (undo-tree-id1316 . -104) (undo-tree-id1317 . -382) (undo-tree-id1318 . -382) (undo-tree-id1319 . -382) (undo-tree-id1320 . -382) (undo-tree-id1321 . -382) (undo-tree-id1322 . -382) (undo-tree-id1323 . -382) (undo-tree-id1324 . -382) (undo-tree-id1325 . -382) (undo-tree-id1326 . -382) (undo-tree-id1327 . -382) (undo-tree-id1328 . -382) (undo-tree-id1329 . -382) (undo-tree-id1330 . -382) (undo-tree-id1331 . -382) (undo-tree-id1332 . -382) (undo-tree-id1333 . -382) (undo-tree-id1334 . -382) (undo-tree-id1335 . -382) (undo-tree-id1336 . -382) (undo-tree-id1337 . -382) (undo-tree-id1338 . -382) (undo-tree-id1339 . -382) (undo-tree-id1340 . -382) (undo-tree-id1341 . -382) (undo-tree-id1342 . -382) (undo-tree-id1343 . -382) (undo-tree-id1344 . -382) (undo-tree-id1345 . -382) (undo-tree-id1346 . -382) (undo-tree-id1347 . -382) (undo-tree-id1348 . -382) (undo-tree-id1349 . -382) (undo-tree-id1350 . -382) (undo-tree-id1351 . -382) (undo-tree-id1352 . -382) (undo-tree-id1353 . -382) 70023) nil (25151 24740 943976 630000) 0 nil])
([nil nil ((69641 . 72593) (#("
     (defun zetteldesk-note-refs-p ()
       \"Predicate function that finds all bibtex completion candidates with a note.

     Uses `zetteldesk-has-note-p' to find all
     bibtex-completion-candidates that have a note.\"
       (cl-loop for ref in (bibtex-completion-candidates)
		if (assoc \"=has-note=\" ref)
		collect ref))

     (defun org-roam-node-read--completions* (node-list &optional filter-fn sort-fn)
       \"Runs `org-roam-node-read--completions' with NODE-LIST being a list of nodes.

     Typically, the function takes `org-roam-node-list' as the initial
     list of nodes and creates the alist `org-roam-node-read'
     uses. However, it can be helpful to supply the list of nodes
     yourself, when the predicate function used cannot be inferred
     through a filter function of the form this function
     takes. FILTER-FN and SORT-FN are the same as in
     `org-roam-node-read--completions'. The resulting alist is to be
     used with `org-roam-node-read*'.\"
       (let* ((template (org-roam-node--process-display-format org-roam-node-display-template))
	      (nodes node-list)
	      (nodes (mapcar (lambda (node)
			       (org-roam-node-read--to-candidate node template)) nodes))
	      (nodes (if filter-fn
			 (cl-remove-if-not
			  (lambda (n) (funcall filter-fn (cdr n)))
			  nodes)
		       nodes))
	      (sort-fn (or sort-fn
			   (when org-roam-node-default-sort
			     (intern (concat \"org-roam-node-read-sort-by-\"
					     (symbol-name org-roam-node-default-sort))))))
	      (nodes (if sort-fn (seq-sort sort-fn nodes)
		       nodes)))
	 nodes))

     (defun org-roam-node-read* (node-list &optional initial-input filter-fn sort-fn require-match prompt)
       \"Runs `org-roam-node-read' with the nodes supplied by NODE-LIST.

     NODE-LIST is a list of nodes passed to
     `org-roam-node-read--completions*', which creates an alist of
     nodes with the proper formatting to be used in this
     function. This is for those cases where it is helpful to use your
     own list of nodes, because a predicate function can not filter
     them in the way you want easily.\"
       (let* ((nodes (org-roam-node-read--completions* node-list filter-fn sort-fn))
	      (prompt (or prompt \"Node: \"))
	      (node (completing-read
		     prompt
		     (lambda (string pred action)
		       (if (eq action 'metadata)
			   `(metadata
			     ;; Preserve sorting in the completion UI if a sort-fn is used
			     ,@(when sort-fn
				 '((display-sort-function . identity)
				   (cycle-sort-function . identity)))
			     (annotation-function
			      . ,(lambda (title)
				   (funcall org-roam-node-annotation-function
					    (get-text-property 0 'node title))))
			     (category . org-roam-node))
			 (complete-with-action action nodes string pred)))
		     nil require-match initial-input 'org-roam-node-history)))
	 (or (cdr (assoc node nodes))
	     (org-roam-node-create :title node))))

" 0 6 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6 7 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7 12 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12 13 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 35 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 35 46 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 46 135 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 135 156 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 156 222 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 222 231 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 231 238 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 238 293 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 293 294 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 294 295 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 295 303 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 303 304 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 304 305 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 305 334 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 334 339 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 339 340 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 340 372 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 372 384 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 384 393 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 393 420 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 420 427 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 427 458 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 458 479 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 479 506 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 506 535 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 535 553 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 553 612 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 612 630 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 630 881 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 881 912 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 912 960 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 960 979 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 979 982 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 982 991 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 991 995 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 995 1127 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1127 1133 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1133 1201 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1201 1208 (fontified t font-lock-fontified t help-echo "Hidden behind deeper element; move to another line?" src-block t font-lock-multiline t face (font-lock-warning-face org-block)) 1208 1224 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1224 1226 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1226 1265 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1265 1271 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1271 1351 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1351 1353 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1353 1369 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1369 1373 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1373 1425 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1425 1454 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1454 1526 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1526 1528 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1528 1597 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1597 1602 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1602 1603 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1603 1622 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 1622 1634 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1634 1643 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 1643 1705 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1705 1712 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1712 1730 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1730 1821 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1821 1853 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1853 2116 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2116 2125 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2125 2129 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2129 2218 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2218 2220 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2220 2228 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2228 2236 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2236 2291 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2291 2297 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2297 2329 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2329 2331 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2331 2379 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2379 2382 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2382 2441 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 2441 2452 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2452 2456 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2456 2591 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2591 2597 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2597 2860 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2860 2862 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2862 2916 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2916 2922 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 2922 2933 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 69641) (undo-tree-id6651 . -6) (undo-tree-id6652 . -6) (undo-tree-id6653 . -6) (undo-tree-id6654 . -6) (undo-tree-id6655 . -6) (undo-tree-id6656 . -6) (undo-tree-id6657 . -6) (undo-tree-id6658 . -6) (undo-tree-id6659 . -6) (undo-tree-id6660 . -6) (undo-tree-id6661 . -6) (undo-tree-id6662 . -6) (undo-tree-id6663 . -6) (undo-tree-id6664 . -6) (undo-tree-id6665 . -6) (undo-tree-id6666 . -6) (undo-tree-id6667 . -6) (undo-tree-id6668 . -6) (undo-tree-id6669 . -6) (undo-tree-id6670 . -6) (undo-tree-id6671 . -6) (undo-tree-id6672 . -6) (undo-tree-id6673 . -6) (undo-tree-id6674 . -6) (undo-tree-id6675 . -6) (undo-tree-id6676 . -6) (undo-tree-id6677 . -6) (undo-tree-id6678 . -6) (undo-tree-id6679 . 2927) (undo-tree-id6680 . -7) (undo-tree-id6681 . 2608) (undo-tree-id6682 . -326) (undo-tree-id6683 . -6) (undo-tree-id6684 . -6) (undo-tree-id6685 . -6) (undo-tree-id6686 . -6) (undo-tree-id6687 . -6) (undo-tree-id6688 . -6)) ((69641 . 72574) (#("
     (defun zetteldesk-note-refs-p ()
       \"Predicate function that finds all bibtex completion candidates with a note.

     Checks if every candidate has the \\\"=has-note=\\\" tag using
     `assoc' and if it does, collects that candidate\"
       (cl-loop for ref in (bibtex-completion-candidates)
		if (assoc \"=has-note=\" ref)
		collect ref))

     (defun org-roam-node-read--completions* (node-list &optional filter-fn sort-fn)
       \"Runs `org-roam-node-read--completions' with NODE-LIST being a list of nodes.

     Typically, the function takes `org-roam-node-list' as the initial
     list of nodes and creates the alist `org-roam-node-read'
     uses. However, it can be helpful to supply the list of nodes
     yourself, when the predicate function used cannot be inferred
     through a filter function of the form this function
     takes. FILTER-FN and SORT-FN are the same as in
     `org-roam-node-read--completions'. The resulting alist is to be
     used with `org-roam-node-read*'.\"
       (let* ((template (org-roam-node--process-display-format org-roam-node-display-template))
	      (nodes node-list)
	      (nodes (mapcar (lambda (node)
			       (org-roam-node-read--to-candidate node template)) nodes))
	      (nodes (if filter-fn
			 (cl-remove-if-not
			  (lambda (n) (funcall filter-fn (cdr n)))
			  nodes)
		       nodes))
	      (sort-fn (or sort-fn
			   (when org-roam-node-default-sort
			     (intern (concat \"org-roam-node-read-sort-by-\"
					     (symbol-name org-roam-node-default-sort))))))
	      (nodes (if sort-fn (seq-sort sort-fn nodes)
		       nodes)))
	 nodes))

     (defun org-roam-node-read* (node-list &optional initial-input filter-fn sort-fn require-match prompt)
       \"Runs `org-roam-node-read' with the nodes supplied by NODE-LIST.

     NODE-LIST is a list of nodes passed to
     `org-roam-node-read--completions*', which creates an alist of
     nodes with the proper formatting to be used in this
     function. This is for those cases where it is helpful to use your
     own list of nodes, because a predicate function can not filter
     them in the way you want easily.\"
       (let* ((nodes (org-roam-node-read--completions* node-list filter-fn sort-fn))
	      (prompt (or prompt \"Node: \"))
	      (node (completing-read
		     prompt
		     (lambda (string pred action)
		       (if (eq action 'metadata)
			   `(metadata
			     ;; Preserve sorting in the completion UI if a sort-fn is used
			     ,@(when sort-fn
				 '((display-sort-function . identity)
				   (cycle-sort-function . identity)))
			     (annotation-function
			      . ,(lambda (title)
				   (funcall org-roam-node-annotation-function
					    (get-text-property 0 'node title))))
			     (category . org-roam-node))
			 (complete-with-action action nodes string pred)))
		     nil require-match initial-input 'org-roam-node-history)))
	 (or (cdr (assoc node nodes))
	     (org-roam-node-create :title node))))

" 0 7 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 7 12 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 12 13 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 13 35 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 35 46 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 46 165 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 165 166 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-doc-face org-block) help-echo nil src-block t) 166 174 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-doc-face org-block) help-echo nil src-block t) 174 175 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-doc-face org-block) help-echo nil src-block t) 175 194 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 194 199 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 199 241 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 241 250 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 250 257 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 257 312 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 312 313 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 313 314 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-string-face org-block) help-echo nil src-block t) 314 322 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-string-face org-block) help-echo nil src-block t) 322 323 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-string-face org-block) help-echo nil src-block t) 323 324 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 324 353 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 353 358 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 358 359 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 359 391 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 391 403 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 403 412 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-type-face org-block) help-echo nil src-block t) 412 439 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 439 446 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 446 477 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 477 479 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 479 554 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 554 572 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 572 631 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 631 649 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 649 900 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 900 931 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 931 979 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 979 998 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 998 1001 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1001 1010 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1010 1014 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1014 1146 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1146 1152 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1152 1220 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1220 1227 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-warning-face org-block) help-echo "Hidden behind deeper element; move to another line?" src-block t) 1227 1243 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1243 1245 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1245 1284 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1284 1290 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1290 1370 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1370 1372 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1372 1388 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1388 1392 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1392 1444 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1444 1473 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 1473 1545 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1545 1547 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1547 1616 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1616 1621 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1621 1622 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1622 1641 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 1641 1653 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1653 1662 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-type-face org-block) help-echo nil src-block t) 1662 1724 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1724 1731 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1731 1749 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 1749 1840 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1840 1872 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 1872 2135 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 2135 2144 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2144 2148 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2148 2237 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2237 2239 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2239 2247 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2247 2255 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 2255 2310 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2310 2316 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2316 2348 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2348 2350 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2350 2398 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2398 2401 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 2401 2460 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 2460 2471 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2471 2475 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2475 2610 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2610 2616 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2616 2879 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2879 2881 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2881 2935 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2935 2941 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 2941 2952 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 69641) (undo-tree-id6649 . -344) (undo-tree-id6650 . -344) (t 25151 24004 281016 190000)) (25151 24742 863618 563000) 0 nil])
([nil nil ((69641 . 73322) (#("
     (defun zetteldesk-note-refs-p ()
       \"Predicate function that finds all bibtex completion candidates with a note.

     Checks if every candidate has the \\\"=has-note=\\\" tag using
     `assoc' and if it does, collects that candidate\"
       (cl-loop for ref in (bibtex-completion-candidates)
		if (assoc \"=has-note=\" ref)
		collect ref))

     (defun org-roam-node-read--completions* (node-list &optional filter-fn sort-fn)
       \"Runs `org-roam-node-read--completions' with NODE-LIST being a list of nodes.

     Typically, the function takes `org-roam-node-list' as the initial
     list of nodes and creates the alist `org-roam-node-read'
     uses. However, it can be helpful to supply the list of nodes
     yourself, when the predicate function used cannot be inferred
     through a filter function of the form this function
     takes. FILTER-FN and SORT-FN are the same as in
     `org-roam-node-read--completions'. The resulting alist is to be
     used with `org-roam-node-read*'.\"
       (let* ((template (org-roam-node--process-display-format org-roam-node-display-template))
	      (nodes node-list)
	      (nodes (mapcar (lambda (node)
			       (org-roam-node-read--to-candidate node template)) nodes))
	      (nodes (if filter-fn
			 (cl-remove-if-not
			  (lambda (n) (funcall filter-fn (cdr n)))
			  nodes)
		       nodes))
	      (sort-fn (or sort-fn
			   (when org-roam-node-default-sort
			     (intern (concat \"org-roam-node-read-sort-by-\"
					     (symbol-name org-roam-node-default-sort))))))
	      (nodes (if sort-fn (seq-sort sort-fn nodes)
		       nodes)))
	 nodes))

     (defun org-roam-node-read* (node-list &optional initial-input filter-fn sort-fn require-match prompt)
       \"Runs `org-roam-node-read' with the nodes supplied by NODE-LIST.

     NODE-LIST is a list of nodes passed to
     `org-roam-node-read--completions*', which creates an alist of
     nodes with the proper formatting to be used in this
     function. This is for those cases where it is helpful to use your
     own list of nodes, because a predicate function can not filter
     them in the way you want easily.\"
       (let* ((nodes (org-roam-node-read--completions* node-list filter-fn sort-fn))
	      (prompt (or prompt \"Node: \"))
	      (node (completing-read
		     prompt
		     (lambda (string pred action)
		       (if (eq action 'metadata)
			   `(metadata
			     ;; Preserve sorting in the completion UI if a sort-fn is used
			     ,@(when sort-fn
				 '((display-sort-function . identity)
				   (cycle-sort-function . identity)))
			     (annotation-function
			      . ,(lambda (title)
				   (funcall org-roam-node-annotation-function
					    (get-text-property 0 'node title))))
			     (category . org-roam-node))
			 (complete-with-action action nodes string pred)))
		     nil require-match initial-input 'org-roam-node-history)))
	 (or (cdr (assoc node nodes))
	     (org-roam-node-create :title node))))

" 0 7 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7 12 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12 13 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 35 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 35 46 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 46 165 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 165 166 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 166 174 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 174 175 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 175 194 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 194 199 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 199 241 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 241 250 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 250 257 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 257 312 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 312 313 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 313 314 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 314 322 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 322 323 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 323 324 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 324 353 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 353 358 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 358 359 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 359 391 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 391 403 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 403 412 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 412 439 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 439 446 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 446 477 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 477 479 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 479 554 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 554 572 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 572 631 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 631 649 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 649 900 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 900 931 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 931 979 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 979 998 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 998 1001 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1001 1010 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1010 1014 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1014 1146 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1146 1152 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1152 1220 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1220 1227 (fontified t font-lock-fontified t help-echo "Hidden behind deeper element; move to another line?" src-block t font-lock-multiline t face (font-lock-warning-face org-block)) 1227 1243 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1243 1245 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1245 1284 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1284 1290 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1290 1370 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1370 1372 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1372 1388 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1388 1392 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1392 1444 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1444 1473 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1473 1545 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1545 1547 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1547 1616 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1616 1621 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1621 1622 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1622 1641 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 1641 1653 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1653 1662 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 1662 1724 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1724 1731 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1731 1749 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1749 1840 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1840 1872 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1872 2135 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2135 2144 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2144 2148 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2148 2237 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2237 2239 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2239 2247 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2247 2255 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2255 2310 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2310 2316 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2316 2348 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2348 2350 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2350 2398 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2398 2401 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2401 2460 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 2460 2471 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2471 2475 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2475 2610 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2610 2616 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2616 2879 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2879 2881 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2881 2935 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2935 2941 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 2941 2952 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 69641) (undo-tree-id6822 . -485) (undo-tree-id6823 . -2950) (undo-tree-id6824 . 1) (undo-tree-id6825 . -2950) (undo-tree-id6826 . -2950) (undo-tree-id6827 . -344) (undo-tree-id6828 . -344) (undo-tree-id6829 . -1789) (undo-tree-id6830 . -1789) (undo-tree-id6831 . -1789) (undo-tree-id6832 . -1789) (undo-tree-id6833 . -1789) (undo-tree-id6834 . -1789) (undo-tree-id6835 . -1789) (undo-tree-id6836 . -1789) (undo-tree-id6837 . -1789) (undo-tree-id6838 . -1789) (undo-tree-id6839 . -1789) (undo-tree-id6840 . -1789) (undo-tree-id6841 . -1789) (undo-tree-id6842 . -1789) (undo-tree-id6843 . -1789) (undo-tree-id6844 . -1789) (undo-tree-id6845 . -1789) (undo-tree-id6846 . -1789) (undo-tree-id6847 . -2876) (undo-tree-id6848 . -2460) (undo-tree-id6849 . -1790) (undo-tree-id6850 . -2906) (undo-tree-id6851 . -2906) (undo-tree-id6852 . -2906) (undo-tree-id6853 . -2906) (undo-tree-id6854 . -2906) (undo-tree-id6855 . -2906) (undo-tree-id6856 . -2906) (undo-tree-id6857 . -2905) (undo-tree-id6858 . -2906) (undo-tree-id6859 . -1790) (undo-tree-id6860 . -2905) (undo-tree-id6861 . -2906) (undo-tree-id6862 . -1790) (undo-tree-id6863 . -2905) (undo-tree-id6864 . -2905) (undo-tree-id6865 . -2905) (undo-tree-id6866 . -2905) (undo-tree-id6867 . -2905) (undo-tree-id6868 . -2905) (undo-tree-id6869 . -2905) (undo-tree-id6870 . -2905) (undo-tree-id6871 . -2905) (undo-tree-id6872 . -2905) (undo-tree-id6873 . -2905) (undo-tree-id6874 . -2905) (undo-tree-id6875 . -2950) (undo-tree-id6876 . -2950) (undo-tree-id6877 . -2950) (undo-tree-id6878 . -2950) (undo-tree-id6879 . -2950) (undo-tree-id6880 . -2950) (undo-tree-id6881 . -2950) (undo-tree-id6882 . -2950) (undo-tree-id6883 . -2950) (undo-tree-id6884 . -2950) (undo-tree-id6885 . -2950) (undo-tree-id6886 . -2950) (undo-tree-id6887 . -2950) (undo-tree-id6888 . -2950) (undo-tree-id6889 . -2950) (undo-tree-id6890 . -2950) (undo-tree-id6891 . -2950) (undo-tree-id6892 . -2950) (undo-tree-id6893 . -2950) (undo-tree-id6894 . -2949) (undo-tree-id6895 . -2950) (undo-tree-id6896 . -1790) (undo-tree-id6897 . -2949) (undo-tree-id6898 . -2950) (undo-tree-id6899 . -1790) (undo-tree-id6900 . -2949) (undo-tree-id6901 . -2949) (undo-tree-id6902 . -2949) (undo-tree-id6903 . -2949) (undo-tree-id6904 . -2949) (undo-tree-id6905 . -2949) (undo-tree-id6906 . -2949) (undo-tree-id6907 . -2949) (undo-tree-id6908 . -2949) (undo-tree-id6909 . -2949) (undo-tree-id6910 . -2949) (undo-tree-id6911 . -2949) (undo-tree-id6912 . -2949) (undo-tree-id6913 . -2949) (undo-tree-id6914 . -2949) (undo-tree-id6915 . -2949) (undo-tree-id6916 . -2949) (undo-tree-id6917 . -2949) (undo-tree-id6918 . -2949) (undo-tree-id6919 . -1609) (undo-tree-id6920 . -2949) (undo-tree-id6921 . -2949) (undo-tree-id6922 . -2949) (undo-tree-id6923 . -2949) (undo-tree-id6924 . -2949) (undo-tree-id6925 . -2949) (undo-tree-id6926 . -2949) (undo-tree-id6927 . -2949) (undo-tree-id6928 . -2949) (undo-tree-id6929 . -2949) (undo-tree-id6930 . -2949) (undo-tree-id6931 . -2949) (undo-tree-id6932 . -2949) (undo-tree-id6933 . -2949) (undo-tree-id6934 . -1474) (undo-tree-id6935 . -2949) (undo-tree-id6936 . -2949) (undo-tree-id6937 . -2949) (undo-tree-id6938 . -2949) (undo-tree-id6939 . -2949) (undo-tree-id6940 . -2949) (undo-tree-id6941 . -2949) (undo-tree-id6942 . -2949) (undo-tree-id6943 . -2949) (undo-tree-id6944 . -2949) (undo-tree-id6945 . -2949) (undo-tree-id6946 . -2949) (undo-tree-id6947 . -2568) (undo-tree-id6948 . -2568) (undo-tree-id6949 . -1160) (undo-tree-id6950 . -2568) (undo-tree-id6951 . -2568) (undo-tree-id6952 . -2568) (undo-tree-id6953 . -2568) (undo-tree-id6954 . -2568) (undo-tree-id6955 . -2568) (undo-tree-id6956 . -2568) (undo-tree-id6957 . -2568) (undo-tree-id6958 . -2568) (undo-tree-id6959 . -2568) (undo-tree-id6960 . -2568) (undo-tree-id6961 . -2568) (undo-tree-id6962 . -2568) (undo-tree-id6963 . -2568) (undo-tree-id6964 . -2568) (undo-tree-id6965 . -2568) (undo-tree-id6966 . -2568) (undo-tree-id6967 . -1958) (undo-tree-id6968 . -1958) (undo-tree-id6969 . -347) (undo-tree-id6970 . -1958) (undo-tree-id6971 . -1958) (undo-tree-id6972 . -1958) (undo-tree-id6973 . -1958) (undo-tree-id6974 . -1958) (undo-tree-id6975 . -1958) (undo-tree-id6976 . -1958) (undo-tree-id6977 . -1958) (undo-tree-id6978 . -1958) (undo-tree-id6979 . -1958) (undo-tree-id6980 . -1958) (undo-tree-id6981 . -1958) (undo-tree-id6982 . -1256) (undo-tree-id6983 . -1256) (undo-tree-id6984 . -1256) (undo-tree-id6985 . -1256) (undo-tree-id6986 . -1256) (undo-tree-id6987 . -1256) (undo-tree-id6988 . -1256) (undo-tree-id6989 . -1256) (undo-tree-id6990 . -1256) (undo-tree-id6991 . -1256) (undo-tree-id6992 . -1256) (undo-tree-id6993 . -1256) (undo-tree-id6994 . -1256) (undo-tree-id6995 . -1256) (undo-tree-id6996 . -123) (undo-tree-id6997 . -123) (undo-tree-id6998 . -123) (undo-tree-id6999 . -123) (undo-tree-id7000 . -123) (undo-tree-id7001 . -123) (undo-tree-id7002 . -123) (undo-tree-id7003 . -123) (undo-tree-id7004 . -123) (undo-tree-id7005 . -123) (undo-tree-id7006 . -123) (undo-tree-id7007 . -123) (undo-tree-id7008 . -123) (undo-tree-id7009 . -123) (undo-tree-id7010 . -485) (undo-tree-id7011 . -485) (undo-tree-id7012 . -485) (undo-tree-id7013 . -485) (undo-tree-id7014 . -485) (undo-tree-id7015 . -485) (undo-tree-id7016 . -485) (undo-tree-id7017 . -485) (undo-tree-id7018 . -485) (undo-tree-id7019 . -485) (undo-tree-id7020 . -485) (undo-tree-id7021 . -485) (undo-tree-id7022 . -485) (undo-tree-id7023 . -485) (undo-tree-id7024 . -485) (undo-tree-id7025 . -485) (undo-tree-id7026 . -485) (undo-tree-id7027 . -485) (undo-tree-id7028 . -485) (undo-tree-id7029 . -485) (undo-tree-id7030 . -485) (undo-tree-id7031 . -485) (undo-tree-id7032 . -485) (undo-tree-id7033 . -485) (undo-tree-id7034 . -485) (undo-tree-id7035 . -485) (undo-tree-id7036 . -485) (undo-tree-id7037 . -485) (undo-tree-id7038 . -485) (undo-tree-id7039 . -485) (undo-tree-id7040 . -485) (undo-tree-id7041 . -485) (undo-tree-id7042 . -485) (undo-tree-id7043 . -485) (undo-tree-id7044 . -485) (undo-tree-id7045 . -485) (undo-tree-id7046 . -485) (undo-tree-id7047 . -485) (undo-tree-id7048 . -485) (undo-tree-id7049 . -485) (undo-tree-id7050 . -485) (undo-tree-id7051 . -485) (undo-tree-id7052 . -485) (undo-tree-id7053 . -485) (undo-tree-id7054 . -485) (undo-tree-id7055 . -485) (undo-tree-id7056 . -485) (undo-tree-id7057 . -485) (undo-tree-id7058 . -485) (undo-tree-id7059 . -485) (undo-tree-id7060 . -485) (undo-tree-id7061 . -485) (undo-tree-id7062 . -485) (undo-tree-id7063 . -485) (undo-tree-id7064 . -485) (undo-tree-id7065 . -485) (undo-tree-id7066 . -485) (undo-tree-id7067 . -485) (undo-tree-id7068 . -485) (undo-tree-id7069 . -485) (undo-tree-id7070 . -485) (undo-tree-id7071 . -485) (undo-tree-id7072 . -485) (undo-tree-id7073 . -485) (undo-tree-id7074 . -485) (undo-tree-id7075 . -485) (undo-tree-id7076 . -485) (undo-tree-id7077 . -485) (undo-tree-id7078 . -485) (undo-tree-id7079 . -485) (undo-tree-id7080 . -485) (undo-tree-id7081 . -485) (undo-tree-id7082 . -485) (undo-tree-id7083 . -485) (undo-tree-id7084 . -485) (undo-tree-id7085 . -485) (undo-tree-id7086 . -485) (undo-tree-id7087 . -485) (undo-tree-id7088 . -485) (undo-tree-id7089 . -485) (undo-tree-id7090 . -485) (undo-tree-id7091 . -485) (undo-tree-id7092 . -485) (undo-tree-id7093 . -485) (undo-tree-id7094 . -485) (undo-tree-id7095 . -485) (undo-tree-id7096 . -485) (undo-tree-id7097 . -485) (undo-tree-id7098 . -485) (undo-tree-id7099 . -485) (undo-tree-id7100 . -485) (undo-tree-id7101 . -485) (undo-tree-id7102 . -485) (undo-tree-id7103 . -485) (undo-tree-id7104 . -485) (undo-tree-id7105 . -485) (undo-tree-id7106 . -485) (undo-tree-id7107 . -485) (undo-tree-id7108 . -485) (undo-tree-id7109 . -485) (undo-tree-id7110 . -485) (undo-tree-id7111 . -485) (undo-tree-id7112 . -485) (undo-tree-id7113 . -485) (undo-tree-id7114 . -485) (undo-tree-id7115 . -485) (undo-tree-id7116 . -485) (undo-tree-id7117 . -485) (undo-tree-id7118 . -485) (undo-tree-id7119 . -485) (undo-tree-id7120 . -485) (undo-tree-id7121 . -485) (undo-tree-id7122 . -485) (undo-tree-id7123 . -485) (undo-tree-id7124 . -485) (undo-tree-id7125 . -485) (undo-tree-id7126 . -485) (undo-tree-id7127 . -485) (undo-tree-id7128 . -485) (undo-tree-id7129 . -485) (undo-tree-id7130 . -485) (undo-tree-id7131 . -485) (undo-tree-id7132 . -485) (undo-tree-id7133 . -485) (undo-tree-id7134 . -485) (undo-tree-id7135 . -485) (undo-tree-id7136 . -485) (undo-tree-id7137 . -485) (undo-tree-id7138 . -485) (undo-tree-id7139 . -485) (undo-tree-id7140 . -485) (undo-tree-id7141 . -485) (undo-tree-id7142 . -485) (undo-tree-id7143 . -485) (undo-tree-id7144 . -485) (undo-tree-id7145 . -485) 70126 (t 25151 24004 281016 190000)) nil (25151 25168 397451 853000) 0 nil])
([nil nil ((69641 . 74082) (#("
     (defun zetteldesk-note-refs-p ()
       \"Predicate function that finds all bibtex completion candidates with a note.

     Checks if every candidate has the \\\"=has-note=\\\" tag using
     `assoc' and if it does, collects that candidate\"
       (cl-loop for ref in (bibtex-completion-candidates)
		if (assoc \"=has-note=\" ref)
		collect ref))

     (defun zetteldesk-citekey-from-refs ()
       \"Function that finds the \\\"=key=\\\" tag from a list of candidates.

     The list is collected with `zetteldesk-note-refs-p' which is a
     list of candidates that have notes. Collects it using `assoc'.\"
       (cl-loop for ref in (zetteldesk-note-refs-p)
		collect (assoc \"=key=\" ref)))

     (defun zetteldesk-node-from-refs ()
       \"Function that collects a list of ref nodes.

     The nodes are collected from their citekey using
     `org-roam-node-from-ref', while the citekeys themselves are
     collected from `zetteldesk-citekey-from-refs'.\"
       (cl-loop for ref in (zetteldesk-citekey-from-refs)
		collect (org-roam-node-from-ref (concat \"cite:\" (cdr ref)))))

     (defun org-roam-node-read--completions* (node-list &optional filter-fn sort-fn)
       \"Runs `org-roam-node-read--completions' with NODE-LIST being a list of nodes.

     Typically, the function takes `org-roam-node-list' as the initial
     list of nodes and creates the alist `org-roam-node-read'
     uses. However, it can be helpful to supply the list of nodes
     yourself, when the predicate function used cannot be inferred
     through a filter function of the form this function
     takes. FILTER-FN and SORT-FN are the same as in
     `org-roam-node-read--completions'. The resulting alist is to be
     used with `org-roam-node-read*'.\"
       (let* ((template (org-roam-node--process-display-format org-roam-node-display-template))
	      (nodes node-list)
	      (nodes (mapcar (lambda (node)
			       (org-roam-node-read--to-candidate node template)) nodes))
	      (nodes (if filter-fn
			 (cl-remove-if-not
			  (lambda (n) (funcall filter-fn (cdr n)))
			  nodes)
		       nodes))
	      (sort-fn (or sort-fn
			   (when org-roam-node-default-sort
			     (intern (concat \"org-roam-node-read-sort-by-\"
					     (symbol-name org-roam-node-default-sort))))))
	      (nodes (if sort-fn (seq-sort sort-fn nodes)
		       nodes)))
	 nodes))

     (defun org-roam-node-read* (node-list &optional initial-input filter-fn sort-fn require-match prompt)
       \"Runs `org-roam-node-read' with the nodes supplied by NODE-LIST.

     NODE-LIST is a list of nodes passed to
     `org-roam-node-read--completions*', which creates an alist of
     nodes with the proper formatting to be used in this
     function. This is for those cases where it is helpful to use your
     own list of nodes, because a predicate function can not filter
     them in the way you want easily.\"
       (let* ((nodes (org-roam-node-read--completions* node-list filter-fn sort-fn))
	      (prompt (or prompt \"Node: \"))
	      (node (completing-read
		     prompt
		     (lambda (string pred action)
		       (if (eq action 'metadata)
			   `(metadata
			     ;; Preserve sorting in the completion UI if a sort-fn is used
			     ,@(when sort-fn
				 '((display-sort-function . identity)
				   (cycle-sort-function . identity)))
			     (annotation-function
			      . ,(lambda (title)
				   (funcall org-roam-node-annotation-function
					    (get-text-property 0 'node title))))
			     (category . org-roam-node))
			 (complete-with-action action nodes string pred)))
		     nil require-match initial-input 'org-roam-node-history)))
	 (or (cdr (assoc node nodes))
	     (org-roam-node-create :title node))))

" 0 7 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 7 12 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 12 13 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 13 35 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 35 46 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 46 165 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 165 166 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-doc-face org-block) help-echo nil src-block t) 166 174 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-doc-face org-block) help-echo nil src-block t) 174 175 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-doc-face org-block) help-echo nil src-block t) 175 194 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 194 199 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 199 241 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 241 250 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 250 257 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 257 312 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 312 313 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 313 314 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-string-face org-block) help-echo nil src-block t) 314 322 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-string-face org-block) help-echo nil src-block t) 322 323 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-string-face org-block) help-echo nil src-block t) 323 324 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 324 353 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 353 358 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 358 359 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 359 387 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 387 398 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 398 425 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 425 426 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-doc-face org-block) help-echo nil src-block t) 426 429 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-doc-face org-block) help-echo nil src-block t) 429 430 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-doc-face org-block) help-echo nil src-block t) 430 479 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 479 498 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 498 520 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 520 593 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 593 598 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 598 601 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 601 610 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 610 617 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 617 671 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 671 678 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 678 693 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 693 698 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 698 699 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 699 724 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 724 735 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 735 841 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 841 863 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 863 921 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 921 949 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 949 952 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 952 961 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 961 968 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 968 1053 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1053 1060 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 1060 1082 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1082 1087 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1087 1088 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1088 1120 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 1120 1132 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1132 1141 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-type-face org-block) help-echo nil src-block t) 1141 1168 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1168 1175 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1175 1206 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 1206 1283 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1283 1301 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 1301 1360 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1360 1378 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 1378 1629 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1629 1660 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 1660 1708 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1708 1727 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 1727 1730 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1730 1739 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1739 1743 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1743 1875 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1875 1881 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1881 1949 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1949 1956 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-warning-face org-block) help-echo "Hidden behind deeper element; move to another line?" src-block t) 1956 1972 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1972 1974 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1974 2013 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2013 2019 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2019 2099 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2099 2101 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2101 2117 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2117 2121 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2121 2173 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2173 2202 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 2202 2274 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2274 2276 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2276 2345 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2345 2350 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2350 2351 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2351 2370 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 2370 2382 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2382 2391 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-type-face org-block) help-echo nil src-block t) 2391 2453 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2453 2460 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 2460 2478 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 2478 2569 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 2569 2601 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 2601 2864 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 2864 2873 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2873 2877 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2877 2966 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2966 2968 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2968 2976 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2976 2984 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 2984 3039 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3039 3045 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3045 3077 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3077 3079 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3079 3127 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3127 3130 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 3130 3189 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 3189 3200 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3200 3204 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3204 3339 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3339 3345 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3345 3608 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3608 3610 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3610 3664 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3664 3670 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 3670 3681 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 69641) (undo-tree-id6689 . -1075) (undo-tree-id6690 . -1075) (undo-tree-id6691 . -1075) (undo-tree-id6692 . -1075) (undo-tree-id6693 . -1075) (undo-tree-id6694 . -1075) (undo-tree-id6695 . -1075) (undo-tree-id6696 . -1075) (undo-tree-id6697 . -1075) (undo-tree-id6698 . -1075) (undo-tree-id6699 . -1075) (undo-tree-id6700 . -1075) (undo-tree-id6701 . -1075) (undo-tree-id6702 . -1075) (undo-tree-id6703 . -1075) (undo-tree-id6704 . -1075) (undo-tree-id6705 . -1075) (undo-tree-id6706 . -1075) (undo-tree-id6707 . -1075) (undo-tree-id6708 . -1075) (undo-tree-id6709 . -1075) (undo-tree-id6710 . -1075) (undo-tree-id6711 . -1075) (undo-tree-id6712 . -1075) (undo-tree-id6713 . -1075) (undo-tree-id6714 . -1075) (undo-tree-id6715 . -1075) (undo-tree-id6716 . -1075) (undo-tree-id6717 . -1075) (undo-tree-id6718 . -1075) (undo-tree-id6719 . -1075) (undo-tree-id6720 . -1075) (undo-tree-id6721 . -1075) (undo-tree-id6722 . -1075) (undo-tree-id6723 . -1075) (undo-tree-id6724 . -1075) (undo-tree-id6725 . -1075) (undo-tree-id6726 . -1075) (undo-tree-id6727 . -1075) (undo-tree-id6728 . -1075) (undo-tree-id6729 . -1075) (undo-tree-id6730 . -1075) (undo-tree-id6731 . -1075) (undo-tree-id6732 . -1075) (undo-tree-id6733 . -1075) (undo-tree-id6734 . -1075) (undo-tree-id6735 . -1075) (undo-tree-id6736 . -1075) (undo-tree-id6737 . -1075) (undo-tree-id6738 . -1075) (undo-tree-id6739 . -1075) (undo-tree-id6740 . -1075) (undo-tree-id6741 . -1075) (undo-tree-id6742 . -1075) (undo-tree-id6743 . -1075) (undo-tree-id6744 . -1075) (undo-tree-id6745 . -1075) (undo-tree-id6746 . -1075) (undo-tree-id6747 . -1075) (undo-tree-id6748 . -1075) (undo-tree-id6749 . -1075) (undo-tree-id6750 . -1075) (undo-tree-id6751 . -1075) (undo-tree-id6752 . -1075) (undo-tree-id6753 . -1075) (undo-tree-id6754 . -1075) (undo-tree-id6755 . -1075) (undo-tree-id6756 . -1075) (undo-tree-id6757 . -1075) (undo-tree-id6758 . -1075) (undo-tree-id6759 . -1075) (undo-tree-id6760 . -1075) (undo-tree-id6761 . -1075) (undo-tree-id6762 . -1075) (undo-tree-id6763 . -1075) (undo-tree-id6764 . -1075) (undo-tree-id6765 . -1075) (undo-tree-id6766 . -1075) (undo-tree-id6767 . -1075) (undo-tree-id6768 . -1075) (undo-tree-id6769 . -1075) (undo-tree-id6770 . -1075) (undo-tree-id6771 . -1075) (undo-tree-id6772 . -1075) (undo-tree-id6773 . -1075) (undo-tree-id6774 . -1075) (undo-tree-id6775 . -1075) (undo-tree-id6776 . -1075) (undo-tree-id6777 . -1075) (undo-tree-id6778 . -1075) (undo-tree-id6779 . -1075) (undo-tree-id6780 . -1075) (undo-tree-id6781 . -1075) (undo-tree-id6782 . -1075) (undo-tree-id6783 . -1075) (undo-tree-id6784 . -1075) (undo-tree-id6785 . -1075) (undo-tree-id6786 . -1075) (undo-tree-id6787 . -1075) (undo-tree-id6788 . -1075) (undo-tree-id6789 . -1075) (undo-tree-id6790 . -1075) (undo-tree-id6791 . -1075) (undo-tree-id6792 . -1075) (undo-tree-id6793 . -1075) (undo-tree-id6794 . -1075) (undo-tree-id6795 . -1075) (undo-tree-id6796 . -1075) (undo-tree-id6797 . -1075) (undo-tree-id6798 . -1075) (undo-tree-id6799 . -1075) (undo-tree-id6800 . -1075) (undo-tree-id6801 . -1075) (undo-tree-id6802 . -1075) (undo-tree-id6803 . -1075) (undo-tree-id6804 . -1075) (undo-tree-id6805 . -1075) (undo-tree-id6806 . -1075) (undo-tree-id6807 . -1075) (undo-tree-id6808 . -1075) (undo-tree-id6809 . -1075) (undo-tree-id6810 . -1075) (undo-tree-id6811 . -1075) (undo-tree-id6812 . -1075) (undo-tree-id6813 . -1075) (undo-tree-id6814 . -1075) (undo-tree-id6815 . -1075) (undo-tree-id6816 . -1075) (undo-tree-id6817 . -1075) (undo-tree-id6818 . -1075) (undo-tree-id6819 . -1075) (undo-tree-id6820 . -1075) (undo-tree-id6821 . -1075) 70716) nil (25151 25168 395478 241000) 0 nil])
([nil nil ((74081 . 74082) (t 25151 25168 449070 833000) 74080) nil (25151 25170 408596 601000) 0 nil])
([nil nil ((#("(if zetteldesk-insert-scratch-or-current-buffer
			    \"*zetteldesk-scratch*\"
			  (current-buffer))" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1 3 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3 55 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 55 56 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 56 57 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-string-face org-block) help-echo nil src-block t) 57 75 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-string-face org-block) help-echo nil src-block t) 75 76 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-string-face org-block) help-echo nil src-block t) 76 77 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 77 100 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 58228) (undo-tree-id9514 . -99) (undo-tree-id9515 . -99) (undo-tree-id9516 . -78) (undo-tree-id9517 . -78) (undo-tree-id9518 . -100) (undo-tree-id9519 . -100) (undo-tree-id9520 . -100) (undo-tree-id9521 . -100) (undo-tree-id9522 . -100) (undo-tree-id9523 . -100) (undo-tree-id9524 . -100) (undo-tree-id9525 . -100) (undo-tree-id9526 . -100) (undo-tree-id9527 . -100) (undo-tree-id9528 . -100) (undo-tree-id9529 . -100) (undo-tree-id9530 . -100) (undo-tree-id9531 . -100) (undo-tree-id9532 . -100) (undo-tree-id9533 . -100) (undo-tree-id9534 . -100) (undo-tree-id9535 . -100) (undo-tree-id9536 . -100) (undo-tree-id9537 . -100) (undo-tree-id9538 . -100) (undo-tree-id9539 . -100) (undo-tree-id9540 . -100) (undo-tree-id9541 . -100) (undo-tree-id9542 . -100) (undo-tree-id9543 . -100) (undo-tree-id9544 . -100) (undo-tree-id9545 . -100) (undo-tree-id9546 . -99) (undo-tree-id9547 . -99) (undo-tree-id9548 . -99) (undo-tree-id9549 . -99) (undo-tree-id9550 . -99) (undo-tree-id9551 . -99) (undo-tree-id9552 . -99) (undo-tree-id9553 . -99) (undo-tree-id9554 . -99) (undo-tree-id9555 . -99) (undo-tree-id9556 . -99) (undo-tree-id9557 . -99) (undo-tree-id9558 . -99) (undo-tree-id9559 . -100) (undo-tree-id9560 . -99) (undo-tree-id9561 . -99) (undo-tree-id9562 . -99) (undo-tree-id9563 . -99) (undo-tree-id9564 . -99) (undo-tree-id9565 . -99) (undo-tree-id9566 . -99) (undo-tree-id9567 . -99) (undo-tree-id9568 . -99) (undo-tree-id9569 . -99) (undo-tree-id9570 . -99) (undo-tree-id9571 . -99) (undo-tree-id9572 . -98) (undo-tree-id9573 . -98) (undo-tree-id9574 . -98) (undo-tree-id9575 . -98) (undo-tree-id9576 . -98) (undo-tree-id9577 . -97) (undo-tree-id9578 . -97) (undo-tree-id9579 . -97) (undo-tree-id9580 . -97) (undo-tree-id9581 . -97) (undo-tree-id9582 . -96) (undo-tree-id9583 . -96) (undo-tree-id9584 . -96) (undo-tree-id9585 . -96) (undo-tree-id9586 . -96) (undo-tree-id9587 . -95) (undo-tree-id9588 . -95) (undo-tree-id9589 . -95) (undo-tree-id9590 . -95) (undo-tree-id9591 . -95) (undo-tree-id9592 . -94) (undo-tree-id9593 . -94) (undo-tree-id9594 . -94) (undo-tree-id9595 . -94) (undo-tree-id9596 . -94) (undo-tree-id9597 . -93) (undo-tree-id9598 . -93) (undo-tree-id9599 . -93) (undo-tree-id9600 . -93) (undo-tree-id9601 . -93) (undo-tree-id9602 . -92) (undo-tree-id9603 . -92) (undo-tree-id9604 . -92) (undo-tree-id9605 . -92) (undo-tree-id9606 . -92) (undo-tree-id9607 . -90) (undo-tree-id9608 . -90) (undo-tree-id9609 . -90) (undo-tree-id9610 . -90) (undo-tree-id9611 . -90) (undo-tree-id9612 . -59) (undo-tree-id9613 . -59) (undo-tree-id9614 . -59) (undo-tree-id9615 . -59) (undo-tree-id9616 . -59) (undo-tree-id9617 . -58) (undo-tree-id9618 . -58) (undo-tree-id9619 . -58) (undo-tree-id9620 . -58) (undo-tree-id9621 . -58) (undo-tree-id9622 . -57) (undo-tree-id9623 . -57) (undo-tree-id9624 . -57) (undo-tree-id9625 . -57) (undo-tree-id9626 . -57) (undo-tree-id9627 . -55) (undo-tree-id9628 . -55) (undo-tree-id9629 . -55) (undo-tree-id9630 . -55) (undo-tree-id9631 . -55) (undo-tree-id9632 . -54) (undo-tree-id9633 . -54) (undo-tree-id9634 . -54) (undo-tree-id9635 . -54) (undo-tree-id9636 . -54) (undo-tree-id9637 . -53) (undo-tree-id9638 . -53) (undo-tree-id9639 . -53) (undo-tree-id9640 . -53) (undo-tree-id9641 . -53) (undo-tree-id9642 . -52) (undo-tree-id9643 . -52) (undo-tree-id9644 . -52) (undo-tree-id9645 . -52) (undo-tree-id9646 . -52) (undo-tree-id9647 . -51) (undo-tree-id9648 . -51) (undo-tree-id9649 . -51) (undo-tree-id9650 . -51) (undo-tree-id9651 . -51) (undo-tree-id9652 . -50) (undo-tree-id9653 . -50) (undo-tree-id9654 . -50) (undo-tree-id9655 . -50) (undo-tree-id9656 . -50) (undo-tree-id9657 . -50) (undo-tree-id9658 . -50) (undo-tree-id9659 . -50) (undo-tree-id9660 . -50) (undo-tree-id9661 . -50) (undo-tree-id9662 . 100) (undo-tree-id9663 . -1) (undo-tree-id9664 . 1) (undo-tree-id9665 . -100) (t 25151 25170 462430 639000)) nil (25151 25636 831259 280000) 0 nil])
([nil nil ((58237 . 58255) (#("k" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -58237) (undo-tree-id9428 . -1) (undo-tree-id9429 . -1) (undo-tree-id9430 . -1) (undo-tree-id9431 . -1) (undo-tree-id9432 . -1) (undo-tree-id9433 . -1) (undo-tree-id9434 . -1) (undo-tree-id9435 . -1) (undo-tree-id9436 . -1) (undo-tree-id9437 . -1) (undo-tree-id9438 . -1) (undo-tree-id9439 . -1) (undo-tree-id9440 . -1) (undo-tree-id9441 . -1) (undo-tree-id9442 . -1) (undo-tree-id9443 . -1) (undo-tree-id9444 . -1) (undo-tree-id9445 . -1) (undo-tree-id9446 . -1) (undo-tree-id9447 . -1) (undo-tree-id9448 . -1) (undo-tree-id9449 . -1) (undo-tree-id9450 . -1) (undo-tree-id9451 . -1) (undo-tree-id9452 . -1) (undo-tree-id9453 . -1) (undo-tree-id9454 . -1) (undo-tree-id9455 . -1) (undo-tree-id9456 . -1) (undo-tree-id9457 . -1) (undo-tree-id9458 . -1) (undo-tree-id9459 . -1) (undo-tree-id9460 . -1) (undo-tree-id9461 . -1) (undo-tree-id9462 . -1) (undo-tree-id9463 . -1) (undo-tree-id9464 . -1) (undo-tree-id9465 . -1) (undo-tree-id9466 . -1) (undo-tree-id9467 . -1) (undo-tree-id9468 . -1) (undo-tree-id9469 . -1) (#("s" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -58238) (undo-tree-id9470 . -1) (undo-tree-id9471 . -1) (undo-tree-id9472 . -1) (undo-tree-id9473 . -1) (undo-tree-id9474 . -1) (undo-tree-id9475 . -1) (undo-tree-id9476 . -1) (undo-tree-id9477 . -1) (undo-tree-id9478 . -1) (undo-tree-id9479 . -1) (undo-tree-id9480 . -1) (undo-tree-id9481 . -1) (undo-tree-id9482 . -1) (undo-tree-id9483 . -1) (undo-tree-id9484 . -1) (undo-tree-id9485 . -1) (undo-tree-id9486 . -1) (undo-tree-id9487 . -1) (undo-tree-id9488 . -1) (undo-tree-id9489 . -1) (undo-tree-id9490 . -1) (undo-tree-id9491 . -1) (undo-tree-id9492 . -1) (undo-tree-id9493 . -1) (undo-tree-id9494 . -1) (#("-" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -58239) (undo-tree-id9495 . -1) (undo-tree-id9496 . -1) (undo-tree-id9497 . -1) (undo-tree-id9498 . -1) (undo-tree-id9499 . -1) (undo-tree-id9500 . -1) (undo-tree-id9501 . -1) (undo-tree-id9502 . -1) (undo-tree-id9503 . -1) 58240 (58232 . 58240) (#("e" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -58232) (undo-tree-id9504 . -1) (undo-tree-id9505 . -1) (undo-tree-id9506 . -1) (undo-tree-id9507 . -1) (undo-tree-id9508 . -1) (undo-tree-id9509 . -1) (undo-tree-id9510 . -1) (undo-tree-id9511 . -1) (undo-tree-id9512 . -1) (undo-tree-id9513 . -1) 58233 (58229 . 58233) (58228 . 58230)) nil (25151 25636 831043 466000) 0 nil])
([nil nil ((54435 . 65702) (#("
     ;; -- *ZETTELDESK-SCRATCH* --
     ;; This is the section where it all comes together. The
     ;; zetteldesk-scratch buffer is a special buffer defined here on which
     ;; you drop all your stuff. Its what molds the whole workflow together

     (defcustom zetteldesk-map (make-sparse-keymap)
       \"This variable is the keymap for `zetteldesk-mode'.\"
       :type 'keymap
       :group 'zetteldesk)

     (defcustom zetteldesk-insert-scratch-or-current-buffer t
       \"Customization variable.
     Decides whethere zetteldesk-insert functions will insert to the
     ,*zetteldesk-scratch* buffer or the current buffer.  Default value
     is t which makes those functions insert to the scratch.  Setting
     it to nil will make those functions insert to the current buffer,
     for whichever usecase you might want\"
       :type 'string
       :group 'zetteldesk)

     (define-minor-mode zetteldesk-mode
       \"Toggles the global zetteldesk-mode.

     When turned on, this mode initialises the *zetteldesk-scratch*
     buffer, a useful part of the whole zetteldesk workflow.\"
       nil
       :global t
       :group 'zetteldesk
       :keymap zetteldesk-map
       :lighter \" zetteldesk\")

     (defun zetteldesk--create-scratch-buffer ()
       \"Create the zetteldesk-scratch buffer and put it in `org-mode'.\"
       (let ((buffer (generate-new-buffer \"*zetteldesk-scratch*\"))
	     (org-startup-with-latex-preview nil))
	 (with-current-buffer buffer
	   (org-mode))))

     (add-hook 'zetteldesk-mode-on-hook 'zetteldesk--create-scratch-buffer)

     (defun zetteldesk-switch-to-scratch-buffer (&optional arg)
       \"Open the zetteldesk-scratch buffer in a split with the current buffer.

     Optionally, if given optional argument ARG, which needs to be the
     `\\\\[universal-argument]' switch to the *zetteldesk-scratch*
     buffer without issuing a split.\"
       (interactive \"P\")
       (if (equal arg '(4))
	   (switch-to-buffer \"*zetteldesk-scratch*\")
	 (switch-to-buffer-other-window \"*zetteldesk-scratch*\")))

     (defun zetteldesk-node-insert-if-poi-or-moc ()
       \"Filter `org-roam-node-list' to show zetteldesk-nodes only.
     Then filter that to only those that have the POI or MOC tag with
     `zetteldesk-node-p' and `org-roam-node-poi-or-moc-p'.  Then
     insert a link to every one of those nodes and seperate them with
     commas\"
       (interactive)
       (let* ((init_list (org-roam-node-list))
	      (zetteldesk_nodes (cl-remove-if-not #'zetteldesk-node-p init_list))
	      (nodes_poi (cl-remove-if-not #'org-roam-node-poi-or-moc-p zetteldesk_nodes)))
	 (while nodes_poi
	   (let* ((node (car nodes_poi))
		  (description (org-roam-node-formatted (car nodes_poi))))
	     (insert (org-link-make-string
		      (concat \"id:\" (org-roam-node-id (car nodes_poi)))
		      description))
	     (insert \", \"))
	   (setq nodes_poi (cdr nodes_poi)))))

     (defun zetteldesk-insert-node-contents (&optional arg)
       \"Select a node that is part of the current `zetteldesk'.
     Add a link to it at point and then insert its contents to the
     bottom of the *zetteldesk-scratch* buffer after inserting a
     newline there.  Remove the first 67 characters which is the
     properties section if it only contains the ID of the node as its
     unneeded and change the string #+title to a top level heading as
     its more practical when inserting the contents of multiple files.

     If given the optional argument ARG, which needs to be the
     `\\\\[universal-argument]' also switch to the *zetteldesk-scratch*
     buffer in a split.\"
       (interactive \"P\")
       (let* ((node (org-roam-node-read nil #'zetteldesk-node-p))
	      (file (org-roam-node-file node))
	      (description (org-roam-node-formatted node))
	      (location (zetteldesk-insert-location)))
	 (insert (org-link-make-string
		  (concat \"id:\" (org-roam-node-id node))
		  description))
	 (with-current-buffer location
	   (goto-char (point-max))
	   (newline)
	   (insert-file-contents file nil 67)
	   (replace-string \"#+title: \" \"* \")))
       (when (equal arg '(4))
	 (save-current-buffer
	   (switch-to-buffer-other-window \"*zetteldesk-scratch*\"))))

     (defun zetteldesk-insert-node-contents-without-link ()
       \"\\\"Sister function\\\" of `zetteldesk-insert-node-contents'.
     Finds a node that is part of the `zetteldesk' and inserts its
     contents to the bottom of the zetteldesk-scratch buffer. This
     function differentiates itself, by the fact that it doesn't
     insert an ID link to the node in the current buffer and by the
     fact that it switches to the scratch buffer in a split without
     needing a `\\\\[universal-argument]'.

     For me, it makes sense a lot of the time to insert a link to the
     node inthe current buffer, especially if its an outlining
     buffer. But sometimes its not handy, and so, I just made this
     second iteration to fix that issue.\"
       (interactive)
       (let* ((node (org-roam-node-read nil #'zetteldesk-node-p))
	      (location (if zetteldesk-insert-scratch-or-current-buffer
			    \"*zetteldesk-scratch*\"
			  (current-buffer)))
	      (file (org-roam-node-file node)))
	 (with-current-buffer location
	   (goto-char (point-max))
	   (newline)
	   (insert-file-contents file nil 67)
	   (replace-string \"#+title: \" \"* \")))
       (switch-to-buffer-other-window \"*zetteldesk-scratch*\"))

     (defun zetteldesk-insert-org-file-contents (&optional arg)
       \"Select an org buffer that is in the `zetteldesk'.
     Insert its contents to the *zetteldesk-scratch* buffer, make its
      title a top level heading and demote all of its headings by one
      level (since the title now acts as a top level heading).  Note
      that org-roam nodes are not shown

     Optional argument ARG, if given needs to be a
     `\\\\[universal-argument]' and it switches to the *zetteldesk-scratch*
     buffer in a split\"
       (interactive \"P\")
       (let* ((buffer (set-buffer (read-buffer \"Zetteldesk Buffers: \" nil nil #'zetteldesk-org-buffer-p)))
	      (location (if zetteldesk-insert-scratch-or-current-buffer
			    \"*zetteldesk-scratch*\"
			  (current-buffer)))
	      (file (buffer-file-name buffer)))
	 (set-buffer location)
	 (goto-char (point-max))
	 (save-excursion
	   (newline)
	   (insert-file-contents file))
	 (save-excursion
	   (while (not (org-next-visible-heading 1))
	     (org-metaright)))
	 (replace-string \"#+title: \" \"* \"))
       (when (equal arg '(4))
	 (switch-to-buffer-other-window \"*zetteldesk-scratch*\")))

     (defun zetteldesk-insert-link-to-pdf (&optional arg)
       \"Select a pdf file that is part of the `zetteldesk'.
     Prompt for a page in that pdf (defaults to page 1 if you don't
     care about the page).

     Then, in the zetteldesk-scratch buffer, insert at `point-max' a
     newline and then a new heading with its name consisting of the
     string \\\"Supportive Material - \\\" then the pdfs name, without the
     file structure or the extension and then the string
     \\\"(PDF)\\\".  Then, insert a newline, the string \\\"Link to PDF: \\\"
     and then a link to the chosen pdf, in the correct page, with the
     description being the pdfs name without the file structure or the
     extension.  Note that `org-pdftools-setup-link' needs to be run
     for pdf links to work (which this uses).

     Optionally, if given optional argument ARG which is the
     `\\\\[universal-argument]' save the highlighted region in a
     variable and insert it after the heading but before the pdf link.
     This functionality serves the purpose of adding a \\\"description\\\"
     sort of thing to the pdf. Typically, when citing a pdf as
     supplementary info to an argument, there is something specific
     you want to take from the pdf. Therefore, this optional addition,
     adds that to the scratch buffer so you remember why it was
     useful.\"
       (interactive \"P\")
       (let* ((pdf-buffer (set-buffer (read-buffer \"Zetteldesk Pdfs: \" nil nil #'zetteldesk-pdf-p)))
	      (file (buffer-file-name pdf-buffer))
	      (location (if zetteldesk-insert-scratch-or-current-buffer
			    \"*zetteldesk-scratch*\"
			  (current-buffer)))
	      (page (read-from-minibuffer \"Page: \" \"1\"))
	      (description (file-name-nondirectory (file-name-sans-extension file))))
	 (with-current-buffer location
	   (goto-char (point-max))
	   (newline)
	   (org-insert-heading)
	   (insert \"Supportive Material - \" description \" (PDF)\")
	   (newline)
	   (when (equal arg '(4))
	     (let ((contents (buffer-substring (mark) (point))))
	       (insert contents)
	       (newline)))
	   (insert \"Link to PDF: \"
		   (org-link-make-string
		    (concat \"pdf:\" file \"::\" page)
		    description)))))

     (defun zetteldesk-insert-info-contents (&optional arg)
       \"Select an info node that is part of the current `zetteldesk'.
     Uses a `completing-read' prompt for the selection.

     Then, in the *zetteldesk-scratch* buffer, go to the end of the
     buffer, insert a newline and a heading of the form \\\"Supportive
     Material - \\\" the node's name \\\"(Info)\\\" akin to what is done in
     `zetteldesk-insert-link-to-pdf'.  Then, insert the contents of the
     chosen info node, removing the first 2 lines which have the
     contextual links of the buffer, as they are not functional
     outside of the info buffer.  Also insert a link with the title
     \\\"See this node in its context\\\" which opens the node inside the
     info program. Finally, restore the buffer from which this
     function was called. Ideally, this wouldn't require a
     switch-to-buffer statement, but the function `Info-goto-node'
     used for this function switches the visible buffer to the info
     node and I couldn't find an alternative that only makes it
     current for editing operations, but doesn't change the visible
     buffer to it.

     I find the link to the actual info buffer is useful as a lot of
     the time, you might want to insert the buffer so you can store it
     with other useful information inside the zetteldesk-scratch
     buffer, but then, you are interested in looking into the other
     nodes of the manual you were reading.

     Optional argument ARG which is a `\\\\[universal-argument]' switch to the
     zetteldesk-scratch buffer in a split.\"
       (interactive \"P\")
       (let ((info_node (completing-read \"Nodes: \" zetteldesk-info-nodes))
	     (location (if zetteldesk-insert-scratch-or-current-buffer
			   \"*zetteldesk-scratch*\"
			 (current-buffer)))
	     (buffer (current-buffer)))
	 (Info-goto-node info_node)
	 (with-current-buffer location
	   (goto-char (point-max))
	   (newline)
	   (org-insert-heading)
	   (insert \"Supportive Material - \" info_node \" (Info)\")
	   (newline)
	   (save-excursion (insert-buffer-substring \"*info*\")
			   (insert
			    (org-link-make-string
			     (concat \"elisp:(Info-goto-node \\\"\" info_node \"\\\")\")
			     \"See this node in its context\")))
	   (kill-whole-line 2))
	 (switch-to-buffer buffer)
	 (when (equal arg '(4))
	   (switch-to-buffer-other-window \"*zetteldesk-scratch*\"))))

" 0 6 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6 9 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 9 12 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 12 13 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-comment-face org-block)) 13 31 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-comment-face org-block)) 31 32 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-comment-face org-block)) 32 36 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 36 41 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 41 44 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 44 97 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 97 102 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 102 105 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 105 173 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 173 178 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 178 181 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 181 249 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 249 256 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 256 265 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 265 266 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 266 280 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 280 309 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 309 343 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 343 358 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 358 361 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 361 369 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 369 374 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 374 390 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 390 396 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 396 411 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 411 417 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 417 426 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 426 427 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 427 470 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 470 473 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 473 480 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 480 829 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 829 837 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 837 842 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 842 858 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 858 864 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 864 885 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 885 902 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 902 903 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 903 918 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 918 926 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 926 973 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 973 1011 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1011 1012 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 1012 1030 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 1030 1031 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 1031 1032 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1032 1093 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1093 1112 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1112 1119 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1119 1129 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1129 1135 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1135 1155 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1155 1162 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1162 1185 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1185 1193 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1193 1194 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1194 1207 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1207 1216 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1216 1221 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1221 1222 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1222 1255 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 1255 1266 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1266 1319 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1319 1327 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1327 1330 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1330 1339 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1339 1342 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1342 1373 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1373 1374 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1374 1375 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 1375 1393 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 1393 1394 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 1394 1395 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1395 1442 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1442 1445 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1445 1464 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1464 1472 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1472 1574 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1574 1579 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1579 1580 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1580 1615 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 1615 1617 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1617 1626 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 1626 1639 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1639 1792 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1792 1810 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1810 1827 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1827 1828 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 1828 1846 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 1846 1847 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 1847 1885 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1885 1894 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1894 1905 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1905 1906 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1906 1909 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1909 1919 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1919 1921 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1921 1961 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1961 1962 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1962 1963 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 1963 1972 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 1972 1981 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 1981 1982 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 1982 1983 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1983 1985 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1985 2018 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2018 2019 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2019 2020 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 2020 2038 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 2038 2039 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 2039 2040 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2040 2051 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2051 2056 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2056 2057 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2057 2093 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 2093 2104 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2104 2113 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2113 2131 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2131 2240 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2240 2257 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2257 2264 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2264 2290 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2290 2299 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2299 2381 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2381 2390 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2390 2401 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2401 2411 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2411 2415 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2415 2613 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2613 2618 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2618 2634 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2634 2638 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2638 2776 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2776 2781 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2781 2799 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2799 2818 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2818 2854 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2854 2858 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2858 2861 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2861 2866 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2866 2870 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2870 2901 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2901 2902 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2902 2908 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2908 2913 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2913 2914 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2914 2945 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 2945 2947 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2947 2956 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 2956 2969 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2969 3013 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3013 3023 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3023 3112 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3112 3113 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 3113 3131 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 3131 3132 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 3132 3361 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3361 3402 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3402 3434 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3434 3435 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3435 3498 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3498 3507 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3507 3525 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3525 3547 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3547 3548 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 3548 3566 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 3566 3567 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 3567 3592 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3592 3601 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3601 3612 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3612 3613 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3613 3616 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 3616 3626 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3626 3630 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3630 3684 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3684 3724 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3724 3793 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3793 3794 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3794 3820 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3820 3821 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3821 3868 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3868 3873 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 3873 3920 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3920 3939 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3939 4050 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4050 4061 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 4061 4062 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4062 4066 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 4066 4078 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4078 4082 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4082 4103 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4103 4122 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4122 4152 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4152 4158 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4158 4159 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 4159 4160 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 4160 4178 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 4178 4179 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 4179 4180 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 4180 4185 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4185 4192 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4192 4197 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4197 4198 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4198 4242 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 4242 4253 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4253 4278 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4278 4309 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4309 4351 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4351 4361 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4361 4666 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4666 4684 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4684 4685 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4685 4688 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4688 4930 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4930 4939 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4939 4950 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4950 4960 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4960 4964 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4964 5036 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5036 5038 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5038 5090 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5090 5091 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5091 5092 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 5092 5110 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 5110 5111 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 5111 5112 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5112 5181 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5181 5188 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5188 5200 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5200 5210 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5210 5311 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5311 5322 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5322 5323 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5323 5327 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5327 5369 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5369 5370 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5370 5371 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 5371 5389 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 5389 5390 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 5390 5391 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5391 5401 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5401 5406 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5406 5407 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5407 5442 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 5442 5444 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5444 5453 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 5453 5466 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5466 5504 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5504 5514 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 5514 5517 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5517 5549 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5549 5550 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5550 5568 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5568 5569 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5569 5827 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5827 5845 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 5845 5871 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5871 5872 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5872 5890 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5890 5891 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5891 5915 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5915 5924 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5924 5935 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5935 5936 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5936 5939 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5939 5949 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5949 5953 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5953 5988 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5988 6010 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6010 6017 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6017 6048 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6048 6066 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6066 6068 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6068 6120 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6120 6121 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6121 6122 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 6122 6140 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 6140 6141 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 6141 6142 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6142 6261 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6261 6275 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6275 6326 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6326 6340 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6340 6346 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6346 6351 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6351 6429 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6429 6440 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6440 6441 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6441 6445 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6445 6456 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6456 6460 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6460 6511 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6511 6512 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6512 6513 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 6513 6531 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 6531 6532 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 6532 6533 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6533 6544 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6544 6548 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6548 6549 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6549 6550 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6550 6579 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 6579 6581 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6581 6590 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 6590 6596 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6596 6603 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6603 6643 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6643 6653 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 6653 6749 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6749 6750 (fontified t font-lock-fontified t help-echo "Hidden behind deeper element; move to another line?" src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6750 6808 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6808 6817 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 6817 7096 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7096 7157 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7157 7256 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7256 7279 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 7279 7297 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7297 7414 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7414 7432 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 7432 7797 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7797 7812 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7812 7889 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7889 7898 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7898 7909 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 7909 7910 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7910 7913 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 7913 7923 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7923 7927 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 7927 7966 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7966 7985 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 7985 8078 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8078 8080 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8080 8132 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8132 8133 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8133 8134 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 8134 8152 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 8152 8153 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 8153 8154 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8154 8214 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8214 8222 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8222 8223 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8223 8226 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8226 8311 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8311 8312 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8312 8330 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8330 8340 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8340 8419 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8419 8443 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8443 8456 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8456 8464 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8464 8485 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8485 8489 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8489 8514 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8514 8517 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8517 8623 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8623 8638 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8638 8680 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8680 8686 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8686 8692 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8692 8696 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8696 8727 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8727 8733 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8733 8738 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8738 8739 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8739 8770 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 8770 8772 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8772 8781 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 8781 8787 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8787 8794 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8794 8844 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 8844 8854 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 8854 8870 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 8870 8885 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 8885 8932 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 8932 8933 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 8933 8951 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 8951 8952 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 8952 9127 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 9127 9156 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 9156 9287 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 9287 9322 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 9322 9633 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 9633 9647 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 9647 9822 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 9822 9849 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 9849 10228 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 10228 10246 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 10246 10306 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 10306 10315 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10315 10326 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 10326 10327 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10327 10330 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 10330 10340 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10340 10343 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 10343 10349 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10349 10373 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10373 10382 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 10382 10407 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10407 10424 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10424 10426 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 10426 10471 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10471 10477 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10477 10478 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 10478 10479 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 10479 10497 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 10497 10498 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 10498 10499 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 10499 10588 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10588 10607 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 10607 10696 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10696 10720 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 10720 10731 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10731 10740 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 10740 10761 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10761 10775 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 10775 10801 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10801 10802 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 10802 10803 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 10803 10807 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 10807 10808 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 10808 10809 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 10809 10870 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10870 10896 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 10896 10907 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10907 10912 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 10912 10914 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10914 10922 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10922 10952 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 10952 11012 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11012 11016 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 11016 11069 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11069 11070 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 11070 11071 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 11071 11089 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 11089 11090 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 11090 11091 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 11091 11097 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 54435) (undo-tree-id7679 . -1471) (undo-tree-id7680 . -3793) (undo-tree-id7681 . 7276) (undo-tree-id7682 . -3793) (undo-tree-id7683 . -3793) (undo-tree-id7684 . -5252) (undo-tree-id7685 . -6055) (undo-tree-id7686 . 7277) (undo-tree-id7687 . -5394) (undo-tree-id7688 . -5394) (undo-tree-id7689 . -3793) (undo-tree-id7690 . -5394) (undo-tree-id7691 . -5394) (undo-tree-id7692 . -5394) (undo-tree-id7693 . -5394) (undo-tree-id7694 . -5394) (undo-tree-id7695 . -5394) (undo-tree-id7696 . -5394) (undo-tree-id7697 . -3949) (undo-tree-id7698 . -5394) (undo-tree-id7699 . -5394) (undo-tree-id7700 . -5394) (undo-tree-id7701 . -5394) (undo-tree-id7702 . -5394) (undo-tree-id7703 . -5394) (undo-tree-id7704 . -5394) (undo-tree-id7705 . -4312) (undo-tree-id7706 . -5394) (undo-tree-id7707 . -5394) (undo-tree-id7708 . -5394) (undo-tree-id7709 . -5394) (undo-tree-id7710 . -5394) (undo-tree-id7711 . -5394) (undo-tree-id7712 . -5394) (undo-tree-id7713 . -5113) (undo-tree-id7714 . -5394) (undo-tree-id7715 . -5394) (undo-tree-id7716 . -5394) (undo-tree-id7717 . -5394) (undo-tree-id7718 . -5394) (undo-tree-id7719 . -5394) (undo-tree-id7720 . -5394) (undo-tree-id7721 . -5394) (undo-tree-id7722 . -5394) (undo-tree-id7723 . -5394) (undo-tree-id7724 . -5394) (undo-tree-id7725 . -5394) (undo-tree-id7726 . -5252) (undo-tree-id7727 . -5394) (undo-tree-id7728 . -5394) (undo-tree-id7729 . -5394) (undo-tree-id7730 . -5394) (undo-tree-id7731 . -5394) (undo-tree-id7732 . -5394) (undo-tree-id7733 . -5394) (undo-tree-id7734 . -5252) (undo-tree-id7735 . -5394) (undo-tree-id7736 . -5394) (undo-tree-id7737 . -5252) (undo-tree-id7738 . -5394) (undo-tree-id7739 . -5394) (undo-tree-id7740 . -5252) (undo-tree-id7741 . -5394) (undo-tree-id7742 . -5394) (undo-tree-id7743 . -5252) (undo-tree-id7744 . -5394) (undo-tree-id7745 . -5394) (undo-tree-id7746 . -5252) (undo-tree-id7747 . -5394) (undo-tree-id7748 . -5394) (undo-tree-id7749 . -5252) (undo-tree-id7750 . -5394) (undo-tree-id7751 . -5394) (undo-tree-id7752 . -5252) (undo-tree-id7753 . -5394) (undo-tree-id7754 . -5394) (undo-tree-id7755 . -5252) (undo-tree-id7756 . -5394) (undo-tree-id7757 . -5394) (undo-tree-id7758 . -5252) (undo-tree-id7759 . -5394) (undo-tree-id7760 . -5394) (undo-tree-id7761 . -5252) (undo-tree-id7762 . -5394) (undo-tree-id7763 . -5394) (undo-tree-id7764 . -5252) (undo-tree-id7765 . -5394) (undo-tree-id7766 . -5394) (undo-tree-id7767 . -5252) (undo-tree-id7768 . -5394) (undo-tree-id7769 . -5394) (undo-tree-id7770 . -5252) (undo-tree-id7771 . -5394) (undo-tree-id7772 . -5394) (undo-tree-id7773 . -5252) (undo-tree-id7774 . -5394) (undo-tree-id7775 . -5394) (undo-tree-id7776 . -5252) (undo-tree-id7777 . -5394) (undo-tree-id7778 . -5394) (undo-tree-id7779 . -5252) (undo-tree-id7780 . -5394) (undo-tree-id7781 . -5394) (undo-tree-id7782 . -5252) (undo-tree-id7783 . -5394) (undo-tree-id7784 . -5394) (undo-tree-id7785 . -5252) (undo-tree-id7786 . -5394) (undo-tree-id7787 . -5394) (undo-tree-id7788 . -5252) (undo-tree-id7789 . -5394) (undo-tree-id7790 . -5394) (undo-tree-id7791 . -5252) (undo-tree-id7792 . -5394) (undo-tree-id7793 . -5394) (undo-tree-id7794 . -5252) (undo-tree-id7795 . -5394) (undo-tree-id7796 . -5394) (undo-tree-id7797 . -5252) (undo-tree-id7798 . -5394) (undo-tree-id7799 . -5394) (undo-tree-id7800 . -5252) (undo-tree-id7801 . -5394) (undo-tree-id7802 . -5394) (undo-tree-id7803 . -5252) (undo-tree-id7804 . -5394) (undo-tree-id7805 . -5394) (undo-tree-id7806 . -5252) (undo-tree-id7807 . -5394) (undo-tree-id7808 . -5394) (undo-tree-id7809 . -5252) (undo-tree-id7810 . -5394) (undo-tree-id7811 . -5394) (undo-tree-id7812 . -5252) (undo-tree-id7813 . -5394) (undo-tree-id7814 . -5394) (undo-tree-id7815 . -5252) (undo-tree-id7816 . -5394) (undo-tree-id7817 . -5394) (undo-tree-id7818 . -5252) (undo-tree-id7819 . -5394) (undo-tree-id7820 . -5394) (undo-tree-id7821 . -5252) (undo-tree-id7822 . -5394) (undo-tree-id7823 . -5394) (undo-tree-id7824 . -5252) (undo-tree-id7825 . -5394) (undo-tree-id7826 . -5394) (undo-tree-id7827 . -5252) (undo-tree-id7828 . -5394) (undo-tree-id7829 . -5394) (undo-tree-id7830 . -5252) (undo-tree-id7831 . -5394) (undo-tree-id7832 . -5394) (undo-tree-id7833 . -5252) (undo-tree-id7834 . -5394) (undo-tree-id7835 . -5394) (undo-tree-id7836 . -5252) (undo-tree-id7837 . -5394) (undo-tree-id7838 . -5394) (undo-tree-id7839 . -5252) (undo-tree-id7840 . -5394) (undo-tree-id7841 . -5394) (undo-tree-id7842 . -5252) (undo-tree-id7843 . -5394) (undo-tree-id7844 . -5394) (undo-tree-id7845 . -5252) (undo-tree-id7846 . -5394) (undo-tree-id7847 . -5394) (undo-tree-id7848 . -5252) (undo-tree-id7849 . -5394) (undo-tree-id7850 . -5394) (undo-tree-id7851 . -5252) (undo-tree-id7852 . -5394) (undo-tree-id7853 . -5394) (undo-tree-id7854 . -5252) (undo-tree-id7855 . -5394) (undo-tree-id7856 . -5394) (undo-tree-id7857 . -5252) (undo-tree-id7858 . -5394) (undo-tree-id7859 . -5394) (undo-tree-id7860 . -5252) (undo-tree-id7861 . -5394) (undo-tree-id7862 . -5394) (undo-tree-id7863 . -5252) (undo-tree-id7864 . -5394) (undo-tree-id7865 . -5394) (undo-tree-id7866 . -5252) (undo-tree-id7867 . -6055) (undo-tree-id7868 . -6055) (undo-tree-id7869 . -6055) (undo-tree-id7870 . -6055) (undo-tree-id7871 . -6055) (undo-tree-id7872 . -6055) (undo-tree-id7873 . -6055) (undo-tree-id7874 . -6055) (undo-tree-id7875 . -6055) (undo-tree-id7876 . -6055) (undo-tree-id7877 . -6055) (undo-tree-id7878 . -6055) (undo-tree-id7879 . -6055) (undo-tree-id7880 . -6055) (undo-tree-id7881 . -6056) (undo-tree-id7882 . -6056) (undo-tree-id7883 . -6056) (undo-tree-id7884 . -6056) (undo-tree-id7885 . -6056) (undo-tree-id7886 . -6061) (undo-tree-id7887 . -6061) (undo-tree-id7888 . -6061) (undo-tree-id7889 . -6061) (undo-tree-id7890 . -6061) (undo-tree-id7891 . -6067) (undo-tree-id7892 . -6067) (undo-tree-id7893 . -6067) (undo-tree-id7894 . -6067) (undo-tree-id7895 . -6067) (undo-tree-id7896 . -6071) (undo-tree-id7897 . -6071) (undo-tree-id7898 . -6071) (undo-tree-id7899 . -6071) (undo-tree-id7900 . -6071) (undo-tree-id7901 . -6072) (undo-tree-id7902 . -6072) (undo-tree-id7903 . -6072) (undo-tree-id7904 . -6072) (undo-tree-id7905 . -6072) (undo-tree-id7906 . -6128) (undo-tree-id7907 . -6128) (undo-tree-id7908 . -6128) (undo-tree-id7909 . -6128) (undo-tree-id7910 . -6128) (undo-tree-id7911 . -6129) (undo-tree-id7912 . -6129) (undo-tree-id7913 . -6129) (undo-tree-id7914 . -6129) (undo-tree-id7915 . -6129) (undo-tree-id7916 . -6135) (undo-tree-id7917 . -6135) (undo-tree-id7918 . -6135) (undo-tree-id7919 . -6135) (undo-tree-id7920 . -6135) (undo-tree-id7921 . -6136) (undo-tree-id7922 . -6136) (undo-tree-id7923 . -6136) (undo-tree-id7924 . -6136) (undo-tree-id7925 . -6136) (undo-tree-id7926 . -6137) (undo-tree-id7927 . -6137) (undo-tree-id7928 . -6137) (undo-tree-id7929 . -6137) (undo-tree-id7930 . -6137) (undo-tree-id7931 . -6166) (undo-tree-id7932 . -6166) (undo-tree-id7933 . -6166) (undo-tree-id7934 . -6166) (undo-tree-id7935 . -6166) (undo-tree-id7936 . -6166) (undo-tree-id7937 . -6166) (undo-tree-id7938 . -6166) (undo-tree-id7939 . -6166) (undo-tree-id7940 . -6166) (undo-tree-id7941 . -6165) (undo-tree-id7942 . -6165) (undo-tree-id7943 . -6165) (undo-tree-id7944 . -6165) (undo-tree-id7945 . -6165) (undo-tree-id7946 . -6165) (undo-tree-id7947 . -6165) (undo-tree-id7948 . -6165) (undo-tree-id7949 . -6165) (undo-tree-id7950 . -6165) (undo-tree-id7951 . -6165) (undo-tree-id7952 . -6165) (undo-tree-id7953 . -5252) (undo-tree-id7954 . -6165) (undo-tree-id7955 . -6165) (undo-tree-id7956 . -6165) (undo-tree-id7957 . -6165) (undo-tree-id7958 . -6165) (undo-tree-id7959 . -6165) (undo-tree-id7960 . -6165) (undo-tree-id7961 . -6165) (undo-tree-id7962 . -6165) (undo-tree-id7963 . -6165) (undo-tree-id7964 . -6055) (undo-tree-id7965 . -6165) (undo-tree-id7966 . -5252) (undo-tree-id7967 . -6055) (undo-tree-id7968 . -6055) (undo-tree-id7969 . -6055) (undo-tree-id7970 . -6055) (undo-tree-id7971 . -6055) (undo-tree-id7972 . -6055) (undo-tree-id7973 . -6055) (undo-tree-id7974 . -6055) (undo-tree-id7975 . -6055) (undo-tree-id7976 . -6055) (undo-tree-id7977 . -6055) (undo-tree-id7978 . -6055) (undo-tree-id7979 . -6055) (undo-tree-id7980 . -6055) (undo-tree-id7981 . -6055) (undo-tree-id7982 . -6055) (undo-tree-id7983 . -6055) (undo-tree-id7984 . -6055) (undo-tree-id7985 . -6055) (undo-tree-id7986 . -5252) (undo-tree-id7987 . -6055) (undo-tree-id7988 . -6055) (undo-tree-id7989 . -6055) (undo-tree-id7990 . -6055) (undo-tree-id7991 . -6055) (undo-tree-id7992 . -6055) (undo-tree-id7993 . -6055) (undo-tree-id7994 . -6055) (undo-tree-id7995 . -6055) (undo-tree-id7996 . -6055) (undo-tree-id7997 . -6055) (undo-tree-id7998 . -6055) (undo-tree-id7999 . -5252) (undo-tree-id8000 . -6055) (undo-tree-id8001 . -6055) (undo-tree-id8002 . -5252) (undo-tree-id8003 . -6055) (undo-tree-id8004 . -6055) (undo-tree-id8005 . -5252) (undo-tree-id8006 . -6055) (undo-tree-id8007 . -6055) (undo-tree-id8008 . -5252) (undo-tree-id8009 . -6055) (undo-tree-id8010 . -6055) (undo-tree-id8011 . -5252) (undo-tree-id8012 . -6055) (undo-tree-id8013 . -6055) (undo-tree-id8014 . -5252) (undo-tree-id8015 . -6055) (undo-tree-id8016 . -6055) (undo-tree-id8017 . -5252) (undo-tree-id8018 . -6055) (undo-tree-id8019 . -6055) (undo-tree-id8020 . -5252) (undo-tree-id8021 . -6055) (undo-tree-id8022 . -6055) (undo-tree-id8023 . -5252) (undo-tree-id8024 . -6055) (undo-tree-id8025 . -6055) (undo-tree-id8026 . -5252) (undo-tree-id8027 . -6055) (undo-tree-id8028 . -6055) (undo-tree-id8029 . -5252) (undo-tree-id8030 . -6055) (undo-tree-id8031 . -6055) (undo-tree-id8032 . -5252) (undo-tree-id8033 . -6055) (undo-tree-id8034 . -6055) (undo-tree-id8035 . -5252) (undo-tree-id8036 . -6055) (undo-tree-id8037 . -6055) (undo-tree-id8038 . -5252) (undo-tree-id8039 . -6055) (undo-tree-id8040 . -6055) (undo-tree-id8041 . -5252) (undo-tree-id8042 . -6055) (undo-tree-id8043 . -6055) (undo-tree-id8044 . -5252) (undo-tree-id8045 . -6055) (undo-tree-id8046 . -6055) (undo-tree-id8047 . -5252) (undo-tree-id8048 . -6055) (undo-tree-id8049 . -6055) (undo-tree-id8050 . -5252) (undo-tree-id8051 . -6055) (undo-tree-id8052 . -6055) (undo-tree-id8053 . -5252) (undo-tree-id8054 . -6055) (undo-tree-id8055 . -6055) (undo-tree-id8056 . -5252) (undo-tree-id8057 . -6055) (undo-tree-id8058 . -6055) (undo-tree-id8059 . -5252) (undo-tree-id8060 . -6055) (undo-tree-id8061 . -6055) (undo-tree-id8062 . -5252) (undo-tree-id8063 . -6055) (undo-tree-id8064 . -6055) (undo-tree-id8065 . -5252) (undo-tree-id8066 . -6055) (undo-tree-id8067 . -6055) (undo-tree-id8068 . -5252) (undo-tree-id8069 . -6055) (undo-tree-id8070 . -6055) (undo-tree-id8071 . -5252) (undo-tree-id8072 . -6055) (undo-tree-id8073 . -6055) (undo-tree-id8074 . -5252) (undo-tree-id8075 . -6055) (undo-tree-id8076 . -6055) (undo-tree-id8077 . -5252) (undo-tree-id8078 . -6055) (undo-tree-id8079 . -6055) (undo-tree-id8080 . -5252) (undo-tree-id8081 . -6055) (undo-tree-id8082 . -6055) (undo-tree-id8083 . -5252) (undo-tree-id8084 . -6055) (undo-tree-id8085 . -6055) (undo-tree-id8086 . -5252) (undo-tree-id8087 . -6055) (undo-tree-id8088 . -6055) (undo-tree-id8089 . -5252) (undo-tree-id8090 . -6055) (undo-tree-id8091 . -6055) (undo-tree-id8092 . -5252) (undo-tree-id8093 . -6055) (undo-tree-id8094 . -6055) (undo-tree-id8095 . -5252) (undo-tree-id8096 . -6055) (undo-tree-id8097 . -6055) (undo-tree-id8098 . -5252) (undo-tree-id8099 . -6055) (undo-tree-id8100 . -6055) (undo-tree-id8101 . -5252) (undo-tree-id8102 . -6055) (undo-tree-id8103 . -6055) (undo-tree-id8104 . -5252) (undo-tree-id8105 . -6055) (undo-tree-id8106 . -6055) (undo-tree-id8107 . -5252) (undo-tree-id8108 . -6055) (undo-tree-id8109 . -6055) (undo-tree-id8110 . -5252) (undo-tree-id8111 . -6055) (undo-tree-id8112 . -6055) (undo-tree-id8113 . -5252) (undo-tree-id8114 . -6055) (undo-tree-id8115 . -6055) (undo-tree-id8116 . -5252) (undo-tree-id8117 . -6055) (undo-tree-id8118 . -6055) (undo-tree-id8119 . -5252) (undo-tree-id8120 . -6055) (undo-tree-id8121 . -6055) (undo-tree-id8122 . -5252) (undo-tree-id8123 . -6055) (undo-tree-id8124 . -6055) (undo-tree-id8125 . -5252) (undo-tree-id8126 . -6055) (undo-tree-id8127 . -6055) (undo-tree-id8128 . -5252) (undo-tree-id8129 . -6055) (undo-tree-id8130 . -6055) (undo-tree-id8131 . -5252) (undo-tree-id8132 . -6055) (undo-tree-id8133 . -6055) (undo-tree-id8134 . -5252) (undo-tree-id8135 . -6055) (undo-tree-id8136 . -6055) (undo-tree-id8137 . -5252) (undo-tree-id8138 . -6055) (undo-tree-id8139 . -6055) (undo-tree-id8140 . -5252) (undo-tree-id8141 . -6055) (undo-tree-id8142 . -6055) (undo-tree-id8143 . -5252) (undo-tree-id8144 . -6055) (undo-tree-id8145 . -6055) (undo-tree-id8146 . -5252) (undo-tree-id8147 . -6055) (undo-tree-id8148 . -6055) (undo-tree-id8149 . -5252) (undo-tree-id8150 . -6055) (undo-tree-id8151 . -6055) (undo-tree-id8152 . -5252) (undo-tree-id8153 . -6055) (undo-tree-id8154 . -6055) (undo-tree-id8155 . -5252) (undo-tree-id8156 . -6055) (undo-tree-id8157 . -6055) (undo-tree-id8158 . -5252) (undo-tree-id8159 . -6055) (undo-tree-id8160 . -6055) (undo-tree-id8161 . -5252) (undo-tree-id8162 . -6055) (undo-tree-id8163 . -6055) (undo-tree-id8164 . -5252) (undo-tree-id8165 . -6055) (undo-tree-id8166 . -6055) (undo-tree-id8167 . -5252) (undo-tree-id8168 . -6055) (undo-tree-id8169 . -6055) (undo-tree-id8170 . -5252) (undo-tree-id8171 . -6055) (undo-tree-id8172 . -6055) (undo-tree-id8173 . -5252) (undo-tree-id8174 . -6055) (undo-tree-id8175 . -6055) (undo-tree-id8176 . -5252) (undo-tree-id8177 . -6055) (undo-tree-id8178 . -6055) (undo-tree-id8179 . -5252) (undo-tree-id8180 . -6055) (undo-tree-id8181 . -6055) (undo-tree-id8182 . -5252) (undo-tree-id8183 . -6055) (undo-tree-id8184 . -6055) (undo-tree-id8185 . -5252) (undo-tree-id8186 . -6055) (undo-tree-id8187 . -6055) (undo-tree-id8188 . -5252) (undo-tree-id8189 . -6055) (undo-tree-id8190 . -6055) (undo-tree-id8191 . -5252) (undo-tree-id8192 . -6055) (undo-tree-id8193 . -6055) (undo-tree-id8194 . -5252) (undo-tree-id8195 . -6055) (undo-tree-id8196 . -6055) (undo-tree-id8197 . -6055) (undo-tree-id8198 . -6055) (undo-tree-id8199 . -6055) (undo-tree-id8200 . -6055) (undo-tree-id8201 . -1470) (undo-tree-id8202 . -1470) (undo-tree-id8203 . -646) (undo-tree-id8204 . -10556) (undo-tree-id8205 . -10263) (undo-tree-id8206 . -10263) (undo-tree-id8207 . -8407) (undo-tree-id8208 . -10263) (undo-tree-id8209 . -10263) (undo-tree-id8210 . -10263) (undo-tree-id8211 . -10263) (undo-tree-id8212 . -10263) (undo-tree-id8213 . -7915) (undo-tree-id8214 . -7915) (undo-tree-id8215 . -6167) (undo-tree-id8216 . -7915) (undo-tree-id8217 . -7915) (undo-tree-id8218 . -7915) (undo-tree-id8219 . -7915) (undo-tree-id8220 . -7915) (undo-tree-id8221 . -5394) (undo-tree-id8222 . -5394) (undo-tree-id8223 . -3793) (undo-tree-id8224 . -5394) (undo-tree-id8225 . -5394) (undo-tree-id8226 . -5394) (undo-tree-id8227 . -5394) (undo-tree-id8228 . -5394) (undo-tree-id8229 . -2818) (undo-tree-id8230 . -2818) (undo-tree-id8231 . -1178) (undo-tree-id8232 . -2818) (undo-tree-id8233 . -2818) (undo-tree-id8234 . -2818) (undo-tree-id8235 . -2818) (undo-tree-id8236 . -2818) (undo-tree-id8237 . -2818) (undo-tree-id8238 . -2818) (undo-tree-id8239 . -1398) (undo-tree-id8240 . -2818) (undo-tree-id8241 . -2818) (undo-tree-id8242 . -2818) (undo-tree-id8243 . -2818) (undo-tree-id8244 . -2818) (undo-tree-id8245 . -2818) (undo-tree-id8246 . -2818) (undo-tree-id8247 . -2818) (undo-tree-id8248 . -2818) (undo-tree-id8249 . -2818) (undo-tree-id8250 . -2818) (undo-tree-id8251 . -2818) (undo-tree-id8252 . -2818) (undo-tree-id8253 . -2818) (undo-tree-id8254 . -1178) (undo-tree-id8255 . -2818) (undo-tree-id8256 . -2818) (undo-tree-id8257 . -2818) (undo-tree-id8258 . -2818) (undo-tree-id8259 . -2818) (undo-tree-id8260 . -2818) (undo-tree-id8261 . -2818) (undo-tree-id8262 . -2818) (undo-tree-id8263 . -2818) (undo-tree-id8264 . -2818) (undo-tree-id8265 . -2818) (undo-tree-id8266 . -2818) (undo-tree-id8267 . -2382) (undo-tree-id8268 . -2382) (undo-tree-id8269 . -878) (undo-tree-id8270 . -2382) (undo-tree-id8271 . -2382) (undo-tree-id8272 . -2382) (undo-tree-id8273 . -2382) (undo-tree-id8274 . -2382) (undo-tree-id8275 . -2382) (undo-tree-id8276 . -2382) (undo-tree-id8277 . -2382) (undo-tree-id8278 . -2382) (undo-tree-id8279 . -2382) (undo-tree-id8280 . -2382) (undo-tree-id8281 . -2382) (undo-tree-id8282 . -1711) (undo-tree-id8283 . -1711) (undo-tree-id8284 . -249) (undo-tree-id8285 . -1711) (undo-tree-id8286 . -1711) (undo-tree-id8287 . -1711) (undo-tree-id8288 . -1711) (undo-tree-id8289 . -1711) (undo-tree-id8290 . -1711) (undo-tree-id8291 . -1711) (undo-tree-id8292 . -1711) (undo-tree-id8293 . -1711) (undo-tree-id8294 . -1711) (undo-tree-id8295 . -1711) (undo-tree-id8296 . -1711) (undo-tree-id8297 . -1711) (undo-tree-id8298 . -1711) (undo-tree-id8299 . -410) (undo-tree-id8300 . -1711) (undo-tree-id8301 . -1711) (undo-tree-id8302 . -1711) (undo-tree-id8303 . -1711) (undo-tree-id8304 . -1711) (undo-tree-id8305 . -1711) (undo-tree-id8306 . -1711) (undo-tree-id8307 . -1711) (undo-tree-id8308 . -1711) (undo-tree-id8309 . -1711) (undo-tree-id8310 . -1711) (undo-tree-id8311 . -1711) (undo-tree-id8312 . -1711) (undo-tree-id8313 . -1711) (undo-tree-id8314 . -646) (undo-tree-id8315 . -1711) (undo-tree-id8316 . -1711) (undo-tree-id8317 . -1711) (undo-tree-id8318 . -1711) (undo-tree-id8319 . -1711) (undo-tree-id8320 . -1711) (undo-tree-id8321 . -1711) (undo-tree-id8322 . -1711) (undo-tree-id8323 . -1711) (undo-tree-id8324 . -1711) (undo-tree-id8325 . -1711) (undo-tree-id8326 . -1711) (undo-tree-id8327 . -1711) (undo-tree-id8328 . -1711) (undo-tree-id8329 . -878) (undo-tree-id8330 . -1711) (undo-tree-id8331 . -1711) (undo-tree-id8332 . -1711) (undo-tree-id8333 . -1711) (undo-tree-id8334 . -1711) (undo-tree-id8335 . -1711) (undo-tree-id8336 . -1711) (undo-tree-id8337 . -1711) (undo-tree-id8338 . -1711) (undo-tree-id8339 . -1711) (undo-tree-id8340 . -1711) (undo-tree-id8341 . -1711) (undo-tree-id8342 . -1711) (undo-tree-id8343 . -1711) (undo-tree-id8344 . -1032) (undo-tree-id8345 . -1711) (undo-tree-id8346 . -1711) (undo-tree-id8347 . -1711) (undo-tree-id8348 . -1711) (undo-tree-id8349 . -1711) (undo-tree-id8350 . -1711) (undo-tree-id8351 . -1711) (undo-tree-id8352 . -1711) (undo-tree-id8353 . -1711) (undo-tree-id8354 . -1711) (undo-tree-id8355 . -1711) (undo-tree-id8356 . -1711) (undo-tree-id8357 . -1711) (undo-tree-id8358 . -1711) (undo-tree-id8359 . -1178) (undo-tree-id8360 . -1711) (undo-tree-id8361 . -1711) (undo-tree-id8362 . -1711) (undo-tree-id8363 . -1711) (undo-tree-id8364 . -1711) (undo-tree-id8365 . -1711) (undo-tree-id8366 . -1711) (undo-tree-id8367 . -1711) (undo-tree-id8368 . -1711) (undo-tree-id8369 . -1711) (undo-tree-id8370 . -1711) (undo-tree-id8371 . -1711) (undo-tree-id8372 . -1711) (undo-tree-id8373 . -1711) (undo-tree-id8374 . -1567) (undo-tree-id8375 . -1711) (undo-tree-id8376 . -1711) (undo-tree-id8377 . -1711) (undo-tree-id8378 . -1711) (undo-tree-id8379 . -1711) (undo-tree-id8380 . -1711) (undo-tree-id8381 . -1711) (undo-tree-id8382 . -1711) (undo-tree-id8383 . -1711) (undo-tree-id8384 . -1711) (undo-tree-id8385 . -1711) (undo-tree-id8386 . -1711) (undo-tree-id8387 . -1783) (undo-tree-id8388 . -1783) (undo-tree-id8389 . -1783) (undo-tree-id8390 . -1783) (undo-tree-id8391 . -1783) (undo-tree-id8392 . -1783) (undo-tree-id8393 . -1783) (undo-tree-id8394 . -1783) (undo-tree-id8395 . -1783) (undo-tree-id8396 . -1783) (undo-tree-id8397 . -1783) (undo-tree-id8398 . -1783) (undo-tree-id8399 . -1783) (undo-tree-id8400 . -1783) (undo-tree-id8401 . -1783) (undo-tree-id8402 . -1985) (undo-tree-id8403 . -1985) (undo-tree-id8404 . -1985) (undo-tree-id8405 . -1985) (undo-tree-id8406 . -1985) (undo-tree-id8407 . -1985) (undo-tree-id8408 . -1985) (undo-tree-id8409 . -1985) (undo-tree-id8410 . -1985) (undo-tree-id8411 . -1985) (undo-tree-id8412 . -1985) (undo-tree-id8413 . -1985) (undo-tree-id8414 . -1985) (undo-tree-id8415 . -1985) (undo-tree-id8416 . -1985) (undo-tree-id8417 . -2450) (undo-tree-id8418 . -2450) (undo-tree-id8419 . -2450) (undo-tree-id8420 . -2450) (undo-tree-id8421 . -2450) (undo-tree-id8422 . -2450) (undo-tree-id8423 . -2450) (undo-tree-id8424 . -2450) (undo-tree-id8425 . -2450) (undo-tree-id8426 . -2450) (undo-tree-id8427 . -2450) (undo-tree-id8428 . -2450) (undo-tree-id8429 . -2450) (undo-tree-id8430 . -2450) (undo-tree-id8431 . -2450) (undo-tree-id8432 . -3093) (undo-tree-id8433 . -3093) (undo-tree-id8434 . -3093) (undo-tree-id8435 . -3093) (undo-tree-id8436 . -3093) (undo-tree-id8437 . -3093) (undo-tree-id8438 . -3093) (undo-tree-id8439 . -3093) (undo-tree-id8440 . -3093) (undo-tree-id8441 . -3093) (undo-tree-id8442 . -3093) (undo-tree-id8443 . -3093) (undo-tree-id8444 . -3093) (undo-tree-id8445 . -3093) (undo-tree-id8446 . -3093) (undo-tree-id8447 . -3093) (undo-tree-id8448 . -3093) (undo-tree-id8449 . -2861) (undo-tree-id8450 . -3093) (undo-tree-id8451 . -3093) (undo-tree-id8452 . -3093) (undo-tree-id8453 . -3093) (undo-tree-id8454 . -3093) (undo-tree-id8455 . -3093) (undo-tree-id8456 . -3093) (undo-tree-id8457 . -3793) (undo-tree-id8458 . -3793) (undo-tree-id8459 . -3793) (undo-tree-id8460 . -3793) (undo-tree-id8461 . -3793) (undo-tree-id8462 . -3793) (undo-tree-id8463 . -3793) (undo-tree-id8464 . -3793) (undo-tree-id8465 . -3793) (undo-tree-id8466 . -3793) (undo-tree-id8467 . -3793) (undo-tree-id8468 . -3793) (undo-tree-id8469 . -3793) (undo-tree-id8470 . -3793) (undo-tree-id8471 . -2861) (undo-tree-id8472 . -3793) (undo-tree-id8473 . -3793) (undo-tree-id8474 . -2861) (undo-tree-id8475 . -3793) (undo-tree-id8476 . -3793) (undo-tree-id8477 . -3793) (undo-tree-id8478 . -3793) (undo-tree-id8479 . -3793) (undo-tree-id8480 . -3793) (undo-tree-id8481 . -3793) (undo-tree-id8482 . -3793) (undo-tree-id8483 . -3793) (undo-tree-id8484 . -3793) (undo-tree-id8485 . -3793) (undo-tree-id8486 . -3793) (undo-tree-id8487 . -3793) (undo-tree-id8488 . -3793) (undo-tree-id8489 . -3793) (undo-tree-id8490 . -3793) (undo-tree-id8491 . -3793) (undo-tree-id8492 . -3793) (undo-tree-id8493 . -3793) (undo-tree-id8494 . -3793) (undo-tree-id8495 . -3793) (undo-tree-id8496 . -3793) (undo-tree-id8497 . -3793) (undo-tree-id8498 . -3793) (undo-tree-id8499 . -3793) (undo-tree-id8500 . -3793) (undo-tree-id8501 . -3793) (undo-tree-id8502 . -3793) (undo-tree-id8503 . -3793) (undo-tree-id8504 . -3793) (undo-tree-id8505 . -3793) (undo-tree-id8506 . -3793) (undo-tree-id8507 . -3793) (undo-tree-id8508 . -3793) (undo-tree-id8509 . -3793) (undo-tree-id8510 . -3793) (undo-tree-id8511 . -3793) (undo-tree-id8512 . -3793) (undo-tree-id8513 . -3793) (undo-tree-id8514 . -3793) (undo-tree-id8515 . -3793) (undo-tree-id8516 . -3793) (undo-tree-id8517 . -3793) (undo-tree-id8518 . -3793) (undo-tree-id8519 . -3793) (undo-tree-id8520 . -3793) (undo-tree-id8521 . -3793) (undo-tree-id8522 . -3793) (undo-tree-id8523 . -3793) (undo-tree-id8524 . -3793) (undo-tree-id8525 . -3793) (undo-tree-id8526 . -3793) (undo-tree-id8527 . -3793) (undo-tree-id8528 . -3793) (undo-tree-id8529 . -3793) (undo-tree-id8530 . -3793) (undo-tree-id8531 . -3793) (undo-tree-id8532 . -3793) (undo-tree-id8533 . -3793) (undo-tree-id8534 . -3793) (undo-tree-id8535 . -3793) (undo-tree-id8536 . -3793) (undo-tree-id8537 . -3793) (undo-tree-id8538 . -3793) (undo-tree-id8539 . -3793) (undo-tree-id8540 . -3793) (undo-tree-id8541 . -3793) (undo-tree-id8542 . -3793) (undo-tree-id8543 . -3793) (undo-tree-id8544 . -3793) (undo-tree-id8545 . -3793) (undo-tree-id8546 . -3793) (undo-tree-id8547 . -3793) (undo-tree-id8548 . -3793) (undo-tree-id8549 . -3793) (undo-tree-id8550 . -3793) (undo-tree-id8551 . -3793) (undo-tree-id8552 . -3793) (undo-tree-id8553 . -3793) (undo-tree-id8554 . -3793) (undo-tree-id8555 . -3793) (undo-tree-id8556 . -3793) (undo-tree-id8557 . -3793) (undo-tree-id8558 . -3793) (undo-tree-id8559 . -3793) (undo-tree-id8560 . -3793) (undo-tree-id8561 . -3793) (undo-tree-id8562 . -3793) (undo-tree-id8563 . -3793) (undo-tree-id8564 . -3793) (undo-tree-id8565 . -3793) (undo-tree-id8566 . -3793) (undo-tree-id8567 . -3793) (undo-tree-id8568 . -3793) (undo-tree-id8569 . -3793) (undo-tree-id8570 . -3793) (undo-tree-id8571 . -3793) (undo-tree-id8572 . -3793) (undo-tree-id8573 . -3793) (undo-tree-id8574 . -3793) (undo-tree-id8575 . -3793) (undo-tree-id8576 . -3793) (undo-tree-id8577 . -3793) (undo-tree-id8578 . -3793) (undo-tree-id8579 . -3793) (undo-tree-id8580 . -3793) (undo-tree-id8581 . -3793) (undo-tree-id8582 . -3793) (undo-tree-id8583 . -3793) (undo-tree-id8584 . -3793) (undo-tree-id8585 . -3793) (undo-tree-id8586 . -3793) (undo-tree-id8587 . -3793) (undo-tree-id8588 . -3793) (undo-tree-id8589 . -3793) (undo-tree-id8590 . -3793) (undo-tree-id8591 . -3793) (undo-tree-id8592 . -3793) (undo-tree-id8593 . -3793) (undo-tree-id8594 . -3793) (undo-tree-id8595 . -3793) (undo-tree-id8596 . -3793) (undo-tree-id8597 . -3793) (undo-tree-id8598 . -3793) (undo-tree-id8599 . -3793) (undo-tree-id8600 . -3793) (undo-tree-id8601 . -3792) (undo-tree-id8602 . -3792) (undo-tree-id8603 . -3792) (undo-tree-id8604 . -3792) (undo-tree-id8605 . -3792) (undo-tree-id8606 . -3793) (undo-tree-id8607 . -3793) (undo-tree-id8608 . -3793) (undo-tree-id8609 . -3793) (undo-tree-id8610 . -3793) (undo-tree-id8611 . -3793) (undo-tree-id8612 . -3793) (undo-tree-id8613 . -3793) (undo-tree-id8614 . -3793) (undo-tree-id8615 . -3793) (undo-tree-id8616 . -3793) (undo-tree-id8617 . -3793) (undo-tree-id8618 . -2861) (undo-tree-id8619 . -3793) (undo-tree-id8620 . -3793) (undo-tree-id8621 . -3793) (undo-tree-id8622 . -3793) (undo-tree-id8623 . -3793) (undo-tree-id8624 . -3793) (undo-tree-id8625 . -3793) (undo-tree-id8626 . -3793) (undo-tree-id8627 . -3793) (undo-tree-id8628 . -3793) (undo-tree-id8629 . -3793) (undo-tree-id8630 . -3793) (undo-tree-id8631 . -2861) (undo-tree-id8632 . -3793) (undo-tree-id8633 . -2861) (undo-tree-id8634 . -3793) (undo-tree-id8635 . -3793) (undo-tree-id8636 . -3793) (undo-tree-id8637 . -3793) (undo-tree-id8638 . -3793) (undo-tree-id8639 . -3793) (undo-tree-id8640 . -3793) (undo-tree-id8641 . -3793) (undo-tree-id8642 . -3793) (undo-tree-id8643 . -3793) (undo-tree-id8644 . -3793) (undo-tree-id8645 . -3793) (undo-tree-id8646 . -3793) (undo-tree-id8647 . -3793) (undo-tree-id8648 . -3793) (undo-tree-id8649 . -3793) (undo-tree-id8650 . -3793) (undo-tree-id8651 . -3793) (undo-tree-id8652 . -3792) (undo-tree-id8653 . -3793) (undo-tree-id8654 . -2861) (undo-tree-id8655 . -3793) (undo-tree-id8656 . -3792) (undo-tree-id8657 . -2861) (undo-tree-id8658 . -3792) (undo-tree-id8659 . -3793) (undo-tree-id8660 . -2861) (undo-tree-id8661 . -3793) (undo-tree-id8662 . -3792) (undo-tree-id8663 . -2861) (undo-tree-id8664 . -3793) (undo-tree-id8665 . -3793) (undo-tree-id8666 . -3793) (undo-tree-id8667 . -3793) (undo-tree-id8668 . -3793) (undo-tree-id8669 . -3793) (undo-tree-id8670 . -3793) (undo-tree-id8671 . -3794) (undo-tree-id8672 . -3793) (undo-tree-id8673 . -2861) (undo-tree-id8674 . -2861) (undo-tree-id8675 . -3794) (undo-tree-id8676 . -3794) (undo-tree-id8677 . -3794) (undo-tree-id8678 . -3794) (undo-tree-id8679 . -3794) (undo-tree-id8680 . -3794) (undo-tree-id8681 . -3795) (undo-tree-id8682 . -3794) (undo-tree-id8683 . -2861) (undo-tree-id8684 . -2861) (undo-tree-id8685 . -3795) (undo-tree-id8686 . -3795) (undo-tree-id8687 . -3795) (undo-tree-id8688 . -3795) (undo-tree-id8689 . -3795) (undo-tree-id8690 . -3795) (undo-tree-id8691 . -3796) (undo-tree-id8692 . -3795) (undo-tree-id8693 . -2861) (undo-tree-id8694 . -2861) (undo-tree-id8695 . -3796) (undo-tree-id8696 . -3796) (undo-tree-id8697 . -3796) (undo-tree-id8698 . -3796) (undo-tree-id8699 . -3796) (undo-tree-id8700 . -3796) (undo-tree-id8701 . -3797) (undo-tree-id8702 . -3796) (undo-tree-id8703 . -2861) (undo-tree-id8704 . -2861) (undo-tree-id8705 . -3797) (undo-tree-id8706 . -3797) (undo-tree-id8707 . -3797) (undo-tree-id8708 . -3797) (undo-tree-id8709 . -3797) (undo-tree-id8710 . -3797) (undo-tree-id8711 . -3797) (undo-tree-id8712 . -3797) (undo-tree-id8713 . -3797) (undo-tree-id8714 . -3797) (undo-tree-id8715 . -3797) (undo-tree-id8716 . -3797) (undo-tree-id8717 . -3797) (undo-tree-id8718 . -3797) (undo-tree-id8719 . -3797) (undo-tree-id8720 . -3797) (undo-tree-id8721 . -3797) (undo-tree-id8722 . -3797) (undo-tree-id8723 . -3797) (undo-tree-id8724 . -3797) (undo-tree-id8725 . -3797) (undo-tree-id8726 . -3797) (undo-tree-id8727 . -3797) (undo-tree-id8728 . -3797) (undo-tree-id8729 . -3797) (undo-tree-id8730 . -3797) (undo-tree-id8731 . -3797) (undo-tree-id8732 . -3797) (undo-tree-id8733 . -2861) (undo-tree-id8734 . -3797) (undo-tree-id8735 . -2861) (undo-tree-id8736 . -3797) (undo-tree-id8737 . -3797) (undo-tree-id8738 . -3797) (undo-tree-id8739 . -3797) (undo-tree-id8740 . -3797) (undo-tree-id8741 . -3797) (undo-tree-id8742 . -3797) (undo-tree-id8743 . -3797) (undo-tree-id8744 . -2861) (undo-tree-id8745 . -2861) (undo-tree-id8746 . -3797) (undo-tree-id8747 . -3797) (undo-tree-id8748 . -3797) (undo-tree-id8749 . -3797) (undo-tree-id8750 . -3797) (undo-tree-id8751 . -3797) (undo-tree-id8752 . -3798) (undo-tree-id8753 . -3797) (undo-tree-id8754 . -2861) (undo-tree-id8755 . -2861) (undo-tree-id8756 . -3798) (undo-tree-id8757 . -3798) (undo-tree-id8758 . -3798) (undo-tree-id8759 . -3798) (undo-tree-id8760 . -3798) (undo-tree-id8761 . -3798) (undo-tree-id8762 . -3798) (undo-tree-id8763 . -3798) (undo-tree-id8764 . -3798) (undo-tree-id8765 . -3798) (undo-tree-id8766 . -3798) (undo-tree-id8767 . -3798) (undo-tree-id8768 . -3798) (undo-tree-id8769 . -3798) (undo-tree-id8770 . -3798) (undo-tree-id8771 . -3798) (undo-tree-id8772 . -3798) (undo-tree-id8773 . -3798) (undo-tree-id8774 . -3798) (undo-tree-id8775 . -3798) (undo-tree-id8776 . -3798) (undo-tree-id8777 . -3798) (undo-tree-id8778 . -3798) (undo-tree-id8779 . -3798) (undo-tree-id8780 . -3798) (undo-tree-id8781 . -3798) (undo-tree-id8782 . -3799) (undo-tree-id8783 . -3799) (undo-tree-id8784 . -3799) (undo-tree-id8785 . -3799) (undo-tree-id8786 . -3799) (undo-tree-id8787 . -2861) (undo-tree-id8788 . -3799) (undo-tree-id8789 . -3798) (undo-tree-id8790 . -2861) (undo-tree-id8791 . -3799) (undo-tree-id8792 . -3799) (undo-tree-id8793 . -3799) (undo-tree-id8794 . -3799) (undo-tree-id8795 . -3799) (undo-tree-id8796 . -3799) (undo-tree-id8797 . -3799) (undo-tree-id8798 . -3800) (undo-tree-id8799 . -3800) (undo-tree-id8800 . -3800) (undo-tree-id8801 . -3800) (undo-tree-id8802 . -3800) (undo-tree-id8803 . -2861) (undo-tree-id8804 . -3800) (undo-tree-id8805 . -3799) (undo-tree-id8806 . -2861) (undo-tree-id8807 . -3800) (undo-tree-id8808 . -3800) (undo-tree-id8809 . -3800) (undo-tree-id8810 . -3800) (undo-tree-id8811 . -3800) (undo-tree-id8812 . -3800) (undo-tree-id8813 . -3800) (undo-tree-id8814 . -3801) (undo-tree-id8815 . -3801) (undo-tree-id8816 . -3801) (undo-tree-id8817 . -3801) (undo-tree-id8818 . -3801) (undo-tree-id8819 . -2861) (undo-tree-id8820 . -3801) (undo-tree-id8821 . -3800) (undo-tree-id8822 . -2861) (undo-tree-id8823 . -3801) (undo-tree-id8824 . -3801) (undo-tree-id8825 . -3801) (undo-tree-id8826 . -3801) (undo-tree-id8827 . -3801) (undo-tree-id8828 . -3801) (undo-tree-id8829 . -3801) (undo-tree-id8830 . -3802) (undo-tree-id8831 . -3802) (undo-tree-id8832 . -3802) (undo-tree-id8833 . -3802) (undo-tree-id8834 . -3802) (undo-tree-id8835 . -2861) (undo-tree-id8836 . -3802) (undo-tree-id8837 . -3801) (undo-tree-id8838 . -2861) (undo-tree-id8839 . -3802) (undo-tree-id8840 . -3802) (undo-tree-id8841 . -3802) (undo-tree-id8842 . -3802) (undo-tree-id8843 . -3802) (undo-tree-id8844 . -3802) (undo-tree-id8845 . -3802) (undo-tree-id8846 . -3802) (undo-tree-id8847 . -3802) (undo-tree-id8848 . -2861) (undo-tree-id8849 . -3802) (undo-tree-id8850 . -2861) (undo-tree-id8851 . -3802) (undo-tree-id8852 . -3802) (undo-tree-id8853 . -3802) (undo-tree-id8854 . -3802) (undo-tree-id8855 . -3802) (undo-tree-id8856 . -3802) (undo-tree-id8857 . -3802) (undo-tree-id8858 . -3802) (undo-tree-id8859 . -2861) (undo-tree-id8860 . -2861) (undo-tree-id8861 . -3802) (undo-tree-id8862 . -3802) (undo-tree-id8863 . -3802) (undo-tree-id8864 . -3802) (undo-tree-id8865 . -3802) (undo-tree-id8866 . -3802) (undo-tree-id8867 . -3802) (undo-tree-id8868 . -3802) (undo-tree-id8869 . -2861) (undo-tree-id8870 . -2861) (undo-tree-id8871 . -3802) (undo-tree-id8872 . -3802) (undo-tree-id8873 . -3802) (undo-tree-id8874 . -3802) (undo-tree-id8875 . -3802) (undo-tree-id8876 . -3802) (undo-tree-id8877 . -3802) (undo-tree-id8878 . -3802) (undo-tree-id8879 . -2861) (undo-tree-id8880 . -2861) (undo-tree-id8881 . -3802) (undo-tree-id8882 . -3802) (undo-tree-id8883 . -3802) (undo-tree-id8884 . -3802) (undo-tree-id8885 . -3802) (undo-tree-id8886 . -3802) (undo-tree-id8887 . -3802) (undo-tree-id8888 . -3802) (undo-tree-id8889 . -2861) (undo-tree-id8890 . -2861) (undo-tree-id8891 . -3802) (undo-tree-id8892 . -3802) (undo-tree-id8893 . -3802) (undo-tree-id8894 . -3802) (undo-tree-id8895 . -3802) (undo-tree-id8896 . -3802) (undo-tree-id8897 . -3802) (undo-tree-id8898 . -3802) (undo-tree-id8899 . -2861) (undo-tree-id8900 . -2861) (undo-tree-id8901 . -3802) (undo-tree-id8902 . -3802) (undo-tree-id8903 . -3802) (undo-tree-id8904 . -3802) (undo-tree-id8905 . -3802) (undo-tree-id8906 . -3802) (undo-tree-id8907 . -3803) (undo-tree-id8908 . -3802) (undo-tree-id8909 . -2861) (undo-tree-id8910 . -2861) (undo-tree-id8911 . -3803) (undo-tree-id8912 . -3803) (undo-tree-id8913 . -3803) (undo-tree-id8914 . -3803) (undo-tree-id8915 . -3803) (undo-tree-id8916 . -3803) (undo-tree-id8917 . -3803) (undo-tree-id8918 . -3803) (undo-tree-id8919 . -3803) (undo-tree-id8920 . -3803) (undo-tree-id8921 . -3803) (undo-tree-id8922 . -3803) (undo-tree-id8923 . -3803) (undo-tree-id8924 . -3803) (undo-tree-id8925 . -3803) (undo-tree-id8926 . -3803) (undo-tree-id8927 . -3803) (undo-tree-id8928 . -3803) (undo-tree-id8929 . -3803) (undo-tree-id8930 . -3803) (undo-tree-id8931 . -3803) (undo-tree-id8932 . -3803) (undo-tree-id8933 . -3803) (undo-tree-id8934 . -3803) (undo-tree-id8935 . -3803) (undo-tree-id8936 . -3803) (undo-tree-id8937 . -3804) (undo-tree-id8938 . -3804) (undo-tree-id8939 . -3804) (undo-tree-id8940 . -3804) (undo-tree-id8941 . -3804) (undo-tree-id8942 . -2861) (undo-tree-id8943 . -3804) (undo-tree-id8944 . -3803) (undo-tree-id8945 . -2861) (undo-tree-id8946 . -3804) (undo-tree-id8947 . -3804) (undo-tree-id8948 . -3804) (undo-tree-id8949 . -3804) (undo-tree-id8950 . -3804) (undo-tree-id8951 . -3804) (undo-tree-id8952 . -3804) (undo-tree-id8953 . -3805) (undo-tree-id8954 . -3804) (undo-tree-id8955 . -2861) (undo-tree-id8956 . -3805) (undo-tree-id8957 . -2861) (undo-tree-id8958 . -3805) (undo-tree-id8959 . -3805) (undo-tree-id8960 . -3805) (undo-tree-id8961 . -3805) (undo-tree-id8962 . -3805) (undo-tree-id8963 . -3805) (undo-tree-id8964 . -3806) (undo-tree-id8965 . -3805) (undo-tree-id8966 . -2861) (undo-tree-id8967 . -2861) (undo-tree-id8968 . -3806) (undo-tree-id8969 . -3806) (undo-tree-id8970 . -3806) (undo-tree-id8971 . -3806) (undo-tree-id8972 . -3806) (undo-tree-id8973 . -3806) (undo-tree-id8974 . -3807) (undo-tree-id8975 . -3806) (undo-tree-id8976 . -2861) (undo-tree-id8977 . -2861) (undo-tree-id8978 . -3807) (undo-tree-id8979 . -3807) (undo-tree-id8980 . -3807) (undo-tree-id8981 . -3807) (undo-tree-id8982 . -3807) (undo-tree-id8983 . -3807) (undo-tree-id8984 . -3808) (undo-tree-id8985 . -3807) (undo-tree-id8986 . -2861) (undo-tree-id8987 . -2861) (undo-tree-id8988 . -3808) (undo-tree-id8989 . -3808) (undo-tree-id8990 . -3808) (undo-tree-id8991 . -3808) (undo-tree-id8992 . -3808) (undo-tree-id8993 . -3808) (undo-tree-id8994 . -3809) (undo-tree-id8995 . -3808) (undo-tree-id8996 . -2861) (undo-tree-id8997 . -2861) (undo-tree-id8998 . -3809) (undo-tree-id8999 . -3809) (undo-tree-id9000 . -3809) (undo-tree-id9001 . -3809) (undo-tree-id9002 . -3809) (undo-tree-id9003 . -3809) (undo-tree-id9004 . -3810) (undo-tree-id9005 . -3809) (undo-tree-id9006 . -2861) (undo-tree-id9007 . -2861) (undo-tree-id9008 . -3810) (undo-tree-id9009 . -3810) (undo-tree-id9010 . -3810) (undo-tree-id9011 . -3810) (undo-tree-id9012 . -3810) (undo-tree-id9013 . -3810) (undo-tree-id9014 . -3811) (undo-tree-id9015 . -3810) (undo-tree-id9016 . -2861) (undo-tree-id9017 . -2861) (undo-tree-id9018 . -3811) (undo-tree-id9019 . -3811) (undo-tree-id9020 . -3811) (undo-tree-id9021 . -3811) (undo-tree-id9022 . -3811) (undo-tree-id9023 . -3811) (undo-tree-id9024 . -3812) (undo-tree-id9025 . -3811) (undo-tree-id9026 . -2861) (undo-tree-id9027 . -2861) (undo-tree-id9028 . -3812) (undo-tree-id9029 . -3812) (undo-tree-id9030 . -3812) (undo-tree-id9031 . -3812) (undo-tree-id9032 . -3812) (undo-tree-id9033 . -3812) (undo-tree-id9034 . -3813) (undo-tree-id9035 . -3812) (undo-tree-id9036 . -2861) (undo-tree-id9037 . -2861) (undo-tree-id9038 . -3813) (undo-tree-id9039 . -3813) (undo-tree-id9040 . -3813) (undo-tree-id9041 . -3813) (undo-tree-id9042 . -3813) (undo-tree-id9043 . -3813) (undo-tree-id9044 . -3814) (undo-tree-id9045 . -3813) (undo-tree-id9046 . -2861) (undo-tree-id9047 . -2861) (undo-tree-id9048 . -3814) (undo-tree-id9049 . -3814) (undo-tree-id9050 . -3814) (undo-tree-id9051 . -3814) (undo-tree-id9052 . -3814) (undo-tree-id9053 . -3814) (undo-tree-id9054 . -3815) (undo-tree-id9055 . -3814) (undo-tree-id9056 . -2861) (undo-tree-id9057 . -2861) (undo-tree-id9058 . -3815) (undo-tree-id9059 . -3815) (undo-tree-id9060 . -3815) (undo-tree-id9061 . -3815) (undo-tree-id9062 . -3815) (undo-tree-id9063 . -3815) (undo-tree-id9064 . -3816) (undo-tree-id9065 . -3815) (undo-tree-id9066 . -2861) (undo-tree-id9067 . -2861) (undo-tree-id9068 . -3816) (undo-tree-id9069 . -3816) (undo-tree-id9070 . -3816) (undo-tree-id9071 . -3816) (undo-tree-id9072 . -3816) (undo-tree-id9073 . -3816) (undo-tree-id9074 . -3816) (undo-tree-id9075 . -3816) (undo-tree-id9076 . -3816) (undo-tree-id9077 . -3816) (undo-tree-id9078 . -3816) (undo-tree-id9079 . -3816) (undo-tree-id9080 . -3816) (undo-tree-id9081 . -3816) (undo-tree-id9082 . -3816) (undo-tree-id9083 . -3816) (undo-tree-id9084 . -3816) (undo-tree-id9085 . -3816) (undo-tree-id9086 . -3816) (undo-tree-id9087 . -3816) (undo-tree-id9088 . -3816) (undo-tree-id9089 . -3816) (undo-tree-id9090 . -3816) (undo-tree-id9091 . -3816) (undo-tree-id9092 . -3816) (undo-tree-id9093 . -3816) (undo-tree-id9094 . -3817) (undo-tree-id9095 . -3817) (undo-tree-id9096 . -3817) (undo-tree-id9097 . -3817) (undo-tree-id9098 . -3817) (undo-tree-id9099 . -2861) (undo-tree-id9100 . -3817) (undo-tree-id9101 . -3816) (undo-tree-id9102 . -2861) (undo-tree-id9103 . -3817) (undo-tree-id9104 . -3817) (undo-tree-id9105 . -3817) (undo-tree-id9106 . -3817) (undo-tree-id9107 . -3817) (undo-tree-id9108 . -3817) (undo-tree-id9109 . -3817) (undo-tree-id9110 . -3818) (undo-tree-id9111 . -3818) (undo-tree-id9112 . -3818) (undo-tree-id9113 . -3818) (undo-tree-id9114 . -3818) (undo-tree-id9115 . -2861) (undo-tree-id9116 . -3818) (undo-tree-id9117 . -3817) (undo-tree-id9118 . -2861) (undo-tree-id9119 . -3818) (undo-tree-id9120 . -3818) (undo-tree-id9121 . -3818) (undo-tree-id9122 . -3818) (undo-tree-id9123 . -3818) (undo-tree-id9124 . -3818) (undo-tree-id9125 . -3818) (undo-tree-id9126 . -3819) (undo-tree-id9127 . -3819) (undo-tree-id9128 . -3819) (undo-tree-id9129 . -3819) (undo-tree-id9130 . -3819) (undo-tree-id9131 . -2861) (undo-tree-id9132 . -3819) (undo-tree-id9133 . -3818) (undo-tree-id9134 . -2861) (undo-tree-id9135 . -3819) (undo-tree-id9136 . -3819) (undo-tree-id9137 . -3819) (undo-tree-id9138 . -3819) (undo-tree-id9139 . -3819) (undo-tree-id9140 . -3819) (undo-tree-id9141 . -3819) (undo-tree-id9142 . -3820) (undo-tree-id9143 . -3819) (undo-tree-id9144 . -2861) (undo-tree-id9145 . -3820) (undo-tree-id9146 . -2861) (undo-tree-id9147 . -3820) (undo-tree-id9148 . -3820) (undo-tree-id9149 . -3820) (undo-tree-id9150 . -3820) (undo-tree-id9151 . -3820) (undo-tree-id9152 . -3820) (undo-tree-id9153 . -3820) (undo-tree-id9154 . -3820) (undo-tree-id9155 . -3820) (undo-tree-id9156 . -3820) (undo-tree-id9157 . -3820) (undo-tree-id9158 . -3820) (undo-tree-id9159 . -3820) (undo-tree-id9160 . -3819) (undo-tree-id9161 . -3819) (undo-tree-id9162 . -3819) (undo-tree-id9163 . -3819) (undo-tree-id9164 . -3819) (undo-tree-id9165 . -3819) (undo-tree-id9166 . -3819) (undo-tree-id9167 . -3819) (undo-tree-id9168 . -3819) (undo-tree-id9169 . -2861) (undo-tree-id9170 . -3819) (undo-tree-id9171 . -3819) (undo-tree-id9172 . -3819) (undo-tree-id9173 . -3819) (undo-tree-id9174 . -3819) (undo-tree-id9175 . -3819) (undo-tree-id9176 . -3819) (undo-tree-id9177 . -3820) (undo-tree-id9178 . -3819) (undo-tree-id9179 . -2861) (undo-tree-id9180 . -3821) (undo-tree-id9181 . -3820) (undo-tree-id9182 . -2861) (undo-tree-id9183 . -3821) (undo-tree-id9184 . -3821) (undo-tree-id9185 . -3821) (undo-tree-id9186 . -3821) (undo-tree-id9187 . -3821) (undo-tree-id9188 . -3821) (undo-tree-id9189 . -3821) (undo-tree-id9190 . -3821) (undo-tree-id9191 . -3821) (undo-tree-id9192 . -3821) (undo-tree-id9193 . -3821) (undo-tree-id9194 . -3821) (undo-tree-id9195 . -2861) (undo-tree-id9196 . -3821) (undo-tree-id9197 . -3821) (undo-tree-id9198 . -2861) (undo-tree-id9199 . -3821) (undo-tree-id9200 . -3821) (undo-tree-id9201 . -3821) (undo-tree-id9202 . -3821) (undo-tree-id9203 . -3821) (undo-tree-id9204 . -3821) (undo-tree-id9205 . -3821) (undo-tree-id9206 . -2663) (undo-tree-id9207 . -3821) (undo-tree-id9208 . -3821) (undo-tree-id9209 . -3821) (undo-tree-id9210 . -3821) (undo-tree-id9211 . -3821) (undo-tree-id9212 . -3821) (undo-tree-id9213 . -3821) (undo-tree-id9214 . -3821) (undo-tree-id9215 . -3821) (undo-tree-id9216 . -3821) (undo-tree-id9217 . -3821) (undo-tree-id9218 . -3821) (undo-tree-id9219 . -2450) (undo-tree-id9220 . -3821) (undo-tree-id9221 . -3821) (undo-tree-id9222 . -3821) (undo-tree-id9223 . -3821) (undo-tree-id9224 . -3821) (undo-tree-id9225 . -3821) (undo-tree-id9226 . -3821) (undo-tree-id9227 . -3821) (undo-tree-id9228 . -3821) (undo-tree-id9229 . -3821) (undo-tree-id9230 . -3821) (undo-tree-id9231 . -3821) (undo-tree-id9232 . -2234) (undo-tree-id9233 . -3821) (undo-tree-id9234 . -3821) (undo-tree-id9235 . -3821) (undo-tree-id9236 . -3821) (undo-tree-id9237 . -3821) (undo-tree-id9238 . -3821) (undo-tree-id9239 . -3821) (undo-tree-id9240 . -3821) (undo-tree-id9241 . -3821) (undo-tree-id9242 . -3821) (undo-tree-id9243 . -3568) (undo-tree-id9244 . -3568) (undo-tree-id9245 . -1783) (undo-tree-id9246 . -3568) (undo-tree-id9247 . -3568) (undo-tree-id9248 . -3568) (undo-tree-id9249 . -3568) (undo-tree-id9250 . -3568) (undo-tree-id9251 . -3568) (undo-tree-id9252 . -3568) (undo-tree-id9253 . -3568) (undo-tree-id9254 . -3568) (undo-tree-id9255 . -3568) (undo-tree-id9256 . -3293) (undo-tree-id9257 . -3293) (undo-tree-id9258 . -1567) (undo-tree-id9259 . -3293) (undo-tree-id9260 . -3293) (undo-tree-id9261 . -3293) (undo-tree-id9262 . -3293) (undo-tree-id9263 . -3293) (undo-tree-id9264 . -3293) (undo-tree-id9265 . -3293) (undo-tree-id9266 . -3293) (undo-tree-id9267 . -3293) (undo-tree-id9268 . -3293) (undo-tree-id9269 . -2818) (undo-tree-id9270 . -2818) (undo-tree-id9271 . -1178) (undo-tree-id9272 . -2818) (undo-tree-id9273 . -2818) (undo-tree-id9274 . -2818) (undo-tree-id9275 . -2818) (undo-tree-id9276 . -2818) (undo-tree-id9277 . -2818) (undo-tree-id9278 . -2818) (undo-tree-id9279 . -2818) (undo-tree-id9280 . -2818) (undo-tree-id9281 . -2818) (undo-tree-id9282 . -2097) (undo-tree-id9283 . -2097) (undo-tree-id9284 . -646) (undo-tree-id9285 . -2097) (undo-tree-id9286 . -2097) (undo-tree-id9287 . -2097) (undo-tree-id9288 . -2097) (undo-tree-id9289 . -2097) (undo-tree-id9290 . -1471) (undo-tree-id9291 . -1471) (undo-tree-id9292 . -1471) (undo-tree-id9293 . -1471) (undo-tree-id9294 . -1471) (undo-tree-id9295 . -1471) (undo-tree-id9296 . -1471) (undo-tree-id9297 . -1470) (undo-tree-id9298 . -1471) (undo-tree-id9299 . -646) (undo-tree-id9300 . -1470) (undo-tree-id9301 . -1471) (undo-tree-id9302 . -646) (undo-tree-id9303 . -1470) (undo-tree-id9304 . -1470) (undo-tree-id9305 . -1470) (undo-tree-id9306 . -1470) (undo-tree-id9307 . -1470) (undo-tree-id9308 . -1470) (undo-tree-id9309 . -1470) (undo-tree-id9310 . -1470) (undo-tree-id9311 . -1470) (undo-tree-id9312 . -1470) (undo-tree-id9313 . -1470) (undo-tree-id9314 . -1470) (undo-tree-id9315 . -1470) (undo-tree-id9316 . -1470) (undo-tree-id9317 . -646) (undo-tree-id9318 . -1470) (undo-tree-id9319 . -1470) (undo-tree-id9320 . -1470) (undo-tree-id9321 . -646) (undo-tree-id9322 . -1470) (undo-tree-id9323 . -1470) (undo-tree-id9324 . -1470) (undo-tree-id9325 . -1470) (undo-tree-id9326 . -1470) (undo-tree-id9327 . -1470) (undo-tree-id9328 . -1470) (undo-tree-id9329 . -1470) (undo-tree-id9330 . -1470) (undo-tree-id9331 . -1470) (undo-tree-id9332 . -1470) (undo-tree-id9333 . -1470) (undo-tree-id9334 . -1470) (undo-tree-id9335 . -1470) (undo-tree-id9336 . -1470) (undo-tree-id9337 . -1470) (undo-tree-id9338 . -1470) (undo-tree-id9339 . -1470) (undo-tree-id9340 . -1470) (undo-tree-id9341 . -1470) (undo-tree-id9342 . -1470) (undo-tree-id9343 . -1470) (undo-tree-id9344 . -646) (undo-tree-id9345 . -1470) (undo-tree-id9346 . -1470) (undo-tree-id9347 . -1470) (undo-tree-id9348 . -1470) (undo-tree-id9349 . -1470) (undo-tree-id9350 . -1470) (undo-tree-id9351 . -1470) (undo-tree-id9352 . -646) (undo-tree-id9353 . -1470) (undo-tree-id9354 . -1470) (undo-tree-id9355 . -1470) (undo-tree-id9356 . -1470) (undo-tree-id9357 . -1470) (undo-tree-id9358 . -1470) (undo-tree-id9359 . -1470) (undo-tree-id9360 . -646) (undo-tree-id9361 . -1470) (undo-tree-id9362 . -1470) (undo-tree-id9363 . -1470) (undo-tree-id9364 . -1470) (undo-tree-id9365 . -1470) (undo-tree-id9366 . -1470) (undo-tree-id9367 . -1470) (undo-tree-id9368 . -646) (undo-tree-id9369 . -1470) (undo-tree-id9370 . -1470) (undo-tree-id9371 . -1470) (undo-tree-id9372 . -1470) (undo-tree-id9373 . -1470) (undo-tree-id9374 . -1470) (undo-tree-id9375 . -1470) (undo-tree-id9376 . -646) (undo-tree-id9377 . -1470) (undo-tree-id9378 . -1470) (undo-tree-id9379 . -1470) (undo-tree-id9380 . -1470) (undo-tree-id9381 . -1470) (undo-tree-id9382 . -1470) (undo-tree-id9383 . -1470) (undo-tree-id9384 . -646) (undo-tree-id9385 . -1470) (undo-tree-id9386 . -1470) (undo-tree-id9387 . -1470) (undo-tree-id9388 . -1470) (undo-tree-id9389 . -1470) (undo-tree-id9390 . -1470) (undo-tree-id9391 . -1470) (undo-tree-id9392 . -646) (undo-tree-id9393 . -1470) (undo-tree-id9394 . -1470) (undo-tree-id9395 . -1470) (undo-tree-id9396 . -1470) (undo-tree-id9397 . -1470) (undo-tree-id9398 . -1470) (undo-tree-id9399 . -1470) (undo-tree-id9400 . -646) (undo-tree-id9401 . -1470) (undo-tree-id9402 . -1470) (undo-tree-id9403 . -1470) (undo-tree-id9404 . -1470) (undo-tree-id9405 . -1470) (undo-tree-id9406 . -1470) (undo-tree-id9407 . -1470) (undo-tree-id9408 . -646) (undo-tree-id9409 . -1470) (undo-tree-id9410 . -1470) (undo-tree-id9411 . -646) (undo-tree-id9412 . -1470) (undo-tree-id9413 . -1470) (undo-tree-id9414 . -646) (undo-tree-id9415 . -1470) (undo-tree-id9416 . -1470) (undo-tree-id9417 . -646) (undo-tree-id9418 . -1470) (undo-tree-id9419 . -1470) (undo-tree-id9420 . -646) (undo-tree-id9421 . -1470) (undo-tree-id9422 . -1470) (undo-tree-id9423 . -646) (undo-tree-id9424 . -1470) (undo-tree-id9425 . -1470) (undo-tree-id9426 . -646) (undo-tree-id9427 . -1470) 55905) nil (25151 25636 830796 712000) 0 nil])
([nil nil ((#("(if zetteldesk-insert-scratch-or-current-buffer
			    \"*zetteldesk-scratch*\"
			  (current-buffer))" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1 3 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3 55 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 55 77 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 77 100 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 59640) (undo-tree-id7602 . -99) (undo-tree-id7603 . -99) (undo-tree-id7604 . -99) (undo-tree-id7605 . -99) (undo-tree-id7606 . -99) (undo-tree-id7607 . -99) (undo-tree-id7608 . -99) (undo-tree-id7609 . -99) (undo-tree-id7610 . -99) (undo-tree-id7611 . -99) (undo-tree-id7612 . 100) (undo-tree-id7613 . -1) (undo-tree-id7614 . 1) (undo-tree-id7615 . -100) (undo-tree-id7616 . -99) (undo-tree-id7617 . -99) (undo-tree-id7618 . -99) (undo-tree-id7619 . -99) (undo-tree-id7620 . -99) (undo-tree-id7621 . -100) (undo-tree-id7622 . -99) (undo-tree-id7623 . -99) (undo-tree-id7624 . -99) (undo-tree-id7625 . -99) (undo-tree-id7626 . -99) (undo-tree-id7627 . -99) (undo-tree-id7628 . -99) (undo-tree-id7629 . -99) (undo-tree-id7630 . -99) (undo-tree-id7631 . -99) (undo-tree-id7632 . -99) (undo-tree-id7633 . -99) (undo-tree-id7634 . -97) (undo-tree-id7635 . -97) (undo-tree-id7636 . -97) (undo-tree-id7637 . -97) (undo-tree-id7638 . -97) (undo-tree-id7639 . -96) (undo-tree-id7640 . -96) (undo-tree-id7641 . -96) (undo-tree-id7642 . -96) (undo-tree-id7643 . -96) (undo-tree-id7644 . -62) (undo-tree-id7645 . -62) (undo-tree-id7646 . -62) (undo-tree-id7647 . -62) (undo-tree-id7648 . -62) (undo-tree-id7649 . -59) (undo-tree-id7650 . -59) (undo-tree-id7651 . -59) (undo-tree-id7652 . -59) (undo-tree-id7653 . -59) (undo-tree-id7654 . -58) (undo-tree-id7655 . -58) (undo-tree-id7656 . -58) (undo-tree-id7657 . -58) (undo-tree-id7658 . -58) (undo-tree-id7659 . -57) (undo-tree-id7660 . -57) (undo-tree-id7661 . -57) (undo-tree-id7662 . -57) (undo-tree-id7663 . -57) (undo-tree-id7664 . -56) (undo-tree-id7665 . -56) (undo-tree-id7666 . -56) (undo-tree-id7667 . -56) (undo-tree-id7668 . -56) (undo-tree-id7669 . -55) (undo-tree-id7670 . -55) (undo-tree-id7671 . -55) (undo-tree-id7672 . -55) (undo-tree-id7673 . -55) (undo-tree-id7674 . -1) (undo-tree-id7675 . -1) (undo-tree-id7676 . -1) (undo-tree-id7677 . -1) (undo-tree-id7678 . -1)) nil (25151 25636 828277 766000) 0 nil])
([nil nil ((59646 . 59667) (#("d" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -59646) (undo-tree-id7592 . -1) (undo-tree-id7593 . -1) (undo-tree-id7594 . -1) (undo-tree-id7595 . -1) (undo-tree-id7596 . -1) (undo-tree-id7597 . -1) (undo-tree-id7598 . -1) (undo-tree-id7599 . -1) (undo-tree-id7600 . -1) (undo-tree-id7601 . -1) 59647 (59641 . 59647) (59640 . 59642)) nil (25151 25636 828180 406000) 0 nil])
([nil nil ((#("(if zetteldesk-insert-scratch-or-current-buffer
			    \"*zetteldesk-scratch*\"
			  (current-buffer))" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 3 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3 55 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 55 56 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 56 57 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 57 75 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 75 76 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 76 77 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 77 100 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 60598) (undo-tree-id7470 . -99) (undo-tree-id7471 . -99) (undo-tree-id7472 . -99) (undo-tree-id7473 . -99) (undo-tree-id7474 . -100) (undo-tree-id7475 . -2) (undo-tree-id7476 . -2) (undo-tree-id7477 . -2) (undo-tree-id7478 . -2) (undo-tree-id7479 . -2) (undo-tree-id7480 . -4) (undo-tree-id7481 . -4) (undo-tree-id7482 . -4) (undo-tree-id7483 . -4) (undo-tree-id7484 . -4) (undo-tree-id7485 . -5) (undo-tree-id7486 . -5) (undo-tree-id7487 . -5) (undo-tree-id7488 . -5) (undo-tree-id7489 . -5) (undo-tree-id7490 . -6) (undo-tree-id7491 . -6) (undo-tree-id7492 . -6) (undo-tree-id7493 . -6) (undo-tree-id7494 . -6) (undo-tree-id7495 . -57) (undo-tree-id7496 . -57) (undo-tree-id7497 . -57) (undo-tree-id7498 . -57) (undo-tree-id7499 . -57) (undo-tree-id7500 . -58) (undo-tree-id7501 . -58) (undo-tree-id7502 . -58) (undo-tree-id7503 . -58) (undo-tree-id7504 . -58) (undo-tree-id7505 . -59) (undo-tree-id7506 . -59) (undo-tree-id7507 . -59) (undo-tree-id7508 . -59) (undo-tree-id7509 . -59) (undo-tree-id7510 . -60) (undo-tree-id7511 . -60) (undo-tree-id7512 . -60) (undo-tree-id7513 . -60) (undo-tree-id7514 . -60) (undo-tree-id7515 . -61) (undo-tree-id7516 . -61) (undo-tree-id7517 . -61) (undo-tree-id7518 . -61) (undo-tree-id7519 . -61) (undo-tree-id7520 . -91) (undo-tree-id7521 . -91) (undo-tree-id7522 . -91) (undo-tree-id7523 . -91) (undo-tree-id7524 . -91) (undo-tree-id7525 . -92) (undo-tree-id7526 . -92) (undo-tree-id7527 . -92) (undo-tree-id7528 . -92) (undo-tree-id7529 . -92) (undo-tree-id7530 . -93) (undo-tree-id7531 . -93) (undo-tree-id7532 . -93) (undo-tree-id7533 . -93) (undo-tree-id7534 . -93) (undo-tree-id7535 . -94) (undo-tree-id7536 . -94) (undo-tree-id7537 . -94) (undo-tree-id7538 . -94) (undo-tree-id7539 . -94) (undo-tree-id7540 . -95) (undo-tree-id7541 . -95) (undo-tree-id7542 . -95) (undo-tree-id7543 . -95) (undo-tree-id7544 . -95) (undo-tree-id7545 . -96) (undo-tree-id7546 . -96) (undo-tree-id7547 . -96) (undo-tree-id7548 . -96) (undo-tree-id7549 . -96) (undo-tree-id7550 . -96) (undo-tree-id7551 . -96) (undo-tree-id7552 . -96) (undo-tree-id7553 . -96) (undo-tree-id7554 . -96) (undo-tree-id7555 . -97) (undo-tree-id7556 . -97) (undo-tree-id7557 . -97) (undo-tree-id7558 . -97) (undo-tree-id7559 . -97) (undo-tree-id7560 . -98) (undo-tree-id7561 . -98) (undo-tree-id7562 . -98) (undo-tree-id7563 . -98) (undo-tree-id7564 . -98) (undo-tree-id7565 . -99) (undo-tree-id7566 . -99) (undo-tree-id7567 . -99) (undo-tree-id7568 . -99) (undo-tree-id7569 . -99) (undo-tree-id7570 . 1) (undo-tree-id7571 . -100) (undo-tree-id7572 . 100) (undo-tree-id7573 . -1) (undo-tree-id7574 . -99) (undo-tree-id7575 . -99) (undo-tree-id7576 . -99) (undo-tree-id7577 . -99) (undo-tree-id7578 . -99) (undo-tree-id7579 . -99) (undo-tree-id7580 . -99) (undo-tree-id7581 . -99) (undo-tree-id7582 . -99) (undo-tree-id7583 . -99) (undo-tree-id7584 . -99) (undo-tree-id7585 . -99) (undo-tree-id7586 . -99) (undo-tree-id7587 . -99) (undo-tree-id7588 . -99) (undo-tree-id7589 . -99) (undo-tree-id7590 . -99) (undo-tree-id7591 . -99) 60697) nil (25151 25636 828150 303000) 0 nil])
([nil nil ((60612 . 60625) (#("o" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -60612) (undo-tree-id7461 . -1) (undo-tree-id7462 . -1) (undo-tree-id7463 . -1) (undo-tree-id7464 . -1) (undo-tree-id7465 . -1) (undo-tree-id7466 . -1) (undo-tree-id7467 . -1) (undo-tree-id7468 . -1) (undo-tree-id7469 . -1) 60613 (60599 . 60613) (60598 . 60600)) nil (25151 25636 825568 10000) 0 nil])
([nil nil ((#("(if zetteldesk-insert-scratch-or-current-buffer
			    \"*zetteldesk-scratch*\"
			  (current-buffer))" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 3 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3 55 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 55 56 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 56 57 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 57 75 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 75 76 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 76 77 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 77 100 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 62538) (undo-tree-id7364 . -99) (undo-tree-id7365 . -99) (undo-tree-id7366 . -99) (undo-tree-id7367 . -99) (undo-tree-id7368 . -100) (undo-tree-id7369 . -7) (undo-tree-id7370 . -7) (undo-tree-id7371 . -7) (undo-tree-id7372 . -7) (undo-tree-id7373 . -7) (undo-tree-id7374 . -11) (undo-tree-id7375 . -11) (undo-tree-id7376 . -11) (undo-tree-id7377 . -11) (undo-tree-id7378 . -11) (undo-tree-id7379 . -13) (undo-tree-id7380 . -13) (undo-tree-id7381 . -13) (undo-tree-id7382 . -13) (undo-tree-id7383 . -13) (undo-tree-id7384 . -14) (undo-tree-id7385 . -14) (undo-tree-id7386 . -14) (undo-tree-id7387 . -14) (undo-tree-id7388 . -14) (undo-tree-id7389 . -65) (undo-tree-id7390 . -65) (undo-tree-id7391 . -65) (undo-tree-id7392 . -65) (undo-tree-id7393 . -65) (undo-tree-id7394 . -66) (undo-tree-id7395 . -66) (undo-tree-id7396 . -66) (undo-tree-id7397 . -66) (undo-tree-id7398 . -66) (undo-tree-id7399 . -67) (undo-tree-id7400 . -67) (undo-tree-id7401 . -67) (undo-tree-id7402 . -67) (undo-tree-id7403 . -67) (undo-tree-id7404 . -68) (undo-tree-id7405 . -68) (undo-tree-id7406 . -68) (undo-tree-id7407 . -68) (undo-tree-id7408 . -68) (undo-tree-id7409 . -98) (undo-tree-id7410 . -98) (undo-tree-id7411 . -98) (undo-tree-id7412 . -98) (undo-tree-id7413 . -98) (undo-tree-id7414 . 1) (undo-tree-id7415 . -100) (undo-tree-id7416 . 100) (undo-tree-id7417 . -1) (undo-tree-id7418 . -98) (undo-tree-id7419 . -98) (undo-tree-id7420 . -98) (undo-tree-id7421 . -98) (undo-tree-id7422 . -98) (undo-tree-id7423 . -99) (undo-tree-id7424 . -99) (undo-tree-id7425 . -99) (undo-tree-id7426 . -99) (undo-tree-id7427 . -99) (undo-tree-id7428 . -99) (undo-tree-id7429 . -99) (undo-tree-id7430 . -99) (undo-tree-id7431 . -99) (undo-tree-id7432 . -99) (undo-tree-id7433 . -100) (undo-tree-id7434 . -100) (undo-tree-id7435 . -100) (undo-tree-id7436 . -100) (undo-tree-id7437 . -100) (undo-tree-id7438 . -100) (undo-tree-id7439 . -100) (undo-tree-id7440 . -100) (undo-tree-id7441 . -100) (undo-tree-id7442 . -100) (undo-tree-id7443 . -99) (undo-tree-id7444 . -99) (undo-tree-id7445 . -99) (undo-tree-id7446 . -99) (undo-tree-id7447 . -99) (undo-tree-id7448 . -99) (undo-tree-id7449 . -99) (undo-tree-id7450 . -99) (undo-tree-id7451 . -99) (undo-tree-id7452 . -99) (undo-tree-id7453 . -99) (undo-tree-id7454 . -99) (undo-tree-id7455 . -99) (undo-tree-id7456 . -99) (undo-tree-id7457 . -99) (undo-tree-id7458 . -99) (undo-tree-id7459 . -99) (undo-tree-id7460 . -99) 62637) nil (25151 25636 825545 171000) 0 nil])
([nil nil ((62547 . 62565) (#("k" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -62547) (undo-tree-id7329 . -1) (undo-tree-id7330 . -1) (undo-tree-id7331 . -1) (undo-tree-id7332 . -1) (undo-tree-id7333 . -1) (undo-tree-id7334 . -1) (undo-tree-id7335 . -1) (undo-tree-id7336 . -1) (undo-tree-id7337 . -1) (undo-tree-id7338 . -1) (undo-tree-id7339 . -1) (undo-tree-id7340 . -1) (undo-tree-id7341 . -1) (undo-tree-id7342 . -1) (undo-tree-id7343 . -1) (undo-tree-id7344 . -1) (undo-tree-id7345 . -1) (undo-tree-id7346 . -1) (undo-tree-id7347 . -1) (undo-tree-id7348 . -1) (undo-tree-id7349 . -1) (undo-tree-id7350 . -1) (undo-tree-id7351 . -1) (undo-tree-id7352 . -1) (undo-tree-id7353 . -1) (undo-tree-id7354 . -1) (#("s" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -62548) (undo-tree-id7355 . -1) (undo-tree-id7356 . -1) (undo-tree-id7357 . -1) (undo-tree-id7358 . -1) (undo-tree-id7359 . -1) (undo-tree-id7360 . -1) (undo-tree-id7361 . -1) (undo-tree-id7362 . -1) (undo-tree-id7363 . -1) 62549 (62539 . 62549) (62538 . 62540)) nil (25151 25636 823918 675000) 0 nil])
([nil nil ((#("(if zetteldesk-insert-scratch-or-current-buffer
			   \"*zetteldesk-scratch*\"
			 (current-buffer))" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 3 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3 54 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 54 55 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 55 56 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 56 74 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 74 75 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 75 76 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 76 98 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 64812) (undo-tree-id7222 . -97) (undo-tree-id7223 . -97) (undo-tree-id7224 . -97) (undo-tree-id7225 . -97) (undo-tree-id7226 . -98) (undo-tree-id7227 . -1) (undo-tree-id7228 . -1) (undo-tree-id7229 . -1) (undo-tree-id7230 . -1) (undo-tree-id7231 . -1) (undo-tree-id7232 . -2) (undo-tree-id7233 . -2) (undo-tree-id7234 . -2) (undo-tree-id7235 . -2) (undo-tree-id7236 . -2) (undo-tree-id7237 . -3) (undo-tree-id7238 . -3) (undo-tree-id7239 . -3) (undo-tree-id7240 . -3) (undo-tree-id7241 . -3) (undo-tree-id7242 . -4) (undo-tree-id7243 . -4) (undo-tree-id7244 . -4) (undo-tree-id7245 . -4) (undo-tree-id7246 . -4) (undo-tree-id7247 . -5) (undo-tree-id7248 . -5) (undo-tree-id7249 . -5) (undo-tree-id7250 . -5) (undo-tree-id7251 . -5) (undo-tree-id7252 . -6) (undo-tree-id7253 . -6) (undo-tree-id7254 . -6) (undo-tree-id7255 . -6) (undo-tree-id7256 . -6) (undo-tree-id7257 . -59) (undo-tree-id7258 . -59) (undo-tree-id7259 . -59) (undo-tree-id7260 . -59) (undo-tree-id7261 . -59) (undo-tree-id7262 . -61) (undo-tree-id7263 . -61) (undo-tree-id7264 . -61) (undo-tree-id7265 . -61) (undo-tree-id7266 . -61) (undo-tree-id7267 . -62) (undo-tree-id7268 . -62) (undo-tree-id7269 . -62) (undo-tree-id7270 . -62) (undo-tree-id7271 . -62) (undo-tree-id7272 . -63) (undo-tree-id7273 . -63) (undo-tree-id7274 . -63) (undo-tree-id7275 . -63) (undo-tree-id7276 . -63) (undo-tree-id7277 . -92) (undo-tree-id7278 . -92) (undo-tree-id7279 . -92) (undo-tree-id7280 . -92) (undo-tree-id7281 . -92) (undo-tree-id7282 . -93) (undo-tree-id7283 . -93) (undo-tree-id7284 . -93) (undo-tree-id7285 . -93) (undo-tree-id7286 . -93) (undo-tree-id7287 . -94) (undo-tree-id7288 . -94) (undo-tree-id7289 . -94) (undo-tree-id7290 . -94) (undo-tree-id7291 . -94) (undo-tree-id7292 . -95) (undo-tree-id7293 . -95) (undo-tree-id7294 . -95) (undo-tree-id7295 . -95) (undo-tree-id7296 . -95) (undo-tree-id7297 . -96) (undo-tree-id7298 . -96) (undo-tree-id7299 . -96) (undo-tree-id7300 . -96) (undo-tree-id7301 . -96) (undo-tree-id7302 . -97) (undo-tree-id7303 . -97) (undo-tree-id7304 . -97) (undo-tree-id7305 . -97) (undo-tree-id7306 . -97) (undo-tree-id7307 . 1) (undo-tree-id7308 . -98) (undo-tree-id7309 . 98) (undo-tree-id7310 . -1) (undo-tree-id7311 . -97) (undo-tree-id7312 . -97) (undo-tree-id7313 . -97) (undo-tree-id7314 . -97) (undo-tree-id7315 . -97) (undo-tree-id7316 . -97) (undo-tree-id7317 . -97) (undo-tree-id7318 . -97) (undo-tree-id7319 . -97) (undo-tree-id7320 . -97) (undo-tree-id7321 . -97) (undo-tree-id7322 . -97) (undo-tree-id7323 . -97) (undo-tree-id7324 . -97) (undo-tree-id7325 . -97) (undo-tree-id7326 . -97) (undo-tree-id7327 . -97) (undo-tree-id7328 . -97) 64909) nil (25151 25636 823771 656000) 0 nil])
([nil nil ((64818 . 64839) (#("k" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -64818) (undo-tree-id7146 . -1) (undo-tree-id7147 . -1) (undo-tree-id7148 . -1) (undo-tree-id7149 . -1) (undo-tree-id7150 . -1) (undo-tree-id7151 . -1) (undo-tree-id7152 . -1) (undo-tree-id7153 . -1) (undo-tree-id7154 . -1) (undo-tree-id7155 . -1) (undo-tree-id7156 . -1) (undo-tree-id7157 . -1) (undo-tree-id7158 . -1) (undo-tree-id7159 . -1) (undo-tree-id7160 . -1) (undo-tree-id7161 . -1) (undo-tree-id7162 . -1) (undo-tree-id7163 . -1) (undo-tree-id7164 . -1) (undo-tree-id7165 . -1) (undo-tree-id7166 . -1) (undo-tree-id7167 . -1) (undo-tree-id7168 . -1) (undo-tree-id7169 . -1) (undo-tree-id7170 . -1) (undo-tree-id7171 . -1) (undo-tree-id7172 . -1) (undo-tree-id7173 . -1) (undo-tree-id7174 . -1) (undo-tree-id7175 . -1) (undo-tree-id7176 . -1) (undo-tree-id7177 . -1) (undo-tree-id7178 . -1) (undo-tree-id7179 . -1) (undo-tree-id7180 . -1) (undo-tree-id7181 . -1) (undo-tree-id7182 . -1) (undo-tree-id7183 . -1) (undo-tree-id7184 . -1) (undo-tree-id7185 . -1) (undo-tree-id7186 . -1) (undo-tree-id7187 . -1) (#("d" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -64819) (undo-tree-id7188 . -1) (undo-tree-id7189 . -1) (undo-tree-id7190 . -1) (undo-tree-id7191 . -1) (undo-tree-id7192 . -1) (undo-tree-id7193 . -1) (undo-tree-id7194 . -1) (undo-tree-id7195 . -1) (undo-tree-id7196 . -1) (undo-tree-id7197 . -1) (undo-tree-id7198 . -1) (undo-tree-id7199 . -1) (undo-tree-id7200 . -1) (undo-tree-id7201 . -1) (undo-tree-id7202 . -1) (undo-tree-id7203 . -1) (undo-tree-id7204 . -1) (undo-tree-id7205 . -1) (undo-tree-id7206 . -1) (undo-tree-id7207 . -1) (undo-tree-id7208 . -1) (undo-tree-id7209 . -1) (undo-tree-id7210 . -1) (undo-tree-id7211 . -1) (undo-tree-id7212 . -1) (#("e" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -64820) (undo-tree-id7213 . -1) (undo-tree-id7214 . -1) (undo-tree-id7215 . -1) (undo-tree-id7216 . -1) (undo-tree-id7217 . -1) (undo-tree-id7218 . -1) (undo-tree-id7219 . -1) (undo-tree-id7220 . -1) (undo-tree-id7221 . -1) 64821 (64813 . 64821) (64812 . 64814)) nil (25151 25636 823636 161000) 0 nil])
([nil nil ((65444 . 65447) (65444 . 65446) (65444 . 65476) (#("   : zetteldesk-insert-info-contents
" 0 3 (fontified t) 3 37 (fontified t face org-code)) . 65444) (t 25151 25636 891946 213000)) nil (25151 25639 944379 967000) 0 nil])
([nil nil ((57412 . 57413) (#(" " 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block))) . -57412) (undo-tree-id10057 . -1) 57413 (57405 . 57413) (#("t" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block))) . -57405) (undo-tree-id10058 . -1) 57406 (57402 . 57406) (#(" " 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block))) . -57402) (undo-tree-id10059 . -1) 57403 (57400 . 57403) (#("o" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block))) . -57400) (undo-tree-id10060 . -1) (#("r" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block))) . -57401) (undo-tree-id10061 . -1) 57402 (57390 . 57402) (t 25151 25640 5324 548000)) nil (25151 25876 945300 634000) 0 nil])
([nil nil ((54435 . 65774) (#("
     ;; -- *ZETTELDESK-SCRATCH* --
     ;; This is the section where it all comes together. The
     ;; zetteldesk-scratch buffer is a special buffer defined here on which
     ;; you drop all your stuff. Its what molds the whole workflow together

     (defcustom zetteldesk-map (make-sparse-keymap)
       \"This variable is the keymap for `zetteldesk-mode'.\"
       :type 'keymap
       :group 'zetteldesk)

     (defcustom zetteldesk-insert-scratch-or-current-buffer t
       \"Customization variable.
     Decides whethere zetteldesk-insert functions will insert to the
     ,*zetteldesk-scratch* buffer or the current buffer.  Default value
     is t which makes those functions insert to the scratch.  Setting
     it to nil will make those functions insert to the current buffer,
     for whichever usecase you might want\"
       :type 'string
       :group 'zetteldesk)

     (define-minor-mode zetteldesk-mode
       \"Toggles the global zetteldesk-mode.

     When turned on, this mode initialises the *zetteldesk-scratch*
     buffer, a useful part of the whole zetteldesk workflow.\"
       nil
       :global t
       :group 'zetteldesk
       :keymap zetteldesk-map
       :lighter \" zetteldesk\")

     (defun zetteldesk--create-scratch-buffer ()
       \"Create the zetteldesk-scratch buffer and put it in `org-mode'.\"
       (let ((buffer (generate-new-buffer \"*zetteldesk-scratch*\"))
	     (org-startup-with-latex-preview nil))
	 (with-current-buffer buffer
	   (org-mode))))

     (add-hook 'zetteldesk-mode-on-hook 'zetteldesk--create-scratch-buffer)

     (defun zetteldesk-switch-to-scratch-buffer (&optional arg)
       \"Open the zetteldesk-scratch buffer in a split with the current buffer.

     Optionally, if given optional argument ARG, which needs to be the
     `\\\\[universal-argument]' switch to the *zetteldesk-scratch*
     buffer without issuing a split.\"
       (interactive \"P\")
       (if (equal arg '(4))
	   (switch-to-buffer \"*zetteldesk-scratch*\")
	 (switch-to-buffer-other-window \"*zetteldesk-scratch*\")))

     (defun zetteldesk-node-insert-if-poi-or-moc ()
       \"Filter `org-roam-node-list' to show zetteldesk-nodes only.
     Then filter that to only those that have the POI or MOC tag with
     `zetteldesk-node-p' and `org-roam-node-poi-or-moc-p'.  Then
     insert a link to every one of those nodes and seperate them with
     commas\"
       (interactive)
       (let* ((init_list (org-roam-node-list))
	      (zetteldesk_nodes (cl-remove-if-not #'zetteldesk-node-p init_list))
	      (nodes_poi (cl-remove-if-not #'org-roam-node-poi-or-moc-p zetteldesk_nodes)))
	 (while nodes_poi
	   (let* ((node (car nodes_poi))
		  (description (org-roam-node-formatted (car nodes_poi))))
	     (insert (org-link-make-string
		      (concat \"id:\" (org-roam-node-id (car nodes_poi)))
		      description))
	     (insert \", \"))
	   (setq nodes_poi (cdr nodes_poi)))))

     (defmacro zetteldesk-insert-location ()
       \"Simple macro that finds\"
       `(if zetteldesk-insert-scratch-or-current-buffer
		       \"*zetteldesk-scratch*\"
		     (current-buffer)))

     (defun zetteldesk-insert-node-contents (&optional arg)
       \"Select a node that is part of the current `zetteldesk'.
     Add a link to it at point and then insert its contents to the
     bottom of the *zetteldesk-scratch* buffer after inserting a
     newline there.  Remove the first 67 characters which is the
     properties section if it only contains the ID of the node as its
     unneeded and change the string #+title to a top level heading as
     its more practical when inserting the contents of multiple files.

     If given the optional argument ARG, which needs to be the
     `\\\\[universal-argument]' also switch to the *zetteldesk-scratch*
     buffer in a split.\"
       (interactive \"P\")
       (let* ((node (org-roam-node-read nil #'zetteldesk-node-p))
	      (file (org-roam-node-file node))
	      (description (org-roam-node-formatted node))
	      (location (zetteldesk-insert-location)))
	 (insert (org-link-make-string
		  (concat \"id:\" (org-roam-node-id node))
		  description))
	 (with-current-buffer location
	   (goto-char (point-max))
	   (newline)
	   (insert-file-contents file nil 67)
	   (replace-string \"#+title: \" \"* \")))
       (when (equal arg '(4))
	 (save-current-buffer
	   (switch-to-buffer-other-window \"*zetteldesk-scratch*\"))))

     (defun zetteldesk-insert-node-contents-without-link ()
       \"\\\"Sister function\\\" of `zetteldesk-insert-node-contents'.
     Finds a node that is part of the `zetteldesk' and inserts its
     contents to the bottom of the zetteldesk-scratch buffer. This
     function differentiates itself, by the fact that it doesn't
     insert an ID link to the node in the current buffer and by the
     fact that it switches to the scratch buffer in a split without
     needing a `\\\\[universal-argument]'.

     For me, it makes sense a lot of the time to insert a link to the
     node inthe current buffer, especially if its an outlining
     buffer. But sometimes its not handy, and so, I just made this
     second iteration to fix that issue.\"
       (interactive)
       (let* ((node (org-roam-node-read nil #'zetteldesk-node-p))
	      (location (zetteldesk-insert-location))
	      (file (org-roam-node-file node)))
	 (with-current-buffer location
	   (goto-char (point-max))
	   (newline)
	   (insert-file-contents file nil 67)
	   (replace-string \"#+title: \" \"* \")))
       (switch-to-buffer-other-window \"*zetteldesk-scratch*\"))

     (defun zetteldesk-insert-org-file-contents (&optional arg)
       \"Select an org buffer that is in the `zetteldesk'.
     Insert its contents to the *zetteldesk-scratch* buffer, make its
      title a top level heading and demote all of its headings by one
      level (since the title now acts as a top level heading).  Note
      that org-roam nodes are not shown

     Optional argument ARG, if given needs to be a
     `\\\\[universal-argument]' and it switches to the *zetteldesk-scratch*
     buffer in a split\"
       (interactive \"P\")
       (let* ((buffer (set-buffer (read-buffer \"Zetteldesk Buffers: \" nil nil #'zetteldesk-org-buffer-p)))
	      (location (zetteldesk-insert-location))
	      (file (buffer-file-name buffer)))
	 (set-buffer location)
	 (goto-char (point-max))
	 (save-excursion
	   (newline)
	   (insert-file-contents file))
	 (save-excursion
	   (while (not (org-next-visible-heading 1))
	     (org-metaright)))
	 (replace-string \"#+title: \" \"* \"))
       (when (equal arg '(4))
	 (switch-to-buffer-other-window \"*zetteldesk-scratch*\")))

     (defun zetteldesk-insert-link-to-pdf (&optional arg)
       \"Select a pdf file that is part of the `zetteldesk'.
     Prompt for a page in that pdf (defaults to page 1 if you don't
     care about the page).

     Then, in the zetteldesk-scratch buffer, insert at `point-max' a
     newline and then a new heading with its name consisting of the
     string \\\"Supportive Material - \\\" then the pdfs name, without the
     file structure or the extension and then the string
     \\\"(PDF)\\\".  Then, insert a newline, the string \\\"Link to PDF: \\\"
     and then a link to the chosen pdf, in the correct page, with the
     description being the pdfs name without the file structure or the
     extension.  Note that `org-pdftools-setup-link' needs to be run
     for pdf links to work (which this uses).

     Optionally, if given optional argument ARG which is the
     `\\\\[universal-argument]' save the highlighted region in a
     variable and insert it after the heading but before the pdf link.
     This functionality serves the purpose of adding a \\\"description\\\"
     sort of thing to the pdf. Typically, when citing a pdf as
     supplementary info to an argument, there is something specific
     you want to take from the pdf. Therefore, this optional addition,
     adds that to the scratch buffer so you remember why it was
     useful.\"
       (interactive \"P\")
       (let* ((pdf-buffer (set-buffer (read-buffer \"Zetteldesk Pdfs: \" nil nil #'zetteldesk-pdf-p)))
	      (file (buffer-file-name pdf-buffer))
	      (location (zetteldesk-insert-location))
	      (page (read-from-minibuffer \"Page: \" \"1\"))
	      (description (file-name-nondirectory (file-name-sans-extension file))))
	 (with-current-buffer location
	   (goto-char (point-max))
	   (newline)
	   (org-insert-heading)
	   (insert \"Supportive Material - \" description \" (PDF)\")
	   (newline)
	   (when (equal arg '(4))
	     (let ((contents (buffer-substring (mark) (point))))
	       (insert contents)
	       (newline)))
	   (insert \"Link to PDF: \"
		   (org-link-make-string
		    (concat \"pdf:\" file \"::\" page)
		    description)))))

     (defun zetteldesk-insert-info-contents (&optional arg)
       \"Select an info node that is part of the current `zetteldesk'.
     Uses a `completing-read' prompt for the selection.

     Then, in the *zetteldesk-scratch* buffer, go to the end of the
     buffer, insert a newline and a heading of the form \\\"Supportive
     Material - \\\" the node's name \\\"(Info)\\\" akin to what is done in
     `zetteldesk-insert-link-to-pdf'.  Then, insert the contents of the
     chosen info node, removing the first 2 lines which have the
     contextual links of the buffer, as they are not functional
     outside of the info buffer.  Also insert a link with the title
     \\\"See this node in its context\\\" which opens the node inside the
     info program. Finally, restore the buffer from which this
     function was called. Ideally, this wouldn't require a
     switch-to-buffer statement, but the function `Info-goto-node'
     used for this function switches the visible buffer to the info
     node and I couldn't find an alternative that only makes it
     current for editing operations, but doesn't change the visible
     buffer to it.

     I find the link to the actual info buffer is useful as a lot of
     the time, you might want to insert the buffer so you can store it
     with other useful information inside the zetteldesk-scratch
     buffer, but then, you are interested in looking into the other
     nodes of the manual you were reading.

     Optional argument ARG which is a `\\\\[universal-argument]' switch to the
     zetteldesk-scratch buffer in a split.\"
       (interactive \"P\")
       (let ((info_node (completing-read \"Nodes: \" zetteldesk-info-nodes))
	     (location (zetteldesk-insert-location))
	     (buffer (current-buffer)))
	 (Info-goto-node info_node)
	 (with-current-buffer location
	   (goto-char (point-max))
	   (newline)
	   (org-insert-heading)
	   (insert \"Supportive Material - \" info_node \" (Info)\")
	   (newline)
	   (save-excursion (insert-buffer-substring \"*info*\")
			   (insert
			    (org-link-make-string
			     (concat \"elisp:(Info-goto-node \\\"\" info_node \"\\\")\")
			     \"See this node in its context\")))
	   (kill-whole-line 2))
	 (switch-to-buffer buffer)
	 (when (equal arg '(4))
	   (switch-to-buffer-other-window \"*zetteldesk-scratch*\"))))

" 0 6 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6 9 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 9 12 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 12 13 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-comment-face org-block)) 13 31 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-comment-face org-block)) 31 32 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-comment-face org-block)) 32 36 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 36 41 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 41 44 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 44 97 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 97 102 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 102 105 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 105 173 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 173 178 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 178 181 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 181 249 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 249 256 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 256 265 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 265 266 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 266 280 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 280 309 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 309 343 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 343 358 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 358 361 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 361 369 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 369 374 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 374 390 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 390 396 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 396 417 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 417 426 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 426 427 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 427 470 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 470 480 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 480 500 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 500 829 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 829 837 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 837 842 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 842 858 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 858 864 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 864 885 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 885 902 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 902 903 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 903 918 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 918 926 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 926 1011 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1011 1012 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 1012 1030 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 1030 1031 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 1031 1093 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1093 1112 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1112 1119 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1119 1129 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1129 1135 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1135 1155 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1155 1162 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1162 1185 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1185 1193 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1193 1194 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1194 1207 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1207 1216 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1216 1221 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1221 1222 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1222 1255 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 1255 1266 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1266 1319 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1319 1327 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1327 1330 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1330 1339 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1339 1342 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1342 1373 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1373 1374 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1374 1375 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 1375 1393 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 1393 1394 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 1394 1395 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1395 1445 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1445 1464 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1464 1574 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1574 1579 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1579 1580 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1580 1615 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 1615 1617 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1617 1626 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 1626 1639 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1639 1792 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1792 1810 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1810 1827 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1827 1828 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 1828 1846 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 1846 1847 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 1847 1885 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1885 1894 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1894 1905 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1905 1906 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1906 1909 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1909 1919 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1919 1921 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1921 1961 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1961 1962 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1962 1963 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 1963 1981 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 1981 1982 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 1982 1983 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1983 2018 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2018 2019 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2019 2020 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 2020 2038 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 2038 2039 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 2039 2040 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2040 2051 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2051 2056 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2056 2057 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2057 2093 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 2093 2104 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2104 2113 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2113 2131 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2131 2164 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2164 2240 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2240 2257 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2257 2264 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2264 2290 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2290 2381 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2381 2390 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2390 2401 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2401 2411 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2411 2415 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2415 2613 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2613 2618 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2618 2634 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2634 2638 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2638 2664 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2664 2776 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2776 2781 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2781 2854 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2854 2858 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2858 2866 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2866 2870 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2870 2908 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2908 2916 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2916 2917 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2917 2943 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 2943 2954 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2954 2979 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2979 2989 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2989 2991 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2991 3045 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3045 3046 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 3046 3047 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 3047 3065 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 3065 3066 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 3066 3067 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 3067 3101 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3101 3106 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3106 3107 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3107 3138 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 3138 3140 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3140 3149 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 3149 3162 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3162 3206 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3206 3216 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3216 3305 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3305 3306 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 3306 3324 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 3324 3325 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 3325 3700 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3700 3718 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3718 3740 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3740 3741 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 3741 3759 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 3759 3760 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 3760 3785 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3785 3794 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3794 3805 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3805 3806 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3806 3809 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 3809 3819 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3819 3823 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3823 3877 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3877 3987 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3987 4013 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4013 4061 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4061 4066 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 4066 4113 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4113 4132 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4132 4243 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4243 4254 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 4254 4255 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4255 4259 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 4259 4271 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4271 4275 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4275 4296 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4296 4315 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4315 4351 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4351 4352 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 4352 4353 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 4353 4371 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 4371 4372 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 4372 4373 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 4373 4377 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4377 4385 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4385 4390 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4390 4391 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4391 4435 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 4435 4446 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4446 4471 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4471 4502 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4502 4544 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4544 4554 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4554 4859 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4859 4877 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4877 4952 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4952 5123 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5123 5132 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5132 5143 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5143 5153 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5153 5157 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5157 5228 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5228 5229 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5229 5255 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5255 5256 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5256 5302 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5302 5321 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5321 5432 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5432 5443 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5443 5444 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5444 5448 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5448 5452 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5452 5490 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5490 5491 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5491 5492 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 5492 5510 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 5510 5511 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 5511 5512 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5512 5522 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5522 5527 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5527 5528 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5528 5563 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 5563 5565 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5565 5574 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 5574 5587 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5587 5625 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5625 5635 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 5635 5670 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5670 5671 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5671 5689 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5689 5690 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5690 5948 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5948 5966 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 5966 5992 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5992 5993 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5993 6011 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 6011 6012 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 6012 6036 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6036 6045 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6045 6056 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6056 6057 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6057 6060 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6060 6070 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6070 6074 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6074 6109 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6109 6131 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6131 6186 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6186 6187 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6187 6213 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6213 6214 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6214 6310 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6310 6324 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6324 6375 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6375 6389 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6389 6395 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6395 6400 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6400 6478 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6478 6489 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6489 6490 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6490 6494 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6494 6505 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6505 6509 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6509 6560 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6560 6561 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6561 6562 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 6562 6580 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 6580 6581 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 6581 6582 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6582 6586 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6586 6593 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6593 6598 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6598 6599 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6599 6628 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 6628 6630 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6630 6639 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 6639 6652 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6652 6692 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6692 6702 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 6702 6798 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6798 6799 (fontified t font-lock-fontified t help-echo "Hidden behind deeper element; move to another line?" src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6799 6857 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6857 6866 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 6866 7086 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7086 7305 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7305 7328 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 7328 7463 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7463 7481 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 7481 7938 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7938 7947 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7947 7958 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 7958 7959 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7959 7962 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 7962 7972 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7972 7976 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 7976 8015 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8015 8034 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8034 8126 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8126 8127 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8127 8153 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8153 8154 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8154 8191 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8191 8199 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8199 8200 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8200 8203 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8203 8288 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8288 8307 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8307 8396 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8396 8420 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8420 8433 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8433 8441 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8441 8462 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8462 8466 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8466 8491 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8491 8494 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8494 8600 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8600 8615 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8615 8657 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8657 8663 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8663 8669 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8669 8673 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8673 8710 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8710 8715 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8715 8716 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8716 8747 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 8747 8749 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8749 8758 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 8758 8771 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8771 8821 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 8821 8831 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 8831 8847 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 8847 8862 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 8862 8909 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 8909 8910 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 8910 8928 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 8928 8929 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 8929 9104 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 9104 9133 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 9133 9500 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 9500 9610 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 9610 9624 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 9624 10000 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 10000 10205 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 10205 10223 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 10223 10283 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 10283 10292 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10292 10303 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 10303 10304 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10304 10307 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 10307 10317 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10317 10320 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 10320 10350 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10350 10359 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 10359 10400 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10400 10401 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10401 10427 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 10427 10428 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10428 10495 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10495 10514 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 10514 10603 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10603 10627 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 10627 10638 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10638 10647 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 10647 10668 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10668 10682 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 10682 10708 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10708 10709 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 10709 10710 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 10710 10714 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 10714 10715 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 10715 10716 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 10716 10777 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10777 10803 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 10803 10814 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10814 10819 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 10819 10829 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10829 10859 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 10859 10919 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10919 10923 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 10923 10976 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10976 10977 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 10977 10978 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 10978 10996 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 10996 10997 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 10997 10998 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 10998 11004 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 54435) (undo-tree-id9666 . -2954) (undo-tree-id9667 . -10400) (undo-tree-id9668 . 576) (undo-tree-id9669 . -10400) (undo-tree-id9670 . -10400) (undo-tree-id9671 . -4316) (undo-tree-id9672 . -5357) (undo-tree-id9673 . 8026) (undo-tree-id9674 . -10426) (undo-tree-id9675 . -10426) (undo-tree-id9676 . -9500) (undo-tree-id9677 . -10426) (undo-tree-id9678 . -10426) (undo-tree-id9679 . -9500) (undo-tree-id9680 . -10426) (undo-tree-id9681 . -10426) (undo-tree-id9682 . -9500) (undo-tree-id9683 . -5357) (undo-tree-id9684 . -5357) (undo-tree-id9685 . -4316) (undo-tree-id9686 . -5357) (undo-tree-id9687 . -5357) (undo-tree-id9688 . -4316) (undo-tree-id9689 . -2956) (undo-tree-id9690 . -2955) (undo-tree-id9691 . -2164) (undo-tree-id9692 . -2977) (undo-tree-id9693 . -2977) (undo-tree-id9694 . -2164) (undo-tree-id9695 . -2977) (undo-tree-id9696 . -2977) (undo-tree-id9697 . -2164) (undo-tree-id9698 . -2977) (undo-tree-id9699 . -2977) (undo-tree-id9700 . -2164) (undo-tree-id9701 . -2977) (undo-tree-id9702 . -2977) (undo-tree-id9703 . -2164) (undo-tree-id9704 . -2977) (undo-tree-id9705 . -2977) (undo-tree-id9706 . -2164) (undo-tree-id9707 . -2977) (undo-tree-id9708 . -2977) (undo-tree-id9709 . -2164) (undo-tree-id9710 . -2977) (undo-tree-id9711 . -2977) (undo-tree-id9712 . -2164) (undo-tree-id9713 . -2977) (undo-tree-id9714 . -2977) (undo-tree-id9715 . -2164) (undo-tree-id9716 . -2977) (undo-tree-id9717 . -2977) (undo-tree-id9718 . -2164) (undo-tree-id9719 . -2977) (undo-tree-id9720 . -2977) (undo-tree-id9721 . -2164) (undo-tree-id9722 . -2977) (undo-tree-id9723 . -2977) (undo-tree-id9724 . -2164) (undo-tree-id9725 . -2977) (undo-tree-id9726 . -2977) (undo-tree-id9727 . -2164) (undo-tree-id9728 . -2977) (undo-tree-id9729 . -2977) (undo-tree-id9730 . -2164) (undo-tree-id9731 . -2977) (undo-tree-id9732 . -2977) (undo-tree-id9733 . -2164) (undo-tree-id9734 . -2977) (undo-tree-id9735 . -2977) (undo-tree-id9736 . -2164) (undo-tree-id9737 . -2977) (undo-tree-id9738 . -2977) (undo-tree-id9739 . -2164) (undo-tree-id9740 . -2977) (undo-tree-id9741 . -2977) (undo-tree-id9742 . -2164) (undo-tree-id9743 . -2977) (undo-tree-id9744 . -2977) (undo-tree-id9745 . -2164) (undo-tree-id9746 . -2977) (undo-tree-id9747 . -2977) (undo-tree-id9748 . -2164) (undo-tree-id9749 . -2977) (undo-tree-id9750 . -2977) (undo-tree-id9751 . -2164) (undo-tree-id9752 . -2977) (undo-tree-id9753 . -2977) (undo-tree-id9754 . -2164) (undo-tree-id9755 . -2977) (undo-tree-id9756 . -2977) (undo-tree-id9757 . -2164) (undo-tree-id9758 . -2977) (undo-tree-id9759 . -2977) (undo-tree-id9760 . -2164) (undo-tree-id9761 . -2977) (undo-tree-id9762 . -2977) (undo-tree-id9763 . -2164) (undo-tree-id9764 . -2977) (undo-tree-id9765 . -2977) (undo-tree-id9766 . -2164) (undo-tree-id9767 . -2977) (undo-tree-id9768 . -2977) (undo-tree-id9769 . -2164) (undo-tree-id9770 . -2977) (undo-tree-id9771 . -2977) (undo-tree-id9772 . -2164) (undo-tree-id9773 . -2977) (undo-tree-id9774 . -2977) (undo-tree-id9775 . -2164) (undo-tree-id9776 . -2977) (undo-tree-id9777 . -2977) (undo-tree-id9778 . -2164) (undo-tree-id9779 . -2977) (undo-tree-id9780 . -2977) (undo-tree-id9781 . -2164) (undo-tree-id9782 . -2977) (undo-tree-id9783 . -2977) (undo-tree-id9784 . -2164) (undo-tree-id9785 . -2977) (undo-tree-id9786 . -2977) (undo-tree-id9787 . -2164) (undo-tree-id9788 . -2977) (undo-tree-id9789 . -2977) (undo-tree-id9790 . -2164) (undo-tree-id9791 . -2977) (undo-tree-id9792 . -2977) (undo-tree-id9793 . -2164) (undo-tree-id9794 . -2977) (undo-tree-id9795 . -2977) (undo-tree-id9796 . -2164) (undo-tree-id9797 . -2977) (undo-tree-id9798 . -2977) (undo-tree-id9799 . -2164) (undo-tree-id9800 . -2977) (undo-tree-id9801 . -2977) (undo-tree-id9802 . -2164) (undo-tree-id9803 . -2977) (undo-tree-id9804 . -2977) (undo-tree-id9805 . -2164) (undo-tree-id9806 . -2977) (undo-tree-id9807 . -2977) (undo-tree-id9808 . -2164) (undo-tree-id9809 . -2977) (undo-tree-id9810 . -2977) (undo-tree-id9811 . -2164) (undo-tree-id9812 . -2977) (undo-tree-id9813 . -2977) (undo-tree-id9814 . -2164) (undo-tree-id9815 . -2977) (undo-tree-id9816 . -2977) (undo-tree-id9817 . -2164) (undo-tree-id9818 . -2977) (undo-tree-id9819 . -2977) (undo-tree-id9820 . -2164) (undo-tree-id9821 . -2977) (undo-tree-id9822 . -2977) (undo-tree-id9823 . -2164) (undo-tree-id9824 . -2977) (undo-tree-id9825 . -2977) (undo-tree-id9826 . -2164) (undo-tree-id9827 . -2977) (undo-tree-id9828 . -2977) (undo-tree-id9829 . -2164) (undo-tree-id9830 . -2977) (undo-tree-id9831 . -2977) (undo-tree-id9832 . -2164) (undo-tree-id9833 . -2977) (undo-tree-id9834 . -2977) (undo-tree-id9835 . -2164) (undo-tree-id9836 . -2977) (undo-tree-id9837 . -2977) (undo-tree-id9838 . -2164) (undo-tree-id9839 . -2977) (undo-tree-id9840 . -2977) (undo-tree-id9841 . -2164) (undo-tree-id9842 . -2977) (undo-tree-id9843 . -2977) (undo-tree-id9844 . -2164) (undo-tree-id9845 . -2977) (undo-tree-id9846 . -2977) (undo-tree-id9847 . -2164) (undo-tree-id9848 . -2977) (undo-tree-id9849 . -2977) (undo-tree-id9850 . -2164) (undo-tree-id9851 . -2977) (undo-tree-id9852 . -2977) (undo-tree-id9853 . -2164) (undo-tree-id9854 . -2977) (undo-tree-id9855 . -2977) (undo-tree-id9856 . -2164) (undo-tree-id9857 . -2977) (undo-tree-id9858 . -2977) (undo-tree-id9859 . -2164) (undo-tree-id9860 . -2977) (undo-tree-id9861 . -2977) (undo-tree-id9862 . -2164) (undo-tree-id9863 . -2977) (undo-tree-id9864 . -2977) (undo-tree-id9865 . -2164) (undo-tree-id9866 . -2977) (undo-tree-id9867 . -2977) (undo-tree-id9868 . -2164) (undo-tree-id9869 . -2977) (undo-tree-id9870 . -2977) (undo-tree-id9871 . -2164) (undo-tree-id9872 . -2977) (undo-tree-id9873 . -2977) (undo-tree-id9874 . -2164) (undo-tree-id9875 . -2977) (undo-tree-id9876 . -2977) (undo-tree-id9877 . -2164) (undo-tree-id9878 . -2977) (undo-tree-id9879 . -2977) (undo-tree-id9880 . -2164) (undo-tree-id9881 . -2977) (undo-tree-id9882 . -2977) (undo-tree-id9883 . -2164) (undo-tree-id9884 . -2977) (undo-tree-id9885 . -2977) (undo-tree-id9886 . -2164) (undo-tree-id9887 . -2977) (undo-tree-id9888 . -2977) (undo-tree-id9889 . -2164) (undo-tree-id9890 . -2977) (undo-tree-id9891 . -2977) (undo-tree-id9892 . -2164) (undo-tree-id9893 . -2977) (undo-tree-id9894 . -2977) (undo-tree-id9895 . -2164) (undo-tree-id9896 . -2977) (undo-tree-id9897 . -2977) (undo-tree-id9898 . -2164) (undo-tree-id9899 . -2977) (undo-tree-id9900 . -2977) (undo-tree-id9901 . -2164) (undo-tree-id9902 . -2977) (undo-tree-id9903 . -2977) (undo-tree-id9904 . -2164) (undo-tree-id9905 . -2977) (undo-tree-id9906 . -2977) (undo-tree-id9907 . -2164) (undo-tree-id9908 . -2977) (undo-tree-id9909 . -2977) (undo-tree-id9910 . -2164) (undo-tree-id9911 . -2977) (undo-tree-id9912 . -2977) (undo-tree-id9913 . -2164) (undo-tree-id9914 . -2977) (undo-tree-id9915 . -2977) (undo-tree-id9916 . -2164) (undo-tree-id9917 . -2977) (undo-tree-id9918 . -2977) (undo-tree-id9919 . -2164) (undo-tree-id9920 . -2977) (undo-tree-id9921 . -2977) (undo-tree-id9922 . -2164) (undo-tree-id9923 . -2977) (undo-tree-id9924 . -2977) (undo-tree-id9925 . -2164) (undo-tree-id9926 . -2977) (undo-tree-id9927 . -2977) (undo-tree-id9928 . -2164) (undo-tree-id9929 . -2977) (undo-tree-id9930 . -2977) (undo-tree-id9931 . -2164) (undo-tree-id9932 . -2977) (undo-tree-id9933 . -2977) (undo-tree-id9934 . -2164) (undo-tree-id9935 . -2977) (undo-tree-id9936 . -2977) (undo-tree-id9937 . -2164) (undo-tree-id9938 . -2977) (undo-tree-id9939 . -2977) (undo-tree-id9940 . -2164) (undo-tree-id9941 . -2977) (undo-tree-id9942 . -2977) (undo-tree-id9943 . -2164) (undo-tree-id9944 . -2977) (undo-tree-id9945 . -2977) (undo-tree-id9946 . -2164) (undo-tree-id9947 . -2977) (undo-tree-id9948 . -2977) (undo-tree-id9949 . -2164) (undo-tree-id9950 . -2977) (undo-tree-id9951 . -2977) (undo-tree-id9952 . -2164) (undo-tree-id9953 . -2977) (undo-tree-id9954 . -2977) (undo-tree-id9955 . -2164) (undo-tree-id9956 . -2977) (undo-tree-id9957 . -2977) (undo-tree-id9958 . -2164) (undo-tree-id9959 . -2977) (undo-tree-id9960 . -2977) (undo-tree-id9961 . -2164) (undo-tree-id9962 . -2977) (undo-tree-id9963 . -2977) (undo-tree-id9964 . -2164) (undo-tree-id9965 . -2977) (undo-tree-id9966 . -2977) (undo-tree-id9967 . -2164) (undo-tree-id9968 . -2977) (undo-tree-id9969 . -2977) (undo-tree-id9970 . -2164) (undo-tree-id9971 . -2977) (undo-tree-id9972 . -2977) (undo-tree-id9973 . -2164) (undo-tree-id9974 . -2977) (undo-tree-id9975 . -2977) (undo-tree-id9976 . -2164) (undo-tree-id9977 . -2977) (undo-tree-id9978 . -2977) (undo-tree-id9979 . -2164) (undo-tree-id9980 . -2977) (undo-tree-id9981 . -2977) (undo-tree-id9982 . -2164) (undo-tree-id9983 . -2977) (undo-tree-id9984 . -2977) (undo-tree-id9985 . -2164) (undo-tree-id9986 . -2977) (undo-tree-id9987 . -2977) (undo-tree-id9988 . -2164) (undo-tree-id9989 . -2977) (undo-tree-id9990 . -2977) (undo-tree-id9991 . -2164) (undo-tree-id9992 . -2977) (undo-tree-id9993 . -2977) (undo-tree-id9994 . -2164) (undo-tree-id9995 . -2977) (undo-tree-id9996 . -2977) (undo-tree-id9997 . -2164) (undo-tree-id9998 . -2977) (undo-tree-id9999 . -2977) (undo-tree-id10000 . -2164) (undo-tree-id10001 . -2977) (undo-tree-id10002 . -2977) (undo-tree-id10003 . -2164) (undo-tree-id10004 . -2977) (undo-tree-id10005 . -2977) (undo-tree-id10006 . -2164) (undo-tree-id10007 . -2977) (undo-tree-id10008 . -2977) (undo-tree-id10009 . -2164) (undo-tree-id10010 . -2977) (undo-tree-id10011 . -2977) (undo-tree-id10012 . -2164) (undo-tree-id10013 . -2977) (undo-tree-id10014 . -2977) (undo-tree-id10015 . -2164) (undo-tree-id10016 . -2977) (undo-tree-id10017 . -2977) (undo-tree-id10018 . -2164) (undo-tree-id10019 . -2977) (undo-tree-id10020 . -2977) (undo-tree-id10021 . -2164) (undo-tree-id10022 . -2977) (undo-tree-id10023 . -2977) (undo-tree-id10024 . -2164) (undo-tree-id10025 . -2977) (undo-tree-id10026 . -2977) (undo-tree-id10027 . -2164) (undo-tree-id10028 . -2977) (undo-tree-id10029 . -2977) (undo-tree-id10030 . -2977) (undo-tree-id10031 . -2977) (undo-tree-id10032 . -2977) (undo-tree-id10033 . -2164) (undo-tree-id10034 . -2977) (undo-tree-id10035 . -2977) (undo-tree-id10036 . -2977) (undo-tree-id10037 . -2977) (undo-tree-id10038 . -2164) (undo-tree-id10039 . -2977) (undo-tree-id10040 . -2977) (undo-tree-id10041 . -2977) (undo-tree-id10042 . -2977) (undo-tree-id10043 . -2977) (undo-tree-id10044 . -2977) (undo-tree-id10045 . -2977) (undo-tree-id10046 . -2164) (undo-tree-id10047 . -2977) (undo-tree-id10048 . -2977) (undo-tree-id10049 . -2164) (undo-tree-id10050 . -2977) (undo-tree-id10051 . -2977) (undo-tree-id10052 . -2164) (undo-tree-id10053 . -2977) (undo-tree-id10054 . -2977) (undo-tree-id10055 . -2164) (undo-tree-id10056 . -2977) 57412) nil (25151 25876 945231 71000) 0 nil])
([nil nil ((54435 . 65775) (#("
     ;; -- *ZETTELDESK-SCRATCH* --
     ;; This is the section where it all comes together. The
     ;; zetteldesk-scratch buffer is a special buffer defined here on which
     ;; you drop all your stuff. Its what molds the whole workflow together

     (defcustom zetteldesk-map (make-sparse-keymap)
       \"This variable is the keymap for `zetteldesk-mode'.\"
       :type 'keymap
       :group 'zetteldesk)

     (defcustom zetteldesk-insert-scratch-or-current-buffer t
       \"Customization variable.
     Decides whethere zetteldesk-insert functions will insert to the
     ,*zetteldesk-scratch* buffer or the current buffer.  Default value
     is t which makes those functions insert to the scratch.  Setting
     it to nil will make those functions insert to the current buffer,
     for whichever usecase you might want\"
       :type 'string
       :group 'zetteldesk)

     (define-minor-mode zetteldesk-mode
       \"Toggles the global zetteldesk-mode.

     When turned on, this mode initialises the *zetteldesk-scratch*
     buffer, a useful part of the whole zetteldesk workflow.\"
       nil
       :global t
       :group 'zetteldesk
       :keymap zetteldesk-map
       :lighter \" zetteldesk\")

     (defun zetteldesk--create-scratch-buffer ()
       \"Create the zetteldesk-scratch buffer and put it in `org-mode'.\"
       (let ((buffer (generate-new-buffer \"*zetteldesk-scratch*\"))
	     (org-startup-with-latex-preview nil))
	 (with-current-buffer buffer
	   (org-mode))))

     (add-hook 'zetteldesk-mode-on-hook 'zetteldesk--create-scratch-buffer)

     (defun zetteldesk-switch-to-scratch-buffer (&optional arg)
       \"Open the zetteldesk-scratch buffer in a split with the current buffer.

     Optionally, if given optional argument ARG, which needs to be the
     `\\\\[universal-argument]' switch to the *zetteldesk-scratch*
     buffer without issuing a split.\"
       (interactive \"P\")
       (if (equal arg '(4))
	   (switch-to-buffer \"*zetteldesk-scratch*\")
	 (switch-to-buffer-other-window \"*zetteldesk-scratch*\")))

     (defun zetteldesk-node-insert-if-poi-or-moc ()
       \"Filter `org-roam-node-list' to show zetteldesk-nodes only.
     Then filter that to only those that have the POI or MOC tag with
     `zetteldesk-node-p' and `org-roam-node-poi-or-moc-p'.  Then
     insert a link to every one of those nodes and seperate them with
     commas\"
       (interactive)
       (let* ((init_list (org-roam-node-list))
	      (zetteldesk_nodes (cl-remove-if-not #'zetteldesk-node-p init_list))
	      (nodes_poi (cl-remove-if-not #'org-roam-node-poi-or-moc-p zetteldesk_nodes)))
	 (while nodes_poi
	   (let* ((node (car nodes_poi))
		  (description (org-roam-node-formatted (car nodes_poi))))
	     (insert (org-link-make-string
		      (concat \"id:\" (org-roam-node-id (car nodes_poi)))
		      description))
	     (insert \", \"))
	   (setq nodes_poi (cdr nodes_poi)))))

     (defmacro zetteldesk-insert-location ()
       \"Find the location the zetteldesk-insert functions should insert to.

     The decision is made depending on the variable
     `zetteldesk-insert-scratch-or-current-buffer'. Check its
     docstring for more info. This is used in all zetteldesk-insert
     functions to decide if the insertion should happen in
     ,*zetteldesk-scratch or the current buffer.\"
       `(if zetteldesk-insert-scratch-or-current-buffer
		       \"*zetteldesk-scratch*\"
		     (current-buffer)))

     (defun zetteldesk-insert-node-contents (&optional arg)
       \"Select a node that is part of the current `zetteldesk'.
     Add a link to it at point and then insert its contents to the
     bottom of the *zetteldesk-scratch* buffer after inserting a
     newline there.  Remove the first 67 characters which is the
     properties section if it only contains the ID of the node as its
     unneeded and change the string #+title to a top level heading as
     its more practical when inserting the contents of multiple files.

     If given the optional argument ARG, which needs to be the
     `\\\\[universal-argument]' also switch to the *zetteldesk-scratch*
     buffer in a split.\"
       (interactive \"P\")
       (let* ((node (org-roam-node-read nil #'zetteldesk-node-p))
	      (file (org-roam-node-file node))
	      (description (org-roam-node-formatted node))
	      (location (zetteldesk-insert-location)))
	 (insert (org-link-make-string
		  (concat \"id:\" (org-roam-node-id node))
		  description))
	 (with-current-buffer location
	   (goto-char (point-max))
	   (newline)
	   (insert-file-contents file nil 67)
	   (replace-string \"#+title: \" \"* \")))
       (when (equal arg '(4))
	 (save-current-buffer
	   (switch-to-buffer-other-window \"*zetteldesk-scratch*\"))))

     (defun zetteldesk-insert-node-contents-without-link ()
       \"\\\"Sister function\\\" of `zetteldesk-insert-node-contents'.
     Finds a node that is part of the `zetteldesk' and inserts its
     contents to the bottom of the zetteldesk-scratch buffer. This
     function differentiates itself, by the fact that it doesn't
     insert an ID link to the node in the current buffer and by the
     fact that it switches to the scratch buffer in a split without
     needing a `\\\\[universal-argument]'.

     For me, it makes sense a lot of the time to insert a link to the
     node inthe current buffer, especially if its an outlining
     buffer. But sometimes its not handy, and so, I just made this
     second iteration to fix that issue.\"
       (interactive)
       (let* ((node (org-roam-node-read nil #'zetteldesk-node-p))
	      (location (zetteldesk-insert-location))
	      (file (org-roam-node-file node)))
	 (with-current-buffer location
	   (goto-char (point-max))
	   (newline)
	   (insert-file-contents file nil 67)
	   (replace-string \"#+title: \" \"* \")))
       (switch-to-buffer-other-window \"*zetteldesk-scratch*\"))

     (defun zetteldesk-insert-org-file-contents (&optional arg)
       \"Select an org buffer that is in the `zetteldesk'.
     Insert its contents to the *zetteldesk-scratch* buffer, make its
      title a top level heading and demote all of its headings by one
      level (since the title now acts as a top level heading).  Note
      that org-roam nodes are not shown

     Optional argument ARG, if given needs to be a
     `\\\\[universal-argument]' and it switches to the *zetteldesk-scratch*
     buffer in a split\"
       (interactive \"P\")
       (let* ((buffer (set-buffer (read-buffer \"Zetteldesk Buffers: \" nil nil #'zetteldesk-org-buffer-p)))
	      (location (zetteldesk-insert-location))
	      (file (buffer-file-name buffer)))
	 (set-buffer location)
	 (goto-char (point-max))
	 (save-excursion
	   (newline)
	   (insert-file-contents file))
	 (save-excursion
	   (while (not (org-next-visible-heading 1))
	     (org-metaright)))
	 (replace-string \"#+title: \" \"* \"))
       (when (equal arg '(4))
	 (switch-to-buffer-other-window \"*zetteldesk-scratch*\")))

     (defun zetteldesk-insert-link-to-pdf (&optional arg)
       \"Select a pdf file that is part of the `zetteldesk'.
     Prompt for a page in that pdf (defaults to page 1 if you don't
     care about the page).

     Then, in the zetteldesk-scratch buffer, insert at `point-max' a
     newline and then a new heading with its name consisting of the
     string \\\"Supportive Material - \\\" then the pdfs name, without the
     file structure or the extension and then the string
     \\\"(PDF)\\\".  Then, insert a newline, the string \\\"Link to PDF: \\\"
     and then a link to the chosen pdf, in the correct page, with the
     description being the pdfs name without the file structure or the
     extension.  Note that `org-pdftools-setup-link' needs to be run
     for pdf links to work (which this uses).

     Optionally, if given optional argument ARG which is the
     `\\\\[universal-argument]' save the highlighted region in a
     variable and insert it after the heading but before the pdf link.
     This functionality serves the purpose of adding a \\\"description\\\"
     sort of thing to the pdf. Typically, when citing a pdf as
     supplementary info to an argument, there is something specific
     you want to take from the pdf. Therefore, this optional addition,
     adds that to the scratch buffer so you remember why it was
     useful.\"
       (interactive \"P\")
       (let* ((pdf-buffer (set-buffer (read-buffer \"Zetteldesk Pdfs: \" nil nil #'zetteldesk-pdf-p)))
	      (file (buffer-file-name pdf-buffer))
	      (location (zetteldesk-insert-location))
	      (page (read-from-minibuffer \"Page: \" \"1\"))
	      (description (file-name-nondirectory (file-name-sans-extension file))))
	 (with-current-buffer location
	   (goto-char (point-max))
	   (newline)
	   (org-insert-heading)
	   (insert \"Supportive Material - \" description \" (PDF)\")
	   (newline)
	   (when (equal arg '(4))
	     (let ((contents (buffer-substring (mark) (point))))
	       (insert contents)
	       (newline)))
	   (insert \"Link to PDF: \"
		   (org-link-make-string
		    (concat \"pdf:\" file \"::\" page)
		    description)))))

     (defun zetteldesk-insert-info-contents (&optional arg)
       \"Select an info node that is part of the current `zetteldesk'.
     Uses a `completing-read' prompt for the selection.

     Then, in the *zetteldesk-scratch* buffer, go to the end of the
     buffer, insert a newline and a heading of the form \\\"Supportive
     Material - \\\" the node's name \\\"(Info)\\\" akin to what is done in
     `zetteldesk-insert-link-to-pdf'.  Then, insert the contents of the
     chosen info node, removing the first 2 lines which have the
     contextual links of the buffer, as they are not functional
     outside of the info buffer.  Also insert a link with the title
     \\\"See this node in its context\\\" which opens the node inside the
     info program. Finally, restore the buffer from which this
     function was called. Ideally, this wouldn't require a
     switch-to-buffer statement, but the function `Info-goto-node'
     used for this function switches the visible buffer to the info
     node and I couldn't find an alternative that only makes it
     current for editing operations, but doesn't change the visible
     buffer to it.

     I find the link to the actual info buffer is useful as a lot of
     the time, you might want to insert the buffer so you can store it
     with other useful information inside the zetteldesk-scratch
     buffer, but then, you are interested in looking into the other
     nodes of the manual you were reading.

     Optional argument ARG which is a `\\\\[universal-argument]' switch to the
     zetteldesk-scratch buffer in a split.\"
       (interactive \"P\")
       (let ((info_node (completing-read \"Nodes: \" zetteldesk-info-nodes))
	     (location (zetteldesk-insert-location))
	     (buffer (current-buffer)))
	 (Info-goto-node info_node)
	 (with-current-buffer location
	   (goto-char (point-max))
	   (newline)
	   (org-insert-heading)
	   (insert \"Supportive Material - \" info_node \" (Info)\")
	   (newline)
	   (save-excursion (insert-buffer-substring \"*info*\")
			   (insert
			    (org-link-make-string
			     (concat \"elisp:(Info-goto-node \\\"\" info_node \"\\\")\")
			     \"See this node in its context\")))
	   (kill-whole-line 2))
	 (switch-to-buffer buffer)
	 (when (equal arg '(4))
	   (switch-to-buffer-other-window \"*zetteldesk-scratch*\"))))

" 0 6 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6 9 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 9 12 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 12 13 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-comment-face org-block)) 13 31 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-comment-face org-block)) 31 32 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-comment-face org-block)) 32 36 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 36 41 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 41 44 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 44 97 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 97 102 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 102 105 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 105 173 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 173 178 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 178 181 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 181 249 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 249 256 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 256 265 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 265 266 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 266 280 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 280 309 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 309 343 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 343 358 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 358 361 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 361 369 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 369 374 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 374 390 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 390 396 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 396 417 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 417 426 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 426 427 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 427 470 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 470 480 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 480 500 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 500 829 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 829 837 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 837 842 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 842 858 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 858 864 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 864 885 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 885 902 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 902 903 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 903 918 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 918 926 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 926 1011 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1011 1012 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 1012 1030 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 1030 1031 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 1031 1093 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1093 1112 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1112 1119 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1119 1129 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1129 1135 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1135 1155 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1155 1162 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1162 1185 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1185 1193 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1193 1194 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1194 1207 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1207 1216 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1216 1221 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1221 1222 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1222 1255 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 1255 1266 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1266 1319 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1319 1327 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1327 1330 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1330 1339 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1339 1342 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1342 1373 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1373 1374 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1374 1375 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 1375 1393 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 1393 1394 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 1394 1395 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1395 1445 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1445 1464 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1464 1574 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1574 1579 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1579 1580 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1580 1615 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 1615 1617 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1617 1626 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 1626 1639 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1639 1792 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1792 1810 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1810 1827 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1827 1828 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 1828 1846 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 1846 1847 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 1847 1885 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1885 1894 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1894 1905 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1905 1906 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1906 1909 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1909 1919 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1919 1921 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1921 1961 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1961 1962 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1962 1963 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 1963 1981 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 1981 1982 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 1982 1983 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1983 2018 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2018 2019 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2019 2020 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 2020 2038 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 2038 2039 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 2039 2040 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2040 2051 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2051 2056 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2056 2057 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2057 2093 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 2093 2104 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2104 2113 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2113 2131 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2131 2240 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2240 2257 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2257 2264 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2264 2290 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2290 2381 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2381 2390 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2390 2401 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2401 2411 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2411 2415 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2415 2613 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2613 2618 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2618 2634 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2634 2638 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2638 2776 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2776 2781 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2781 2854 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2854 2858 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2858 2866 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2866 2870 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2870 2908 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2908 2916 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2916 2917 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2917 2943 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 2943 2954 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2954 3082 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3082 3125 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3125 3314 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3314 3324 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3324 3326 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3326 3380 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3380 3381 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 3381 3382 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 3382 3400 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 3400 3401 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 3401 3402 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 3402 3436 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3436 3441 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3441 3442 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3442 3473 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 3473 3475 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3475 3484 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 3484 3497 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3497 3541 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3541 3551 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3551 3640 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3640 3641 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 3641 3659 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 3659 3660 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 3660 4035 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4035 4053 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4053 4075 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4075 4076 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 4076 4094 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 4094 4095 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 4095 4120 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4120 4129 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4129 4140 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4140 4141 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4141 4144 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 4144 4154 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4154 4158 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4158 4322 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4322 4348 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4348 4396 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4396 4401 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 4401 4448 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4448 4467 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4467 4578 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4578 4589 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 4589 4590 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4590 4594 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 4594 4606 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4606 4610 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4610 4631 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4631 4650 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4650 4686 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4686 4687 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 4687 4688 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 4688 4706 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 4706 4707 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 4707 4708 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 4708 4720 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4720 4725 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4725 4726 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4726 4770 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 4770 4781 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4781 4806 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4806 4837 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4837 4879 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4879 4889 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4889 5194 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5194 5212 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 5212 5458 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5458 5467 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5467 5478 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5478 5488 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5488 5492 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5492 5564 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5564 5590 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5590 5637 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5637 5656 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5656 5767 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5767 5778 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5778 5779 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5779 5783 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5783 5825 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5825 5826 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5826 5827 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 5827 5845 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 5845 5846 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 5846 5847 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5847 5857 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5857 5862 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5862 5863 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5863 5898 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 5898 5900 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5900 5909 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 5909 5922 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5922 5960 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5960 5970 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 5970 6005 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6005 6006 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 6006 6024 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 6024 6025 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 6025 6283 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6283 6301 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 6301 6327 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6327 6328 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 6328 6346 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 6346 6347 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 6347 6371 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6371 6380 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6380 6391 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6391 6392 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6392 6395 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6395 6405 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6405 6409 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6409 6444 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6444 6466 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6466 6522 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6522 6548 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6548 6645 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6645 6659 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6659 6710 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6710 6724 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6724 6730 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6730 6735 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6735 6813 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6813 6824 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6824 6825 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6825 6829 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6829 6840 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6840 6844 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6844 6895 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6895 6896 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6896 6897 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 6897 6915 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 6915 6916 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 6916 6917 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6917 6928 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6928 6933 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6933 6934 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6934 6963 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 6963 6965 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6965 6974 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 6974 6987 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6987 7027 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7027 7037 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 7037 7133 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7133 7134 (fontified t font-lock-fontified t help-echo "Hidden behind deeper element; move to another line?" src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7134 7192 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7192 7201 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 7201 7640 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7640 7663 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 7663 7798 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7798 7816 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 7816 8273 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 8273 8282 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8282 8293 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8293 8294 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8294 8297 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8297 8307 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8307 8311 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8311 8350 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8350 8369 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8369 8462 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8462 8488 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8488 8526 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8526 8534 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8534 8535 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8535 8538 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8538 8623 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8623 8642 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8642 8731 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8731 8755 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8755 8768 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8768 8776 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8776 8797 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8797 8801 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8801 8826 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8826 8829 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8829 8935 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8935 8950 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8950 8992 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8992 8998 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8998 9004 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9004 9008 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 9008 9045 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9045 9050 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 9050 9051 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9051 9082 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 9082 9084 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9084 9093 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 9093 9106 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9106 9156 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 9156 9166 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 9166 9182 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 9182 9197 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 9197 9244 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 9244 9245 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 9245 9263 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 9263 9264 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 9264 9439 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 9439 9468 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 9468 9945 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 9945 9959 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 9959 10540 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 10540 10558 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 10558 10618 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 10618 10627 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10627 10638 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 10638 10639 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10639 10642 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 10642 10652 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10652 10655 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 10655 10685 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10685 10694 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 10694 10736 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10736 10762 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 10762 10830 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10830 10849 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 10849 10938 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10938 10962 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 10962 10973 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10973 10982 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 10982 11003 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11003 11017 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 11017 11043 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11043 11044 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 11044 11045 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 11045 11049 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 11049 11050 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 11050 11051 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 11051 11112 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11112 11138 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 11138 11149 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11149 11154 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 11154 11164 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11164 11194 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 11194 11254 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11254 11258 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 11258 11311 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11311 11312 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 11312 11313 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 11313 11331 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 11331 11332 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 11332 11333 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 11333 11339 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 54435) (undo-tree-id12248 . -3312) (undo-tree-id12249 . -3968) (undo-tree-id12250 . 7220) (undo-tree-id12251 . -3968) (undo-tree-id12252 . -4118) (undo-tree-id12253 . -6043) (undo-tree-id12254 . -6830) (undo-tree-id12255 . -3312) (undo-tree-id12256 . -3312) (undo-tree-id12257 . -2382) (undo-tree-id12258 . -5708) (undo-tree-id12259 . -6921) (undo-tree-id12260 . -5216) (undo-tree-id12261 . -5216) (undo-tree-id12262 . -3429) (undo-tree-id12263 . -5708) (undo-tree-id12264 . -5708) (undo-tree-id12265 . -5708) (undo-tree-id12266 . -5708) (undo-tree-id12267 . -5708) (undo-tree-id12268 . -5708) (undo-tree-id12269 . -5708) (undo-tree-id12270 . -5708) (undo-tree-id12271 . -5708) (undo-tree-id12272 . -5708) (undo-tree-id12273 . -5708) (undo-tree-id12274 . -5708) (undo-tree-id12275 . -5708) (undo-tree-id12276 . -5708) (undo-tree-id12277 . -5708) (undo-tree-id12278 . -5708) (undo-tree-id12279 . -5708) (undo-tree-id12280 . -5708) (undo-tree-id12281 . -5708) (undo-tree-id12282 . -5708) (undo-tree-id12283 . -5708) (undo-tree-id12284 . -5708) (undo-tree-id12285 . -5708) (undo-tree-id12286 . -5708) (undo-tree-id12287 . -5708) (undo-tree-id12288 . -5708) (undo-tree-id12289 . -5708) (undo-tree-id12290 . -5708) (undo-tree-id12291 . -5708) (undo-tree-id12292 . -5708) (undo-tree-id12293 . -5708) (undo-tree-id12294 . -5708) (undo-tree-id12295 . -5708) (undo-tree-id12296 . -5708) (undo-tree-id12297 . -5708) (undo-tree-id12298 . -5708) (undo-tree-id12299 . -6921) (undo-tree-id12300 . -6921) (undo-tree-id12301 . -5708) (undo-tree-id12302 . -7727) (undo-tree-id12303 . -7727) (undo-tree-id12304 . -5973) (undo-tree-id12305 . -11212) (undo-tree-id12306 . -11212) (undo-tree-id12307 . -9634) (undo-tree-id12308 . -11212) (undo-tree-id12309 . -11212) (undo-tree-id12310 . -9634) (undo-tree-id12311 . -11212) (undo-tree-id12312 . -11212) (undo-tree-id12313 . -9634) (undo-tree-id12314 . -11212) (undo-tree-id12315 . -11212) (undo-tree-id12316 . -9634) (undo-tree-id12317 . -11212) (undo-tree-id12318 . -11212) (undo-tree-id12319 . -10644) (undo-tree-id12320 . -10644) (undo-tree-id12321 . -11212) (undo-tree-id12322 . -6830) (undo-tree-id12323 . -6830) (undo-tree-id12324 . -6043) (undo-tree-id12325 . -4354) (undo-tree-id12326 . -4354) (undo-tree-id12327 . -3315) (undo-tree-id12328 . -4354) (undo-tree-id12329 . -4354) (undo-tree-id12330 . -3315) (undo-tree-id12331 . -3315) (undo-tree-id12332 . -4354) (undo-tree-id12333 . -4354) (undo-tree-id12334 . -4354) (undo-tree-id12335 . -3315) (undo-tree-id12336 . -4354) (undo-tree-id12337 . -4354) (undo-tree-id12338 . -3315) (undo-tree-id12339 . -4354) (undo-tree-id12340 . -1122) (undo-tree-id12341 . -1122) (undo-tree-id12342 . -878) (undo-tree-id12343 . -1122) (undo-tree-id12344 . -1122) (undo-tree-id12345 . -878) (undo-tree-id12346 . -1032) (undo-tree-id12347 . -1122) (undo-tree-id12348 . -1122) (undo-tree-id12349 . -1122) (undo-tree-id12350 . -878) (undo-tree-id12351 . -1122) (undo-tree-id12352 . -1122) (undo-tree-id12353 . -878) (undo-tree-id12354 . -1122) (undo-tree-id12355 . -1122) (undo-tree-id12356 . -878) (undo-tree-id12357 . -1122) (undo-tree-id12358 . -1122) (undo-tree-id12359 . -878) (undo-tree-id12360 . -1122) (undo-tree-id12361 . -1122) (undo-tree-id12362 . -878) (undo-tree-id12363 . -1122) (undo-tree-id12364 . -1122) (undo-tree-id12365 . -878) (undo-tree-id12366 . -1122) (undo-tree-id12367 . -1122) (undo-tree-id12368 . -1032) (undo-tree-id12369 . -1122) (undo-tree-id12370 . -1122) (undo-tree-id12371 . -1032) (undo-tree-id12372 . -1122) (undo-tree-id12373 . -1122) (undo-tree-id12374 . -1032) (undo-tree-id12375 . -1122) (undo-tree-id12376 . -1122) (undo-tree-id12377 . -1032) (undo-tree-id12378 . -1122) (undo-tree-id12379 . -1122) (undo-tree-id12380 . -1032) (undo-tree-id12381 . -1122) (undo-tree-id12382 . -1122) (undo-tree-id12383 . -1032) (undo-tree-id12384 . -1122) (undo-tree-id12385 . -1122) (undo-tree-id12386 . -1032) (undo-tree-id12387 . -1122) (undo-tree-id12388 . -1122) (undo-tree-id12389 . -1032) (undo-tree-id12390 . -1122) (undo-tree-id12391 . -1122) (undo-tree-id12392 . -1032) (undo-tree-id12393 . -1122) (undo-tree-id12394 . -1122) (undo-tree-id12395 . -1032) (undo-tree-id12396 . -1122) (undo-tree-id12397 . -1122) (undo-tree-id12398 . -1032) (undo-tree-id12399 . -1122) (undo-tree-id12400 . -1122) (undo-tree-id12401 . -1032) (undo-tree-id12402 . -1122) (undo-tree-id12403 . -1122) (undo-tree-id12404 . -1032) (undo-tree-id12405 . -1122) (undo-tree-id12406 . -1032) (undo-tree-id12407 . -1122) (undo-tree-id12408 . -3312) (undo-tree-id12409 . -3312) (undo-tree-id12410 . -1985) (undo-tree-id12411 . -1122) (undo-tree-id12412 . -1122) (undo-tree-id12413 . -1032) (undo-tree-id12414 . -3312) (undo-tree-id12415 . -3312) (undo-tree-id12416 . -1985) 57747 (t 25151 25877 5296 694000)) nil (25151 36726 230998 716000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 57864)) nil (25151 36726 230805 43000) 0 nil])
([nil nil ((54435 . 66245) (#("
     ;; -- *ZETTELDESK-SCRATCH* --
     ;; This is the section where it all comes together. The
     ;; zetteldesk-scratch buffer is a special buffer defined here on which
     ;; you drop all your stuff. Its what molds the whole workflow together

     (defcustom zetteldesk-map (make-sparse-keymap)
       \"This variable is the keymap for `zetteldesk-mode'.\"
       :type 'keymap
       :group 'zetteldesk)

     (defcustom zetteldesk-insert-scratch-or-current-buffer t
       \"Customization variable.
     Decides whethere zetteldesk-insert functions will insert to the
     ,*zetteldesk-scratch* buffer or the current buffer.  Default value
     is t which makes those functions insert to the scratch.  Setting
     it to nil will make those functions insert to the current buffer,
     for whichever usecase you might want\"
       :type 'string
       :group 'zetteldesk)

     (define-minor-mode zetteldesk-mode
       \"Toggles the global zetteldesk-mode.

     When turned on, this mode initialises the *zetteldesk-scratch*
     buffer, a useful part of the whole zetteldesk workflow.\"
       nil
       :global t
       :group 'zetteldesk
       :keymap zetteldesk-map
       :lighter \" zetteldesk\")

     (defun zetteldesk--create-scratch-buffer ()
       \"Create the zetteldesk-scratch buffer and put it in `org-mode'.\"
       (let ((buffer (generate-new-buffer \"*zetteldesk-scratch*\"))
	     (org-startup-with-latex-preview nil))
	 (with-current-buffer buffer
	   (org-mode))))

     (add-hook 'zetteldesk-mode-on-hook 'zetteldesk--create-scratch-buffer)

     (defmacro zetteldesk-insert-location ()
       \"Find the location the zetteldesk-insert functions should insert to.

     The decision is made depending on the variable
     `zetteldesk-insert-scratch-or-current-buffer'. Check its
     docstring for more info. This is used in all zetteldesk-insert
     functions to decide if the insertion should happen in
     ,*zetteldesk-scratch or the current buffer.\"
       `(if zetteldesk-insert-scratch-or-current-buffer
		       \"*zetteldesk-scratch*\"
		     (current-buffer)))

     (defun zetteldesk-switch-to-scratch-buffer (&optional arg)
       \"Open the zetteldesk-scratch buffer in a split with the current buffer.

     Optionally, if given optional argument ARG, which needs to be the
     `\\\\[universal-argument]' switch to the *zetteldesk-scratch*
     buffer without issuing a split.\"
       (interactive \"P\")
       (if (equal arg '(4))
	   (switch-to-buffer \"*zetteldesk-scratch*\")
	 (switch-to-buffer-other-window \"*zetteldesk-scratch*\")))

     (defun zetteldesk-node-insert-if-poi-or-moc ()
       \"Filter `org-roam-node-list' to show zetteldesk-nodes only.
     Then filter that to only those that have the POI or MOC tag with
     `zetteldesk-node-p' and `org-roam-node-poi-or-moc-p'.  Then
     insert a link to every one of those nodes and seperate them with
     commas\"
       (interactive)
       (let* ((init_list (org-roam-node-list))
	      (zetteldesk_nodes (cl-remove-if-not #'zetteldesk-node-p init_list))
	      (nodes_poi (cl-remove-if-not #'org-roam-node-poi-or-moc-p zetteldesk_nodes)))
	 (while nodes_poi
	   (let* ((node (car nodes_poi))
		  (description (org-roam-node-formatted (car nodes_poi))))
	     (insert (org-link-make-string
		      (concat \"id:\" (org-roam-node-id (car nodes_poi)))
		      description))
	     (insert \", \"))
	   (setq nodes_poi (cdr nodes_poi)))))

     (defun zetteldesk-insert-node-contents (&optional arg)
       \"Select a node that is part of the current `zetteldesk'.
     Add a link to it at point and then insert its contents to the
     bottom of the *zetteldesk-scratch* buffer after inserting a
     newline there.  Remove the first 67 characters which is the
     properties section if it only contains the ID of the node as its
     unneeded and change the string #+title to a top level heading as
     its more practical when inserting the contents of multiple files.

     If given the optional argument ARG, which needs to be the
     `\\\\[universal-argument]' also switch to the *zetteldesk-scratch*
     buffer in a split.\"
       (interactive \"P\")
       (let* ((node (org-roam-node-read nil #'zetteldesk-node-p))
	      (file (org-roam-node-file node))
	      (description (org-roam-node-formatted node))
	      (location (zetteldesk-insert-location)))
	 (insert (org-link-make-string
		  (concat \"id:\" (org-roam-node-id node))
		  description))
	 (with-current-buffer location
	   (goto-char (point-max))
	   (newline)
	   (insert-file-contents file nil 67)
	   (replace-string \"#+title: \" \"* \")))
       (when (equal arg '(4))
	 (save-current-buffer
	   (switch-to-buffer-other-window \"*zetteldesk-scratch*\"))))

     (defun zetteldesk-insert-node-contents-without-link ()
       \"\\\"Sister function\\\" of `zetteldesk-insert-node-contents'.
     Finds a node that is part of the `zetteldesk' and inserts its
     contents to the bottom of the zetteldesk-scratch buffer. This
     function differentiates itself, by the fact that it doesn't
     insert an ID link to the node in the current buffer and by the
     fact that it switches to the scratch buffer in a split without
     needing a `\\\\[universal-argument]'.

     For me, it makes sense a lot of the time to insert a link to the
     node inthe current buffer, especially if its an outlining
     buffer. But sometimes its not handy, and so, I just made this
     second iteration to fix that issue.\"
       (interactive)
       (let* ((node (org-roam-node-read nil #'zetteldesk-node-p))
	      (location (zetteldesk-insert-location))
	      (file (org-roam-node-file node)))
	 (with-current-buffer location
	   (goto-char (point-max))
	   (newline)
	   (insert-file-contents file nil 67)
	   (replace-string \"#+title: \" \"* \")))
       (switch-to-buffer-other-window \"*zetteldesk-scratch*\"))

     (defun zetteldesk-insert-org-file-contents (&optional arg)
       \"Select an org buffer that is in the `zetteldesk'.
     Insert its contents to the *zetteldesk-scratch* buffer, make its
      title a top level heading and demote all of its headings by one
      level (since the title now acts as a top level heading).  Note
      that org-roam nodes are not shown

     Optional argument ARG, if given needs to be a
     `\\\\[universal-argument]' and it switches to the *zetteldesk-scratch*
     buffer in a split\"
       (interactive \"P\")
       (let* ((buffer (set-buffer (read-buffer \"Zetteldesk Buffers: \" nil nil #'zetteldesk-org-buffer-p)))
	      (location (zetteldesk-insert-location))
	      (file (buffer-file-name buffer)))
	 (set-buffer location)
	 (goto-char (point-max))
	 (save-excursion
	   (newline)
	   (insert-file-contents file))
	 (save-excursion
	   (while (not (org-next-visible-heading 1))
	     (org-metaright)))
	 (replace-string \"#+title: \" \"* \"))
       (when (equal arg '(4))
	 (switch-to-buffer-other-window \"*zetteldesk-scratch*\")))

     (defun zetteldesk-insert-link-to-pdf (&optional arg)
       \"Select a pdf file that is part of the `zetteldesk'.
     Prompt for a page in that pdf (defaults to page 1 if you don't
     care about the page).

     Then, in the zetteldesk-scratch buffer, insert at `point-max' a
     newline and then a new heading with its name consisting of the
     string \\\"Supportive Material - \\\" then the pdfs name, without the
     file structure or the extension and then the string
     \\\"(PDF)\\\".  Then, insert a newline, the string \\\"Link to PDF: \\\"
     and then a link to the chosen pdf, in the correct page, with the
     description being the pdfs name without the file structure or the
     extension.  Note that `org-pdftools-setup-link' needs to be run
     for pdf links to work (which this uses).

     Optionally, if given optional argument ARG which is the
     `\\\\[universal-argument]' save the highlighted region in a
     variable and insert it after the heading but before the pdf link.
     This functionality serves the purpose of adding a \\\"description\\\"
     sort of thing to the pdf. Typically, when citing a pdf as
     supplementary info to an argument, there is something specific
     you want to take from the pdf. Therefore, this optional addition,
     adds that to the scratch buffer so you remember why it was
     useful.\"
       (interactive \"P\")
       (let* ((pdf-buffer (set-buffer (read-buffer \"Zetteldesk Pdfs: \" nil nil #'zetteldesk-pdf-p)))
	      (file (buffer-file-name pdf-buffer))
	      (location (zetteldesk-insert-location))
	      (page (read-from-minibuffer \"Page: \" \"1\"))
	      (description (file-name-nondirectory (file-name-sans-extension file))))
	 (with-current-buffer location
	   (goto-char (point-max))
	   (newline)
	   (org-insert-heading)
	   (insert \"Supportive Material - \" description \" (PDF)\")
	   (newline)
	   (when (equal arg '(4))
	     (let ((contents (buffer-substring (mark) (point))))
	       (insert contents)
	       (newline)))
	   (insert \"Link to PDF: \"
		   (org-link-make-string
		    (concat \"pdf:\" file \"::\" page)
		    description)))))

     (defun zetteldesk-insert-info-contents (&optional arg)
       \"Select an info node that is part of the current `zetteldesk'.
     Uses a `completing-read' prompt for the selection.

     Then, in the *zetteldesk-scratch* buffer, go to the end of the
     buffer, insert a newline and a heading of the form \\\"Supportive
     Material - \\\" the node's name \\\"(Info)\\\" akin to what is done in
     `zetteldesk-insert-link-to-pdf'.  Then, insert the contents of the
     chosen info node, removing the first 2 lines which have the
     contextual links of the buffer, as they are not functional
     outside of the info buffer.  Also insert a link with the title
     \\\"See this node in its context\\\" which opens the node inside the
     info program. Finally, restore the buffer from which this
     function was called. Ideally, this wouldn't require a
     switch-to-buffer statement, but the function `Info-goto-node'
     used for this function switches the visible buffer to the info
     node and I couldn't find an alternative that only makes it
     current for editing operations, but doesn't change the visible
     buffer to it.

     I find the link to the actual info buffer is useful as a lot of
     the time, you might want to insert the buffer so you can store it
     with other useful information inside the zetteldesk-scratch
     buffer, but then, you are interested in looking into the other
     nodes of the manual you were reading.

     Optional argument ARG which is a `\\\\[universal-argument]' switch to the
     zetteldesk-scratch buffer in a split.\"
       (interactive \"P\")
       (let ((info_node (completing-read \"Nodes: \" zetteldesk-info-nodes))
	     (location (zetteldesk-insert-location))
	     (buffer (current-buffer)))
	 (Info-goto-node info_node)
	 (with-current-buffer location
	   (goto-char (point-max))
	   (newline)
	   (org-insert-heading)
	   (insert \"Supportive Material - \" info_node \" (Info)\")
	   (newline)
	   (save-excursion (insert-buffer-substring \"*info*\")
			   (insert
			    (org-link-make-string
			     (concat \"elisp:(Info-goto-node \\\"\" info_node \"\\\")\")
			     \"See this node in its context\")))
	   (kill-whole-line 2))
	 (switch-to-buffer buffer)
	 (when (equal arg '(4))
	   (switch-to-buffer-other-window \"*zetteldesk-scratch*\"))))

" 0 6 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6 9 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 9 12 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 12 13 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-comment-face org-block)) 13 31 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-comment-face org-block)) 31 32 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-comment-face org-block)) 32 36 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 36 41 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 41 44 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 44 97 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 97 102 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 102 105 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 105 173 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 173 178 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 178 181 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 181 249 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 249 256 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 256 265 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 265 266 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 266 280 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 280 309 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 309 343 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 343 358 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 358 361 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 361 369 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 369 374 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 374 390 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 390 396 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 396 417 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 417 426 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 426 427 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 427 470 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 470 480 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 480 500 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 500 829 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 829 837 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 837 842 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 842 858 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 858 864 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 864 885 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 885 902 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 902 903 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 903 918 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 918 926 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 926 1011 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1011 1012 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 1012 1030 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 1030 1031 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 1031 1093 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1093 1112 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1112 1119 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1119 1129 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1129 1135 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1135 1155 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1155 1162 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1162 1185 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1185 1193 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1193 1194 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1194 1207 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1207 1216 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1216 1221 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1221 1222 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1222 1255 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 1255 1266 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1266 1319 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1319 1327 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1327 1330 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1330 1339 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1339 1342 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1342 1373 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1373 1374 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1374 1375 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 1375 1393 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 1393 1394 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 1394 1395 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1395 1445 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1445 1464 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1464 1574 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1574 1582 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1582 1583 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1583 1609 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 1609 1620 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1620 1748 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1748 1791 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1791 1980 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1980 1990 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1990 1992 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1992 2046 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2046 2047 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2047 2048 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 2048 2066 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 2066 2067 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 2067 2068 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2068 2102 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2102 2107 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2107 2108 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2108 2143 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 2143 2145 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2145 2154 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 2154 2167 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2167 2320 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2320 2338 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2338 2355 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2355 2356 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 2356 2374 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 2374 2375 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 2375 2413 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2413 2422 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2422 2433 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2433 2434 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2434 2437 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2437 2447 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2447 2449 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2449 2489 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2489 2490 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2490 2491 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 2491 2509 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 2509 2510 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 2510 2511 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2511 2546 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2546 2547 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2547 2548 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 2548 2566 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 2566 2567 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 2567 2568 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2568 2579 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2579 2584 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2584 2585 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2585 2621 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 2621 2632 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2632 2641 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2641 2659 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2659 2768 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2768 2785 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2785 2792 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2792 2818 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2818 2909 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2909 2918 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2918 2929 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2929 2939 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2939 2943 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2943 3141 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3141 3146 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3146 3162 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3162 3166 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3166 3191 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3191 3304 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3304 3309 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 3309 3382 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3382 3386 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 3386 3394 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3394 3398 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3398 3436 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3436 3441 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3441 3442 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3442 3473 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 3473 3475 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3475 3484 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 3484 3497 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3497 3541 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3541 3551 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3551 3640 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3640 3641 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 3641 3659 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 3659 3660 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 3660 3691 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3691 4035 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4035 4053 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4053 4075 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4075 4076 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 4076 4094 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 4094 4095 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 4095 4120 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4120 4129 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4129 4140 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4140 4141 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4141 4144 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 4144 4154 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4154 4158 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4158 4322 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4322 4348 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4348 4396 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4396 4401 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 4401 4448 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4448 4467 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4467 4578 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4578 4589 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 4589 4590 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4590 4594 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 4594 4606 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4606 4610 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4610 4631 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4631 4650 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4650 4686 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4686 4687 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 4687 4688 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 4688 4706 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 4706 4707 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 4707 4708 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 4708 4720 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4720 4725 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4725 4726 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4726 4770 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 4770 4781 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4781 4806 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4806 4837 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4837 4879 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4879 4889 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4889 5194 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5194 5212 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 5212 5458 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5458 5467 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5467 5478 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5478 5488 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5488 5492 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5492 5564 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5564 5590 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5590 5637 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5637 5656 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5656 5767 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5767 5778 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5778 5779 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5779 5783 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5783 5825 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5825 5826 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5826 5827 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 5827 5845 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 5845 5846 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 5846 5847 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5847 5857 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5857 5862 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5862 5863 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5863 5898 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 5898 5900 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5900 5909 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 5909 5922 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5922 5960 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5960 5970 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 5970 6005 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6005 6006 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 6006 6024 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 6024 6025 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 6025 6283 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6283 6301 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 6301 6327 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6327 6328 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 6328 6346 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 6346 6347 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 6347 6371 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6371 6380 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6380 6391 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6391 6392 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6392 6395 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6395 6405 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6405 6409 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6409 6444 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6444 6466 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6466 6522 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6522 6548 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6548 6645 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6645 6659 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6659 6710 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6710 6724 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6724 6730 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6730 6735 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6735 6813 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6813 6824 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6824 6825 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6825 6829 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6829 6840 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6840 6844 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6844 6895 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6895 6896 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6896 6897 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 6897 6915 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 6915 6916 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 6916 6917 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6917 6928 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6928 6933 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6933 6934 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6934 6963 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 6963 6965 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6965 6974 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 6974 6987 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6987 7027 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7027 7037 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 7037 7133 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7133 7134 (fontified t font-lock-fontified t help-echo "Hidden behind deeper element; move to another line?" src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7134 7192 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7192 7201 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 7201 7640 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7640 7663 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 7663 7798 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7798 7816 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 7816 8273 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 8273 8282 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8282 8293 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8293 8294 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8294 8297 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8297 8307 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8307 8311 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8311 8350 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8350 8369 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8369 8462 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8462 8488 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8488 8526 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8526 8534 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8534 8535 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8535 8538 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8538 8623 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8623 8642 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8642 8731 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8731 8755 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8755 8768 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8768 8776 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8776 8797 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8797 8801 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8801 8826 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8826 8829 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8829 8935 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8935 8950 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8950 8992 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8992 8998 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8998 9004 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9004 9008 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 9008 9045 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9045 9050 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 9050 9051 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9051 9082 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 9082 9084 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9084 9093 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 9093 9106 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9106 9156 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 9156 9166 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 9166 9182 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 9182 9197 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 9197 9244 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 9244 9245 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 9245 9263 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 9263 9264 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 9264 9439 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 9439 9468 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 9468 9945 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 9945 9959 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 9959 10540 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 10540 10558 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 10558 10618 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 10618 10627 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10627 10638 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 10638 10639 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10639 10642 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 10642 10652 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10652 10655 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 10655 10685 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10685 10694 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 10694 10736 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10736 10762 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 10762 10830 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10830 10849 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 10849 10938 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10938 10962 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 10962 10973 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10973 10982 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 10982 11003 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11003 11017 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 11017 11043 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11043 11044 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 11044 11045 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 11045 11049 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 11049 11050 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 11050 11051 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 11051 11112 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11112 11138 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 11138 11149 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11149 11154 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 11154 11164 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11164 11194 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 11194 11254 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11254 11258 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 11258 11311 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11311 11312 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 11312 11313 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 11313 11331 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 11331 11332 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 11332 11333 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 11333 11339 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 54435) (undo-tree-id10062 . -2095) (undo-tree-id10063 . -2095) (undo-tree-id10064 . 9243) (undo-tree-id10065 . -2095) (undo-tree-id10066 . -2095) (undo-tree-id10067 . -1210) (undo-tree-id10068 . -2095) (undo-tree-id10069 . -2095) (undo-tree-id10070 . -2095) (undo-tree-id10071 . -2095) (undo-tree-id10072 . -1210) (undo-tree-id10073 . -2095) (undo-tree-id10074 . -2095) (undo-tree-id10075 . -1210) (undo-tree-id10076 . -2095) (undo-tree-id10077 . -2095) (undo-tree-id10078 . -1210) (undo-tree-id10079 . -2095) (undo-tree-id10080 . -2095) (undo-tree-id10081 . -1210) (undo-tree-id10082 . -2095) (undo-tree-id10083 . -2095) (undo-tree-id10084 . -1210) (undo-tree-id10085 . -2095) (undo-tree-id10086 . -2095) (undo-tree-id10087 . -1210) (undo-tree-id10088 . -2095) (undo-tree-id10089 . -2095) (undo-tree-id10090 . -1210) (undo-tree-id10091 . -2095) (undo-tree-id10092 . -2095) (undo-tree-id10093 . -1210) (undo-tree-id10094 . -2095) (undo-tree-id10095 . -2095) (undo-tree-id10096 . -1210) (undo-tree-id10097 . -2095) (undo-tree-id10098 . -2095) (undo-tree-id10099 . -1210) (undo-tree-id10100 . -2095) (undo-tree-id10101 . -2095) (undo-tree-id10102 . -1210) (undo-tree-id10103 . -2095) (undo-tree-id10104 . -2095) (undo-tree-id10105 . -1210) (undo-tree-id10106 . -2095) (undo-tree-id10107 . -2095) (undo-tree-id10108 . -1210) (undo-tree-id10109 . -2095) (undo-tree-id10110 . -2095) (undo-tree-id10111 . -1210) (undo-tree-id10112 . -2095) (undo-tree-id10113 . -2095) (undo-tree-id10114 . -1210) (undo-tree-id10115 . -2095) (undo-tree-id10116 . -2095) (undo-tree-id10117 . -1210) (undo-tree-id10118 . -2095) (undo-tree-id10119 . -2095) (undo-tree-id10120 . -1210) (undo-tree-id10121 . -2095) (undo-tree-id10122 . -2095) (undo-tree-id10123 . -1210) (undo-tree-id10124 . -2095) (undo-tree-id10125 . -2095) (undo-tree-id10126 . -1210) (undo-tree-id10127 . -2095) (undo-tree-id10128 . -2095) (undo-tree-id10129 . -1210) (undo-tree-id10130 . -2095) (undo-tree-id10131 . -2095) (undo-tree-id10132 . -1210) (undo-tree-id10133 . -2095) (undo-tree-id10134 . -2095) (undo-tree-id10135 . -1210) (undo-tree-id10136 . -2095) (undo-tree-id10137 . -2095) (undo-tree-id10138 . -1210) (undo-tree-id10139 . -2095) (undo-tree-id10140 . -2095) (undo-tree-id10141 . -1210) (undo-tree-id10142 . -2095) (undo-tree-id10143 . -2095) (undo-tree-id10144 . -1210) (undo-tree-id10145 . -2095) (undo-tree-id10146 . -2095) (undo-tree-id10147 . -1210) (undo-tree-id10148 . -2095) (undo-tree-id10149 . -2095) (undo-tree-id10150 . -1210) (undo-tree-id10151 . -2095) (undo-tree-id10152 . -2095) (undo-tree-id10153 . -1210) (undo-tree-id10154 . -2095) (undo-tree-id10155 . -2095) (undo-tree-id10156 . -1210) (undo-tree-id10157 . -2095) (undo-tree-id10158 . -2095) (undo-tree-id10159 . -1210) (undo-tree-id10160 . -2095) (undo-tree-id10161 . -2095) (undo-tree-id10162 . -1210) (undo-tree-id10163 . -2095) (undo-tree-id10164 . -2095) (undo-tree-id10165 . -1210) (undo-tree-id10166 . -2095) (undo-tree-id10167 . -2095) (undo-tree-id10168 . -1210) (undo-tree-id10169 . -2095) (undo-tree-id10170 . -2095) (undo-tree-id10171 . -1210) (undo-tree-id10172 . -2095) (undo-tree-id10173 . -2095) (undo-tree-id10174 . -1210) (undo-tree-id10175 . -2095) (undo-tree-id10176 . -2095) (undo-tree-id10177 . -1210) (undo-tree-id10178 . -2095) (undo-tree-id10179 . -2095) (undo-tree-id10180 . -1210) (undo-tree-id10181 . -2095) (undo-tree-id10182 . -2095) (undo-tree-id10183 . -1210) (undo-tree-id10184 . -2095) (undo-tree-id10185 . -2095) (undo-tree-id10186 . -1210) (undo-tree-id10187 . -2095) (undo-tree-id10188 . -2095) (undo-tree-id10189 . -1210) (undo-tree-id10190 . -2095) (undo-tree-id10191 . -2095) (undo-tree-id10192 . -1210) (undo-tree-id10193 . -2095) (undo-tree-id10194 . -2095) (undo-tree-id10195 . -1210) (undo-tree-id10196 . -2095) (undo-tree-id10197 . -2095) (undo-tree-id10198 . -1210) (undo-tree-id10199 . -2095) (undo-tree-id10200 . -2095) (undo-tree-id10201 . -1210) (undo-tree-id10202 . -2095) (undo-tree-id10203 . -2095) (undo-tree-id10204 . -1210) (undo-tree-id10205 . -2095) (undo-tree-id10206 . -2095) (undo-tree-id10207 . -1210) (undo-tree-id10208 . -2095) (undo-tree-id10209 . -2095) (undo-tree-id10210 . -1210) (undo-tree-id10211 . -2095) (undo-tree-id10212 . -2095) (undo-tree-id10213 . -1210) (undo-tree-id10214 . -2095) (undo-tree-id10215 . -2095) (undo-tree-id10216 . -1210) (undo-tree-id10217 . -2095) (undo-tree-id10218 . -2095) (undo-tree-id10219 . -1210) (undo-tree-id10220 . -2095) (undo-tree-id10221 . -2095) (undo-tree-id10222 . -1210) (undo-tree-id10223 . -2095) (undo-tree-id10224 . -2095) (undo-tree-id10225 . -1210) (undo-tree-id10226 . -2095) (undo-tree-id10227 . -2095) (undo-tree-id10228 . -1210) (undo-tree-id10229 . -2095) (undo-tree-id10230 . -2095) (undo-tree-id10231 . -1210) (undo-tree-id10232 . -2095) (undo-tree-id10233 . -2095) (undo-tree-id10234 . -1210) (undo-tree-id10235 . -2095) (undo-tree-id10236 . -2095) (undo-tree-id10237 . -1210) (undo-tree-id10238 . -2095) (undo-tree-id10239 . -2095) (undo-tree-id10240 . -1210) (undo-tree-id10241 . -2095) (undo-tree-id10242 . -2095) (undo-tree-id10243 . -1210) (undo-tree-id10244 . -2095) (undo-tree-id10245 . -2095) (undo-tree-id10246 . -1210) (undo-tree-id10247 . -2095) (undo-tree-id10248 . -2095) (undo-tree-id10249 . -1210) (undo-tree-id10250 . -2095) (undo-tree-id10251 . -2095) (undo-tree-id10252 . -1210) (undo-tree-id10253 . -2095) (undo-tree-id10254 . -2095) (undo-tree-id10255 . -1210) (undo-tree-id10256 . -2095) (undo-tree-id10257 . -2095) (undo-tree-id10258 . -1210) (undo-tree-id10259 . -2095) (undo-tree-id10260 . -2095) (undo-tree-id10261 . -1210) (undo-tree-id10262 . -2095) (undo-tree-id10263 . -2095) (undo-tree-id10264 . -1210) (undo-tree-id10265 . -2095) (undo-tree-id10266 . -2095) (undo-tree-id10267 . -1210) (undo-tree-id10268 . -2095) (undo-tree-id10269 . -2095) (undo-tree-id10270 . -2095) (undo-tree-id10271 . -2095) (undo-tree-id10272 . -2095) (undo-tree-id10273 . -2095) (undo-tree-id10274 . -2095) (undo-tree-id10275 . -1210) (undo-tree-id10276 . -2095) (undo-tree-id10277 . -2095) (undo-tree-id10278 . -2095) (undo-tree-id10279 . -2095) (undo-tree-id10280 . -2095) (undo-tree-id10281 . -2095) (undo-tree-id10282 . -2095) (undo-tree-id10283 . -1210) (undo-tree-id10284 . -2095) (undo-tree-id10285 . -2095) (undo-tree-id10286 . -2095) (undo-tree-id10287 . -2095) (undo-tree-id10288 . -2095) (undo-tree-id10289 . -2095) (undo-tree-id10290 . -2095) (undo-tree-id10291 . -1210) (undo-tree-id10292 . -2095) (undo-tree-id10293 . -2095) (undo-tree-id10294 . -2095) (undo-tree-id10295 . -2095) (undo-tree-id10296 . -2095) (undo-tree-id10297 . -2095) (undo-tree-id10298 . -2095) (undo-tree-id10299 . -1210) (undo-tree-id10300 . -2095) (undo-tree-id10301 . -2095) (undo-tree-id10302 . -2095) (undo-tree-id10303 . -2095) (undo-tree-id10304 . -2095) (undo-tree-id10305 . -2095) (undo-tree-id10306 . -2095) (undo-tree-id10307 . -1210) (undo-tree-id10308 . -2095) (undo-tree-id10309 . -2095) (undo-tree-id10310 . -2095) (undo-tree-id10311 . -2095) (undo-tree-id10312 . -2095) (undo-tree-id10313 . -2095) (undo-tree-id10314 . -2095) (undo-tree-id10315 . -1210) (undo-tree-id10316 . -2095) (undo-tree-id10317 . -2095) (undo-tree-id10318 . -2095) (undo-tree-id10319 . -2095) (undo-tree-id10320 . -2095) (undo-tree-id10321 . -2095) (undo-tree-id10322 . -2095) (undo-tree-id10323 . -1210) (undo-tree-id10324 . -2095) (undo-tree-id10325 . -2095) (undo-tree-id10326 . -2095) (undo-tree-id10327 . -2095) (undo-tree-id10328 . -2095) (undo-tree-id10329 . -2095) (undo-tree-id10330 . -2095) (undo-tree-id10331 . -1210) (undo-tree-id10332 . -2095) (undo-tree-id10333 . -2095) (undo-tree-id10334 . -2095) (undo-tree-id10335 . -2095) (undo-tree-id10336 . -2095) (undo-tree-id10337 . -2095) (undo-tree-id10338 . -2095) (undo-tree-id10339 . -1210) (undo-tree-id10340 . -2095) (undo-tree-id10341 . -2095) (undo-tree-id10342 . -2095) (undo-tree-id10343 . -2095) (undo-tree-id10344 . -2095) (undo-tree-id10345 . -2095) (undo-tree-id10346 . -2095) (undo-tree-id10347 . -1210) (undo-tree-id10348 . -2095) (undo-tree-id10349 . -2095) (undo-tree-id10350 . -1210) (undo-tree-id10351 . -2095) (undo-tree-id10352 . -2095) (undo-tree-id10353 . -1210) (undo-tree-id10354 . -2095) (undo-tree-id10355 . -2095) (undo-tree-id10356 . -1210) (undo-tree-id10357 . -2095) (undo-tree-id10358 . -2095) (undo-tree-id10359 . -1210) (undo-tree-id10360 . -2095) (undo-tree-id10361 . -2095) (undo-tree-id10362 . -1210) (undo-tree-id10363 . -2095) (undo-tree-id10364 . -2095) (undo-tree-id10365 . -1210) (undo-tree-id10366 . -2095) (undo-tree-id10367 . -2095) (undo-tree-id10368 . -1210) (undo-tree-id10369 . -2095) (undo-tree-id10370 . -2095) (undo-tree-id10371 . -1210) (undo-tree-id10372 . -2095) (undo-tree-id10373 . -2095) (undo-tree-id10374 . -1210) (undo-tree-id10375 . -2095) (undo-tree-id10376 . -2095) (undo-tree-id10377 . -1210) (undo-tree-id10378 . -2095) (undo-tree-id10379 . -2095) (undo-tree-id10380 . -1210) (undo-tree-id10381 . -2095) (undo-tree-id10382 . -2095) (undo-tree-id10383 . -1210) (undo-tree-id10384 . -2095) (undo-tree-id10385 . -2095) (undo-tree-id10386 . -1210) (undo-tree-id10387 . -2095) (undo-tree-id10388 . -2095) (undo-tree-id10389 . -1210) (undo-tree-id10390 . -2095) (undo-tree-id10391 . -2095) (undo-tree-id10392 . -1210) (undo-tree-id10393 . -2095) (undo-tree-id10394 . -2095) (undo-tree-id10395 . -1210) (undo-tree-id10396 . -2095) (undo-tree-id10397 . -2095) (undo-tree-id10398 . -1210) (undo-tree-id10399 . -2095) (undo-tree-id10400 . -2095) (undo-tree-id10401 . -1210) (undo-tree-id10402 . -2095) (undo-tree-id10403 . -2095) (undo-tree-id10404 . -1210) (undo-tree-id10405 . -2095) (undo-tree-id10406 . -2095) (undo-tree-id10407 . -1210) (undo-tree-id10408 . -2095) (undo-tree-id10409 . -2095) (undo-tree-id10410 . -1210) (undo-tree-id10411 . -2095) (undo-tree-id10412 . -2095) (undo-tree-id10413 . -1210) (undo-tree-id10414 . -2095) (undo-tree-id10415 . -2095) (undo-tree-id10416 . -1210) (undo-tree-id10417 . -2095) (undo-tree-id10418 . -2095) (undo-tree-id10419 . -1210) (undo-tree-id10420 . -2095) (undo-tree-id10421 . -2095) (undo-tree-id10422 . -1210) (undo-tree-id10423 . -2095) (undo-tree-id10424 . -2095) (undo-tree-id10425 . -1210) (undo-tree-id10426 . -2095) (undo-tree-id10427 . -2095) (undo-tree-id10428 . -2095) (undo-tree-id10429 . -2095) (undo-tree-id10430 . -2095) (undo-tree-id10431 . -2095) (undo-tree-id10432 . -2095) (undo-tree-id10433 . -1210) (undo-tree-id10434 . -2095) (undo-tree-id10435 . -2095) (undo-tree-id10436 . -1210) (undo-tree-id10437 . -2095) (undo-tree-id10438 . -2095) (undo-tree-id10439 . -1210) (undo-tree-id10440 . -2095) (undo-tree-id10441 . -2095) (undo-tree-id10442 . -1210) (undo-tree-id10443 . -2095) (undo-tree-id10444 . -2095) (undo-tree-id10445 . -1210) (undo-tree-id10446 . -2095) (undo-tree-id10447 . -2095) (undo-tree-id10448 . -1210) (undo-tree-id10449 . -2095) (undo-tree-id10450 . -2095) (undo-tree-id10451 . -1210) (undo-tree-id10452 . -2095) (undo-tree-id10453 . -2095) (undo-tree-id10454 . -1210) (undo-tree-id10455 . -2095) (undo-tree-id10456 . -2095) (undo-tree-id10457 . -1210) (undo-tree-id10458 . -2095) (undo-tree-id10459 . -2095) (undo-tree-id10460 . -1210) (undo-tree-id10461 . -2095) (undo-tree-id10462 . -2095) (undo-tree-id10463 . -1210) (undo-tree-id10464 . -2095) (undo-tree-id10465 . -2095) (undo-tree-id10466 . -1210) (undo-tree-id10467 . -2095) (undo-tree-id10468 . -2095) (undo-tree-id10469 . -1210) (undo-tree-id10470 . -2095) (undo-tree-id10471 . -2095) (undo-tree-id10472 . -1210) (undo-tree-id10473 . -2095) (undo-tree-id10474 . -2095) (undo-tree-id10475 . -1210) (undo-tree-id10476 . -2095) (undo-tree-id10477 . -2095) (undo-tree-id10478 . -1210) (undo-tree-id10479 . -2095) (undo-tree-id10480 . -2095) (undo-tree-id10481 . -1210) (undo-tree-id10482 . -2095) (undo-tree-id10483 . -2095) (undo-tree-id10484 . -1210) (undo-tree-id10485 . -2095) (undo-tree-id10486 . -2095) (undo-tree-id10487 . -1210) (undo-tree-id10488 . -2095) (undo-tree-id10489 . -2095) (undo-tree-id10490 . -1210) (undo-tree-id10491 . -2095) (undo-tree-id10492 . -2095) (undo-tree-id10493 . -1210) (undo-tree-id10494 . -2095) (undo-tree-id10495 . -2095) (undo-tree-id10496 . -1210) (undo-tree-id10497 . -2095) (undo-tree-id10498 . -2095) (undo-tree-id10499 . -1210) (undo-tree-id10500 . -2095) (undo-tree-id10501 . -2095) (undo-tree-id10502 . -1210) (undo-tree-id10503 . -2095) (undo-tree-id10504 . -2095) (undo-tree-id10505 . -1210) (undo-tree-id10506 . -2095) (undo-tree-id10507 . -2095) (undo-tree-id10508 . -2095) (undo-tree-id10509 . -2095) (undo-tree-id10510 . -2095) (undo-tree-id10511 . -2095) (undo-tree-id10512 . -2095) (undo-tree-id10513 . -2095) (undo-tree-id10514 . -2095) (undo-tree-id10515 . -2095) (undo-tree-id10516 . -2095) (undo-tree-id10517 . -2095) (undo-tree-id10518 . -1210) (undo-tree-id10519 . -2095) (undo-tree-id10520 . -2095) (undo-tree-id10521 . -1210) (undo-tree-id10522 . -2095) (undo-tree-id10523 . -2095) (undo-tree-id10524 . -1210) (undo-tree-id10525 . -2095) (undo-tree-id10526 . -2095) (undo-tree-id10527 . -2095) (undo-tree-id10528 . -2095) (undo-tree-id10529 . -2095) (undo-tree-id10530 . -2095) (undo-tree-id10531 . -2095) (undo-tree-id10532 . -1210) (undo-tree-id10533 . -2095) (undo-tree-id10534 . -2095) (undo-tree-id10535 . -1210) (undo-tree-id10536 . -2095) (undo-tree-id10537 . -2095) (undo-tree-id10538 . -2095) (undo-tree-id10539 . -2095) (undo-tree-id10540 . -2095) (undo-tree-id10541 . -2095) (undo-tree-id10542 . -2095) (undo-tree-id10543 . -1210) (undo-tree-id10544 . -2095) (undo-tree-id10545 . -2095) (undo-tree-id10546 . -1210) (undo-tree-id10547 . -2095) (undo-tree-id10548 . -2095) (undo-tree-id10549 . -1210) (undo-tree-id10550 . -2095) (undo-tree-id10551 . -2095) (undo-tree-id10552 . -1210) (undo-tree-id10553 . -2095) (undo-tree-id10554 . -2095) (undo-tree-id10555 . -2095) (undo-tree-id10556 . -2095) (undo-tree-id10557 . -2095) (undo-tree-id10558 . -2095) (undo-tree-id10559 . -2095) (undo-tree-id10560 . -1210) (undo-tree-id10561 . -2095) (undo-tree-id10562 . -2095) (undo-tree-id10563 . -2095) (undo-tree-id10564 . -2095) (undo-tree-id10565 . -2095) (undo-tree-id10566 . -2095) (undo-tree-id10567 . -2095) (undo-tree-id10568 . -1210) (undo-tree-id10569 . -2095) (undo-tree-id10570 . -2095) (undo-tree-id10571 . -1210) (undo-tree-id10572 . -2095) (undo-tree-id10573 . -2095) (undo-tree-id10574 . -2095) (undo-tree-id10575 . -2095) (undo-tree-id10576 . -2095) (undo-tree-id10577 . -2095) (undo-tree-id10578 . -2095) (undo-tree-id10579 . -1210) (undo-tree-id10580 . -2095) (undo-tree-id10581 . -2095) (undo-tree-id10582 . -2095) (undo-tree-id10583 . -2095) (undo-tree-id10584 . -2095) (undo-tree-id10585 . -2095) (undo-tree-id10586 . -2095) (undo-tree-id10587 . -2095) (undo-tree-id10588 . -2095) (undo-tree-id10589 . -2095) (undo-tree-id10590 . -2095) (undo-tree-id10591 . -2095) (undo-tree-id10592 . -2095) (undo-tree-id10593 . -2095) (undo-tree-id10594 . -2095) (undo-tree-id10595 . -2095) (undo-tree-id10596 . -2095) (undo-tree-id10597 . -2095) (undo-tree-id10598 . -2095) (undo-tree-id10599 . -2095) (undo-tree-id10600 . -2095) (undo-tree-id10601 . -2095) (undo-tree-id10602 . -2095) (undo-tree-id10603 . -2095) (undo-tree-id10604 . -2095) (undo-tree-id10605 . -2095) (undo-tree-id10606 . -2095) (undo-tree-id10607 . -2095) (undo-tree-id10608 . -2095) (undo-tree-id10609 . -2095) (undo-tree-id10610 . -2095) (undo-tree-id10611 . -2095) (undo-tree-id10612 . -1210) (undo-tree-id10613 . -2095) (undo-tree-id10614 . -2095) (undo-tree-id10615 . -1210) (undo-tree-id10616 . -2095) (undo-tree-id10617 . -2095) (undo-tree-id10618 . -1210) (undo-tree-id10619 . -2095) (undo-tree-id10620 . -2095) (undo-tree-id10621 . -1210) (undo-tree-id10622 . -2095) (undo-tree-id10623 . -2095) (undo-tree-id10624 . -2095) (undo-tree-id10625 . -2095) (undo-tree-id10626 . -2095) (undo-tree-id10627 . -2095) (undo-tree-id10628 . -2095) (undo-tree-id10629 . -1210) (undo-tree-id10630 . -2095) (undo-tree-id10631 . -2095) (undo-tree-id10632 . -1210) (undo-tree-id10633 . -2095) (undo-tree-id10634 . -2095) (undo-tree-id10635 . -1210) (undo-tree-id10636 . -2095) (undo-tree-id10637 . -2095) (undo-tree-id10638 . -1210) (undo-tree-id10639 . -2095) (undo-tree-id10640 . -2095) (undo-tree-id10641 . -1210) (undo-tree-id10642 . -2095) (undo-tree-id10643 . -2095) (undo-tree-id10644 . -2095) (undo-tree-id10645 . -2095) (undo-tree-id10646 . -2095) (undo-tree-id10647 . -2095) (undo-tree-id10648 . -2095) (undo-tree-id10649 . -2095) (undo-tree-id10650 . -2095) (undo-tree-id10651 . -2095) (undo-tree-id10652 . -2095) (undo-tree-id10653 . -2095) (undo-tree-id10654 . -2095) (undo-tree-id10655 . -2095) (undo-tree-id10656 . -2095) (undo-tree-id10657 . -2095) (undo-tree-id10658 . -2095) (undo-tree-id10659 . -2095) (undo-tree-id10660 . -2095) (undo-tree-id10661 . -2095) (undo-tree-id10662 . -2095) (undo-tree-id10663 . -2095) (undo-tree-id10664 . -1210) (undo-tree-id10665 . -2095) (undo-tree-id10666 . -2095) (undo-tree-id10667 . -1210) (undo-tree-id10668 . -2095) (undo-tree-id10669 . -2095) (undo-tree-id10670 . -1210) (undo-tree-id10671 . -2095) (undo-tree-id10672 . -2095) (undo-tree-id10673 . -1210) (undo-tree-id10674 . -2095) (undo-tree-id10675 . -2095) (undo-tree-id10676 . -1210) (undo-tree-id10677 . -2095) (undo-tree-id10678 . -2095) (undo-tree-id10679 . -2095) (undo-tree-id10680 . -2095) (undo-tree-id10681 . -2095) (undo-tree-id10682 . -2095) (undo-tree-id10683 . -2095) (undo-tree-id10684 . -2095) (undo-tree-id10685 . -2095) (undo-tree-id10686 . -2095) (undo-tree-id10687 . -2095) (undo-tree-id10688 . -2095) (undo-tree-id10689 . -1210) (undo-tree-id10690 . -2095) (undo-tree-id10691 . -2095) (undo-tree-id10692 . -1210) (undo-tree-id10693 . -2095) (undo-tree-id10694 . -2095) (undo-tree-id10695 . -1210) (undo-tree-id10696 . -2095) (undo-tree-id10697 . -2095) (undo-tree-id10698 . -1210) (undo-tree-id10699 . -2095) (undo-tree-id10700 . -2095) (undo-tree-id10701 . -1210) (undo-tree-id10702 . -2095) (undo-tree-id10703 . -2095) (undo-tree-id10704 . -2095) (undo-tree-id10705 . -2095) (undo-tree-id10706 . -2095) (undo-tree-id10707 . -2095) (undo-tree-id10708 . -2095) (undo-tree-id10709 . -2095) (undo-tree-id10710 . -2095) (undo-tree-id10711 . -2095) (undo-tree-id10712 . -2095) (undo-tree-id10713 . -2095) (undo-tree-id10714 . -2095) (undo-tree-id10715 . -2095) (undo-tree-id10716 . -2095) (undo-tree-id10717 . -2095) (undo-tree-id10718 . -2095) (undo-tree-id10719 . -1210) (undo-tree-id10720 . -2095) (undo-tree-id10721 . -2095) (undo-tree-id10722 . -1210) (undo-tree-id10723 . -2095) (undo-tree-id10724 . -2095) (undo-tree-id10725 . -1210) (undo-tree-id10726 . -2095) (undo-tree-id10727 . -2095) (undo-tree-id10728 . -1210) (undo-tree-id10729 . -2095) (undo-tree-id10730 . -2095) (undo-tree-id10731 . -2095) (undo-tree-id10732 . -2095) (undo-tree-id10733 . -2095) (undo-tree-id10734 . -2095) (undo-tree-id10735 . -2095) (undo-tree-id10736 . -1210) (undo-tree-id10737 . -2095) (undo-tree-id10738 . -2095) (undo-tree-id10739 . -1210) (undo-tree-id10740 . -2095) (undo-tree-id10741 . -2095) (undo-tree-id10742 . -1210) (undo-tree-id10743 . -2095) (undo-tree-id10744 . -2095) (undo-tree-id10745 . -1210) (undo-tree-id10746 . -2095) (undo-tree-id10747 . -2095) (undo-tree-id10748 . -1210) (undo-tree-id10749 . -2095) (undo-tree-id10750 . -2095) (undo-tree-id10751 . -1210) (undo-tree-id10752 . -2095) (undo-tree-id10753 . -2095) (undo-tree-id10754 . -1210) (undo-tree-id10755 . -2095) (undo-tree-id10756 . -2095) (undo-tree-id10757 . -1210) (undo-tree-id10758 . -2095) (undo-tree-id10759 . -2095) (undo-tree-id10760 . -1210) (undo-tree-id10761 . -2095) (undo-tree-id10762 . -2095) (undo-tree-id10763 . -1210) (undo-tree-id10764 . -2095) (undo-tree-id10765 . -2095) (undo-tree-id10766 . -1210) (undo-tree-id10767 . -2095) (undo-tree-id10768 . -2095) (undo-tree-id10769 . -1210) (undo-tree-id10770 . -2095) (undo-tree-id10771 . -2095) (undo-tree-id10772 . -1210) (undo-tree-id10773 . -2095) (undo-tree-id10774 . -2095) (undo-tree-id10775 . -2095) (undo-tree-id10776 . -2095) (undo-tree-id10777 . -2095) (undo-tree-id10778 . -2095) (undo-tree-id10779 . -2095) (undo-tree-id10780 . -2095) (undo-tree-id10781 . -2095) (undo-tree-id10782 . -2095) (undo-tree-id10783 . -2095) (undo-tree-id10784 . -2095) (undo-tree-id10785 . -1210) (undo-tree-id10786 . -2095) (undo-tree-id10787 . -2095) (undo-tree-id10788 . -1210) (undo-tree-id10789 . -2095) (undo-tree-id10790 . -2095) (undo-tree-id10791 . -1210) (undo-tree-id10792 . -2095) (undo-tree-id10793 . -2095) (undo-tree-id10794 . -1210) (undo-tree-id10795 . -2095) (undo-tree-id10796 . -2095) (undo-tree-id10797 . -1210) (undo-tree-id10798 . -2095) (undo-tree-id10799 . -2095) (undo-tree-id10800 . -1210) (undo-tree-id10801 . -2095) (undo-tree-id10802 . -2095) (undo-tree-id10803 . -1210) (undo-tree-id10804 . -2095) (undo-tree-id10805 . -2095) (undo-tree-id10806 . -1210) (undo-tree-id10807 . -2095) (undo-tree-id10808 . -2095) (undo-tree-id10809 . -1210) (undo-tree-id10810 . -2095) (undo-tree-id10811 . -2095) (undo-tree-id10812 . -1210) (undo-tree-id10813 . -2095) (undo-tree-id10814 . -2095) (undo-tree-id10815 . -1210) (undo-tree-id10816 . -2095) (undo-tree-id10817 . -2095) (undo-tree-id10818 . -1210) (undo-tree-id10819 . -2095) (undo-tree-id10820 . -2095) (undo-tree-id10821 . -1210) (undo-tree-id10822 . -2095) (undo-tree-id10823 . -2095) (undo-tree-id10824 . -1210) (undo-tree-id10825 . -2095) (undo-tree-id10826 . -2095) (undo-tree-id10827 . -1210) (undo-tree-id10828 . -2095) (undo-tree-id10829 . -2095) (undo-tree-id10830 . -1210) (undo-tree-id10831 . -2095) (undo-tree-id10832 . -2095) (undo-tree-id10833 . -1210) (undo-tree-id10834 . -2095) (undo-tree-id10835 . -2095) (undo-tree-id10836 . -1210) (undo-tree-id10837 . -2095) (undo-tree-id10838 . -2095) (undo-tree-id10839 . -1210) (undo-tree-id10840 . -2095) (undo-tree-id10841 . -2095) (undo-tree-id10842 . -1210) (undo-tree-id10843 . -2095) (undo-tree-id10844 . -2095) (undo-tree-id10845 . -1210) (undo-tree-id10846 . -2095) (undo-tree-id10847 . -2095) (undo-tree-id10848 . -1210) (undo-tree-id10849 . -2095) (undo-tree-id10850 . -2095) (undo-tree-id10851 . -1210) (undo-tree-id10852 . -2095) (undo-tree-id10853 . -2095) (undo-tree-id10854 . -1210) (undo-tree-id10855 . -2095) (undo-tree-id10856 . -2095) (undo-tree-id10857 . -1210) (undo-tree-id10858 . -2095) (undo-tree-id10859 . -2095) (undo-tree-id10860 . -1210) (undo-tree-id10861 . -2095) (undo-tree-id10862 . -2095) (undo-tree-id10863 . -1210) (undo-tree-id10864 . -2095) (undo-tree-id10865 . -2095) (undo-tree-id10866 . -1210) (undo-tree-id10867 . -2095) (undo-tree-id10868 . -2095) (undo-tree-id10869 . -1210) (undo-tree-id10870 . -2095) (undo-tree-id10871 . -2095) (undo-tree-id10872 . -1210) (undo-tree-id10873 . -2095) (undo-tree-id10874 . -2095) (undo-tree-id10875 . -1210) (undo-tree-id10876 . -2095) (undo-tree-id10877 . -2095) (undo-tree-id10878 . -1210) (undo-tree-id10879 . -2095) (undo-tree-id10880 . -2095) (undo-tree-id10881 . -1210) (undo-tree-id10882 . -2095) (undo-tree-id10883 . -2095) (undo-tree-id10884 . -1210) (undo-tree-id10885 . -2095) (undo-tree-id10886 . -2095) (undo-tree-id10887 . -1210) (undo-tree-id10888 . -2095) (undo-tree-id10889 . -2095) (undo-tree-id10890 . -1210) (undo-tree-id10891 . -2095) (undo-tree-id10892 . -2095) (undo-tree-id10893 . -1210) (undo-tree-id10894 . -2095) (undo-tree-id10895 . -2095) (undo-tree-id10896 . -1210) (undo-tree-id10897 . -2095) (undo-tree-id10898 . -2095) (undo-tree-id10899 . -1210) (undo-tree-id10900 . -2095) (undo-tree-id10901 . -2095) (undo-tree-id10902 . -1210) (undo-tree-id10903 . -2095) (undo-tree-id10904 . -2095) (undo-tree-id10905 . -1210) (undo-tree-id10906 . -2095) (undo-tree-id10907 . -2095) (undo-tree-id10908 . -1210) (undo-tree-id10909 . -2095) (undo-tree-id10910 . -2095) (undo-tree-id10911 . -1210) (undo-tree-id10912 . -2095) (undo-tree-id10913 . -2095) (undo-tree-id10914 . -1210) (undo-tree-id10915 . -2095) (undo-tree-id10916 . -2095) (undo-tree-id10917 . -1210) (undo-tree-id10918 . -2095) (undo-tree-id10919 . -2095) (undo-tree-id10920 . -1210) (undo-tree-id10921 . -2095) (undo-tree-id10922 . -2095) (undo-tree-id10923 . -1210) (undo-tree-id10924 . -2095) (undo-tree-id10925 . -2095) (undo-tree-id10926 . -1210) (undo-tree-id10927 . -2095) (undo-tree-id10928 . -2095) (undo-tree-id10929 . -1210) (undo-tree-id10930 . -2095) (undo-tree-id10931 . -2095) (undo-tree-id10932 . -1210) (undo-tree-id10933 . -2095) (undo-tree-id10934 . -2095) (undo-tree-id10935 . -1210) (undo-tree-id10936 . -2095) (undo-tree-id10937 . -2095) (undo-tree-id10938 . -1210) (undo-tree-id10939 . -2095) (undo-tree-id10940 . -2095) (undo-tree-id10941 . -1210) (undo-tree-id10942 . -2095) (undo-tree-id10943 . -2095) (undo-tree-id10944 . -1210) (undo-tree-id10945 . -2095) (undo-tree-id10946 . -2095) (undo-tree-id10947 . -1210) (undo-tree-id10948 . -2095) (undo-tree-id10949 . -2095) (undo-tree-id10950 . -1210) (undo-tree-id10951 . -2095) (undo-tree-id10952 . -2095) (undo-tree-id10953 . -1210) (undo-tree-id10954 . -2095) (undo-tree-id10955 . -2095) (undo-tree-id10956 . -1210) (undo-tree-id10957 . -2095) (undo-tree-id10958 . -2095) (undo-tree-id10959 . -1210) (undo-tree-id10960 . -2095) (undo-tree-id10961 . -2095) (undo-tree-id10962 . -2095) (undo-tree-id10963 . -2095) (undo-tree-id10964 . -2095) (undo-tree-id10965 . -2095) (undo-tree-id10966 . -2095) (undo-tree-id10967 . -1210) (undo-tree-id10968 . -2095) (undo-tree-id10969 . -2095) (undo-tree-id10970 . -1210) (undo-tree-id10971 . -2095) (undo-tree-id10972 . -2095) (undo-tree-id10973 . -1210) (undo-tree-id10974 . -2095) (undo-tree-id10975 . -2095) (undo-tree-id10976 . -1210) (undo-tree-id10977 . -2095) (undo-tree-id10978 . -2095) (undo-tree-id10979 . -1210) (undo-tree-id10980 . -2095) (undo-tree-id10981 . -2095) (undo-tree-id10982 . -1210) (undo-tree-id10983 . -2095) (undo-tree-id10984 . -2095) (undo-tree-id10985 . -1210) (undo-tree-id10986 . -2095) (undo-tree-id10987 . -2095) (undo-tree-id10988 . -1210) (undo-tree-id10989 . -2095) (undo-tree-id10990 . -2095) (undo-tree-id10991 . -1210) (undo-tree-id10992 . -2095) (undo-tree-id10993 . -2095) (undo-tree-id10994 . -1210) (undo-tree-id10995 . -2095) (undo-tree-id10996 . -2095) (undo-tree-id10997 . -1210) (undo-tree-id10998 . -2095) (undo-tree-id10999 . -2095) (undo-tree-id11000 . -1210) (undo-tree-id11001 . -2095) (undo-tree-id11002 . -2095) (undo-tree-id11003 . -1210) (undo-tree-id11004 . -2095) (undo-tree-id11005 . -2095) (undo-tree-id11006 . -1210) (undo-tree-id11007 . -2095) (undo-tree-id11008 . -2095) (undo-tree-id11009 . -1210) (undo-tree-id11010 . -2095) (undo-tree-id11011 . -2095) (undo-tree-id11012 . -1210) (undo-tree-id11013 . -2095) (undo-tree-id11014 . -2095) (undo-tree-id11015 . -1210) (undo-tree-id11016 . -2095) (undo-tree-id11017 . -2095) (undo-tree-id11018 . -1210) (undo-tree-id11019 . -2095) (undo-tree-id11020 . -2095) (undo-tree-id11021 . -1210) (undo-tree-id11022 . -2095) (undo-tree-id11023 . -2095) (undo-tree-id11024 . -1210) (undo-tree-id11025 . -2095) (undo-tree-id11026 . -2095) (undo-tree-id11027 . -1210) (undo-tree-id11028 . -2095) (undo-tree-id11029 . -2095) (undo-tree-id11030 . -1210) (undo-tree-id11031 . -2095) (undo-tree-id11032 . -2095) (undo-tree-id11033 . -1210) (undo-tree-id11034 . -2095) (undo-tree-id11035 . -2095) (undo-tree-id11036 . -1210) (undo-tree-id11037 . -2095) (undo-tree-id11038 . -2095) (undo-tree-id11039 . -1210) (undo-tree-id11040 . -2095) (undo-tree-id11041 . -2095) (undo-tree-id11042 . -1210) (undo-tree-id11043 . -2095) (undo-tree-id11044 . -2095) (undo-tree-id11045 . -1210) (undo-tree-id11046 . -2095) (undo-tree-id11047 . -2095) (undo-tree-id11048 . -1210) (undo-tree-id11049 . -2095) (undo-tree-id11050 . -2095) (undo-tree-id11051 . -1210) (undo-tree-id11052 . -2095) (undo-tree-id11053 . -2095) (undo-tree-id11054 . -1210) (undo-tree-id11055 . -2095) (undo-tree-id11056 . -2095) (undo-tree-id11057 . -1210) (undo-tree-id11058 . -2095) (undo-tree-id11059 . -2095) (undo-tree-id11060 . -1210) (undo-tree-id11061 . -2095) (undo-tree-id11062 . -2095) (undo-tree-id11063 . -1210) (undo-tree-id11064 . -2095) (undo-tree-id11065 . -2095) (undo-tree-id11066 . -2095) (undo-tree-id11067 . -2095) (undo-tree-id11068 . -2095) (undo-tree-id11069 . -2095) (undo-tree-id11070 . -2095) (undo-tree-id11071 . -2095) (undo-tree-id11072 . -2095) (undo-tree-id11073 . -2095) (undo-tree-id11074 . -2095) (undo-tree-id11075 . -2095) (undo-tree-id11076 . -1210) (undo-tree-id11077 . -2095) (undo-tree-id11078 . -2095) (undo-tree-id11079 . -1210) (undo-tree-id11080 . -2095) (undo-tree-id11081 . -2095) (undo-tree-id11082 . -1210) (undo-tree-id11083 . -2095) (undo-tree-id11084 . -2095) (undo-tree-id11085 . -1210) (undo-tree-id11086 . -2095) (undo-tree-id11087 . -2095) (undo-tree-id11088 . -1210) (undo-tree-id11089 . -2095) (undo-tree-id11090 . -2095) (undo-tree-id11091 . -1210) (undo-tree-id11092 . -2095) (undo-tree-id11093 . -2095) (undo-tree-id11094 . -1210) (undo-tree-id11095 . -2095) (undo-tree-id11096 . -2095) (undo-tree-id11097 . -1210) (undo-tree-id11098 . -2095) (undo-tree-id11099 . -2095) (undo-tree-id11100 . -1210) (undo-tree-id11101 . -2095) (undo-tree-id11102 . -2095) (undo-tree-id11103 . -1210) (undo-tree-id11104 . -2095) (undo-tree-id11105 . -2095) (undo-tree-id11106 . -1210) (undo-tree-id11107 . -2095) (undo-tree-id11108 . -2095) (undo-tree-id11109 . -1210) (undo-tree-id11110 . -2095) (undo-tree-id11111 . -2095) (undo-tree-id11112 . -1210) (undo-tree-id11113 . -2095) (undo-tree-id11114 . -2095) (undo-tree-id11115 . -1210) (undo-tree-id11116 . -2095) (undo-tree-id11117 . -2095) (undo-tree-id11118 . -1210) (undo-tree-id11119 . -2095) (undo-tree-id11120 . -2095) (undo-tree-id11121 . -1210) (undo-tree-id11122 . -2095) (undo-tree-id11123 . -2095) (undo-tree-id11124 . -1210) (undo-tree-id11125 . -2095) (undo-tree-id11126 . -2095) (undo-tree-id11127 . -1210) (undo-tree-id11128 . -2095) (undo-tree-id11129 . -2095) (undo-tree-id11130 . -1210) (undo-tree-id11131 . -2095) (undo-tree-id11132 . -2095) (undo-tree-id11133 . -1210) (undo-tree-id11134 . -2095) (undo-tree-id11135 . -2095) (undo-tree-id11136 . -1210) (undo-tree-id11137 . -2095) (undo-tree-id11138 . -2095) (undo-tree-id11139 . -1210) (undo-tree-id11140 . -2095) (undo-tree-id11141 . -2095) (undo-tree-id11142 . -1210) (undo-tree-id11143 . -2095) (undo-tree-id11144 . -2095) (undo-tree-id11145 . -1210) (undo-tree-id11146 . -2095) (undo-tree-id11147 . -2095) (undo-tree-id11148 . -1210) (undo-tree-id11149 . -2095) (undo-tree-id11150 . -2095) (undo-tree-id11151 . -1210) (undo-tree-id11152 . -2095) (undo-tree-id11153 . -2095) (undo-tree-id11154 . -1210) (undo-tree-id11155 . -2095) (undo-tree-id11156 . -2095) (undo-tree-id11157 . -1210) (undo-tree-id11158 . -2095) (undo-tree-id11159 . -2095) (undo-tree-id11160 . -1210) (undo-tree-id11161 . -2095) (undo-tree-id11162 . -2095) (undo-tree-id11163 . -1210) (undo-tree-id11164 . -2095) (undo-tree-id11165 . -2095) (undo-tree-id11166 . -1210) (undo-tree-id11167 . -2095) (undo-tree-id11168 . -2095) (undo-tree-id11169 . -1210) (undo-tree-id11170 . -2095) (undo-tree-id11171 . -2095) (undo-tree-id11172 . -1210) (undo-tree-id11173 . -2095) (undo-tree-id11174 . -2095) (undo-tree-id11175 . -1210) (undo-tree-id11176 . -2095) (undo-tree-id11177 . -2095) (undo-tree-id11178 . -1210) (undo-tree-id11179 . -2095) (undo-tree-id11180 . -2095) (undo-tree-id11181 . -1210) (undo-tree-id11182 . -2095) (undo-tree-id11183 . -2095) (undo-tree-id11184 . -1210) (undo-tree-id11185 . -2095) (undo-tree-id11186 . -2095) (undo-tree-id11187 . -1210) (undo-tree-id11188 . -2095) (undo-tree-id11189 . -2095) (undo-tree-id11190 . -1210) (undo-tree-id11191 . -2095) (undo-tree-id11192 . -2095) (undo-tree-id11193 . -1210) (undo-tree-id11194 . -2095) (undo-tree-id11195 . -2095) (undo-tree-id11196 . -1210) (undo-tree-id11197 . -2095) (undo-tree-id11198 . -2095) (undo-tree-id11199 . -1210) (undo-tree-id11200 . -2095) (undo-tree-id11201 . -2095) (undo-tree-id11202 . -1210) (undo-tree-id11203 . -2095) (undo-tree-id11204 . -2095) (undo-tree-id11205 . -1210) (undo-tree-id11206 . -2095) (undo-tree-id11207 . -2095) (undo-tree-id11208 . -1210) (undo-tree-id11209 . -2095) (undo-tree-id11210 . -2095) (undo-tree-id11211 . -1210) (undo-tree-id11212 . -2095) (undo-tree-id11213 . -2095) (undo-tree-id11214 . -1210) (undo-tree-id11215 . -2095) (undo-tree-id11216 . -2095) (undo-tree-id11217 . -1210) (undo-tree-id11218 . -2095) (undo-tree-id11219 . -2095) (undo-tree-id11220 . -1210) (undo-tree-id11221 . -2095) (undo-tree-id11222 . -2095) (undo-tree-id11223 . -1210) (undo-tree-id11224 . -2095) (undo-tree-id11225 . -2095) (undo-tree-id11226 . -1210) (undo-tree-id11227 . -2095) (undo-tree-id11228 . -2095) (undo-tree-id11229 . -1210) (undo-tree-id11230 . -2095) (undo-tree-id11231 . -2095) (undo-tree-id11232 . -1210) (undo-tree-id11233 . -2095) (undo-tree-id11234 . -2095) (undo-tree-id11235 . -1210) (undo-tree-id11236 . -2095) (undo-tree-id11237 . -2095) (undo-tree-id11238 . -1210) (undo-tree-id11239 . -2095) (undo-tree-id11240 . -2095) (undo-tree-id11241 . -1210) (undo-tree-id11242 . -2095) (undo-tree-id11243 . -2095) (undo-tree-id11244 . -1210) (undo-tree-id11245 . -2095) (undo-tree-id11246 . -2095) (undo-tree-id11247 . -1210) (undo-tree-id11248 . -2095) (undo-tree-id11249 . -2095) (undo-tree-id11250 . -1210) (undo-tree-id11251 . -2095) (undo-tree-id11252 . -2095) (undo-tree-id11253 . -1210) (undo-tree-id11254 . -2095) (undo-tree-id11255 . -2095) (undo-tree-id11256 . -1210) (undo-tree-id11257 . -2095) (undo-tree-id11258 . -2095) (undo-tree-id11259 . -1210) (undo-tree-id11260 . -2095) (undo-tree-id11261 . -2095) (undo-tree-id11262 . -1210) (undo-tree-id11263 . -2095) (undo-tree-id11264 . -2095) (undo-tree-id11265 . -1210) (undo-tree-id11266 . -2095) (undo-tree-id11267 . -2095) (undo-tree-id11268 . -1210) (undo-tree-id11269 . -2095) (undo-tree-id11270 . -2095) (undo-tree-id11271 . -1210) (undo-tree-id11272 . -2095) (undo-tree-id11273 . -2095) (undo-tree-id11274 . -1210) (undo-tree-id11275 . -2095) (undo-tree-id11276 . -2095) (undo-tree-id11277 . -1210) (undo-tree-id11278 . -2095) (undo-tree-id11279 . -2095) (undo-tree-id11280 . -1210) (undo-tree-id11281 . -2095) (undo-tree-id11282 . -2095) (undo-tree-id11283 . -1210) (undo-tree-id11284 . -2095) (undo-tree-id11285 . -2095) (undo-tree-id11286 . -1210) (undo-tree-id11287 . -2095) (undo-tree-id11288 . -2095) (undo-tree-id11289 . -1210) (undo-tree-id11290 . -2095) (undo-tree-id11291 . -2095) (undo-tree-id11292 . -1210) (undo-tree-id11293 . -2095) (undo-tree-id11294 . -2095) (undo-tree-id11295 . -1210) (undo-tree-id11296 . -2095) (undo-tree-id11297 . -2095) (undo-tree-id11298 . -1210) (undo-tree-id11299 . -2095) (undo-tree-id11300 . -2095) (undo-tree-id11301 . -1210) (undo-tree-id11302 . -2095) (undo-tree-id11303 . -2095) (undo-tree-id11304 . -1210) (undo-tree-id11305 . -2095) (undo-tree-id11306 . -2095) (undo-tree-id11307 . -1210) (undo-tree-id11308 . -2095) (undo-tree-id11309 . -2095) (undo-tree-id11310 . -1210) (undo-tree-id11311 . -2095) (undo-tree-id11312 . -2095) (undo-tree-id11313 . -1210) (undo-tree-id11314 . -2095) (undo-tree-id11315 . -2095) (undo-tree-id11316 . -1210) (undo-tree-id11317 . -2095) (undo-tree-id11318 . -2095) (undo-tree-id11319 . -1210) (undo-tree-id11320 . -2095) (undo-tree-id11321 . -2095) (undo-tree-id11322 . -1210) (undo-tree-id11323 . -2095) (undo-tree-id11324 . -2095) (undo-tree-id11325 . -1210) (undo-tree-id11326 . -2095) (undo-tree-id11327 . -2095) (undo-tree-id11328 . -1210) (undo-tree-id11329 . -2095) (undo-tree-id11330 . -2095) (undo-tree-id11331 . -1210) (undo-tree-id11332 . -2095) (undo-tree-id11333 . -2095) (undo-tree-id11334 . -1210) (undo-tree-id11335 . -2095) (undo-tree-id11336 . -2095) (undo-tree-id11337 . -1210) (undo-tree-id11338 . -2095) (undo-tree-id11339 . -2095) (undo-tree-id11340 . -1210) (undo-tree-id11341 . -2095) (undo-tree-id11342 . -2095) (undo-tree-id11343 . -1210) (undo-tree-id11344 . -2095) (undo-tree-id11345 . -2095) (undo-tree-id11346 . -1210) (undo-tree-id11347 . -2095) (undo-tree-id11348 . -2095) (undo-tree-id11349 . -1210) (undo-tree-id11350 . -2095) (undo-tree-id11351 . -2095) (undo-tree-id11352 . -1210) (undo-tree-id11353 . -2095) (undo-tree-id11354 . -2095) (undo-tree-id11355 . -1210) (undo-tree-id11356 . -2095) (undo-tree-id11357 . -2095) (undo-tree-id11358 . -1210) (undo-tree-id11359 . -2095) (undo-tree-id11360 . -2095) (undo-tree-id11361 . -1210) (undo-tree-id11362 . -2095) (undo-tree-id11363 . -2095) (undo-tree-id11364 . -1210) (undo-tree-id11365 . -2095) (undo-tree-id11366 . -2095) (undo-tree-id11367 . -1210) (undo-tree-id11368 . -2095) (undo-tree-id11369 . -2095) (undo-tree-id11370 . -1210) (undo-tree-id11371 . -2095) (undo-tree-id11372 . -2095) (undo-tree-id11373 . -1210) (undo-tree-id11374 . -2095) (undo-tree-id11375 . -2095) (undo-tree-id11376 . -1210) (undo-tree-id11377 . -2095) (undo-tree-id11378 . -2095) (undo-tree-id11379 . -1210) (undo-tree-id11380 . -2095) (undo-tree-id11381 . -2095) (undo-tree-id11382 . -1210) (undo-tree-id11383 . -2095) (undo-tree-id11384 . -2095) (undo-tree-id11385 . -1210) (undo-tree-id11386 . -2095) (undo-tree-id11387 . -2095) (undo-tree-id11388 . -1210) (undo-tree-id11389 . -2095) (undo-tree-id11390 . -2095) (undo-tree-id11391 . -1210) (undo-tree-id11392 . -2095) (undo-tree-id11393 . -2095) (undo-tree-id11394 . -1210) (undo-tree-id11395 . -2095) (undo-tree-id11396 . -2095) (undo-tree-id11397 . -1210) (undo-tree-id11398 . -2095) (undo-tree-id11399 . -2095) (undo-tree-id11400 . -1210) (undo-tree-id11401 . -2095) (undo-tree-id11402 . -2095) (undo-tree-id11403 . -1210) (undo-tree-id11404 . -2095) (undo-tree-id11405 . -2095) (undo-tree-id11406 . -1210) (undo-tree-id11407 . -2095) (undo-tree-id11408 . -2095) (undo-tree-id11409 . -1210) (undo-tree-id11410 . -2095) (undo-tree-id11411 . -2095) (undo-tree-id11412 . -1210) (undo-tree-id11413 . -2095) (undo-tree-id11414 . -2095) (undo-tree-id11415 . -1210) (undo-tree-id11416 . -2095) (undo-tree-id11417 . -2095) (undo-tree-id11418 . -1210) (undo-tree-id11419 . -2095) (undo-tree-id11420 . -2095) (undo-tree-id11421 . -1210) (undo-tree-id11422 . -2095) (undo-tree-id11423 . -2095) (undo-tree-id11424 . -1210) (undo-tree-id11425 . -2095) (undo-tree-id11426 . -2095) (undo-tree-id11427 . -1210) (undo-tree-id11428 . -2095) (undo-tree-id11429 . -2095) (undo-tree-id11430 . -1210) (undo-tree-id11431 . -2095) (undo-tree-id11432 . -2095) (undo-tree-id11433 . -1210) (undo-tree-id11434 . -2095) (undo-tree-id11435 . -2095) (undo-tree-id11436 . -1210) (undo-tree-id11437 . -2095) (undo-tree-id11438 . -2095) (undo-tree-id11439 . -1210) (undo-tree-id11440 . -2095) (undo-tree-id11441 . -2095) (undo-tree-id11442 . -1210) (undo-tree-id11443 . -2095) (undo-tree-id11444 . -2095) (undo-tree-id11445 . -1210) (undo-tree-id11446 . -2095) (undo-tree-id11447 . -2095) (undo-tree-id11448 . -1210) (undo-tree-id11449 . -2095) (undo-tree-id11450 . -2095) (undo-tree-id11451 . -1210) (undo-tree-id11452 . -2095) (undo-tree-id11453 . -2095) (undo-tree-id11454 . -1210) (undo-tree-id11455 . -2095) (undo-tree-id11456 . -2095) (undo-tree-id11457 . -1210) (undo-tree-id11458 . -2095) (undo-tree-id11459 . -2095) (undo-tree-id11460 . -1210) (undo-tree-id11461 . -2095) (undo-tree-id11462 . -2095) (undo-tree-id11463 . -1210) (undo-tree-id11464 . -2095) (undo-tree-id11465 . -2095) (undo-tree-id11466 . -1210) (undo-tree-id11467 . -2095) (undo-tree-id11468 . -2095) (undo-tree-id11469 . -1210) (undo-tree-id11470 . -2095) (undo-tree-id11471 . -2095) (undo-tree-id11472 . -1210) (undo-tree-id11473 . -2095) (undo-tree-id11474 . -2095) (undo-tree-id11475 . -1210) (undo-tree-id11476 . -2095) (undo-tree-id11477 . -2095) (undo-tree-id11478 . -1210) (undo-tree-id11479 . -2095) (undo-tree-id11480 . -2095) (undo-tree-id11481 . -1210) (undo-tree-id11482 . -2095) (undo-tree-id11483 . -2095) (undo-tree-id11484 . -1210) (undo-tree-id11485 . -2095) (undo-tree-id11486 . -2095) (undo-tree-id11487 . -1210) (undo-tree-id11488 . -2095) (undo-tree-id11489 . -2095) (undo-tree-id11490 . -1210) (undo-tree-id11491 . -2095) (undo-tree-id11492 . -2095) (undo-tree-id11493 . -1210) (undo-tree-id11494 . -2095) (undo-tree-id11495 . -2095) (undo-tree-id11496 . -1210) (undo-tree-id11497 . -2095) (undo-tree-id11498 . -2095) (undo-tree-id11499 . -1210) (undo-tree-id11500 . -2095) (undo-tree-id11501 . -2095) (undo-tree-id11502 . -1210) (undo-tree-id11503 . -2095) (undo-tree-id11504 . -2095) (undo-tree-id11505 . -1210) (undo-tree-id11506 . -2095) (undo-tree-id11507 . -2095) (undo-tree-id11508 . -1210) (undo-tree-id11509 . -2095) (undo-tree-id11510 . -2095) (undo-tree-id11511 . -1210) (undo-tree-id11512 . -2095) (undo-tree-id11513 . -2095) (undo-tree-id11514 . -1210) (undo-tree-id11515 . -2095) (undo-tree-id11516 . -2095) (undo-tree-id11517 . -1210) (undo-tree-id11518 . -2095) (undo-tree-id11519 . -2095) (undo-tree-id11520 . -1210) (undo-tree-id11521 . -2095) (undo-tree-id11522 . -2095) (undo-tree-id11523 . -1210) (undo-tree-id11524 . -2095) (undo-tree-id11525 . -2095) (undo-tree-id11526 . -1210) (undo-tree-id11527 . -2095) (undo-tree-id11528 . -2095) (undo-tree-id11529 . -1210) (undo-tree-id11530 . -2095) (undo-tree-id11531 . -2095) (undo-tree-id11532 . -1210) (undo-tree-id11533 . -2095) (undo-tree-id11534 . -2095) (undo-tree-id11535 . -1210) (undo-tree-id11536 . -2095) (undo-tree-id11537 . -2095) (undo-tree-id11538 . -1210) (undo-tree-id11539 . -2095) (undo-tree-id11540 . -2095) (undo-tree-id11541 . -1210) (undo-tree-id11542 . -2095) (undo-tree-id11543 . -2095) (undo-tree-id11544 . -1210) (undo-tree-id11545 . -2095) (undo-tree-id11546 . -2095) (undo-tree-id11547 . -1210) (undo-tree-id11548 . -2095) (undo-tree-id11549 . -2095) (undo-tree-id11550 . -1210) (undo-tree-id11551 . -2095) (undo-tree-id11552 . -2095) (undo-tree-id11553 . -1210) (undo-tree-id11554 . -2095) (undo-tree-id11555 . -2095) (undo-tree-id11556 . -1210) (undo-tree-id11557 . -2095) (undo-tree-id11558 . -2095) (undo-tree-id11559 . -1210) (undo-tree-id11560 . -2095) (undo-tree-id11561 . -2095) (undo-tree-id11562 . -1210) (undo-tree-id11563 . -2095) (undo-tree-id11564 . -2095) (undo-tree-id11565 . -1210) (undo-tree-id11566 . -2095) (undo-tree-id11567 . -2095) (undo-tree-id11568 . -1210) (undo-tree-id11569 . -2095) (undo-tree-id11570 . -2095) (undo-tree-id11571 . -1210) (undo-tree-id11572 . -2095) (undo-tree-id11573 . -2095) (undo-tree-id11574 . -1210) (undo-tree-id11575 . -2095) (undo-tree-id11576 . -2095) (undo-tree-id11577 . -1210) (undo-tree-id11578 . -2095) (undo-tree-id11579 . -2095) (undo-tree-id11580 . -1210) (undo-tree-id11581 . -2095) (undo-tree-id11582 . -2095) (undo-tree-id11583 . -1210) (undo-tree-id11584 . -2095) (undo-tree-id11585 . -2095) (undo-tree-id11586 . -1210) (undo-tree-id11587 . -2095) (undo-tree-id11588 . -2095) (undo-tree-id11589 . -1210) (undo-tree-id11590 . -2095) (undo-tree-id11591 . -2095) (undo-tree-id11592 . -1210) (undo-tree-id11593 . -2095) (undo-tree-id11594 . -2095) (undo-tree-id11595 . -1210) (undo-tree-id11596 . -2095) (undo-tree-id11597 . -2095) (undo-tree-id11598 . -1210) (undo-tree-id11599 . -2095) (undo-tree-id11600 . -2095) (undo-tree-id11601 . -1210) (undo-tree-id11602 . -2095) (undo-tree-id11603 . -2095) (undo-tree-id11604 . -1210) (undo-tree-id11605 . -2095) (undo-tree-id11606 . -2095) (undo-tree-id11607 . -1210) (undo-tree-id11608 . -2095) (undo-tree-id11609 . -2095) (undo-tree-id11610 . -1210) (undo-tree-id11611 . -2095) (undo-tree-id11612 . -2095) (undo-tree-id11613 . -1210) (undo-tree-id11614 . -2095) (undo-tree-id11615 . -2095) (undo-tree-id11616 . -1210) (undo-tree-id11617 . -2095) (undo-tree-id11618 . -2095) (undo-tree-id11619 . -1210) (undo-tree-id11620 . -2095) (undo-tree-id11621 . -2095) (undo-tree-id11622 . -1210) (undo-tree-id11623 . -2095) (undo-tree-id11624 . -2095) (undo-tree-id11625 . -1210) (undo-tree-id11626 . -2095) (undo-tree-id11627 . -2095) (undo-tree-id11628 . -1210) (undo-tree-id11629 . -2095) (undo-tree-id11630 . -2095) (undo-tree-id11631 . -1210) (undo-tree-id11632 . -2095) (undo-tree-id11633 . -2095) (undo-tree-id11634 . -1210) (undo-tree-id11635 . -2095) (undo-tree-id11636 . -2095) (undo-tree-id11637 . -1210) (undo-tree-id11638 . -2095) (undo-tree-id11639 . -2095) (undo-tree-id11640 . -1210) (undo-tree-id11641 . -2095) (undo-tree-id11642 . -2095) (undo-tree-id11643 . -1210) (undo-tree-id11644 . -2095) (undo-tree-id11645 . -2095) (undo-tree-id11646 . -1210) (undo-tree-id11647 . -2095) (undo-tree-id11648 . -2095) (undo-tree-id11649 . -1210) (undo-tree-id11650 . -2095) (undo-tree-id11651 . -2095) (undo-tree-id11652 . -1210) (undo-tree-id11653 . -2095) (undo-tree-id11654 . -2095) (undo-tree-id11655 . -1210) (undo-tree-id11656 . -2095) (undo-tree-id11657 . -2095) (undo-tree-id11658 . -1210) (undo-tree-id11659 . -2095) (undo-tree-id11660 . -2095) (undo-tree-id11661 . -1210) (undo-tree-id11662 . -2095) (undo-tree-id11663 . -2095) (undo-tree-id11664 . -1210) (undo-tree-id11665 . -2095) (undo-tree-id11666 . -2095) (undo-tree-id11667 . -1210) (undo-tree-id11668 . -2095) (undo-tree-id11669 . -2095) (undo-tree-id11670 . -1210) (undo-tree-id11671 . -2095) (undo-tree-id11672 . -2095) (undo-tree-id11673 . -1210) (undo-tree-id11674 . -2095) (undo-tree-id11675 . -2095) (undo-tree-id11676 . -1210) (undo-tree-id11677 . -2095) (undo-tree-id11678 . -2095) (undo-tree-id11679 . -1210) (undo-tree-id11680 . -2095) (undo-tree-id11681 . -2095) (undo-tree-id11682 . -1210) (undo-tree-id11683 . -2095) (undo-tree-id11684 . -2095) (undo-tree-id11685 . -1210) (undo-tree-id11686 . -2095) (undo-tree-id11687 . -2095) (undo-tree-id11688 . -1210) (undo-tree-id11689 . -2095) (undo-tree-id11690 . -2095) (undo-tree-id11691 . -1210) (undo-tree-id11692 . -2095) (undo-tree-id11693 . -2095) (undo-tree-id11694 . -1210) (undo-tree-id11695 . -2095) (undo-tree-id11696 . -2095) (undo-tree-id11697 . -1210) (undo-tree-id11698 . -2095) (undo-tree-id11699 . -2095) (undo-tree-id11700 . -1210) (undo-tree-id11701 . -2095) (undo-tree-id11702 . -2095) (undo-tree-id11703 . -1210) (undo-tree-id11704 . -2095) (undo-tree-id11705 . -2095) (undo-tree-id11706 . -1210) (undo-tree-id11707 . -2095) (undo-tree-id11708 . -2095) (undo-tree-id11709 . -1210) (undo-tree-id11710 . -2095) (undo-tree-id11711 . -2095) (undo-tree-id11712 . -1210) (undo-tree-id11713 . -2095) (undo-tree-id11714 . -2095) (undo-tree-id11715 . -1210) (undo-tree-id11716 . -2095) (undo-tree-id11717 . -2095) (undo-tree-id11718 . -1210) (undo-tree-id11719 . -2095) (undo-tree-id11720 . -2095) (undo-tree-id11721 . -1210) (undo-tree-id11722 . -2095) (undo-tree-id11723 . -2095) (undo-tree-id11724 . -1210) (undo-tree-id11725 . -2095) (undo-tree-id11726 . -2095) (undo-tree-id11727 . -1210) (undo-tree-id11728 . -2095) (undo-tree-id11729 . -2095) (undo-tree-id11730 . -1210) (undo-tree-id11731 . -2095) (undo-tree-id11732 . -2095) (undo-tree-id11733 . -1210) (undo-tree-id11734 . -2095) (undo-tree-id11735 . -2095) (undo-tree-id11736 . -1210) (undo-tree-id11737 . -2095) (undo-tree-id11738 . -2095) (undo-tree-id11739 . -1210) (undo-tree-id11740 . -2095) (undo-tree-id11741 . -2095) (undo-tree-id11742 . -1210) (undo-tree-id11743 . -2095) (undo-tree-id11744 . -2095) (undo-tree-id11745 . -1210) (undo-tree-id11746 . -2095) (undo-tree-id11747 . -2095) (undo-tree-id11748 . -1210) (undo-tree-id11749 . -2095) (undo-tree-id11750 . -2095) (undo-tree-id11751 . -1210) (undo-tree-id11752 . -2095) (undo-tree-id11753 . -2095) (undo-tree-id11754 . -1210) (undo-tree-id11755 . -2095) (undo-tree-id11756 . -2095) (undo-tree-id11757 . -1210) (undo-tree-id11758 . -2095) (undo-tree-id11759 . -2095) (undo-tree-id11760 . -1210) (undo-tree-id11761 . -2095) (undo-tree-id11762 . -2095) (undo-tree-id11763 . -1210) (undo-tree-id11764 . -2095) (undo-tree-id11765 . -2095) (undo-tree-id11766 . -1210) (undo-tree-id11767 . -2095) (undo-tree-id11768 . -2095) (undo-tree-id11769 . -1210) (undo-tree-id11770 . -2095) (undo-tree-id11771 . -2095) (undo-tree-id11772 . -1210) (undo-tree-id11773 . -2095) (undo-tree-id11774 . -2095) (undo-tree-id11775 . -1210) (undo-tree-id11776 . -2095) (undo-tree-id11777 . -2095) (undo-tree-id11778 . -1210) (undo-tree-id11779 . -2095) (undo-tree-id11780 . -2095) (undo-tree-id11781 . -1210) (undo-tree-id11782 . -2095) (undo-tree-id11783 . -2095) (undo-tree-id11784 . -1210) (undo-tree-id11785 . -2095) (undo-tree-id11786 . -2095) (undo-tree-id11787 . -1210) (undo-tree-id11788 . -2095) (undo-tree-id11789 . -2095) (undo-tree-id11790 . -1210) (undo-tree-id11791 . -2095) (undo-tree-id11792 . -2095) (undo-tree-id11793 . -1210) (undo-tree-id11794 . -2095) (undo-tree-id11795 . -2095) (undo-tree-id11796 . -1210) (undo-tree-id11797 . -2095) (undo-tree-id11798 . -2095) (undo-tree-id11799 . -1210) (undo-tree-id11800 . -2095) (undo-tree-id11801 . -2095) (undo-tree-id11802 . -1210) (undo-tree-id11803 . -2095) (undo-tree-id11804 . -2095) (undo-tree-id11805 . -1210) (undo-tree-id11806 . -2095) (undo-tree-id11807 . -2095) (undo-tree-id11808 . -1210) (undo-tree-id11809 . -2095) (undo-tree-id11810 . -2095) (undo-tree-id11811 . -1210) (undo-tree-id11812 . -2095) (undo-tree-id11813 . -2095) (undo-tree-id11814 . -1210) (undo-tree-id11815 . -2095) (undo-tree-id11816 . -2095) (undo-tree-id11817 . -1210) (undo-tree-id11818 . -2095) (undo-tree-id11819 . -2095) (undo-tree-id11820 . -1210) (undo-tree-id11821 . -2095) (undo-tree-id11822 . -2095) (undo-tree-id11823 . -1210) (undo-tree-id11824 . -2095) (undo-tree-id11825 . -2095) (undo-tree-id11826 . -1210) (undo-tree-id11827 . -2095) (undo-tree-id11828 . -2095) (undo-tree-id11829 . -1210) (undo-tree-id11830 . -2095) (undo-tree-id11831 . -2095) (undo-tree-id11832 . -1210) (undo-tree-id11833 . -2095) (undo-tree-id11834 . -2095) (undo-tree-id11835 . -1210) (undo-tree-id11836 . -2095) (undo-tree-id11837 . -2095) (undo-tree-id11838 . -1210) (undo-tree-id11839 . -2095) (undo-tree-id11840 . -2095) (undo-tree-id11841 . -1210) (undo-tree-id11842 . -2095) (undo-tree-id11843 . -2095) (undo-tree-id11844 . -1210) (undo-tree-id11845 . -2095) (undo-tree-id11846 . -2095) (undo-tree-id11847 . -1210) (undo-tree-id11848 . -2095) (undo-tree-id11849 . -2095) (undo-tree-id11850 . -1210) (undo-tree-id11851 . -2095) (undo-tree-id11852 . -2095) (undo-tree-id11853 . -1210) (undo-tree-id11854 . -2095) (undo-tree-id11855 . -2095) (undo-tree-id11856 . -1210) (undo-tree-id11857 . -2095) (undo-tree-id11858 . -2095) (undo-tree-id11859 . -1210) (undo-tree-id11860 . -2095) (undo-tree-id11861 . -2095) (undo-tree-id11862 . -1210) (undo-tree-id11863 . -2095) (undo-tree-id11864 . -2095) (undo-tree-id11865 . -1210) (undo-tree-id11866 . -2095) (undo-tree-id11867 . -2095) (undo-tree-id11868 . -1210) (undo-tree-id11869 . -2095) (undo-tree-id11870 . -2095) (undo-tree-id11871 . -1210) (undo-tree-id11872 . -2095) (undo-tree-id11873 . -2095) (undo-tree-id11874 . -1210) (undo-tree-id11875 . -2095) (undo-tree-id11876 . -2095) (undo-tree-id11877 . -1210) (undo-tree-id11878 . -2095) (undo-tree-id11879 . -2095) (undo-tree-id11880 . -2095) (undo-tree-id11881 . -2095) (undo-tree-id11882 . -2095) (undo-tree-id11883 . -2095) (undo-tree-id11884 . -2095) (undo-tree-id11885 . -1210) (undo-tree-id11886 . -2095) (undo-tree-id11887 . -2095) (undo-tree-id11888 . -1210) (undo-tree-id11889 . -2095) (undo-tree-id11890 . -2095) (undo-tree-id11891 . -1210) (undo-tree-id11892 . -2095) (undo-tree-id11893 . -2095) (undo-tree-id11894 . -1210) (undo-tree-id11895 . -2095) (undo-tree-id11896 . -2095) (undo-tree-id11897 . -1210) (undo-tree-id11898 . -2095) (undo-tree-id11899 . -2095) (undo-tree-id11900 . -1210) (undo-tree-id11901 . -2095) (undo-tree-id11902 . -2095) (undo-tree-id11903 . -2095) (undo-tree-id11904 . -2095) (undo-tree-id11905 . -2095) (undo-tree-id11906 . -2095) (undo-tree-id11907 . -2095) (undo-tree-id11908 . -1210) (undo-tree-id11909 . -2095) (undo-tree-id11910 . -2095) (undo-tree-id11911 . -2095) (undo-tree-id11912 . -2095) (undo-tree-id11913 . -2095) (undo-tree-id11914 . -2095) (undo-tree-id11915 . -2095) (undo-tree-id11916 . -1210) (undo-tree-id11917 . -2095) (undo-tree-id11918 . -2095) (undo-tree-id11919 . -2095) (undo-tree-id11920 . -2095) (undo-tree-id11921 . -2095) (undo-tree-id11922 . -2095) (undo-tree-id11923 . -2095) (undo-tree-id11924 . -1210) (undo-tree-id11925 . -2095) (undo-tree-id11926 . -2095) (undo-tree-id11927 . -2095) (undo-tree-id11928 . -2095) (undo-tree-id11929 . -2095) (undo-tree-id11930 . -2095) (undo-tree-id11931 . -2095) (undo-tree-id11932 . -2095) (undo-tree-id11933 . -2095) (undo-tree-id11934 . -2095) (undo-tree-id11935 . -2095) (undo-tree-id11936 . -2095) (undo-tree-id11937 . -1210) (undo-tree-id11938 . -2095) (undo-tree-id11939 . -2095) (undo-tree-id11940 . -2095) (undo-tree-id11941 . -2095) (undo-tree-id11942 . -2095) (undo-tree-id11943 . -2095) (undo-tree-id11944 . -2095) (undo-tree-id11945 . -1210) (undo-tree-id11946 . -2095) (undo-tree-id11947 . -2095) (undo-tree-id11948 . -2095) (undo-tree-id11949 . -2095) (undo-tree-id11950 . -2095) (undo-tree-id11951 . -2095) (undo-tree-id11952 . -2095) (undo-tree-id11953 . -1210) (undo-tree-id11954 . -2095) (undo-tree-id11955 . -2095) (undo-tree-id11956 . -2095) (undo-tree-id11957 . -2095) (undo-tree-id11958 . -2095) (undo-tree-id11959 . -2095) (undo-tree-id11960 . -2095) (undo-tree-id11961 . -1210) (undo-tree-id11962 . -2095) (undo-tree-id11963 . -2095) (undo-tree-id11964 . -2095) (undo-tree-id11965 . -2095) (undo-tree-id11966 . -2095) (undo-tree-id11967 . -2095) (undo-tree-id11968 . -2095) (undo-tree-id11969 . -1210) (undo-tree-id11970 . -2095) (undo-tree-id11971 . -2095) (undo-tree-id11972 . -2095) (undo-tree-id11973 . -2095) (undo-tree-id11974 . -2095) (undo-tree-id11975 . -2095) (undo-tree-id11976 . -2095) (undo-tree-id11977 . -1210) (undo-tree-id11978 . -2095) (undo-tree-id11979 . -2095) (undo-tree-id11980 . -2095) (undo-tree-id11981 . -2095) (undo-tree-id11982 . -2095) (undo-tree-id11983 . -2095) (undo-tree-id11984 . -2095) (undo-tree-id11985 . -1210) (undo-tree-id11986 . -2095) (undo-tree-id11987 . -2095) (undo-tree-id11988 . -1210) (undo-tree-id11989 . -2095) (undo-tree-id11990 . -2095) (undo-tree-id11991 . -2095) (undo-tree-id11992 . -2095) (undo-tree-id11993 . -2095) (undo-tree-id11994 . -2095) (undo-tree-id11995 . -2095) (undo-tree-id11996 . -1210) (undo-tree-id11997 . -2095) (undo-tree-id11998 . -2095) (undo-tree-id11999 . -2095) (undo-tree-id12000 . -2095) (undo-tree-id12001 . -2095) (undo-tree-id12002 . -2095) (undo-tree-id12003 . -2095) (undo-tree-id12004 . -1210) (undo-tree-id12005 . -2095) (undo-tree-id12006 . -2095) (undo-tree-id12007 . -2095) (undo-tree-id12008 . -2095) (undo-tree-id12009 . -2095) (undo-tree-id12010 . -2095) (undo-tree-id12011 . -2095) (undo-tree-id12012 . -1210) (undo-tree-id12013 . -2095) (undo-tree-id12014 . -2095) (undo-tree-id12015 . -2095) (undo-tree-id12016 . -2095) (undo-tree-id12017 . -2095) (undo-tree-id12018 . -2095) (undo-tree-id12019 . -2095) (undo-tree-id12020 . -1210) (undo-tree-id12021 . -2095) (undo-tree-id12022 . -2095) (undo-tree-id12023 . -2095) (undo-tree-id12024 . -2095) (undo-tree-id12025 . -2095) (undo-tree-id12026 . -2095) (undo-tree-id12027 . -2095) (undo-tree-id12028 . -1210) (undo-tree-id12029 . -2095) (undo-tree-id12030 . -2095) (undo-tree-id12031 . -2095) (undo-tree-id12032 . -2095) (undo-tree-id12033 . -2095) (undo-tree-id12034 . -2095) (undo-tree-id12035 . -2095) (undo-tree-id12036 . -1210) (undo-tree-id12037 . -2095) (undo-tree-id12038 . -2095) (undo-tree-id12039 . -2095) (undo-tree-id12040 . -2095) (undo-tree-id12041 . -2095) (undo-tree-id12042 . -2095) (undo-tree-id12043 . -2095) (undo-tree-id12044 . -1210) (undo-tree-id12045 . -2095) (undo-tree-id12046 . -2095) (undo-tree-id12047 . -2095) (undo-tree-id12048 . -2095) (undo-tree-id12049 . -2095) (undo-tree-id12050 . -2095) (undo-tree-id12051 . -2095) (undo-tree-id12052 . -1210) (undo-tree-id12053 . -2095) (undo-tree-id12054 . -2095) (undo-tree-id12055 . -2095) (undo-tree-id12056 . -2095) (undo-tree-id12057 . -2095) (undo-tree-id12058 . -2095) (undo-tree-id12059 . -2095) (undo-tree-id12060 . -1210) (undo-tree-id12061 . -2095) (undo-tree-id12062 . -2095) (undo-tree-id12063 . -2095) (undo-tree-id12064 . -2095) (undo-tree-id12065 . -2095) (undo-tree-id12066 . -2095) (undo-tree-id12067 . -2095) (undo-tree-id12068 . -1210) (undo-tree-id12069 . -2095) (undo-tree-id12070 . -2095) (undo-tree-id12071 . -2095) (undo-tree-id12072 . -2095) (undo-tree-id12073 . -2095) (undo-tree-id12074 . -2095) (undo-tree-id12075 . -2095) (undo-tree-id12076 . -1210) (undo-tree-id12077 . -2095) (undo-tree-id12078 . -2095) (undo-tree-id12079 . -2095) (undo-tree-id12080 . -2095) (undo-tree-id12081 . -2095) (undo-tree-id12082 . -2095) (undo-tree-id12083 . -2095) (undo-tree-id12084 . -1210) (undo-tree-id12085 . -2095) (undo-tree-id12086 . -2095) (undo-tree-id12087 . -2095) (undo-tree-id12088 . -2095) (undo-tree-id12089 . -2095) (undo-tree-id12090 . -2095) (undo-tree-id12091 . -2095) (undo-tree-id12092 . -1210) (undo-tree-id12093 . -2095) (undo-tree-id12094 . -2095) (undo-tree-id12095 . -2095) (undo-tree-id12096 . -2095) (undo-tree-id12097 . -2095) (undo-tree-id12098 . -2095) (undo-tree-id12099 . -2095) (undo-tree-id12100 . -1210) (undo-tree-id12101 . -2095) (undo-tree-id12102 . -2095) (undo-tree-id12103 . -2095) (undo-tree-id12104 . -2095) (undo-tree-id12105 . -2095) (undo-tree-id12106 . -2095) (undo-tree-id12107 . -2095) (undo-tree-id12108 . -1210) (undo-tree-id12109 . -2095) (undo-tree-id12110 . -2095) (undo-tree-id12111 . -2095) (undo-tree-id12112 . -2095) (undo-tree-id12113 . -2095) (undo-tree-id12114 . -2095) (undo-tree-id12115 . -2095) (undo-tree-id12116 . -1210) (undo-tree-id12117 . -2095) (undo-tree-id12118 . -2095) (undo-tree-id12119 . -2095) (undo-tree-id12120 . -2095) (undo-tree-id12121 . -2095) (undo-tree-id12122 . -2095) (undo-tree-id12123 . -2095) (undo-tree-id12124 . -1210) (undo-tree-id12125 . -2095) (undo-tree-id12126 . -2095) (undo-tree-id12127 . -2095) (undo-tree-id12128 . -2095) (undo-tree-id12129 . -2095) (undo-tree-id12130 . -2095) (undo-tree-id12131 . -2095) (undo-tree-id12132 . -1210) (undo-tree-id12133 . -2095) (undo-tree-id12134 . -2095) (undo-tree-id12135 . -2095) (undo-tree-id12136 . -2095) (undo-tree-id12137 . -2095) (undo-tree-id12138 . -2095) (undo-tree-id12139 . -2095) (undo-tree-id12140 . -1210) (undo-tree-id12141 . -2095) (undo-tree-id12142 . -2095) (undo-tree-id12143 . -2095) (undo-tree-id12144 . -2095) (undo-tree-id12145 . -2095) (undo-tree-id12146 . -2095) (undo-tree-id12147 . -2095) (undo-tree-id12148 . -1210) (undo-tree-id12149 . -2095) (undo-tree-id12150 . -2095) (undo-tree-id12151 . -2095) (undo-tree-id12152 . -2095) (undo-tree-id12153 . -2095) (undo-tree-id12154 . -2095) (undo-tree-id12155 . -2095) (undo-tree-id12156 . -1210) (undo-tree-id12157 . -2095) (undo-tree-id12158 . -2095) (undo-tree-id12159 . -2095) (undo-tree-id12160 . -2095) (undo-tree-id12161 . -2095) (undo-tree-id12162 . -2095) (undo-tree-id12163 . -2095) (undo-tree-id12164 . -1210) (undo-tree-id12165 . -2095) (undo-tree-id12166 . -2095) (undo-tree-id12167 . -2095) (undo-tree-id12168 . -2095) (undo-tree-id12169 . -2095) (undo-tree-id12170 . -2095) (undo-tree-id12171 . -2095) (undo-tree-id12172 . -1210) (undo-tree-id12173 . -2095) (undo-tree-id12174 . -2095) (undo-tree-id12175 . -2095) (undo-tree-id12176 . -2095) (undo-tree-id12177 . -2095) (undo-tree-id12178 . -2095) (undo-tree-id12179 . -2095) (undo-tree-id12180 . -2095) (undo-tree-id12181 . -2095) (undo-tree-id12182 . -2095) (undo-tree-id12183 . -2095) (undo-tree-id12184 . -2095) (undo-tree-id12185 . -2095) (undo-tree-id12186 . -2095) (undo-tree-id12187 . -2095) (undo-tree-id12188 . -2095) (undo-tree-id12189 . -2095) (undo-tree-id12190 . -2095) (undo-tree-id12191 . -2095) (undo-tree-id12192 . -2095) (undo-tree-id12193 . -2095) (undo-tree-id12194 . -2095) (undo-tree-id12195 . -2095) (undo-tree-id12196 . -2095) (undo-tree-id12197 . -2095) (undo-tree-id12198 . -2095) (undo-tree-id12199 . -2095) (undo-tree-id12200 . -2095) (undo-tree-id12201 . -2095) (undo-tree-id12202 . -2095) (undo-tree-id12203 . -2095) (undo-tree-id12204 . -2095) (undo-tree-id12205 . -2095) (undo-tree-id12206 . -2095) (undo-tree-id12207 . -2095) (undo-tree-id12208 . -2095) (undo-tree-id12209 . -2095) (undo-tree-id12210 . -1210) (undo-tree-id12211 . -2095) (undo-tree-id12212 . -2095) (undo-tree-id12213 . -1210) (undo-tree-id12214 . -2095) (undo-tree-id12215 . -2095) (undo-tree-id12216 . -2095) (undo-tree-id12217 . -2095) (undo-tree-id12218 . -2095) (undo-tree-id12219 . -2095) (undo-tree-id12220 . -2095) (undo-tree-id12221 . -2095) (undo-tree-id12222 . -2095) (undo-tree-id12223 . -2095) (undo-tree-id12224 . -2095) (undo-tree-id12225 . -2095) (undo-tree-id12226 . -1210) (undo-tree-id12227 . -2095) (undo-tree-id12228 . -2095) (undo-tree-id12229 . -1210) (undo-tree-id12230 . -2095) (undo-tree-id12231 . -2095) (undo-tree-id12232 . -2095) (undo-tree-id12233 . -2095) (undo-tree-id12234 . -2095) (undo-tree-id12235 . -2095) (undo-tree-id12236 . -2095) (undo-tree-id12237 . -2095) (undo-tree-id12238 . -1210) (undo-tree-id12239 . -2095) (undo-tree-id12240 . -2095) (undo-tree-id12241 . -1210) (undo-tree-id12242 . -2095) (undo-tree-id12243 . -2095) (undo-tree-id12244 . -2095) (undo-tree-id12245 . -2095) (undo-tree-id12246 . -2095) (undo-tree-id12247 . -2095) 56530) nil (25151 36736 676710 68000) 0 nil])
([nil nil ((54435 . 66100) (#("
     ;; -- *ZETTELDESK-SCRATCH* --
     ;; This is the section where it all comes together. The
     ;; zetteldesk-scratch buffer is a special buffer defined here on which
     ;; you drop all your stuff. Its what molds the whole workflow together

     (defcustom zetteldesk-map (make-sparse-keymap)
       \"This variable is the keymap for `zetteldesk-mode'.\"
       :type 'keymap
       :group 'zetteldesk)

     (defcustom zetteldesk-insert-scratch-or-current-buffer t
       \"Customization variable.
     Decides whethere zetteldesk-insert functions will insert to the
     ,*zetteldesk-scratch* buffer or the current buffer.  Default value
     is t which makes those functions insert to the scratch.  Setting
     it to nil will make those functions insert to the current buffer,
     for whichever usecase you might want\"
       :type 'string
       :group 'zetteldesk)

     (define-minor-mode zetteldesk-mode
       \"Toggles the global zetteldesk-mode.

     When turned on, this mode initialises the *zetteldesk-scratch*
     buffer, a useful part of the whole zetteldesk workflow.\"
       nil
       :global t
       :group 'zetteldesk
       :keymap zetteldesk-map
       :lighter \" zetteldesk\")

     (defun zetteldesk--create-scratch-buffer ()
       \"Create the zetteldesk-scratch buffer and put it in `org-mode'.\"
       (let ((buffer (generate-new-buffer \"*zetteldesk-scratch*\"))
	     (org-startup-with-latex-preview nil))
	 (with-current-buffer buffer
	   (org-mode))))

     (add-hook 'zetteldesk-mode-on-hook 'zetteldesk--create-scratch-buffer)

     (defmacro zetteldesk-insert-location ()
       \"Find the location the zetteldesk-insert functions should insert to.

     The decision is made depending on the variable
     `zetteldesk-insert-scratch-or-current-buffer'.  Check its
     docstring for more info.  This is used in all zetteldesk-insert
     functions to decide if the insertion should happen in
     ,*zetteldesk-scratch or the current buffer.\"
       `(if zetteldesk-insert-scratch-or-current-buffer
		       \"*zetteldesk-scratch*\"
		     (current-buffer)))

     (defmacro zetteldesk-insert-switch-to-scratch (arg)
       \"Switch to the *zetteldesk-scratch* if ARG is the `\\\\[universal-argument]'.

     All the zetteldesk-insert functions have a similar logic of
     switching to the *zetteldesk-scratch* buffer in a split if given
     a `\\\\[universal-argument]'.  To avoid repetition, this macro
     expands to the needed code.\"
       `(when (equal ,arg '(4))
	  (switch-to-buffer-other-window \"*zetteldesk-scratch*\")))

     (defun zetteldesk-switch-to-scratch-buffer (&optional arg)
       \"Open the zetteldesk-scratch buffer in a split with the current buffer.

     Optionally, if given optional argument ARG, which needs to be the
     `\\\\[universal-argument]' switch to the *zetteldesk-scratch*
     buffer without issuing a split.\"
       (interactive \"P\")
       (if (equal arg '(4))
	   (switch-to-buffer \"*zetteldesk-scratch*\")
	 (switch-to-buffer-other-window \"*zetteldesk-scratch*\")))

     (defun zetteldesk-node-insert-if-poi-or-moc ()
       \"Filter `org-roam-node-list' to show zetteldesk-nodes only.
     Then filter that to only those that have the POI or MOC tag with
     `zetteldesk-node-p' and `org-roam-node-poi-or-moc-p'.  Then
     insert a link to every one of those nodes and seperate them with
     commas\"
       (interactive)
       (let* ((init_list (org-roam-node-list))
	      (zetteldesk_nodes (cl-remove-if-not #'zetteldesk-node-p init_list))
	      (nodes_poi (cl-remove-if-not #'org-roam-node-poi-or-moc-p zetteldesk_nodes)))
	 (while nodes_poi
	   (let* ((node (car nodes_poi))
		  (description (org-roam-node-formatted (car nodes_poi))))
	     (insert (org-link-make-string
		      (concat \"id:\" (org-roam-node-id (car nodes_poi)))
		      description))
	     (insert \", \"))
	   (setq nodes_poi (cdr nodes_poi)))))

     (defun zetteldesk-insert-node-contents (&optional arg)
       \"Select a node that is part of the current `zetteldesk'.
     Add a link to it at point and then insert its contents to the
     bottom of the *zetteldesk-scratch* buffer after inserting a
     newline there.  Remove the first 67 characters which is the
     properties section if it only contains the ID of the node as its
     unneeded and change the string #+title to a top level heading as
     its more practical when inserting the contents of multiple files.

     If given the optional argument ARG, which needs to be the
     `\\\\[universal-argument]' also switch to the *zetteldesk-scratch*
     buffer in a split.\"
       (interactive \"P\")
       (let* ((node (org-roam-node-read nil #'zetteldesk-node-p))
	      (file (org-roam-node-file node))
	      (description (org-roam-node-formatted node))
	      (location (zetteldesk-insert-location)))
	 (insert (org-link-make-string
		  (concat \"id:\" (org-roam-node-id node))
		  description))
	 (with-current-buffer location
	   (goto-char (point-max))
	   (newline)
	   (insert-file-contents file nil 67)
	   (replace-string \"#+title: \" \"* \")))
       (when (equal arg '(4))
	 (save-current-buffer
	   (switch-to-buffer-other-window \"*zetteldesk-scratch*\"))))

     (defun zetteldesk-insert-node-contents-without-link ()
       \"\\\"Sister function\\\" of `zetteldesk-insert-node-contents'.
     Finds a node that is part of the `zetteldesk' and inserts its
     contents to the bottom of the zetteldesk-scratch buffer. This
     function differentiates itself, by the fact that it doesn't
     insert an ID link to the node in the current buffer and by the
     fact that it switches to the scratch buffer in a split without
     needing a `\\\\[universal-argument]'.

     For me, it makes sense a lot of the time to insert a link to the
     node inthe current buffer, especially if its an outlining
     buffer. But sometimes its not handy, and so, I just made this
     second iteration to fix that issue.\"
       (interactive)
       (let* ((node (org-roam-node-read nil #'zetteldesk-node-p))
	      (location (zetteldesk-insert-location))
	      (file (org-roam-node-file node)))
	 (with-current-buffer location
	   (goto-char (point-max))
	   (newline)
	   (insert-file-contents file nil 67)
	   (replace-string \"#+title: \" \"* \")))
       (switch-to-buffer-other-window \"*zetteldesk-scratch*\"))

     (defun zetteldesk-insert-org-file-contents (&optional arg)
       \"Select an org buffer that is in the `zetteldesk'.
     Insert its contents to the *zetteldesk-scratch* buffer, make its
      title a top level heading and demote all of its headings by one
      level (since the title now acts as a top level heading).  Note
      that org-roam nodes are not shown

     Optional argument ARG, if given needs to be a
     `\\\\[universal-argument]' and it switches to the *zetteldesk-scratch*
     buffer in a split\"
       (interactive \"P\")
       (let* ((buffer (set-buffer (read-buffer \"Zetteldesk Buffers: \" nil nil #'zetteldesk-org-buffer-p)))
	      (location (zetteldesk-insert-location))
	      (file (buffer-file-name buffer)))
	 (set-buffer location)
	 (goto-char (point-max))
	 (save-excursion
	   (newline)
	   (insert-file-contents file))
	 (save-excursion
	   (while (not (org-next-visible-heading 1))
	     (org-metaright)))
	 (replace-string \"#+title: \" \"* \"))
       (when (equal arg '(4))
	 (switch-to-buffer-other-window \"*zetteldesk-scratch*\")))

     (defun zetteldesk-insert-link-to-pdf (&optional arg)
       \"Select a pdf file that is part of the `zetteldesk'.
     Prompt for a page in that pdf (defaults to page 1 if you don't
     care about the page).

     Then, in the zetteldesk-scratch buffer, insert at `point-max' a
     newline and then a new heading with its name consisting of the
     string \\\"Supportive Material - \\\" then the pdfs name, without the
     file structure or the extension and then the string
     \\\"(PDF)\\\".  Then, insert a newline, the string \\\"Link to PDF: \\\"
     and then a link to the chosen pdf, in the correct page, with the
     description being the pdfs name without the file structure or the
     extension.  Note that `org-pdftools-setup-link' needs to be run
     for pdf links to work (which this uses).

     Optionally, if given optional argument ARG which is the
     `\\\\[universal-argument]' save the highlighted region in a
     variable and insert it after the heading but before the pdf link.
     This functionality serves the purpose of adding a \\\"description\\\"
     sort of thing to the pdf. Typically, when citing a pdf as
     supplementary info to an argument, there is something specific
     you want to take from the pdf. Therefore, this optional addition,
     adds that to the scratch buffer so you remember why it was
     useful.\"
       (interactive \"P\")
       (let* ((pdf-buffer (set-buffer (read-buffer \"Zetteldesk Pdfs: \" nil nil #'zetteldesk-pdf-p)))
	      (file (buffer-file-name pdf-buffer))
	      (location (zetteldesk-insert-location))
	      (page (read-from-minibuffer \"Page: \" \"1\"))
	      (description (file-name-nondirectory (file-name-sans-extension file))))
	 (with-current-buffer location
	   (goto-char (point-max))
	   (newline)
	   (org-insert-heading)
	   (insert \"Supportive Material - \" description \" (PDF)\")
	   (newline)
	   (when (equal arg '(4))
	     (let ((contents (buffer-substring (mark) (point))))
	       (insert contents)
	       (newline)))
	   (insert \"Link to PDF: \"
		   (org-link-make-string
		    (concat \"pdf:\" file \"::\" page)
		    description)))))

     (defun zetteldesk-insert-info-contents (&optional arg)
       \"Select an info node that is part of the current `zetteldesk'.
     Uses a `completing-read' prompt for the selection.

     Then, in the *zetteldesk-scratch* buffer, go to the end of the
     buffer, insert a newline and a heading of the form \\\"Supportive
     Material - \\\" the node's name \\\"(Info)\\\" akin to what is done in
     `zetteldesk-insert-link-to-pdf'.  Then, insert the contents of the
     chosen info node, removing the first 2 lines which have the
     contextual links of the buffer, as they are not functional
     outside of the info buffer.  Also insert a link with the title
     \\\"See this node in its context\\\" which opens the node inside the
     info program. Finally, restore the buffer from which this
     function was called. Ideally, this wouldn't require a
     switch-to-buffer statement, but the function `Info-goto-node'
     used for this function switches the visible buffer to the info
     node and I couldn't find an alternative that only makes it
     current for editing operations, but doesn't change the visible
     buffer to it.

     I find the link to the actual info buffer is useful as a lot of
     the time, you might want to insert the buffer so you can store it
     with other useful information inside the zetteldesk-scratch
     buffer, but then, you are interested in looking into the other
     nodes of the manual you were reading.

     Optional argument ARG which is a `\\\\[universal-argument]' switch to the
     zetteldesk-scratch buffer in a split.\"
       (interactive \"P\")
       (let ((info_node (completing-read \"Nodes: \" zetteldesk-info-nodes))
	     (location (zetteldesk-insert-location))
	     (buffer (current-buffer)))
	 (Info-goto-node info_node)
	 (with-current-buffer location
	   (goto-char (point-max))
	   (newline)
	   (org-insert-heading)
	   (insert \"Supportive Material - \" info_node \" (Info)\")
	   (newline)
	   (save-excursion (insert-buffer-substring \"*info*\")
			   (insert
			    (org-link-make-string
			     (concat \"elisp:(Info-goto-node \\\"\" info_node \"\\\")\")
			     \"See this node in its context\")))
	   (kill-whole-line 2))
	 (switch-to-buffer buffer)
	 (when (equal arg '(4))
	   (switch-to-buffer-other-window \"*zetteldesk-scratch*\"))))

" 0 6 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6 9 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 9 12 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 12 13 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-comment-face org-block) help-echo nil src-block t) 13 31 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-comment-face org-block) help-echo nil src-block t) 31 32 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-comment-face org-block) help-echo nil src-block t) 32 36 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 36 41 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 41 44 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 44 97 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 97 102 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 102 105 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 105 173 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 173 178 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 178 181 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 181 249 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 249 256 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 256 265 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 265 266 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 266 280 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-variable-name-face org-block) help-echo nil src-block t) 280 309 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 309 343 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 343 358 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 358 361 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 361 369 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 369 374 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 374 390 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 390 396 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 396 417 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 417 426 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 426 427 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 427 470 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-variable-name-face org-block) help-echo nil src-block t) 470 480 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 480 500 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 500 829 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 829 837 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 837 842 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 842 858 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 858 864 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 864 885 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 885 902 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 902 903 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 903 918 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 918 926 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 926 1093 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1093 1112 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1112 1119 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 1119 1129 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1129 1135 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 1135 1155 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1155 1162 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 1162 1185 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1185 1193 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 1193 1194 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1194 1207 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 1207 1216 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1216 1221 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1221 1222 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1222 1255 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 1255 1266 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1266 1319 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1319 1327 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 1327 1330 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1330 1339 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1339 1342 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1342 1373 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1373 1395 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 1395 1445 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1445 1464 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1464 1574 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1574 1582 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1582 1583 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1583 1609 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 1609 1620 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1620 1748 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1748 1791 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 1791 1982 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1982 1992 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1992 1994 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1994 2048 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2048 2070 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 2070 2104 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2104 2112 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2112 2113 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2113 2148 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 2148 2162 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2162 2216 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 2216 2234 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 2234 2385 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 2385 2403 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 2403 2473 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 2473 2483 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2483 2487 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2487 2540 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2540 2562 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 2562 2573 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2573 2578 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2578 2579 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2579 2614 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 2614 2616 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2616 2625 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-type-face org-block) help-echo nil src-block t) 2625 2638 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2638 2791 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 2791 2809 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 2809 2884 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 2884 2893 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2893 2904 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2904 2905 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2905 2908 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 2908 2918 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2918 2920 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2920 2960 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2960 2982 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 2982 3017 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3017 3039 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 3039 3050 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3050 3055 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3055 3056 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3056 3092 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 3092 3103 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3103 3112 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 3112 3130 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 3130 3239 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 3239 3256 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 3256 3263 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 3263 3289 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 3289 3380 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 3380 3389 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3389 3400 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3400 3410 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3410 3414 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3414 3612 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3612 3617 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3617 3633 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3633 3637 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3637 3775 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3775 3780 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 3780 3853 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3853 3857 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 3857 3865 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3865 3869 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3869 3907 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3907 3912 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3912 3913 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3913 3944 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 3944 3946 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3946 3955 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-type-face org-block) help-echo nil src-block t) 3955 3968 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3968 4012 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 4012 4022 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 4022 4506 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 4506 4524 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 4524 4591 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 4591 4600 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4600 4611 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 4611 4612 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4612 4615 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 4615 4625 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4625 4629 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 4629 4793 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4793 4819 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 4819 4867 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4867 4872 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 4872 4919 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4919 4938 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 4938 5049 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5049 5060 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 5060 5061 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5061 5065 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 5065 5077 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5077 5081 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 5081 5102 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5102 5121 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 5121 5157 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5157 5179 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 5179 5191 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5191 5196 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 5196 5197 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5197 5241 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 5241 5252 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5252 5277 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 5277 5308 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 5308 5350 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 5350 5360 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 5360 5665 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 5665 5683 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 5683 5929 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 5929 5938 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5938 5949 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 5949 5959 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5959 5963 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 5963 6035 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6035 6061 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 6061 6108 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6108 6127 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 6127 6238 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6238 6249 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 6249 6250 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6250 6254 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 6254 6296 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6296 6318 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 6318 6328 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6328 6333 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 6333 6334 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6334 6369 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 6369 6371 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6371 6380 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-type-face org-block) help-echo nil src-block t) 6380 6393 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6393 6431 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 6431 6441 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 6441 6754 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 6754 6772 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 6772 6842 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 6842 6851 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6851 6862 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 6862 6863 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6863 6866 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 6866 6876 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6876 6880 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 6880 6915 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6915 6937 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 6937 6993 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6993 7019 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 7019 7116 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 7116 7130 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 7130 7181 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 7181 7195 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 7195 7201 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 7201 7206 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 7206 7284 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 7284 7295 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 7295 7296 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 7296 7300 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 7300 7311 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 7311 7315 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 7315 7366 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 7366 7388 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 7388 7399 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 7399 7404 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 7404 7405 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 7405 7434 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 7434 7436 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 7436 7445 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-type-face org-block) help-echo nil src-block t) 7445 7458 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 7458 7498 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 7498 7508 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 7508 7604 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 7604 7605 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo "Hidden behind deeper element; move to another line?" src-block t) 7605 7663 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 7663 7672 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 7672 8111 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 8111 8134 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 8134 8269 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 8269 8287 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 8287 8744 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 8744 8753 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8753 8764 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 8764 8765 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8765 8768 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 8768 8778 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8778 8782 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 8782 8821 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8821 8840 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 8840 8933 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8933 8959 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 8959 8997 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8997 9005 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 9005 9006 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 9006 9009 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 9009 9094 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 9094 9113 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 9113 9202 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 9202 9226 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 9226 9239 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 9239 9247 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 9247 9268 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 9268 9272 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 9272 9297 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 9297 9300 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 9300 9406 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 9406 9421 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 9421 9463 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 9463 9469 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 9469 9475 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 9475 9479 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 9479 9516 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 9516 9521 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 9521 9522 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 9522 9553 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 9553 9555 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 9555 9564 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-type-face org-block) help-echo nil src-block t) 9564 9577 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 9577 9627 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 9627 9637 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 9637 9653 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 9653 9668 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 9668 9910 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 9910 9939 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 9939 10416 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 10416 10430 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 10430 11011 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 11011 11029 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 11029 11089 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 11089 11098 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 11098 11109 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 11109 11110 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 11110 11113 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 11113 11123 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 11123 11126 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 11126 11156 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 11156 11165 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 11165 11207 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 11207 11233 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 11233 11301 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 11301 11320 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 11320 11409 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 11409 11433 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 11433 11444 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 11444 11453 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 11453 11474 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 11474 11488 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 11488 11514 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 11514 11522 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 11522 11583 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 11583 11609 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 11609 11620 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 11620 11625 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 11625 11635 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 11635 11665 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 11665 11725 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 11725 11729 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 11729 11782 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 11782 11804 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 11804 11810 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 54435) (undo-tree-id12417 . -2565) (undo-tree-id12418 . -1148) (undo-tree-id12419 . -2782) (undo-tree-id12420 . -2782) (undo-tree-id12421 . -2782) (undo-tree-id12422 . -1148) (undo-tree-id12423 . -1491) (undo-tree-id12424 . -2564) (undo-tree-id12425 . -2564) (undo-tree-id12426 . -2782) (undo-tree-id12427 . -2782) (undo-tree-id12428 . -1148) (undo-tree-id12429 . -2564) (undo-tree-id12430 . -2564) (undo-tree-id12431 . -1491) (undo-tree-id12432 . -2564) (undo-tree-id12433 . -2564) (undo-tree-id12434 . -1491) (undo-tree-id12435 . -2564) (undo-tree-id12436 . -2564) (undo-tree-id12437 . -2564) (undo-tree-id12438 . -2564) (undo-tree-id12439 . -2564) (undo-tree-id12440 . -2564) (undo-tree-id12441 . -2564) (undo-tree-id12442 . -2564) (undo-tree-id12443 . -2564) (undo-tree-id12444 . -2564) (undo-tree-id12445 . -2564) (undo-tree-id12446 . -2564) (undo-tree-id12447 . -2564) (undo-tree-id12448 . -2564) (undo-tree-id12449 . -2564) (undo-tree-id12450 . -2564) (undo-tree-id12451 . -2564) (undo-tree-id12452 . -2564) (undo-tree-id12453 . -2564) (undo-tree-id12454 . -2564) (undo-tree-id12455 . -2564) (undo-tree-id12456 . -2564) (undo-tree-id12457 . -2564) (undo-tree-id12458 . -2564) (undo-tree-id12459 . -2564) (undo-tree-id12460 . -2564) (undo-tree-id12461 . -2564) (undo-tree-id12462 . -2564) (undo-tree-id12463 . -2564) (undo-tree-id12464 . -2564) (undo-tree-id12465 . -2564) (undo-tree-id12466 . -1491) (undo-tree-id12467 . -1148) (undo-tree-id12468 . -2564) (undo-tree-id12469 . -2564) (undo-tree-id12470 . -2564) (undo-tree-id12471 . -1491) (undo-tree-id12472 . -2564) (undo-tree-id12473 . -2564) (undo-tree-id12474 . -2564) (undo-tree-id12475 . -2564) (undo-tree-id12476 . -2564) (undo-tree-id12477 . -2564) (undo-tree-id12478 . -2564) (undo-tree-id12479 . -2564) (undo-tree-id12480 . -2564) (undo-tree-id12481 . -2564) (undo-tree-id12482 . -2564) (undo-tree-id12483 . -2564) (undo-tree-id12484 . -2564) (undo-tree-id12485 . -2564) (undo-tree-id12486 . -2564) (undo-tree-id12487 . -2564) (undo-tree-id12488 . -2564) (undo-tree-id12489 . -2564) (undo-tree-id12490 . -2564) (undo-tree-id12491 . -2564) (undo-tree-id12492 . -2564) (undo-tree-id12493 . -2564) (undo-tree-id12494 . -2564) (undo-tree-id12495 . -2564) (undo-tree-id12496 . -2564) (undo-tree-id12497 . -2564) (undo-tree-id12498 . -2564) (undo-tree-id12499 . -1491) (undo-tree-id12500 . -2564) (undo-tree-id12501 . -2564) (undo-tree-id12502 . -2564) (undo-tree-id12503 . -2564) (undo-tree-id12504 . -2564) (undo-tree-id12505 . -2564) (undo-tree-id12506 . -2564) (undo-tree-id12507 . -1491) (undo-tree-id12508 . -2564) (undo-tree-id12509 . -2564) (undo-tree-id12510 . -2564) (undo-tree-id12511 . -2564) (undo-tree-id12512 . -2564) (undo-tree-id12513 . -2564) (undo-tree-id12514 . -2564) (undo-tree-id12515 . -1491) (undo-tree-id12516 . -2564) (undo-tree-id12517 . -2564) (undo-tree-id12518 . -2564) (undo-tree-id12519 . -2564) (undo-tree-id12520 . -2564) (undo-tree-id12521 . -2564) (undo-tree-id12522 . -2564) (undo-tree-id12523 . -1491) (undo-tree-id12524 . -2564) (undo-tree-id12525 . -2564) (undo-tree-id12526 . -2564) (undo-tree-id12527 . -2564) (undo-tree-id12528 . -2564) (undo-tree-id12529 . -2564) (undo-tree-id12530 . -2564) (undo-tree-id12531 . -1491) (undo-tree-id12532 . -2564) (undo-tree-id12533 . -2564) (undo-tree-id12534 . -2564) (undo-tree-id12535 . -2564) (undo-tree-id12536 . -2564) (undo-tree-id12537 . -2564) (undo-tree-id12538 . -2564) (undo-tree-id12539 . -1491) (undo-tree-id12540 . -2564) (undo-tree-id12541 . -2564) (undo-tree-id12542 . -2564) (undo-tree-id12543 . -2564) (undo-tree-id12544 . -2564) (undo-tree-id12545 . -2564) (undo-tree-id12546 . -2564) (undo-tree-id12547 . -1491) (undo-tree-id12548 . -2564) (undo-tree-id12549 . -2564) (undo-tree-id12550 . -2564) (undo-tree-id12551 . -2564) (undo-tree-id12552 . -2564) (undo-tree-id12553 . -2564) (undo-tree-id12554 . -2564) (undo-tree-id12555 . -1491) (undo-tree-id12556 . -2564) (undo-tree-id12557 . -2564) (undo-tree-id12558 . -2564) (undo-tree-id12559 . -2564) (undo-tree-id12560 . -2564) (undo-tree-id12561 . -2564) (undo-tree-id12562 . -2564) (undo-tree-id12563 . -1491) (undo-tree-id12564 . -2564) (undo-tree-id12565 . -2564) (undo-tree-id12566 . -2564) (undo-tree-id12567 . -2564) (undo-tree-id12568 . -2564) (undo-tree-id12569 . -2564) (undo-tree-id12570 . -2564) (undo-tree-id12571 . -1491) (undo-tree-id12572 . -2564) (undo-tree-id12573 . -2564) (undo-tree-id12574 . -2564) (undo-tree-id12575 . -2564) (undo-tree-id12576 . -2564) (undo-tree-id12577 . -2564) (undo-tree-id12578 . -2564) (undo-tree-id12579 . -1491) (undo-tree-id12580 . -2564) (undo-tree-id12581 . -2564) (undo-tree-id12582 . -1491) (undo-tree-id12583 . -2564) (undo-tree-id12584 . -2564) (undo-tree-id12585 . -1491) (undo-tree-id12586 . -2564) (undo-tree-id12587 . -2564) (undo-tree-id12588 . -1491) (undo-tree-id12589 . -2564) (undo-tree-id12590 . -2564) (undo-tree-id12591 . -1491) (undo-tree-id12592 . -2564) (undo-tree-id12593 . -2564) (undo-tree-id12594 . -1491) (undo-tree-id12595 . -2564) (undo-tree-id12596 . -2564) (undo-tree-id12597 . -1491) (undo-tree-id12598 . -2564) (undo-tree-id12599 . -2564) (undo-tree-id12600 . -1491) (undo-tree-id12601 . -2564) (undo-tree-id12602 . -2564) (undo-tree-id12603 . -1491) (undo-tree-id12604 . -2564) (undo-tree-id12605 . -2564) (undo-tree-id12606 . -1491) (undo-tree-id12607 . -2564) (undo-tree-id12608 . -2564) (undo-tree-id12609 . -1491) (undo-tree-id12610 . -2564) (undo-tree-id12611 . -2564) (undo-tree-id12612 . -1491) (undo-tree-id12613 . -2564) (undo-tree-id12614 . -2564) (undo-tree-id12615 . -1491) (undo-tree-id12616 . -2564) (undo-tree-id12617 . -2564) (undo-tree-id12618 . -1491) (undo-tree-id12619 . -2564) (undo-tree-id12620 . -2564) (undo-tree-id12621 . -1491) (undo-tree-id12622 . -2564) (undo-tree-id12623 . -2564) (undo-tree-id12624 . -1491) (undo-tree-id12625 . -2564) (undo-tree-id12626 . -2564) (undo-tree-id12627 . -1491) (undo-tree-id12628 . -2564) (undo-tree-id12629 . -2564) (undo-tree-id12630 . -1491) (undo-tree-id12631 . -2564) (undo-tree-id12632 . -2564) (undo-tree-id12633 . -1491) (undo-tree-id12634 . -2564) (undo-tree-id12635 . -2564) (undo-tree-id12636 . -1491) (undo-tree-id12637 . -2564) (undo-tree-id12638 . -2564) (undo-tree-id12639 . -1491) (undo-tree-id12640 . -2564) (undo-tree-id12641 . -2564) (undo-tree-id12642 . -1491) (undo-tree-id12643 . -2564) (undo-tree-id12644 . -2564) (undo-tree-id12645 . -1491) (undo-tree-id12646 . -2564) (undo-tree-id12647 . -2564) (undo-tree-id12648 . -1491) (undo-tree-id12649 . -2564) (undo-tree-id12650 . -2564) (undo-tree-id12651 . -1491) (undo-tree-id12652 . -2564) (undo-tree-id12653 . -2564) (undo-tree-id12654 . -1491) (undo-tree-id12655 . -2564) (undo-tree-id12656 . -2564) (undo-tree-id12657 . -1491) (undo-tree-id12658 . -2564) (undo-tree-id12659 . -2564) (undo-tree-id12660 . -1491) (undo-tree-id12661 . -2564) (undo-tree-id12662 . -2564) (undo-tree-id12663 . -1491) (undo-tree-id12664 . -2564) (undo-tree-id12665 . -2564) (undo-tree-id12666 . -1491) (undo-tree-id12667 . -2564) (undo-tree-id12668 . -2564) (undo-tree-id12669 . -1491) (undo-tree-id12670 . -2564) (undo-tree-id12671 . -2564) (undo-tree-id12672 . -1491) (undo-tree-id12673 . -2564) (undo-tree-id12674 . -2564) (undo-tree-id12675 . -1491) (undo-tree-id12676 . -2564) (undo-tree-id12677 . -2564) (undo-tree-id12678 . -1491) (undo-tree-id12679 . -2564) (undo-tree-id12680 . -2564) (undo-tree-id12681 . -1491) (undo-tree-id12682 . -2564) (undo-tree-id12683 . -2564) (undo-tree-id12684 . -1491) (undo-tree-id12685 . -2564) (undo-tree-id12686 . -2564) (undo-tree-id12687 . -1491) (undo-tree-id12688 . -2564) (undo-tree-id12689 . -2564) (undo-tree-id12690 . -2564) (undo-tree-id12691 . -2564) (undo-tree-id12692 . -2564) (undo-tree-id12693 . -2564) (undo-tree-id12694 . -2564) (undo-tree-id12695 . -1491) (undo-tree-id12696 . -2564) (undo-tree-id12697 . -2564) (undo-tree-id12698 . -2564) (undo-tree-id12699 . -2564) (undo-tree-id12700 . -2564) (undo-tree-id12701 . -2564) (undo-tree-id12702 . -2564) (undo-tree-id12703 . -1491) (undo-tree-id12704 . -2564) (undo-tree-id12705 . -2564) (undo-tree-id12706 . -2564) (undo-tree-id12707 . -2564) (undo-tree-id12708 . -2564) (undo-tree-id12709 . -2564) (undo-tree-id12710 . -2564) (undo-tree-id12711 . -1491) (undo-tree-id12712 . -2564) (undo-tree-id12713 . -2564) (undo-tree-id12714 . -2564) (undo-tree-id12715 . -2564) (undo-tree-id12716 . -2564) (undo-tree-id12717 . -2564) (undo-tree-id12718 . -2564) (undo-tree-id12719 . -1491) (undo-tree-id12720 . -2564) (undo-tree-id12721 . -2564) (undo-tree-id12722 . -2564) (undo-tree-id12723 . -2564) (undo-tree-id12724 . -2564) (undo-tree-id12725 . -2564) (undo-tree-id12726 . -2564) (undo-tree-id12727 . -1491) (undo-tree-id12728 . -2564) (undo-tree-id12729 . -2564) (undo-tree-id12730 . -2564) (undo-tree-id12731 . -2564) (undo-tree-id12732 . -2564) (undo-tree-id12733 . -2564) (undo-tree-id12734 . -2564) (undo-tree-id12735 . -1491) (undo-tree-id12736 . -2564) (undo-tree-id12737 . -2564) (undo-tree-id12738 . -2564) (undo-tree-id12739 . -2564) (undo-tree-id12740 . -2564) (undo-tree-id12741 . -2564) (undo-tree-id12742 . -2564) (undo-tree-id12743 . -1491) (undo-tree-id12744 . -2564) (undo-tree-id12745 . -2564) (undo-tree-id12746 . -2564) (undo-tree-id12747 . -2564) (undo-tree-id12748 . -2564) (undo-tree-id12749 . -2564) (undo-tree-id12750 . -2564) (undo-tree-id12751 . -1491) (undo-tree-id12752 . -2564) (undo-tree-id12753 . -2564) (undo-tree-id12754 . -2564) (undo-tree-id12755 . -2564) (undo-tree-id12756 . -2564) (undo-tree-id12757 . -2564) (undo-tree-id12758 . -2564) (undo-tree-id12759 . -1491) (undo-tree-id12760 . -2564) (undo-tree-id12761 . -2564) (undo-tree-id12762 . -2564) (undo-tree-id12763 . -2564) (undo-tree-id12764 . -2564) (undo-tree-id12765 . -2564) (undo-tree-id12766 . -2564) (undo-tree-id12767 . -1491) (undo-tree-id12768 . -2564) (undo-tree-id12769 . -2564) (undo-tree-id12770 . -2564) (undo-tree-id12771 . -2564) (undo-tree-id12772 . -2564) (undo-tree-id12773 . -2564) (undo-tree-id12774 . -2564) (undo-tree-id12775 . -1491) (undo-tree-id12776 . -2564) (undo-tree-id12777 . -2564) (undo-tree-id12778 . -2564) (undo-tree-id12779 . -2564) (undo-tree-id12780 . -2564) (undo-tree-id12781 . -2564) (undo-tree-id12782 . -2564) (undo-tree-id12783 . -1491) (undo-tree-id12784 . -2564) (undo-tree-id12785 . -2564) (undo-tree-id12786 . -2564) (undo-tree-id12787 . -2564) (undo-tree-id12788 . -2564) (undo-tree-id12789 . -2564) (undo-tree-id12790 . -2564) (undo-tree-id12791 . -1491) (undo-tree-id12792 . -2564) (undo-tree-id12793 . -2564) (undo-tree-id12794 . -2564) (undo-tree-id12795 . -2564) (undo-tree-id12796 . -2564) (undo-tree-id12797 . -2564) (undo-tree-id12798 . -2564) (undo-tree-id12799 . -1491) (undo-tree-id12800 . -2564) (undo-tree-id12801 . -2564) (undo-tree-id12802 . -2564) (undo-tree-id12803 . -2564) (undo-tree-id12804 . -2564) (undo-tree-id12805 . -2564) (undo-tree-id12806 . -2564) (undo-tree-id12807 . -1491) (undo-tree-id12808 . -2564) (undo-tree-id12809 . -2564) (undo-tree-id12810 . -1491) (undo-tree-id12811 . -2564) (undo-tree-id12812 . -2564) (undo-tree-id12813 . -1491) (undo-tree-id12814 . -2564) (undo-tree-id12815 . -2564) (undo-tree-id12816 . -1491) (undo-tree-id12817 . -2564) (undo-tree-id12818 . -2564) (undo-tree-id12819 . -1491) (undo-tree-id12820 . -2564) (undo-tree-id12821 . -2564) (undo-tree-id12822 . -1491) (undo-tree-id12823 . -2564) (undo-tree-id12824 . -2564) (undo-tree-id12825 . -1491) (undo-tree-id12826 . -2564) (undo-tree-id12827 . -2564) (undo-tree-id12828 . -1491) (undo-tree-id12829 . -2564) (undo-tree-id12830 . -2564) (undo-tree-id12831 . -1491) (undo-tree-id12832 . -2564) (undo-tree-id12833 . -2564) (undo-tree-id12834 . -1491) (undo-tree-id12835 . -2564) (undo-tree-id12836 . -2564) (undo-tree-id12837 . -1491) (undo-tree-id12838 . -2564) (undo-tree-id12839 . -2564) (undo-tree-id12840 . -1491) (undo-tree-id12841 . -2564) (undo-tree-id12842 . -2564) (undo-tree-id12843 . -1491) (undo-tree-id12844 . -2564) (undo-tree-id12845 . -2564) (undo-tree-id12846 . -1491) (undo-tree-id12847 . -2564) (undo-tree-id12848 . -2564) (undo-tree-id12849 . -1491) (undo-tree-id12850 . -2564) (undo-tree-id12851 . -2564) (undo-tree-id12852 . -1491) (undo-tree-id12853 . -2564) (undo-tree-id12854 . -2564) (undo-tree-id12855 . -1491) (undo-tree-id12856 . -2564) (undo-tree-id12857 . -2564) (undo-tree-id12858 . -1491) (undo-tree-id12859 . -2564) (undo-tree-id12860 . -2564) (undo-tree-id12861 . -1491) (undo-tree-id12862 . -2564) (undo-tree-id12863 . -2564) (undo-tree-id12864 . -1491) (undo-tree-id12865 . -2564) (undo-tree-id12866 . -2564) (undo-tree-id12867 . -1491) (undo-tree-id12868 . -2564) (undo-tree-id12869 . -2564) (undo-tree-id12870 . -1491) (undo-tree-id12871 . -2564) (undo-tree-id12872 . -2564) (undo-tree-id12873 . -1491) (undo-tree-id12874 . -2564) (undo-tree-id12875 . -2564) (undo-tree-id12876 . -1491) (undo-tree-id12877 . -2564) (undo-tree-id12878 . -2564) (undo-tree-id12879 . -1491) (undo-tree-id12880 . -2564) (undo-tree-id12881 . -2564) (undo-tree-id12882 . -1491) (undo-tree-id12883 . -2564) (undo-tree-id12884 . -2564) (undo-tree-id12885 . -1491) (undo-tree-id12886 . -2564) (undo-tree-id12887 . -2564) (undo-tree-id12888 . -1491) (undo-tree-id12889 . -2564) (undo-tree-id12890 . -2564) (undo-tree-id12891 . -1491) (undo-tree-id12892 . -2564) (undo-tree-id12893 . -2564) (undo-tree-id12894 . -1491) (undo-tree-id12895 . -2564) (undo-tree-id12896 . -2564) (undo-tree-id12897 . -1491) (undo-tree-id12898 . -2564) (undo-tree-id12899 . -2564) (undo-tree-id12900 . -1491) (undo-tree-id12901 . -2564) (undo-tree-id12902 . -2564) (undo-tree-id12903 . -1491) (undo-tree-id12904 . -2564) (undo-tree-id12905 . -2564) (undo-tree-id12906 . -1491) (undo-tree-id12907 . -2564) (undo-tree-id12908 . -2564) (undo-tree-id12909 . -1491) (undo-tree-id12910 . -2564) (undo-tree-id12911 . -2564) (undo-tree-id12912 . -1491) (undo-tree-id12913 . -2564) (undo-tree-id12914 . -2564) (undo-tree-id12915 . -1491) (undo-tree-id12916 . -2564) (undo-tree-id12917 . -2564) (undo-tree-id12918 . -1491) (undo-tree-id12919 . -2564) (undo-tree-id12920 . -2564) (undo-tree-id12921 . -1491) (undo-tree-id12922 . -2564) (undo-tree-id12923 . -2564) (undo-tree-id12924 . -1491) (undo-tree-id12925 . -2564) (undo-tree-id12926 . -2564) (undo-tree-id12927 . -1491) (undo-tree-id12928 . -2564) (undo-tree-id12929 . -2564) (undo-tree-id12930 . -1491) (undo-tree-id12931 . -2564) (undo-tree-id12932 . -2564) (undo-tree-id12933 . -1491) (undo-tree-id12934 . -2564) (undo-tree-id12935 . -2564) (undo-tree-id12936 . -1491) (undo-tree-id12937 . -2564) (undo-tree-id12938 . -2564) (undo-tree-id12939 . -2564) (undo-tree-id12940 . -2564) (undo-tree-id12941 . -2564) (undo-tree-id12942 . -2564) (undo-tree-id12943 . -2564) (undo-tree-id12944 . -1491) (undo-tree-id12945 . -2564) (undo-tree-id12946 . -2564) (undo-tree-id12947 . -2564) (undo-tree-id12948 . -2564) (undo-tree-id12949 . -2564) (undo-tree-id12950 . -2564) (undo-tree-id12951 . -2564) (undo-tree-id12952 . -1491) (undo-tree-id12953 . -2564) (undo-tree-id12954 . -2564) (undo-tree-id12955 . -2564) (undo-tree-id12956 . -2564) (undo-tree-id12957 . -2564) (undo-tree-id12958 . -2564) (undo-tree-id12959 . -2564) (undo-tree-id12960 . -1491) (undo-tree-id12961 . -2564) (undo-tree-id12962 . -2564) (undo-tree-id12963 . -2564) (undo-tree-id12964 . -2564) (undo-tree-id12965 . -2564) (undo-tree-id12966 . -2564) (undo-tree-id12967 . -2564) (undo-tree-id12968 . -1491) (undo-tree-id12969 . -2564) (undo-tree-id12970 . -2564) (undo-tree-id12971 . -2564) (undo-tree-id12972 . -2564) (undo-tree-id12973 . -2564) (undo-tree-id12974 . -2564) (undo-tree-id12975 . -2564) (undo-tree-id12976 . -1491) (undo-tree-id12977 . -2564) (undo-tree-id12978 . -2564) (undo-tree-id12979 . -2564) (undo-tree-id12980 . -2564) (undo-tree-id12981 . -2564) (undo-tree-id12982 . -2564) (undo-tree-id12983 . -2564) (undo-tree-id12984 . -1491) (undo-tree-id12985 . -2564) (undo-tree-id12986 . -2564) (undo-tree-id12987 . -2564) (undo-tree-id12988 . -2564) (undo-tree-id12989 . -2564) (undo-tree-id12990 . -2564) (undo-tree-id12991 . -2564) (undo-tree-id12992 . -1491) (undo-tree-id12993 . -2564) (undo-tree-id12994 . -2564) (undo-tree-id12995 . -2564) (undo-tree-id12996 . -2564) (undo-tree-id12997 . -2564) (undo-tree-id12998 . -2564) (undo-tree-id12999 . -2564) (undo-tree-id13000 . -1491) (undo-tree-id13001 . -2564) (undo-tree-id13002 . -2564) (undo-tree-id13003 . -2564) (undo-tree-id13004 . -2564) (undo-tree-id13005 . -2564) (undo-tree-id13006 . -2564) (undo-tree-id13007 . -2564) (undo-tree-id13008 . -1491) (undo-tree-id13009 . -2564) (undo-tree-id13010 . -2564) (undo-tree-id13011 . -2564) (undo-tree-id13012 . -2564) (undo-tree-id13013 . -2564) (undo-tree-id13014 . -2564) (undo-tree-id13015 . -2564) (undo-tree-id13016 . -1491) (undo-tree-id13017 . -2564) (undo-tree-id13018 . -2564) (undo-tree-id13019 . -2564) (undo-tree-id13020 . -2564) (undo-tree-id13021 . -2564) (undo-tree-id13022 . -2564) (undo-tree-id13023 . -2564) (undo-tree-id13024 . -1491) (undo-tree-id13025 . -2564) (undo-tree-id13026 . -2564) (undo-tree-id13027 . -2564) (undo-tree-id13028 . -2564) (undo-tree-id13029 . -2564) (undo-tree-id13030 . -2564) (undo-tree-id13031 . -2564) (undo-tree-id13032 . -1491) (undo-tree-id13033 . -2564) (undo-tree-id13034 . -2564) (undo-tree-id13035 . -2564) (undo-tree-id13036 . -2564) (undo-tree-id13037 . -2564) (undo-tree-id13038 . -2564) (undo-tree-id13039 . -2564) (undo-tree-id13040 . -1491) (undo-tree-id13041 . -2564) (undo-tree-id13042 . -2564) (undo-tree-id13043 . -2564) (undo-tree-id13044 . -2564) (undo-tree-id13045 . -2564) (undo-tree-id13046 . -2564) (undo-tree-id13047 . -2564) (undo-tree-id13048 . -1491) (undo-tree-id13049 . -2564) (undo-tree-id13050 . -2564) (undo-tree-id13051 . -2564) (undo-tree-id13052 . -2564) (undo-tree-id13053 . -2564) (undo-tree-id13054 . -2564) (undo-tree-id13055 . -2564) (undo-tree-id13056 . -1491) (undo-tree-id13057 . -2564) (undo-tree-id13058 . -2564) (undo-tree-id13059 . -2564) (undo-tree-id13060 . -2564) (undo-tree-id13061 . -2564) (undo-tree-id13062 . -2564) (undo-tree-id13063 . -2564) (undo-tree-id13064 . -1491) (undo-tree-id13065 . -2564) (undo-tree-id13066 . -2564) (undo-tree-id13067 . -2564) (undo-tree-id13068 . -2564) (undo-tree-id13069 . -2564) (undo-tree-id13070 . -2564) (undo-tree-id13071 . -2564) (undo-tree-id13072 . -1491) (undo-tree-id13073 . -2564) (undo-tree-id13074 . -2564) (undo-tree-id13075 . -2564) (undo-tree-id13076 . -2564) (undo-tree-id13077 . -2564) (undo-tree-id13078 . -2564) (undo-tree-id13079 . -2564) (undo-tree-id13080 . -1491) (undo-tree-id13081 . -2564) (undo-tree-id13082 . -2564) (undo-tree-id13083 . -2564) (undo-tree-id13084 . -2564) (undo-tree-id13085 . -2564) (undo-tree-id13086 . -2564) (undo-tree-id13087 . -2564) (undo-tree-id13088 . -1491) (undo-tree-id13089 . -2564) (undo-tree-id13090 . -2564) (undo-tree-id13091 . -2564) (undo-tree-id13092 . -2564) (undo-tree-id13093 . -2564) (undo-tree-id13094 . -2564) (undo-tree-id13095 . -2564) (undo-tree-id13096 . -1491) (undo-tree-id13097 . -2564) (undo-tree-id13098 . -2564) (undo-tree-id13099 . -2564) (undo-tree-id13100 . -2564) (undo-tree-id13101 . -2564) (undo-tree-id13102 . -2564) (undo-tree-id13103 . -2564) (undo-tree-id13104 . -1491) (undo-tree-id13105 . -2564) (undo-tree-id13106 . -2564) (undo-tree-id13107 . -2564) (undo-tree-id13108 . -2564) (undo-tree-id13109 . -2564) (undo-tree-id13110 . -2564) (undo-tree-id13111 . -2564) (undo-tree-id13112 . -1491) (undo-tree-id13113 . -2564) (undo-tree-id13114 . -2564) (undo-tree-id13115 . -2564) (undo-tree-id13116 . -2564) (undo-tree-id13117 . -2564) (undo-tree-id13118 . -2564) (undo-tree-id13119 . -2564) (undo-tree-id13120 . -1491) (undo-tree-id13121 . -2564) (undo-tree-id13122 . -2564) (undo-tree-id13123 . -2564) (undo-tree-id13124 . -2564) (undo-tree-id13125 . -2564) (undo-tree-id13126 . -2564) (undo-tree-id13127 . -2564) (undo-tree-id13128 . -1491) (undo-tree-id13129 . -2564) (undo-tree-id13130 . -2564) (undo-tree-id13131 . -1491) (undo-tree-id13132 . -2564) (undo-tree-id13133 . -2564) (undo-tree-id13134 . -1491) (undo-tree-id13135 . -2564) (undo-tree-id13136 . -2564) (undo-tree-id13137 . -1491) (undo-tree-id13138 . -2564) (undo-tree-id13139 . -2564) (undo-tree-id13140 . -1491) (undo-tree-id13141 . -2564) (undo-tree-id13142 . -2564) (undo-tree-id13143 . -1491) (undo-tree-id13144 . -2564) (undo-tree-id13145 . -2564) (undo-tree-id13146 . -1491) (undo-tree-id13147 . -2564) (undo-tree-id13148 . -2564) (undo-tree-id13149 . -1491) (undo-tree-id13150 . -2564) (undo-tree-id13151 . -2564) (undo-tree-id13152 . -1491) (undo-tree-id13153 . -2564) (undo-tree-id13154 . -2564) (undo-tree-id13155 . -1491) (undo-tree-id13156 . -2564) (undo-tree-id13157 . -2564) (undo-tree-id13158 . -1491) (undo-tree-id13159 . -2564) (undo-tree-id13160 . -2564) (undo-tree-id13161 . -1491) (undo-tree-id13162 . -2564) (undo-tree-id13163 . -2564) (undo-tree-id13164 . -1491) (undo-tree-id13165 . -2564) (undo-tree-id13166 . -2564) (undo-tree-id13167 . -1491) (undo-tree-id13168 . -2564) (undo-tree-id13169 . -2564) (undo-tree-id13170 . -1491) (undo-tree-id13171 . -2564) (undo-tree-id13172 . -2564) (undo-tree-id13173 . -1491) (undo-tree-id13174 . -2564) (undo-tree-id13175 . -2564) (undo-tree-id13176 . -1491) (undo-tree-id13177 . -2564) (undo-tree-id13178 . -2564) (undo-tree-id13179 . -1491) (undo-tree-id13180 . -2564) (undo-tree-id13181 . -2564) (undo-tree-id13182 . -1491) (undo-tree-id13183 . -2564) (undo-tree-id13184 . -2564) (undo-tree-id13185 . -1491) (undo-tree-id13186 . -2564) (undo-tree-id13187 . -2564) (undo-tree-id13188 . -1491) (undo-tree-id13189 . -2564) (undo-tree-id13190 . -2564) (undo-tree-id13191 . -1491) (undo-tree-id13192 . -2564) (undo-tree-id13193 . -2564) (undo-tree-id13194 . -1491) (undo-tree-id13195 . -2564) (undo-tree-id13196 . -2564) (undo-tree-id13197 . -1491) (undo-tree-id13198 . -2564) (undo-tree-id13199 . -2564) (undo-tree-id13200 . -1491) (undo-tree-id13201 . -2564) (undo-tree-id13202 . -2564) (undo-tree-id13203 . -1491) (undo-tree-id13204 . -2564) (undo-tree-id13205 . -2564) (undo-tree-id13206 . -1491) (undo-tree-id13207 . -2564) (undo-tree-id13208 . -2564) (undo-tree-id13209 . -1491) (undo-tree-id13210 . -2564) (undo-tree-id13211 . -2564) (undo-tree-id13212 . -1491) (undo-tree-id13213 . -2564) (undo-tree-id13214 . -2564) (undo-tree-id13215 . -1491) (undo-tree-id13216 . -2564) (undo-tree-id13217 . -2564) (undo-tree-id13218 . -1491) (undo-tree-id13219 . -2564) (undo-tree-id13220 . -2564) (undo-tree-id13221 . -1491) (undo-tree-id13222 . -2564) (undo-tree-id13223 . -2564) (undo-tree-id13224 . -1491) (undo-tree-id13225 . -2564) (undo-tree-id13226 . -2564) (undo-tree-id13227 . -1491) (undo-tree-id13228 . -2564) (undo-tree-id13229 . -2564) (undo-tree-id13230 . -1491) (undo-tree-id13231 . -2564) (undo-tree-id13232 . -2564) (undo-tree-id13233 . -1491) (undo-tree-id13234 . -2564) (undo-tree-id13235 . -2564) (undo-tree-id13236 . -1491) (undo-tree-id13237 . -2564) (undo-tree-id13238 . -2564) (undo-tree-id13239 . -1491) (undo-tree-id13240 . -2564) (undo-tree-id13241 . -2564) (undo-tree-id13242 . -1491) (undo-tree-id13243 . -2564) (undo-tree-id13244 . -2564) (undo-tree-id13245 . -1491) (undo-tree-id13246 . -2564) (undo-tree-id13247 . -2564) (undo-tree-id13248 . -1491) (undo-tree-id13249 . -2564) (undo-tree-id13250 . -2564) (undo-tree-id13251 . -1491) (undo-tree-id13252 . -2564) (undo-tree-id13253 . -2564) (undo-tree-id13254 . -1491) (undo-tree-id13255 . -2564) (undo-tree-id13256 . -2564) (undo-tree-id13257 . -1491) (undo-tree-id13258 . -2564) (undo-tree-id13259 . -2564) (undo-tree-id13260 . -1491) (undo-tree-id13261 . -2564) (undo-tree-id13262 . -2564) (undo-tree-id13263 . -1491) (undo-tree-id13264 . -2564) (undo-tree-id13265 . -2564) (undo-tree-id13266 . -1491) (undo-tree-id13267 . -2564) (undo-tree-id13268 . -2564) (undo-tree-id13269 . -1491) (undo-tree-id13270 . -2564) (undo-tree-id13271 . -2564) (undo-tree-id13272 . -1491) (undo-tree-id13273 . -2564) (undo-tree-id13274 . -2564) (undo-tree-id13275 . -1491) (undo-tree-id13276 . -2564) (undo-tree-id13277 . -2564) (undo-tree-id13278 . -1491) (undo-tree-id13279 . -2564) (undo-tree-id13280 . -2564) (undo-tree-id13281 . -1491) (undo-tree-id13282 . -2564) (undo-tree-id13283 . -2564) (undo-tree-id13284 . -1491) (undo-tree-id13285 . -2564) (undo-tree-id13286 . -2564) (undo-tree-id13287 . -1491) (undo-tree-id13288 . -2564) (undo-tree-id13289 . -2564) (undo-tree-id13290 . -1491) (undo-tree-id13291 . -2564) (undo-tree-id13292 . -2564) (undo-tree-id13293 . -1491) (undo-tree-id13294 . -2564) (undo-tree-id13295 . -2564) (undo-tree-id13296 . -1491) (undo-tree-id13297 . -2564) (undo-tree-id13298 . -2564) (undo-tree-id13299 . -1491) (undo-tree-id13300 . -2564) (undo-tree-id13301 . -2564) (undo-tree-id13302 . -1491) (undo-tree-id13303 . -2564) (undo-tree-id13304 . -2564) (undo-tree-id13305 . -1491) (undo-tree-id13306 . -2564) (undo-tree-id13307 . -2564) (undo-tree-id13308 . -1491) (undo-tree-id13309 . -2564) (undo-tree-id13310 . -2564) (undo-tree-id13311 . -1491) (undo-tree-id13312 . -2564) (undo-tree-id13313 . -2564) (undo-tree-id13314 . -1491) (undo-tree-id13315 . -2564) (undo-tree-id13316 . -2564) (undo-tree-id13317 . -1491) (undo-tree-id13318 . -2564) (undo-tree-id13319 . -2564) (undo-tree-id13320 . -1491) (undo-tree-id13321 . -2564) (undo-tree-id13322 . -2564) (undo-tree-id13323 . -1491) (undo-tree-id13324 . -2564) (undo-tree-id13325 . -2564) (undo-tree-id13326 . -1491) (undo-tree-id13327 . -2564) (undo-tree-id13328 . -2564) (undo-tree-id13329 . -1491) (undo-tree-id13330 . -2564) (undo-tree-id13331 . -2564) (undo-tree-id13332 . -1491) (undo-tree-id13333 . -2564) (undo-tree-id13334 . -2564) (undo-tree-id13335 . -1491) (undo-tree-id13336 . -2564) (undo-tree-id13337 . -2564) (undo-tree-id13338 . -1491) (undo-tree-id13339 . -2564) (undo-tree-id13340 . -2564) (undo-tree-id13341 . -1491) (undo-tree-id13342 . -2564) (undo-tree-id13343 . -2564) (undo-tree-id13344 . -1491) (undo-tree-id13345 . -2564) (undo-tree-id13346 . -2564) (undo-tree-id13347 . -1491) (undo-tree-id13348 . -2564) (undo-tree-id13349 . -2564) (undo-tree-id13350 . -1491) (undo-tree-id13351 . -2564) (undo-tree-id13352 . -2564) (undo-tree-id13353 . -1491) (undo-tree-id13354 . -2564) (undo-tree-id13355 . -2564) (undo-tree-id13356 . -1491) (undo-tree-id13357 . -2564) (undo-tree-id13358 . -2564) (undo-tree-id13359 . -1491) (undo-tree-id13360 . -2564) (undo-tree-id13361 . -2564) (undo-tree-id13362 . -1491) (undo-tree-id13363 . -2564) (undo-tree-id13364 . -2564) (undo-tree-id13365 . -1491) (undo-tree-id13366 . -2564) (undo-tree-id13367 . -2564) (undo-tree-id13368 . -1491) (undo-tree-id13369 . -2564) (undo-tree-id13370 . -2564) (undo-tree-id13371 . -1491) (undo-tree-id13372 . -2564) (undo-tree-id13373 . -2564) (undo-tree-id13374 . -1491) (undo-tree-id13375 . -2564) (undo-tree-id13376 . -2564) (undo-tree-id13377 . -1491) (undo-tree-id13378 . -2564) (undo-tree-id13379 . -2564) (undo-tree-id13380 . -1491) (undo-tree-id13381 . -2564) (undo-tree-id13382 . -2564) (undo-tree-id13383 . -1491) (undo-tree-id13384 . -2564) (undo-tree-id13385 . -2564) (undo-tree-id13386 . -1491) (undo-tree-id13387 . -2564) (undo-tree-id13388 . -2564) (undo-tree-id13389 . -1491) (undo-tree-id13390 . -2564) (undo-tree-id13391 . -2564) (undo-tree-id13392 . -1491) (undo-tree-id13393 . -2564) (undo-tree-id13394 . -2564) (undo-tree-id13395 . -1491) (undo-tree-id13396 . -2564) (undo-tree-id13397 . -2564) (undo-tree-id13398 . -1491) (undo-tree-id13399 . -2564) (undo-tree-id13400 . -2564) (undo-tree-id13401 . -1491) (undo-tree-id13402 . -2564) (undo-tree-id13403 . -2564) (undo-tree-id13404 . -1491) (undo-tree-id13405 . -2564) (undo-tree-id13406 . -2564) (undo-tree-id13407 . -1491) (undo-tree-id13408 . -2564) (undo-tree-id13409 . -2564) (undo-tree-id13410 . -1491) (undo-tree-id13411 . -2564) (undo-tree-id13412 . -2564) (undo-tree-id13413 . -1491) (undo-tree-id13414 . -2564) (undo-tree-id13415 . -2564) (undo-tree-id13416 . -1491) (undo-tree-id13417 . -2564) (undo-tree-id13418 . -2564) (undo-tree-id13419 . -1491) (undo-tree-id13420 . -2564) (undo-tree-id13421 . -2564) (undo-tree-id13422 . -1491) (undo-tree-id13423 . -2564) (undo-tree-id13424 . -2564) (undo-tree-id13425 . -1491) (undo-tree-id13426 . -2564) (undo-tree-id13427 . -2564) (undo-tree-id13428 . -1491) (undo-tree-id13429 . -2564) (undo-tree-id13430 . -2564) (undo-tree-id13431 . -1491) (undo-tree-id13432 . -2564) (undo-tree-id13433 . -2564) (undo-tree-id13434 . -1491) (undo-tree-id13435 . -2564) (undo-tree-id13436 . -2564) (undo-tree-id13437 . -1491) (undo-tree-id13438 . -2564) (undo-tree-id13439 . -2564) (undo-tree-id13440 . -1491) (undo-tree-id13441 . -2564) (undo-tree-id13442 . -2564) (undo-tree-id13443 . -1491) (undo-tree-id13444 . -2564) 56999 (t 25151 36726 299515 663000)) nil (25151 36826 902543 931000) 0 nil] [nil nil ((49311 . 49319) 56999 (t 25151 36726 299515 663000)) ((#("COMMENT " 0 7 (fontified nil) 7 8 (fontified nil)) . 49311)) (25151 36736 676155 100000) 0 nil])
([nil nil ((70137 . 76396) (#("
     (defun zetteldesk-note-refs-p ()
       \"Predicate function that finds all bibtex completion candidates with a note.

     Checks if every candidate has the \\\"=has-note=\\\" tag using
     `assoc' and if it does, collects that candidate\"
       (cl-loop for ref in (bibtex-completion-candidates)
		if (assoc \"=has-note=\" ref)
		collect ref))

     (defun zetteldesk-citekey-from-refs ()
       \"Function that finds the \\\"=key=\\\" tag from a list of candidates.

     The list is collected with `zetteldesk-note-refs-p' which is a
     list of candidates that have notes. Collects it using `assoc'.\"
       (cl-loop for ref in (zetteldesk-note-refs-p)
		collect (assoc \"=key=\" ref)))

     (defun zetteldesk-node-from-refs ()
       \"Function that collects a list of ref nodes.

     The nodes are collected from their citekey using
     `org-roam-node-from-ref', while the citekeys themselves are
     collected from `zetteldesk-citekey-from-refs'.\"
       (cl-loop for ref in (zetteldesk-citekey-from-refs)
		collect (org-roam-node-from-ref (concat \"cite:\" (cdr ref)))))

     (defun org-roam-node-read--completions* (node-list &optional filter-fn sort-fn)
       \"Runs `org-roam-node-read--completions' with NODE-LIST being a list of nodes.

     Typically, the function takes `org-roam-node-list' as the initial
     list of nodes and creates the alist `org-roam-node-read'
     uses. However, it can be helpful to supply the list of nodes
     yourself, when the predicate function used cannot be inferred
     through a filter function of the form this function
     takes. FILTER-FN and SORT-FN are the same as in
     `org-roam-node-read--completions'. The resulting alist is to be
     used with `org-roam-node-read*'.\"
       (let* ((template (org-roam-node--process-display-format org-roam-node-display-template))
	      (nodes node-list)
	      (nodes (mapcar (lambda (node)
			       (org-roam-node-read--to-candidate node template)) nodes))
	      (nodes (if filter-fn
			 (cl-remove-if-not
			  (lambda (n) (funcall filter-fn (cdr n)))
			  nodes)
		       nodes))
	      (sort-fn (or sort-fn
			   (when org-roam-node-default-sort
			     (intern (concat \"org-roam-node-read-sort-by-\"
					     (symbol-name org-roam-node-default-sort))))))
	      (nodes (if sort-fn (seq-sort sort-fn nodes)
		       nodes)))
	 nodes))

     (defun org-roam-node-read* (node-list &optional initial-input filter-fn sort-fn require-match prompt)
       \"Runs `org-roam-node-read' with the nodes supplied by NODE-LIST.

     NODE-LIST is a list of nodes passed to
     `org-roam-node-read--completions*', which creates an alist of
     nodes with the proper formatting to be used in this
     function. This is for those cases where it is helpful to use your
     own list of nodes, because a predicate function can not filter
     them in the way you want easily.\"
       (let* ((nodes (org-roam-node-read--completions* node-list filter-fn sort-fn))
	      (prompt (or prompt \"Node: \"))
	      (node (completing-read
		     prompt
		     (lambda (string pred action)
		       (if (eq action 'metadata)
			   `(metadata
			     ;; Preserve sorting in the completion UI if a sort-fn is used
			     ,@(when sort-fn
				 '((display-sort-function . identity)
				   (cycle-sort-function . identity)))
			     (annotation-function
			      . ,(lambda (title)
				   (funcall org-roam-node-annotation-function
					    (get-text-property 0 'node title))))
			     (category . org-roam-node))
			 (complete-with-action action nodes string pred)))
		     nil require-match initial-input 'org-roam-node-history)))
	 (or (cdr (assoc node nodes))
	     (org-roam-node-create :title node))))

     (defun zetteldesk-find-ref-node ()
       \"Execute a filtered version of `ivy-bibtex-with-notes'.

     This does not exactly run `ivy-bibtex-with-notes' as that doesn't
     have a way to filter things. It collects a list of nodes which
     are reference nodes linked to a bibtex entry through
     `zetteldesk-node-from-refs' and passes it to
     `org-roam-node-read*' which is a modified version of
     `org-roam-node-read' which takes a list of nodes as an
     argument. Since this required a rewrite of `org-roam-node-read',
     finding the file is done indirectly and not through
     `org-roam-node-file'.\"
       (interactive)
       (find-file (org-roam-node-file (org-roam-node-read* (zetteldesk-node-from-refs) nil #'zetteldesk-node-p))))

" 0 7 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7 12 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12 13 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 35 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 35 46 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 46 165 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 165 166 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 166 174 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 174 175 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 175 194 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 194 199 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 199 241 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 241 250 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 250 257 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 257 312 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 312 313 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 313 314 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 314 322 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 322 323 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 323 324 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 324 353 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 353 358 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 358 359 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 359 387 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 387 398 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 398 425 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 425 426 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 426 429 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 429 430 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 430 479 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 479 498 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 498 520 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 520 593 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 593 598 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 598 601 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 601 610 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 610 617 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 617 671 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 671 672 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 672 673 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 673 676 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 676 677 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 677 678 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 678 693 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 693 698 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 698 699 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 699 724 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 724 735 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 735 841 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 841 863 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 863 921 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 921 949 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 949 952 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 952 961 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 961 968 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 968 1053 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1053 1060 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1060 1082 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1082 1087 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1087 1088 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1088 1120 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 1120 1132 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1132 1141 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 1141 1168 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1168 1175 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1175 1206 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1206 1283 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1283 1301 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1301 1360 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1360 1378 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1378 1629 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1629 1660 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1660 1708 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1708 1727 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1727 1730 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1730 1739 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1739 1743 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1743 1875 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1875 1881 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1881 1949 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1949 1956 (fontified t font-lock-fontified t help-echo "Hidden behind deeper element; move to another line?" src-block t font-lock-multiline t face (font-lock-warning-face org-block)) 1956 1972 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1972 1974 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1974 2013 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2013 2019 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2019 2099 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2099 2101 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2101 2117 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2117 2121 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2121 2173 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2173 2202 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2202 2274 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2274 2276 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2276 2345 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2345 2350 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2350 2351 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2351 2370 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 2370 2382 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2382 2391 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 2391 2453 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2453 2460 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2460 2478 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2478 2569 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2569 2601 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2601 2864 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2864 2873 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2873 2877 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2877 2966 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2966 2968 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2968 2976 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2976 2984 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2984 3039 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3039 3045 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3045 3077 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3077 3079 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3079 3127 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3127 3130 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3130 3189 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3189 3200 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3200 3204 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3204 3339 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3339 3345 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3345 3450 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3450 3608 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3608 3610 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3610 3664 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3664 3670 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 3670 3687 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3687 3692 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3692 3693 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3693 3717 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 3717 3728 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3728 3760 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3760 3781 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3781 3817 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3817 3838 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3838 3950 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3950 3988 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3988 4013 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4013 4038 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4038 4057 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4057 4096 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4096 4114 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4114 4199 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4199 4217 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4217 4283 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4283 4301 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4301 4304 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4304 4313 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4313 4324 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4324 4440 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 4440 4441 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 4441 4442 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 70137) (undo-tree-id13445 . -4440) (undo-tree-id13446 . -2950) (undo-tree-id13447 . -4439) (undo-tree-id13448 . -4439) (undo-tree-id13449 . -124) (undo-tree-id13450 . -124) (undo-tree-id13451 . -124) (undo-tree-id13452 . -124) (undo-tree-id13453 . -124) (undo-tree-id13454 . -124) (undo-tree-id13455 . -124) (undo-tree-id13456 . -124) (undo-tree-id13457 . -124) (undo-tree-id13458 . -124) (undo-tree-id13459 . -124) (undo-tree-id13460 . -124) (undo-tree-id13461 . -124) (undo-tree-id13462 . -124) (undo-tree-id13463 . -124) (undo-tree-id13464 . -124) (undo-tree-id13465 . -124) (undo-tree-id13466 . -124) (undo-tree-id13467 . -124) (undo-tree-id13468 . -124) (undo-tree-id13469 . -124) (undo-tree-id13470 . -124) (undo-tree-id13471 . -124) (undo-tree-id13472 . -124) (undo-tree-id13473 . -124) (undo-tree-id13474 . -124) (undo-tree-id13475 . -124) (undo-tree-id13476 . -124) (undo-tree-id13477 . -124) (undo-tree-id13478 . -124) (undo-tree-id13479 . -124) (undo-tree-id13480 . -124) (undo-tree-id13481 . -124) (undo-tree-id13482 . -124) (undo-tree-id13483 . -124) (undo-tree-id13484 . -124) (undo-tree-id13485 . -124) (undo-tree-id13486 . -124) (undo-tree-id13487 . -124) (undo-tree-id13488 . -124) (undo-tree-id13489 . -124) (undo-tree-id13490 . -124) (undo-tree-id13491 . -124) (undo-tree-id13492 . -124) (undo-tree-id13493 . -124) (undo-tree-id13494 . -346) (undo-tree-id13495 . -346) (undo-tree-id13496 . -346) (undo-tree-id13497 . -346) (undo-tree-id13498 . -346) (undo-tree-id13499 . -346) (undo-tree-id13500 . -346) (undo-tree-id13501 . -346) (undo-tree-id13502 . -346) (undo-tree-id13503 . -346) (undo-tree-id13504 . -346) (undo-tree-id13505 . -346) (undo-tree-id13506 . -346) (undo-tree-id13507 . -533) (undo-tree-id13508 . -533) (undo-tree-id13509 . -533) (undo-tree-id13510 . -533) (undo-tree-id13511 . -533) (undo-tree-id13512 . -533) (undo-tree-id13513 . -533) (undo-tree-id13514 . -533) (undo-tree-id13515 . -533) (undo-tree-id13516 . -533) (undo-tree-id13517 . -533) (undo-tree-id13518 . -533) (undo-tree-id13519 . -533) (undo-tree-id13520 . -728) (undo-tree-id13521 . -728) (undo-tree-id13522 . -728) (undo-tree-id13523 . -728) (undo-tree-id13524 . -728) (undo-tree-id13525 . -728) (undo-tree-id13526 . -728) (undo-tree-id13527 . -728) (undo-tree-id13528 . -728) (undo-tree-id13529 . -728) (undo-tree-id13530 . -728) (undo-tree-id13531 . -728) (undo-tree-id13532 . -728) (undo-tree-id13533 . -953) (undo-tree-id13534 . -953) (undo-tree-id13535 . -953) (undo-tree-id13536 . -953) (undo-tree-id13537 . -953) (undo-tree-id13538 . -953) (undo-tree-id13539 . -953) (undo-tree-id13540 . -953) (undo-tree-id13541 . -953) (undo-tree-id13542 . -953) (undo-tree-id13543 . -953) (undo-tree-id13544 . -953) (undo-tree-id13545 . -953) (undo-tree-id13546 . -1246) (undo-tree-id13547 . -1246) (undo-tree-id13548 . -1246) (undo-tree-id13549 . -1246) (undo-tree-id13550 . -1246) (undo-tree-id13551 . -1246) (undo-tree-id13552 . -1246) (undo-tree-id13553 . -1246) (undo-tree-id13554 . -1246) (undo-tree-id13555 . -1246) (undo-tree-id13556 . -1246) (undo-tree-id13557 . -1246) (undo-tree-id13558 . -1246) (undo-tree-id13559 . -1513) (undo-tree-id13560 . -1513) (undo-tree-id13561 . -1513) (undo-tree-id13562 . -1513) (undo-tree-id13563 . -1513) (undo-tree-id13564 . -1513) (undo-tree-id13565 . -1513) (undo-tree-id13566 . -1513) (undo-tree-id13567 . -1513) (undo-tree-id13568 . -1513) (undo-tree-id13569 . -1513) (undo-tree-id13570 . -1513) (undo-tree-id13571 . -1513) (undo-tree-id13572 . -1794) (undo-tree-id13573 . -1794) (undo-tree-id13574 . -1794) (undo-tree-id13575 . -1794) (undo-tree-id13576 . -1794) (undo-tree-id13577 . -1794) (undo-tree-id13578 . -1794) (undo-tree-id13579 . -1794) (undo-tree-id13580 . -1794) (undo-tree-id13581 . -1794) (undo-tree-id13582 . -1794) (undo-tree-id13583 . -1794) (undo-tree-id13584 . -1794) (undo-tree-id13585 . -1957) (undo-tree-id13586 . -1957) (undo-tree-id13587 . -1957) (undo-tree-id13588 . -1957) (undo-tree-id13589 . -1957) (undo-tree-id13590 . -1957) (undo-tree-id13591 . -1957) (undo-tree-id13592 . -1957) (undo-tree-id13593 . -1957) (undo-tree-id13594 . -1957) (undo-tree-id13595 . -1957) (undo-tree-id13596 . -1957) (undo-tree-id13597 . -1957) (undo-tree-id13598 . -2082) (undo-tree-id13599 . -2082) (undo-tree-id13600 . -2082) (undo-tree-id13601 . -2082) (undo-tree-id13602 . -2082) (undo-tree-id13603 . -2082) (undo-tree-id13604 . -2082) (undo-tree-id13605 . -2082) (undo-tree-id13606 . -2082) (undo-tree-id13607 . -2082) (undo-tree-id13608 . -2082) (undo-tree-id13609 . -2082) (undo-tree-id13610 . -2082) (undo-tree-id13611 . -2259) (undo-tree-id13612 . -2259) (undo-tree-id13613 . -2259) (undo-tree-id13614 . -2259) (undo-tree-id13615 . -2259) (undo-tree-id13616 . -2259) (undo-tree-id13617 . -2259) (undo-tree-id13618 . -2259) (undo-tree-id13619 . -2259) (undo-tree-id13620 . -2259) (undo-tree-id13621 . -2259) (undo-tree-id13622 . -2259) (undo-tree-id13623 . -2259) (undo-tree-id13624 . -2259) (undo-tree-id13625 . -2259) (undo-tree-id13626 . -2082) (undo-tree-id13627 . -2259) (undo-tree-id13628 . -2259) (undo-tree-id13629 . -2259) (undo-tree-id13630 . -2259) (undo-tree-id13631 . -2259) (undo-tree-id13632 . -2259) (undo-tree-id13633 . -2259) (undo-tree-id13634 . -2259) (undo-tree-id13635 . -2259) (undo-tree-id13636 . -2259) (undo-tree-id13637 . -2259) (undo-tree-id13638 . -2259) (undo-tree-id13639 . -1957) (undo-tree-id13640 . -2259) (undo-tree-id13641 . -2259) (undo-tree-id13642 . -2259) (undo-tree-id13643 . -2259) (undo-tree-id13644 . -2259) (undo-tree-id13645 . -2259) (undo-tree-id13646 . -2259) (undo-tree-id13647 . -2259) (undo-tree-id13648 . -2259) (undo-tree-id13649 . -2259) (undo-tree-id13650 . -2259) (undo-tree-id13651 . -2259) (undo-tree-id13652 . -1794) (undo-tree-id13653 . -2259) (undo-tree-id13654 . -2259) (undo-tree-id13655 . -2259) (undo-tree-id13656 . -2259) (undo-tree-id13657 . -2259) (undo-tree-id13658 . -2259) (undo-tree-id13659 . -2259) (undo-tree-id13660 . -2259) (undo-tree-id13661 . -2259) (undo-tree-id13662 . -2259) (undo-tree-id13663 . -2259) (undo-tree-id13664 . -2259) (undo-tree-id13665 . -1513) (undo-tree-id13666 . -2259) (undo-tree-id13667 . -2259) (undo-tree-id13668 . -2259) (undo-tree-id13669 . -2259) (undo-tree-id13670 . -2259) (undo-tree-id13671 . -2259) (undo-tree-id13672 . -2259) (undo-tree-id13673 . -2259) (undo-tree-id13674 . -2259) (undo-tree-id13675 . -2259) (undo-tree-id13676 . -2259) (undo-tree-id13677 . -2259) (undo-tree-id13678 . -1246) (undo-tree-id13679 . -2259) (undo-tree-id13680 . -2259) (undo-tree-id13681 . -2259) (undo-tree-id13682 . -2259) (undo-tree-id13683 . -2259) (undo-tree-id13684 . -2259) (undo-tree-id13685 . -2259) (undo-tree-id13686 . -2259) (undo-tree-id13687 . -2259) (undo-tree-id13688 . -2259) (undo-tree-id13689 . -2259) (undo-tree-id13690 . -2259) (undo-tree-id13691 . -728) (undo-tree-id13692 . -2259) (undo-tree-id13693 . -2259) (undo-tree-id13694 . -2259) (undo-tree-id13695 . -2259) (undo-tree-id13696 . -2259) (undo-tree-id13697 . -2259) (undo-tree-id13698 . -2259) (undo-tree-id13699 . -2259) (undo-tree-id13700 . -2259) (undo-tree-id13701 . -2259) (undo-tree-id13702 . -2203) (undo-tree-id13703 . -2203) (undo-tree-id13704 . -533) (undo-tree-id13705 . -2203) (undo-tree-id13706 . -2203) (undo-tree-id13707 . -2203) (undo-tree-id13708 . -2203) (undo-tree-id13709 . -2203) (undo-tree-id13710 . -2203) (undo-tree-id13711 . -2203) (undo-tree-id13712 . -2203) (undo-tree-id13713 . -2203) (undo-tree-id13714 . -2203) (undo-tree-id13715 . -1889) (undo-tree-id13716 . -1889) (undo-tree-id13717 . -124) (undo-tree-id13718 . -1889) (undo-tree-id13719 . -1889) (undo-tree-id13720 . -1889) (undo-tree-id13721 . -1889) (undo-tree-id13722 . -1889) (undo-tree-id13723 . -1889) (undo-tree-id13724 . -1889) (undo-tree-id13725 . -1889) (undo-tree-id13726 . -1889) (undo-tree-id13727 . -1889) (undo-tree-id13728 . -1692) (undo-tree-id13729 . -1692) (undo-tree-id13730 . -1692) (undo-tree-id13731 . -1692) (undo-tree-id13732 . -1692) (undo-tree-id13733 . -1692) (undo-tree-id13734 . -1692) (undo-tree-id13735 . -1692) (undo-tree-id13736 . -1692) (undo-tree-id13737 . -1692) (undo-tree-id13738 . -1692) (undo-tree-id13739 . -1692) (undo-tree-id13740 . -1076) (undo-tree-id13741 . -1076) (undo-tree-id13742 . -1076) (undo-tree-id13743 . -1076) (undo-tree-id13744 . -1076) (undo-tree-id13745 . -1076) (undo-tree-id13746 . -1076) (undo-tree-id13747 . -1076) (undo-tree-id13748 . -1076) (undo-tree-id13749 . -1076) (undo-tree-id13750 . -1076) (undo-tree-id13751 . -1076) (undo-tree-id13752 . -1076) (undo-tree-id13753 . -1076) (undo-tree-id13754 . -1076) (undo-tree-id13755 . -1076) (undo-tree-id13756 . -1076) (undo-tree-id13757 . -1076) (undo-tree-id13758 . -1076) (undo-tree-id13759 . -1076) (undo-tree-id13760 . -1076) (undo-tree-id13761 . -1076) (undo-tree-id13762 . -1076) (undo-tree-id13763 . -1076) (undo-tree-id13764 . -1076) (undo-tree-id13765 . -1076) (undo-tree-id13766 . -1076) (undo-tree-id13767 . -1076) (undo-tree-id13768 . -1076) (undo-tree-id13769 . -1076) (undo-tree-id13770 . -1076) (undo-tree-id13771 . -1076) (undo-tree-id13772 . -1076) (undo-tree-id13773 . -1076) (undo-tree-id13774 . -1076) (undo-tree-id13775 . -1076) (undo-tree-id13776 . -1076) (undo-tree-id13777 . -1076) (undo-tree-id13778 . -124) (undo-tree-id13779 . -1076) (undo-tree-id13780 . -1076) (undo-tree-id13781 . -1076) (undo-tree-id13782 . -1076) (undo-tree-id13783 . -1076) (undo-tree-id13784 . -1076) (undo-tree-id13785 . -1076) (undo-tree-id13786 . -1076) (undo-tree-id13787 . -1076) (undo-tree-id13788 . -1076) (undo-tree-id13789 . -1076) (undo-tree-id13790 . -1076) (undo-tree-id13791 . -346) (undo-tree-id13792 . -1076) (undo-tree-id13793 . -1076) (undo-tree-id13794 . -1076) (undo-tree-id13795 . -1076) (undo-tree-id13796 . -1076) (undo-tree-id13797 . -1076) (undo-tree-id13798 . -1076) (undo-tree-id13799 . -1076) (undo-tree-id13800 . -1076) (undo-tree-id13801 . -1076) (undo-tree-id13802 . -1076) (undo-tree-id13803 . -1076) (undo-tree-id13804 . -728) (undo-tree-id13805 . -1076) (undo-tree-id13806 . -1076) (undo-tree-id13807 . -1076) (undo-tree-id13808 . -1076) (undo-tree-id13809 . -1076) (undo-tree-id13810 . -1076) (undo-tree-id13811 . -1076) (undo-tree-id13812 . -1076) (undo-tree-id13813 . -1076) (undo-tree-id13814 . -1076) (undo-tree-id13815 . -1513) (undo-tree-id13816 . -1513) (undo-tree-id13817 . -1513) (undo-tree-id13818 . -1513) (undo-tree-id13819 . -1513) (undo-tree-id13820 . -1513) (undo-tree-id13821 . -1513) (undo-tree-id13822 . -1513) (undo-tree-id13823 . -2259) (undo-tree-id13824 . -2259) (undo-tree-id13825 . -2259) (undo-tree-id13826 . -2259) (undo-tree-id13827 . -2259) (undo-tree-id13828 . -2259) (undo-tree-id13829 . -2259) (undo-tree-id13830 . -2259) (undo-tree-id13831 . -2259) (undo-tree-id13832 . -2259) (undo-tree-id13833 . -2259) (undo-tree-id13834 . -2259) (undo-tree-id13835 . -2259) (undo-tree-id13836 . -2424) (undo-tree-id13837 . -2424) (undo-tree-id13838 . -2424) (undo-tree-id13839 . -2424) (undo-tree-id13840 . -2424) (undo-tree-id13841 . -2424) (undo-tree-id13842 . -2424) (undo-tree-id13843 . -2424) (undo-tree-id13844 . -2424) (undo-tree-id13845 . -2424) (undo-tree-id13846 . -2424) (undo-tree-id13847 . -2424) (undo-tree-id13848 . -2424) (undo-tree-id13849 . -2630) (undo-tree-id13850 . -2630) (undo-tree-id13851 . -2630) (undo-tree-id13852 . -2630) (undo-tree-id13853 . -2630) (undo-tree-id13854 . -2630) (undo-tree-id13855 . -2630) (undo-tree-id13856 . -2630) (undo-tree-id13857 . -2630) (undo-tree-id13858 . -2630) (undo-tree-id13859 . -2630) (undo-tree-id13860 . -2630) (undo-tree-id13861 . -2630) (undo-tree-id13862 . -2950) (undo-tree-id13863 . -2950) (undo-tree-id13864 . -2950) (undo-tree-id13865 . -2950) (undo-tree-id13866 . -2950) (undo-tree-id13867 . -2950) (undo-tree-id13868 . -2950) (undo-tree-id13869 . -2950) (undo-tree-id13870 . -2950) (undo-tree-id13871 . -2950) (undo-tree-id13872 . -2950) (undo-tree-id13873 . -2950) (undo-tree-id13874 . -2950) (undo-tree-id13875 . -2950) (undo-tree-id13876 . -2950) (undo-tree-id13877 . -2950) (undo-tree-id13878 . -2950) (undo-tree-id13879 . -2950) (undo-tree-id13880 . -2950) (undo-tree-id13881 . -2950) (undo-tree-id13882 . -2950) (undo-tree-id13883 . -2950) (undo-tree-id13884 . -2950) (undo-tree-id13885 . -2950) (undo-tree-id13886 . -2950) (undo-tree-id13887 . -2950) (undo-tree-id13888 . -2950) (undo-tree-id13889 . -2950) (undo-tree-id13890 . -2950) (undo-tree-id13891 . -2950) (undo-tree-id13892 . -2950) (undo-tree-id13893 . -2950) (undo-tree-id13894 . -2950) (undo-tree-id13895 . -2950) (undo-tree-id13896 . -2950) (undo-tree-id13897 . -2950) (undo-tree-id13898 . -2950) (undo-tree-id13899 . -2950) (undo-tree-id13900 . -2950) (undo-tree-id13901 . -2950) (undo-tree-id13902 . -2950) (undo-tree-id13903 . -2950) (undo-tree-id13904 . -2950) (undo-tree-id13905 . -2950) (undo-tree-id13906 . -2950) (undo-tree-id13907 . -2950) (undo-tree-id13908 . -2950) (undo-tree-id13909 . -2950) (undo-tree-id13910 . -2950) (undo-tree-id13911 . -2950) (undo-tree-id13912 . -2950) (undo-tree-id13913 . -2950) (undo-tree-id13914 . -2950) (undo-tree-id13915 . -2950) (undo-tree-id13916 . -2950) (undo-tree-id13917 . -2950) (undo-tree-id13918 . -2950) (undo-tree-id13919 . -2950) (undo-tree-id13920 . -2950) (undo-tree-id13921 . -2950) (undo-tree-id13922 . -2950) (undo-tree-id13923 . -2950) (undo-tree-id13924 . -2950) (undo-tree-id13925 . -2950) (undo-tree-id13926 . -2950) (undo-tree-id13927 . -2950) (undo-tree-id13928 . -2950) (undo-tree-id13929 . -2950) (undo-tree-id13930 . -2950) (undo-tree-id13931 . -2950) (undo-tree-id13932 . -2950) (undo-tree-id13933 . -2950) (undo-tree-id13934 . -2950) (undo-tree-id13935 . -2950) (undo-tree-id13936 . -2950) (undo-tree-id13937 . -2950) (undo-tree-id13938 . -2950) (undo-tree-id13939 . -2950) (undo-tree-id13940 . -2950) (undo-tree-id13941 . -2950) (undo-tree-id13942 . -2950) (undo-tree-id13943 . -2950) (undo-tree-id13944 . -2950) (undo-tree-id13945 . -2950) (undo-tree-id13946 . -2950) (undo-tree-id13947 . -2950) (undo-tree-id13948 . -2950) (undo-tree-id13949 . -2950) (undo-tree-id13950 . -2950) (undo-tree-id13951 . -2950) (undo-tree-id13952 . -2950) (undo-tree-id13953 . -2950) (undo-tree-id13954 . -2950) (undo-tree-id13955 . -2950) (undo-tree-id13956 . -2950) (undo-tree-id13957 . -2950) (undo-tree-id13958 . -2950) (undo-tree-id13959 . -4438) (undo-tree-id13960 . -4438) (undo-tree-id13961 . -4438) (undo-tree-id13962 . -4438) (undo-tree-id13963 . -4438) (undo-tree-id13964 . -4438) (undo-tree-id13965 . -4438) (undo-tree-id13966 . -4438) (undo-tree-id13967 . -4438) (undo-tree-id13968 . -4438) (undo-tree-id13969 . -4438) (undo-tree-id13970 . -4438) (undo-tree-id13971 . -4438) (undo-tree-id13972 . -4438) (undo-tree-id13973 . -4438) (undo-tree-id13974 . -4438) (undo-tree-id13975 . -4438) (undo-tree-id13976 . -4438) (undo-tree-id13977 . -4438) (undo-tree-id13978 . -2950) (undo-tree-id13979 . -4438) (undo-tree-id13980 . -4438) (undo-tree-id13981 . -2950) (undo-tree-id13982 . -4438) (undo-tree-id13983 . -4438) (undo-tree-id13984 . -4438) (undo-tree-id13985 . -4438) (undo-tree-id13986 . -4438) (undo-tree-id13987 . -4438) (undo-tree-id13988 . -4438) (undo-tree-id13989 . -4438) (undo-tree-id13990 . -4438) (undo-tree-id13991 . -4438) (undo-tree-id13992 . -4438) (undo-tree-id13993 . -4438) (undo-tree-id13994 . -4438) (undo-tree-id13995 . -4438) (undo-tree-id13996 . -4440) (undo-tree-id13997 . -4440) (undo-tree-id13998 . -4440) (undo-tree-id13999 . -4440) (undo-tree-id14000 . -4440) (undo-tree-id14001 . -4440) (undo-tree-id14002 . -4440) (undo-tree-id14003 . -4440) (undo-tree-id14004 . -4440) (undo-tree-id14005 . -4440) (undo-tree-id14006 . -4440) (undo-tree-id14007 . -4440) (undo-tree-id14008 . -4440) (undo-tree-id14009 . -4440) (undo-tree-id14010 . -4440) (undo-tree-id14011 . -4440) (undo-tree-id14012 . -4440) (undo-tree-id14013 . -4439) (undo-tree-id14014 . -4440) (undo-tree-id14015 . -2950) (undo-tree-id14016 . -4439) (undo-tree-id14017 . -4440) (undo-tree-id14018 . -2950) (undo-tree-id14019 . -4439) (undo-tree-id14020 . -4439) (undo-tree-id14021 . -4439) (undo-tree-id14022 . -4439) (undo-tree-id14023 . -4439) (undo-tree-id14024 . -4439) (undo-tree-id14025 . -4439) (undo-tree-id14026 . -4439) (undo-tree-id14027 . -4439) (undo-tree-id14028 . -4439) (undo-tree-id14029 . -4439) (undo-tree-id14030 . -4439) (undo-tree-id14031 . -4439) (undo-tree-id14032 . -4439) (undo-tree-id14033 . -4439) (undo-tree-id14034 . -4439) (undo-tree-id14035 . -4439) (undo-tree-id14036 . -4439) (undo-tree-id14037 . -4439) (undo-tree-id14038 . -4439) (undo-tree-id14039 . -4439) (undo-tree-id14040 . -4439) (undo-tree-id14041 . -4439) (undo-tree-id14042 . -4439) (undo-tree-id14043 . -2950) (undo-tree-id14044 . -4439) (undo-tree-id14045 . -4439) (undo-tree-id14046 . -4439) (undo-tree-id14047 . -2950) (undo-tree-id14048 . -4439) (undo-tree-id14049 . -4439) (undo-tree-id14050 . -4439) (undo-tree-id14051 . -4439) (undo-tree-id14052 . -4439) (undo-tree-id14053 . -4439) (undo-tree-id14054 . -4439) (undo-tree-id14055 . -4439) (undo-tree-id14056 . -4439) (undo-tree-id14057 . -4439) (undo-tree-id14058 . -4439) (undo-tree-id14059 . -4439) (undo-tree-id14060 . -4439) (undo-tree-id14061 . -4439) (undo-tree-id14062 . -4439) (undo-tree-id14063 . -4439) (undo-tree-id14064 . -4439) (undo-tree-id14065 . -4439) (undo-tree-id14066 . -4439) (undo-tree-id14067 . -4439) (undo-tree-id14068 . -4439) (undo-tree-id14069 . -4439) (undo-tree-id14070 . -4439) (undo-tree-id14071 . -4439) (undo-tree-id14072 . -4439) (undo-tree-id14073 . -4439) (undo-tree-id14074 . -4439) (undo-tree-id14075 . -2950) (undo-tree-id14076 . -4439) (undo-tree-id14077 . -4439) (undo-tree-id14078 . -2950) (undo-tree-id14079 . -4439) (undo-tree-id14080 . -4439) (undo-tree-id14081 . -2950) (undo-tree-id14082 . -4439) (undo-tree-id14083 . -4439) (undo-tree-id14084 . -2950) (undo-tree-id14085 . -4439) 74576 (t 25151 36826 970695 42000)) nil (25151 36868 957593 384000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 76394)) nil (25151 36868 952429 161000) 0 nil])
([nil nil ((70137 . 76470) (#("
     (defun zetteldesk-note-refs-p ()
       \"Predicate function that finds all bibtex completion candidates with a note.

     Checks if every candidate has the \\\"=has-note=\\\" tag using
     `assoc' and if it does, collects that candidate\"
       (cl-loop for ref in (bibtex-completion-candidates)
		if (assoc \"=has-note=\" ref)
		collect ref))

     (defun zetteldesk-citekey-from-refs ()
       \"Function that finds the \\\"=key=\\\" tag from a list of candidates.

     The list is collected with `zetteldesk-note-refs-p' which is a
     list of candidates that have notes. Collects it using `assoc'.\"
       (cl-loop for ref in (zetteldesk-note-refs-p)
		collect (assoc \"=key=\" ref)))

     (defun zetteldesk-node-from-refs ()
       \"Function that collects a list of ref nodes.

     The nodes are collected from their citekey using
     `org-roam-node-from-ref', while the citekeys themselves are
     collected from `zetteldesk-citekey-from-refs'.\"
       (cl-loop for ref in (zetteldesk-citekey-from-refs)
		collect (org-roam-node-from-ref (concat \"cite:\" (cdr ref)))))

     (defun org-roam-node-read--completions* (node-list &optional filter-fn sort-fn)
       \"Runs `org-roam-node-read--completions' with NODE-LIST being a list of nodes.

     Typically, the function takes `org-roam-node-list' as the initial
     list of nodes and creates the alist `org-roam-node-read'
     uses. However, it can be helpful to supply the list of nodes
     yourself, when the predicate function used cannot be inferred
     through a filter function of the form this function
     takes. FILTER-FN and SORT-FN are the same as in
     `org-roam-node-read--completions'. The resulting alist is to be
     used with `org-roam-node-read*'.\"
       (let* ((template (org-roam-node--process-display-format org-roam-node-display-template))
	      (nodes node-list)
	      (nodes (mapcar (lambda (node)
			       (org-roam-node-read--to-candidate node template)) nodes))
	      (nodes (if filter-fn
			 (cl-remove-if-not
			  (lambda (n) (funcall filter-fn (cdr n)))
			  nodes)
		       nodes))
	      (sort-fn (or sort-fn
			   (when org-roam-node-default-sort
			     (intern (concat \"org-roam-node-read-sort-by-\"
					     (symbol-name org-roam-node-default-sort))))))
	      (nodes (if sort-fn (seq-sort sort-fn nodes)
		       nodes)))
	 nodes))

     (defun org-roam-node-read* (node-list &optional initial-input filter-fn sort-fn require-match prompt)
       \"Runs `org-roam-node-read' with the nodes supplied by NODE-LIST.

     NODE-LIST is a list of nodes passed to
     `org-roam-node-read--completions*', which creates an alist of
     nodes with the proper formatting to be used in this
     function. This is for those cases where it is helpful to use your
     own list of nodes, because a predicate function can not filter
     them in the way you want easily.\"
       (let* ((nodes (org-roam-node-read--completions* node-list filter-fn sort-fn))
	      (prompt (or prompt \"Node: \"))
	      (node (completing-read
		     prompt
		     (lambda (string pred action)
		       (if (eq action 'metadata)
			   `(metadata
			     ;; Preserve sorting in the completion UI if a sort-fn is used
			     ,@(when sort-fn
				 '((display-sort-function . identity)
				   (cycle-sort-function . identity)))
			     (annotation-function
			      . ,(lambda (title)
				   (funcall org-roam-node-annotation-function
					    (get-text-property 0 'node title))))
			     (category . org-roam-node))
			 (complete-with-action action nodes string pred)))
		     nil require-match initial-input 'org-roam-node-history)))
	 (or (cdr (assoc node nodes))
	     (org-roam-node-create :title node))))

     (defun zetteldesk-find-ref-node ()
       \"Execute a filtered version of `ivy-bibtex-with-notes'.

     This does not exactly run `ivy-bibtex-with-notes' as that doesn't
     have a way to filter things. It collects a list of nodes which
     are reference nodes linked to a bibtex entry through
     `zetteldesk-node-from-refs' and passes it to
     `org-roam-node-read*' which is a modified version of
     `org-roam-node-read' which takes a list of nodes as an
     argument. Since this required a rewrite of `org-roam-node-read',
     finding the file is done indirectly and not through
     `org-roam-node-file'.\"
       (interactive)
       (find-file (org-roam-node-file (org-roam-node-read* (zetteldesk-node-from-refs) nil #'zetteldesk-node-p))))

     (defun zetteldesk-insert-ref-node-contents (&optional arg)
       \"Select a node that is part of the current `zetteldesk' and a ref node.
     Ref nodes are nodes that refer to reference material such as an
     article. These are gathered with `zetteldesk-node-from-refs' and
     shown to the user through `org-roam-node-read*' filtered
     according to `zetteldesk-node-p'.

     After selection, insert its citekey at point for future
     reference, then in the location determined by
     `zetteldesk-insert-location' (typically *zetteldesk-scratch*), go
     to `point-max', insert a newline and then insert the contents of
     the selected node but remove the first 4 lines which is the
     unneeded property drawer. After, indent all headings by one level
     and replace the #+title: with an asterisk. Finally, enter a
     newline after the title, where the string \\\"Bibtex entry for
     node: \\\" is entered suffixed by the citekey of the entry.

     If given the optional argument ARG, which needs to be the
     `\\\\[universal-argument]' also switch to the *zetteldesk-scratch*
     buffer in a split.\"
       (interactive \"P\")
       (let* ((node
	       (org-roam-node-read* (zetteldesk-node-from-refs) nil #'zetteldesk-node-p))
	      (file (org-roam-node-file node))
	      (location (zetteldesk-insert-location))
	      (citekey (concat \"cite:\" (car (org-roam-node-refs node)))))
	 (insert citekey)
	 (set-buffer location)
	 (goto-char (point-max))
	 (save-excursion
	   (insert-file-contents file))
	 (kill-whole-line 4)
	 (newline)
	 (save-excursion
	   (while (not (org-next-visible-heading 1))
	     (org-metaright)))
	 (replace-string \"#+title: \" \"* \")
	 (end-of-line 1)
	 (newline)
	 (insert \"Bibtex entry for node: \"
		 citekey))
       (zetteldesk-insert-switch-to-scratch arg))

" 0 7 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7 12 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12 13 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 35 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 35 46 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 46 165 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 165 166 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 166 174 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 174 175 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 175 194 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 194 199 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 199 241 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 241 250 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 250 257 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 257 312 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 312 313 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 313 314 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 314 322 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 322 323 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 323 324 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 324 353 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 353 358 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 358 359 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 359 387 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 387 398 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 398 425 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 425 426 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 426 429 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 429 430 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 430 498 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 498 500 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 500 520 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 520 593 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 593 598 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 598 601 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 601 610 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 610 617 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 617 671 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 671 672 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 672 673 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 673 676 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 676 677 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 677 678 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 678 693 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 693 698 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 698 699 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 699 724 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 724 735 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 735 841 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 841 863 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 863 921 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 921 949 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 949 952 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 952 961 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 961 968 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 968 1053 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1053 1060 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1060 1082 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1082 1087 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1087 1088 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1088 1120 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 1120 1132 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1132 1141 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 1141 1168 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1168 1175 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1175 1206 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1206 1283 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1283 1301 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1301 1360 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1360 1378 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1378 1629 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1629 1660 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1660 1708 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1708 1727 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1727 1730 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1730 1739 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1739 1743 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1743 1875 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1875 1881 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1881 1949 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1949 1956 (fontified t font-lock-fontified t help-echo "Hidden behind deeper element; move to another line?" src-block t font-lock-multiline t face (font-lock-warning-face org-block)) 1956 1972 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1972 1974 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1974 2013 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2013 2019 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2019 2099 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2099 2101 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2101 2117 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2117 2121 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2121 2173 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2173 2202 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2202 2274 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2274 2276 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2276 2345 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2345 2350 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2350 2351 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2351 2370 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 2370 2382 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2382 2391 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 2391 2453 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2453 2460 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2460 2478 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2478 2569 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2569 2601 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2601 2864 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2864 2873 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2873 2877 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2877 2966 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2966 2968 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2968 2976 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2976 2984 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2984 3039 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3039 3045 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3045 3077 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3077 3079 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3079 3127 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3127 3130 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3130 3189 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3189 3200 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3200 3204 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3204 3339 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3339 3345 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3345 3608 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3608 3610 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3610 3664 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3664 3670 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 3670 3687 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3687 3692 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3692 3693 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3693 3717 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 3717 3728 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3728 3760 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3760 3781 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3781 3817 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3817 3838 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3838 3988 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3988 4013 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4013 4038 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4038 4057 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4057 4096 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4096 4114 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4114 4199 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4199 4217 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4217 4283 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4283 4301 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4301 4304 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4304 4313 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4313 4324 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4324 4448 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4448 4453 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4453 4454 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4454 4489 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 4489 4491 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4491 4500 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 4500 4513 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4513 4557 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4557 4567 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4567 4693 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4693 4718 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4718 4756 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4756 4775 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4775 4805 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4805 4822 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4822 4944 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4944 4970 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4970 4983 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4983 4984 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 4984 5002 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5002 5003 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5003 5018 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5018 5027 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 5027 5482 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5482 5500 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 5500 5522 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5522 5523 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5523 5541 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5541 5542 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5542 5567 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5567 5576 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5576 5587 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5587 5588 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5588 5591 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5591 5601 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5601 5605 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5605 5674 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5674 5754 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5754 5780 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5780 5807 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5807 5814 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5814 5922 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5922 5936 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5936 6007 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6007 6021 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6021 6027 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6027 6032 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6032 6110 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6110 6121 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6121 6122 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6122 6126 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6126 6168 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6168 6174 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6174 6193 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6193 6215 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6215 6250 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6250 6258 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 70137) (undo-tree-id14919 . -5279) (undo-tree-id14920 . -6257) (undo-tree-id14921 . -6257) (undo-tree-id14922 . -5674) (undo-tree-id14923 . -6257) (undo-tree-id14924 . -6257) (undo-tree-id14925 . -5674) (undo-tree-id14926 . -6257) (undo-tree-id14927 . -6257) (undo-tree-id14928 . -5674) (undo-tree-id14929 . -6257) (undo-tree-id14930 . -6257) (undo-tree-id14931 . -6257) (undo-tree-id14932 . -6257) (undo-tree-id14933 . -6257) (undo-tree-id14934 . -6257) (undo-tree-id14935 . -6257) (undo-tree-id14936 . -6257) (undo-tree-id14937 . -6257) (undo-tree-id14938 . -6257) (undo-tree-id14939 . -6257) (undo-tree-id14940 . -6257) (undo-tree-id14941 . -6257) (undo-tree-id14942 . -6257) (undo-tree-id14943 . -6257) (undo-tree-id14944 . -6257) (undo-tree-id14945 . -6257) (undo-tree-id14946 . -6257) (undo-tree-id14947 . -6257) (undo-tree-id14948 . -5674) (undo-tree-id14949 . -6257) (undo-tree-id14950 . -6257) (undo-tree-id14951 . -5674) (undo-tree-id14952 . -6257) (undo-tree-id14953 . -6257) (undo-tree-id14954 . -6257) (undo-tree-id14955 . -6257) (undo-tree-id14956 . -6257) (undo-tree-id14957 . -6257) (undo-tree-id14958 . -6257) (undo-tree-id14959 . -6257) (undo-tree-id14960 . -6257) (undo-tree-id14961 . -6257) (undo-tree-id14962 . -6257) (undo-tree-id14963 . -6257) (undo-tree-id14964 . -6257) (undo-tree-id14965 . -6257) (undo-tree-id14966 . -6257) (undo-tree-id14967 . -6257) (undo-tree-id14968 . -6257) (undo-tree-id14969 . -6257) (undo-tree-id14970 . -6257) (undo-tree-id14971 . -6257) (undo-tree-id14972 . -6257) (undo-tree-id14973 . -6257) (undo-tree-id14974 . -6257) (undo-tree-id14975 . -6257) (undo-tree-id14976 . -6257) (undo-tree-id14977 . -6257) (undo-tree-id14978 . -5473) (undo-tree-id14979 . -6257) (undo-tree-id14980 . -6257) (undo-tree-id14981 . -6257) (undo-tree-id14982 . -6257) (undo-tree-id14983 . -6257) (undo-tree-id14984 . -6257) (undo-tree-id14985 . -6257) (undo-tree-id14986 . -6257) (undo-tree-id14987 . -6257) (undo-tree-id14988 . -6257) (undo-tree-id14989 . -6257) (undo-tree-id14990 . -6257) (undo-tree-id14991 . -6257) (undo-tree-id14992 . -6257) (undo-tree-id14993 . -4887) (undo-tree-id14994 . -6257) (undo-tree-id14995 . -6257) (undo-tree-id14996 . -6257) (undo-tree-id14997 . -6257) (undo-tree-id14998 . -6257) (undo-tree-id14999 . -6257) (undo-tree-id15000 . -6257) (undo-tree-id15001 . -6257) (undo-tree-id15002 . -6257) (undo-tree-id15003 . -6257) (undo-tree-id15004 . -6257) (undo-tree-id15005 . -6257) (undo-tree-id15006 . -5937) (undo-tree-id15007 . -5937) (undo-tree-id15008 . -4150) (undo-tree-id15009 . -5937) (undo-tree-id15010 . -5937) (undo-tree-id15011 . -5937) (undo-tree-id15012 . -5937) (undo-tree-id15013 . -5937) (undo-tree-id15014 . -5937) (undo-tree-id15015 . -5937) (undo-tree-id15016 . -5937) (undo-tree-id15017 . -5937) (undo-tree-id15018 . -5937) (undo-tree-id15019 . -5937) (undo-tree-id15020 . -5937) (undo-tree-id15021 . -5079) (undo-tree-id15022 . -5079) (undo-tree-id15023 . -3255) (undo-tree-id15024 . -5079) (undo-tree-id15025 . -5079) (undo-tree-id15026 . -5079) (undo-tree-id15027 . -5079) (undo-tree-id15028 . -5079) (undo-tree-id15029 . -5079) (undo-tree-id15030 . -5079) (undo-tree-id15031 . -5079) (undo-tree-id15032 . -5079) (undo-tree-id15033 . -5079) (undo-tree-id15034 . -5079) (undo-tree-id15035 . -5079) (undo-tree-id15036 . -5079) (undo-tree-id15037 . -5079) (undo-tree-id15038 . -3450) (undo-tree-id15039 . -5079) (undo-tree-id15040 . -5079) (undo-tree-id15041 . -5079) (undo-tree-id15042 . -5079) (undo-tree-id15043 . -5079) (undo-tree-id15044 . -5079) (undo-tree-id15045 . -5079) (undo-tree-id15046 . -5079) (undo-tree-id15047 . -5079) (undo-tree-id15048 . -5079) (undo-tree-id15049 . -5079) (undo-tree-id15050 . -5079) (undo-tree-id15051 . -5079) (undo-tree-id15052 . -5079) (undo-tree-id15053 . -3680) (undo-tree-id15054 . -5079) (undo-tree-id15055 . -5079) (undo-tree-id15056 . -5079) (undo-tree-id15057 . -5079) (undo-tree-id15058 . -5079) (undo-tree-id15059 . -5079) (undo-tree-id15060 . -5079) (undo-tree-id15061 . -5079) (undo-tree-id15062 . -5079) (undo-tree-id15063 . -5079) (undo-tree-id15064 . -5079) (undo-tree-id15065 . -5079) (undo-tree-id15066 . -5079) (undo-tree-id15067 . -5079) (undo-tree-id15068 . -3856) (undo-tree-id15069 . -5079) (undo-tree-id15070 . -5079) (undo-tree-id15071 . -5079) (undo-tree-id15072 . -5079) (undo-tree-id15073 . -5079) (undo-tree-id15074 . -5079) (undo-tree-id15075 . -5079) (undo-tree-id15076 . -5079) (undo-tree-id15077 . -5079) (undo-tree-id15078 . -5079) (undo-tree-id15079 . -5079) (undo-tree-id15080 . -5079) (undo-tree-id15081 . -5079) (undo-tree-id15082 . -5079) (undo-tree-id15083 . -4150) (undo-tree-id15084 . -5079) (undo-tree-id15085 . -5079) (undo-tree-id15086 . -5079) (undo-tree-id15087 . -5079) (undo-tree-id15088 . -5079) (undo-tree-id15089 . -5079) (undo-tree-id15090 . -5079) (undo-tree-id15091 . -5079) (undo-tree-id15092 . -5079) (undo-tree-id15093 . -5079) (undo-tree-id15094 . -5079) (undo-tree-id15095 . -5079) (undo-tree-id15096 . -5079) (undo-tree-id15097 . -5079) (undo-tree-id15098 . -4385) (undo-tree-id15099 . -5079) (undo-tree-id15100 . -5079) (undo-tree-id15101 . -5079) (undo-tree-id15102 . -5079) (undo-tree-id15103 . -5079) (undo-tree-id15104 . -5079) (undo-tree-id15105 . -5079) (undo-tree-id15106 . -5079) (undo-tree-id15107 . -5079) (undo-tree-id15108 . -5079) (undo-tree-id15109 . -5079) (undo-tree-id15110 . -5079) (undo-tree-id15111 . -5079) (undo-tree-id15112 . -5079) (undo-tree-id15113 . -4654) (undo-tree-id15114 . -5079) (undo-tree-id15115 . -5079) (undo-tree-id15116 . -5079) (undo-tree-id15117 . -5079) (undo-tree-id15118 . -5079) (undo-tree-id15119 . -5079) (undo-tree-id15120 . -5079) (undo-tree-id15121 . -5079) (undo-tree-id15122 . -5079) (undo-tree-id15123 . -5079) (undo-tree-id15124 . -5079) (undo-tree-id15125 . -5079) (undo-tree-id15126 . -5215) (undo-tree-id15127 . -5215) (undo-tree-id15128 . -5215) (undo-tree-id15129 . -5215) (undo-tree-id15130 . -5215) (undo-tree-id15131 . -5215) (undo-tree-id15132 . -5215) (undo-tree-id15133 . -5215) (undo-tree-id15134 . -5215) (undo-tree-id15135 . -5215) (undo-tree-id15136 . -5215) (undo-tree-id15137 . -5215) (undo-tree-id15138 . -5215) (undo-tree-id15139 . -5215) (undo-tree-id15140 . -5215) (undo-tree-id15141 . -5215) (undo-tree-id15142 . -5215) (undo-tree-id15143 . -5215) (undo-tree-id15144 . -5215) (undo-tree-id15145 . -5215) (undo-tree-id15146 . -5215) (undo-tree-id15147 . -5215) (undo-tree-id15148 . -5215) (undo-tree-id15149 . -5215) (undo-tree-id15150 . -5215) (undo-tree-id15151 . -5215) (undo-tree-id15152 . -5215) (undo-tree-id15153 . -5215) (undo-tree-id15154 . -5215) (undo-tree-id15155 . -5215) (undo-tree-id15156 . -5215) (undo-tree-id15157 . -5215) (undo-tree-id15158 . -5215) (undo-tree-id15159 . -5215) (undo-tree-id15160 . -5215) (undo-tree-id15161 . -5215) (undo-tree-id15162 . -5215) (undo-tree-id15163 . -5215) (undo-tree-id15164 . -5215) (undo-tree-id15165 . -5215) (undo-tree-id15166 . -5215) (undo-tree-id15167 . -5215) (undo-tree-id15168 . -5215) (undo-tree-id15169 . -5215) (undo-tree-id15170 . -5215) (undo-tree-id15171 . -5215) (undo-tree-id15172 . -5215) (undo-tree-id15173 . -5215) (undo-tree-id15174 . -5215) (undo-tree-id15175 . -5215) (undo-tree-id15176 . -5215) (undo-tree-id15177 . -5215) (undo-tree-id15178 . -5215) (undo-tree-id15179 . -5215) (undo-tree-id15180 . -4887) (undo-tree-id15181 . -5215) (undo-tree-id15182 . -5215) (undo-tree-id15183 . -5215) (undo-tree-id15184 . -5215) (undo-tree-id15185 . -5215) (undo-tree-id15186 . -5215) (undo-tree-id15187 . -5215) (undo-tree-id15188 . -5215) (undo-tree-id15189 . -5215) (undo-tree-id15190 . -5215) (undo-tree-id15191 . -5215) (undo-tree-id15192 . -5215) (undo-tree-id15193 . -5215) (undo-tree-id15194 . -5215) (undo-tree-id15195 . -4654) (undo-tree-id15196 . -5215) (undo-tree-id15197 . -5215) (undo-tree-id15198 . -5215) (undo-tree-id15199 . -5215) (undo-tree-id15200 . -5215) (undo-tree-id15201 . -5215) (undo-tree-id15202 . -5215) (undo-tree-id15203 . -5215) (undo-tree-id15204 . -5215) (undo-tree-id15205 . -5215) (undo-tree-id15206 . -5215) (undo-tree-id15207 . -5215) (undo-tree-id15208 . -5215) (undo-tree-id15209 . -5215) (undo-tree-id15210 . -4090) (undo-tree-id15211 . -5215) (undo-tree-id15212 . -5215) (undo-tree-id15213 . -5215) (undo-tree-id15214 . -5215) (undo-tree-id15215 . -5215) (undo-tree-id15216 . -5215) (undo-tree-id15217 . -5215) (undo-tree-id15218 . -5215) (undo-tree-id15219 . -5215) (undo-tree-id15220 . -5215) (undo-tree-id15221 . -5215) (undo-tree-id15222 . -5215) (undo-tree-id15223 . -5215) (undo-tree-id15224 . -5215) (undo-tree-id15225 . -4326) (undo-tree-id15226 . -5215) (undo-tree-id15227 . -5215) (undo-tree-id15228 . -5215) (undo-tree-id15229 . -5215) (undo-tree-id15230 . -5215) (undo-tree-id15231 . -5215) (undo-tree-id15232 . -5215) (undo-tree-id15233 . -5215) (undo-tree-id15234 . -5215) (undo-tree-id15235 . -5215) (undo-tree-id15236 . -5215) (undo-tree-id15237 . -5215) (undo-tree-id15238 . -5215) (undo-tree-id15239 . -5215) (undo-tree-id15240 . -4654) (undo-tree-id15241 . -5215) (undo-tree-id15242 . -5215) (undo-tree-id15243 . -5215) (undo-tree-id15244 . -5215) (undo-tree-id15245 . -5215) (undo-tree-id15246 . -5215) (undo-tree-id15247 . -5215) (undo-tree-id15248 . -5215) (undo-tree-id15249 . -5215) (undo-tree-id15250 . -5215) (undo-tree-id15251 . -5215) (undo-tree-id15252 . -5215) (undo-tree-id15253 . -5215) (undo-tree-id15254 . -5215) (undo-tree-id15255 . -4326) (undo-tree-id15256 . -5215) (undo-tree-id15257 . -5215) (undo-tree-id15258 . -5215) (undo-tree-id15259 . -5215) (undo-tree-id15260 . -5215) (undo-tree-id15261 . -5215) (undo-tree-id15262 . -5215) (undo-tree-id15263 . -5215) (undo-tree-id15264 . -5215) (undo-tree-id15265 . -5215) (undo-tree-id15266 . -5215) (undo-tree-id15267 . -5215) (undo-tree-id15268 . -5215) (undo-tree-id15269 . -5215) (undo-tree-id15270 . -3785) (undo-tree-id15271 . -5215) (undo-tree-id15272 . -5215) (undo-tree-id15273 . -5215) (undo-tree-id15274 . -5215) (undo-tree-id15275 . -5215) (undo-tree-id15276 . -5215) (undo-tree-id15277 . -5215) (undo-tree-id15278 . -5215) (undo-tree-id15279 . -5215) (undo-tree-id15280 . -5215) (undo-tree-id15281 . -5215) (undo-tree-id15282 . -5215) (undo-tree-id15283 . -5079) (undo-tree-id15284 . -5079) (undo-tree-id15285 . -3213) (undo-tree-id15286 . -5079) (undo-tree-id15287 . -5079) (undo-tree-id15288 . -5079) (undo-tree-id15289 . -5079) (undo-tree-id15290 . -5079) (undo-tree-id15291 . -5079) (undo-tree-id15292 . -5079) (undo-tree-id15293 . -5079) (undo-tree-id15294 . -5079) (undo-tree-id15295 . -5079) (undo-tree-id15296 . -5079) (undo-tree-id15297 . -5079) (undo-tree-id15298 . -3982) (undo-tree-id15299 . -3982) (undo-tree-id15300 . -2328) (undo-tree-id15301 . -3982) (undo-tree-id15302 . -3982) (undo-tree-id15303 . -3982) (undo-tree-id15304 . -3982) (undo-tree-id15305 . -3982) (undo-tree-id15306 . -3982) (undo-tree-id15307 . -3982) (undo-tree-id15308 . -3982) (undo-tree-id15309 . -3982) (undo-tree-id15310 . -3982) (undo-tree-id15311 . -3982) (undo-tree-id15312 . -3982) (undo-tree-id15313 . -2987) (undo-tree-id15314 . -2987) (undo-tree-id15315 . -1161) (undo-tree-id15316 . -2987) (undo-tree-id15317 . -2987) (undo-tree-id15318 . -2987) (undo-tree-id15319 . -2987) (undo-tree-id15320 . -2987) (undo-tree-id15321 . -2987) (undo-tree-id15322 . -2987) (undo-tree-id15323 . -2987) (undo-tree-id15324 . -2987) (undo-tree-id15325 . -2987) (undo-tree-id15326 . -2987) (undo-tree-id15327 . -2987) (undo-tree-id15328 . -1623) (undo-tree-id15329 . -1623) (undo-tree-id15330 . -1623) (undo-tree-id15331 . -1623) (undo-tree-id15332 . -1623) (undo-tree-id15333 . -1623) (undo-tree-id15334 . -1623) (undo-tree-id15335 . -1623) (undo-tree-id15336 . -1623) (undo-tree-id15337 . -1623) (undo-tree-id15338 . -1623) (undo-tree-id15339 . -1623) (undo-tree-id15340 . -1623) (undo-tree-id15341 . -1623) (undo-tree-id15342 . -1) (undo-tree-id15343 . -1) (undo-tree-id15344 . -1) (undo-tree-id15345 . -1) (undo-tree-id15346 . -1) (undo-tree-id15347 . -1) (undo-tree-id15348 . -1) (undo-tree-id15349 . -1) (undo-tree-id15350 . -1) (undo-tree-id15351 . -1) (undo-tree-id15352 . -1) (undo-tree-id15353 . -1) (undo-tree-id15354 . -1) (undo-tree-id15355 . -1) (undo-tree-id15356 . -1) (undo-tree-id15357 . -1) (undo-tree-id15358 . -1) (undo-tree-id15359 . -1) (undo-tree-id15360 . -1) (undo-tree-id15361 . -1) (undo-tree-id15362 . -1) (undo-tree-id15363 . -1) (undo-tree-id15364 . -1) (undo-tree-id15365 . -1) (undo-tree-id15366 . -1) (undo-tree-id15367 . -1) (undo-tree-id15368 . -1) (undo-tree-id15369 . -1) (undo-tree-id15370 . -1) (undo-tree-id15371 . -1) (undo-tree-id15372 . -1) (undo-tree-id15373 . -1) (undo-tree-id15374 . -1) (undo-tree-id15375 . -1) (undo-tree-id15376 . -1) (undo-tree-id15377 . -1) (undo-tree-id15378 . -1) (undo-tree-id15379 . -1) (undo-tree-id15380 . -1) (undo-tree-id15381 . -1) (undo-tree-id15382 . -1) (undo-tree-id15383 . -1) (undo-tree-id15384 . -1) (undo-tree-id15385 . -1) (undo-tree-id15386 . -1) (undo-tree-id15387 . -1) (undo-tree-id15388 . -1) (undo-tree-id15389 . -1) (undo-tree-id15390 . -1) (undo-tree-id15391 . -1) (undo-tree-id15392 . -1) (undo-tree-id15393 . -1) (undo-tree-id15394 . -1) (undo-tree-id15395 . -1) (undo-tree-id15396 . -1) (undo-tree-id15397 . -1) (undo-tree-id15398 . -1) (undo-tree-id15399 . -1) (undo-tree-id15400 . -1) (undo-tree-id15401 . -1) (undo-tree-id15402 . -1) (undo-tree-id15403 . -1) (undo-tree-id15404 . -1) (undo-tree-id15405 . -1) (undo-tree-id15406 . -1) (undo-tree-id15407 . -1) (undo-tree-id15408 . -1) (undo-tree-id15409 . -1) (undo-tree-id15410 . -1) (undo-tree-id15411 . -1) (undo-tree-id15412 . -1) (undo-tree-id15413 . -1) (undo-tree-id15414 . -1) (undo-tree-id15415 . -1) (undo-tree-id15416 . -1) (undo-tree-id15417 . -1) (undo-tree-id15418 . -1) (undo-tree-id15419 . -1) (undo-tree-id15420 . -1) (undo-tree-id15421 . -1) (undo-tree-id15422 . -1) (undo-tree-id15423 . -1) (undo-tree-id15424 . -1) (undo-tree-id15425 . -1) (undo-tree-id15426 . -1) (undo-tree-id15427 . -1) (undo-tree-id15428 . -1) (undo-tree-id15429 . -1) (undo-tree-id15430 . -1) (undo-tree-id15431 . -1) (undo-tree-id15432 . -1) (undo-tree-id15433 . -1) (undo-tree-id15434 . -1) (undo-tree-id15435 . -1) (undo-tree-id15436 . -1) (undo-tree-id15437 . -1) (undo-tree-id15438 . -1) (undo-tree-id15439 . -1) (undo-tree-id15440 . -1) (undo-tree-id15441 . -1) (undo-tree-id15442 . -1) (undo-tree-id15443 . -1) (undo-tree-id15444 . -1) (undo-tree-id15445 . -1) (undo-tree-id15446 . -1) (undo-tree-id15447 . -1) (undo-tree-id15448 . -1) (undo-tree-id15449 . -1) (undo-tree-id15450 . -1) (undo-tree-id15451 . -1) (undo-tree-id15452 . -1) (undo-tree-id15453 . -1) (undo-tree-id15454 . -123) (undo-tree-id15455 . -123) (undo-tree-id15456 . -123) (undo-tree-id15457 . -123) (undo-tree-id15458 . -123) (undo-tree-id15459 . -123) (undo-tree-id15460 . -123) (undo-tree-id15461 . -123) (undo-tree-id15462 . -123) (undo-tree-id15463 . -123) (undo-tree-id15464 . -123) (undo-tree-id15465 . -123) (undo-tree-id15466 . -123) (undo-tree-id15467 . -123) (undo-tree-id15468 . -123) (undo-tree-id15469 . -330) (undo-tree-id15470 . -330) (undo-tree-id15471 . -330) (undo-tree-id15472 . -330) (undo-tree-id15473 . -330) (undo-tree-id15474 . -330) (undo-tree-id15475 . -330) (undo-tree-id15476 . -330) (undo-tree-id15477 . -330) (undo-tree-id15478 . -330) (undo-tree-id15479 . -330) (undo-tree-id15480 . -330) (undo-tree-id15481 . -330) (undo-tree-id15482 . -330) (undo-tree-id15483 . -330) (undo-tree-id15484 . -465) (undo-tree-id15485 . -465) (undo-tree-id15486 . -465) (undo-tree-id15487 . -465) (undo-tree-id15488 . -465) (undo-tree-id15489 . -465) (undo-tree-id15490 . -465) (undo-tree-id15491 . -465) (undo-tree-id15492 . -465) (undo-tree-id15493 . -465) (undo-tree-id15494 . -465) (undo-tree-id15495 . -465) (undo-tree-id15496 . -465) (undo-tree-id15497 . -465) (undo-tree-id15498 . -465) (undo-tree-id15499 . -900) (undo-tree-id15500 . -900) (undo-tree-id15501 . -900) (undo-tree-id15502 . -900) (undo-tree-id15503 . -900) (undo-tree-id15504 . -900) (undo-tree-id15505 . -900) (undo-tree-id15506 . -900) (undo-tree-id15507 . -1731) (undo-tree-id15508 . -1731) (undo-tree-id15509 . -1731) (undo-tree-id15510 . -1731) (undo-tree-id15511 . -1731) (undo-tree-id15512 . -1731) (undo-tree-id15513 . -1731) (undo-tree-id15514 . -1731) (undo-tree-id15515 . -2519) (undo-tree-id15516 . -2519) (undo-tree-id15517 . -2519) (undo-tree-id15518 . -2519) (undo-tree-id15519 . -2519) (undo-tree-id15520 . -2519) (undo-tree-id15521 . -2519) (undo-tree-id15522 . -2519) (undo-tree-id15523 . -3636) (undo-tree-id15524 . -3636) (undo-tree-id15525 . -3636) (undo-tree-id15526 . -3636) (undo-tree-id15527 . -3636) (undo-tree-id15528 . -3636) (undo-tree-id15529 . -3636) (undo-tree-id15530 . -3636) (undo-tree-id15531 . -5215) (undo-tree-id15532 . -5215) (undo-tree-id15533 . -5215) (undo-tree-id15534 . -5215) (undo-tree-id15535 . -5215) (undo-tree-id15536 . -5215) (undo-tree-id15537 . -5215) (undo-tree-id15538 . -5215) (undo-tree-id15539 . -5215) (undo-tree-id15540 . -5215) (undo-tree-id15541 . -5215) (undo-tree-id15542 . -5215) (undo-tree-id15543 . -5215) (undo-tree-id15544 . -5215) (undo-tree-id15545 . -5215) (undo-tree-id15546 . -5473) (undo-tree-id15547 . -5473) (undo-tree-id15548 . -5473) (undo-tree-id15549 . -5473) (undo-tree-id15550 . -5473) (undo-tree-id15551 . -5473) (undo-tree-id15552 . -5473) (undo-tree-id15553 . -5473) (undo-tree-id15554 . -5473) (undo-tree-id15555 . -5473) (undo-tree-id15556 . -5473) (undo-tree-id15557 . -5473) (undo-tree-id15558 . -5473) (undo-tree-id15559 . -5473) (undo-tree-id15560 . -5473) (undo-tree-id15561 . -5696) (undo-tree-id15562 . -5696) (undo-tree-id15563 . -5696) (undo-tree-id15564 . -5696) (undo-tree-id15565 . -5696) (undo-tree-id15566 . -5696) (undo-tree-id15567 . -5696) (undo-tree-id15568 . -5696) (undo-tree-id15569 . -5696) (undo-tree-id15570 . -5696) (undo-tree-id15571 . -5696) (undo-tree-id15572 . -5696) (undo-tree-id15573 . -5696) (undo-tree-id15574 . -5696) (undo-tree-id15575 . -5696) (undo-tree-id15576 . -5893) (undo-tree-id15577 . -5893) (undo-tree-id15578 . -5893) (undo-tree-id15579 . -5893) (undo-tree-id15580 . -5893) (undo-tree-id15581 . -5893) (undo-tree-id15582 . -5893) (undo-tree-id15583 . -5893) (undo-tree-id15584 . -5893) (undo-tree-id15585 . -5893) (undo-tree-id15586 . -5893) (undo-tree-id15587 . -5893) (undo-tree-id15588 . -5893) (undo-tree-id15589 . -5893) (undo-tree-id15590 . -5893) (undo-tree-id15591 . -6146) (undo-tree-id15592 . -6146) (undo-tree-id15593 . -6146) (undo-tree-id15594 . -6146) (undo-tree-id15595 . -6146) (undo-tree-id15596 . -6146) (undo-tree-id15597 . -6146) (undo-tree-id15598 . -6146) (undo-tree-id15599 . -6146) (undo-tree-id15600 . -6146) (undo-tree-id15601 . -6146) (undo-tree-id15602 . -6146) (undo-tree-id15603 . -6146) (undo-tree-id15604 . -6146) (undo-tree-id15605 . -6146) (undo-tree-id15606 . -6146) (undo-tree-id15607 . -6146) (undo-tree-id15608 . -6004) (undo-tree-id15609 . -6146) (undo-tree-id15610 . -6146) (undo-tree-id15611 . -6146) (undo-tree-id15612 . -6146) (undo-tree-id15613 . -6146) (undo-tree-id15614 . -6146) (undo-tree-id15615 . -6146) (undo-tree-id15616 . -6146) (undo-tree-id15617 . -6146) (undo-tree-id15618 . -6146) (undo-tree-id15619 . -6146) (undo-tree-id15620 . -6146) (undo-tree-id15621 . -6146) (undo-tree-id15622 . -6146) (undo-tree-id15623 . -5696) (undo-tree-id15624 . -6146) (undo-tree-id15625 . -6146) (undo-tree-id15626 . -6146) (undo-tree-id15627 . -6146) (undo-tree-id15628 . -6146) (undo-tree-id15629 . -6146) (undo-tree-id15630 . -6146) (undo-tree-id15631 . -6146) (undo-tree-id15632 . -6146) (undo-tree-id15633 . -6146) (undo-tree-id15634 . -6146) (undo-tree-id15635 . -6146) (undo-tree-id15636 . -6146) (undo-tree-id15637 . -6146) (undo-tree-id15638 . -4887) (undo-tree-id15639 . -6146) (undo-tree-id15640 . -6146) (undo-tree-id15641 . -6146) (undo-tree-id15642 . -6146) (undo-tree-id15643 . -6146) (undo-tree-id15644 . -6146) (undo-tree-id15645 . -6146) (undo-tree-id15646 . -6146) (undo-tree-id15647 . -6146) (undo-tree-id15648 . -6146) (undo-tree-id15649 . -6146) (undo-tree-id15650 . -6146) (undo-tree-id15651 . -6146) (undo-tree-id15652 . -6146) (undo-tree-id15653 . -4654) (undo-tree-id15654 . -6146) (undo-tree-id15655 . -6146) (undo-tree-id15656 . -6146) (undo-tree-id15657 . -6146) (undo-tree-id15658 . -6146) (undo-tree-id15659 . -6146) (undo-tree-id15660 . -6146) (undo-tree-id15661 . -6146) (undo-tree-id15662 . -6146) (undo-tree-id15663 . -6146) (undo-tree-id15664 . -6146) (undo-tree-id15665 . -6146) (undo-tree-id15666 . -5970) (undo-tree-id15667 . -5970) (undo-tree-id15668 . -4090) (undo-tree-id15669 . -5970) (undo-tree-id15670 . -5970) (undo-tree-id15671 . -5970) (undo-tree-id15672 . -5970) (undo-tree-id15673 . -5970) (undo-tree-id15674 . -5970) (undo-tree-id15675 . -5970) (undo-tree-id15676 . -5970) (undo-tree-id15677 . -5970) (undo-tree-id15678 . -5970) (undo-tree-id15679 . -5970) (undo-tree-id15680 . -5970) (undo-tree-id15681 . -5409) (undo-tree-id15682 . -5409) (undo-tree-id15683 . -3404) (undo-tree-id15684 . -5409) (undo-tree-id15685 . -5409) (undo-tree-id15686 . -5409) (undo-tree-id15687 . -5409) (undo-tree-id15688 . -5409) (undo-tree-id15689 . -5409) (undo-tree-id15690 . -5409) (undo-tree-id15691 . -5409) (undo-tree-id15692 . -5409) (undo-tree-id15693 . -5409) (undo-tree-id15694 . -5409) (undo-tree-id15695 . -5409) (undo-tree-id15696 . -4277) (undo-tree-id15697 . -4277) (undo-tree-id15698 . -2519) (undo-tree-id15699 . -4277) (undo-tree-id15700 . -4277) (undo-tree-id15701 . -4277) (undo-tree-id15702 . -4277) (undo-tree-id15703 . -4277) (undo-tree-id15704 . -4277) (undo-tree-id15705 . -4277) (undo-tree-id15706 . -4277) (undo-tree-id15707 . -4277) (undo-tree-id15708 . -4277) (undo-tree-id15709 . -4277) (undo-tree-id15710 . -4277) (undo-tree-id15711 . -3119) (undo-tree-id15712 . -3119) (undo-tree-id15713 . -1446) (undo-tree-id15714 . -3119) (undo-tree-id15715 . -3119) (undo-tree-id15716 . -3119) (undo-tree-id15717 . -3119) (undo-tree-id15718 . -3119) (undo-tree-id15719 . -3119) (undo-tree-id15720 . -3119) (undo-tree-id15721 . -3119) (undo-tree-id15722 . -3119) (undo-tree-id15723 . -3119) (undo-tree-id15724 . -3119) (undo-tree-id15725 . -3119) (undo-tree-id15726 . -2987) (undo-tree-id15727 . -2987) (undo-tree-id15728 . -1161) (undo-tree-id15729 . -2987) (undo-tree-id15730 . -2987) (undo-tree-id15731 . -2987) (undo-tree-id15732 . -2987) (undo-tree-id15733 . -2987) (undo-tree-id15734 . -2987) (undo-tree-id15735 . -2987) (undo-tree-id15736 . -2987) (undo-tree-id15737 . -2987) (undo-tree-id15738 . -2987) (undo-tree-id15739 . -2987) (undo-tree-id15740 . -2987) (undo-tree-id15741 . -2687) (undo-tree-id15742 . -2687) (undo-tree-id15743 . -900) (undo-tree-id15744 . -2687) (undo-tree-id15745 . -2687) (undo-tree-id15746 . -2687) (undo-tree-id15747 . -2687) (undo-tree-id15748 . -2687) (undo-tree-id15749 . -2687) (undo-tree-id15750 . -2687) (undo-tree-id15751 . -2687) (undo-tree-id15752 . -2687) (undo-tree-id15753 . -2687) (undo-tree-id15754 . -2687) (undo-tree-id15755 . -2687) (undo-tree-id15756 . -2259) (undo-tree-id15757 . -2259) (undo-tree-id15758 . -465) (undo-tree-id15759 . -2259) (undo-tree-id15760 . -2259) (undo-tree-id15761 . -2259) (undo-tree-id15762 . -2259) (undo-tree-id15763 . -2259) (undo-tree-id15764 . -2259) (undo-tree-id15765 . -2259) (undo-tree-id15766 . -2259) (undo-tree-id15767 . -2259) (undo-tree-id15768 . -2259) (undo-tree-id15769 . -2259) (undo-tree-id15770 . -2259) (undo-tree-id15771 . -1623) (undo-tree-id15772 . -1623) (undo-tree-id15773 . -1623) (undo-tree-id15774 . -1623) (undo-tree-id15775 . -1623) (undo-tree-id15776 . -1623) (undo-tree-id15777 . -1623) (undo-tree-id15778 . -1623) (undo-tree-id15779 . -1623) (undo-tree-id15780 . -1623) (undo-tree-id15781 . -1623) (undo-tree-id15782 . -1623) (undo-tree-id15783 . -1623) (undo-tree-id15784 . -1623) (undo-tree-id15785 . -1318) (undo-tree-id15786 . -1318) (undo-tree-id15787 . -1318) (undo-tree-id15788 . -1318) (undo-tree-id15789 . -1318) (undo-tree-id15790 . -1318) (undo-tree-id15791 . -1318) (undo-tree-id15792 . -1318) (undo-tree-id15793 . -1318) (undo-tree-id15794 . -1318) (undo-tree-id15795 . -1318) (undo-tree-id15796 . -1318) (undo-tree-id15797 . -1318) (undo-tree-id15798 . -1318) (undo-tree-id15799 . -781) (undo-tree-id15800 . -781) (undo-tree-id15801 . -781) (undo-tree-id15802 . -781) (undo-tree-id15803 . -781) (undo-tree-id15804 . -781) (undo-tree-id15805 . -781) (undo-tree-id15806 . -781) (undo-tree-id15807 . -781) (undo-tree-id15808 . -781) (undo-tree-id15809 . -781) (undo-tree-id15810 . -781) (undo-tree-id15811 . -781) (undo-tree-id15812 . -781) (undo-tree-id15813 . -654) (undo-tree-id15814 . -654) (undo-tree-id15815 . -654) (undo-tree-id15816 . -654) (undo-tree-id15817 . -654) (undo-tree-id15818 . -654) (undo-tree-id15819 . -654) (undo-tree-id15820 . -654) (undo-tree-id15821 . -654) (undo-tree-id15822 . -654) (undo-tree-id15823 . -654) (undo-tree-id15824 . -654) (undo-tree-id15825 . -654) (undo-tree-id15826 . -654) (undo-tree-id15827 . -391) (undo-tree-id15828 . -391) (undo-tree-id15829 . -391) (undo-tree-id15830 . -391) (undo-tree-id15831 . -391) (undo-tree-id15832 . -391) (undo-tree-id15833 . -391) (undo-tree-id15834 . -391) (undo-tree-id15835 . -391) (undo-tree-id15836 . -391) (undo-tree-id15837 . -391) (undo-tree-id15838 . -391) (undo-tree-id15839 . -391) (undo-tree-id15840 . -391) (undo-tree-id15841 . -1) (undo-tree-id15842 . -1) (undo-tree-id15843 . -1) (undo-tree-id15844 . -1) (undo-tree-id15845 . -1) (undo-tree-id15846 . -1) (undo-tree-id15847 . -1) (undo-tree-id15848 . -1) (undo-tree-id15849 . -1) (undo-tree-id15850 . -1) (undo-tree-id15851 . -1) (undo-tree-id15852 . -1) (undo-tree-id15853 . -1) (undo-tree-id15854 . -1) (undo-tree-id15855 . -465) (undo-tree-id15856 . -465) (undo-tree-id15857 . -465) (undo-tree-id15858 . -465) (undo-tree-id15859 . -465) (undo-tree-id15860 . -465) (undo-tree-id15861 . -465) (undo-tree-id15862 . -465) (undo-tree-id15863 . -465) (undo-tree-id15864 . -465) (undo-tree-id15865 . -465) (undo-tree-id15866 . -465) (undo-tree-id15867 . -465) (undo-tree-id15868 . -465) (undo-tree-id15869 . -465) (undo-tree-id15870 . -2328) (undo-tree-id15871 . -2328) (undo-tree-id15872 . -2328) (undo-tree-id15873 . -2328) (undo-tree-id15874 . -2328) (undo-tree-id15875 . -2328) (undo-tree-id15876 . -2328) (undo-tree-id15877 . -2328) (undo-tree-id15878 . -2328) (undo-tree-id15879 . -2328) (undo-tree-id15880 . -2328) (undo-tree-id15881 . -2328) (undo-tree-id15882 . -2328) (undo-tree-id15883 . -2328) (undo-tree-id15884 . -2328) (undo-tree-id15885 . -4326) (undo-tree-id15886 . -4326) (undo-tree-id15887 . -4326) (undo-tree-id15888 . -4326) (undo-tree-id15889 . -4326) (undo-tree-id15890 . -4326) (undo-tree-id15891 . -4326) (undo-tree-id15892 . -4326) (undo-tree-id15893 . -4326) (undo-tree-id15894 . -4326) (undo-tree-id15895 . -4326) (undo-tree-id15896 . -4326) (undo-tree-id15897 . -4326) (undo-tree-id15898 . -4326) (undo-tree-id15899 . -4326) (undo-tree-id15900 . -6258) (undo-tree-id15901 . -6004) (undo-tree-id15902 . -5473) (undo-tree-id15903 . -6092) (undo-tree-id15904 . -6092) (undo-tree-id15905 . -4326) (undo-tree-id15906 . -6092) (undo-tree-id15907 . -6092) (undo-tree-id15908 . -6092) (undo-tree-id15909 . -6092) (undo-tree-id15910 . -6092) (undo-tree-id15911 . -6092) (undo-tree-id15912 . -6092) (undo-tree-id15913 . -6092) (undo-tree-id15914 . -6092) (undo-tree-id15915 . -6092) (undo-tree-id15916 . -6092) (undo-tree-id15917 . -6092) (undo-tree-id15918 . -5970) (undo-tree-id15919 . -5970) (undo-tree-id15920 . -4090) (undo-tree-id15921 . -5970) (undo-tree-id15922 . -5970) (undo-tree-id15923 . -5970) (undo-tree-id15924 . -5970) (undo-tree-id15925 . -5970) (undo-tree-id15926 . -5970) (undo-tree-id15927 . -5970) (undo-tree-id15928 . -5279) (undo-tree-id15929 . -5279) (undo-tree-id15930 . -5279) (undo-tree-id15931 . -5279) (undo-tree-id15932 . -5279) (undo-tree-id15933 . -5279) (undo-tree-id15934 . -5279) (undo-tree-id15935 . -5278) (undo-tree-id15936 . -5279) (undo-tree-id15937 . -4090) (undo-tree-id15938 . -5278) (undo-tree-id15939 . -5279) (undo-tree-id15940 . -4090) (undo-tree-id15941 . -5278) (undo-tree-id15942 . -5278) (undo-tree-id15943 . -5278) (undo-tree-id15944 . -5278) (undo-tree-id15945 . -5278) (undo-tree-id15946 . -5278) (undo-tree-id15947 . -5278) (undo-tree-id15948 . -5278) (undo-tree-id15949 . -5278) (undo-tree-id15950 . -4090) (undo-tree-id15951 . -5215) (undo-tree-id15952 . -5278) (undo-tree-id15953 . -5278) (undo-tree-id15954 . -5278) (undo-tree-id15955 . -4090) (undo-tree-id15956 . -5278) (undo-tree-id15957 . -5278) (undo-tree-id15958 . -5278) (undo-tree-id15959 . -5278) (undo-tree-id15960 . -5278) (undo-tree-id15961 . -5278) (undo-tree-id15962 . -5278) (undo-tree-id15963 . -5278) (undo-tree-id15964 . -5278) (undo-tree-id15965 . -5278) (undo-tree-id15966 . -5278) (undo-tree-id15967 . -5278) (undo-tree-id15968 . -5278) (undo-tree-id15969 . -5278) (undo-tree-id15970 . -5278) (undo-tree-id15971 . -5278) (undo-tree-id15972 . -5278) (undo-tree-id15973 . -5278) (undo-tree-id15974 . -5278) (undo-tree-id15975 . -5278) (undo-tree-id15976 . -5278) (undo-tree-id15977 . -5278) (undo-tree-id15978 . -4090) (undo-tree-id15979 . -5278) (undo-tree-id15980 . -5278) (undo-tree-id15981 . -5278) (undo-tree-id15982 . -5278) (undo-tree-id15983 . -5278) (undo-tree-id15984 . -5278) (undo-tree-id15985 . -5278) (undo-tree-id15986 . -4090) (undo-tree-id15987 . -5278) (undo-tree-id15988 . -5278) (undo-tree-id15989 . -5278) (undo-tree-id15990 . -5278) (undo-tree-id15991 . -5278) (undo-tree-id15992 . -5278) (undo-tree-id15993 . -5278) (undo-tree-id15994 . -4090) (undo-tree-id15995 . -5278) (undo-tree-id15996 . -5278) (undo-tree-id15997 . -4090) (undo-tree-id15998 . -5278) (undo-tree-id15999 . -5278) (undo-tree-id16000 . -5278) (undo-tree-id16001 . -5278) (undo-tree-id16002 . -5278) (undo-tree-id16003 . -5278) (undo-tree-id16004 . -5278) (undo-tree-id16005 . -4090) (undo-tree-id16006 . -5278) (undo-tree-id16007 . -5278) (undo-tree-id16008 . -5278) (undo-tree-id16009 . -5278) (undo-tree-id16010 . -5278) (undo-tree-id16011 . -5278) (undo-tree-id16012 . -5278) (undo-tree-id16013 . -4090) (undo-tree-id16014 . -5278) (undo-tree-id16015 . -5278) (undo-tree-id16016 . -5278) (undo-tree-id16017 . -5278) (undo-tree-id16018 . -5278) (undo-tree-id16019 . -5278) (undo-tree-id16020 . -5278) (undo-tree-id16021 . -4090) (undo-tree-id16022 . -5278) (undo-tree-id16023 . -5278) (undo-tree-id16024 . -5278) (undo-tree-id16025 . -5278) (undo-tree-id16026 . -5278) (undo-tree-id16027 . -5278) (undo-tree-id16028 . -5278) (undo-tree-id16029 . -4090) (undo-tree-id16030 . -5278) (undo-tree-id16031 . -5278) (undo-tree-id16032 . -4090) (undo-tree-id16033 . -5278) (undo-tree-id16034 . -5278) (undo-tree-id16035 . -5278) (undo-tree-id16036 . -5278) (undo-tree-id16037 . -5278) (undo-tree-id16038 . -5278) (undo-tree-id16039 . -5278) (undo-tree-id16040 . -4090) (undo-tree-id16041 . -5278) (undo-tree-id16042 . -5278) (undo-tree-id16043 . -5278) (undo-tree-id16044 . -5278) (undo-tree-id16045 . -5278) (undo-tree-id16046 . -5278) (undo-tree-id16047 . -5278) (undo-tree-id16048 . -4090) (undo-tree-id16049 . -5278) (undo-tree-id16050 . -5278) (undo-tree-id16051 . -5278) (undo-tree-id16052 . -5278) (undo-tree-id16053 . -5278) (undo-tree-id16054 . -5278) (undo-tree-id16055 . -5278) (undo-tree-id16056 . -4090) (undo-tree-id16057 . -5278) (undo-tree-id16058 . -5278) (undo-tree-id16059 . -5278) (undo-tree-id16060 . -5278) (undo-tree-id16061 . -5278) (undo-tree-id16062 . -5278) (undo-tree-id16063 . -5278) (undo-tree-id16064 . -4090) (undo-tree-id16065 . -5278) (undo-tree-id16066 . -5278) (undo-tree-id16067 . -4090) (undo-tree-id16068 . -5278) (undo-tree-id16069 . -5278) (undo-tree-id16070 . -4090) (undo-tree-id16071 . -5278) (undo-tree-id16072 . -5278) (undo-tree-id16073 . -5278) (undo-tree-id16074 . -5278) (undo-tree-id16075 . -5278) (undo-tree-id16076 . -5278) (undo-tree-id16077 . -5278) (undo-tree-id16078 . -4090) (undo-tree-id16079 . -5278) (undo-tree-id16080 . -5278) (undo-tree-id16081 . -5278) (undo-tree-id16082 . -5278) (undo-tree-id16083 . -5278) (undo-tree-id16084 . -5278) (undo-tree-id16085 . -5278) (undo-tree-id16086 . -4090) (undo-tree-id16087 . -5278) (undo-tree-id16088 . -5278) (undo-tree-id16089 . -5278) (undo-tree-id16090 . -5278) (undo-tree-id16091 . -5278) (undo-tree-id16092 . -5278) (undo-tree-id16093 . -5278) (undo-tree-id16094 . -4090) (undo-tree-id16095 . -5278) (undo-tree-id16096 . -5278) (undo-tree-id16097 . -5278) (undo-tree-id16098 . -5278) (undo-tree-id16099 . -5278) (undo-tree-id16100 . -5278) (undo-tree-id16101 . -5278) (undo-tree-id16102 . -4090) (undo-tree-id16103 . -5278) (undo-tree-id16104 . -5278) (undo-tree-id16105 . -5278) (undo-tree-id16106 . -5278) (undo-tree-id16107 . -5278) (undo-tree-id16108 . -5278) (undo-tree-id16109 . -5278) (undo-tree-id16110 . -4090) (undo-tree-id16111 . -5278) (undo-tree-id16112 . -5278) (undo-tree-id16113 . -4090) (undo-tree-id16114 . -5278) (undo-tree-id16115 . -5278) (undo-tree-id16116 . -4090) (undo-tree-id16117 . -5278) (undo-tree-id16118 . -5278) (undo-tree-id16119 . -4090) (undo-tree-id16120 . -5278) (undo-tree-id16121 . -5278) (undo-tree-id16122 . -4090) (undo-tree-id16123 . -5278) (undo-tree-id16124 . -5278) (undo-tree-id16125 . -4090) (undo-tree-id16126 . -5278) (undo-tree-id16127 . -5278) (undo-tree-id16128 . -4090) (undo-tree-id16129 . -5278) (undo-tree-id16130 . -5278) (undo-tree-id16131 . -4090) (undo-tree-id16132 . -5278) (undo-tree-id16133 . -5278) (undo-tree-id16134 . -4090) (undo-tree-id16135 . -5278) (undo-tree-id16136 . -5278) (undo-tree-id16137 . -4090) (undo-tree-id16138 . -5278) (undo-tree-id16139 . -5278) (undo-tree-id16140 . -4090) (undo-tree-id16141 . -5278) (undo-tree-id16142 . -5278) (undo-tree-id16143 . -4090) (undo-tree-id16144 . -5278) (undo-tree-id16145 . -5278) (undo-tree-id16146 . -4090) (undo-tree-id16147 . -5278) (undo-tree-id16148 . -5278) (undo-tree-id16149 . -4090) (undo-tree-id16150 . -5278) (undo-tree-id16151 . -5278) (undo-tree-id16152 . -4090) (undo-tree-id16153 . -5278) (undo-tree-id16154 . -5278) (undo-tree-id16155 . -4090) (undo-tree-id16156 . -5278) (undo-tree-id16157 . -5278) (undo-tree-id16158 . -4090) (undo-tree-id16159 . -5278) (undo-tree-id16160 . -5278) (undo-tree-id16161 . -4090) (undo-tree-id16162 . -5278) (undo-tree-id16163 . -5278) (undo-tree-id16164 . -4090) (undo-tree-id16165 . -5278) (undo-tree-id16166 . -5278) (undo-tree-id16167 . -4090) (undo-tree-id16168 . -5278) (undo-tree-id16169 . -5278) (undo-tree-id16170 . -4090) (undo-tree-id16171 . -5278) (undo-tree-id16172 . -5278) (undo-tree-id16173 . -4090) (undo-tree-id16174 . -5278) (undo-tree-id16175 . -5278) (undo-tree-id16176 . -4090) (undo-tree-id16177 . -5278) (undo-tree-id16178 . -5278) (undo-tree-id16179 . -4090) (undo-tree-id16180 . -5278) (undo-tree-id16181 . -5278) (undo-tree-id16182 . -4090) (undo-tree-id16183 . -5278) (undo-tree-id16184 . -5278) (undo-tree-id16185 . -4090) (undo-tree-id16186 . -5278) (undo-tree-id16187 . -5278) (undo-tree-id16188 . -4090) (undo-tree-id16189 . -5278) (undo-tree-id16190 . -5278) (undo-tree-id16191 . -4090) (undo-tree-id16192 . -5278) (undo-tree-id16193 . -5278) (undo-tree-id16194 . -4090) (undo-tree-id16195 . -5278) (undo-tree-id16196 . -5278) (undo-tree-id16197 . -4090) (undo-tree-id16198 . -5278) (undo-tree-id16199 . -5278) (undo-tree-id16200 . -4090) (undo-tree-id16201 . -5278) (undo-tree-id16202 . -5278) (undo-tree-id16203 . -4090) (undo-tree-id16204 . -5278) (undo-tree-id16205 . -5278) (undo-tree-id16206 . -4090) (undo-tree-id16207 . -5278) (undo-tree-id16208 . -5278) (undo-tree-id16209 . -4090) (undo-tree-id16210 . -5278) (undo-tree-id16211 . -5278) (undo-tree-id16212 . -4090) (undo-tree-id16213 . -5278) (undo-tree-id16214 . -5278) (undo-tree-id16215 . -4090) (undo-tree-id16216 . -5278) (undo-tree-id16217 . -5278) (undo-tree-id16218 . -4090) (undo-tree-id16219 . -5278) (undo-tree-id16220 . -5278) (undo-tree-id16221 . -4090) (undo-tree-id16222 . -5278) (undo-tree-id16223 . -5278) (undo-tree-id16224 . -4090) (undo-tree-id16225 . -5278) (undo-tree-id16226 . -5278) (undo-tree-id16227 . -4090) (undo-tree-id16228 . -5278) (undo-tree-id16229 . -5278) (undo-tree-id16230 . -4090) (undo-tree-id16231 . -5278) (undo-tree-id16232 . -5278) (undo-tree-id16233 . -4090) (undo-tree-id16234 . -5278) (undo-tree-id16235 . -5278) (undo-tree-id16236 . -4090) (undo-tree-id16237 . -5278) (undo-tree-id16238 . -5278) (undo-tree-id16239 . -4090) (undo-tree-id16240 . -5278) (undo-tree-id16241 . -5278) (undo-tree-id16242 . -4090) (undo-tree-id16243 . -5278) (undo-tree-id16244 . -5278) (undo-tree-id16245 . -4090) (undo-tree-id16246 . -5278) (undo-tree-id16247 . -5278) (undo-tree-id16248 . -4090) (undo-tree-id16249 . -5278) (undo-tree-id16250 . -5278) (undo-tree-id16251 . -4090) (undo-tree-id16252 . -5278) (undo-tree-id16253 . -5278) (undo-tree-id16254 . -4090) (undo-tree-id16255 . -5278) (undo-tree-id16256 . -5278) (undo-tree-id16257 . -4090) (undo-tree-id16258 . -5278) (undo-tree-id16259 . -5278) (undo-tree-id16260 . -4090) (undo-tree-id16261 . -5278) (undo-tree-id16262 . -5278) (undo-tree-id16263 . -4090) (undo-tree-id16264 . -5278) (undo-tree-id16265 . -5278) (undo-tree-id16266 . -4090) (undo-tree-id16267 . -5278) (undo-tree-id16268 . -5278) (undo-tree-id16269 . -4090) (undo-tree-id16270 . -5278) (undo-tree-id16271 . -5278) (undo-tree-id16272 . -4090) (undo-tree-id16273 . -5278) (undo-tree-id16274 . -5278) (undo-tree-id16275 . -4090) (undo-tree-id16276 . -5278) (undo-tree-id16277 . -5278) (undo-tree-id16278 . -4090) (undo-tree-id16279 . -5278) (undo-tree-id16280 . -5278) (undo-tree-id16281 . -4090) (undo-tree-id16282 . -5278) (undo-tree-id16283 . -5278) (undo-tree-id16284 . -4090) (undo-tree-id16285 . -5278) (undo-tree-id16286 . -5278) (undo-tree-id16287 . -4090) (undo-tree-id16288 . -5278) (undo-tree-id16289 . -5278) (undo-tree-id16290 . -4090) (undo-tree-id16291 . -5278) (undo-tree-id16292 . -5278) (undo-tree-id16293 . -4090) (undo-tree-id16294 . -5278) (undo-tree-id16295 . -5278) (undo-tree-id16296 . -4090) (undo-tree-id16297 . -5278) (undo-tree-id16298 . -5278) (undo-tree-id16299 . -4090) (undo-tree-id16300 . -5278) (undo-tree-id16301 . -5278) (undo-tree-id16302 . -4090) (undo-tree-id16303 . -5278) (undo-tree-id16304 . -5278) (undo-tree-id16305 . -4090) (undo-tree-id16306 . -5278) (undo-tree-id16307 . -5278) (undo-tree-id16308 . -4090) (undo-tree-id16309 . -5278) (undo-tree-id16310 . -5278) (undo-tree-id16311 . -4090) (undo-tree-id16312 . -5278) (undo-tree-id16313 . -5278) (undo-tree-id16314 . -4090) (undo-tree-id16315 . -5278) (undo-tree-id16316 . -5278) (undo-tree-id16317 . -4090) (undo-tree-id16318 . -5278) (undo-tree-id16319 . -5278) (undo-tree-id16320 . -4090) (undo-tree-id16321 . -5278) (undo-tree-id16322 . -5278) (undo-tree-id16323 . -4090) (undo-tree-id16324 . -5278) (undo-tree-id16325 . -5278) (undo-tree-id16326 . -4090) (undo-tree-id16327 . -5278) (undo-tree-id16328 . -5278) (undo-tree-id16329 . -4090) (undo-tree-id16330 . -5278) (undo-tree-id16331 . -5278) (undo-tree-id16332 . -4090) (undo-tree-id16333 . -5278) (undo-tree-id16334 . -5278) (undo-tree-id16335 . -4090) (undo-tree-id16336 . -5278) (undo-tree-id16337 . -5278) (undo-tree-id16338 . -4090) (undo-tree-id16339 . -5278) (undo-tree-id16340 . -5278) (undo-tree-id16341 . -4090) (undo-tree-id16342 . -5278) (undo-tree-id16343 . -5278) (undo-tree-id16344 . -4090) (undo-tree-id16345 . -5278) (undo-tree-id16346 . -5278) (undo-tree-id16347 . -4090) (undo-tree-id16348 . -5278) (undo-tree-id16349 . -5278) (undo-tree-id16350 . -4090) (undo-tree-id16351 . -5278) (undo-tree-id16352 . -5278) (undo-tree-id16353 . -4090) (undo-tree-id16354 . -5278) (undo-tree-id16355 . -5278) (undo-tree-id16356 . -4090) (undo-tree-id16357 . -5278) (undo-tree-id16358 . -5278) (undo-tree-id16359 . -4090) (undo-tree-id16360 . -5278) (undo-tree-id16361 . -5278) (undo-tree-id16362 . -4090) (undo-tree-id16363 . -5278) (undo-tree-id16364 . -5278) (undo-tree-id16365 . -4090) (undo-tree-id16366 . -5278) (undo-tree-id16367 . -5278) (undo-tree-id16368 . -4090) (undo-tree-id16369 . -5278) (undo-tree-id16370 . -5278) (undo-tree-id16371 . -4090) (undo-tree-id16372 . -5278) (undo-tree-id16373 . -5278) (undo-tree-id16374 . -4090) (undo-tree-id16375 . -5278) (undo-tree-id16376 . -5278) (undo-tree-id16377 . -4090) (undo-tree-id16378 . -5278) (undo-tree-id16379 . -5278) (undo-tree-id16380 . -4090) (undo-tree-id16381 . -5278) (undo-tree-id16382 . -5278) (undo-tree-id16383 . -4090) (undo-tree-id16384 . -5278) (undo-tree-id16385 . -5278) (undo-tree-id16386 . -4090) (undo-tree-id16387 . -5278) (undo-tree-id16388 . -5278) (undo-tree-id16389 . -4090) (undo-tree-id16390 . -5278) (undo-tree-id16391 . -5278) (undo-tree-id16392 . -4090) (undo-tree-id16393 . -5278) (undo-tree-id16394 . -5278) (undo-tree-id16395 . -4090) (undo-tree-id16396 . -5278) (undo-tree-id16397 . -5278) (undo-tree-id16398 . -4090) (undo-tree-id16399 . -5278) (undo-tree-id16400 . -5278) (undo-tree-id16401 . -4090) (undo-tree-id16402 . -5278) (undo-tree-id16403 . -5278) (undo-tree-id16404 . -4090) (undo-tree-id16405 . -5278) (undo-tree-id16406 . -5278) (undo-tree-id16407 . -4090) (undo-tree-id16408 . -5278) (undo-tree-id16409 . -5278) (undo-tree-id16410 . -4090) (undo-tree-id16411 . -5278) (undo-tree-id16412 . -5278) (undo-tree-id16413 . -4090) (undo-tree-id16414 . -5278) (undo-tree-id16415 . -5278) (undo-tree-id16416 . -5278) (undo-tree-id16417 . -5278) (undo-tree-id16418 . -5278) (undo-tree-id16419 . -5278) (undo-tree-id16420 . -5278) (undo-tree-id16421 . -4090) (undo-tree-id16422 . -5278) (undo-tree-id16423 . -5278) (undo-tree-id16424 . -5278) (undo-tree-id16425 . -5278) (undo-tree-id16426 . -5278) (undo-tree-id16427 . -5278) (undo-tree-id16428 . -5278) (undo-tree-id16429 . -4090) (undo-tree-id16430 . -5278) (undo-tree-id16431 . -5278) (undo-tree-id16432 . -5278) (undo-tree-id16433 . -5278) (undo-tree-id16434 . -5278) (undo-tree-id16435 . -5278) (undo-tree-id16436 . -5278) (undo-tree-id16437 . -4090) (undo-tree-id16438 . -5278) (undo-tree-id16439 . -5278) (undo-tree-id16440 . -5278) (undo-tree-id16441 . -5278) (undo-tree-id16442 . -5278) (undo-tree-id16443 . -5278) (undo-tree-id16444 . -5278) (undo-tree-id16445 . -4090) (undo-tree-id16446 . -5278) (undo-tree-id16447 . -5278) (undo-tree-id16448 . -5278) (undo-tree-id16449 . -5278) (undo-tree-id16450 . -5278) (undo-tree-id16451 . -5278) (undo-tree-id16452 . -5278) (undo-tree-id16453 . -4090) (undo-tree-id16454 . -5278) (undo-tree-id16455 . -5278) (undo-tree-id16456 . -5278) (undo-tree-id16457 . -5278) (undo-tree-id16458 . -5278) (undo-tree-id16459 . -5278) (undo-tree-id16460 . -5278) (undo-tree-id16461 . -4090) (undo-tree-id16462 . -5278) (undo-tree-id16463 . -5278) (undo-tree-id16464 . -5278) (undo-tree-id16465 . -5278) (undo-tree-id16466 . -5278) (undo-tree-id16467 . -5278) (undo-tree-id16468 . -5278) (undo-tree-id16469 . -4090) (undo-tree-id16470 . -5278) (undo-tree-id16471 . -5278) (undo-tree-id16472 . -5278) (undo-tree-id16473 . -5278) (undo-tree-id16474 . -5278) (undo-tree-id16475 . -5278) (undo-tree-id16476 . -5278) (undo-tree-id16477 . -4090) (undo-tree-id16478 . -5278) (undo-tree-id16479 . -5278) (undo-tree-id16480 . -5278) (undo-tree-id16481 . -5278) (undo-tree-id16482 . -5278) (undo-tree-id16483 . -5278) (undo-tree-id16484 . -5278) (undo-tree-id16485 . -4090) (undo-tree-id16486 . -5278) (undo-tree-id16487 . -5278) (undo-tree-id16488 . -5278) (undo-tree-id16489 . -5278) (undo-tree-id16490 . -5278) (undo-tree-id16491 . -5278) (undo-tree-id16492 . -5278) (undo-tree-id16493 . -4090) (undo-tree-id16494 . -5278) (undo-tree-id16495 . -5278) (undo-tree-id16496 . -4090) (undo-tree-id16497 . -5278) (undo-tree-id16498 . -5278) (undo-tree-id16499 . -4090) (undo-tree-id16500 . -5278) (undo-tree-id16501 . -5278) (undo-tree-id16502 . -4090) (undo-tree-id16503 . -5278) (undo-tree-id16504 . -5278) (undo-tree-id16505 . -5278) (undo-tree-id16506 . -5278) (undo-tree-id16507 . -5278) (undo-tree-id16508 . -5278) (undo-tree-id16509 . -5278) (undo-tree-id16510 . -4090) (undo-tree-id16511 . -5278) (undo-tree-id16512 . -5278) (undo-tree-id16513 . -5278) (undo-tree-id16514 . -5278) (undo-tree-id16515 . -5278) (undo-tree-id16516 . -5278) (undo-tree-id16517 . -5278) (undo-tree-id16518 . -4090) (undo-tree-id16519 . -5278) (undo-tree-id16520 . -5278) (undo-tree-id16521 . -5278) (undo-tree-id16522 . -5278) (undo-tree-id16523 . -5278) (undo-tree-id16524 . -5278) (undo-tree-id16525 . -5278) (undo-tree-id16526 . -4090) (undo-tree-id16527 . -5278) (undo-tree-id16528 . -5278) (undo-tree-id16529 . -5278) (undo-tree-id16530 . -5278) (undo-tree-id16531 . -5278) (undo-tree-id16532 . -5278) (undo-tree-id16533 . -5278) (undo-tree-id16534 . -4090) (undo-tree-id16535 . -5278) (undo-tree-id16536 . -5278) (undo-tree-id16537 . -5278) (undo-tree-id16538 . -5278) (undo-tree-id16539 . -5278) (undo-tree-id16540 . -5278) (undo-tree-id16541 . -5278) (undo-tree-id16542 . -4090) (undo-tree-id16543 . -5278) (undo-tree-id16544 . -5278) (undo-tree-id16545 . -5278) (undo-tree-id16546 . -5278) (undo-tree-id16547 . -5278) (undo-tree-id16548 . -5278) (undo-tree-id16549 . -5278) (undo-tree-id16550 . -4090) (undo-tree-id16551 . -5278) (undo-tree-id16552 . -5278) (undo-tree-id16553 . -4090) (undo-tree-id16554 . -5278) (undo-tree-id16555 . -5278) (undo-tree-id16556 . -5278) (undo-tree-id16557 . -5278) (undo-tree-id16558 . -5278) (undo-tree-id16559 . -5278) (undo-tree-id16560 . -5278) (undo-tree-id16561 . -4090) (undo-tree-id16562 . -5278) (undo-tree-id16563 . -5278) (undo-tree-id16564 . -5278) (undo-tree-id16565 . -5278) (undo-tree-id16566 . -5278) (undo-tree-id16567 . -5278) (undo-tree-id16568 . -5278) (undo-tree-id16569 . -4090) (undo-tree-id16570 . -5278) (undo-tree-id16571 . -5278) (undo-tree-id16572 . -5278) (undo-tree-id16573 . -5278) (undo-tree-id16574 . -5278) (undo-tree-id16575 . -5278) (undo-tree-id16576 . -5278) (undo-tree-id16577 . -4090) (undo-tree-id16578 . -5278) (undo-tree-id16579 . -5278) (undo-tree-id16580 . -5278) (undo-tree-id16581 . -5278) (undo-tree-id16582 . -5278) (undo-tree-id16583 . -5278) (undo-tree-id16584 . -5278) (undo-tree-id16585 . -4090) (undo-tree-id16586 . -5278) (undo-tree-id16587 . -5278) (undo-tree-id16588 . -5278) (undo-tree-id16589 . -5278) (undo-tree-id16590 . -5278) (undo-tree-id16591 . -5278) (undo-tree-id16592 . -5278) (undo-tree-id16593 . -4090) (undo-tree-id16594 . -5278) (undo-tree-id16595 . -5278) (undo-tree-id16596 . -5278) (undo-tree-id16597 . -5278) (undo-tree-id16598 . -5278) (undo-tree-id16599 . -5278) (undo-tree-id16600 . -5278) (undo-tree-id16601 . -4090) (undo-tree-id16602 . -5278) (undo-tree-id16603 . -5278) (undo-tree-id16604 . -5278) (undo-tree-id16605 . -5278) (undo-tree-id16606 . -5278) (undo-tree-id16607 . -5278) (undo-tree-id16608 . -5278) (undo-tree-id16609 . -4090) (undo-tree-id16610 . -5278) (undo-tree-id16611 . -5278) (undo-tree-id16612 . -5278) (undo-tree-id16613 . -5278) (undo-tree-id16614 . -5278) (undo-tree-id16615 . -5278) (undo-tree-id16616 . -5278) (undo-tree-id16617 . -4090) (undo-tree-id16618 . -5278) (undo-tree-id16619 . -5278) (undo-tree-id16620 . -5278) (undo-tree-id16621 . -5278) (undo-tree-id16622 . -5278) (undo-tree-id16623 . -5278) (undo-tree-id16624 . -5278) (undo-tree-id16625 . -4090) (undo-tree-id16626 . -5278) (undo-tree-id16627 . -5278) (undo-tree-id16628 . -5278) (undo-tree-id16629 . -5278) (undo-tree-id16630 . -5278) (undo-tree-id16631 . -5278) (undo-tree-id16632 . -5278) (undo-tree-id16633 . -4090) (undo-tree-id16634 . -5278) (undo-tree-id16635 . -5278) (undo-tree-id16636 . -5278) (undo-tree-id16637 . -5278) (undo-tree-id16638 . -5278) (undo-tree-id16639 . -5278) (undo-tree-id16640 . -5278) (undo-tree-id16641 . -4090) (undo-tree-id16642 . -5278) (undo-tree-id16643 . -5278) (undo-tree-id16644 . -5278) (undo-tree-id16645 . -5278) (undo-tree-id16646 . -5278) (undo-tree-id16647 . -5278) (undo-tree-id16648 . -5278) (undo-tree-id16649 . -4090) (undo-tree-id16650 . -5278) (undo-tree-id16651 . -5278) (undo-tree-id16652 . -5278) (undo-tree-id16653 . -5278) (undo-tree-id16654 . -5278) (undo-tree-id16655 . -5278) (undo-tree-id16656 . -5278) (undo-tree-id16657 . -4090) (undo-tree-id16658 . -5278) (undo-tree-id16659 . -5278) (undo-tree-id16660 . -5278) (undo-tree-id16661 . -5278) (undo-tree-id16662 . -5278) (undo-tree-id16663 . -5278) (undo-tree-id16664 . -5278) (undo-tree-id16665 . -4090) (undo-tree-id16666 . -5278) (undo-tree-id16667 . -5278) (undo-tree-id16668 . -5278) (undo-tree-id16669 . -5278) (undo-tree-id16670 . -5278) (undo-tree-id16671 . -5278) (undo-tree-id16672 . -5278) (undo-tree-id16673 . -4090) (undo-tree-id16674 . -5278) (undo-tree-id16675 . -5278) (undo-tree-id16676 . -5278) (undo-tree-id16677 . -5278) (undo-tree-id16678 . -5278) (undo-tree-id16679 . -5278) (undo-tree-id16680 . -5278) (undo-tree-id16681 . -4090) (undo-tree-id16682 . -5278) (undo-tree-id16683 . -5278) (undo-tree-id16684 . -5278) (undo-tree-id16685 . -5278) (undo-tree-id16686 . -5278) (undo-tree-id16687 . -5278) (undo-tree-id16688 . -5278) (undo-tree-id16689 . -4090) (undo-tree-id16690 . -5278) (undo-tree-id16691 . -5278) (undo-tree-id16692 . -4090) (undo-tree-id16693 . -5278) (undo-tree-id16694 . -5278) (undo-tree-id16695 . -4090) (undo-tree-id16696 . -5278) (undo-tree-id16697 . -5278) (undo-tree-id16698 . -4090) (undo-tree-id16699 . -5278) (undo-tree-id16700 . -5278) (undo-tree-id16701 . -4090) (undo-tree-id16702 . -5278) (undo-tree-id16703 . -5278) (undo-tree-id16704 . -4090) (undo-tree-id16705 . -5278) (undo-tree-id16706 . -5278) (undo-tree-id16707 . -4090) (undo-tree-id16708 . -5278) (undo-tree-id16709 . -5278) (undo-tree-id16710 . -4090) (undo-tree-id16711 . -5278) (undo-tree-id16712 . -5278) (undo-tree-id16713 . -4090) (undo-tree-id16714 . -5278) (undo-tree-id16715 . -5278) (undo-tree-id16716 . -4090) (undo-tree-id16717 . -5278) (undo-tree-id16718 . -5278) (undo-tree-id16719 . -4090) (undo-tree-id16720 . -5278) (undo-tree-id16721 . -5278) (undo-tree-id16722 . -4090) (undo-tree-id16723 . -5278) (undo-tree-id16724 . -5278) (undo-tree-id16725 . -4090) (undo-tree-id16726 . -5278) (undo-tree-id16727 . -5278) (undo-tree-id16728 . -4090) (undo-tree-id16729 . -5278) (undo-tree-id16730 . -5278) (undo-tree-id16731 . -4090) (undo-tree-id16732 . -5278) (undo-tree-id16733 . -5278) (undo-tree-id16734 . -4090) (undo-tree-id16735 . -5278) (undo-tree-id16736 . -5278) (undo-tree-id16737 . -4090) (undo-tree-id16738 . -5278) (undo-tree-id16739 . -5278) (undo-tree-id16740 . -4090) (undo-tree-id16741 . -5278) (undo-tree-id16742 . -5278) (undo-tree-id16743 . -4090) (undo-tree-id16744 . -5278) (undo-tree-id16745 . -5278) (undo-tree-id16746 . -4090) (undo-tree-id16747 . -5278) (undo-tree-id16748 . -5278) (undo-tree-id16749 . -4090) (undo-tree-id16750 . -5278) (undo-tree-id16751 . -5278) (undo-tree-id16752 . -4090) (undo-tree-id16753 . -5278) (undo-tree-id16754 . -5278) (undo-tree-id16755 . -4090) (undo-tree-id16756 . -5278) (undo-tree-id16757 . -5278) (undo-tree-id16758 . -4090) (undo-tree-id16759 . -5278) (undo-tree-id16760 . -5278) (undo-tree-id16761 . -4090) (undo-tree-id16762 . -5278) (undo-tree-id16763 . -5278) (undo-tree-id16764 . -4090) (undo-tree-id16765 . -5278) (undo-tree-id16766 . -5278) (undo-tree-id16767 . -4090) (undo-tree-id16768 . -5278) (undo-tree-id16769 . -5278) (undo-tree-id16770 . -4090) (undo-tree-id16771 . -5278) (undo-tree-id16772 . -5278) (undo-tree-id16773 . -4090) (undo-tree-id16774 . -5278) (undo-tree-id16775 . -5278) (undo-tree-id16776 . -4090) (undo-tree-id16777 . -5278) (undo-tree-id16778 . -5278) (undo-tree-id16779 . -4090) (undo-tree-id16780 . -5278) (undo-tree-id16781 . -5278) (undo-tree-id16782 . -4090) (undo-tree-id16783 . -5278) (undo-tree-id16784 . -5278) (undo-tree-id16785 . -4090) (undo-tree-id16786 . -5278) (undo-tree-id16787 . -5278) (undo-tree-id16788 . -5278) (undo-tree-id16789 . -5278) (undo-tree-id16790 . -5278) (undo-tree-id16791 . -5278) (undo-tree-id16792 . -5278) (undo-tree-id16793 . -3785) (undo-tree-id16794 . -5278) (undo-tree-id16795 . -5278) (undo-tree-id16796 . -5278) (undo-tree-id16797 . -5278) (undo-tree-id16798 . -5278) (undo-tree-id16799 . -5278) (undo-tree-id16800 . -5278) (undo-tree-id16801 . -3404) (undo-tree-id16802 . -5278) (undo-tree-id16803 . -5278) (undo-tree-id16804 . -5278) (undo-tree-id16805 . -5278) (undo-tree-id16806 . -5278) (undo-tree-id16807 . -5278) (undo-tree-id16808 . -5278) (undo-tree-id16809 . -5278) (undo-tree-id16810 . -5278) (undo-tree-id16811 . -5278) (undo-tree-id16812 . -4442) (undo-tree-id16813 . -4442) (undo-tree-id16814 . -2865) (undo-tree-id16815 . -4442) (undo-tree-id16816 . -4442) (undo-tree-id16817 . -4442) (undo-tree-id16818 . -4442) (undo-tree-id16819 . -4442) (undo-tree-id16820 . -3540) (undo-tree-id16821 . -3540) (undo-tree-id16822 . -2065) (undo-tree-id16823 . -3540) (undo-tree-id16824 . -3540) (undo-tree-id16825 . -3540) (undo-tree-id16826 . -3540) (undo-tree-id16827 . -3540) (undo-tree-id16828 . -2518) (undo-tree-id16829 . -2518) (undo-tree-id16830 . -900) (undo-tree-id16831 . -2518) (undo-tree-id16832 . -2518) (undo-tree-id16833 . -2518) (undo-tree-id16834 . -2518) (undo-tree-id16835 . -2518) (undo-tree-id16836 . -2518) (undo-tree-id16837 . -2518) (undo-tree-id16838 . -2518) (undo-tree-id16839 . -2518) (undo-tree-id16840 . -2518) (undo-tree-id16841 . -1318) (undo-tree-id16842 . -1318) (undo-tree-id16843 . -1318) (undo-tree-id16844 . -1318) (undo-tree-id16845 . -1318) (undo-tree-id16846 . -1318) (undo-tree-id16847 . -1318) (undo-tree-id16848 . -1318) (undo-tree-id16849 . -1318) (undo-tree-id16850 . -1318) (undo-tree-id16851 . -1318) (undo-tree-id16852 . -1318) (undo-tree-id16853 . -1075) (undo-tree-id16854 . -1075) (undo-tree-id16855 . -1075) (undo-tree-id16856 . -1075) (undo-tree-id16857 . -1075) (undo-tree-id16858 . -1075) (undo-tree-id16859 . -1075) (undo-tree-id16860 . -1075) (undo-tree-id16861 . -1075) (undo-tree-id16862 . -1075) (undo-tree-id16863 . -1075) (undo-tree-id16864 . -1075) (undo-tree-id16865 . -654) (undo-tree-id16866 . -654) (undo-tree-id16867 . -654) (undo-tree-id16868 . -654) (undo-tree-id16869 . -654) (undo-tree-id16870 . -654) (undo-tree-id16871 . -654) (undo-tree-id16872 . -1) (undo-tree-id16873 . -1) (undo-tree-id16874 . -1) (undo-tree-id16875 . -1) (undo-tree-id16876 . -1) (undo-tree-id16877 . -1) (undo-tree-id16878 . -1) 69214 (t 25151 36869 41187 226000)) nil (25151 36982 11880 917000) 0 nil])
([nil nil ((54435 . 63842) (#("
     ;; -- *ZETTELDESK-SCRATCH* --
     ;; This is the section where it all comes together. The
     ;; zetteldesk-scratch buffer is a special buffer defined here on which
     ;; you drop all your stuff. Its what molds the whole workflow together

     (defcustom zetteldesk-map (make-sparse-keymap)
       \"This variable is the keymap for `zetteldesk-mode'.\"
       :type 'keymap
       :group 'zetteldesk)

     (defcustom zetteldesk-insert-scratch-or-current-buffer t
       \"Customization variable.
     Decides whethere zetteldesk-insert functions will insert to the
     ,*zetteldesk-scratch* buffer or the current buffer.  Default value
     is t which makes those functions insert to the scratch.  Setting
     it to nil will make those functions insert to the current buffer,
     for whichever usecase you might want\"
       :type 'string
       :group 'zetteldesk)

     (define-minor-mode zetteldesk-mode
       \"Toggles the global zetteldesk-mode.

     When turned on, this mode initialises the *zetteldesk-scratch*
     buffer, a useful part of the whole zetteldesk workflow.\"
       nil
       :global t
       :group 'zetteldesk
       :keymap zetteldesk-map
       :lighter \" zetteldesk\")

     (defun zetteldesk--create-scratch-buffer ()
       \"Create the zetteldesk-scratch buffer and put it in `org-mode'.\"
       (let ((buffer (generate-new-buffer \"*zetteldesk-scratch*\"))
	     (org-startup-with-latex-preview nil))
	 (with-current-buffer buffer
	   (org-mode))))

     (add-hook 'zetteldesk-mode-on-hook 'zetteldesk--create-scratch-buffer)

     (defmacro zetteldesk-insert-location ()
       \"Find the location the zetteldesk-insert functions should insert to.

     The decision is made depending on the variable
     `zetteldesk-insert-scratch-or-current-buffer'.  Check its
     docstring for more info.  This is used in all zetteldesk-insert
     functions to decide if the insertion should happen in
     ,*zetteldesk-scratch or the current buffer.\"
       `(if zetteldesk-insert-scratch-or-current-buffer
		       \"*zetteldesk-scratch*\"
		     (current-buffer)))

     (defmacro zetteldesk-insert-switch-to-scratch (arg)
       \"Switch to the *zetteldesk-scratch* if ARG is the `\\\\[universal-argument]'.

     All the zetteldesk-insert functions have a similar logic of
     switching to the *zetteldesk-scratch* buffer in a split if given
     a `\\\\[universal-argument]'.  To avoid repetition, this macro
     expands to the needed code.\"
       `(when (equal ,arg '(4))
	  (switch-to-buffer-other-window \"*zetteldesk-scratch*\")))

     (defun zetteldesk-switch-to-scratch-buffer (&optional arg)
       \"Open the zetteldesk-scratch buffer in a split with the current buffer.

     Optionally, if given optional argument ARG, which needs to be the
     `\\\\[universal-argument]' switch to the *zetteldesk-scratch*
     buffer without issuing a split.\"
       (interactive \"P\")
       (if (equal arg '(4))
	   (switch-to-buffer \"*zetteldesk-scratch*\")
	 (switch-to-buffer-other-window \"*zetteldesk-scratch*\")))

     (defun zetteldesk-node-insert-if-poi-or-moc ()
       \"Filter `org-roam-node-list' to show zetteldesk-nodes only.
     Then filter that to only those that have the POI or MOC tag with
     `zetteldesk-node-p' and `org-roam-node-poi-or-moc-p'.  Then
     insert a link to every one of those nodes and seperate them with
     commas\"
       (interactive)
       (let* ((init_list (org-roam-node-list))
	      (zetteldesk_nodes (cl-remove-if-not #'zetteldesk-node-p init_list))
	      (nodes_poi (cl-remove-if-not #'org-roam-node-poi-or-moc-p zetteldesk_nodes)))
	 (while nodes_poi
	   (let* ((node (car nodes_poi))
		  (description (org-roam-node-formatted (car nodes_poi))))
	     (insert (org-link-make-string
		      (concat \"id:\" (org-roam-node-id (car nodes_poi)))
		      description))
	     (insert \", \"))
	   (setq nodes_poi (cdr nodes_poi)))))

     (defun zetteldesk-insert-node-contents (&optional arg)
       \"Select a node that is part of the current `zetteldesk'.
     Add a link to it at point and then insert its contents to the
     bottom of the *zetteldesk-scratch* buffer after inserting a
     newline there.  Remove the first 67 characters which is the
     properties section if it only contains the ID of the node as its
     unneeded and change the string #+title to a top level heading as
     its more practical when inserting the contents of multiple files.

     If given the optional argument ARG, which needs to be the
     `\\\\[universal-argument]' also switch to the *zetteldesk-scratch*
     buffer in a split.\"
       (interactive \"P\")
       (let* ((node (org-roam-node-read nil #'zetteldesk-node-p))
	      (file (org-roam-node-file node))
	      (description (org-roam-node-formatted node))
	      (location (zetteldesk-insert-location)))
	 (insert (org-link-make-string
		  (concat \"id:\" (org-roam-node-id node))
		  description))
	 (with-current-buffer location
	   (goto-char (point-max))
	   (newline)
	   (insert-file-contents file nil 67)
	   (replace-string \"#+title: \" \"* \")))
       (zetteldesk-insert-switch-to-scratch arg))

     (defun zetteldesk-insert-node-contents-without-link ()
       \"\\\"Sister function\\\" of `zetteldesk-insert-node-contents'.
     Finds a node that is part of the `zetteldesk' and inserts its
     contents to the bottom of the zetteldesk-scratch buffer. This
     function differentiates itself, by the fact that it doesn't
     insert an ID link to the node in the current buffer and by the
     fact that it switches to the scratch buffer in a split without
     needing a `\\\\[universal-argument]'.

     For me, it makes sense a lot of the time to insert a link to the
     node inthe current buffer, especially if its an outlining
     buffer. But sometimes its not handy, and so, I just made this
     second iteration to fix that issue.\"
       (interactive)
       (let* ((node (org-roam-node-read nil #'zetteldesk-node-p))
	      (location (zetteldesk-insert-location))
	      (file (org-roam-node-file node)))
	 (with-current-buffer location
	   (goto-char (point-max))
	   (newline)
	   (insert-file-contents file nil 67)
	   (replace-string \"#+title: \" \"* \")))
       (switch-to-buffer-other-window \"*zetteldesk-scratch*\"))

     (defun zetteldesk-insert-org-file-contents (&optional arg)
       \"Select an org buffer that is in the `zetteldesk'.
     Insert its contents to the *zetteldesk-scratch* buffer, make its
      title a top level heading and demote all of its headings by one
      level (since the title now acts as a top level heading).  Note
      that org-roam nodes are not shown

     Optional argument ARG, if given needs to be a
     `\\\\[universal-argument]' and it switches to the *zetteldesk-scratch*
     buffer in a split\"
       (interactive \"P\")
       (let* ((buffer (set-buffer (read-buffer \"Zetteldesk Buffers: \" nil nil #'zetteldesk-org-buffer-p)))
	      (location (zetteldesk-insert-location))
	      (file (buffer-file-name buffer)))
	 (set-buffer location)
	 (goto-char (point-max))
	 (save-excursion
	   (newline)
	   (insert-file-contents file))
	 (save-excursion
	   (while (not (org-next-visible-heading 1))
	     (org-metaright)))
	 (replace-string \"#+title: \" \"* \"))
       (zetteldesk-insert-switch-to-scratch arg))

     (defun zetteldesk-insert-link-to-pdf (&optional arg)
       \"Select a pdf file that is part of the `zetteldesk'.
     Prompt for a page in that pdf (defaults to page 1 if you don't
     care about the page).

     Then, in the zetteldesk-scratch buffer, insert at `point-max' a
     newline and then a new heading with its name consisting of the
     string \\\"Supportive Material - \\\" then the pdfs name, without the
     file structure or the extension and then the string
     \\\"(PDF)\\\".  Then, insert a newline, the string \\\"Link to PDF: \\\"
     and then a link to the chosen pdf, in the correct page, with the
     description being the pdfs name without the file structure or the
     extension.  Note that `org-pdftools-setup-link' needs to be run
     for pdf links to work (which this uses).

     Optionally, if given optional argument ARG which is the
     `\\\\[universal-argument]' save the highlighted region in a
     variable and insert it after the heading but before the pdf link.
     This functionality serves the purpose of adding a \\\"description\\\"
     sort of thing to the pdf. Typically, when citing a pdf as
     supplementary info to an argument, there is something specific
     you want to take from the pdf. Therefore, this optional addition,
     adds that to the scratch buffer so you remember why it was
     useful.\"
       (interactive \"P\")
       (let* ((pdf-buffer (set-buffer (read-buffer \"Zetteldesk Pdfs: \" nil nil #'zetteldesk-pdf-p)))
	      (file (buffer-file-name pdf-buffer))
	      (location (zetteldesk-insert-location))
	      (page (read-from-minibuffer \"Page: \" \"1\"))
	      (description (file-name-nondirectory (file-name-sans-extension file))))
	 (with-current-buffer location
	   (goto-char (point-max))
	   (newline)
	   (org-insert-heading)
	   (insert \"Supportive Material - \" description \" (PDF)\")
	   (newline)
	   (when (equal arg '(4))
	     (let ((contents (buffer-substring (mark) (point))))
	       (insert contents)
	       (newline)))
	   (insert \"Link to PDF: \"
		   (org-link-make-string
		    (concat \"pdf:\" file \"::\" page)
		    description)))))

     (defun zetteldesk-insert-info-contents (&optional arg)
       \"Select an info node that is part of the current `zetteldesk'.
     Uses a `completing-read' prompt for the selection.

     Then, in the *zetteldesk-scratch* buffer, go to the end of the
     buffer, insert a newline and a heading of the form \\\"Supportive
     Material - \\\" the node's name \\\"(Info)\\\" akin to what is done in
     `zetteldesk-insert-link-to-pdf'.  Then, insert the contents of the
     chosen info node, removing the first 2 lines which have the
     contextual links of the buffer, as they are not functional
     outside of the info buffer.  Also insert a link with the title
     \\\"See this node in its context\\\" which opens the node inside the
     info program. Finally, restore the buffer from which this
     function was called. Ideally, this wouldn't require a
     switch-to-buffer statement, but the function `Info-goto-node'
     used for this function switches the visible buffer to the info
     node and I couldn't find an alternative that only makes it
     current for editing operations, but doesn't change the visible
     buffer to it.

     I find the link to the actual info buffer is useful as a lot of
     the time, you might want to insert the buffer so you can store it
     with other useful information inside the zetteldesk-scratch
     buffer, but then, you are interested in looking into the other
     nodes of the manual you were reading.

     Optional argument ARG which is a `\\\\[universal-argument]' switch to the
     zetteldesk-scratch buffer in a split.\"
       (interactive \"P\")
       (let ((info_node (completing-read \"Nodes: \" zetteldesk-info-nodes))
	     (location (zetteldesk-insert-location))
	     (buffer (current-buffer)))
	 (Info-goto-node info_node)
	 (with-current-buffer location
	   (goto-char (point-max))
	   (newline)
	   (org-insert-heading)
	   (insert \"Supportive Material - \" info_node \" (Info)\")
	   (newline)
	   (save-excursion (insert-buffer-substring \"*info*\")
			   (insert
			    (org-link-make-string
			     (concat \"elisp:(Info-goto-node \\\"\" info_node \"\\\")\")
			     \"See this node in its context\")))
	   (kill-whole-line 2))
	 (switch-to-buffer buffer)
	 (zetteldesk-insert-switch-to-scratch arg)))

" 0 6 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6 9 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 9 12 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 12 13 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-comment-face org-block)) 13 31 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-comment-face org-block)) 31 32 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-comment-face org-block)) 32 36 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 36 41 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 41 44 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 44 97 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 97 102 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 102 105 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 105 173 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 173 178 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 178 181 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 181 249 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 249 256 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 256 265 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 265 266 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 266 280 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 280 309 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 309 343 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 343 358 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 358 361 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 361 369 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 369 374 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 374 390 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 390 396 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 396 417 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 417 426 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 426 427 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 427 470 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 470 480 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 480 500 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 500 829 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 829 837 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 837 842 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 842 858 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 858 864 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 864 885 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 885 902 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 902 903 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 903 918 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 918 926 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 926 1011 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1011 1012 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 1012 1030 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 1030 1031 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 1031 1093 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1093 1112 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1112 1119 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1119 1129 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1129 1135 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1135 1155 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1155 1162 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1162 1185 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1185 1193 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1193 1194 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1194 1207 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1207 1216 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1216 1221 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1221 1222 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1222 1255 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 1255 1266 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1266 1319 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1319 1327 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1327 1330 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1330 1339 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1339 1342 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1342 1373 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1373 1374 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1374 1375 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 1375 1393 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 1393 1394 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 1394 1395 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1395 1445 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1445 1464 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1464 1574 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1574 1582 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1582 1583 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1583 1609 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 1609 1620 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1620 1748 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1748 1791 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1791 1982 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1982 1992 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1992 1994 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1994 2048 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2048 2049 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2049 2050 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 2050 2068 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 2068 2069 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 2069 2070 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2070 2104 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2104 2112 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2112 2113 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2113 2148 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 2148 2162 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2162 2177 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2177 2178 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 2178 2196 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 2196 2197 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 2197 2216 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2216 2234 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2234 2326 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2326 2327 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 2327 2345 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 2345 2346 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 2346 2385 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2385 2403 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2403 2473 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2473 2483 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2483 2487 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2487 2540 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2540 2541 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2541 2542 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 2542 2560 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 2560 2561 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 2561 2562 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2562 2573 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2573 2578 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2578 2579 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2579 2614 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 2614 2616 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2616 2625 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 2625 2638 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2638 2791 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2791 2809 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2809 2826 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2826 2827 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 2827 2845 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 2845 2846 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 2846 2884 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2884 2893 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2893 2904 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2904 2905 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2905 2908 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2908 2918 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2918 2920 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2920 2960 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2960 2961 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2961 2962 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 2962 2980 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 2980 2981 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 2981 2982 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2982 3017 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3017 3018 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 3018 3019 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 3019 3037 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 3037 3038 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 3038 3039 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 3039 3050 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3050 3055 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3055 3056 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3056 3092 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 3092 3103 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3103 3112 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3112 3130 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3130 3239 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3239 3256 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3256 3263 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3263 3289 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3289 3380 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3380 3389 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3389 3400 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3400 3410 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3410 3414 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3414 3612 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3612 3617 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3617 3633 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3633 3637 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3637 3775 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3775 3780 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 3780 3853 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3853 3857 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 3857 3865 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3865 3869 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3869 3907 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3907 3912 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3912 3913 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3913 3944 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 3944 3946 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3946 3955 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 3955 3968 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3968 4012 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4012 4022 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4022 4111 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4111 4112 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 4112 4130 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 4130 4131 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 4131 4506 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4506 4524 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4524 4546 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4546 4547 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 4547 4565 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 4565 4566 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 4566 4591 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4591 4600 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4600 4611 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4611 4612 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4612 4615 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 4615 4625 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4625 4629 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4629 4793 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4793 4819 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4819 4867 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4867 4872 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 4872 4919 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4919 4938 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4938 5049 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5049 5060 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5060 5061 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5061 5065 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5065 5077 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5077 5112 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5112 5126 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5126 5131 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5131 5132 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5132 5176 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 5176 5187 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5187 5212 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5212 5243 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 5243 5285 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5285 5295 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 5295 5600 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5600 5618 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 5618 5864 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5864 5873 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5873 5884 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5884 5894 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5894 5898 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5898 5970 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5970 5996 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5996 6043 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6043 6062 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6062 6173 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6173 6184 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6184 6185 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6185 6189 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6189 6231 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6231 6232 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6232 6233 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 6233 6251 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 6251 6252 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 6252 6253 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6253 6263 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6263 6268 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6268 6269 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6269 6304 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 6304 6306 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6306 6315 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 6315 6328 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6328 6366 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6366 6376 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 6376 6411 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6411 6412 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 6412 6430 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 6430 6431 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 6431 6689 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6689 6707 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 6707 6733 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6733 6734 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 6734 6752 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 6752 6753 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 6753 6777 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6777 6786 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6786 6797 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6797 6798 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6798 6801 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6801 6811 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6811 6815 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6815 6850 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6850 6872 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6872 6928 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6928 6954 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6954 7051 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7051 7065 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 7065 7116 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7116 7130 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 7130 7136 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7136 7141 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 7141 7219 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7219 7230 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 7230 7231 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7231 7235 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 7235 7246 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7246 7281 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 7281 7295 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7295 7300 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 7300 7301 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7301 7330 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 7330 7332 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7332 7341 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 7341 7354 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7354 7394 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7394 7404 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 7404 7500 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7500 7501 (fontified t font-lock-fontified t help-echo "Hidden behind deeper element; move to another line?" src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7501 7559 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7559 7568 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 7568 8007 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 8007 8030 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 8030 8165 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 8165 8183 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 8183 8640 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 8640 8649 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8649 8660 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8660 8661 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8661 8664 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8664 8674 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8674 8678 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8678 8717 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8717 8736 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8736 8829 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8829 8855 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8855 8893 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8893 8901 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8901 8902 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8902 8905 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8905 8990 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8990 9009 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 9009 9098 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9098 9122 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 9122 9135 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9135 9143 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 9143 9164 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9164 9168 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 9168 9193 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9193 9196 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 9196 9302 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9302 9317 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 9317 9359 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9359 9365 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 9365 9371 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9371 9375 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 9375 9412 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9412 9417 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 9417 9418 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9418 9449 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 9449 9451 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9451 9460 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 9460 9473 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9473 9523 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 9523 9533 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 9533 9549 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 9549 9564 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 9564 9611 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 9611 9612 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 9612 9630 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 9630 9631 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 9631 9806 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 9806 9835 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 9835 10312 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 10312 10326 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 10326 10907 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 10907 10925 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 10925 10985 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 10985 10994 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10994 11005 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 11005 11006 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11006 11009 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 11009 11019 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11019 11022 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 11022 11052 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11052 11061 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 11061 11103 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11103 11129 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 11129 11197 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11197 11216 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 11216 11305 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11305 11329 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 11329 11340 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11340 11349 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 11349 11370 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11370 11384 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 11384 11410 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11410 11411 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 11411 11412 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 11412 11416 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 11416 11417 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 11417 11418 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 11418 11479 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11479 11505 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 11505 11516 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11516 11521 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 11521 11531 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11531 11561 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 11561 11621 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11621 11656 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 11656 11665 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 54435) (undo-tree-id14438 . -10865) (undo-tree-id14439 . -11662) (undo-tree-id14440 . -11662) (undo-tree-id14441 . -11662) (undo-tree-id14442 . -10865) (undo-tree-id14443 . -11660) (undo-tree-id14444 . -11662) (undo-tree-id14445 . -10865) (undo-tree-id14446 . -11662) (undo-tree-id14447 . -11662) (undo-tree-id14448 . -10865) (undo-tree-id14449 . -11662) (undo-tree-id14450 . -11662) (undo-tree-id14451 . -10865) (undo-tree-id14452 . -11165) (undo-tree-id14453 . -10942) (undo-tree-id14454 . -10460) (undo-tree-id14455 . -10139) (undo-tree-id14456 . -11590) (undo-tree-id14457 . -11590) (undo-tree-id14458 . -9800) (undo-tree-id14459 . -11590) (undo-tree-id14460 . -11590) (undo-tree-id14461 . -11590) (undo-tree-id14462 . -11590) (undo-tree-id14463 . -11590) (undo-tree-id14464 . -11590) (undo-tree-id14465 . -11590) (undo-tree-id14466 . -11590) (undo-tree-id14467 . -11590) (undo-tree-id14468 . -11590) (undo-tree-id14469 . -11590) (undo-tree-id14470 . -11590) (undo-tree-id14471 . -11254) (undo-tree-id14472 . -11254) (undo-tree-id14473 . -9345) (undo-tree-id14474 . -11254) (undo-tree-id14475 . -11254) (undo-tree-id14476 . -11254) (undo-tree-id14477 . -11254) (undo-tree-id14478 . -11254) (undo-tree-id14479 . -11254) (undo-tree-id14480 . -11254) (undo-tree-id14481 . -11254) (undo-tree-id14482 . -11254) (undo-tree-id14483 . -11254) (undo-tree-id14484 . -11254) (undo-tree-id14485 . -11254) (undo-tree-id14486 . -11254) (undo-tree-id14487 . -11254) (undo-tree-id14488 . -9536) (undo-tree-id14489 . -11254) (undo-tree-id14490 . -11254) (undo-tree-id14491 . -11254) (undo-tree-id14492 . -11254) (undo-tree-id14493 . -11254) (undo-tree-id14494 . -11254) (undo-tree-id14495 . -11254) (undo-tree-id14496 . -11254) (undo-tree-id14497 . -11254) (undo-tree-id14498 . -11254) (undo-tree-id14499 . -11254) (undo-tree-id14500 . -11254) (undo-tree-id14501 . -11254) (undo-tree-id14502 . -11254) (undo-tree-id14503 . -10139) (undo-tree-id14504 . -11254) (undo-tree-id14505 . -11254) (undo-tree-id14506 . -11254) (undo-tree-id14507 . -11254) (undo-tree-id14508 . -11254) (undo-tree-id14509 . -11254) (undo-tree-id14510 . -11254) (undo-tree-id14511 . -10942) (undo-tree-id14512 . -11254) (undo-tree-id14513 . -11254) (undo-tree-id14514 . -11254) (undo-tree-id14515 . -11254) (undo-tree-id14516 . -11254) (undo-tree-id14517 . -11254) (undo-tree-id14518 . -11254) (undo-tree-id14519 . -11254) (undo-tree-id14520 . -11254) (undo-tree-id14521 . -11254) (undo-tree-id14522 . -11254) (undo-tree-id14523 . -11254) (undo-tree-id14524 . -11664) (undo-tree-id14525 . -11664) (undo-tree-id14526 . -11664) (undo-tree-id14527 . -11664) (undo-tree-id14528 . -11664) (undo-tree-id14529 . -11664) (undo-tree-id14530 . -11664) (undo-tree-id14531 . -11664) (undo-tree-id14532 . -9382) (undo-tree-id14533 . -9382) (undo-tree-id14534 . -9382) (undo-tree-id14535 . -11194) (undo-tree-id14536 . -11618) (undo-tree-id14537 . -11618) (undo-tree-id14538 . -9872) (undo-tree-id14539 . -11618) (undo-tree-id14540 . -11618) (undo-tree-id14541 . -11618) (undo-tree-id14542 . -11618) (undo-tree-id14543 . -11618) (undo-tree-id14544 . -10396) (undo-tree-id14545 . -10396) (undo-tree-id14546 . -8627) (undo-tree-id14547 . -10396) (undo-tree-id14548 . -10396) (undo-tree-id14549 . -10396) (undo-tree-id14550 . -10396) (undo-tree-id14551 . -10396) (undo-tree-id14552 . -8767) (undo-tree-id14553 . -8767) (undo-tree-id14554 . -6957) (undo-tree-id14555 . -8767) (undo-tree-id14556 . -8767) (undo-tree-id14557 . -8767) (undo-tree-id14558 . -8767) (undo-tree-id14559 . -8767) (undo-tree-id14560 . -6803) (undo-tree-id14561 . -6803) (undo-tree-id14562 . -5029) (undo-tree-id14563 . -6803) (undo-tree-id14564 . -6803) (undo-tree-id14565 . -6803) (undo-tree-id14566 . -6803) (undo-tree-id14567 . -6803) (undo-tree-id14568 . -4823) (undo-tree-id14569 . -4823) (undo-tree-id14570 . -2984) (undo-tree-id14571 . -4823) (undo-tree-id14572 . -4823) (undo-tree-id14573 . -4823) (undo-tree-id14574 . -4823) (undo-tree-id14575 . -4823) (undo-tree-id14576 . -4823) (undo-tree-id14577 . -4823) (undo-tree-id14578 . -4823) (undo-tree-id14579 . -4823) (undo-tree-id14580 . -4823) (undo-tree-id14581 . -4823) (undo-tree-id14582 . -4823) (undo-tree-id14583 . -4592) (undo-tree-id14584 . -4592) (undo-tree-id14585 . -2782) (undo-tree-id14586 . -4592) (undo-tree-id14587 . -4592) (undo-tree-id14588 . -4592) (undo-tree-id14589 . -4592) (undo-tree-id14590 . -4592) (undo-tree-id14591 . -4592) (undo-tree-id14592 . -4592) (undo-tree-id14593 . -4592) (undo-tree-id14594 . -4592) (undo-tree-id14595 . -4592) (undo-tree-id14596 . -4592) (undo-tree-id14597 . -4592) (undo-tree-id14598 . -4592) (undo-tree-id14599 . -4592) (undo-tree-id14600 . -2984) (undo-tree-id14601 . -4592) (undo-tree-id14602 . -4592) (undo-tree-id14603 . -4592) (undo-tree-id14604 . -4592) (undo-tree-id14605 . -4592) (undo-tree-id14606 . -4592) (undo-tree-id14607 . -4592) (undo-tree-id14608 . -4592) (undo-tree-id14609 . -4592) (undo-tree-id14610 . -4592) (undo-tree-id14611 . -4592) (undo-tree-id14612 . -4592) (undo-tree-id14613 . -4592) (undo-tree-id14614 . -4592) (undo-tree-id14615 . -3233) (undo-tree-id14616 . -4592) (undo-tree-id14617 . -4592) (undo-tree-id14618 . -4592) (undo-tree-id14619 . -4592) (undo-tree-id14620 . -4592) (undo-tree-id14621 . -4592) (undo-tree-id14622 . -4592) (undo-tree-id14623 . -4592) (undo-tree-id14624 . -4592) (undo-tree-id14625 . -4592) (undo-tree-id14626 . -4592) (undo-tree-id14627 . -4592) (undo-tree-id14628 . -4592) (undo-tree-id14629 . -4592) (undo-tree-id14630 . -3449) (undo-tree-id14631 . -4592) (undo-tree-id14632 . -4592) (undo-tree-id14633 . -4592) (undo-tree-id14634 . -4592) (undo-tree-id14635 . -4592) (undo-tree-id14636 . -4592) (undo-tree-id14637 . -4592) (undo-tree-id14638 . -4592) (undo-tree-id14639 . -4592) (undo-tree-id14640 . -4592) (undo-tree-id14641 . -4592) (undo-tree-id14642 . -4592) (undo-tree-id14643 . -4592) (undo-tree-id14644 . -4592) (undo-tree-id14645 . -3900) (undo-tree-id14646 . -4592) (undo-tree-id14647 . -4592) (undo-tree-id14648 . -4592) (undo-tree-id14649 . -4592) (undo-tree-id14650 . -4592) (undo-tree-id14651 . -4683) (undo-tree-id14652 . -4683) (undo-tree-id14653 . -4683) (undo-tree-id14654 . -4683) (undo-tree-id14655 . -4683) (undo-tree-id14656 . -4683) (undo-tree-id14657 . -4683) (undo-tree-id14658 . -4683) (undo-tree-id14659 . -5581) (undo-tree-id14660 . -5581) (undo-tree-id14661 . -5581) (undo-tree-id14662 . -5581) (undo-tree-id14663 . -5581) (undo-tree-id14664 . -5581) (undo-tree-id14665 . -5581) (undo-tree-id14666 . -5581) (undo-tree-id14667 . -5581) (undo-tree-id14668 . -5581) (undo-tree-id14669 . -5581) (undo-tree-id14670 . -5581) (undo-tree-id14671 . -5581) (undo-tree-id14672 . -5581) (undo-tree-id14673 . -5581) (undo-tree-id14674 . -6680) (undo-tree-id14675 . -6680) (undo-tree-id14676 . -6680) (undo-tree-id14677 . -6680) (undo-tree-id14678 . -6680) (undo-tree-id14679 . -6680) (undo-tree-id14680 . -6680) (undo-tree-id14681 . -6680) (undo-tree-id14682 . -6680) (undo-tree-id14683 . -6680) (undo-tree-id14684 . -6680) (undo-tree-id14685 . -6680) (undo-tree-id14686 . -6680) (undo-tree-id14687 . -6680) (undo-tree-id14688 . -6680) (undo-tree-id14689 . -6680) (undo-tree-id14690 . -6680) (undo-tree-id14691 . -6449) (undo-tree-id14692 . -6680) (undo-tree-id14693 . -6680) (undo-tree-id14694 . -6680) (undo-tree-id14695 . -6680) (undo-tree-id14696 . -6680) (undo-tree-id14697 . -6680) (undo-tree-id14698 . -6680) (undo-tree-id14699 . -6680) (undo-tree-id14700 . -6680) (undo-tree-id14701 . -6680) (undo-tree-id14702 . -6680) (undo-tree-id14703 . -6680) (undo-tree-id14704 . -6680) (undo-tree-id14705 . -6680) (undo-tree-id14706 . -6680) (undo-tree-id14707 . -6680) (undo-tree-id14708 . -6680) (undo-tree-id14709 . -6680) (undo-tree-id14710 . -6680) (undo-tree-id14711 . -6680) (undo-tree-id14712 . -6680) (undo-tree-id14713 . -6680) (undo-tree-id14714 . -6680) (undo-tree-id14715 . -6680) (undo-tree-id14716 . -6680) (undo-tree-id14717 . -6680) (undo-tree-id14718 . -6680) (undo-tree-id14719 . -7080) (undo-tree-id14720 . -7080) (undo-tree-id14721 . -7080) (undo-tree-id14722 . -7080) (undo-tree-id14723 . -7080) (undo-tree-id14724 . -7080) (undo-tree-id14725 . -7080) (undo-tree-id14726 . -7080) (undo-tree-id14727 . -7080) (undo-tree-id14728 . -7080) (undo-tree-id14729 . -7080) (undo-tree-id14730 . -7080) (undo-tree-id14731 . -7080) (undo-tree-id14732 . -7080) (undo-tree-id14733 . -7080) (undo-tree-id14734 . -7711) (undo-tree-id14735 . -7711) (undo-tree-id14736 . -7711) (undo-tree-id14737 . -7711) (undo-tree-id14738 . -7711) (undo-tree-id14739 . -7711) (undo-tree-id14740 . -7711) (undo-tree-id14741 . -7711) (undo-tree-id14742 . -7711) (undo-tree-id14743 . -7711) (undo-tree-id14744 . -7711) (undo-tree-id14745 . -7711) (undo-tree-id14746 . -7711) (undo-tree-id14747 . -7711) (undo-tree-id14748 . -7711) (undo-tree-id14749 . -8048) (undo-tree-id14750 . -8048) (undo-tree-id14751 . -8048) (undo-tree-id14752 . -8048) (undo-tree-id14753 . -8048) (undo-tree-id14754 . -8048) (undo-tree-id14755 . -8048) (undo-tree-id14756 . -8048) (undo-tree-id14757 . -8048) (undo-tree-id14758 . -8048) (undo-tree-id14759 . -8048) (undo-tree-id14760 . -8048) (undo-tree-id14761 . -8048) (undo-tree-id14762 . -8048) (undo-tree-id14763 . -8048) (undo-tree-id14764 . -8627) (undo-tree-id14765 . -8627) (undo-tree-id14766 . -8627) (undo-tree-id14767 . -8627) (undo-tree-id14768 . -8627) (undo-tree-id14769 . -8627) (undo-tree-id14770 . -8627) (undo-tree-id14771 . -8627) (undo-tree-id14772 . -8627) (undo-tree-id14773 . -8627) (undo-tree-id14774 . -8627) (undo-tree-id14775 . -8627) (undo-tree-id14776 . -8627) (undo-tree-id14777 . -8627) (undo-tree-id14778 . -8627) (undo-tree-id14779 . -8858) (undo-tree-id14780 . -8858) (undo-tree-id14781 . -8858) (undo-tree-id14782 . -8858) (undo-tree-id14783 . -8858) (undo-tree-id14784 . -8858) (undo-tree-id14785 . -8858) (undo-tree-id14786 . -8858) (undo-tree-id14787 . -8858) (undo-tree-id14788 . -8858) (undo-tree-id14789 . -8858) (undo-tree-id14790 . -8858) (undo-tree-id14791 . -8858) (undo-tree-id14792 . -8858) (undo-tree-id14793 . -8858) (undo-tree-id14794 . -9061) (undo-tree-id14795 . -9061) (undo-tree-id14796 . -9061) (undo-tree-id14797 . -9061) (undo-tree-id14798 . -9061) (undo-tree-id14799 . -9061) (undo-tree-id14800 . -9061) (undo-tree-id14801 . -9061) (undo-tree-id14802 . -9061) (undo-tree-id14803 . -9061) (undo-tree-id14804 . -9061) (undo-tree-id14805 . -9061) (undo-tree-id14806 . -9061) (undo-tree-id14807 . -9061) (undo-tree-id14808 . -9061) (undo-tree-id14809 . -9244) (undo-tree-id14810 . -9244) (undo-tree-id14811 . -9244) (undo-tree-id14812 . -9244) (undo-tree-id14813 . -9244) (undo-tree-id14814 . -9244) (undo-tree-id14815 . -9244) (undo-tree-id14816 . -9244) (undo-tree-id14817 . -9244) (undo-tree-id14818 . -9244) (undo-tree-id14819 . -9244) (undo-tree-id14820 . -9244) (undo-tree-id14821 . -9244) (undo-tree-id14822 . -9244) (undo-tree-id14823 . -9244) (undo-tree-id14824 . -9382) (undo-tree-id14825 . -9382) (undo-tree-id14826 . -9382) (undo-tree-id14827 . -9382) (undo-tree-id14828 . -9382) (undo-tree-id14829 . -9382) (undo-tree-id14830 . -9382) (undo-tree-id14831 . -9382) (undo-tree-id14832 . -9382) (undo-tree-id14833 . -9382) (undo-tree-id14834 . -9382) (undo-tree-id14835 . -9382) (undo-tree-id14836 . -9382) (undo-tree-id14837 . -9382) (undo-tree-id14838 . -9382) (undo-tree-id14839 . -9382) (undo-tree-id14840 . -9382) (undo-tree-id14841 . -9382) (undo-tree-id14842 . -9382) (undo-tree-id14843 . -9382) (undo-tree-id14844 . -9382) (undo-tree-id14845 . -9382) (undo-tree-id14846 . -9382) (undo-tree-id14847 . -9382) (undo-tree-id14848 . -9382) (undo-tree-id14849 . -9382) (undo-tree-id14850 . -9382) (undo-tree-id14851 . -9382) (undo-tree-id14852 . -9382) (undo-tree-id14853 . -9382) (undo-tree-id14854 . -9382) (undo-tree-id14855 . -9382) (undo-tree-id14856 . -9382) (undo-tree-id14857 . -9382) (undo-tree-id14858 . -9382) (undo-tree-id14859 . -9382) (undo-tree-id14860 . -9382) (undo-tree-id14861 . -9382) (undo-tree-id14862 . -9382) (undo-tree-id14863 . -9382) (undo-tree-id14864 . -9382) (undo-tree-id14865 . -9382) (undo-tree-id14866 . -9382) (undo-tree-id14867 . -9382) (undo-tree-id14868 . -9382) (undo-tree-id14869 . -9382) (undo-tree-id14870 . -9382) (undo-tree-id14871 . -9382) (undo-tree-id14872 . -9382) (undo-tree-id14873 . -9382) (undo-tree-id14874 . -9382) (undo-tree-id14875 . -9382) (undo-tree-id14876 . -9382) (undo-tree-id14877 . -9382) (undo-tree-id14878 . -9382) (undo-tree-id14879 . -9382) (undo-tree-id14880 . -9382) (undo-tree-id14881 . -9382) (undo-tree-id14882 . -9382) (undo-tree-id14883 . -9382) (undo-tree-id14884 . -9382) (undo-tree-id14885 . -9382) (undo-tree-id14886 . -9382) (undo-tree-id14887 . -9382) (undo-tree-id14888 . -9382) (undo-tree-id14889 . -9382) (undo-tree-id14890 . -9382) (undo-tree-id14891 . -9382) (undo-tree-id14892 . -9382) (undo-tree-id14893 . -9382) (undo-tree-id14894 . -9382) (undo-tree-id14895 . -9382) (undo-tree-id14896 . -9382) (undo-tree-id14897 . -9382) (undo-tree-id14898 . -9382) (undo-tree-id14899 . -9382) (undo-tree-id14900 . -9382) (undo-tree-id14901 . -9382) (undo-tree-id14902 . -9382) (undo-tree-id14903 . -9382) (undo-tree-id14904 . -9382) (undo-tree-id14905 . -9382) (undo-tree-id14906 . -9382) (undo-tree-id14907 . -9382) (undo-tree-id14908 . -9382) (undo-tree-id14909 . -9382) (undo-tree-id14910 . -9382) (undo-tree-id14911 . -9382) (undo-tree-id14912 . -9382) (undo-tree-id14913 . -9382) (undo-tree-id14914 . -9382) (undo-tree-id14915 . -9382) (undo-tree-id14916 . -9382) (undo-tree-id14917 . -9382) (undo-tree-id14918 . -9382) 63817) nil (25151 36982 8679 897000) 0 nil])
([nil nil ((67879 . 76470) (#("
     ;; -- Reference Nodes from Bibtex Entries --
     (defun zetteldesk-note-refs-p ()
       \"Predicate function that finds all bibtex completion candidates with a note.

     Checks if every candidate has the \\\"=has-note=\\\" tag using
     `assoc' and if it does, collects that candidate\"
       (cl-loop for ref in (bibtex-completion-candidates)
		if (assoc \"=has-note=\" ref)
		collect ref))

     (defun zetteldesk-citekey-from-refs ()
       \"Function that finds the \\\"=key=\\\" tag from a list of candidates.

     The list is collected with `zetteldesk-note-refs-p' which is a
     list of candidates that have notes. Collects it using `assoc'.\"
       (cl-loop for ref in (zetteldesk-note-refs-p)
		collect (assoc \"=key=\" ref)))

     (defun zetteldesk-node-from-refs ()
       \"Function that collects a list of ref nodes.

     The nodes are collected from their citekey using
     `org-roam-node-from-ref', while the citekeys themselves are
     collected from `zetteldesk-citekey-from-refs'.\"
       (cl-loop for ref in (zetteldesk-citekey-from-refs)
		collect (org-roam-node-from-ref (concat \"cite:\" (cdr ref)))))

     (defun org-roam-node-read--completions* (node-list &optional filter-fn sort-fn)
       \"Runs `org-roam-node-read--completions' with NODE-LIST being a list of nodes.

     Typically, the function takes `org-roam-node-list' as the initial
     list of nodes and creates the alist `org-roam-node-read'
     uses. However, it can be helpful to supply the list of nodes
     yourself, when the predicate function used cannot be inferred
     through a filter function of the form this function
     takes. FILTER-FN and SORT-FN are the same as in
     `org-roam-node-read--completions'. The resulting alist is to be
     used with `org-roam-node-read*'.\"
       (let* ((template (org-roam-node--process-display-format org-roam-node-display-template))
	      (nodes node-list)
	      (nodes (mapcar (lambda (node)
			       (org-roam-node-read--to-candidate node template)) nodes))
	      (nodes (if filter-fn
			 (cl-remove-if-not
			  (lambda (n) (funcall filter-fn (cdr n)))
			  nodes)
		       nodes))
	      (sort-fn (or sort-fn
			   (when org-roam-node-default-sort
			     (intern (concat \"org-roam-node-read-sort-by-\"
					     (symbol-name org-roam-node-default-sort))))))
	      (nodes (if sort-fn (seq-sort sort-fn nodes)
		       nodes)))
	 nodes))

     (defun org-roam-node-read* (node-list &optional initial-input filter-fn sort-fn require-match prompt)
       \"Runs `org-roam-node-read' with the nodes supplied by NODE-LIST.

     NODE-LIST is a list of nodes passed to
     `org-roam-node-read--completions*', which creates an alist of
     nodes with the proper formatting to be used in this
     function. This is for those cases where it is helpful to use your
     own list of nodes, because a predicate function can not filter
     them in the way you want easily.\"
       (let* ((nodes (org-roam-node-read--completions* node-list filter-fn sort-fn))
	      (prompt (or prompt \"Node: \"))
	      (node (completing-read
		     prompt
		     (lambda (string pred action)
		       (if (eq action 'metadata)
			   `(metadata
			     ;; Preserve sorting in the completion UI if a sort-fn is used
			     ,@(when sort-fn
				 '((display-sort-function . identity)
				   (cycle-sort-function . identity)))
			     (annotation-function
			      . ,(lambda (title)
				   (funcall org-roam-node-annotation-function
					    (get-text-property 0 'node title))))
			     (category . org-roam-node))
			 (complete-with-action action nodes string pred)))
		     nil require-match initial-input 'org-roam-node-history)))
	 (or (cdr (assoc node nodes))
	     (org-roam-node-create :title node))))

     (defun zetteldesk-find-ref-node ()
       \"Execute a filtered version of `ivy-bibtex-with-notes'.

     This does not exactly run `ivy-bibtex-with-notes' as that doesn't
     have a way to filter things. It collects a list of nodes which
     are reference nodes linked to a bibtex entry through
     `zetteldesk-node-from-refs' and passes it to
     `org-roam-node-read*' which is a modified version of
     `org-roam-node-read' which takes a list of nodes as an
     argument. Since this required a rewrite of `org-roam-node-read',
     finding the file is done indirectly and not through
     `org-roam-node-file'.\"
       (interactive)
       (find-file (org-roam-node-file (org-roam-node-read* (zetteldesk-node-from-refs) nil #'zetteldesk-node-p))))

     (defun zetteldesk-insert-ref-node-contents (&optional arg)
       \"Select a node that is part of the current `zetteldesk' and a ref node.
     Ref nodes are nodes that refer to reference material such as an
     article. These are gathered with `zetteldesk-node-from-refs' and
     shown to the user through `org-roam-node-read*' filtered
     according to `zetteldesk-node-p'.

     After selection, insert its citekey at point for future
     reference, then in the location determined by
     `zetteldesk-insert-location' (typically *zetteldesk-scratch*), go
     to `point-max', insert a newline and then insert the contents of
     the selected node but remove the first 4 lines which is the
     unneeded property drawer. After, indent all headings by one level
     and replace the #+title: with an asterisk. Finally, enter a
     newline after the title, where the string \\\"Bibtex entry for
     node: \\\" is entered suffixed by the citekey of the entry.

     If given the optional argument ARG, which needs to be the
     `\\\\[universal-argument]' also switch to the *zetteldesk-scratch*
     buffer in a split.\"
       (interactive \"P\")
       (let* ((node
	       (org-roam-node-read* (zetteldesk-node-from-refs) nil #'zetteldesk-node-p))
	      (file (org-roam-node-file node))
	      (location (zetteldesk-insert-location))
	      (citekey (concat \"cite:\" (car (org-roam-node-refs node)))))
	 (insert citekey)
	 (set-buffer location)
	 (goto-char (point-max))
	 (save-excursion
	   (insert-file-contents file))
	 (kill-whole-line 4)
	 (newline)
	 (save-excursion
	   (while (not (org-next-visible-heading 1))
	     (org-metaright)))
	 (replace-string \"#+title: \" \"* \")
	 (end-of-line 1)
	 (newline)
	 (insert \"Bibtex entry for node: \"
		 citekey))
       (zetteldesk-insert-switch-to-scratch arg))

     ;; -- Info Nodes --
" 0 6 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6 9 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 9 51 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 51 57 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 57 62 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 62 63 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 63 85 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 85 96 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 96 215 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 215 216 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 216 224 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 224 225 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 225 244 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 244 249 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 249 291 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 291 300 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 300 307 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 307 362 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 362 363 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 363 364 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 364 372 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 372 373 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 373 374 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 374 403 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 403 408 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 408 409 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 409 437 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 437 448 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 448 475 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 475 476 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 476 479 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 479 480 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 480 500 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 500 548 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 548 570 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 570 643 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 643 648 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 648 651 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 651 660 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 660 667 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 667 721 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 721 722 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 722 723 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 723 726 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 726 727 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 727 728 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 728 743 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 743 748 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 748 749 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 749 774 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 774 785 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 785 891 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 891 913 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 913 971 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 971 999 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 999 1002 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1002 1011 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1011 1018 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1018 1103 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1103 1110 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1110 1132 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1132 1137 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1137 1138 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1138 1170 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 1170 1182 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1182 1191 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 1191 1218 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1218 1225 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1225 1256 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1256 1333 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1333 1351 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1351 1410 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1410 1428 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1428 1679 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1679 1710 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1710 1758 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1758 1777 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1777 1780 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1780 1789 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1789 1793 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1793 1925 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1925 1931 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1931 1999 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1999 2006 (fontified t font-lock-fontified t help-echo "Hidden behind deeper element; move to another line?" src-block t font-lock-multiline t face (font-lock-warning-face org-block)) 2006 2022 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2022 2024 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2024 2063 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2063 2069 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2069 2149 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2149 2151 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2151 2167 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2167 2171 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2171 2223 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2223 2252 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2252 2324 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2324 2326 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2326 2395 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2395 2400 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2400 2401 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2401 2420 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 2420 2432 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2432 2441 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 2441 2503 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2503 2510 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2510 2528 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2528 2619 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2619 2651 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2651 2914 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2914 2923 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2923 2927 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2927 3016 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3016 3018 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3018 3026 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3026 3034 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 3034 3089 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3089 3095 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3095 3127 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3127 3129 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3129 3177 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3177 3180 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3180 3239 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3239 3250 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3250 3254 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3254 3389 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3389 3395 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3395 3658 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3658 3660 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3660 3714 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3714 3720 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 3720 3737 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3737 3742 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3742 3743 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3743 3767 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 3767 3778 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3778 3810 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3810 3831 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3831 3867 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3867 3888 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3888 4038 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4038 4063 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4063 4088 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4088 4107 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4107 4146 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4146 4164 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4164 4249 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4249 4267 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4267 4333 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4333 4351 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4351 4354 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4354 4363 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4363 4374 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4374 4498 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4498 4503 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4503 4504 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4504 4539 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 4539 4541 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4541 4550 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 4550 4563 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4563 4607 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4607 4617 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4617 4743 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4743 4768 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4768 4806 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4806 4825 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4825 4855 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4855 4872 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4872 4994 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4994 5020 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 5020 5033 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5033 5034 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5034 5052 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5052 5053 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5053 5068 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5068 5077 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 5077 5532 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5532 5550 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 5550 5572 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5572 5573 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5573 5591 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5591 5592 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5592 5617 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5617 5626 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5626 5637 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5637 5638 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5638 5641 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5641 5651 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5651 5655 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5655 5804 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5804 5830 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5830 5857 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5857 5864 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5864 5972 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5972 5986 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5986 6057 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6057 6071 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6071 6077 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6077 6082 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6082 6160 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6160 6171 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6171 6172 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6172 6176 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6176 6218 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6218 6243 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6243 6265 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6265 6300 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6300 6313 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6313 6316 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 6316 6332 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 6332 6333 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block))) . 67879) (undo-tree-id14086 . -4875) (undo-tree-id14087 . -6331) (undo-tree-id14088 . -6331) (undo-tree-id14089 . -6333) (undo-tree-id14090 . -6331) (undo-tree-id14091 . -6331) (undo-tree-id14092 . -6331) (undo-tree-id14093 . -6331) (undo-tree-id14094 . -6331) (undo-tree-id14095 . -6331) (undo-tree-id14096 . -6331) (undo-tree-id14097 . -6331) (undo-tree-id14098 . -6331) (undo-tree-id14099 . -6331) (undo-tree-id14100 . -6331) (undo-tree-id14101 . -6331) (undo-tree-id14102 . -6331) (undo-tree-id14103 . -6331) (undo-tree-id14104 . -6331) (undo-tree-id14105 . -6331) (undo-tree-id14106 . -6331) (undo-tree-id14107 . -6331) (undo-tree-id14108 . -6331) (undo-tree-id14109 . -6331) (undo-tree-id14110 . -6331) (undo-tree-id14111 . -6331) (undo-tree-id14112 . -6331) (undo-tree-id14113 . -6331) (undo-tree-id14114 . -6331) (undo-tree-id14115 . -5523) (undo-tree-id14116 . -6331) (undo-tree-id14117 . -6331) (undo-tree-id14118 . -6331) (undo-tree-id14119 . -6331) (undo-tree-id14120 . -6331) (undo-tree-id14121 . -6331) (undo-tree-id14122 . -6331) (undo-tree-id14123 . -6331) (undo-tree-id14124 . -6331) (undo-tree-id14125 . -6331) (undo-tree-id14126 . -6331) (undo-tree-id14127 . -6331) (undo-tree-id14128 . -6331) (undo-tree-id14129 . -6331) (undo-tree-id14130 . -5265) (undo-tree-id14131 . -6331) (undo-tree-id14132 . -6331) (undo-tree-id14133 . -6331) (undo-tree-id14134 . -6331) (undo-tree-id14135 . -6331) (undo-tree-id14136 . -6331) (undo-tree-id14137 . -6331) (undo-tree-id14138 . -4937) (undo-tree-id14139 . -6331) (undo-tree-id14140 . -6331) (undo-tree-id14141 . -6331) (undo-tree-id14142 . -6331) (undo-tree-id14143 . -6331) (undo-tree-id14144 . -6257) (undo-tree-id14145 . -6257) (undo-tree-id14146 . -4704) (undo-tree-id14147 . -6257) (undo-tree-id14148 . -6257) (undo-tree-id14149 . -6257) (undo-tree-id14150 . -6257) (undo-tree-id14151 . -6257) (undo-tree-id14152 . -6257) (undo-tree-id14153 . -6257) (undo-tree-id14154 . -6257) (undo-tree-id14155 . -6257) (undo-tree-id14156 . -6257) (undo-tree-id14157 . -6257) (undo-tree-id14158 . -6257) (undo-tree-id14159 . -6142) (undo-tree-id14160 . -6142) (undo-tree-id14161 . -4376) (undo-tree-id14162 . -6142) (undo-tree-id14163 . -6142) (undo-tree-id14164 . -6142) (undo-tree-id14165 . -6142) (undo-tree-id14166 . -6142) (undo-tree-id14167 . -6142) (undo-tree-id14168 . -6142) (undo-tree-id14169 . -6142) (undo-tree-id14170 . -6142) (undo-tree-id14171 . -6142) (undo-tree-id14172 . -6142) (undo-tree-id14173 . -6142) (undo-tree-id14174 . -5900) (undo-tree-id14175 . -5900) (undo-tree-id14176 . -3835) (undo-tree-id14177 . -5900) (undo-tree-id14178 . -5900) (undo-tree-id14179 . -5900) (undo-tree-id14180 . -5900) (undo-tree-id14181 . -5900) (undo-tree-id14182 . -5900) (undo-tree-id14183 . -5900) (undo-tree-id14184 . -5900) (undo-tree-id14185 . -5900) (undo-tree-id14186 . -5900) (undo-tree-id14187 . -5900) (undo-tree-id14188 . -5900) (undo-tree-id14189 . -5129) (undo-tree-id14190 . -5129) (undo-tree-id14191 . -3263) (undo-tree-id14192 . -5129) (undo-tree-id14193 . -5129) (undo-tree-id14194 . -5129) (undo-tree-id14195 . -5129) (undo-tree-id14196 . -5129) (undo-tree-id14197 . -4032) (undo-tree-id14198 . -4032) (undo-tree-id14199 . -2378) (undo-tree-id14200 . -4032) (undo-tree-id14201 . -4032) (undo-tree-id14202 . -4032) (undo-tree-id14203 . -4032) (undo-tree-id14204 . -4032) (undo-tree-id14205 . -4032) (undo-tree-id14206 . -4032) (undo-tree-id14207 . -4032) (undo-tree-id14208 . -4032) (undo-tree-id14209 . -4032) (undo-tree-id14210 . -4032) (undo-tree-id14211 . -4032) (undo-tree-id14212 . -3037) (undo-tree-id14213 . -3037) (undo-tree-id14214 . -1211) (undo-tree-id14215 . -3037) (undo-tree-id14216 . -3037) (undo-tree-id14217 . -3037) (undo-tree-id14218 . -3037) (undo-tree-id14219 . -3037) (undo-tree-id14220 . -3037) (undo-tree-id14221 . -3037) (undo-tree-id14222 . -3037) (undo-tree-id14223 . -3037) (undo-tree-id14224 . -3037) (undo-tree-id14225 . -3037) (undo-tree-id14226 . -3037) (undo-tree-id14227 . -1673) (undo-tree-id14228 . -1673) (undo-tree-id14229 . -1673) (undo-tree-id14230 . -1673) (undo-tree-id14231 . -1673) (undo-tree-id14232 . -1673) (undo-tree-id14233 . -1673) (undo-tree-id14234 . -1673) (undo-tree-id14235 . -1673) (undo-tree-id14236 . -1673) (undo-tree-id14237 . -1673) (undo-tree-id14238 . -1673) (undo-tree-id14239 . -1673) (undo-tree-id14240 . -1673) (undo-tree-id14241 . -51) (undo-tree-id14242 . -51) (undo-tree-id14243 . -51) (undo-tree-id14244 . -51) (undo-tree-id14245 . -51) (undo-tree-id14246 . -51) (undo-tree-id14247 . -51) (undo-tree-id14248 . -3834) (undo-tree-id14249 . -4875) (undo-tree-id14250 . -4875) (undo-tree-id14251 . -885) (undo-tree-id14252 . -885) (undo-tree-id14253 . -885) (undo-tree-id14254 . -885) (undo-tree-id14255 . -885) (undo-tree-id14256 . -885) (undo-tree-id14257 . -885) (undo-tree-id14258 . -885) (undo-tree-id14259 . -2360) (undo-tree-id14260 . -2360) (undo-tree-id14261 . -2360) (undo-tree-id14262 . -2360) (undo-tree-id14263 . -2360) (undo-tree-id14264 . -2360) (undo-tree-id14265 . -2360) (undo-tree-id14266 . -2360) (undo-tree-id14267 . -3834) (undo-tree-id14268 . -3834) (undo-tree-id14269 . -3834) (undo-tree-id14270 . -3834) (undo-tree-id14271 . -3834) (undo-tree-id14272 . -3834) (undo-tree-id14273 . -3834) (undo-tree-id14274 . -3834) (undo-tree-id14275 . -3834) (undo-tree-id14276 . -3834) (undo-tree-id14277 . -4875) (undo-tree-id14278 . -4875) (undo-tree-id14279 . -4875) (undo-tree-id14280 . -4875) (undo-tree-id14281 . -4875) (undo-tree-id14282 . -4875) (undo-tree-id14283 . -4875) (undo-tree-id14284 . -4875) (undo-tree-id14285 . -4875) (undo-tree-id14286 . -3834) (undo-tree-id14287 . -4875) (undo-tree-id14288 . -4875) (undo-tree-id14289 . -3834) (undo-tree-id14290 . -4875) (undo-tree-id14291 . -4875) (undo-tree-id14292 . -4875) (undo-tree-id14293 . -4875) (undo-tree-id14294 . -4875) (undo-tree-id14295 . -4875) (undo-tree-id14296 . -4875) (undo-tree-id14297 . -4875) (undo-tree-id14298 . -4875) (undo-tree-id14299 . -3834) (undo-tree-id14300 . -4875) (undo-tree-id14301 . -4875) (undo-tree-id14302 . -4875) (undo-tree-id14303 . -3834) (undo-tree-id14304 . -4875) (undo-tree-id14305 . -4875) (undo-tree-id14306 . -4875) (undo-tree-id14307 . -4875) (undo-tree-id14308 . -4875) (undo-tree-id14309 . -4875) (undo-tree-id14310 . -4875) (undo-tree-id14311 . -4875) (undo-tree-id14312 . -4875) (undo-tree-id14313 . -4875) (undo-tree-id14314 . -4875) (undo-tree-id14315 . -4875) (undo-tree-id14316 . -4875) (undo-tree-id14317 . -4875) (undo-tree-id14318 . -4875) (undo-tree-id14319 . -4875) (undo-tree-id14320 . -4875) (undo-tree-id14321 . -4875) (undo-tree-id14322 . -4875) (undo-tree-id14323 . -4875) (undo-tree-id14324 . -4875) (undo-tree-id14325 . -4875) (undo-tree-id14326 . -3834) (undo-tree-id14327 . -4875) (undo-tree-id14328 . -4875) (undo-tree-id14329 . -4875) (undo-tree-id14330 . -4875) (undo-tree-id14331 . -4875) (undo-tree-id14332 . -4875) (undo-tree-id14333 . -4875) (undo-tree-id14334 . -3834) (undo-tree-id14335 . -4875) (undo-tree-id14336 . -4875) (undo-tree-id14337 . -4875) (undo-tree-id14338 . -4875) (undo-tree-id14339 . -4875) (undo-tree-id14340 . -4875) (undo-tree-id14341 . -4875) (undo-tree-id14342 . -3834) (undo-tree-id14343 . -4875) (undo-tree-id14344 . -4875) (undo-tree-id14345 . -4875) (undo-tree-id14346 . -4875) (undo-tree-id14347 . -4875) (undo-tree-id14348 . -4875) (undo-tree-id14349 . -4875) (undo-tree-id14350 . -3834) (undo-tree-id14351 . -4875) (undo-tree-id14352 . -4875) (undo-tree-id14353 . -4875) (undo-tree-id14354 . -4875) (undo-tree-id14355 . -4875) (undo-tree-id14356 . -4875) (undo-tree-id14357 . -4875) (undo-tree-id14358 . -3834) (undo-tree-id14359 . -4875) (undo-tree-id14360 . -4875) (undo-tree-id14361 . -4875) (undo-tree-id14362 . -4875) (undo-tree-id14363 . -4875) (undo-tree-id14364 . -4875) (undo-tree-id14365 . -4875) (undo-tree-id14366 . -3834) (undo-tree-id14367 . -4875) (undo-tree-id14368 . -4875) (undo-tree-id14369 . -4875) (undo-tree-id14370 . -4875) (undo-tree-id14371 . -4875) (undo-tree-id14372 . -4875) (undo-tree-id14373 . -4875) (undo-tree-id14374 . -3834) (undo-tree-id14375 . -4875) (undo-tree-id14376 . -4875) (undo-tree-id14377 . -4875) (undo-tree-id14378 . -4875) (undo-tree-id14379 . -4875) (undo-tree-id14380 . -4875) (undo-tree-id14381 . -4875) (undo-tree-id14382 . -3834) (undo-tree-id14383 . -4875) (undo-tree-id14384 . -4875) (undo-tree-id14385 . -3834) (undo-tree-id14386 . -4875) (undo-tree-id14387 . -4875) (undo-tree-id14388 . -3834) (undo-tree-id14389 . -4875) (undo-tree-id14390 . -4875) (undo-tree-id14391 . -3834) (undo-tree-id14392 . -4875) (undo-tree-id14393 . -4875) (undo-tree-id14394 . -4875) (undo-tree-id14395 . -4875) (undo-tree-id14396 . -4875) (undo-tree-id14397 . -4875) (undo-tree-id14398 . -4875) (undo-tree-id14399 . -3834) (undo-tree-id14400 . -4875) (undo-tree-id14401 . -4875) (undo-tree-id14402 . -4875) (undo-tree-id14403 . -4875) (undo-tree-id14404 . -4875) (undo-tree-id14405 . -4875) (undo-tree-id14406 . -4875) (undo-tree-id14407 . -3834) (undo-tree-id14408 . -4875) (undo-tree-id14409 . -4875) (undo-tree-id14410 . -4875) (undo-tree-id14411 . -4875) (undo-tree-id14412 . -4875) (undo-tree-id14413 . -4875) (undo-tree-id14414 . -4875) (undo-tree-id14415 . -3834) (undo-tree-id14416 . -4875) (undo-tree-id14417 . -4875) (undo-tree-id14418 . -4875) (undo-tree-id14419 . -4875) (undo-tree-id14420 . -4875) (undo-tree-id14421 . -4875) (undo-tree-id14422 . -4875) (undo-tree-id14423 . -3834) (undo-tree-id14424 . -4875) (undo-tree-id14425 . -4875) (undo-tree-id14426 . -4875) (undo-tree-id14427 . -4875) (undo-tree-id14428 . -4875) (undo-tree-id14429 . -4875) (undo-tree-id14430 . -4875) (undo-tree-id14431 . -3834) (undo-tree-id14432 . -4875) (undo-tree-id14433 . -4875) (undo-tree-id14434 . -4875) (undo-tree-id14435 . -4875) (undo-tree-id14436 . -4875) (undo-tree-id14437 . -4875) 72754) nil (25151 36982 7602 87000) 0 nil])
([nil nil ((67893 . 67896) (67878 . 67893) (t 25151 36982 105841 408000)) nil (25151 36993 9577 434000) 0 nil])
([nil nil ((67879 . 67887) (t 25151 36993 102636 398000)) nil (25151 37003 162845 891000) 0 nil])
([nil nil ((41614 . 46250) (#("
    ;; -- ADD/REMOVE THINGS IN THE ZETTELDESK --
    ;; To get a system where the user can get multiple filtered views of
    ;; the nodes/buffers of their choice, obviously you need functions
    ;; that allow the user to add them to something. And then, you also
    ;; need ways to remove things, because people make mistakes.

    (defcustom zetteldesk-info-nodes '()
      \"List of info nodes that are part of the zetteldesk.
    Initialised as an empty list\"
      :type 'list
      :group 'zetteldesk)

    (defun zetteldesk-add-to-desktop (BUFFER)
      \"Add BUFFER to the current `zetteldesk'.\"
      (interactive \"b\")
      (with-current-buffer BUFFER
	(setq-local zetteldesk \"foo\")))

    (defun zetteldesk-add-node-to-desktop (NODE)
      \"Add NODE to the `zetteldesk'.
    If there isn't a buffer associated to it, create it.  NODE is an
    org-roam node read through `org-roam-node-read'\"
      (interactive (list (org-roam-node-read)))
      (let ((buffer (org-roam-node-buffer NODE))
	     (file (org-roam-node-file NODE))
	     (org-startup-with-latex-preview nil))
	(if (not (eq buffer nil))
	    (with-current-buffer buffer
	      (setq-local zetteldesk \"foo\"))
	  (with-current-buffer (find-file-noselect file)
	    (setq-local zetteldesk \"foo\")))))

    (defun zetteldesk-add-poi-or-moc-backlink-to-desktop ()
      \"Prompts the user to select an org-roam node that has a specific tag.
    Looks for the POI or MOC tag (filtering done with
    `org-roam-node-poi-or-moc-p') and collects its ID and backlinks.
    Then, prompt the user to select one of its backlinks and add that
    to the zetteldesk.\"
      (interactive)
      (let* ((source (org-roam-node-read nil #'org-roam-node-poi-or-moc-p))
	     (source-id (org-roam-node-id source))
	     (backlinks (org-roam-backlink-query* source)))
	(zetteldesk-add-node-to-desktop
	 (org-roam-node-read nil (lambda (NODE)
				   (let* ((id (org-roam-node-id NODE))
					  (id-list (list id source-id)))
				     (member id-list backlinks)))))))

    (defun zetteldesk-add-backlinks-to-desktop ()
      \"Add the current buffer and all its backlinks to the `zetteldesk'.

    This function queries the database for all the nodes that link to
    the current node with the `org-roam-backlink-query' function and
    then recursively checks if there is an open buffer associated
    with them, and if so adds it to the `zetteldesk'\"
      (interactive)
      (setq-local zetteldesk \"foo\")
      (let ((backlinks (length (org-roam-backlink-query)))
	    (org-startup-with-latex-preview nil))
	(dotimes (number backlinks)
	  (let* ((id (car (nth number (org-roam-backlink-query))))
		  (node (org-roam-node-from-id id))
		  (buffer (org-roam-node-buffer node))
		  (file (org-roam-node-file node)))
	    (if (not (eq buffer nil))
		(with-current-buffer buffer
		  (setq-local zetteldesk \"foo\"))
	      (with-current-buffer (find-file-noselect file)
		(setq-local zetteldesk \"foo\")))))))

    (defun zetteldesk-add-info-node-to-desktop ()
      \"Find the current info-node.
    Then add its name to the list of the variable
    `zetteldesk-info-nodes'\"
      (interactive)
      (add-to-list 'zetteldesk-info-nodes (Info-copy-current-node-name)))

    (defun zetteldesk-remove-from-desktop (BUFFER)
      \"Remove BUFFER from the current `zetteldesk'.\"
      (interactive \"b\")
      (with-current-buffer BUFFER
	(kill-local-variable 'zetteldesk)))

    (defun zetteldesk-remove-node-from-desktop (NODE)
      \"Remove NODE from the `zetteldesk'.
    NODE is an org-roam node
    and is read through `org-roam-node-read'\"
      (interactive (list (org-roam-node-read nil #'zetteldesk-node-p)))
      (let ((buffer (org-roam-node-buffer NODE)))
	(with-current-buffer buffer
	  (kill-local-variable 'zetteldesk))))

    (defun zetteldesk-remove-backlinks-from-desktop ()
      \"Remove from the `zetteldesk', the current buffer and its backlinks.

    This function is essentially a carbon copy of
    `zetteldesk-add-backlinks-to-desktop' but instead of adding the
    buffer to the desktop it removes it.\"
      (interactive)
      (kill-local-variable 'zetteldesk)
      (let ((backlinks (length (org-roam-backlink-query))))
	(dotimes (number backlinks)
	  (let* ((id (car (nth number (org-roam-backlink-query))))
		  (node (org-roam-node-from-id id))
		  (buffer (org-roam-node-buffer node)))
	    (unless (eq buffer nil)
	      (with-current-buffer buffer
		(kill-local-variable 'zetteldesk)))))))

    (defun zetteldesk-remove-info-node-from-desktop ()
      \"Remove an info-node from the `zetteldesk'.
    The node is selected through a `completing-read' menu of
    `zetteldesk-info-nodes'\"
      (interactive)
      (setq zetteldesk-info-nodes (remove
				   (completing-read \"Info Nodes: \" zetteldesk-info-nodes)
				   zetteldesk-info-nodes)))

" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1 5 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5 8 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 8 50 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 50 54 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 54 57 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 57 123 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 123 127 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 127 130 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 130 194 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 194 198 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 198 201 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 201 266 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 266 270 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 270 273 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 273 331 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 331 337 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 337 346 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 346 347 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 347 368 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-variable-name-face org-block) help-echo nil src-block t) 368 379 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 379 465 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 465 472 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 472 477 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 477 490 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 490 496 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 496 516 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 516 521 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 521 522 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 522 547 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 547 550 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 550 557 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 557 563 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 563 591 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 591 601 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 601 604 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 604 612 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 612 623 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 623 624 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 624 627 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 627 636 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 636 655 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 655 665 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 665 675 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 675 687 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 687 692 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 692 702 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 702 707 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 707 708 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 708 738 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 738 752 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 752 770 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 770 780 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 780 884 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 884 902 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 902 904 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 904 912 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 912 923 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 923 960 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 960 963 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 963 1041 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1041 1085 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1085 1087 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1087 1089 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1089 1118 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1118 1137 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1137 1153 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1153 1163 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1163 1175 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1175 1180 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 1180 1187 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1187 1206 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1206 1239 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1239 1249 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1249 1261 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1261 1266 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 1266 1278 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1278 1283 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1283 1284 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1284 1329 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 1329 1339 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1339 1468 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1468 1494 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 1494 1497 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1497 1531 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo "Hidden behind deeper element; move to another line?" src-block t) 1531 1585 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1585 1602 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1602 1625 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1625 1633 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1633 1644 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1644 1653 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1653 1657 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1657 1879 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1879 1885 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1885 1901 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1901 1905 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1905 1936 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1936 1974 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1974 2022 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2022 2027 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2027 2028 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2028 2063 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 2063 2073 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2073 2127 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 2127 2137 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 2137 2242 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 2242 2265 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 2265 2387 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 2387 2397 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 2397 2399 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 2399 2407 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2407 2418 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2418 2427 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2427 2437 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2437 2449 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2449 2454 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 2454 2463 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2463 2466 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2466 2474 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2474 2515 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2515 2560 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2560 2567 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2567 2587 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2587 2591 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2591 2595 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2595 2647 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2647 2770 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2770 2772 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2772 2798 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2798 2817 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2817 2830 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2830 2840 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2840 2852 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2852 2857 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 2857 2868 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2868 2887 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2887 2917 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2917 2927 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2927 2939 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2939 2944 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 2944 2953 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2953 2958 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2958 2963 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2963 2964 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2964 2999 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 2999 3003 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3003 3009 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3009 3093 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 3093 3114 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 3114 3116 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 3116 3124 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3124 3135 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3135 3217 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3217 3222 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3222 3223 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3223 3253 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 3253 3269 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3269 3302 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 3302 3312 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 3312 3315 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 3315 3323 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3323 3334 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3334 3335 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3335 3338 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 3338 3347 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3347 3366 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3366 3417 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3417 3422 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3422 3423 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3423 3458 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 3458 3472 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3472 3495 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 3495 3503 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 3503 3505 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 3505 3508 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 3508 3562 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 3562 3580 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 3580 3582 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 3582 3590 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3590 3601 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3601 3662 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3662 3665 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3665 3707 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3707 3726 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3726 3780 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3780 3785 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3785 3786 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3786 3826 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 3826 3836 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3836 3854 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 3854 3864 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 3864 3906 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 3906 3956 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 3956 3961 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 3961 3996 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 3996 4065 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 4065 4073 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4073 4084 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 4084 4133 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4133 4136 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 4136 4188 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4188 4195 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 4195 4219 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4219 4223 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 4223 4361 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4361 4367 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 4367 4392 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4392 4411 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 4411 4456 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4456 4461 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4461 4467 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4467 4472 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 4472 4473 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4473 4513 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 4513 4523 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4523 4554 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 4554 4564 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 4564 4567 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 4567 4603 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 4603 4618 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 4618 4633 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 4633 4654 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 4654 4656 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 4656 4664 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4664 4675 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 4675 4684 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4684 4688 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 4688 4743 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4743 4757 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 4757 4814 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 41614) (undo-tree-id17094 . -662) (undo-tree-id17095 . -661) (undo-tree-id17096 . -661) (undo-tree-id17097 . -661) (undo-tree-id17098 . -661) 42275 (t 25151 37003 252754 819000)) nil (25151 37184 415193 599000) 0 nil])
([nil nil ((67727 . 76503) (#("
     ;; -- Reference Nodes from Bibtex Entries --
     (defun zetteldesk-note-refs-p ()
       \"Predicate function that finds all bibtex completion candidates with a note.

     Checks if every candidate has the \\\"=has-note=\\\" tag using
     `assoc' and if it does, collects that candidate\"
       (cl-loop for ref in (bibtex-completion-candidates)
		if (assoc \"=has-note=\" ref)
		collect ref))

     (defun zetteldesk-citekey-from-refs ()
       \"Function that finds the \\\"=key=\\\" tag from a list of candidates.

     The list is collected with `zetteldesk-note-refs-p' which is a
     list of candidates that have notes. Collects it using `assoc'.\"
       (cl-loop for ref in (zetteldesk-note-refs-p)
		collect (assoc \"=key=\" ref)))

     (defun zetteldesk-node-from-refs ()
       \"Function that collects a list of ref nodes.

     The nodes are collected from their citekey using
     `org-roam-node-from-ref', while the citekeys themselves are
     collected from `zetteldesk-citekey-from-refs'.\"
       (cl-loop for ref in (zetteldesk-citekey-from-refs)
		collect (org-roam-node-from-ref (concat \"cite:\" (cdr ref)))))

     (defun org-roam-node-read--completions* (node-list &optional filter-fn sort-fn)
       \"Runs `org-roam-node-read--completions' with NODE-LIST being a list of nodes.

     Typically, the function takes `org-roam-node-list' as the initial
     list of nodes and creates the alist `org-roam-node-read'
     uses. However, it can be helpful to supply the list of nodes
     yourself, when the predicate function used cannot be inferred
     through a filter function of the form this function
     takes. FILTER-FN and SORT-FN are the same as in
     `org-roam-node-read--completions'. The resulting alist is to be
     used with `org-roam-node-read*'.\"
       (let* ((template (org-roam-node--process-display-format org-roam-node-display-template))
	      (nodes node-list)
	      (nodes (mapcar (lambda (node)
			       (org-roam-node-read--to-candidate node template)) nodes))
	      (nodes (if filter-fn
			 (cl-remove-if-not
			  (lambda (n) (funcall filter-fn (cdr n)))
			  nodes)
		       nodes))
	      (sort-fn (or sort-fn
			   (when org-roam-node-default-sort
			     (intern (concat \"org-roam-node-read-sort-by-\"
					     (symbol-name org-roam-node-default-sort))))))
	      (nodes (if sort-fn (seq-sort sort-fn nodes)
		       nodes)))
	 nodes))

     (defun org-roam-node-read* (node-list &optional initial-input filter-fn sort-fn require-match prompt)
       \"Runs `org-roam-node-read' with the nodes supplied by NODE-LIST.

     NODE-LIST is a list of nodes passed to
     `org-roam-node-read--completions*', which creates an alist of
     nodes with the proper formatting to be used in this
     function. This is for those cases where it is helpful to use your
     own list of nodes, because a predicate function can not filter
     them in the way you want easily.\"
       (let* ((nodes (org-roam-node-read--completions* node-list filter-fn sort-fn))
	      (prompt (or prompt \"Node: \"))
	      (node (completing-read
		     prompt
		     (lambda (string pred action)
		       (if (eq action 'metadata)
			   `(metadata
			     ;; Preserve sorting in the completion UI if a sort-fn is used
			     ,@(when sort-fn
				 '((display-sort-function . identity)
				   (cycle-sort-function . identity)))
			     (annotation-function
			      . ,(lambda (title)
				   (funcall org-roam-node-annotation-function
					    (get-text-property 0 'node title))))
			     (category . org-roam-node))
			 (complete-with-action action nodes string pred)))
		     nil require-match initial-input 'org-roam-node-history)))
	 (or (cdr (assoc node nodes))
	     (org-roam-node-create :title node))))

     (defun zetteldesk-find-ref-node ()
       \"Execute a filtered version of `ivy-bibtex-with-notes'.

     This does not exactly run `ivy-bibtex-with-notes' as that doesn't
     have a way to filter things. It collects a list of nodes which
     are reference nodes linked to a bibtex entry through
     `zetteldesk-node-from-refs' and passes it to
     `org-roam-node-read*' which is a modified version of
     `org-roam-node-read' which takes a list of nodes as an
     argument. Since this required a rewrite of `org-roam-node-read',
     finding the file is done indirectly and not through
     `org-roam-node-file'.\"
       (interactive)
       (find-file (org-roam-node-file (org-roam-node-read* (zetteldesk-node-from-refs) nil #'zetteldesk-node-p))))

     (defun zetteldesk-insert-ref-node-contents (&optional arg)
       \"Select a node that is part of the current `zetteldesk' and a ref node.
     Ref nodes are nodes that refer to reference material such as an
     article. These are gathered with `zetteldesk-node-from-refs' and
     shown to the user through `org-roam-node-read*' filtered
     according to `zetteldesk-node-p'.

     After selection, insert its citekey at point for future
     reference, then in the location determined by
     `zetteldesk-insert-location' (typically *zetteldesk-scratch*), go
     to `point-max', insert a newline and then insert the contents of
     the selected node but remove the first 4 lines which is the
     unneeded property drawer. After, indent all headings by one level
     and replace the #+title: with an asterisk. Finally, enter a
     newline after the title, where the string \\\"Bibtex entry for
     node: \\\" is entered suffixed by the citekey of the entry.

     If given the optional argument ARG, which needs to be the
     `\\\\[universal-argument]' also switch to the *zetteldesk-scratch*
     buffer in a split.\"
       (interactive \"P\")
       (let* ((node
	       (org-roam-node-read* (zetteldesk-node-from-refs) nil #'zetteldesk-node-p))
	      (file (org-roam-node-file node))
	      (location (zetteldesk-insert-location))
	      (citekey (concat \"cite:\" (car (org-roam-node-refs node)))))
	 (insert citekey)
	 (set-buffer location)
	 (goto-char (point-max))
	 (save-excursion
	   (insert-file-contents file))
	 (kill-whole-line 4)
	 (newline)
	 (save-excursion
	   (while (not (org-next-visible-heading 1))
	     (org-metaright)))
	 (replace-string \"#+title: \" \"* \")
	 (end-of-line 1)
	 (newline)
	 (insert \"Bibtex entry for node: \"
		 citekey))
       (zetteldesk-insert-switch-to-scratch arg))

     ;; -- Info Nodes --
     (defun zetteldesk-insert-info-contents (&optional arg)
       \"Select an info node that is part of the current `zetteldesk'.
     Uses a `completing-read' prompt for the selection.

     Then, in the *zetteldesk-scratch* buffer, go to the end of the
     buffer, insert a newline and a heading of the form \\\"Supportive
     Material - \\\" the node's name \\\"(Info)\\\" akin to what is done in
     `zetteldesk-insert-link-to-pdf'.  Then, insert the contents of the
     chosen info node, removing the first 2 lines which have the
     contextual links of the buffer, as they are not functional
     outside of the info buffer.  Also insert a link with the title
     \\\"See this node in its context\\\" which opens the node inside the
     info program. Finally, restore the buffer from which this
     function was called. Ideally, this wouldn't require a
     switch-to-buffer statement, but the function `Info-goto-node'
     used for this function switches the visible buffer to the info
     node and I couldn't find an alternative that only makes it
     current for editing operations, but doesn't change the visible
     buffer to it.

     I find the link to the actual info buffer is useful as a lot of
     the time, you might want to insert the buffer so you can store it
     with other useful information inside the zetteldesk-scratch
     buffer, but then, you are interested in looking into the other
     nodes of the manual you were reading.

     Optional argument ARG which is a `\\\\[universal-argument]' switch to the
     zetteldesk-scratch buffer in a split.\"
       (interactive \"P\")
       (let ((info_node (completing-read \"Nodes: \" zetteldesk-info-nodes))
	     (location (zetteldesk-insert-location))
	     (buffer (current-buffer)))
	 (Info-goto-node info_node)
	 (with-current-buffer location
	   (goto-char (point-max))
	   (newline)
	   (org-insert-heading)
	   (insert \"Supportive Material - \" info_node \" (Info)\")
	   (newline)
	   (save-excursion (insert-buffer-substring \"*info*\")
			   (insert
			    (org-link-make-string
			     (concat \"elisp:(Info-goto-node \\\"\" info_node \"\\\")\")
			     \"See this node in its context\")))
	   (kill-whole-line 2))
	 (switch-to-buffer buffer)
	 (zetteldesk-insert-switch-to-scratch arg)))
" 0 6 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6 9 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 9 51 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 51 57 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 57 62 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 62 63 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 63 85 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 85 96 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 96 215 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 215 216 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 216 224 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 224 225 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 225 244 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 244 249 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 249 291 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 291 300 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 300 307 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 307 362 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 362 363 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 363 364 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 364 372 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 372 373 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 373 374 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 374 403 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 403 408 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 408 409 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 409 437 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 437 448 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 448 453 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 453 454 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 454 455 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 455 456 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 456 457 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 457 458 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 458 459 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 459 460 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 460 461 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 461 462 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 462 463 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 463 464 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 464 465 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 465 466 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 466 467 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 467 468 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 468 469 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 469 470 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 470 471 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 471 472 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 472 473 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 473 474 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 474 475 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 475 476 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 476 477 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 477 478 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 478 479 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 479 480 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 480 500 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 500 548 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 548 570 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 570 643 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 643 648 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 648 651 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 651 660 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 660 667 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 667 721 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 721 722 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 722 723 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 723 726 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 726 727 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 727 728 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 728 743 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 743 748 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 748 749 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 749 774 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 774 785 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 785 891 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 891 913 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 913 971 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 971 999 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 999 1002 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1002 1011 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1011 1018 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1018 1103 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1103 1110 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1110 1132 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1132 1137 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1137 1138 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1138 1170 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 1170 1182 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1182 1191 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 1191 1218 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1218 1225 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1225 1256 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1256 1333 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1333 1351 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1351 1410 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1410 1428 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1428 1679 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1679 1710 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1710 1758 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1758 1777 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1777 1780 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1780 1789 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1789 1793 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1793 1925 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1925 1931 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1931 1999 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1999 2006 (fontified t font-lock-fontified t help-echo "Hidden behind deeper element; move to another line?" src-block t font-lock-multiline t face (font-lock-warning-face org-block)) 2006 2022 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2022 2024 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2024 2063 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2063 2069 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2069 2149 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2149 2151 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2151 2167 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2167 2171 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2171 2223 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2223 2252 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2252 2324 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2324 2326 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2326 2395 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2395 2400 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2400 2401 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2401 2420 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 2420 2432 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2432 2441 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 2441 2503 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2503 2510 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2510 2528 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2528 2619 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2619 2651 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2651 2914 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2914 2923 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2923 2927 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2927 3016 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3016 3018 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3018 3026 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3026 3034 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 3034 3089 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3089 3095 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3095 3127 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3127 3129 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3129 3177 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3177 3180 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3180 3239 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3239 3250 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3250 3254 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3254 3389 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3389 3395 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3395 3658 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3658 3660 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3660 3714 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3714 3720 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 3720 3737 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3737 3742 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3742 3743 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3743 3767 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 3767 3778 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3778 3810 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3810 3831 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3831 3867 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3867 3888 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3888 4038 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4038 4063 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4063 4088 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4088 4107 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4107 4146 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4146 4164 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4164 4249 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4249 4267 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4267 4333 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4333 4351 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4351 4354 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4354 4363 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4363 4374 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4374 4498 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4498 4503 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4503 4504 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4504 4539 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 4539 4541 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4541 4550 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 4550 4563 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4563 4607 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4607 4617 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4617 4743 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4743 4768 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4768 4806 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4806 4825 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4825 4855 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4855 4872 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4872 4994 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4994 5020 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 5020 5033 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5033 5034 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5034 5052 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5052 5053 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5053 5068 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5068 5077 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 5077 5532 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5532 5550 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 5550 5572 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5572 5573 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5573 5591 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5591 5592 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5592 5617 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5617 5626 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5626 5637 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5637 5638 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5638 5641 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5641 5651 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5651 5655 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5655 5804 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5804 5830 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5830 5857 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5857 5864 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5864 5972 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5972 5986 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5986 6057 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6057 6071 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6071 6077 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6077 6082 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6082 6160 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6160 6171 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6171 6172 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6172 6176 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6176 6218 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6218 6243 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6243 6265 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6265 6300 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6300 6313 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6313 6316 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 6316 6333 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 6333 6339 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6339 6344 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6344 6345 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6345 6376 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 6376 6378 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6378 6387 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 6387 6400 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6400 6450 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6450 6460 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 6460 6476 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6476 6491 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 6491 6538 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6538 6539 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 6539 6557 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 6557 6558 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 6558 6733 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6733 6762 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 6762 7239 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7239 7253 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 7253 7834 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7834 7852 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 7852 7912 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7912 7921 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7921 7932 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 7932 7933 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7933 7936 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 7936 7946 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7946 7949 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 7949 7979 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7979 7988 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 7988 8030 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8030 8056 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8056 8124 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8124 8143 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8143 8232 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8232 8256 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8256 8267 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8267 8276 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8276 8297 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8297 8311 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8311 8337 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8337 8338 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8338 8339 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 8339 8343 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 8343 8344 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 8344 8345 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8345 8406 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8406 8432 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8432 8443 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8443 8448 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8448 8458 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8458 8488 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8488 8548 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8548 8583 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8583 8591 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 67727) (undo-tree-id17087 . -8544) (undo-tree-id17088 . -7869) (undo-tree-id17089 . -8543) (undo-tree-id17090 . -8543) (undo-tree-id17091 . -8543) (undo-tree-id17092 . -8543) (undo-tree-id17093 . -7869) 76270) nil (25151 37184 415181 237000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 41945) (undo-tree-id17083 . -1) (undo-tree-id17084 . -1) (undo-tree-id17085 . -1) (undo-tree-id17086 . -1)) nil (25151 37184 415163 637000) 0 nil])
([nil nil ((41614 . 45991) (#("
    ;; -- ADD/REMOVE THINGS IN THE ZETTELDESK --
    ;; To get a system where the user can get multiple filtered views of
    ;; the nodes/buffers of their choice, obviously you need functions
    ;; that allow the user to add them to something. And then, you also
    ;; need ways to remove things, because people make mistakes.

    (defun zetteldesk-add-to-desktop (BUFFER)
      \"Add BUFFER to the current `zetteldesk'.\"
      (interactive \"b\")
      (with-current-buffer BUFFER
	(setq-local zetteldesk \"foo\")))

    (defun zetteldesk-add-node-to-desktop (NODE)
      \"Add NODE to the `zetteldesk'.
    If there isn't a buffer associated to it, create it.  NODE is an
    org-roam node read through `org-roam-node-read'\"
      (interactive (list (org-roam-node-read)))
      (let ((buffer (org-roam-node-buffer NODE))
	     (file (org-roam-node-file NODE))
	     (org-startup-with-latex-preview nil))
	(if (not (eq buffer nil))
	    (with-current-buffer buffer
	      (setq-local zetteldesk \"foo\"))
	  (with-current-buffer (find-file-noselect file)
	    (setq-local zetteldesk \"foo\")))))

    (defun zetteldesk-add-poi-or-moc-backlink-to-desktop ()
      \"Prompts the user to select an org-roam node that has a specific tag.
    Looks for the POI or MOC tag (filtering done with
    `org-roam-node-poi-or-moc-p') and collects its ID and backlinks.
    Then, prompt the user to select one of its backlinks and add that
    to the zetteldesk.\"
      (interactive)
      (let* ((source (org-roam-node-read nil #'org-roam-node-poi-or-moc-p))
	     (source-id (org-roam-node-id source))
	     (backlinks (org-roam-backlink-query* source)))
	(zetteldesk-add-node-to-desktop
	 (org-roam-node-read nil (lambda (NODE)
				   (let* ((id (org-roam-node-id NODE))
					  (id-list (list id source-id)))
				     (member id-list backlinks)))))))

    (defun zetteldesk-add-backlinks-to-desktop ()
      \"Add the current buffer and all its backlinks to the `zetteldesk'.

    This function queries the database for all the nodes that link to
    the current node with the `org-roam-backlink-query' function and
    then recursively checks if there is an open buffer associated
    with them, and if so adds it to the `zetteldesk'\"
      (interactive)
      (setq-local zetteldesk \"foo\")
      (let ((backlinks (length (org-roam-backlink-query)))
	    (org-startup-with-latex-preview nil))
	(dotimes (number backlinks)
	  (let* ((id (car (nth number (org-roam-backlink-query))))
		  (node (org-roam-node-from-id id))
		  (buffer (org-roam-node-buffer node))
		  (file (org-roam-node-file node)))
	    (if (not (eq buffer nil))
		(with-current-buffer buffer
		  (setq-local zetteldesk \"foo\"))
	      (with-current-buffer (find-file-noselect file)
		(setq-local zetteldesk \"foo\")))))))

    (defun zetteldesk-add-info-node-to-desktop ()
      \"Find the current info-node.
    Then add its name to the list of the variable
    `zetteldesk-info-nodes'\"
      (interactive)
      (add-to-list 'zetteldesk-info-nodes (Info-copy-current-node-name)))

    (defun zetteldesk-remove-from-desktop (BUFFER)
      \"Remove BUFFER from the current `zetteldesk'.\"
      (interactive \"b\")
      (with-current-buffer BUFFER
	(kill-local-variable 'zetteldesk)))

    (defun zetteldesk-remove-node-from-desktop (NODE)
      \"Remove NODE from the `zetteldesk'.
    NODE is an org-roam node
    and is read through `org-roam-node-read'\"
      (interactive (list (org-roam-node-read nil #'zetteldesk-node-p)))
      (let ((buffer (org-roam-node-buffer NODE)))
	(with-current-buffer buffer
	  (kill-local-variable 'zetteldesk))))

    (defun zetteldesk-remove-backlinks-from-desktop ()
      \"Remove from the `zetteldesk', the current buffer and its backlinks.

    This function is essentially a carbon copy of
    `zetteldesk-add-backlinks-to-desktop' but instead of adding the
    buffer to the desktop it removes it.\"
      (interactive)
      (kill-local-variable 'zetteldesk)
      (let ((backlinks (length (org-roam-backlink-query))))
	(dotimes (number backlinks)
	  (let* ((id (car (nth number (org-roam-backlink-query))))
		  (node (org-roam-node-from-id id))
		  (buffer (org-roam-node-buffer node)))
	    (unless (eq buffer nil)
	      (with-current-buffer buffer
		(kill-local-variable 'zetteldesk)))))))

    (defun zetteldesk-remove-info-node-from-desktop ()
      \"Remove an info-node from the `zetteldesk'.
    The node is selected through a `completing-read' menu of
    `zetteldesk-info-nodes'\"
      (interactive)
      (setq zetteldesk-info-nodes (remove
				   (completing-read \"Info Nodes: \" zetteldesk-info-nodes)
				   zetteldesk-info-nodes)))

" 0 5 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5 8 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 8 50 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 50 54 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 54 57 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 57 123 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 123 127 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 127 130 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 130 194 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 194 198 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 198 201 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 201 266 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 266 270 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 270 273 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 273 331 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 331 337 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 337 342 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 342 343 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 343 368 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 368 384 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 384 412 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 412 422 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 422 425 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 425 433 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 433 444 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 444 445 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 445 448 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 448 457 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 457 458 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 458 476 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 476 486 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 486 496 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 496 508 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 508 513 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 513 523 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 523 528 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 528 529 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 529 559 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 559 573 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 573 591 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 591 601 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 601 705 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 705 723 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 723 725 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 725 733 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 733 744 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 744 781 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 781 784 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 784 908 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 908 910 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 910 939 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 939 958 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 958 974 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 974 984 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 984 996 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 996 1001 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1001 1008 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1008 1027 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1027 1060 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1060 1070 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1070 1082 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1082 1087 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1087 1099 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1099 1104 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1104 1105 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1105 1150 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 1150 1160 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1160 1289 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1289 1315 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1315 1318 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1318 1352 (fontified t font-lock-fontified t help-echo "Hidden behind deeper element; move to another line?" src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1352 1446 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1446 1454 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1454 1465 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1465 1474 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1474 1478 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1478 1700 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1700 1706 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1706 1722 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1722 1726 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1726 1843 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1843 1848 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1848 1849 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1849 1884 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 1884 1894 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1894 1948 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1948 1958 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1958 2063 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2063 2086 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2086 2208 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2208 2218 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2218 2220 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2220 2228 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2228 2239 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2239 2248 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2248 2258 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2258 2270 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2270 2275 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2275 2284 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2284 2287 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2287 2381 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2381 2388 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2388 2412 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2412 2416 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2416 2591 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2591 2593 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2593 2619 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2619 2638 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2638 2651 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2651 2661 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2661 2673 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2673 2678 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2678 2689 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2689 2708 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2708 2738 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2738 2748 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2748 2760 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2760 2765 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2765 2779 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2779 2784 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2784 2785 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2785 2820 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 2820 2830 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2830 2914 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2914 2935 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2935 2937 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2937 2945 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2945 2956 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2956 3038 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3038 3043 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3043 3044 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3044 3074 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 3074 3090 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3090 3123 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3123 3133 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3133 3136 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3136 3144 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3144 3155 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3155 3156 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3156 3159 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 3159 3168 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3168 3187 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3187 3238 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3238 3243 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3243 3244 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3244 3279 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 3279 3293 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3293 3316 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3316 3326 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3326 3383 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3383 3401 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3401 3403 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3403 3411 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3411 3422 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3422 3483 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3483 3486 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3486 3528 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3528 3547 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3547 3601 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3601 3606 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3606 3607 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3607 3647 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 3647 3657 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3657 3675 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3675 3685 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3685 3782 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3782 3817 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3817 3886 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3886 3894 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3894 3905 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3905 3954 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3954 3957 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3957 4009 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4009 4016 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4016 4040 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4040 4044 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4044 4182 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4182 4188 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4188 4213 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4213 4232 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4232 4288 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4288 4293 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4293 4294 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4294 4334 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 4334 4344 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4344 4375 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4375 4385 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4385 4424 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4424 4439 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4439 4454 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4454 4475 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4475 4477 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4477 4485 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4485 4496 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4496 4505 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4505 4509 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4509 4564 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4564 4578 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 4578 4635 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 41614) (undo-tree-id17072 . -331) (undo-tree-id17073 . -331) (undo-tree-id17074 . -331) (undo-tree-id17075 . -331) (undo-tree-id17076 . -331) (undo-tree-id17077 . -2336) (undo-tree-id17078 . -2336) (undo-tree-id17079 . -2336) (undo-tree-id17080 . -2336) (undo-tree-id17081 . -2336) (undo-tree-id17082 . -2336) 43950) nil (25151 37184 415153 160000) 0 nil])
([nil nil ((67468 . 76508) (#("
     ;; -- Reference Nodes from Bibtex Entries --
     (defun zetteldesk-note-refs-p ()
       \"Predicate function that finds all bibtex completion candidates with a note.

     Checks if every candidate has the \\\"=has-note=\\\" tag using
     `assoc' and if it does, collects that candidate\"
       (cl-loop for ref in (bibtex-completion-candidates)
		if (assoc \"=has-note=\" ref)
		collect ref))

     (defun zetteldesk-citekey-from-refs ()
       \"Function that finds the \\\"=key=\\\" tag from a list of candidates.

     The list is collected with `zetteldesk-note-refs-p' which is a
     list of candidates that have notes. Collects it using `assoc'.\"
       (cl-loop for ref in (zetteldesk-note-refs-p)
		collect (assoc \"=key=\" ref)))

     (defun zetteldesk-node-from-refs ()
       \"Function that collects a list of ref nodes.

     The nodes are collected from their citekey using
     `org-roam-node-from-ref', while the citekeys themselves are
     collected from `zetteldesk-citekey-from-refs'.\"
       (cl-loop for ref in (zetteldesk-citekey-from-refs)
		collect (org-roam-node-from-ref (concat \"cite:\" (cdr ref)))))

     (defun org-roam-node-read--completions* (node-list &optional filter-fn sort-fn)
       \"Runs `org-roam-node-read--completions' with NODE-LIST being a list of nodes.

     Typically, the function takes `org-roam-node-list' as the initial
     list of nodes and creates the alist `org-roam-node-read'
     uses. However, it can be helpful to supply the list of nodes
     yourself, when the predicate function used cannot be inferred
     through a filter function of the form this function
     takes. FILTER-FN and SORT-FN are the same as in
     `org-roam-node-read--completions'. The resulting alist is to be
     used with `org-roam-node-read*'.\"
       (let* ((template (org-roam-node--process-display-format org-roam-node-display-template))
	      (nodes node-list)
	      (nodes (mapcar (lambda (node)
			       (org-roam-node-read--to-candidate node template)) nodes))
	      (nodes (if filter-fn
			 (cl-remove-if-not
			  (lambda (n) (funcall filter-fn (cdr n)))
			  nodes)
		       nodes))
	      (sort-fn (or sort-fn
			   (when org-roam-node-default-sort
			     (intern (concat \"org-roam-node-read-sort-by-\"
					     (symbol-name org-roam-node-default-sort))))))
	      (nodes (if sort-fn (seq-sort sort-fn nodes)
		       nodes)))
	 nodes))

     (defun org-roam-node-read* (node-list &optional initial-input filter-fn sort-fn require-match prompt)
       \"Runs `org-roam-node-read' with the nodes supplied by NODE-LIST.

     NODE-LIST is a list of nodes passed to
     `org-roam-node-read--completions*', which creates an alist of
     nodes with the proper formatting to be used in this
     function. This is for those cases where it is helpful to use your
     own list of nodes, because a predicate function can not filter
     them in the way you want easily.\"
       (let* ((nodes (org-roam-node-read--completions* node-list filter-fn sort-fn))
	      (prompt (or prompt \"Node: \"))
	      (node (completing-read
		     prompt
		     (lambda (string pred action)
		       (if (eq action 'metadata)
			   `(metadata
			     ;; Preserve sorting in the completion UI if a sort-fn is used
			     ,@(when sort-fn
				 '((display-sort-function . identity)
				   (cycle-sort-function . identity)))
			     (annotation-function
			      . ,(lambda (title)
				   (funcall org-roam-node-annotation-function
					    (get-text-property 0 'node title))))
			     (category . org-roam-node))
			 (complete-with-action action nodes string pred)))
		     nil require-match initial-input 'org-roam-node-history)))
	 (or (cdr (assoc node nodes))
	     (org-roam-node-create :title node))))

     (defun zetteldesk-find-ref-node ()
       \"Execute a filtered version of `ivy-bibtex-with-notes'.

     This does not exactly run `ivy-bibtex-with-notes' as that doesn't
     have a way to filter things. It collects a list of nodes which
     are reference nodes linked to a bibtex entry through
     `zetteldesk-node-from-refs' and passes it to
     `org-roam-node-read*' which is a modified version of
     `org-roam-node-read' which takes a list of nodes as an
     argument. Since this required a rewrite of `org-roam-node-read',
     finding the file is done indirectly and not through
     `org-roam-node-file'.\"
       (interactive)
       (find-file (org-roam-node-file (org-roam-node-read* (zetteldesk-node-from-refs) nil #'zetteldesk-node-p))))

     (defun zetteldesk-insert-ref-node-contents (&optional arg)
       \"Select a node that is part of the current `zetteldesk' and a ref node.
     Ref nodes are nodes that refer to reference material such as an
     article. These are gathered with `zetteldesk-node-from-refs' and
     shown to the user through `org-roam-node-read*' filtered
     according to `zetteldesk-node-p'.

     After selection, insert its citekey at point for future
     reference, then in the location determined by
     `zetteldesk-insert-location' (typically *zetteldesk-scratch*), go
     to `point-max', insert a newline and then insert the contents of
     the selected node but remove the first 4 lines which is the
     unneeded property drawer. After, indent all headings by one level
     and replace the #+title: with an asterisk. Finally, enter a
     newline after the title, where the string \\\"Bibtex entry for
     node: \\\" is entered suffixed by the citekey of the entry.

     If given the optional argument ARG, which needs to be the
     `\\\\[universal-argument]' also switch to the *zetteldesk-scratch*
     buffer in a split.\"
       (interactive \"P\")
       (let* ((node
	       (org-roam-node-read* (zetteldesk-node-from-refs) nil #'zetteldesk-node-p))
	      (file (org-roam-node-file node))
	      (location (zetteldesk-insert-location))
	      (citekey (concat \"cite:\" (car (org-roam-node-refs node)))))
	 (insert citekey)
	 (set-buffer location)
	 (goto-char (point-max))
	 (save-excursion
	   (insert-file-contents file))
	 (kill-whole-line 4)
	 (newline)
	 (save-excursion
	   (while (not (org-next-visible-heading 1))
	     (org-metaright)))
	 (replace-string \"#+title: \" \"* \")
	 (end-of-line 1)
	 (newline)
	 (insert \"Bibtex entry for node: \"
		 citekey))
       (zetteldesk-insert-switch-to-scratch arg))

     ;; -- Info Nodes --
     (defcustom zetteldesk-info-nodes '()
       \"List of info nodes that are part of the zetteldesk.
     Initialised as an empty list\"
       :type 'list
       :group 'zetteldesk)


     (defun zetteldesk-insert-info-contents (&optional arg)
       \"Select an info node that is part of the current `zetteldesk'.
     Uses a `completing-read' prompt for the selection.

     Then, in the *zetteldesk-scratch* buffer, go to the end of the
     buffer, insert a newline and a heading of the form \\\"Supportive
     Material - \\\" the node's name \\\"(Info)\\\" akin to what is done in
     `zetteldesk-insert-link-to-pdf'.  Then, insert the contents of the
     chosen info node, removing the first 2 lines which have the
     contextual links of the buffer, as they are not functional
     outside of the info buffer.  Also insert a link with the title
     \\\"See this node in its context\\\" which opens the node inside the
     info program. Finally, restore the buffer from which this
     function was called. Ideally, this wouldn't require a
     switch-to-buffer statement, but the function `Info-goto-node'
     used for this function switches the visible buffer to the info
     node and I couldn't find an alternative that only makes it
     current for editing operations, but doesn't change the visible
     buffer to it.

     I find the link to the actual info buffer is useful as a lot of
     the time, you might want to insert the buffer so you can store it
     with other useful information inside the zetteldesk-scratch
     buffer, but then, you are interested in looking into the other
     nodes of the manual you were reading.

     Optional argument ARG which is a `\\\\[universal-argument]' switch to the
     zetteldesk-scratch buffer in a split.\"
       (interactive \"P\")
       (let ((info_node (completing-read \"Nodes: \" zetteldesk-info-nodes))
	     (location (zetteldesk-insert-location))
	     (buffer (current-buffer)))
	 (Info-goto-node info_node)
	 (with-current-buffer location
	   (goto-char (point-max))
	   (newline)
	   (org-insert-heading)
	   (insert \"Supportive Material - \" info_node \" (Info)\")
	   (newline)
	   (save-excursion (insert-buffer-substring \"*info*\")
			   (insert
			    (org-link-make-string
			     (concat \"elisp:(Info-goto-node \\\"\" info_node \"\\\")\")
			     \"See this node in its context\")))
	   (kill-whole-line 2))
	 (switch-to-buffer buffer)
	 (zetteldesk-insert-switch-to-scratch arg)))
" 0 6 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6 9 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 9 51 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 51 57 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 57 62 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 62 63 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 63 85 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 85 96 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 96 215 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 215 216 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 216 224 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 224 225 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 225 244 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 244 249 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 249 291 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 291 300 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 300 307 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 307 362 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 362 363 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 363 364 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 364 372 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 372 373 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 373 374 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 374 403 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 403 408 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 408 409 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 409 437 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 437 448 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 448 475 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 475 476 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 476 479 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 479 480 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 480 500 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 500 548 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 548 570 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 570 643 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 643 648 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 648 651 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 651 660 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 660 667 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 667 721 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 721 722 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 722 723 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 723 726 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 726 727 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 727 728 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 728 743 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 743 748 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 748 749 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 749 774 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 774 785 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 785 891 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 891 913 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 913 971 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 971 999 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 999 1002 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1002 1011 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1011 1018 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1018 1103 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1103 1110 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1110 1132 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1132 1137 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1137 1138 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1138 1170 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 1170 1182 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1182 1191 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 1191 1218 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1218 1225 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1225 1256 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1256 1333 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1333 1351 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1351 1410 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1410 1428 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1428 1679 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1679 1710 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1710 1758 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1758 1777 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1777 1780 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1780 1789 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1789 1793 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1793 1925 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1925 1931 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1931 1999 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1999 2006 (fontified t font-lock-fontified t help-echo "Hidden behind deeper element; move to another line?" src-block t font-lock-multiline t face (font-lock-warning-face org-block)) 2006 2022 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2022 2024 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2024 2063 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2063 2069 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2069 2149 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2149 2151 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2151 2167 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2167 2171 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2171 2223 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2223 2252 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2252 2324 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2324 2326 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2326 2395 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2395 2400 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2400 2401 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2401 2420 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 2420 2432 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2432 2441 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 2441 2503 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2503 2510 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2510 2528 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2528 2619 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2619 2651 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2651 2914 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2914 2923 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2923 2927 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2927 3016 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3016 3018 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3018 3026 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3026 3034 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 3034 3089 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3089 3095 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3095 3127 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3127 3129 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3129 3177 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3177 3180 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3180 3239 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3239 3250 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3250 3254 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3254 3389 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3389 3395 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3395 3658 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3658 3660 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3660 3714 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3714 3720 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 3720 3737 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3737 3742 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3742 3743 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3743 3767 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 3767 3778 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3778 3810 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3810 3831 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3831 3867 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3867 3888 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3888 4038 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4038 4063 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4063 4088 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4088 4107 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4107 4146 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4146 4164 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4164 4249 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4249 4267 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4267 4333 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4333 4351 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4351 4354 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4354 4363 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4363 4374 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4374 4498 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4498 4503 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4503 4504 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4504 4539 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 4539 4541 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4541 4550 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 4550 4563 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4563 4607 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4607 4617 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4617 4743 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4743 4768 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4768 4806 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4806 4825 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4825 4855 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4855 4872 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4872 4994 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4994 5020 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 5020 5033 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5033 5034 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5034 5052 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5052 5053 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5053 5068 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5068 5077 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 5077 5532 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5532 5550 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 5550 5572 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5572 5573 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5573 5591 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5591 5592 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5592 5617 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5617 5626 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5626 5637 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5637 5638 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5638 5641 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5641 5651 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5651 5655 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5655 5804 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5804 5830 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5830 5857 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5857 5864 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5864 5972 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5972 5986 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5986 6057 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6057 6071 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6071 6077 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6077 6082 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6082 6160 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6160 6171 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6171 6172 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6172 6176 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6176 6218 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6218 6243 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6243 6265 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6265 6300 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6300 6313 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6313 6316 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 6316 6333 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 6333 6339 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6339 6348 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6348 6349 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6349 6370 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 6370 6382 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6382 6469 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6469 6477 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6477 6482 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 6482 6496 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6496 6502 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 6502 6524 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6524 6529 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6529 6530 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6530 6561 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 6561 6563 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6563 6572 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 6572 6585 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6585 6635 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6635 6645 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 6645 6661 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6661 6676 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 6676 6723 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6723 6724 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 6724 6742 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 6742 6743 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 6743 6918 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6918 6947 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 6947 7424 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7424 7438 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 7438 8019 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 8019 8037 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 8037 8097 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 8097 8106 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8106 8117 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8117 8118 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8118 8121 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8121 8131 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8131 8134 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8134 8164 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8164 8173 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8173 8215 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8215 8241 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8241 8309 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8309 8328 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8328 8417 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8417 8441 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8441 8452 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8452 8461 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8461 8482 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8482 8496 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8496 8522 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8522 8523 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8523 8524 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 8524 8528 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 8528 8529 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 8529 8530 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8530 8591 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8591 8617 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8617 8628 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8628 8633 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8633 8643 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8643 8673 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8673 8733 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8733 8768 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8768 8776 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 67468) (undo-tree-id17064 . -8729) (undo-tree-id17065 . -6516) (undo-tree-id17066 . -8277) (undo-tree-id17067 . -8728) (undo-tree-id17068 . -8728) (undo-tree-id17069 . -8728) (undo-tree-id17070 . -8728) (undo-tree-id17071 . -8277) 76196) nil (25151 37184 415130 252000) 0 nil])
([nil nil ((41614 . 45639) (#("
    ;; -- ADD/REMOVE THINGS IN THE ZETTELDESK --
    ;; To get a system where the user can get multiple filtered views of
    ;; the nodes/buffers of their choice, obviously you need functions
    ;; that allow the user to add them to something. And then, you also
    ;; need ways to remove things, because people make mistakes.

    (defun zetteldesk-add-to-desktop (BUFFER)
      \"Add BUFFER to the current `zetteldesk'.\"
      (interactive \"b\")
      (with-current-buffer BUFFER
	(setq-local zetteldesk \"foo\")))

    (defun zetteldesk-add-node-to-desktop (NODE)
      \"Add NODE to the `zetteldesk'.
    If there isn't a buffer associated to it, create it.  NODE is an
    org-roam node read through `org-roam-node-read'\"
      (interactive (list (org-roam-node-read)))
      (let ((buffer (org-roam-node-buffer NODE))
	     (file (org-roam-node-file NODE))
	     (org-startup-with-latex-preview nil))
	(if (not (eq buffer nil))
	    (with-current-buffer buffer
	      (setq-local zetteldesk \"foo\"))
	  (with-current-buffer (find-file-noselect file)
	    (setq-local zetteldesk \"foo\")))))

    (defun zetteldesk-add-poi-or-moc-backlink-to-desktop ()
      \"Prompts the user to select an org-roam node that has a specific tag.
    Looks for the POI or MOC tag (filtering done with
    `org-roam-node-poi-or-moc-p') and collects its ID and backlinks.
    Then, prompt the user to select one of its backlinks and add that
    to the zetteldesk.\"
      (interactive)
      (let* ((source (org-roam-node-read nil #'org-roam-node-poi-or-moc-p))
	     (source-id (org-roam-node-id source))
	     (backlinks (org-roam-backlink-query* source)))
	(zetteldesk-add-node-to-desktop
	 (org-roam-node-read nil (lambda (NODE)
				   (let* ((id (org-roam-node-id NODE))
					  (id-list (list id source-id)))
				     (member id-list backlinks)))))))

    (defun zetteldesk-add-backlinks-to-desktop ()
      \"Add the current buffer and all its backlinks to the `zetteldesk'.

    This function queries the database for all the nodes that link to
    the current node with the `org-roam-backlink-query' function and
    then recursively checks if there is an open buffer associated
    with them, and if so adds it to the `zetteldesk'\"
      (interactive)
      (setq-local zetteldesk \"foo\")
      (let ((backlinks (length (org-roam-backlink-query)))
	    (org-startup-with-latex-preview nil))
	(dotimes (number backlinks)
	  (let* ((id (car (nth number (org-roam-backlink-query))))
		  (node (org-roam-node-from-id id))
		  (buffer (org-roam-node-buffer node))
		  (file (org-roam-node-file node)))
	    (if (not (eq buffer nil))
		(with-current-buffer buffer
		  (setq-local zetteldesk \"foo\"))
	      (with-current-buffer (find-file-noselect file)
		(setq-local zetteldesk \"foo\")))))))


    (defun zetteldesk-remove-from-desktop (BUFFER)
      \"Remove BUFFER from the current `zetteldesk'.\"
      (interactive \"b\")
      (with-current-buffer BUFFER
	(kill-local-variable 'zetteldesk)))

    (defun zetteldesk-remove-node-from-desktop (NODE)
      \"Remove NODE from the `zetteldesk'.
    NODE is an org-roam node
    and is read through `org-roam-node-read'\"
      (interactive (list (org-roam-node-read nil #'zetteldesk-node-p)))
      (let ((buffer (org-roam-node-buffer NODE)))
	(with-current-buffer buffer
	  (kill-local-variable 'zetteldesk))))

    (defun zetteldesk-remove-backlinks-from-desktop ()
      \"Remove from the `zetteldesk', the current buffer and its backlinks.

    This function is essentially a carbon copy of
    `zetteldesk-add-backlinks-to-desktop' but instead of adding the
    buffer to the desktop it removes it.\"
      (interactive)
      (kill-local-variable 'zetteldesk)
      (let ((backlinks (length (org-roam-backlink-query))))
	(dotimes (number backlinks)
	  (let* ((id (car (nth number (org-roam-backlink-query))))
		  (node (org-roam-node-from-id id))
		  (buffer (org-roam-node-buffer node)))
	    (unless (eq buffer nil)
	      (with-current-buffer buffer
		(kill-local-variable 'zetteldesk)))))))

    (defun zetteldesk-remove-info-node-from-desktop ()
      \"Remove an info-node from the `zetteldesk'.
    The node is selected through a `completing-read' menu of
    `zetteldesk-info-nodes'\"
      (interactive)
      (setq zetteldesk-info-nodes (remove
				   (completing-read \"Info Nodes: \" zetteldesk-info-nodes)
				   zetteldesk-info-nodes)))

" 0 5 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5 8 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 8 50 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 50 54 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 54 57 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 57 123 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 123 127 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 127 130 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 130 194 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 194 198 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 198 201 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 201 266 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 266 270 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 270 273 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 273 331 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 331 337 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 337 342 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 342 343 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 343 368 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 368 384 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 384 412 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 412 422 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 422 425 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 425 433 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 433 444 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 444 445 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 445 448 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 448 457 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 457 476 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 476 486 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 486 496 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 496 500 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 500 508 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 508 513 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 513 523 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 523 528 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 528 529 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 529 559 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 559 573 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 573 591 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 591 601 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 601 705 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 705 723 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 723 725 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 725 733 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 733 744 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 744 781 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 781 784 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 784 908 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 908 910 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 910 939 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 939 958 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 958 974 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 974 984 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 984 996 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 996 1001 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1001 1008 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1008 1027 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1027 1060 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1060 1070 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1070 1082 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1082 1087 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1087 1099 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1099 1104 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1104 1105 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1105 1150 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 1150 1160 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1160 1289 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1289 1315 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1315 1318 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1318 1352 (fontified t font-lock-fontified t help-echo "Hidden behind deeper element; move to another line?" src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1352 1446 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1446 1454 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1454 1465 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1465 1474 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1474 1478 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1478 1700 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1700 1706 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1706 1722 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1722 1726 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1726 1843 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1843 1848 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1848 1849 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1849 1884 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 1884 1894 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1894 1948 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1948 1958 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1958 2063 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2063 2086 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2086 2208 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2208 2218 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2218 2220 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2220 2228 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2228 2239 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2239 2248 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2248 2258 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2258 2270 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2270 2275 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2275 2284 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2284 2287 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2287 2381 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2381 2388 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2388 2412 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2412 2416 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2416 2591 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2591 2593 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2593 2619 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2619 2638 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2638 2651 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2651 2661 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2661 2673 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2673 2678 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2678 2689 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2689 2708 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2708 2738 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2738 2748 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2748 2760 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2760 2765 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2765 2780 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2780 2785 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2785 2786 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2786 2816 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 2816 2832 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2832 2865 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2865 2875 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2875 2878 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2878 2886 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2886 2897 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2897 2898 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2898 2901 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2901 2910 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2910 2929 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2929 2980 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2980 2985 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2985 2986 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2986 3021 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 3021 3035 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3035 3058 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3058 3068 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3068 3125 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3125 3143 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3143 3145 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3145 3153 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3153 3164 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3164 3225 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3225 3228 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3228 3270 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3270 3289 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3289 3343 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3343 3348 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3348 3349 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3349 3389 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 3389 3399 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3399 3417 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3417 3427 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3427 3524 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3524 3559 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3559 3628 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3628 3636 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3636 3647 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3647 3696 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3696 3699 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3699 3751 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3751 3758 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3758 3782 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3782 3786 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3786 3924 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3924 3930 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3930 3955 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3955 3974 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3974 4030 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4030 4035 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4035 4036 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4036 4076 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 4076 4086 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4086 4117 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4117 4127 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4127 4166 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4166 4181 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4181 4196 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4196 4217 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4217 4219 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4219 4227 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4227 4238 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4238 4247 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4247 4251 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4251 4306 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4306 4320 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 4320 4377 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 41614) (undo-tree-id17055 . -2774) (undo-tree-id17056 . -2774) (undo-tree-id17057 . -2774) (undo-tree-id17058 . -2336) (undo-tree-id17059 . -3587) (undo-tree-id17060 . -3587) (undo-tree-id17061 . -3587) (undo-tree-id17062 . -3587) (undo-tree-id17063 . -2336) 45201) nil (25151 37184 415108 182000) 0 nil])
([nil nil ((67116 . 76516) (#("
     ;; -- Reference Nodes from Bibtex Entries --
     (defun zetteldesk-note-refs-p ()
       \"Predicate function that finds all bibtex completion candidates with a note.

     Checks if every candidate has the \\\"=has-note=\\\" tag using
     `assoc' and if it does, collects that candidate\"
       (cl-loop for ref in (bibtex-completion-candidates)
		if (assoc \"=has-note=\" ref)
		collect ref))

     (defun zetteldesk-citekey-from-refs ()
       \"Function that finds the \\\"=key=\\\" tag from a list of candidates.

     The list is collected with `zetteldesk-note-refs-p' which is a
     list of candidates that have notes. Collects it using `assoc'.\"
       (cl-loop for ref in (zetteldesk-note-refs-p)
		collect (assoc \"=key=\" ref)))

     (defun zetteldesk-node-from-refs ()
       \"Function that collects a list of ref nodes.

     The nodes are collected from their citekey using
     `org-roam-node-from-ref', while the citekeys themselves are
     collected from `zetteldesk-citekey-from-refs'.\"
       (cl-loop for ref in (zetteldesk-citekey-from-refs)
		collect (org-roam-node-from-ref (concat \"cite:\" (cdr ref)))))

     (defun org-roam-node-read--completions* (node-list &optional filter-fn sort-fn)
       \"Runs `org-roam-node-read--completions' with NODE-LIST being a list of nodes.

     Typically, the function takes `org-roam-node-list' as the initial
     list of nodes and creates the alist `org-roam-node-read'
     uses. However, it can be helpful to supply the list of nodes
     yourself, when the predicate function used cannot be inferred
     through a filter function of the form this function
     takes. FILTER-FN and SORT-FN are the same as in
     `org-roam-node-read--completions'. The resulting alist is to be
     used with `org-roam-node-read*'.\"
       (let* ((template (org-roam-node--process-display-format org-roam-node-display-template))
	      (nodes node-list)
	      (nodes (mapcar (lambda (node)
			       (org-roam-node-read--to-candidate node template)) nodes))
	      (nodes (if filter-fn
			 (cl-remove-if-not
			  (lambda (n) (funcall filter-fn (cdr n)))
			  nodes)
		       nodes))
	      (sort-fn (or sort-fn
			   (when org-roam-node-default-sort
			     (intern (concat \"org-roam-node-read-sort-by-\"
					     (symbol-name org-roam-node-default-sort))))))
	      (nodes (if sort-fn (seq-sort sort-fn nodes)
		       nodes)))
	 nodes))

     (defun org-roam-node-read* (node-list &optional initial-input filter-fn sort-fn require-match prompt)
       \"Runs `org-roam-node-read' with the nodes supplied by NODE-LIST.

     NODE-LIST is a list of nodes passed to
     `org-roam-node-read--completions*', which creates an alist of
     nodes with the proper formatting to be used in this
     function. This is for those cases where it is helpful to use your
     own list of nodes, because a predicate function can not filter
     them in the way you want easily.\"
       (let* ((nodes (org-roam-node-read--completions* node-list filter-fn sort-fn))
	      (prompt (or prompt \"Node: \"))
	      (node (completing-read
		     prompt
		     (lambda (string pred action)
		       (if (eq action 'metadata)
			   `(metadata
			     ;; Preserve sorting in the completion UI if a sort-fn is used
			     ,@(when sort-fn
				 '((display-sort-function . identity)
				   (cycle-sort-function . identity)))
			     (annotation-function
			      . ,(lambda (title)
				   (funcall org-roam-node-annotation-function
					    (get-text-property 0 'node title))))
			     (category . org-roam-node))
			 (complete-with-action action nodes string pred)))
		     nil require-match initial-input 'org-roam-node-history)))
	 (or (cdr (assoc node nodes))
	     (org-roam-node-create :title node))))

     (defun zetteldesk-find-ref-node ()
       \"Execute a filtered version of `ivy-bibtex-with-notes'.

     This does not exactly run `ivy-bibtex-with-notes' as that doesn't
     have a way to filter things. It collects a list of nodes which
     are reference nodes linked to a bibtex entry through
     `zetteldesk-node-from-refs' and passes it to
     `org-roam-node-read*' which is a modified version of
     `org-roam-node-read' which takes a list of nodes as an
     argument. Since this required a rewrite of `org-roam-node-read',
     finding the file is done indirectly and not through
     `org-roam-node-file'.\"
       (interactive)
       (find-file (org-roam-node-file (org-roam-node-read* (zetteldesk-node-from-refs) nil #'zetteldesk-node-p))))

     (defun zetteldesk-insert-ref-node-contents (&optional arg)
       \"Select a node that is part of the current `zetteldesk' and a ref node.
     Ref nodes are nodes that refer to reference material such as an
     article. These are gathered with `zetteldesk-node-from-refs' and
     shown to the user through `org-roam-node-read*' filtered
     according to `zetteldesk-node-p'.

     After selection, insert its citekey at point for future
     reference, then in the location determined by
     `zetteldesk-insert-location' (typically *zetteldesk-scratch*), go
     to `point-max', insert a newline and then insert the contents of
     the selected node but remove the first 4 lines which is the
     unneeded property drawer. After, indent all headings by one level
     and replace the #+title: with an asterisk. Finally, enter a
     newline after the title, where the string \\\"Bibtex entry for
     node: \\\" is entered suffixed by the citekey of the entry.

     If given the optional argument ARG, which needs to be the
     `\\\\[universal-argument]' also switch to the *zetteldesk-scratch*
     buffer in a split.\"
       (interactive \"P\")
       (let* ((node
	       (org-roam-node-read* (zetteldesk-node-from-refs) nil #'zetteldesk-node-p))
	      (file (org-roam-node-file node))
	      (location (zetteldesk-insert-location))
	      (citekey (concat \"cite:\" (car (org-roam-node-refs node)))))
	 (insert citekey)
	 (set-buffer location)
	 (goto-char (point-max))
	 (save-excursion
	   (insert-file-contents file))
	 (kill-whole-line 4)
	 (newline)
	 (save-excursion
	   (while (not (org-next-visible-heading 1))
	     (org-metaright)))
	 (replace-string \"#+title: \" \"* \")
	 (end-of-line 1)
	 (newline)
	 (insert \"Bibtex entry for node: \"
		 citekey))
       (zetteldesk-insert-switch-to-scratch arg))

     ;; -- Info Nodes --
     (defcustom zetteldesk-info-nodes '()
       \"List of info nodes that are part of the zetteldesk.
     Initialised as an empty list\"
       :type 'list
       :group 'zetteldesk)

     (defun zetteldesk-add-info-node-to-desktop ()
       \"Find the current info-node.
     Then add its name to the list of the variable
     `zetteldesk-info-nodes'\"
       (interactive)
       (add-to-list 'zetteldesk-info-nodes (Info-copy-current-node-name)))

     (defun zetteldesk-insert-info-contents (&optional arg)
       \"Select an info node that is part of the current `zetteldesk'.
     Uses a `completing-read' prompt for the selection.

     Then, in the *zetteldesk-scratch* buffer, go to the end of the
     buffer, insert a newline and a heading of the form \\\"Supportive
     Material - \\\" the node's name \\\"(Info)\\\" akin to what is done in
     `zetteldesk-insert-link-to-pdf'.  Then, insert the contents of the
     chosen info node, removing the first 2 lines which have the
     contextual links of the buffer, as they are not functional
     outside of the info buffer.  Also insert a link with the title
     \\\"See this node in its context\\\" which opens the node inside the
     info program. Finally, restore the buffer from which this
     function was called. Ideally, this wouldn't require a
     switch-to-buffer statement, but the function `Info-goto-node'
     used for this function switches the visible buffer to the info
     node and I couldn't find an alternative that only makes it
     current for editing operations, but doesn't change the visible
     buffer to it.

     I find the link to the actual info buffer is useful as a lot of
     the time, you might want to insert the buffer so you can store it
     with other useful information inside the zetteldesk-scratch
     buffer, but then, you are interested in looking into the other
     nodes of the manual you were reading.

     Optional argument ARG which is a `\\\\[universal-argument]' switch to the
     zetteldesk-scratch buffer in a split.\"
       (interactive \"P\")
       (let ((info_node (completing-read \"Nodes: \" zetteldesk-info-nodes))
	     (location (zetteldesk-insert-location))
	     (buffer (current-buffer)))
	 (Info-goto-node info_node)
	 (with-current-buffer location
	   (goto-char (point-max))
	   (newline)
	   (org-insert-heading)
	   (insert \"Supportive Material - \" info_node \" (Info)\")
	   (newline)
	   (save-excursion (insert-buffer-substring \"*info*\")
			   (insert
			    (org-link-make-string
			     (concat \"elisp:(Info-goto-node \\\"\" info_node \"\\\")\")
			     \"See this node in its context\")))
	   (kill-whole-line 2))
	 (switch-to-buffer buffer)
	 (zetteldesk-insert-switch-to-scratch arg)))
" 0 6 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6 9 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 9 51 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 51 57 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 57 62 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 62 63 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 63 85 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 85 96 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 96 215 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 215 216 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 216 224 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 224 225 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 225 244 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 244 249 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 249 291 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 291 300 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 300 307 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 307 362 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 362 363 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 363 364 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 364 372 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 372 373 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 373 374 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 374 403 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 403 408 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 408 409 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 409 437 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 437 448 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 448 475 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 475 476 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 476 479 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 479 480 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 480 500 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 500 548 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 548 570 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 570 643 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 643 648 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 648 651 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 651 660 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 660 667 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 667 721 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 721 722 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 722 723 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 723 726 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 726 727 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 727 728 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 728 743 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 743 748 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 748 749 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 749 774 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 774 785 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 785 891 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 891 913 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 913 971 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 971 999 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 999 1002 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1002 1011 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1011 1018 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1018 1103 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1103 1110 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1110 1132 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1132 1137 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1137 1138 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1138 1170 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 1170 1182 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1182 1191 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 1191 1218 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1218 1225 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1225 1256 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1256 1333 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1333 1351 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1351 1410 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1410 1428 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1428 1679 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1679 1710 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1710 1758 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1758 1777 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1777 1780 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1780 1789 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1789 1793 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1793 1925 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1925 1931 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1931 1999 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1999 2006 (fontified t font-lock-fontified t help-echo "Hidden behind deeper element; move to another line?" src-block t font-lock-multiline t face (font-lock-warning-face org-block)) 2006 2022 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2022 2024 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2024 2063 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2063 2069 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2069 2149 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2149 2151 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2151 2167 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2167 2171 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2171 2223 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2223 2252 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2252 2324 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2324 2326 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2326 2395 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2395 2400 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2400 2401 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2401 2420 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 2420 2432 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2432 2441 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 2441 2503 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2503 2510 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2510 2528 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2528 2619 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2619 2651 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2651 2914 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2914 2923 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2923 2927 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2927 3016 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3016 3018 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3018 3026 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3026 3034 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 3034 3089 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3089 3095 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3095 3127 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3127 3129 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3129 3177 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3177 3180 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3180 3239 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3239 3250 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3250 3254 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3254 3389 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3389 3395 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3395 3658 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3658 3660 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3660 3714 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3714 3720 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 3720 3737 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3737 3742 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3742 3743 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3743 3767 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 3767 3778 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3778 3810 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3810 3831 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3831 3867 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3867 3888 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3888 4038 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4038 4063 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4063 4088 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4088 4107 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4107 4146 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4146 4164 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4164 4249 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4249 4267 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4267 4333 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4333 4351 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4351 4354 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4354 4363 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4363 4374 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4374 4498 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4498 4503 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4503 4504 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4504 4539 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 4539 4541 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4541 4550 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 4550 4563 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4563 4607 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4607 4617 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4617 4743 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4743 4768 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4768 4806 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4806 4825 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4825 4855 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4855 4872 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4872 4994 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4994 5020 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 5020 5033 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5033 5034 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5034 5052 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5052 5053 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5053 5068 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5068 5077 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 5077 5532 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5532 5550 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 5550 5572 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5572 5573 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5573 5591 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5591 5592 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5592 5617 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5617 5626 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5626 5637 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5637 5638 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5638 5641 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5641 5651 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5651 5655 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5655 5804 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5804 5830 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5830 5857 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5857 5864 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5864 5972 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5972 5986 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5986 6057 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6057 6071 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6071 6077 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6077 6082 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6082 6160 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6160 6171 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6171 6172 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6172 6176 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6176 6218 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6218 6243 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6243 6265 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6265 6300 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6300 6313 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6313 6316 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 6316 6333 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 6333 6339 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6339 6348 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6348 6349 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6349 6370 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 6370 6382 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6382 6469 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6469 6477 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6477 6482 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 6482 6496 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6496 6502 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 6502 6523 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6523 6528 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6528 6529 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6529 6564 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 6564 6575 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6575 6661 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6661 6682 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 6682 6684 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6684 6693 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6693 6704 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6704 6788 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6788 6793 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6793 6794 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6794 6825 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 6825 6827 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6827 6836 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 6836 6849 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6849 6899 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6899 6909 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 6909 6925 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6925 6940 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 6940 6987 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6987 6988 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 6988 7006 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 7006 7007 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 7007 7182 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7182 7211 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 7211 7688 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7688 7702 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 7702 8283 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 8283 8301 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 8301 8361 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 8361 8370 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8370 8381 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8381 8382 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8382 8385 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8385 8395 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8395 8398 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8398 8428 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8428 8437 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8437 8479 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8479 8505 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8505 8573 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8573 8592 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8592 8681 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8681 8705 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8705 8716 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8716 8725 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8725 8746 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8746 8760 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8760 8786 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8786 8787 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8787 8788 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 8788 8792 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 8792 8793 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 8793 8794 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8794 8855 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8855 8881 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8881 8892 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8892 8897 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8897 8907 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8907 8937 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8937 8997 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8997 9032 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 9032 9040 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 67116) (undo-tree-id17047 . -9039) (undo-tree-id17048 . -6781) (undo-tree-id17049 . -7836) (undo-tree-id17050 . -9038) (undo-tree-id17051 . -9038) (undo-tree-id17052 . -9038) (undo-tree-id17053 . -9038) (undo-tree-id17054 . -7836) 76154) nil (25151 37184 413951 243000) 0 nil])
([nil nil ((46140 . 48200) (#("
     ;; -- FILTER FUNCTIONS --
     ;; This section is about defining all the functions that show you the
     ;; filtered results of all your nodes/buffers

     (defun zetteldesk-switch-to-buffer ()
       \"Execute a filtered `switch-to-buffer'.
     The filter is done using `zetteldesk-buffer-p' to show only
     buffers that are part of the current `zetteldesk' and not
     `org-roam-node's.\"
       (interactive)
       (switch-to-buffer (read-buffer \"Zetteldesk Buffers: \" nil nil #'zetteldesk-buffer-p)))

     (defun zetteldesk-node-find ()
       \"Execute a filtered `org-roam-node-find'.
     The filter is done using `zetteldesk-node-p' to show only nodes that are
     part of the current `zetteldesk'\"
       (interactive)
       (org-roam-node-find nil nil #'zetteldesk-node-p))

     (defun zetteldesk-node-insert ()
       \"Execute a filtered `org-roam-node-insert'.
     The filter is done using `zetteldesk-node-p' to show only nodes that are
     part of the current `zetteldesk'\"
       (interactive)
       (org-roam-node-insert #'zetteldesk-node-p))

     (defun zetteldesk-node-insert-sort-backlinks ()
       \"Select a node that is part of the zetteldesk.
     The function used is `org-roam-node-read' in a UI sorted by the
       number of backlinks.  Insert a link in the current buffer to
       the selected node.

     This function essentially has the core functionality of
     `org-roam-node-insert', but it uses `org-roam-node-read' instead
     as only that can take a sort-function.  Some files may be
     important to their topic, but not MOCs or POIs, so this function
     acts essentially as a complimentary function to
     `zetteldesk-node-insert-if-poi-or-moc' to check if that one
     missed something you want to include.\"
       (interactive)
       (let* ((node (org-roam-node-read nil #'zetteldesk-node-p #'org-roam-node-sort-by-backlinks))
	      (id (org-roam-node-id node))
	      (description (org-roam-node-formatted node)))
	 (insert (org-link-make-string
		  (concat \"id:\" id)
		  description))))

     (defun zetteldesk-info-goto-node ()
       \"Zetteldesk filter function for `Info-goto-node'.

     Prompts the user to select a node from the list
     `zetteldesk-info-nodes' and jumps to that node\"
       (interactive)
       (Info-goto-node (completing-read \"Nodes: \" zetteldesk-info-nodes)))

" 0 6 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6 9 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 9 32 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 32 37 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 37 40 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 40 107 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 107 112 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 112 115 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 115 158 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 158 165 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 165 170 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 170 171 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 171 198 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 198 209 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 209 230 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 230 246 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 246 280 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 280 299 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 299 357 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 357 367 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 367 377 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 377 383 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 383 396 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 396 400 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 400 409 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 409 420 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 420 460 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 460 482 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 482 517 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 517 523 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 523 528 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 528 529 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 529 549 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 549 553 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 553 560 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 560 581 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 581 599 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 599 633 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 633 650 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 650 706 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 706 716 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 716 718 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 718 727 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 727 738 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 738 804 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 804 809 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 809 810 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 810 832 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 832 843 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 843 864 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 864 884 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 884 918 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 918 935 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 935 965 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 965 991 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 991 1001 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1001 1003 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1003 1004 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1004 1012 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1012 1023 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1023 1083 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1083 1088 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1088 1089 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1089 1126 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 1126 1130 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1130 1137 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1137 1184 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1184 1211 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1211 1229 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1229 1348 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1348 1415 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1415 1435 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1435 1451 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1451 1469 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1469 1671 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1671 1707 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1707 1773 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1773 1782 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1782 1793 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1793 1803 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1803 1807 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1807 1848 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1848 1895 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1895 2028 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2028 2033 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2033 2038 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2038 2065 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2065 2070 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2070 2071 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2071 2096 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 2096 2107 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2107 2140 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2140 2154 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2154 2217 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2217 2238 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2238 2263 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2263 2272 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2272 2283 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2283 2325 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2325 2334 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2334 2361 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 46140) (undo-tree-id17038 . -2210) (undo-tree-id17039 . -602) (undo-tree-id17040 . -602) (undo-tree-id17041 . -1321) (undo-tree-id17042 . -2209) (undo-tree-id17043 . -2209) (undo-tree-id17044 . -2209) (undo-tree-id17045 . -2209) (undo-tree-id17046 . -1321) 48349) nil (25151 37184 410854 85000) 0 nil])
([nil nil ((66815 . 76518) (#("
     ;; -- Reference Nodes from Bibtex Entries --
     (defun zetteldesk-note-refs-p ()
       \"Predicate function that finds all bibtex completion candidates with a note.

     Checks if every candidate has the \\\"=has-note=\\\" tag using
     `assoc' and if it does, collects that candidate\"
       (cl-loop for ref in (bibtex-completion-candidates)
		if (assoc \"=has-note=\" ref)
		collect ref))

     (defun zetteldesk-citekey-from-refs ()
       \"Function that finds the \\\"=key=\\\" tag from a list of candidates.

     The list is collected with `zetteldesk-note-refs-p' which is a
     list of candidates that have notes. Collects it using `assoc'.\"
       (cl-loop for ref in (zetteldesk-note-refs-p)
		collect (assoc \"=key=\" ref)))

     (defun zetteldesk-node-from-refs ()
       \"Function that collects a list of ref nodes.

     The nodes are collected from their citekey using
     `org-roam-node-from-ref', while the citekeys themselves are
     collected from `zetteldesk-citekey-from-refs'.\"
       (cl-loop for ref in (zetteldesk-citekey-from-refs)
		collect (org-roam-node-from-ref (concat \"cite:\" (cdr ref)))))

     (defun org-roam-node-read--completions* (node-list &optional filter-fn sort-fn)
       \"Runs `org-roam-node-read--completions' with NODE-LIST being a list of nodes.

     Typically, the function takes `org-roam-node-list' as the initial
     list of nodes and creates the alist `org-roam-node-read'
     uses. However, it can be helpful to supply the list of nodes
     yourself, when the predicate function used cannot be inferred
     through a filter function of the form this function
     takes. FILTER-FN and SORT-FN are the same as in
     `org-roam-node-read--completions'. The resulting alist is to be
     used with `org-roam-node-read*'.\"
       (let* ((template (org-roam-node--process-display-format org-roam-node-display-template))
	      (nodes node-list)
	      (nodes (mapcar (lambda (node)
			       (org-roam-node-read--to-candidate node template)) nodes))
	      (nodes (if filter-fn
			 (cl-remove-if-not
			  (lambda (n) (funcall filter-fn (cdr n)))
			  nodes)
		       nodes))
	      (sort-fn (or sort-fn
			   (when org-roam-node-default-sort
			     (intern (concat \"org-roam-node-read-sort-by-\"
					     (symbol-name org-roam-node-default-sort))))))
	      (nodes (if sort-fn (seq-sort sort-fn nodes)
		       nodes)))
	 nodes))

     (defun org-roam-node-read* (node-list &optional initial-input filter-fn sort-fn require-match prompt)
       \"Runs `org-roam-node-read' with the nodes supplied by NODE-LIST.

     NODE-LIST is a list of nodes passed to
     `org-roam-node-read--completions*', which creates an alist of
     nodes with the proper formatting to be used in this
     function. This is for those cases where it is helpful to use your
     own list of nodes, because a predicate function can not filter
     them in the way you want easily.\"
       (let* ((nodes (org-roam-node-read--completions* node-list filter-fn sort-fn))
	      (prompt (or prompt \"Node: \"))
	      (node (completing-read
		     prompt
		     (lambda (string pred action)
		       (if (eq action 'metadata)
			   `(metadata
			     ;; Preserve sorting in the completion UI if a sort-fn is used
			     ,@(when sort-fn
				 '((display-sort-function . identity)
				   (cycle-sort-function . identity)))
			     (annotation-function
			      . ,(lambda (title)
				   (funcall org-roam-node-annotation-function
					    (get-text-property 0 'node title))))
			     (category . org-roam-node))
			 (complete-with-action action nodes string pred)))
		     nil require-match initial-input 'org-roam-node-history)))
	 (or (cdr (assoc node nodes))
	     (org-roam-node-create :title node))))

     (defun zetteldesk-find-ref-node ()
       \"Execute a filtered version of `ivy-bibtex-with-notes'.

     This does not exactly run `ivy-bibtex-with-notes' as that doesn't
     have a way to filter things. It collects a list of nodes which
     are reference nodes linked to a bibtex entry through
     `zetteldesk-node-from-refs' and passes it to
     `org-roam-node-read*' which is a modified version of
     `org-roam-node-read' which takes a list of nodes as an
     argument. Since this required a rewrite of `org-roam-node-read',
     finding the file is done indirectly and not through
     `org-roam-node-file'.\"
       (interactive)
       (find-file (org-roam-node-file (org-roam-node-read* (zetteldesk-node-from-refs) nil #'zetteldesk-node-p))))

     (defun zetteldesk-insert-ref-node-contents (&optional arg)
       \"Select a node that is part of the current `zetteldesk' and a ref node.
     Ref nodes are nodes that refer to reference material such as an
     article. These are gathered with `zetteldesk-node-from-refs' and
     shown to the user through `org-roam-node-read*' filtered
     according to `zetteldesk-node-p'.

     After selection, insert its citekey at point for future
     reference, then in the location determined by
     `zetteldesk-insert-location' (typically *zetteldesk-scratch*), go
     to `point-max', insert a newline and then insert the contents of
     the selected node but remove the first 4 lines which is the
     unneeded property drawer. After, indent all headings by one level
     and replace the #+title: with an asterisk. Finally, enter a
     newline after the title, where the string \\\"Bibtex entry for
     node: \\\" is entered suffixed by the citekey of the entry.

     If given the optional argument ARG, which needs to be the
     `\\\\[universal-argument]' also switch to the *zetteldesk-scratch*
     buffer in a split.\"
       (interactive \"P\")
       (let* ((node
	       (org-roam-node-read* (zetteldesk-node-from-refs) nil #'zetteldesk-node-p))
	      (file (org-roam-node-file node))
	      (location (zetteldesk-insert-location))
	      (citekey (concat \"cite:\" (car (org-roam-node-refs node)))))
	 (insert citekey)
	 (set-buffer location)
	 (goto-char (point-max))
	 (save-excursion
	   (insert-file-contents file))
	 (kill-whole-line 4)
	 (newline)
	 (save-excursion
	   (while (not (org-next-visible-heading 1))
	     (org-metaright)))
	 (replace-string \"#+title: \" \"* \")
	 (end-of-line 1)
	 (newline)
	 (insert \"Bibtex entry for node: \"
		 citekey))
       (zetteldesk-insert-switch-to-scratch arg))

     ;; -- Info Nodes --
     (defcustom zetteldesk-info-nodes '()
       \"List of info nodes that are part of the zetteldesk.
     Initialised as an empty list\"
       :type 'list
       :group 'zetteldesk)

     (defun zetteldesk-add-info-node-to-desktop ()
       \"Find the current info-node.
     Then add its name to the list of the variable
     `zetteldesk-info-nodes'\"
       (interactive)
       (add-to-list 'zetteldesk-info-nodes (Info-copy-current-node-name)))

     (defun zetteldesk-remove-info-node-from-desktop ()
       \"Remove an info-node from the `zetteldesk'.
     The node is selected through a `completing-read' menu of
     `zetteldesk-info-nodes'\"
       (interactive)
       (setq zetteldesk-info-nodes (remove
				    (completing-read \"Info Nodes: \" zetteldesk-info-nodes)
				    zetteldesk-info-nodes)))

     (defun zetteldesk-insert-info-contents (&optional arg)
       \"Select an info node that is part of the current `zetteldesk'.
     Uses a `completing-read' prompt for the selection.

     Then, in the *zetteldesk-scratch* buffer, go to the end of the
     buffer, insert a newline and a heading of the form \\\"Supportive
     Material - \\\" the node's name \\\"(Info)\\\" akin to what is done in
     `zetteldesk-insert-link-to-pdf'.  Then, insert the contents of the
     chosen info node, removing the first 2 lines which have the
     contextual links of the buffer, as they are not functional
     outside of the info buffer.  Also insert a link with the title
     \\\"See this node in its context\\\" which opens the node inside the
     info program. Finally, restore the buffer from which this
     function was called. Ideally, this wouldn't require a
     switch-to-buffer statement, but the function `Info-goto-node'
     used for this function switches the visible buffer to the info
     node and I couldn't find an alternative that only makes it
     current for editing operations, but doesn't change the visible
     buffer to it.

     I find the link to the actual info buffer is useful as a lot of
     the time, you might want to insert the buffer so you can store it
     with other useful information inside the zetteldesk-scratch
     buffer, but then, you are interested in looking into the other
     nodes of the manual you were reading.

     Optional argument ARG which is a `\\\\[universal-argument]' switch to the
     zetteldesk-scratch buffer in a split.\"
       (interactive \"P\")
       (let ((info_node (completing-read \"Nodes: \" zetteldesk-info-nodes))
	     (location (zetteldesk-insert-location))
	     (buffer (current-buffer)))
	 (Info-goto-node info_node)
	 (with-current-buffer location
	   (goto-char (point-max))
	   (newline)
	   (org-insert-heading)
	   (insert \"Supportive Material - \" info_node \" (Info)\")
	   (newline)
	   (save-excursion (insert-buffer-substring \"*info*\")
			   (insert
			    (org-link-make-string
			     (concat \"elisp:(Info-goto-node \\\"\" info_node \"\\\")\")
			     \"See this node in its context\")))
	   (kill-whole-line 2))
	 (switch-to-buffer buffer)
	 (zetteldesk-insert-switch-to-scratch arg)))
" 0 6 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6 9 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 9 51 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 51 57 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 57 62 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 62 63 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 63 85 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 85 96 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 96 215 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 215 216 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-doc-face org-block) help-echo nil src-block t) 216 224 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-doc-face org-block) help-echo nil src-block t) 224 225 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-doc-face org-block) help-echo nil src-block t) 225 244 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 244 249 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 249 291 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 291 300 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 300 307 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 307 362 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 362 363 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 363 364 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-string-face org-block) help-echo nil src-block t) 364 372 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-string-face org-block) help-echo nil src-block t) 372 373 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-string-face org-block) help-echo nil src-block t) 373 374 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 374 403 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 403 408 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 408 409 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 409 437 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 437 448 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 448 475 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 475 476 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-doc-face org-block) help-echo nil src-block t) 476 479 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-doc-face org-block) help-echo nil src-block t) 479 480 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-doc-face org-block) help-echo nil src-block t) 480 500 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 500 548 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 548 570 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 570 643 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 643 648 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 648 651 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 651 660 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 660 667 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 667 721 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 721 728 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 728 743 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 743 748 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 748 749 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 749 774 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 774 785 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 785 891 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 891 913 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 913 971 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 971 999 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 999 1002 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1002 1011 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1011 1018 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1018 1103 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1103 1110 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 1110 1132 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1132 1137 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1137 1138 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1138 1170 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 1170 1182 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1182 1191 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-type-face org-block) help-echo nil src-block t) 1191 1218 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1218 1225 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1225 1256 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 1256 1333 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1333 1351 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 1351 1410 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1410 1428 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 1428 1679 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1679 1710 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 1710 1758 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1758 1777 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 1777 1780 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 1780 1789 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1789 1793 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1793 1925 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1925 1931 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1931 1999 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1999 2006 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-warning-face org-block) help-echo "Hidden behind deeper element; move to another line?" src-block t) 2006 2022 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2022 2024 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2024 2063 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2063 2069 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2069 2149 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2149 2151 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2151 2167 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2167 2171 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2171 2223 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2223 2252 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 2252 2324 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2324 2326 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2326 2395 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2395 2400 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2400 2401 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2401 2420 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 2420 2432 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2432 2441 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-type-face org-block) help-echo nil src-block t) 2441 2503 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2503 2510 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 2510 2528 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 2528 2619 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 2619 2651 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 2651 2914 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 2914 2923 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2923 2927 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2927 3016 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3016 3018 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3018 3026 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3026 3034 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 3034 3089 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3089 3095 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3095 3127 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3127 3129 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3129 3177 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3177 3180 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 3180 3239 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 3239 3250 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3250 3254 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3254 3389 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3389 3395 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3395 3658 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3658 3660 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3660 3714 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3714 3720 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 3720 3737 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3737 3742 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 3742 3743 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3743 3767 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 3767 3778 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3778 3810 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 3810 3831 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 3831 3867 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 3867 3888 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 3888 4038 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 4038 4063 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 4063 4088 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 4088 4107 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 4107 4146 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 4146 4164 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 4164 4249 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 4249 4267 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 4267 4333 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 4333 4351 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 4351 4354 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 4354 4363 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4363 4374 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 4374 4498 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4498 4503 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 4503 4504 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4504 4539 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 4539 4541 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4541 4550 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-type-face org-block) help-echo nil src-block t) 4550 4563 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4563 4607 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 4607 4617 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 4617 4743 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 4743 4768 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 4768 4806 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 4806 4825 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 4825 4855 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 4855 4872 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 4872 4994 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 4994 5020 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 5020 5068 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 5068 5077 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 5077 5532 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 5532 5550 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 5550 5617 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 5617 5626 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5626 5637 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 5637 5638 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5638 5641 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 5641 5651 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5651 5655 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 5655 5804 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5804 5830 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 5830 5857 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5857 5864 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 5864 5972 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5972 5986 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 5986 6057 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6057 6071 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 6071 6077 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6077 6082 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 6082 6160 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6160 6171 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 6171 6172 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6172 6176 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 6176 6218 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6218 6243 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 6243 6265 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6265 6300 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 6300 6313 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6313 6316 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 6316 6333 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 6333 6339 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6339 6348 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 6348 6349 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6349 6370 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-variable-name-face org-block) help-echo nil src-block t) 6370 6382 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6382 6469 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 6469 6477 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6477 6482 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 6482 6496 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6496 6502 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 6502 6523 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6523 6528 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 6528 6529 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6529 6564 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 6564 6575 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6575 6661 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 6661 6682 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 6682 6684 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 6684 6693 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6693 6704 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 6704 6788 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6788 6793 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 6793 6794 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6794 6834 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 6834 6845 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6845 6876 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 6876 6886 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 6886 6926 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 6926 6941 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 6941 6957 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 6957 6978 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 6978 6980 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 6980 6989 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6989 7000 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 7000 7010 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 7010 7014 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 7014 7070 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 7070 7084 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 7084 7148 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 7148 7153 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 7153 7154 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 7154 7185 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 7185 7187 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 7187 7196 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-type-face org-block) help-echo nil src-block t) 7196 7209 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 7209 7259 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 7259 7269 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 7269 7285 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 7285 7300 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 7300 7542 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 7542 7571 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 7571 8048 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 8048 8062 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 8062 8643 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 8643 8661 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 8661 8721 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 8721 8730 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8730 8741 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 8741 8742 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8742 8745 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 8745 8755 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8755 8758 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 8758 8788 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8788 8797 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 8797 8839 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8839 8865 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 8865 8933 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8933 8952 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 8952 9041 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 9041 9065 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 9065 9076 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 9076 9085 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 9085 9106 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 9106 9120 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 9120 9146 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 9146 9154 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 9154 9215 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 9215 9241 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 9241 9252 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 9252 9257 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 9257 9267 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 9267 9297 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 9297 9357 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 9357 9392 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 9392 9400 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 66815) (undo-tree-id16949 . -3973) (undo-tree-id16950 . -7141) (undo-tree-id16951 . -2915) (undo-tree-id16952 . -3972) (undo-tree-id16953 . -3972) (undo-tree-id16954 . -3972) (undo-tree-id16955 . -3972) (undo-tree-id16956 . -2915) (undo-tree-id16957 . -3972) (undo-tree-id16958 . -3972) (undo-tree-id16959 . -2915) (undo-tree-id16960 . -3972) (undo-tree-id16961 . -3972) (undo-tree-id16962 . -2915) (undo-tree-id16963 . -3972) (undo-tree-id16964 . -3972) (undo-tree-id16965 . -2915) (undo-tree-id16966 . -3972) (undo-tree-id16967 . -3972) (undo-tree-id16968 . -2915) (undo-tree-id16969 . -3972) (undo-tree-id16970 . -3972) (undo-tree-id16971 . -3972) (undo-tree-id16972 . -3972) (undo-tree-id16973 . -3972) (undo-tree-id16974 . -3972) (undo-tree-id16975 . -3972) (undo-tree-id16976 . -2915) (undo-tree-id16977 . -3972) (undo-tree-id16978 . -3972) (undo-tree-id16979 . -3972) (undo-tree-id16980 . -3972) (undo-tree-id16981 . -3972) (undo-tree-id16982 . -3972) (undo-tree-id16983 . -3972) (undo-tree-id16984 . -2915) (undo-tree-id16985 . -3972) (undo-tree-id16986 . -3972) (undo-tree-id16987 . -3972) (undo-tree-id16988 . -3972) (undo-tree-id16989 . -3972) (undo-tree-id16990 . -3972) (undo-tree-id16991 . -3972) (undo-tree-id16992 . -2915) (undo-tree-id16993 . -3972) (undo-tree-id16994 . -3972) (undo-tree-id16995 . -3972) (undo-tree-id16996 . -3972) (undo-tree-id16997 . -3972) (undo-tree-id16998 . -3972) (undo-tree-id16999 . -3972) (undo-tree-id17000 . -2915) (undo-tree-id17001 . -3972) (undo-tree-id17002 . -3972) (undo-tree-id17003 . -3972) (undo-tree-id17004 . -3972) (undo-tree-id17005 . -3972) (undo-tree-id17006 . -3972) (undo-tree-id17007 . -3972) (undo-tree-id17008 . -2915) (undo-tree-id17009 . -3972) (undo-tree-id17010 . -3972) (undo-tree-id17011 . -3972) (undo-tree-id17012 . -3972) (undo-tree-id17013 . -3972) (undo-tree-id17014 . -3972) (undo-tree-id17015 . -3972) (undo-tree-id17016 . -2915) (undo-tree-id17017 . -3972) (undo-tree-id17018 . -3972) (undo-tree-id17019 . -3972) (undo-tree-id17020 . -3972) (undo-tree-id17021 . -3972) (undo-tree-id17022 . -3972) (undo-tree-id17023 . -3972) (undo-tree-id17024 . -2915) (undo-tree-id17025 . -3972) (undo-tree-id17026 . -3972) (undo-tree-id17027 . -2915) (undo-tree-id17028 . -3972) (undo-tree-id17029 . -3972) (undo-tree-id17030 . -2915) (undo-tree-id17031 . -3972) (undo-tree-id17032 . -3972) (undo-tree-id17033 . -2915) (undo-tree-id17034 . -3972) (undo-tree-id17035 . -3972) (undo-tree-id17036 . -2915) (undo-tree-id17037 . -3972) 70787) nil (25151 37184 410830 548000) 0 nil])
([nil nil ((66788 . 66807) (#("t" 0 1 (fontified t face org-level-3)) . -66788) (undo-tree-id16879 . -1) (undo-tree-id16880 . -1) (undo-tree-id16881 . -1) (undo-tree-id16882 . -1) (undo-tree-id16883 . -1) (undo-tree-id16884 . -1) (undo-tree-id16885 . -1) (undo-tree-id16886 . -1) (undo-tree-id16887 . -1) 66789 (66772 . 66789) (66768 . 66772) (#(" " 0 1 (fontified t)) . -66768) (undo-tree-id16888 . -1) (undo-tree-id16889 . -1) (undo-tree-id16890 . -1) (undo-tree-id16891 . -1) (undo-tree-id16892 . -1) (undo-tree-id16893 . -1) (undo-tree-id16894 . -1) (undo-tree-id16895 . -1) (undo-tree-id16896 . -1) (undo-tree-id16897 . -1) (undo-tree-id16898 . -1) (undo-tree-id16899 . -1) (undo-tree-id16900 . -1) (undo-tree-id16901 . -1) (undo-tree-id16902 . -1) (undo-tree-id16903 . -1) (undo-tree-id16904 . -1) (undo-tree-id16905 . -1) (undo-tree-id16906 . -1) (undo-tree-id16907 . -1) (undo-tree-id16908 . -1) (undo-tree-id16909 . -1) (undo-tree-id16910 . -1) (undo-tree-id16911 . -1) (undo-tree-id16912 . -1) (#(" " 0 1 (fontified t)) . -66769) (undo-tree-id16913 . -1) (undo-tree-id16914 . -1) (undo-tree-id16915 . -1) (undo-tree-id16916 . -1) (undo-tree-id16917 . -1) (undo-tree-id16918 . -1) (undo-tree-id16919 . -1) (undo-tree-id16920 . -1) (undo-tree-id16921 . -1) (undo-tree-id16922 . -1) (undo-tree-id16923 . -1) (undo-tree-id16924 . -1) (undo-tree-id16925 . -1) (undo-tree-id16926 . -1) (undo-tree-id16927 . -1) (undo-tree-id16928 . -1) (undo-tree-id16929 . -1) (#(" " 0 1 (fontified t)) . -66770) (undo-tree-id16930 . -1) (undo-tree-id16931 . -1) (undo-tree-id16932 . -1) (undo-tree-id16933 . -1) (undo-tree-id16934 . -1) (undo-tree-id16935 . -1) (undo-tree-id16936 . -1) (undo-tree-id16937 . -1) (undo-tree-id16938 . -1) 66771 (66768 . 66771) (#("   " 0 3 (fontified nil)) . 66767) (undo-tree-id16939 . -3) (undo-tree-id16940 . -3) (undo-tree-id16941 . -3) (undo-tree-id16942 . -3) (undo-tree-id16943 . -3) (undo-tree-id16944 . -3) (undo-tree-id16945 . -3) (undo-tree-id16946 . -3) (undo-tree-id16947 . -3) (undo-tree-id16948 . -3) (66770 . 66771) (66766 . 66770) 66765) nil (25151 37184 410674 520000) 0 nil])
([nil nil ((76574 . 76579) (#(" " 0 1 (fontified t)) . -76574) (undo-tree-id17177 . -1) (undo-tree-id17178 . -1) (undo-tree-id17179 . -1) (undo-tree-id17180 . -1) (undo-tree-id17181 . -1) (undo-tree-id17182 . -1) (undo-tree-id17183 . -1) (undo-tree-id17184 . -1) (undo-tree-id17185 . -1) (undo-tree-id17186 . -1) (undo-tree-id17187 . -1) (undo-tree-id17188 . -1) (undo-tree-id17189 . -1) (undo-tree-id17190 . -1) (undo-tree-id17191 . -1) (undo-tree-id17192 . -1) (undo-tree-id17193 . -1) (undo-tree-id17194 . -1) (undo-tree-id17195 . -1) (undo-tree-id17196 . -1) (undo-tree-id17197 . -1) (undo-tree-id17198 . -1) (undo-tree-id17199 . -1) (undo-tree-id17200 . -1) (undo-tree-id17201 . -1) (undo-tree-id17202 . -1) (undo-tree-id17203 . -1) (undo-tree-id17204 . -1) (undo-tree-id17205 . -1) (#(" " 0 1 (fontified t)) . -76575) (undo-tree-id17206 . -1) (undo-tree-id17207 . -1) (undo-tree-id17208 . -1) (undo-tree-id17209 . -1) (undo-tree-id17210 . -1) (undo-tree-id17211 . -1) (undo-tree-id17212 . -1) (undo-tree-id17213 . -1) (undo-tree-id17214 . -1) (undo-tree-id17215 . -1) (undo-tree-id17216 . -1) (undo-tree-id17217 . -1) (undo-tree-id17218 . -1) (undo-tree-id17219 . -1) (undo-tree-id17220 . -1) (undo-tree-id17221 . -1) (undo-tree-id17222 . -1) (undo-tree-id17223 . -1) (undo-tree-id17224 . -1) (undo-tree-id17225 . -1) (undo-tree-id17226 . -1) 76576 (76572 . 76576) (t 25151 37184 524643 680000)) nil (25151 37201 966244 478000) 0 nil])
([nil nil ((#(" 
" 0 1 (fontified t) 1 2 (fontified t)) . 76573) (undo-tree-id17134 . 1) (undo-tree-id17135 . -1) (undo-tree-id17136 . -1) (undo-tree-id17137 . -1) (undo-tree-id17138 . -1) (undo-tree-id17139 . -1) (undo-tree-id17140 . -1) (undo-tree-id17141 . -1) (undo-tree-id17142 . -1) (undo-tree-id17143 . -1) (undo-tree-id17144 . -1) (undo-tree-id17145 . -1) (undo-tree-id17146 . -1) (undo-tree-id17147 . -1) (undo-tree-id17148 . -1) (undo-tree-id17149 . -1) (undo-tree-id17150 . -1) (undo-tree-id17151 . -1) (undo-tree-id17152 . -1) (undo-tree-id17153 . -1) (undo-tree-id17154 . -1) (undo-tree-id17155 . -1) (undo-tree-id17156 . -1) (undo-tree-id17157 . -1) (undo-tree-id17158 . -1) (undo-tree-id17159 . -1) (undo-tree-id17160 . -1) (undo-tree-id17161 . -1) (undo-tree-id17162 . -1) (undo-tree-id17163 . -1) (undo-tree-id17164 . -1) (undo-tree-id17165 . -1) (undo-tree-id17166 . -1) (undo-tree-id17167 . -1) (undo-tree-id17168 . -1) (undo-tree-id17169 . -1) (undo-tree-id17170 . -1) (undo-tree-id17171 . -1) (undo-tree-id17172 . -1) (undo-tree-id17173 . -1) (undo-tree-id17174 . -1) (undo-tree-id17175 . -1) (undo-tree-id17176 . -1)) nil (25151 37201 966173 448000) 0 nil])
([nil nil ((#("   #+RESULTS:
   : org-roam-node-read*
" 0 3 (fontified t font-lock-fontified t face org-meta-line) 3 13 (fontified t font-lock-fontified t face org-meta-line) 13 17 (fontified t) 17 19 (fontified t face org-code) 19 39 (fontified t face org-code)) . 76578) (undo-tree-id17109 . -2) (undo-tree-id17110 . -39) (undo-tree-id17111 . -2) (undo-tree-id17112 . -2) (undo-tree-id17113 . -2) (undo-tree-id17114 . -2) (undo-tree-id17115 . -2) (undo-tree-id17116 . -2) (undo-tree-id17117 . -13) (undo-tree-id17118 . -38) (undo-tree-id17119 . -2) (undo-tree-id17120 . -2) (undo-tree-id17121 . -2) (undo-tree-id17122 . -2) (undo-tree-id17123 . -2) (undo-tree-id17124 . -2) (undo-tree-id17125 . -2) (undo-tree-id17126 . -2) (undo-tree-id17127 . -2) (undo-tree-id17128 . -2) (undo-tree-id17129 . -2) (undo-tree-id17130 . -2) (undo-tree-id17131 . -2) (undo-tree-id17132 . -2) (undo-tree-id17133 . -2) 76580) nil (25151 37201 966102 768000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face org-level-3)) . -76587) (undo-tree-id17099 . -1) (undo-tree-id17100 . -1) (undo-tree-id17101 . -1) (undo-tree-id17102 . -1) (undo-tree-id17103 . -1) (undo-tree-id17104 . -1) (undo-tree-id17105 . -1) (undo-tree-id17106 . -1) (undo-tree-id17107 . -1) (undo-tree-id17108 . -1) 76588 (76577 . 76588)) nil (25151 37201 966052 900000) 0 nil])
([nil nil ((76629 . 76636) (#("p" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -76629) (undo-tree-id17900 . -1) (undo-tree-id17901 . -1) (undo-tree-id17902 . -1) (undo-tree-id17903 . -1) (undo-tree-id17904 . -1) (undo-tree-id17905 . -1) (undo-tree-id17906 . -1) (undo-tree-id17907 . -1) (undo-tree-id17908 . -1) (undo-tree-id17909 . -1) 76630 (76616 . 76630) (#("e" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -76616) (undo-tree-id17910 . -1) (undo-tree-id17911 . -1) (undo-tree-id17912 . -1) (undo-tree-id17913 . -1) (undo-tree-id17914 . -1) (undo-tree-id17915 . -1) (undo-tree-id17916 . -1) (undo-tree-id17917 . -1) (undo-tree-id17918 . -1) (undo-tree-id17919 . -1) (undo-tree-id17920 . -1) 76617 (76615 . 76617) (#("h" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -76615) (undo-tree-id17921 . -1) (undo-tree-id17922 . -1) (undo-tree-id17923 . -1) (undo-tree-id17924 . -1) (undo-tree-id17925 . -1) (undo-tree-id17926 . -1) (undo-tree-id17927 . -1) (undo-tree-id17928 . -1) (undo-tree-id17929 . -1) (undo-tree-id17930 . -1) 76616 (76605 . 76616) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 76605 76636 nil nil nil t #s(yas--field 2 76637 76637 nil nil nil nil nil)) #s(yas--field 2 76637 76637 nil nil nil nil nil)) nil 0 nil #s(yas--field 1 76605 76636 nil nil nil t #s(yas--field 2 76637 76637 nil nil nil nil nil)) nil nil)) (76607 . 76611) (76593 . 76616) (#("\\s" 0 2 (fontified t)) . 76593) (undo-tree-id17931 . -2) (undo-tree-id17932 . -1) (undo-tree-id17933 . -1) (undo-tree-id17934 . -1) (undo-tree-id17935 . -1) (undo-tree-id17936 . -1) (undo-tree-id17937 . -1) (undo-tree-id17938 . -1) (undo-tree-id17939 . -2) (undo-tree-id17940 . -1) (undo-tree-id17941 . -2) (undo-tree-id17942 . -2) (undo-tree-id17943 . -2) (undo-tree-id17944 . -2) (undo-tree-id17945 . -2) (undo-tree-id17946 . -2) (undo-tree-id17947 . -2) (undo-tree-id17948 . -2) 76595 (76593 . 76595) (76589 . 76593) (#("    " 0 4 (fontified nil)) . 76588) (undo-tree-id17949 . -4) (undo-tree-id17950 . -4) (undo-tree-id17951 . -4) (undo-tree-id17952 . -4) (undo-tree-id17953 . -4) (undo-tree-id17954 . -4) (undo-tree-id17955 . -4) (undo-tree-id17956 . -4) (undo-tree-id17957 . -4) (undo-tree-id17958 . -4) (undo-tree-id17959 . -4) (undo-tree-id17960 . -4) (undo-tree-id17961 . -4) (undo-tree-id17962 . -4) (undo-tree-id17963 . -4) (undo-tree-id17964 . -4) (undo-tree-id17965 . -4) (undo-tree-id17966 . -4) (undo-tree-id17967 . -4) (undo-tree-id17968 . -4) (undo-tree-id17969 . -4) (undo-tree-id17970 . -4) (76592 . 76593) (76587 . 76592) (t 25151 37202 68147 397000) 76586) nil (25151 37253 297509 760000) 0 nil])
([nil nil ((apply yas--snippet-revive 76593 76651 #s(yas--snippet nil (#s(yas--field 1 76605 76636 nil nil nil t #s(yas--field 2 76637 76637 nil nil nil nil nil)) #s(yas--field 2 76637 76637 nil nil nil nil nil)) nil 0 nil #s(yas--field 1 76605 76636 nil nil nil t #s(yas--field 2 76637 76637 nil nil nil nil nil)) nil nil))) nil (25151 37253 297388 444000) 0 nil])
([nil nil ((66856 . 73164) (#("
     ;; -- Reference Nodes from Bibtex Entries --
     (defun zetteldesk-note-refs-p ()
       \"Predicate function that finds all bibtex completion candidates with a note.

     Checks if every candidate has the \\\"=has-note=\\\" tag using
     `assoc' and if it does, collects that candidate\"
       (cl-loop for ref in (bibtex-completion-candidates)
		if (assoc \"=has-note=\" ref)
		collect ref))

     (defun zetteldesk-citekey-from-refs ()
       \"Function that finds the \\\"=key=\\\" tag from a list of candidates.

     The list is collected with `zetteldesk-note-refs-p' which is a
     list of candidates that have notes. Collects it using `assoc'.\"
       (cl-loop for ref in (zetteldesk-note-refs-p)
		collect (assoc \"=key=\" ref)))

     (defun zetteldesk-node-from-refs ()
       \"Function that collects a list of ref nodes.

     The nodes are collected from their citekey using
     `org-roam-node-from-ref', while the citekeys themselves are
     collected from `zetteldesk-citekey-from-refs'.\"
       (cl-loop for ref in (zetteldesk-citekey-from-refs)
		collect (org-roam-node-from-ref (concat \"cite:\" (cdr ref)))))

     (defun org-roam-node-read--completions* (node-list &optional filter-fn sort-fn)
       \"Runs `org-roam-node-read--completions' with NODE-LIST being a list of nodes.

     Typically, the function takes `org-roam-node-list' as the initial
     list of nodes and creates the alist `org-roam-node-read'
     uses. However, it can be helpful to supply the list of nodes
     yourself, when the predicate function used cannot be inferred
     through a filter function of the form this function
     takes. FILTER-FN and SORT-FN are the same as in
     `org-roam-node-read--completions'. The resulting alist is to be
     used with `org-roam-node-read*'.\"
       (let* ((template (org-roam-node--process-display-format org-roam-node-display-template))
	      (nodes node-list)
	      (nodes (mapcar (lambda (node)
			       (org-roam-node-read--to-candidate node template)) nodes))
	      (nodes (if filter-fn
			 (cl-remove-if-not
			  (lambda (n) (funcall filter-fn (cdr n)))
			  nodes)
		       nodes))
	      (sort-fn (or sort-fn
			   (when org-roam-node-default-sort
			     (intern (concat \"org-roam-node-read-sort-by-\"
					     (symbol-name org-roam-node-default-sort))))))
	      (nodes (if sort-fn (seq-sort sort-fn nodes)
		       nodes)))
	 nodes))

     (defun org-roam-node-read* (node-list &optional initial-input filter-fn sort-fn require-match prompt)
       \"Runs `org-roam-node-read' with the nodes supplied by NODE-LIST.

     NODE-LIST is a list of nodes passed to
     `org-roam-node-read--completions*', which creates an alist of
     nodes with the proper formatting to be used in this
     function. This is for those cases where it is helpful to use your
     own list of nodes, because a predicate function can not filter
     them in the way you want easily.\"
       (let* ((nodes (org-roam-node-read--completions* node-list filter-fn sort-fn))
	      (prompt (or prompt \"Node: \"))
	      (node (completing-read
		     prompt
		     (lambda (string pred action)
		       (if (eq action 'metadata)
			   `(metadata
			     ;; Preserve sorting in the completion UI if a sort-fn is used
			     ,@(when sort-fn
				 '((display-sort-function . identity)
				   (cycle-sort-function . identity)))
			     (annotation-function
			      . ,(lambda (title)
				   (funcall org-roam-node-annotation-function
					    (get-text-property 0 'node title))))
			     (category . org-roam-node))
			 (complete-with-action action nodes string pred)))
		     nil require-match initial-input 'org-roam-node-history)))
	 (or (cdr (assoc node nodes))
	     (org-roam-node-create :title node))))

     (defun zetteldesk-find-ref-node ()
       \"Execute a filtered version of `ivy-bibtex-with-notes'.

     This does not exactly run `ivy-bibtex-with-notes' as that doesn't
     have a way to filter things. It collects a list of nodes which
     are reference nodes linked to a bibtex entry through
     `zetteldesk-node-from-refs' and passes it to
     `org-roam-node-read*' which is a modified version of
     `org-roam-node-read' which takes a list of nodes as an
     argument. Since this required a rewrite of `org-roam-node-read',
     finding the file is done indirectly and not through
     `org-roam-node-file'.\"
       (interactive)
       (find-file (org-roam-node-file (org-roam-node-read* (zetteldesk-node-from-refs) nil #'zetteldesk-node-p))))

     (defun zetteldesk-insert-ref-node-contents (&optional arg)
       \"Select a node that is part of the current `zetteldesk' and a ref node.
     Ref nodes are nodes that refer to reference material such as an
     article. These are gathered with `zetteldesk-node-from-refs' and
     shown to the user through `org-roam-node-read*' filtered
     according to `zetteldesk-node-p'.

     After selection, insert its citekey at point for future
     reference, then in the location determined by
     `zetteldesk-insert-location' (typically *zetteldesk-scratch*), go
     to `point-max', insert a newline and then insert the contents of
     the selected node but remove the first 4 lines which is the
     unneeded property drawer. After, indent all headings by one level
     and replace the #+title: with an asterisk. Finally, enter a
     newline after the title, where the string \\\"Bibtex entry for
     node: \\\" is entered suffixed by the citekey of the entry.

     If given the optional argument ARG, which needs to be the
     `\\\\[universal-argument]' also switch to the *zetteldesk-scratch*
     buffer in a split.\"
       (interactive \"P\")
       (let* ((node
	       (org-roam-node-read* (zetteldesk-node-from-refs) nil #'zetteldesk-node-p))
	      (file (org-roam-node-file node))
	      (location (zetteldesk-insert-location))
	      (citekey (concat \"cite:\" (car (org-roam-node-refs node)))))
	 (insert citekey)
	 (set-buffer location)
	 (goto-char (point-max))
	 (save-excursion
	   (insert-file-contents file))
	 (kill-whole-line 4)
	 (newline)
	 (save-excursion
	   (while (not (org-next-visible-heading 1))
	     (org-metaright)))
	 (replace-string \"#+title: \" \"* \")
	 (end-of-line 1)
	 (newline)
	 (insert \"Bibtex entry for node: \"
		 citekey))
       (zetteldesk-insert-switch-to-scratch arg))

     ;; -- Info Nodes --
     (defcustom zetteldesk-info-nodes '()
       \"List of info nodes that are part of the zetteldesk.
     Initialised as an empty list\"
       :type 'list
       :group 'zetteldesk)

     (defun zetteldesk-add-info-node-to-desktop ()
       \"Find the current info-node.
     Then add its name to the list of the variable
     `zetteldesk-info-nodes'\"
       (interactive)
       (add-to-list 'zetteldesk-info-nodes (Info-copy-current-node-name)))

     (defun zetteldesk-remove-info-node-from-desktop ()
       \"Remove an info-node from the `zetteldesk'.
     The node is selected through a `completing-read' menu of
     `zetteldesk-info-nodes'\"
       (interactive)
       (setq zetteldesk-info-nodes (remove
				    (completing-read \"Info Nodes: \" zetteldesk-info-nodes)
				    zetteldesk-info-nodes)))

     (defun zetteldesk-info-goto-node ()
       \"Zetteldesk filter function for `Info-goto-node'.

     Prompts the user to select a node from the list
     `zetteldesk-info-nodes' and jumps to that node\"
       (interactive)
       (Info-goto-node (completing-read \"Nodes: \" zetteldesk-info-nodes)))

     (defun zetteldesk-insert-info-contents (&optional arg)
       \"Select an info node that is part of the current `zetteldesk'.
     Uses a `completing-read' prompt for the selection.

     Then, in the *zetteldesk-scratch* buffer, go to the end of the
     buffer, insert a newline and a heading of the form \\\"Supportive
     Material - \\\" the node's name \\\"(Info)\\\" akin to what is done in
     `zetteldesk-insert-link-to-pdf'.  Then, insert the contents of the
     chosen info node, removing the first 2 lines which have the
     contextual links of the buffer, as they are not functional
     outside of the info buffer.  Also insert a link with the title
     \\\"See this node in its context\\\" which opens the node inside the
     info program. Finally, restore the buffer from which this
     function was called. Ideally, this wouldn't require a
     switch-to-buffer statement, but the function `Info-goto-node'
     used for this function switches the visible buffer to the info
     node and I couldn't find an alternative that only makes it
     current for editing operations, but doesn't change the visible
     buffer to it.

     I find the link to the actual info buffer is useful as a lot of
     the time, you might want to insert the buffer so you can store it
     with other useful information inside the zetteldesk-scratch
     buffer, but then, you are interested in looking into the other
     nodes of the manual you were reading.

     Optional argument ARG which is a `\\\\[universal-argument]' switch to the
     zetteldesk-scratch buffer in a split.\"
       (interactive \"P\")
       (let ((info_node (completing-read \"Nodes: \" zetteldesk-info-nodes))
	     (location (zetteldesk-insert-location))
	     (buffer (current-buffer)))
	 (Info-goto-node info_node)
	 (with-current-buffer location
	   (goto-char (point-max))
	   (newline)
	   (org-insert-heading)
	   (insert \"Supportive Material - \" info_node \" (Info)\")
	   (newline)
	   (save-excursion (insert-buffer-substring \"*info*\")
			   (insert
			    (org-link-make-string
			     (concat \"elisp:(Info-goto-node \\\"\" info_node \"\\\")\")
			     \"See this node in its context\")))
	   (kill-whole-line 2))
	 (switch-to-buffer buffer)
	 (zetteldesk-insert-switch-to-scratch arg)))

" 0 6 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6 9 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 9 51 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 51 57 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 57 62 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 62 63 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 63 85 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 85 96 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 96 215 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 215 216 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 216 224 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 224 225 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 225 244 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 244 249 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 249 291 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 291 300 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 300 307 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 307 362 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 362 363 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 363 364 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 364 372 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 372 373 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 373 374 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 374 403 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 403 408 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 408 409 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 409 437 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 437 448 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 448 475 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 475 476 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 476 479 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 479 480 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 480 500 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 500 548 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 548 570 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 570 643 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 643 648 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 648 651 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 651 660 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 660 667 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 667 721 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 721 722 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 722 723 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 723 726 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 726 727 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 727 728 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 728 743 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 743 748 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 748 749 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 749 774 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 774 785 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 785 891 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 891 913 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 913 971 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 971 999 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 999 1002 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1002 1011 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1011 1018 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1018 1103 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1103 1110 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1110 1132 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1132 1137 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1137 1138 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1138 1170 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 1170 1182 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1182 1191 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 1191 1218 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1218 1225 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1225 1256 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1256 1333 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1333 1351 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1351 1410 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1410 1428 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1428 1679 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1679 1710 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1710 1758 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1758 1777 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1777 1780 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1780 1789 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1789 1793 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1793 1925 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1925 1931 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1931 1999 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1999 2006 (fontified t font-lock-fontified t help-echo "Hidden behind deeper element; move to another line?" src-block t font-lock-multiline t face (font-lock-warning-face org-block)) 2006 2022 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2022 2024 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2024 2063 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2063 2069 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2069 2149 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2149 2151 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2151 2167 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2167 2171 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2171 2223 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2223 2252 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2252 2324 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2324 2326 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2326 2395 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2395 2400 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2400 2401 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2401 2420 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 2420 2432 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2432 2441 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 2441 2503 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2503 2510 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2510 2528 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2528 2619 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2619 2651 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2651 2914 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2914 2923 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2923 2927 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2927 3016 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3016 3018 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3018 3026 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3026 3034 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 3034 3089 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3089 3095 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3095 3127 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3127 3129 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3129 3177 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3177 3180 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3180 3239 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3239 3250 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3250 3254 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3254 3389 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3389 3395 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3395 3658 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3658 3660 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3660 3714 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3714 3720 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 3720 3737 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3737 3742 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3742 3743 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3743 3767 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 3767 3778 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3778 3810 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3810 3831 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3831 3867 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3867 3888 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3888 4038 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4038 4063 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4063 4088 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4088 4107 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4107 4146 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4146 4164 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4164 4249 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4249 4267 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4267 4333 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4333 4351 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4351 4354 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4354 4363 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4363 4374 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4374 4498 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4498 4503 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4503 4504 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4504 4539 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 4539 4541 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4541 4550 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 4550 4563 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4563 4607 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4607 4617 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4617 4743 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4743 4768 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4768 4806 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4806 4825 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4825 4855 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4855 4872 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4872 4994 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4994 5020 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 5020 5033 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5033 5034 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5034 5052 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5052 5053 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5053 5068 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5068 5077 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 5077 5532 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5532 5550 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 5550 5572 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5572 5573 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5573 5591 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5591 5592 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 5592 5617 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5617 5626 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5626 5637 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5637 5638 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5638 5641 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5641 5651 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5651 5655 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5655 5804 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5804 5830 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5830 5857 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5857 5864 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5864 5972 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5972 5986 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5986 6057 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6057 6071 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6071 6077 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6077 6082 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6082 6160 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6160 6171 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6171 6172 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6172 6176 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6176 6218 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6218 6243 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6243 6265 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6265 6300 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6300 6313 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6313 6316 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 6316 6333 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 6333 6339 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6339 6348 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6348 6349 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6349 6370 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 6370 6382 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6382 6469 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6469 6477 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6477 6482 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 6482 6496 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6496 6502 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 6502 6523 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6523 6528 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6528 6529 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6529 6564 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 6564 6575 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6575 6661 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6661 6682 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 6682 6684 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6684 6693 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6693 6704 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6704 6788 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6788 6793 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6793 6794 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6794 6834 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 6834 6845 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6845 6876 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6876 6886 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 6886 6926 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6926 6941 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 6941 6957 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6957 6978 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 6978 6980 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6980 6989 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6989 7000 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 7000 7010 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7010 7014 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 7014 7070 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7070 7084 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 7084 7148 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7148 7153 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 7153 7154 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7154 7179 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 7179 7190 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7190 7223 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7223 7237 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 7237 7300 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7300 7321 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 7321 7346 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7346 7355 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7355 7366 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 7366 7408 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7408 7417 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 7417 7450 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7450 7455 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 7455 7456 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7456 7487 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 7487 7489 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7489 7498 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 7498 7511 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7511 7561 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7561 7571 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 7571 7587 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7587 7602 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 7602 7649 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7649 7650 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 7650 7668 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 7668 7669 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 7669 7844 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 7844 7873 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 7873 8350 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 8350 8364 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 8364 8945 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 8945 8963 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 8963 9023 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 9023 9032 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9032 9043 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 9043 9044 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9044 9047 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 9047 9057 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9057 9060 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 9060 9090 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9090 9099 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 9099 9141 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9141 9167 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 9167 9235 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9235 9254 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 9254 9343 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9343 9367 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 9367 9378 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9378 9387 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 9387 9408 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9408 9422 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 9422 9448 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9448 9449 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 9449 9450 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 9450 9454 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 9454 9455 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 9455 9456 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 9456 9517 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9517 9543 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 9543 9554 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9554 9559 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 9559 9569 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9569 9599 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 9599 9659 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9659 9694 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 9694 9703 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 66856) (undo-tree-id17228 . -395) (undo-tree-id17229 . -9501) (undo-tree-id17230 . -9501) (undo-tree-id17231 . -9501) (undo-tree-id17232 . -394) (undo-tree-id17233 . -394) (undo-tree-id17234 . -9501) (undo-tree-id17235 . -9501) (undo-tree-id17236 . -9501) (undo-tree-id17237 . -9501) (undo-tree-id17238 . -9501) (undo-tree-id17239 . -9501) (undo-tree-id17240 . -9501) (undo-tree-id17241 . -9501) (undo-tree-id17242 . -9501) (undo-tree-id17243 . -9501) (undo-tree-id17244 . -9501) (undo-tree-id17245 . -9501) (undo-tree-id17246 . -9501) (undo-tree-id17247 . -9501) (undo-tree-id17248 . -9501) (undo-tree-id17249 . -9501) (undo-tree-id17250 . -9501) (undo-tree-id17251 . -9501) (undo-tree-id17252 . -9501) (undo-tree-id17253 . -9501) (undo-tree-id17254 . -9501) (undo-tree-id17255 . -9501) (undo-tree-id17256 . -9501) (undo-tree-id17257 . -9501) (undo-tree-id17258 . -9501) (undo-tree-id17259 . -9501) (undo-tree-id17260 . -9501) (undo-tree-id17261 . -9501) (undo-tree-id17262 . -9501) (undo-tree-id17263 . -9501) (undo-tree-id17264 . -9501) (undo-tree-id17265 . -9501) (undo-tree-id17266 . -9501) (undo-tree-id17267 . -9501) (undo-tree-id17268 . -9501) (undo-tree-id17269 . -9501) (undo-tree-id17270 . -9501) (undo-tree-id17271 . -9501) (undo-tree-id17272 . -9501) (undo-tree-id17273 . -9501) (undo-tree-id17274 . -9501) (undo-tree-id17275 . -9501) (undo-tree-id17276 . -9501) (undo-tree-id17277 . -9501) (undo-tree-id17278 . -9501) (undo-tree-id17279 . -9331) (undo-tree-id17280 . -9203) (undo-tree-id17281 . -8980) (undo-tree-id17282 . -8726) (undo-tree-id17283 . -8498) (undo-tree-id17284 . -8177) (undo-tree-id17285 . -9458) (undo-tree-id17286 . -9458) (undo-tree-id17287 . -7574) (undo-tree-id17288 . -9458) (undo-tree-id17289 . -9458) (undo-tree-id17290 . -9458) (undo-tree-id17291 . -9458) (undo-tree-id17292 . -9458) (undo-tree-id17293 . -8902) (undo-tree-id17294 . -8902) (undo-tree-id17295 . -6981) (undo-tree-id17296 . -8902) (undo-tree-id17297 . -8902) (undo-tree-id17298 . -8902) (undo-tree-id17299 . -8902) (undo-tree-id17300 . -8902) (undo-tree-id17301 . -7699) (undo-tree-id17302 . -7699) (undo-tree-id17303 . -6257) (undo-tree-id17304 . -7699) (undo-tree-id17305 . -7699) (undo-tree-id17306 . -7699) (undo-tree-id17307 . -7699) (undo-tree-id17308 . -7699) (undo-tree-id17309 . -6685) (undo-tree-id17310 . -6685) (undo-tree-id17311 . -5459) (undo-tree-id17312 . -6685) (undo-tree-id17313 . -6685) (undo-tree-id17314 . -6685) (undo-tree-id17315 . -6685) (undo-tree-id17316 . -6685) (undo-tree-id17317 . -5786) (undo-tree-id17318 . -5786) (undo-tree-id17319 . -3771) (undo-tree-id17320 . -5786) (undo-tree-id17321 . -5786) (undo-tree-id17322 . -5786) (undo-tree-id17323 . -5786) (undo-tree-id17324 . -5786) (undo-tree-id17325 . -3906) (undo-tree-id17326 . -3906) (undo-tree-id17327 . -2309) (undo-tree-id17328 . -3906) (undo-tree-id17329 . -3906) (undo-tree-id17330 . -3906) (undo-tree-id17331 . -3906) (undo-tree-id17332 . -3906) (undo-tree-id17333 . -3906) (undo-tree-id17334 . -3906) (undo-tree-id17335 . -3906) (undo-tree-id17336 . -3906) (undo-tree-id17337 . -3906) (undo-tree-id17338 . -3906) (undo-tree-id17339 . -3906) (undo-tree-id17340 . -3730) (undo-tree-id17341 . -3730) (undo-tree-id17342 . -2115) (undo-tree-id17343 . -3730) (undo-tree-id17344 . -3730) (undo-tree-id17345 . -3730) (undo-tree-id17346 . -3730) (undo-tree-id17347 . -3730) (undo-tree-id17348 . -3730) (undo-tree-id17349 . -3730) (undo-tree-id17350 . -3730) (undo-tree-id17351 . -3730) (undo-tree-id17352 . -3730) (undo-tree-id17353 . -3730) (undo-tree-id17354 . -3730) (undo-tree-id17355 . -3305) (undo-tree-id17356 . -3305) (undo-tree-id17357 . -1673) (undo-tree-id17358 . -3305) (undo-tree-id17359 . -3305) (undo-tree-id17360 . -3305) (undo-tree-id17361 . -3305) (undo-tree-id17362 . -3305) (undo-tree-id17363 . -2613) (undo-tree-id17364 . -2613) (undo-tree-id17365 . -831) (undo-tree-id17366 . -2613) (undo-tree-id17367 . -2613) (undo-tree-id17368 . -2613) (undo-tree-id17369 . -2613) (undo-tree-id17370 . -2613) (undo-tree-id17371 . -1877) (undo-tree-id17372 . -1877) (undo-tree-id17373 . -51) (undo-tree-id17374 . -1877) (undo-tree-id17375 . -1877) (undo-tree-id17376 . -1877) (undo-tree-id17377 . -1877) (undo-tree-id17378 . -1877) (undo-tree-id17379 . -583) (undo-tree-id17380 . -583) (undo-tree-id17381 . -583) (undo-tree-id17382 . -583) (undo-tree-id17383 . -583) (undo-tree-id17384 . -583) (undo-tree-id17385 . -583) (undo-tree-id17386 . -1368) (undo-tree-id17387 . -1368) (undo-tree-id17388 . -1368) (undo-tree-id17389 . -1368) (undo-tree-id17390 . -1368) (undo-tree-id17391 . -1368) (undo-tree-id17392 . -1368) (undo-tree-id17393 . -1368) (undo-tree-id17394 . -1368) (undo-tree-id17395 . -1368) (undo-tree-id17396 . -1368) (undo-tree-id17397 . -1368) (undo-tree-id17398 . -1368) (undo-tree-id17399 . -1368) (undo-tree-id17400 . -1368) (undo-tree-id17401 . -3590) (undo-tree-id17402 . -3590) (undo-tree-id17403 . -3590) (undo-tree-id17404 . -3590) (undo-tree-id17405 . -3590) (undo-tree-id17406 . -3590) (undo-tree-id17407 . -3590) (undo-tree-id17408 . -3590) (undo-tree-id17409 . -3590) (undo-tree-id17410 . -3590) (undo-tree-id17411 . -3590) (undo-tree-id17412 . -3590) (undo-tree-id17413 . -3590) (undo-tree-id17414 . -3590) (undo-tree-id17415 . -3590) (undo-tree-id17416 . -3590) (undo-tree-id17417 . -3590) (undo-tree-id17418 . -3376) (undo-tree-id17419 . -3590) (undo-tree-id17420 . -3590) (undo-tree-id17421 . -3590) (undo-tree-id17422 . -3590) (undo-tree-id17423 . -3590) (undo-tree-id17424 . -3590) (undo-tree-id17425 . -3590) (undo-tree-id17426 . -3590) (undo-tree-id17427 . -3590) (undo-tree-id17428 . -3590) (undo-tree-id17429 . -3590) (undo-tree-id17430 . -3590) (undo-tree-id17431 . -3590) (undo-tree-id17432 . -3590) (undo-tree-id17433 . -3037) (undo-tree-id17434 . -3590) (undo-tree-id17435 . -3590) (undo-tree-id17436 . -3590) (undo-tree-id17437 . -3590) (undo-tree-id17438 . -3590) (undo-tree-id17439 . -3590) (undo-tree-id17440 . -3590) (undo-tree-id17441 . -3590) (undo-tree-id17442 . -3590) (undo-tree-id17443 . -3590) (undo-tree-id17444 . -3590) (undo-tree-id17445 . -3590) (undo-tree-id17446 . -3590) (undo-tree-id17447 . -3590) (undo-tree-id17448 . -2309) (undo-tree-id17449 . -3590) (undo-tree-id17450 . -3590) (undo-tree-id17451 . -3590) (undo-tree-id17452 . -3590) (undo-tree-id17453 . -3590) (undo-tree-id17454 . -3590) (undo-tree-id17455 . -3590) (undo-tree-id17456 . -3590) (undo-tree-id17457 . -3590) (undo-tree-id17458 . -3590) (undo-tree-id17459 . -3590) (undo-tree-id17460 . -3590) (undo-tree-id17461 . -3117) (undo-tree-id17462 . -3117) (undo-tree-id17463 . -1368) (undo-tree-id17464 . -3117) (undo-tree-id17465 . -3117) (undo-tree-id17466 . -3117) (undo-tree-id17467 . -3117) (undo-tree-id17468 . -3117) (undo-tree-id17469 . -3117) (undo-tree-id17470 . -3117) (undo-tree-id17471 . -3117) (undo-tree-id17472 . -3117) (undo-tree-id17473 . -3117) (undo-tree-id17474 . -3117) (undo-tree-id17475 . -3117) (undo-tree-id17476 . -3117) (undo-tree-id17477 . -3117) (undo-tree-id17478 . -1673) (undo-tree-id17479 . -3117) (undo-tree-id17480 . -3117) (undo-tree-id17481 . -3117) (undo-tree-id17482 . -3117) (undo-tree-id17483 . -3117) (undo-tree-id17484 . -3117) (undo-tree-id17485 . -3117) (undo-tree-id17486 . -3117) (undo-tree-id17487 . -3117) (undo-tree-id17488 . -3117) (undo-tree-id17489 . -3117) (undo-tree-id17490 . -3117) (undo-tree-id17491 . -3117) (undo-tree-id17492 . -3117) (undo-tree-id17493 . -2115) (undo-tree-id17494 . -3117) (undo-tree-id17495 . -3117) (undo-tree-id17496 . -3117) (undo-tree-id17497 . -3117) (undo-tree-id17498 . -3117) (undo-tree-id17499 . -3117) (undo-tree-id17500 . -3117) (undo-tree-id17501 . -3117) (undo-tree-id17502 . -3117) (undo-tree-id17503 . -3117) (undo-tree-id17504 . -3117) (undo-tree-id17505 . -3117) (undo-tree-id17506 . -3117) (undo-tree-id17507 . -3117) (undo-tree-id17508 . -2737) (undo-tree-id17509 . -3117) (undo-tree-id17510 . -3117) (undo-tree-id17511 . -3117) (undo-tree-id17512 . -3117) (undo-tree-id17513 . -3117) (undo-tree-id17514 . -3117) (undo-tree-id17515 . -3117) (undo-tree-id17516 . -3117) (undo-tree-id17517 . -3117) (undo-tree-id17518 . -3117) (undo-tree-id17519 . -3117) (undo-tree-id17520 . -3117) (undo-tree-id17521 . -3590) (undo-tree-id17522 . -3590) (undo-tree-id17523 . -3590) (undo-tree-id17524 . -3590) (undo-tree-id17525 . -3590) (undo-tree-id17526 . -3590) (undo-tree-id17527 . -3590) (undo-tree-id17528 . -3590) (undo-tree-id17529 . -3590) (undo-tree-id17530 . -3590) (undo-tree-id17531 . -3590) (undo-tree-id17532 . -3590) (undo-tree-id17533 . -3590) (undo-tree-id17534 . -3590) (undo-tree-id17535 . -3590) (undo-tree-id17536 . -3771) (undo-tree-id17537 . -3771) (undo-tree-id17538 . -3771) (undo-tree-id17539 . -3771) (undo-tree-id17540 . -3771) (undo-tree-id17541 . -3771) (undo-tree-id17542 . -3771) (undo-tree-id17543 . -3771) (undo-tree-id17544 . -3771) (undo-tree-id17545 . -3771) (undo-tree-id17546 . -3771) (undo-tree-id17547 . -3771) (undo-tree-id17548 . -3771) (undo-tree-id17549 . -3771) (undo-tree-id17550 . -3771) (undo-tree-id17551 . -3771) (undo-tree-id17552 . -3771) (undo-tree-id17553 . -3590) (undo-tree-id17554 . -3771) (undo-tree-id17555 . -3771) (undo-tree-id17556 . -3771) (undo-tree-id17557 . -3771) (undo-tree-id17558 . -3771) (undo-tree-id17559 . -3771) (undo-tree-id17560 . -3771) (undo-tree-id17561 . -3771) (undo-tree-id17562 . -3771) (undo-tree-id17563 . -3771) (undo-tree-id17564 . -3771) (undo-tree-id17565 . -3771) (undo-tree-id17566 . -3771) (undo-tree-id17567 . -3771) (undo-tree-id17568 . -3169) (undo-tree-id17569 . -3771) (undo-tree-id17570 . -3771) (undo-tree-id17571 . -3771) (undo-tree-id17572 . -3771) (undo-tree-id17573 . -3771) (undo-tree-id17574 . -3771) (undo-tree-id17575 . -3771) (undo-tree-id17576 . -3771) (undo-tree-id17577 . -3771) (undo-tree-id17578 . -3771) (undo-tree-id17579 . -3771) (undo-tree-id17580 . -3771) (undo-tree-id17581 . -3771) (undo-tree-id17582 . -3771) (undo-tree-id17583 . -2496) (undo-tree-id17584 . -3771) (undo-tree-id17585 . -3771) (undo-tree-id17586 . -3771) (undo-tree-id17587 . -3771) (undo-tree-id17588 . -3771) (undo-tree-id17589 . -3771) (undo-tree-id17590 . -3771) (undo-tree-id17591 . -3771) (undo-tree-id17592 . -3771) (undo-tree-id17593 . -3771) (undo-tree-id17594 . -3771) (undo-tree-id17595 . -3771) (undo-tree-id17596 . -3305) (undo-tree-id17597 . -3305) (undo-tree-id17598 . -1673) (undo-tree-id17599 . -3305) (undo-tree-id17600 . -3305) (undo-tree-id17601 . -3305) (undo-tree-id17602 . -3305) (undo-tree-id17603 . -3305) (undo-tree-id17604 . -3305) (undo-tree-id17605 . -3305) (undo-tree-id17606 . -3305) (undo-tree-id17607 . -3305) (undo-tree-id17608 . -3305) (undo-tree-id17609 . -3305) (undo-tree-id17610 . -3305) (undo-tree-id17611 . -2199) (undo-tree-id17612 . -2199) (undo-tree-id17613 . -441) (undo-tree-id17614 . -2199) (undo-tree-id17615 . -2199) (undo-tree-id17616 . -2199) (undo-tree-id17617 . -2199) (undo-tree-id17618 . -2199) (undo-tree-id17619 . -2199) (undo-tree-id17620 . -2199) (undo-tree-id17621 . -2199) (undo-tree-id17622 . -2199) (undo-tree-id17623 . -2199) (undo-tree-id17624 . -2199) (undo-tree-id17625 . -2199) (undo-tree-id17626 . -778) (undo-tree-id17627 . -778) (undo-tree-id17628 . -778) (undo-tree-id17629 . -778) (undo-tree-id17630 . -778) (undo-tree-id17631 . -778) (undo-tree-id17632 . -778) (undo-tree-id17633 . -778) (undo-tree-id17634 . -778) (undo-tree-id17635 . -778) (undo-tree-id17636 . -778) (undo-tree-id17637 . -778) (undo-tree-id17638 . -778) (undo-tree-id17639 . -778) (undo-tree-id17640 . -778) (undo-tree-id17641 . -778) (undo-tree-id17642 . -778) (undo-tree-id17643 . -778) (undo-tree-id17644 . -778) (undo-tree-id17645 . -778) (undo-tree-id17646 . -778) (undo-tree-id17647 . -778) (undo-tree-id17648 . -778) (undo-tree-id17649 . -395) (undo-tree-id17650 . -395) (undo-tree-id17651 . -395) (undo-tree-id17652 . -395) (undo-tree-id17653 . -395) (undo-tree-id17654 . -395) (undo-tree-id17655 . -395) (undo-tree-id17656 . -394) (undo-tree-id17657 . -395) (undo-tree-id17658 . -394) (undo-tree-id17659 . -395) (undo-tree-id17660 . -394) (undo-tree-id17661 . -394) (undo-tree-id17662 . -394) (undo-tree-id17663 . -394) (undo-tree-id17664 . -394) (undo-tree-id17665 . -394) (undo-tree-id17666 . -394) (undo-tree-id17667 . -394) (undo-tree-id17668 . -394) (undo-tree-id17669 . -394) (undo-tree-id17670 . -394) (undo-tree-id17671 . -394) (undo-tree-id17672 . -394) (undo-tree-id17673 . -394) (undo-tree-id17674 . -394) (undo-tree-id17675 . -394) (undo-tree-id17676 . -394) (undo-tree-id17677 . -394) (undo-tree-id17678 . -394) (undo-tree-id17679 . -9501) (undo-tree-id17680 . -394) (undo-tree-id17681 . -394) (undo-tree-id17682 . -394) (undo-tree-id17683 . -394) (undo-tree-id17684 . -394) (undo-tree-id17685 . -394) (undo-tree-id17686 . -394) (undo-tree-id17687 . -394) (undo-tree-id17688 . -394) (undo-tree-id17689 . -394) (undo-tree-id17690 . -394) (undo-tree-id17691 . -394) (undo-tree-id17692 . -394) (undo-tree-id17693 . -394) (undo-tree-id17694 . -394) (undo-tree-id17695 . -394) (undo-tree-id17696 . -394) (undo-tree-id17697 . -394) (undo-tree-id17698 . -394) (undo-tree-id17699 . -394) (undo-tree-id17700 . -394) (undo-tree-id17701 . -394) (undo-tree-id17702 . -394) (undo-tree-id17703 . -394) (undo-tree-id17704 . -394) (undo-tree-id17705 . -394) (undo-tree-id17706 . -394) (undo-tree-id17707 . -394) (undo-tree-id17708 . -394) (undo-tree-id17709 . -394) (undo-tree-id17710 . -394) (undo-tree-id17711 . -394) (undo-tree-id17712 . -394) (undo-tree-id17713 . -394) (undo-tree-id17714 . -394) (undo-tree-id17715 . -394) (undo-tree-id17716 . -394) (undo-tree-id17717 . -394) (undo-tree-id17718 . -394) (undo-tree-id17719 . -394) (undo-tree-id17720 . -394) (undo-tree-id17721 . -394) (undo-tree-id17722 . -394) (undo-tree-id17723 . -394) (undo-tree-id17724 . -394) (undo-tree-id17725 . -394) (undo-tree-id17726 . -394) (undo-tree-id17727 . -394) (undo-tree-id17728 . -394) (undo-tree-id17729 . -394) (undo-tree-id17730 . -394) (undo-tree-id17731 . -394) (undo-tree-id17732 . -394) (undo-tree-id17733 . -394) (undo-tree-id17734 . -394) (undo-tree-id17735 . -394) (undo-tree-id17736 . -394) (undo-tree-id17737 . -394) (undo-tree-id17738 . -394) (undo-tree-id17739 . -394) (undo-tree-id17740 . -394) (undo-tree-id17741 . -394) (undo-tree-id17742 . -394) (undo-tree-id17743 . -394) (undo-tree-id17744 . -394) (undo-tree-id17745 . -394) (undo-tree-id17746 . -394) (undo-tree-id17747 . -394) (undo-tree-id17748 . -394) (undo-tree-id17749 . -394) (undo-tree-id17750 . -394) (undo-tree-id17751 . -394) (undo-tree-id17752 . -394) (undo-tree-id17753 . -394) (undo-tree-id17754 . -394) (undo-tree-id17755 . -394) (undo-tree-id17756 . -394) (undo-tree-id17757 . -394) (undo-tree-id17758 . -394) (undo-tree-id17759 . -394) (undo-tree-id17760 . -394) (undo-tree-id17761 . -394) (undo-tree-id17762 . -394) (undo-tree-id17763 . -394) (undo-tree-id17764 . -394) (undo-tree-id17765 . -394) (undo-tree-id17766 . -394) (undo-tree-id17767 . -394) (undo-tree-id17768 . -394) (undo-tree-id17769 . -394) (undo-tree-id17770 . -394) (undo-tree-id17771 . -394) (undo-tree-id17772 . -394) (undo-tree-id17773 . -394) (undo-tree-id17774 . -394) (undo-tree-id17775 . -394) (undo-tree-id17776 . -394) (undo-tree-id17777 . -394) (undo-tree-id17778 . -394) (undo-tree-id17779 . -394) (undo-tree-id17780 . -394) (undo-tree-id17781 . -394) (undo-tree-id17782 . -394) (undo-tree-id17783 . -394) (undo-tree-id17784 . -394) (undo-tree-id17785 . -394) (undo-tree-id17786 . -394) (undo-tree-id17787 . -394) (undo-tree-id17788 . -394) (undo-tree-id17789 . -394) (undo-tree-id17790 . -394) (undo-tree-id17791 . -394) (undo-tree-id17792 . -394) (undo-tree-id17793 . -394) (undo-tree-id17794 . -394) (undo-tree-id17795 . -394) (undo-tree-id17796 . -394) (undo-tree-id17797 . -394) (undo-tree-id17798 . -394) (undo-tree-id17799 . -394) (undo-tree-id17800 . -394) (undo-tree-id17801 . -394) (undo-tree-id17802 . -394) (undo-tree-id17803 . -394) (undo-tree-id17804 . -394) (undo-tree-id17805 . -394) (undo-tree-id17806 . -394) (undo-tree-id17807 . -394) (undo-tree-id17808 . -394) (undo-tree-id17809 . -394) (undo-tree-id17810 . -394) (undo-tree-id17811 . -394) (undo-tree-id17812 . -394) (undo-tree-id17813 . -394) (undo-tree-id17814 . -394) (undo-tree-id17815 . -394) (undo-tree-id17816 . -394) (undo-tree-id17817 . -394) (undo-tree-id17818 . -394) (undo-tree-id17819 . -394) (undo-tree-id17820 . -394) (undo-tree-id17821 . -394) (undo-tree-id17822 . -394) (undo-tree-id17823 . -394) (undo-tree-id17824 . -394) (undo-tree-id17825 . -394) (undo-tree-id17826 . -394) (undo-tree-id17827 . -394) (undo-tree-id17828 . -394) (undo-tree-id17829 . -394) (undo-tree-id17830 . -394) (undo-tree-id17831 . -394) (undo-tree-id17832 . -394) (undo-tree-id17833 . -394) (undo-tree-id17834 . -394) (undo-tree-id17835 . -394) (undo-tree-id17836 . -394) (undo-tree-id17837 . -394) (undo-tree-id17838 . -394) (undo-tree-id17839 . -394) (undo-tree-id17840 . -394) (undo-tree-id17841 . -394) (undo-tree-id17842 . -394) (undo-tree-id17843 . -394) (undo-tree-id17844 . -394) (undo-tree-id17845 . -394) (undo-tree-id17846 . -394) (undo-tree-id17847 . -394) (undo-tree-id17848 . -394) (undo-tree-id17849 . -394) (undo-tree-id17850 . -394) (undo-tree-id17851 . -394) (undo-tree-id17852 . -394) (undo-tree-id17853 . -394) (undo-tree-id17854 . -394) (undo-tree-id17855 . -394) (undo-tree-id17856 . -394) (undo-tree-id17857 . -394) (undo-tree-id17858 . -394) (undo-tree-id17859 . -394) (undo-tree-id17860 . -394) (undo-tree-id17861 . -394) (undo-tree-id17862 . -394) (undo-tree-id17863 . -394) (undo-tree-id17864 . -394) (undo-tree-id17865 . -394) (undo-tree-id17866 . -394) (undo-tree-id17867 . -394) (undo-tree-id17868 . -394) (undo-tree-id17869 . -394) (undo-tree-id17870 . -394) (undo-tree-id17871 . -394) (undo-tree-id17872 . -394) (undo-tree-id17873 . -394) (undo-tree-id17874 . -394) (undo-tree-id17875 . -394) (undo-tree-id17876 . -394) (undo-tree-id17877 . -394) (undo-tree-id17878 . -394) (undo-tree-id17879 . -394) (undo-tree-id17880 . -394) (undo-tree-id17881 . -394) (undo-tree-id17882 . -394) (undo-tree-id17883 . -394) (undo-tree-id17884 . -394) (undo-tree-id17885 . -394) (undo-tree-id17886 . -394) (undo-tree-id17887 . -394) (undo-tree-id17888 . -394) (undo-tree-id17889 . -394) (undo-tree-id17890 . -394) (undo-tree-id17891 . -394) (undo-tree-id17892 . -394) (undo-tree-id17893 . -394) (undo-tree-id17894 . -394) (undo-tree-id17895 . -394) (undo-tree-id17896 . -394) (undo-tree-id17897 . -394) (undo-tree-id17898 . -394) (undo-tree-id17899 . -394) 67250) nil (25151 37253 297320 278000) 0 nil])
([nil nil ((73242 . 76604) (#("
" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 73242) 73240) nil (25151 37253 293747 772000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 76603) (undo-tree-id17227 . -1)) nil (25151 37253 293735 340000) 0 nil])
([nil nil ((#("(" 0 1 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -76822) (undo-tree-id18200 . -1) (undo-tree-id18201 . -1) (undo-tree-id18202 . -1) (undo-tree-id18203 . -1) (undo-tree-id18204 . -1) (undo-tree-id18205 . -1) (undo-tree-id18206 . -1) (undo-tree-id18207 . -1) (undo-tree-id18208 . -1) (undo-tree-id18209 . -1) (#(")" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 76823) (undo-tree-id18210 . -1) (76822 . 76824) (76820 . 76822) (76818 . 76820) (#("l" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -76818) (undo-tree-id18211 . -1) (undo-tree-id18212 . -1) (undo-tree-id18213 . -1) (undo-tree-id18214 . -1) (undo-tree-id18215 . -1) (undo-tree-id18216 . -1) (undo-tree-id18217 . -1) (undo-tree-id18218 . -1) (undo-tree-id18219 . -1) (undo-tree-id18220 . -1) (undo-tree-id18221 . -1) (undo-tree-id18222 . -1) (undo-tree-id18223 . -1) (undo-tree-id18224 . -1) (undo-tree-id18225 . -1) (undo-tree-id18226 . -1) (undo-tree-id18227 . -1) (undo-tree-id18228 . -1) (undo-tree-id18229 . -1) (undo-tree-id18230 . -1) (undo-tree-id18231 . -1) (undo-tree-id18232 . -1) (undo-tree-id18233 . -1) (undo-tree-id18234 . -1) (undo-tree-id18235 . -1) (undo-tree-id18236 . -1) (#("e" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -76819) (undo-tree-id18237 . -1) (undo-tree-id18238 . -1) (undo-tree-id18239 . -1) (undo-tree-id18240 . -1) (undo-tree-id18241 . -1) (undo-tree-id18242 . -1) (undo-tree-id18243 . -1) (undo-tree-id18244 . -1) (undo-tree-id18245 . -1) (undo-tree-id18246 . -1) 76820 (76818 . 76820) (76797 . 76818) (#("s" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -76797) (undo-tree-id18247 . -1) (undo-tree-id18248 . -1) (undo-tree-id18249 . -1) (undo-tree-id18250 . -1) (undo-tree-id18251 . -1) (undo-tree-id18252 . -1) (undo-tree-id18253 . -1) (undo-tree-id18254 . -1) (undo-tree-id18255 . -1) (undo-tree-id18256 . -1) (undo-tree-id18257 . -1) (undo-tree-id18258 . -1) (undo-tree-id18259 . -1) (undo-tree-id18260 . -1) (undo-tree-id18261 . -1) (undo-tree-id18262 . -1) (undo-tree-id18263 . -1) (undo-tree-id18264 . -1) (undo-tree-id18265 . -1) (undo-tree-id18266 . -1) (undo-tree-id18267 . -1) (undo-tree-id18268 . -1) (undo-tree-id18269 . -1) (undo-tree-id18270 . -1) (undo-tree-id18271 . -1) (undo-tree-id18272 . -1) (#("n" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -76798) (undo-tree-id18273 . -1) (undo-tree-id18274 . -1) (undo-tree-id18275 . -1) (undo-tree-id18276 . -1) (undo-tree-id18277 . -1) (undo-tree-id18278 . -1) (undo-tree-id18279 . -1) (undo-tree-id18280 . -1) (undo-tree-id18281 . -1) (undo-tree-id18282 . -1) 76799 (76790 . 76799) (76789 . 76790) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 76789 76821 nil nil nil t #s(yas--field 2 76821 76821 nil nil nil nil nil)) #s(yas--field 2 76821 76821 nil nil nil nil nil)) nil 1 nil #s(yas--field 1 76789 76821 nil nil nil t #s(yas--field 2 76821 76821 nil nil nil nil nil)) nil nil)) (76777 . 76800) (#("\\s" 0 2 (fontified t)) . 76777) (undo-tree-id18283 . -2) (undo-tree-id18284 . -1) (undo-tree-id18285 . -1) (undo-tree-id18286 . -1) (undo-tree-id18287 . -1) (undo-tree-id18288 . -1) (undo-tree-id18289 . -1) (undo-tree-id18290 . -1) (undo-tree-id18291 . -2) (undo-tree-id18292 . -1) (undo-tree-id18293 . -2) (undo-tree-id18294 . -2) (undo-tree-id18295 . -2) (undo-tree-id18296 . -2) (undo-tree-id18297 . -2) (undo-tree-id18298 . -2) (undo-tree-id18299 . -2) (undo-tree-id18300 . -2) 76779 (76777 . 76779) (76777 . 76778) (76776 . 76777) (t 25151 37253 401980 576000) 76775) nil (25151 37290 264251 57000) 0 nil])
([nil nil ((76821 . 76885) (apply yas--snippet-revive 76777 76830 #s(yas--snippet nil (#s(yas--field 1 76789 76821 nil nil nil t #s(yas--field 2 76821 76821 nil nil nil nil nil)) #s(yas--field 2 76821 76821 nil nil nil nil nil)) nil 1 nil #s(yas--field 1 76789 76821 nil nil nil t #s(yas--field 2 76821 76821 nil nil nil nil nil)) nil nil)) (#("


" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 1 2 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 2 3 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 76821) (undo-tree-id17971 . 2) (undo-tree-id17972 . -1) (undo-tree-id17973 . -1) (undo-tree-id17974 . -1) (undo-tree-id17975 . -1) (undo-tree-id17976 . -2) (undo-tree-id17977 . -2) (undo-tree-id17978 . 2) (undo-tree-id17979 . -2) (undo-tree-id17980 . 2) (undo-tree-id17981 . 3) (undo-tree-id17982 . -1) (undo-tree-id17983 . -1) (undo-tree-id17984 . -1) (undo-tree-id17985 . -1) (undo-tree-id17986 . -1) (undo-tree-id17987 . -1) (undo-tree-id17988 . -1) (undo-tree-id17989 . -1) (undo-tree-id17990 . -1) (undo-tree-id17991 . -1) (undo-tree-id17992 . -1) (undo-tree-id17993 . -1) (undo-tree-id17994 . -1) (undo-tree-id17995 . -1) (undo-tree-id17996 . -1) (undo-tree-id17997 . -1) (undo-tree-id17998 . -1) (undo-tree-id17999 . -1) (undo-tree-id18000 . -1) (undo-tree-id18001 . -1) (undo-tree-id18002 . -1) (undo-tree-id18003 . -1) (undo-tree-id18004 . -1) (undo-tree-id18005 . -1) (undo-tree-id18006 . -1) (undo-tree-id18007 . -1) (undo-tree-id18008 . -1) (undo-tree-id18009 . -1) (undo-tree-id18010 . -1) (undo-tree-id18011 . -1) (undo-tree-id18012 . -1) (undo-tree-id18013 . -1) (undo-tree-id18014 . -1) (undo-tree-id18015 . -1) (undo-tree-id18016 . -1) (undo-tree-id18017 . -1) (undo-tree-id18018 . -1) (undo-tree-id18019 . -1) (undo-tree-id18020 . -1) (undo-tree-id18021 . -1) (undo-tree-id18022 . -1) (undo-tree-id18023 . -1) (undo-tree-id18024 . -1) (undo-tree-id18025 . -1) (undo-tree-id18026 . -1) (undo-tree-id18027 . -1) (undo-tree-id18028 . -1) (undo-tree-id18029 . -1) (undo-tree-id18030 . -1) (undo-tree-id18031 . -1) (undo-tree-id18032 . -1) (undo-tree-id18033 . -1) (undo-tree-id18034 . -1) (undo-tree-id18035 . -1) (undo-tree-id18036 . -1) (undo-tree-id18037 . -1) (undo-tree-id18038 . -1) (undo-tree-id18039 . -1) (undo-tree-id18040 . -1) (undo-tree-id18041 . -1) (undo-tree-id18042 . -1) (undo-tree-id18043 . -1) (undo-tree-id18044 . -1) (undo-tree-id18045 . -1) (undo-tree-id18046 . -1) (undo-tree-id18047 . -1) (undo-tree-id18048 . -1) (undo-tree-id18049 . -1) (undo-tree-id18050 . -1) (undo-tree-id18051 . -1) (undo-tree-id18052 . -1) (undo-tree-id18053 . -1) (undo-tree-id18054 . -1) (undo-tree-id18055 . -1) (undo-tree-id18056 . -1) (undo-tree-id18057 . -1) (undo-tree-id18058 . -1) (undo-tree-id18059 . -1) (undo-tree-id18060 . -1) (undo-tree-id18061 . -1) (undo-tree-id18062 . -1) (undo-tree-id18063 . -1) (undo-tree-id18064 . -1) (undo-tree-id18065 . -1) (undo-tree-id18066 . -1) (undo-tree-id18067 . -1) (undo-tree-id18068 . -1) (undo-tree-id18069 . -1) (undo-tree-id18070 . -1) (undo-tree-id18071 . -1) (undo-tree-id18072 . -1) (undo-tree-id18073 . -1) (undo-tree-id18074 . -1) (undo-tree-id18075 . -1) (undo-tree-id18076 . -1) (undo-tree-id18077 . -1) (undo-tree-id18078 . -1) (undo-tree-id18079 . -1) (undo-tree-id18080 . -1) (undo-tree-id18081 . -1) (undo-tree-id18082 . -1) (undo-tree-id18083 . -1) (undo-tree-id18084 . -1) (undo-tree-id18085 . -1) (undo-tree-id18086 . -1) (undo-tree-id18087 . -1) (undo-tree-id18088 . -1) (undo-tree-id18089 . -1) (undo-tree-id18090 . -1) (undo-tree-id18091 . -1) (undo-tree-id18092 . -1) (undo-tree-id18093 . -1) (undo-tree-id18094 . -1) (undo-tree-id18095 . -1) (undo-tree-id18096 . -1) (undo-tree-id18097 . -1) (undo-tree-id18098 . -1) (undo-tree-id18099 . -1) (undo-tree-id18100 . -1) (undo-tree-id18101 . -1) (undo-tree-id18102 . -1) (undo-tree-id18103 . -1) (undo-tree-id18104 . -1) (undo-tree-id18105 . -1) (undo-tree-id18106 . -1) (undo-tree-id18107 . -1) (undo-tree-id18108 . -1) (undo-tree-id18109 . -1) (undo-tree-id18110 . -1) (undo-tree-id18111 . -1) (undo-tree-id18112 . -1) (undo-tree-id18113 . -1) (undo-tree-id18114 . -1) (undo-tree-id18115 . -1) (undo-tree-id18116 . -1) (undo-tree-id18117 . -1) (undo-tree-id18118 . -1) (undo-tree-id18119 . -1) (undo-tree-id18120 . -1) (undo-tree-id18121 . -1) (undo-tree-id18122 . -1) (undo-tree-id18123 . -1) (undo-tree-id18124 . -1) (undo-tree-id18125 . -1) (undo-tree-id18126 . -1) (undo-tree-id18127 . -1) (undo-tree-id18128 . -1) (undo-tree-id18129 . -1) (undo-tree-id18130 . -1) (undo-tree-id18131 . -1) (undo-tree-id18132 . -1) (undo-tree-id18133 . -1) (undo-tree-id18134 . -1) (undo-tree-id18135 . -1) (undo-tree-id18136 . -1) (undo-tree-id18137 . -1) (undo-tree-id18138 . -1) (undo-tree-id18139 . -1) (undo-tree-id18140 . -1) (undo-tree-id18141 . -1) (undo-tree-id18142 . -1) (undo-tree-id18143 . -1) (undo-tree-id18144 . -1) (undo-tree-id18145 . -1) (undo-tree-id18146 . -1) (undo-tree-id18147 . -1) (undo-tree-id18148 . -1) (undo-tree-id18149 . -1) (undo-tree-id18150 . -1) (undo-tree-id18151 . -1) (undo-tree-id18152 . -1) (undo-tree-id18153 . -1) (undo-tree-id18154 . -1) (undo-tree-id18155 . -1) (undo-tree-id18156 . -1) (undo-tree-id18157 . -1) (undo-tree-id18158 . -1) (undo-tree-id18159 . -1) (undo-tree-id18160 . -1) (undo-tree-id18161 . -1) (undo-tree-id18162 . -1) (undo-tree-id18163 . -1) (undo-tree-id18164 . -1) (undo-tree-id18165 . -1) (undo-tree-id18166 . -1) (undo-tree-id18167 . -1) (undo-tree-id18168 . -1) (undo-tree-id18169 . -1) (undo-tree-id18170 . -1) (undo-tree-id18171 . -1) (undo-tree-id18172 . -1) (undo-tree-id18173 . -1) (undo-tree-id18174 . -1) (undo-tree-id18175 . -1) (undo-tree-id18176 . -1) (undo-tree-id18177 . -1) (undo-tree-id18178 . -1) (undo-tree-id18179 . -1) (undo-tree-id18180 . -1) (undo-tree-id18181 . -1) (undo-tree-id18182 . -1) (undo-tree-id18183 . -1) (undo-tree-id18184 . -1) (undo-tree-id18185 . -1) (undo-tree-id18186 . -1) (undo-tree-id18187 . -1) (undo-tree-id18188 . -1) (undo-tree-id18189 . -1) (undo-tree-id18190 . -1) (undo-tree-id18191 . -1) (undo-tree-id18192 . -1) (undo-tree-id18193 . -1) (undo-tree-id18194 . -1) (undo-tree-id18195 . -1) (undo-tree-id18196 . -1) (undo-tree-id18197 . -1) (undo-tree-id18198 . -1) (undo-tree-id18199 . -1) 76822) nil (25151 37290 262986 421000) 0 nil])
([nil nil ((#("I have a decent amount of notes that are on scientific articles taken with ~org-noter~." 0 75 (fontified t) 75 76 (fontified t font-lock-multiline t org-emphasis t invisible org-link) 76 85 (fontified t face (org-code) font-lock-multiline t org-emphasis t) 85 86 (fontified t font-lock-multiline t org-emphasis t invisible org-link) 86 87 (fontified t)) . 66121) (undo-tree-id20375 . -86) (undo-tree-id20376 . -86) (undo-tree-id20377 . -86) (undo-tree-id20378 . -36) (undo-tree-id20379 . -36) (undo-tree-id20380 . -36) (undo-tree-id20381 . -36) (undo-tree-id20382 . -36) (undo-tree-id20383 . -36) (undo-tree-id20384 . -36) (undo-tree-id20385 . -36) (undo-tree-id20386 . -36) (undo-tree-id20387 . -36) (undo-tree-id20388 . -36) (undo-tree-id20389 . -36) (undo-tree-id20390 . -36) (undo-tree-id20391 . -36) (undo-tree-id20392 . -36) (undo-tree-id20393 . -36) (undo-tree-id20394 . -36) (undo-tree-id20395 . -36) (undo-tree-id20396 . -36) (undo-tree-id20397 . -36) (undo-tree-id20398 . -36) (undo-tree-id20399 . -36) (undo-tree-id20400 . -36) (undo-tree-id20401 . -36) (undo-tree-id20402 . -36) (undo-tree-id20403 . -36) (undo-tree-id20404 . -36) (undo-tree-id20405 . -36) (undo-tree-id20406 . -36) (undo-tree-id20407 . -36) (undo-tree-id20408 . -36) (undo-tree-id20409 . -36) (undo-tree-id20410 . -36) (undo-tree-id20411 . -36) (undo-tree-id20412 . -36) (undo-tree-id20413 . -36) (undo-tree-id20414 . -36) (undo-tree-id20415 . -36) (undo-tree-id20416 . -36) (undo-tree-id20417 . -36) (undo-tree-id20418 . -36) (undo-tree-id20419 . -36) (undo-tree-id20420 . -36) (undo-tree-id20421 . -36) (undo-tree-id20422 . -36) (undo-tree-id20423 . -36) (undo-tree-id20424 . -36) (undo-tree-id20425 . -36) (undo-tree-id20426 . -36) (undo-tree-id20427 . -36) (undo-tree-id20428 . -36) (undo-tree-id20429 . -36) (undo-tree-id20430 . -36) (undo-tree-id20431 . -36) (undo-tree-id20432 . -36) (undo-tree-id20433 . -36) (undo-tree-id20434 . -36) (undo-tree-id20435 . -36) (undo-tree-id20436 . -86) (undo-tree-id20437 . -87) (undo-tree-id20438 . -2) (undo-tree-id20439 . -2) (undo-tree-id20440 . -2) (undo-tree-id20441 . -2) (undo-tree-id20442 . -2) (undo-tree-id20443 . -2) (undo-tree-id20444 . -2) (undo-tree-id20445 . -2) (undo-tree-id20446 . -2) (undo-tree-id20447 . -2) (undo-tree-id20448 . -13) (undo-tree-id20449 . -13) (undo-tree-id20450 . -13) (undo-tree-id20451 . -13) (undo-tree-id20452 . -13) (undo-tree-id20453 . -21) (undo-tree-id20454 . -21) (undo-tree-id20455 . -21) (undo-tree-id20456 . -21) (undo-tree-id20457 . -21) (undo-tree-id20458 . -21) (undo-tree-id20459 . -21) (undo-tree-id20460 . -21) (undo-tree-id20461 . -21) (undo-tree-id20462 . -21) (undo-tree-id20463 . -32) (undo-tree-id20464 . -32) (undo-tree-id20465 . -32) (undo-tree-id20466 . -32) (undo-tree-id20467 . -32) (undo-tree-id20468 . -32) (undo-tree-id20469 . -32) (undo-tree-id20470 . -32) (undo-tree-id20471 . -32) (undo-tree-id20472 . -32) (undo-tree-id20473 . -42) (undo-tree-id20474 . -42) (undo-tree-id20475 . -42) (undo-tree-id20476 . -42) (undo-tree-id20477 . -42) (undo-tree-id20478 . -42) (undo-tree-id20479 . -42) (undo-tree-id20480 . -42) (undo-tree-id20481 . -42) (undo-tree-id20482 . -42) (undo-tree-id20483 . -49) (undo-tree-id20484 . -49) (undo-tree-id20485 . -49) (undo-tree-id20486 . -49) (undo-tree-id20487 . -49) (undo-tree-id20488 . -49) (undo-tree-id20489 . -49) (undo-tree-id20490 . -49) (undo-tree-id20491 . -49) (undo-tree-id20492 . -49) (undo-tree-id20493 . -55) (undo-tree-id20494 . -55) (undo-tree-id20495 . -55) (undo-tree-id20496 . -55) (undo-tree-id20497 . -55) (undo-tree-id20498 . -55) (undo-tree-id20499 . -55) (undo-tree-id20500 . -55) (undo-tree-id20501 . -55) (undo-tree-id20502 . -55) (undo-tree-id20503 . -67) (undo-tree-id20504 . -67) (undo-tree-id20505 . -67) (undo-tree-id20506 . -67) (undo-tree-id20507 . -67) (undo-tree-id20508 . -67) (undo-tree-id20509 . -67) (undo-tree-id20510 . -67) (undo-tree-id20511 . -67) (undo-tree-id20512 . -67) (undo-tree-id20513 . -69) (undo-tree-id20514 . -69) (undo-tree-id20515 . -69) (undo-tree-id20516 . -69) (undo-tree-id20517 . -69) (undo-tree-id20518 . -69) (undo-tree-id20519 . -69) (undo-tree-id20520 . -69) (undo-tree-id20521 . -69) (undo-tree-id20522 . -69) (undo-tree-id20523 . -73) (undo-tree-id20524 . -73) (undo-tree-id20525 . -73) (undo-tree-id20526 . -73) (undo-tree-id20527 . -73) (undo-tree-id20528 . -73) (undo-tree-id20529 . -73) (undo-tree-id20530 . -73) (undo-tree-id20531 . -73) (undo-tree-id20532 . -73) (undo-tree-id20533 . -74) (undo-tree-id20534 . -74) (undo-tree-id20535 . -74) (undo-tree-id20536 . -74) (undo-tree-id20537 . -74) (undo-tree-id20538 . -74) (undo-tree-id20539 . -74) (undo-tree-id20540 . -74) (undo-tree-id20541 . -74) (undo-tree-id20542 . -74) (undo-tree-id20543 . -80) (undo-tree-id20544 . -80) (undo-tree-id20545 . -80) (undo-tree-id20546 . -80) (undo-tree-id20547 . -80) (undo-tree-id20548 . -80) (undo-tree-id20549 . -80) (undo-tree-id20550 . -80) (undo-tree-id20551 . -80) (undo-tree-id20552 . -80) (undo-tree-id20553 . -80) (undo-tree-id20554 . -80) (undo-tree-id20555 . -80) (undo-tree-id20556 . -80) (undo-tree-id20557 . -80) (undo-tree-id20558 . -80) (undo-tree-id20559 . -80) (undo-tree-id20560 . -80) (undo-tree-id20561 . -80) (undo-tree-id20562 . -80) (undo-tree-id20563 . -81) (undo-tree-id20564 . -81) (undo-tree-id20565 . -81) (undo-tree-id20566 . -81) (undo-tree-id20567 . -81) (undo-tree-id20568 . -81) (undo-tree-id20569 . -81) (undo-tree-id20570 . -81) (undo-tree-id20571 . -81) (undo-tree-id20572 . -81) (undo-tree-id20573 . -82) (undo-tree-id20574 . -82) (undo-tree-id20575 . -82) (undo-tree-id20576 . -82) (undo-tree-id20577 . -82) (undo-tree-id20578 . -82) (undo-tree-id20579 . -82) (undo-tree-id20580 . -82) (undo-tree-id20581 . -82) (undo-tree-id20582 . -82) (undo-tree-id20583 . -82) (undo-tree-id20584 . -82) (undo-tree-id20585 . -82) (undo-tree-id20586 . -82) (undo-tree-id20587 . -82) (undo-tree-id20588 . -83) (undo-tree-id20589 . -83) (undo-tree-id20590 . -83) (undo-tree-id20591 . -83) (undo-tree-id20592 . -83) (undo-tree-id20593 . -83) (undo-tree-id20594 . -83) (undo-tree-id20595 . -83) (undo-tree-id20596 . -83) (undo-tree-id20597 . -83) (undo-tree-id20598 . -83) (undo-tree-id20599 . -83) (undo-tree-id20600 . -83) (undo-tree-id20601 . -83) (undo-tree-id20602 . -83) (undo-tree-id20603 . -83) (undo-tree-id20604 . -83) (undo-tree-id20605 . -83) (undo-tree-id20606 . -83) (undo-tree-id20607 . -83) (undo-tree-id20608 . -83) (undo-tree-id20609 . -83) (undo-tree-id20610 . -83) (undo-tree-id20611 . -83) (undo-tree-id20612 . -83) (undo-tree-id20613 . -84) (undo-tree-id20614 . -84) (undo-tree-id20615 . -84) (undo-tree-id20616 . -84) (undo-tree-id20617 . -84) (undo-tree-id20618 . -84) (undo-tree-id20619 . -84) (undo-tree-id20620 . -84) (undo-tree-id20621 . -84) (undo-tree-id20622 . -84) (undo-tree-id20623 . -84) (undo-tree-id20624 . -84) (undo-tree-id20625 . -84) (undo-tree-id20626 . -84) (undo-tree-id20627 . -84) (undo-tree-id20628 . -84) (undo-tree-id20629 . -84) (undo-tree-id20630 . -84) (undo-tree-id20631 . -84) (undo-tree-id20632 . -84) (undo-tree-id20633 . -84) (undo-tree-id20634 . -84) (undo-tree-id20635 . -84) (undo-tree-id20636 . -84) (undo-tree-id20637 . -84) (undo-tree-id20638 . -86) (undo-tree-id20639 . -86) (undo-tree-id20640 . -86) (undo-tree-id20641 . -86) (undo-tree-id20642 . -86) (undo-tree-id20643 . -86) (undo-tree-id20644 . -86) (undo-tree-id20645 . -86) (undo-tree-id20646 . -86) (undo-tree-id20647 . -86) (undo-tree-id20648 . -86) (undo-tree-id20649 . -86) (undo-tree-id20650 . -86) (undo-tree-id20651 . -86) (undo-tree-id20652 . -86) (undo-tree-id20653 . -86) (undo-tree-id20654 . -86) (undo-tree-id20655 . -86) (undo-tree-id20656 . -86) (undo-tree-id20657 . -86) (undo-tree-id20658 . -86) (undo-tree-id20659 . -86) (undo-tree-id20660 . -86) (undo-tree-id20661 . -86) (undo-tree-id20662 . -86) (undo-tree-id20663 . -86) (undo-tree-id20664 . -86) (undo-tree-id20665 . -86) (undo-tree-id20666 . -86) (undo-tree-id20667 . -86) (undo-tree-id20668 . -86) (undo-tree-id20669 . -86) (undo-tree-id20670 . -86) (undo-tree-id20671 . -86) (undo-tree-id20672 . -86) (undo-tree-id20673 . -86) (undo-tree-id20674 . -86) (undo-tree-id20675 . -86) 66207 (t 25151 37290 369008 369000)) nil (25151 37432 281613 780000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -66725) (undo-tree-id20366 . -1) (undo-tree-id20367 . -1) (undo-tree-id20368 . -1) (undo-tree-id20369 . -1) (undo-tree-id20370 . -1) (undo-tree-id20371 . -1) (undo-tree-id20372 . -1) (undo-tree-id20373 . -1) (undo-tree-id20374 . -1) 66726 (66725 . 66726) (66720 . 66725) 66718) nil (25151 37432 281264 219000) 0 nil])
([nil nil ((nil rear-nonsticky nil 66811 . 66812) (nil fontified nil 66725 . 66812) (66725 . 66812) 66724) nil (25151 37432 281249 63000) 0 nil])
([nil nil ((#("    I want to define an insertion function that allows for the correct formatting of these kind of notes. First, I need to have a list of all these nodes, and I need to look at filtering the ~bibtex-completion-candidates~ which I have done through ~zetteldesk-note-refs-p~. Then I need to convert these bibtex objects to org-roam-nodes through their cite key. Then, I can pass that list of nodes in my custom function ~org-roam-node-read*~, which is org-roam-node-read but with an extra argument being the node-list. Finally, I can write the insertion function.
" 0 3 (fontified t) 3 191 (fontified t) 191 192 (fontified t font-lock-multiline t org-emphasis t invisible org-link) 192 220 (fontified t face (org-code) font-lock-multiline t org-emphasis t) 220 221 (fontified t font-lock-multiline t org-emphasis t invisible org-link) 221 248 (fontified t) 248 249 (fontified t font-lock-multiline t org-emphasis t invisible org-link) 249 262 (fontified t face (org-code) font-lock-multiline t org-emphasis t) 262 271 (fontified t face (org-code) font-lock-multiline t org-emphasis t) 271 272 (fontified t font-lock-multiline t org-emphasis t invisible org-link) 272 413 (fontified t) 413 418 (fontified t) 418 419 (fontified t font-lock-multiline t org-emphasis t invisible org-link) 419 438 (fontified t face (org-code) font-lock-multiline t org-emphasis t) 438 439 (fontified t font-lock-multiline t org-emphasis t invisible org-link) 439 500 (fontified t) 500 561 (fontified t) 561 562 (fontified t)) . 66118) (undo-tree-id19947 . -3) (undo-tree-id19948 . 559) (undo-tree-id19949 . -3) (undo-tree-id19950 . -3) (undo-tree-id19951 . 449) (undo-tree-id19952 . -112) (undo-tree-id19953 . -249) (undo-tree-id19954 . -3) (undo-tree-id19955 . -3) (undo-tree-id19956 . -3) (undo-tree-id19957 . -3) (undo-tree-id19958 . -3) (undo-tree-id19959 . -3) (undo-tree-id19960 . -3) (undo-tree-id19961 . -3) (undo-tree-id19962 . -3) (undo-tree-id19963 . -3) (undo-tree-id19964 . -3) (undo-tree-id19965 . -3) (undo-tree-id19966 . -3) (undo-tree-id19967 . -3) (undo-tree-id19968 . -3) (undo-tree-id19969 . -3) (undo-tree-id19970 . -3) (undo-tree-id19971 . -3) (undo-tree-id19972 . -3) (undo-tree-id19973 . -3) (undo-tree-id19974 . -3) (undo-tree-id19975 . -3) (undo-tree-id19976 . -3) (undo-tree-id19977 . -3) (undo-tree-id19978 . -3) (undo-tree-id19979 . -3) (undo-tree-id19980 . -3) (undo-tree-id19981 . -3) (undo-tree-id19982 . -3) (undo-tree-id19983 . -3) (undo-tree-id19984 . -3) (undo-tree-id19985 . -3) (undo-tree-id19986 . -3) (undo-tree-id19987 . -3) (undo-tree-id19988 . -3) (undo-tree-id19989 . -3) (undo-tree-id19990 . -3) (undo-tree-id19991 . -3) (undo-tree-id19992 . -3) (undo-tree-id19993 . -3) (undo-tree-id19994 . -3) (undo-tree-id19995 . -3) (undo-tree-id19996 . -3) (undo-tree-id19997 . -3) (undo-tree-id19998 . -3) (undo-tree-id19999 . -3) (undo-tree-id20000 . -3) (undo-tree-id20001 . -3) (undo-tree-id20002 . -3) (undo-tree-id20003 . -3) (undo-tree-id20004 . -3) (undo-tree-id20005 . -3) (undo-tree-id20006 . -3) (undo-tree-id20007 . -3) (undo-tree-id20008 . -3) (undo-tree-id20009 . -3) (undo-tree-id20010 . -3) (undo-tree-id20011 . -3) (undo-tree-id20012 . -3) (undo-tree-id20013 . -3) (undo-tree-id20014 . -3) (undo-tree-id20015 . -3) (undo-tree-id20016 . -3) (undo-tree-id20017 . -3) (undo-tree-id20018 . -3) (undo-tree-id20019 . -3) (undo-tree-id20020 . -3) (undo-tree-id20021 . -3) (undo-tree-id20022 . -3) (undo-tree-id20023 . -3) (undo-tree-id20024 . -3) (undo-tree-id20025 . -3) (undo-tree-id20026 . -3) (undo-tree-id20027 . -3) (undo-tree-id20028 . -3) (undo-tree-id20029 . -3) (undo-tree-id20030 . -3) (undo-tree-id20031 . -3) (undo-tree-id20032 . -3) (undo-tree-id20033 . -3) (undo-tree-id20034 . -3) (undo-tree-id20035 . -3) (undo-tree-id20036 . -3) (undo-tree-id20037 . -3) (undo-tree-id20038 . -3) (undo-tree-id20039 . -3) (undo-tree-id20040 . -3) (undo-tree-id20041 . -3) (undo-tree-id20042 . -3) (undo-tree-id20043 . -3) (undo-tree-id20044 . -3) (undo-tree-id20045 . -3) (undo-tree-id20046 . -3) (undo-tree-id20047 . -3) (undo-tree-id20048 . -3) (undo-tree-id20049 . -3) (undo-tree-id20050 . -3) (undo-tree-id20051 . -3) (undo-tree-id20052 . -3) (undo-tree-id20053 . -3) (undo-tree-id20054 . -3) (undo-tree-id20055 . -3) (undo-tree-id20056 . -3) (undo-tree-id20057 . -3) (undo-tree-id20058 . -3) (undo-tree-id20059 . -3) (undo-tree-id20060 . -3) (undo-tree-id20061 . -3) (undo-tree-id20062 . -3) (undo-tree-id20063 . -3) (undo-tree-id20064 . -3) (undo-tree-id20065 . -3) (undo-tree-id20066 . -3) (undo-tree-id20067 . -3) (undo-tree-id20068 . -3) (undo-tree-id20069 . -3) (undo-tree-id20070 . -3) (undo-tree-id20071 . -3) (undo-tree-id20072 . -3) (undo-tree-id20073 . -3) (undo-tree-id20074 . -3) (undo-tree-id20075 . -3) (undo-tree-id20076 . -3) (undo-tree-id20077 . -3) (undo-tree-id20078 . -3) (undo-tree-id20079 . -3) (undo-tree-id20080 . -3) (undo-tree-id20081 . -3) (undo-tree-id20082 . -3) (undo-tree-id20083 . -3) (undo-tree-id20084 . -3) (undo-tree-id20085 . -3) (undo-tree-id20086 . -3) (undo-tree-id20087 . -3) (undo-tree-id20088 . -3) (undo-tree-id20089 . -3) (undo-tree-id20090 . -3) (undo-tree-id20091 . -3) (undo-tree-id20092 . -3) (undo-tree-id20093 . -3) (undo-tree-id20094 . -3) (undo-tree-id20095 . -3) (undo-tree-id20096 . -3) (undo-tree-id20097 . -3) (undo-tree-id20098 . -3) (undo-tree-id20099 . -3) (undo-tree-id20100 . -3) (undo-tree-id20101 . -3) (undo-tree-id20102 . -3) (undo-tree-id20103 . -3) (undo-tree-id20104 . -3) (undo-tree-id20105 . -3) (undo-tree-id20106 . -3) (undo-tree-id20107 . -3) (undo-tree-id20108 . -3) (undo-tree-id20109 . -3) (undo-tree-id20110 . -3) (undo-tree-id20111 . -3) (undo-tree-id20112 . -3) (undo-tree-id20113 . -3) (undo-tree-id20114 . -3) (undo-tree-id20115 . -3) (undo-tree-id20116 . -3) (undo-tree-id20117 . -3) (undo-tree-id20118 . -3) (undo-tree-id20119 . -3) (undo-tree-id20120 . -3) (undo-tree-id20121 . -3) (undo-tree-id20122 . -3) (undo-tree-id20123 . -3) (undo-tree-id20124 . -3) (undo-tree-id20125 . -3) (undo-tree-id20126 . -3) (undo-tree-id20127 . -3) (undo-tree-id20128 . -3) (undo-tree-id20129 . -3) (undo-tree-id20130 . -3) (undo-tree-id20131 . -3) (undo-tree-id20132 . -3) (undo-tree-id20133 . -3) (undo-tree-id20134 . -3) (undo-tree-id20135 . -3) (undo-tree-id20136 . -3) (undo-tree-id20137 . -3) (undo-tree-id20138 . -3) (undo-tree-id20139 . -3) (undo-tree-id20140 . -3) (undo-tree-id20141 . -3) (undo-tree-id20142 . -3) (undo-tree-id20143 . -3) (undo-tree-id20144 . -3) (undo-tree-id20145 . -3) (undo-tree-id20146 . -3) (undo-tree-id20147 . -3) (undo-tree-id20148 . -3) (undo-tree-id20149 . -3) (undo-tree-id20150 . -3) (undo-tree-id20151 . -3) (undo-tree-id20152 . -3) (undo-tree-id20153 . -3) (undo-tree-id20154 . -3) (undo-tree-id20155 . -3) (undo-tree-id20156 . -3) (undo-tree-id20157 . -3) (undo-tree-id20158 . -3) (undo-tree-id20159 . -3) (undo-tree-id20160 . -3) (undo-tree-id20161 . -3) (undo-tree-id20162 . -3) (undo-tree-id20163 . -3) (undo-tree-id20164 . -3) (undo-tree-id20165 . -3) (undo-tree-id20166 . -3) (undo-tree-id20167 . -3) (undo-tree-id20168 . -3) (undo-tree-id20169 . -3) (undo-tree-id20170 . -3) (undo-tree-id20171 . -3) (undo-tree-id20172 . -3) (undo-tree-id20173 . -3) (undo-tree-id20174 . -3) (undo-tree-id20175 . -3) (undo-tree-id20176 . -3) (undo-tree-id20177 . -3) (undo-tree-id20178 . -3) (undo-tree-id20179 . -3) (undo-tree-id20180 . -3) (undo-tree-id20181 . -3) (undo-tree-id20182 . -3) (undo-tree-id20183 . -3) (undo-tree-id20184 . -3) (undo-tree-id20185 . -3) (undo-tree-id20186 . -3) (undo-tree-id20187 . -3) (undo-tree-id20188 . -3) (undo-tree-id20189 . -3) (undo-tree-id20190 . -3) (undo-tree-id20191 . -3) (undo-tree-id20192 . -3) (undo-tree-id20193 . -3) (undo-tree-id20194 . -3) (undo-tree-id20195 . -3) (undo-tree-id20196 . -3) (undo-tree-id20197 . -3) (undo-tree-id20198 . -3) (undo-tree-id20199 . -3) (undo-tree-id20200 . -3) (undo-tree-id20201 . -3) (undo-tree-id20202 . -3) (undo-tree-id20203 . -3) (undo-tree-id20204 . -3) (undo-tree-id20205 . -3) (undo-tree-id20206 . -3) (undo-tree-id20207 . -3) (undo-tree-id20208 . -3) (undo-tree-id20209 . -3) (undo-tree-id20210 . -3) (undo-tree-id20211 . -3) (undo-tree-id20212 . -3) (undo-tree-id20213 . -3) (undo-tree-id20214 . -3) (undo-tree-id20215 . -3) (undo-tree-id20216 . -3) (undo-tree-id20217 . -3) (undo-tree-id20218 . -3) (undo-tree-id20219 . -3) (undo-tree-id20220 . -3) (undo-tree-id20221 . -3) (undo-tree-id20222 . -3) (undo-tree-id20223 . -3) (undo-tree-id20224 . -3) (undo-tree-id20225 . -3) (undo-tree-id20226 . -3) (undo-tree-id20227 . -3) (undo-tree-id20228 . -3) (undo-tree-id20229 . -3) (undo-tree-id20230 . -3) (undo-tree-id20231 . -3) (undo-tree-id20232 . -3) (undo-tree-id20233 . -3) (undo-tree-id20234 . -3) (undo-tree-id20235 . -3) (undo-tree-id20236 . -3) (undo-tree-id20237 . -3) (undo-tree-id20238 . -3) (undo-tree-id20239 . -3) (undo-tree-id20240 . -3) (undo-tree-id20241 . -3) (undo-tree-id20242 . -3) (undo-tree-id20243 . -3) (undo-tree-id20244 . -3) (undo-tree-id20245 . -3) (undo-tree-id20246 . -3) (undo-tree-id20247 . -3) (undo-tree-id20248 . -3) (undo-tree-id20249 . -3) (undo-tree-id20250 . -3) (undo-tree-id20251 . -3) (undo-tree-id20252 . -3) (undo-tree-id20253 . -3) (undo-tree-id20254 . -3) (undo-tree-id20255 . -3) (undo-tree-id20256 . -3) (undo-tree-id20257 . -3) (undo-tree-id20258 . -3) (undo-tree-id20259 . -3) (undo-tree-id20260 . -3) (undo-tree-id20261 . -3) (undo-tree-id20262 . -3) (undo-tree-id20263 . -3) (undo-tree-id20264 . -3) (undo-tree-id20265 . -3) (undo-tree-id20266 . -3) (undo-tree-id20267 . -3) (undo-tree-id20268 . -3) (undo-tree-id20269 . -3) (undo-tree-id20270 . -3) (undo-tree-id20271 . -3) (undo-tree-id20272 . -3) (undo-tree-id20273 . -3) (undo-tree-id20274 . -3) (undo-tree-id20275 . -3) (undo-tree-id20276 . -3) (undo-tree-id20277 . -3) (undo-tree-id20278 . -3) (undo-tree-id20279 . -3) (undo-tree-id20280 . -3) (undo-tree-id20281 . -3) (undo-tree-id20282 . -3) (undo-tree-id20283 . -3) (undo-tree-id20284 . -3) (undo-tree-id20285 . -3) (undo-tree-id20286 . -3) (undo-tree-id20287 . -3) (undo-tree-id20288 . -3) (undo-tree-id20289 . -3) (undo-tree-id20290 . -3) (undo-tree-id20291 . -3) (undo-tree-id20292 . -3) (undo-tree-id20293 . -3) (undo-tree-id20294 . -3) (undo-tree-id20295 . -3) (undo-tree-id20296 . -3) (undo-tree-id20297 . -3) (undo-tree-id20298 . -3) (undo-tree-id20299 . -3) (undo-tree-id20300 . -3) (undo-tree-id20301 . -3) (undo-tree-id20302 . -3) (undo-tree-id20303 . -3) (undo-tree-id20304 . -3) (undo-tree-id20305 . -3) (undo-tree-id20306 . -3) (undo-tree-id20307 . -3) (undo-tree-id20308 . -3) (undo-tree-id20309 . -3) (undo-tree-id20310 . -3) (undo-tree-id20311 . -3) (undo-tree-id20312 . -3) (undo-tree-id20313 . -3) (undo-tree-id20314 . -113) (undo-tree-id20315 . -113) (undo-tree-id20316 . -113) (undo-tree-id20317 . -113) (undo-tree-id20318 . -113) (undo-tree-id20319 . -113) (undo-tree-id20320 . -113) (undo-tree-id20321 . -113) (undo-tree-id20322 . -113) (undo-tree-id20323 . -113) (undo-tree-id20324 . -113) (undo-tree-id20325 . -113) (undo-tree-id20326 . -113) (undo-tree-id20327 . -113) (undo-tree-id20328 . -113) (undo-tree-id20329 . -113) (undo-tree-id20330 . -113) (undo-tree-id20331 . -113) (undo-tree-id20332 . -113) (undo-tree-id20333 . -113) (undo-tree-id20334 . -113) (undo-tree-id20335 . -113) (undo-tree-id20336 . -113) (undo-tree-id20337 . -112) (undo-tree-id20338 . -112) (undo-tree-id20339 . -112) (undo-tree-id20340 . -112) (undo-tree-id20341 . -112) (undo-tree-id20342 . -112) (undo-tree-id20343 . -112) (undo-tree-id20344 . -112) (undo-tree-id20345 . -112) (undo-tree-id20346 . -112) (undo-tree-id20347 . -112) (undo-tree-id20348 . -112) (undo-tree-id20349 . -112) (undo-tree-id20350 . -112) (undo-tree-id20351 . -112) (undo-tree-id20352 . -112) (undo-tree-id20353 . -112) (undo-tree-id20354 . -112) (undo-tree-id20355 . -112) (undo-tree-id20356 . -112) (undo-tree-id20357 . -112) (undo-tree-id20358 . -112) (undo-tree-id20359 . -112) (undo-tree-id20360 . -112) (undo-tree-id20361 . -112) (undo-tree-id20362 . -112) (undo-tree-id20363 . -112) (undo-tree-id20364 . -112) (undo-tree-id20365 . -112) 66230) nil (25151 37432 281210 301000) 0 nil])
([nil nil ((66445 . 66463) (66424 . 66445) (66423 . 66424) (#("s" 0 1 (fontified t)) . -66423) (undo-tree-id19281 . -1) (undo-tree-id19282 . -1) (undo-tree-id19283 . -1) (undo-tree-id19284 . -1) (undo-tree-id19285 . -1) (undo-tree-id19286 . -1) (undo-tree-id19287 . -1) (undo-tree-id19288 . -1) (undo-tree-id19289 . -1) (undo-tree-id19290 . -1) (undo-tree-id19291 . -1) (undo-tree-id19292 . -1) (undo-tree-id19293 . -1) (undo-tree-id19294 . -1) (undo-tree-id19295 . -1) (undo-tree-id19296 . -1) (undo-tree-id19297 . -1) (undo-tree-id19298 . -1) (undo-tree-id19299 . -1) (undo-tree-id19300 . -1) (undo-tree-id19301 . -1) (undo-tree-id19302 . -1) (undo-tree-id19303 . -1) (undo-tree-id19304 . -1) 66424 (66406 . 66424) (#("s" 0 1 (fontified t)) . -66406) (undo-tree-id19305 . -1) (undo-tree-id19306 . -1) (undo-tree-id19307 . -1) (undo-tree-id19308 . -1) (undo-tree-id19309 . -1) (undo-tree-id19310 . -1) (undo-tree-id19311 . -1) (undo-tree-id19312 . -1) (undo-tree-id19313 . -1) (undo-tree-id19314 . -1) (undo-tree-id19315 . -1) (undo-tree-id19316 . -1) (undo-tree-id19317 . -1) (undo-tree-id19318 . -1) (undo-tree-id19319 . -1) (undo-tree-id19320 . -1) (undo-tree-id19321 . -1) (undo-tree-id19322 . -1) (undo-tree-id19323 . -1) (undo-tree-id19324 . -1) (undo-tree-id19325 . -1) (undo-tree-id19326 . -1) (undo-tree-id19327 . -1) (undo-tree-id19328 . -1) (undo-tree-id19329 . -1) (undo-tree-id19330 . -1) (undo-tree-id19331 . -1) (undo-tree-id19332 . -1) (undo-tree-id19333 . -1) (undo-tree-id19334 . -1) (undo-tree-id19335 . -1) (undo-tree-id19336 . -1) (undo-tree-id19337 . -1) (undo-tree-id19338 . -1) (undo-tree-id19339 . -1) (undo-tree-id19340 . -1) (undo-tree-id19341 . -1) (undo-tree-id19342 . -1) (undo-tree-id19343 . -1) (undo-tree-id19344 . -1) (undo-tree-id19345 . -1) (undo-tree-id19346 . -1) (undo-tree-id19347 . -1) (undo-tree-id19348 . -1) (undo-tree-id19349 . -1) (undo-tree-id19350 . -1) (undo-tree-id19351 . -1) (undo-tree-id19352 . -1) (undo-tree-id19353 . -1) (undo-tree-id19354 . -1) (#("i" 0 1 (fontified t)) . -66407) (undo-tree-id19355 . -1) (undo-tree-id19356 . -1) (undo-tree-id19357 . -1) (undo-tree-id19358 . -1) (undo-tree-id19359 . -1) (undo-tree-id19360 . -1) (undo-tree-id19361 . -1) (undo-tree-id19362 . -1) (undo-tree-id19363 . -1) (undo-tree-id19364 . -1) (undo-tree-id19365 . -1) (undo-tree-id19366 . -1) (undo-tree-id19367 . -1) (undo-tree-id19368 . -1) (undo-tree-id19369 . -1) (undo-tree-id19370 . -1) (undo-tree-id19371 . -1) (undo-tree-id19372 . -1) (undo-tree-id19373 . -1) 66408 (66398 . 66408) (#("O" 0 1 (fontified t)) . -66398) (undo-tree-id19374 . -1) (undo-tree-id19375 . -1) (undo-tree-id19376 . -1) (undo-tree-id19377 . -1) (undo-tree-id19378 . -1) (undo-tree-id19379 . -1) (undo-tree-id19380 . -1) (undo-tree-id19381 . -1) (undo-tree-id19382 . -1) (undo-tree-id19383 . -1) (undo-tree-id19384 . -1) (undo-tree-id19385 . -1) (undo-tree-id19386 . -1) (undo-tree-id19387 . -1) (undo-tree-id19388 . -1) (undo-tree-id19389 . -1) (undo-tree-id19390 . -1) (undo-tree-id19391 . -1) (undo-tree-id19392 . -1) 66399 (66397 . 66399) (66297 . 66299) (#(" " 0 1 (fontified t)) . -66297) (undo-tree-id19393 . -1) (undo-tree-id19394 . -1) (undo-tree-id19395 . -1) (undo-tree-id19396 . -1) (undo-tree-id19397 . -1) (undo-tree-id19398 . -1) (undo-tree-id19399 . -1) (undo-tree-id19400 . -1) (undo-tree-id19401 . -1) (undo-tree-id19402 . -1) (undo-tree-id19403 . -1) (undo-tree-id19404 . -1) (undo-tree-id19405 . -1) (undo-tree-id19406 . -1) (undo-tree-id19407 . -1) (undo-tree-id19408 . -1) (undo-tree-id19409 . -1) (undo-tree-id19410 . -1) (undo-tree-id19411 . -1) (undo-tree-id19412 . -1) (undo-tree-id19413 . -1) (undo-tree-id19414 . -1) (undo-tree-id19415 . -1) (undo-tree-id19416 . -1) (undo-tree-id19417 . -1) (undo-tree-id19418 . -1) (undo-tree-id19419 . -1) (undo-tree-id19420 . -1) (undo-tree-id19421 . -1) (undo-tree-id19422 . -1) (undo-tree-id19423 . -1) (undo-tree-id19424 . -1) (undo-tree-id19425 . -1) (undo-tree-id19426 . -1) (undo-tree-id19427 . -1) (undo-tree-id19428 . -1) (undo-tree-id19429 . -1) (undo-tree-id19430 . -1) (undo-tree-id19431 . -1) (undo-tree-id19432 . -1) (undo-tree-id19433 . -1) (undo-tree-id19434 . -1) (undo-tree-id19435 . -1) (undo-tree-id19436 . -1) (undo-tree-id19437 . -1) (undo-tree-id19438 . -1) (undo-tree-id19439 . -1) (undo-tree-id19440 . -1) (undo-tree-id19441 . -1) (undo-tree-id19442 . -1) (undo-tree-id19443 . -1) (undo-tree-id19444 . -1) (undo-tree-id19445 . -1) (undo-tree-id19446 . -1) (undo-tree-id19447 . -1) (undo-tree-id19448 . -1) (undo-tree-id19449 . -1) (undo-tree-id19450 . -1) (undo-tree-id19451 . -1) (undo-tree-id19452 . -1) (undo-tree-id19453 . -1) (undo-tree-id19454 . -1) (undo-tree-id19455 . -1) (undo-tree-id19456 . -1) (undo-tree-id19457 . -1) (undo-tree-id19458 . -1) (undo-tree-id19459 . -1) (undo-tree-id19460 . -1) (undo-tree-id19461 . -1) (undo-tree-id19462 . -1) (undo-tree-id19463 . -1) (undo-tree-id19464 . -1) (undo-tree-id19465 . -1) (undo-tree-id19466 . -1) (undo-tree-id19467 . -1) (undo-tree-id19468 . -1) (undo-tree-id19469 . -1) (undo-tree-id19470 . -1) (undo-tree-id19471 . -1) (undo-tree-id19472 . -1) (undo-tree-id19473 . -1) (undo-tree-id19474 . -1) (undo-tree-id19475 . -1) (undo-tree-id19476 . -1) (undo-tree-id19477 . -1) (undo-tree-id19478 . -1) (undo-tree-id19479 . -1) (undo-tree-id19480 . -1) (undo-tree-id19481 . -1) (undo-tree-id19482 . -1) (undo-tree-id19483 . -1) (#("(" 0 1 (fontified t)) . -66298) (undo-tree-id19484 . -1) (undo-tree-id19485 . -1) (undo-tree-id19486 . -1) (undo-tree-id19487 . -1) (undo-tree-id19488 . -1) (undo-tree-id19489 . -1) (undo-tree-id19490 . -1) (undo-tree-id19491 . -1) (undo-tree-id19492 . -1) (undo-tree-id19493 . -1) (undo-tree-id19494 . -1) (undo-tree-id19495 . -1) (undo-tree-id19496 . -1) (undo-tree-id19497 . -1) (undo-tree-id19498 . -1) (undo-tree-id19499 . -1) (undo-tree-id19500 . -1) (undo-tree-id19501 . -1) (undo-tree-id19502 . -1) (undo-tree-id19503 . -1) (undo-tree-id19504 . -1) (undo-tree-id19505 . -1) (undo-tree-id19506 . -1) (undo-tree-id19507 . -1) (undo-tree-id19508 . -1) (undo-tree-id19509 . -1) (undo-tree-id19510 . -1) (undo-tree-id19511 . -1) (undo-tree-id19512 . -1) (undo-tree-id19513 . -1) (undo-tree-id19514 . -1) (undo-tree-id19515 . -1) (undo-tree-id19516 . -1) (undo-tree-id19517 . -1) (undo-tree-id19518 . -1) (undo-tree-id19519 . -1) (undo-tree-id19520 . -1) (undo-tree-id19521 . -1) (undo-tree-id19522 . -1) (undo-tree-id19523 . -1) (undo-tree-id19524 . -1) (undo-tree-id19525 . -1) (undo-tree-id19526 . -1) (undo-tree-id19527 . -1) (undo-tree-id19528 . -1) 66299 (66396 . 66397) (#(")" 0 1 (fontified t)) . 66396) (66395 . 66396) (66374 . 66395) (#("t" 0 1 (fontified t)) . -66374) (undo-tree-id19529 . -1) (undo-tree-id19530 . -1) (undo-tree-id19531 . -1) (undo-tree-id19532 . -1) (undo-tree-id19533 . -1) (undo-tree-id19534 . -1) (undo-tree-id19535 . -1) (undo-tree-id19536 . -1) (undo-tree-id19537 . -1) (undo-tree-id19538 . -1) (undo-tree-id19539 . -1) (undo-tree-id19540 . -1) (undo-tree-id19541 . -1) (undo-tree-id19542 . -1) (undo-tree-id19543 . -1) (undo-tree-id19544 . -1) (undo-tree-id19545 . -1) (undo-tree-id19546 . -1) (undo-tree-id19547 . -1) (undo-tree-id19548 . -1) (undo-tree-id19549 . -1) (undo-tree-id19550 . -1) (undo-tree-id19551 . -1) (undo-tree-id19552 . -1) (undo-tree-id19553 . -1) (undo-tree-id19554 . -1) (undo-tree-id19555 . -1) (undo-tree-id19556 . -1) (undo-tree-id19557 . -1) (undo-tree-id19558 . -1) (undo-tree-id19559 . -1) (undo-tree-id19560 . -1) (undo-tree-id19561 . -1) (undo-tree-id19562 . -1) (undo-tree-id19563 . -1) (undo-tree-id19564 . -1) (undo-tree-id19565 . -1) (undo-tree-id19566 . -1) (undo-tree-id19567 . -1) (undo-tree-id19568 . -1) (undo-tree-id19569 . -1) (undo-tree-id19570 . -1) (undo-tree-id19571 . -1) (undo-tree-id19572 . -1) (undo-tree-id19573 . -1) (undo-tree-id19574 . -1) (undo-tree-id19575 . -1) (undo-tree-id19576 . -1) (undo-tree-id19577 . -1) (undo-tree-id19578 . -1) (#("y" 0 1 (fontified t)) . -66375) (undo-tree-id19579 . -1) (undo-tree-id19580 . -1) (undo-tree-id19581 . -1) (undo-tree-id19582 . -1) (undo-tree-id19583 . -1) (undo-tree-id19584 . -1) (undo-tree-id19585 . -1) (undo-tree-id19586 . -1) (undo-tree-id19587 . -1) (undo-tree-id19588 . -1) (undo-tree-id19589 . -1) (undo-tree-id19590 . -1) (undo-tree-id19591 . -1) (undo-tree-id19592 . -1) (undo-tree-id19593 . -1) (undo-tree-id19594 . -1) (undo-tree-id19595 . -1) (undo-tree-id19596 . -1) (undo-tree-id19597 . -1) (undo-tree-id19598 . -1) (undo-tree-id19599 . -1) (undo-tree-id19600 . -1) (undo-tree-id19601 . -1) (undo-tree-id19602 . -1) 66376 (66370 . 66376) (66366 . 66370) (66345 . 66366) (#("f" 0 1 (fontified t)) . -66345) (undo-tree-id19603 . -1) (undo-tree-id19604 . -1) (undo-tree-id19605 . -1) (undo-tree-id19606 . -1) (undo-tree-id19607 . -1) (undo-tree-id19608 . -1) (undo-tree-id19609 . -1) (undo-tree-id19610 . -1) (undo-tree-id19611 . -1) (undo-tree-id19612 . -1) (undo-tree-id19613 . -1) (undo-tree-id19614 . -1) (undo-tree-id19615 . -1) (undo-tree-id19616 . -1) (undo-tree-id19617 . -1) (undo-tree-id19618 . -1) (undo-tree-id19619 . -1) (undo-tree-id19620 . -1) (undo-tree-id19621 . -1) (undo-tree-id19622 . -1) (undo-tree-id19623 . -1) (undo-tree-id19624 . -1) (undo-tree-id19625 . -1) (undo-tree-id19626 . -1) 66346 (66345 . 66346) (66343 . 66345) (#("d" 0 1 (fontified t)) . -66343) (undo-tree-id19627 . -1) (undo-tree-id19628 . -1) (undo-tree-id19629 . -1) (undo-tree-id19630 . -1) (undo-tree-id19631 . -1) (undo-tree-id19632 . -1) (undo-tree-id19633 . -1) (undo-tree-id19634 . -1) (undo-tree-id19635 . -1) (undo-tree-id19636 . -1) (undo-tree-id19637 . -1) (undo-tree-id19638 . -1) (undo-tree-id19639 . -1) (undo-tree-id19640 . -1) (undo-tree-id19641 . -1) (undo-tree-id19642 . -1) (undo-tree-id19643 . -1) (undo-tree-id19644 . -1) (undo-tree-id19645 . -1) 66344 (66324 . 66344) (#(" " 0 1 (fontified t)) . -66324) (undo-tree-id19646 . -1) (undo-tree-id19647 . -1) (undo-tree-id19648 . -1) (undo-tree-id19649 . -1) (undo-tree-id19650 . -1) (undo-tree-id19651 . -1) (undo-tree-id19652 . -1) (undo-tree-id19653 . -1) (undo-tree-id19654 . -1) (undo-tree-id19655 . -1) (undo-tree-id19656 . -1) (undo-tree-id19657 . -1) (undo-tree-id19658 . -1) (undo-tree-id19659 . -1) (undo-tree-id19660 . -1) (undo-tree-id19661 . -1) (undo-tree-id19662 . -1) (undo-tree-id19663 . -1) (undo-tree-id19664 . -1) (undo-tree-id19665 . -1) (undo-tree-id19666 . -1) (undo-tree-id19667 . -1) (undo-tree-id19668 . -1) (undo-tree-id19669 . -1) (undo-tree-id19670 . -1) (undo-tree-id19671 . -1) (undo-tree-id19672 . -1) (undo-tree-id19673 . -1) (undo-tree-id19674 . -1) (undo-tree-id19675 . -1) (undo-tree-id19676 . -1) (undo-tree-id19677 . -1) (undo-tree-id19678 . -1) (undo-tree-id19679 . -1) (undo-tree-id19680 . -1) (undo-tree-id19681 . -1) (undo-tree-id19682 . -1) (undo-tree-id19683 . -1) (undo-tree-id19684 . -1) (undo-tree-id19685 . -1) (undo-tree-id19686 . -1) (undo-tree-id19687 . -1) (undo-tree-id19688 . -1) (undo-tree-id19689 . -1) (undo-tree-id19690 . -1) (undo-tree-id19691 . -1) (undo-tree-id19692 . -1) (undo-tree-id19693 . -1) (undo-tree-id19694 . -1) (undo-tree-id19695 . -1) (undo-tree-id19696 . -1) (undo-tree-id19697 . -1) (undo-tree-id19698 . -1) (undo-tree-id19699 . -1) (undo-tree-id19700 . -1) (undo-tree-id19701 . -1) (undo-tree-id19702 . -1) (undo-tree-id19703 . -1) (undo-tree-id19704 . -1) (undo-tree-id19705 . -1) (undo-tree-id19706 . -1) (undo-tree-id19707 . -1) (undo-tree-id19708 . -1) (undo-tree-id19709 . -1) (undo-tree-id19710 . -1) (undo-tree-id19711 . -1) (undo-tree-id19712 . -1) (undo-tree-id19713 . -1) (undo-tree-id19714 . -1) (undo-tree-id19715 . -1) (undo-tree-id19716 . -1) (undo-tree-id19717 . -1) (#("b" 0 1 (fontified t)) . -66325) (undo-tree-id19718 . -1) (undo-tree-id19719 . -1) (undo-tree-id19720 . -1) (undo-tree-id19721 . -1) (undo-tree-id19722 . -1) (undo-tree-id19723 . -1) (undo-tree-id19724 . -1) (undo-tree-id19725 . -1) (undo-tree-id19726 . -1) (undo-tree-id19727 . -1) (undo-tree-id19728 . -1) (undo-tree-id19729 . -1) (undo-tree-id19730 . -1) (undo-tree-id19731 . -1) (undo-tree-id19732 . -1) (undo-tree-id19733 . -1) (undo-tree-id19734 . -1) (undo-tree-id19735 . -1) (undo-tree-id19736 . -1) (undo-tree-id19737 . -1) (undo-tree-id19738 . -1) (undo-tree-id19739 . -1) (undo-tree-id19740 . -1) (undo-tree-id19741 . -1) (undo-tree-id19742 . -1) (undo-tree-id19743 . -1) (undo-tree-id19744 . -1) (undo-tree-id19745 . -1) (undo-tree-id19746 . -1) (undo-tree-id19747 . -1) (undo-tree-id19748 . -1) (undo-tree-id19749 . -1) (undo-tree-id19750 . -1) (undo-tree-id19751 . -1) (undo-tree-id19752 . -1) (undo-tree-id19753 . -1) (undo-tree-id19754 . -1) (undo-tree-id19755 . -1) (undo-tree-id19756 . -1) (undo-tree-id19757 . -1) (undo-tree-id19758 . -1) (undo-tree-id19759 . -1) (undo-tree-id19760 . -1) (undo-tree-id19761 . -1) (undo-tree-id19762 . -1) (undo-tree-id19763 . -1) (undo-tree-id19764 . -1) (undo-tree-id19765 . -1) (undo-tree-id19766 . -1) (undo-tree-id19767 . -1) (undo-tree-id19768 . -1) (#("u" 0 1 (fontified t)) . -66326) (undo-tree-id19769 . -1) (undo-tree-id19770 . -1) (undo-tree-id19771 . -1) (undo-tree-id19772 . -1) (undo-tree-id19773 . -1) (undo-tree-id19774 . -1) (undo-tree-id19775 . -1) (undo-tree-id19776 . -1) (undo-tree-id19777 . -1) (undo-tree-id19778 . -1) (undo-tree-id19779 . -1) (undo-tree-id19780 . -1) (undo-tree-id19781 . -1) (undo-tree-id19782 . -1) (undo-tree-id19783 . -1) (undo-tree-id19784 . -1) (undo-tree-id19785 . -1) (undo-tree-id19786 . -1) (undo-tree-id19787 . -1) (undo-tree-id19788 . -1) (undo-tree-id19789 . -1) (undo-tree-id19790 . -1) (undo-tree-id19791 . -1) (undo-tree-id19792 . -1) (undo-tree-id19793 . -1) (undo-tree-id19794 . -1) (undo-tree-id19795 . -1) (undo-tree-id19796 . -1) (undo-tree-id19797 . -1) (undo-tree-id19798 . -1) (#("t" 0 1 (fontified t)) . -66327) (undo-tree-id19799 . -1) (undo-tree-id19800 . -1) (undo-tree-id19801 . -1) (undo-tree-id19802 . -1) (undo-tree-id19803 . -1) (undo-tree-id19804 . -1) (undo-tree-id19805 . -1) (undo-tree-id19806 . -1) (undo-tree-id19807 . -1) (undo-tree-id19808 . -1) (undo-tree-id19809 . -1) (undo-tree-id19810 . -1) (undo-tree-id19811 . -1) (undo-tree-id19812 . -1) 66328 (66318 . 66328) (66299 . 66318) (66297 . 66300) (66289 . 66297) (66268 . 66289) (66247 . 66268) (66240 . 66247) (#("i" 0 1 (fontified t)) . -66240) (undo-tree-id19813 . -1) (undo-tree-id19814 . -1) (undo-tree-id19815 . -1) (undo-tree-id19816 . -1) (undo-tree-id19817 . -1) (undo-tree-id19818 . -1) (undo-tree-id19819 . -1) (undo-tree-id19820 . -1) (undo-tree-id19821 . -1) 66241 (66236 . 66241) (66215 . 66236) (#("r" 0 1 (fontified t)) . -66215) (undo-tree-id19822 . -1) (undo-tree-id19823 . -1) (undo-tree-id19824 . -1) (undo-tree-id19825 . -1) (undo-tree-id19826 . -1) (undo-tree-id19827 . -1) (undo-tree-id19828 . -1) (undo-tree-id19829 . -1) (undo-tree-id19830 . -1) (undo-tree-id19831 . -1) (undo-tree-id19832 . -1) (undo-tree-id19833 . -1) (undo-tree-id19834 . -1) (undo-tree-id19835 . -1) (undo-tree-id19836 . -1) 66216 (66197 . 66216) (66188 . 66197) (66167 . 66188) (66164 . 66167) (#("r" 0 1 (fontified t)) . -66164) (undo-tree-id19837 . -1) (undo-tree-id19838 . -1) (undo-tree-id19839 . -1) (undo-tree-id19840 . -1) (undo-tree-id19841 . -1) (undo-tree-id19842 . -1) (undo-tree-id19843 . -1) (undo-tree-id19844 . -1) (undo-tree-id19845 . -1) (undo-tree-id19846 . -1) (undo-tree-id19847 . -1) (undo-tree-id19848 . -1) (undo-tree-id19849 . -1) (undo-tree-id19850 . -1) (undo-tree-id19851 . -1) (undo-tree-id19852 . -1) (undo-tree-id19853 . -1) (undo-tree-id19854 . -1) (undo-tree-id19855 . -1) (undo-tree-id19856 . -1) (undo-tree-id19857 . -1) (undo-tree-id19858 . -1) (undo-tree-id19859 . -1) (undo-tree-id19860 . -1) (undo-tree-id19861 . -1) (undo-tree-id19862 . -1) (undo-tree-id19863 . -1) (undo-tree-id19864 . -1) (undo-tree-id19865 . -1) (undo-tree-id19866 . -1) (undo-tree-id19867 . -1) (undo-tree-id19868 . -1) (undo-tree-id19869 . -1) (undo-tree-id19870 . -1) (undo-tree-id19871 . -1) (undo-tree-id19872 . -1) (undo-tree-id19873 . -1) (undo-tree-id19874 . -1) (undo-tree-id19875 . -1) (undo-tree-id19876 . -1) (undo-tree-id19877 . -1) (#("i" 0 1 (fontified t)) . -66165) (undo-tree-id19878 . -1) (undo-tree-id19879 . -1) (undo-tree-id19880 . -1) (undo-tree-id19881 . -1) (undo-tree-id19882 . -1) (undo-tree-id19883 . -1) (undo-tree-id19884 . -1) (undo-tree-id19885 . -1) (undo-tree-id19886 . -1) (undo-tree-id19887 . -1) (undo-tree-id19888 . -1) (undo-tree-id19889 . -1) (undo-tree-id19890 . -1) (undo-tree-id19891 . -1) (undo-tree-id19892 . -1) (undo-tree-id19893 . -1) (undo-tree-id19894 . -1) (undo-tree-id19895 . -1) (undo-tree-id19896 . -1) (undo-tree-id19897 . -1) (undo-tree-id19898 . -1) (undo-tree-id19899 . -1) (undo-tree-id19900 . -1) (undo-tree-id19901 . -1) (undo-tree-id19902 . -1) (#("o" 0 1 (fontified t)) . -66166) (undo-tree-id19903 . -1) (undo-tree-id19904 . -1) (undo-tree-id19905 . -1) (undo-tree-id19906 . -1) (undo-tree-id19907 . -1) (undo-tree-id19908 . -1) (undo-tree-id19909 . -1) (undo-tree-id19910 . -1) (undo-tree-id19911 . -1) 66167 (66157 . 66167) (#("." 0 1 (fontified t)) . -66157) (undo-tree-id19912 . -1) (undo-tree-id19913 . -1) (undo-tree-id19914 . -1) (undo-tree-id19915 . -1) (undo-tree-id19916 . -1) (undo-tree-id19917 . -1) (undo-tree-id19918 . -1) (undo-tree-id19919 . -1) (undo-tree-id19920 . -1) (undo-tree-id19921 . -1) (undo-tree-id19922 . -1) (undo-tree-id19923 . -1) (undo-tree-id19924 . -1) (undo-tree-id19925 . -1) (undo-tree-id19926 . -1) (undo-tree-id19927 . -1) (undo-tree-id19928 . -1) (undo-tree-id19929 . -1) (undo-tree-id19930 . -1) (undo-tree-id19931 . -1) (undo-tree-id19932 . -1) (undo-tree-id19933 . -1) (undo-tree-id19934 . -1) (undo-tree-id19935 . -1) (undo-tree-id19936 . -1) (undo-tree-id19937 . -1) (#(" " 0 1 (fontified t)) . -66158) (undo-tree-id19938 . -1) (undo-tree-id19939 . -1) (undo-tree-id19940 . -1) (undo-tree-id19941 . -1) (undo-tree-id19942 . -1) (undo-tree-id19943 . -1) (undo-tree-id19944 . -1) (undo-tree-id19945 . -1) (undo-tree-id19946 . -1) 66159 (66142 . 66159) (66121 . 66142) (66117 . 66121) (66250 . 66251)) nil (25151 37432 280664 273000) 0 nil])
([nil nil ((66790 . 66809) (66769 . 66790) (#("s" 0 1 (fontified nil)) . -66769) (undo-tree-id19210 . -1) (undo-tree-id19211 . -1) 66770 (66752 . 66770) (#("s" 0 1 (fontified nil)) . -66752) (undo-tree-id19212 . -1) (undo-tree-id19213 . -1) (undo-tree-id19214 . -1) (undo-tree-id19215 . -1) (#("i" 0 1 (fontified nil)) . -66753) (undo-tree-id19216 . -1) (undo-tree-id19217 . -1) 66754 (66744 . 66754) (#("O" 0 1 (fontified nil)) . -66744) (undo-tree-id19218 . -1) (undo-tree-id19219 . -1) 66745 (66741 . 66745) (#("e" 0 1 (fontified nil)) . -66741) (undo-tree-id19220 . -1) (undo-tree-id19221 . -1) (undo-tree-id19222 . -1) (undo-tree-id19223 . -1) (undo-tree-id19224 . -1) (#("." 0 1 (fontified nil)) . -66742) (undo-tree-id19225 . -1) (undo-tree-id19226 . -1) 66743 (66742 . 66743) (#(")" 0 1 (fontified nil)) . 66742) (66741 . 66742) (66720 . 66741) (#("t" 0 1 (fontified nil)) . -66720) (undo-tree-id19227 . -1) (undo-tree-id19228 . -1) (undo-tree-id19229 . -1) (undo-tree-id19230 . -1) (#("y" 0 1 (fontified nil)) . -66721) (undo-tree-id19231 . -1) (undo-tree-id19232 . -1) 66722 (66712 . 66722) (66691 . 66712) (#("f" 0 1 (fontified nil)) . -66691) (undo-tree-id19233 . -1) (undo-tree-id19234 . -1) 66692 (66689 . 66692) (#("d" 0 1 (fontified nil)) . -66689) (undo-tree-id19235 . -1) (undo-tree-id19236 . -1) 66690 (66670 . 66690) (#(" " 0 1 (fontified nil)) . -66670) (undo-tree-id19237 . -1) (undo-tree-id19238 . -1) (undo-tree-id19239 . -1) (undo-tree-id19240 . -1) (undo-tree-id19241 . -1) (undo-tree-id19242 . -1) (undo-tree-id19243 . -1) (undo-tree-id19244 . -1) (#("b" 0 1 (fontified nil)) . -66671) (undo-tree-id19245 . -1) (undo-tree-id19246 . -1) (undo-tree-id19247 . -1) (undo-tree-id19248 . -1) (undo-tree-id19249 . -1) (undo-tree-id19250 . -1) (#("u" 0 1 (fontified nil)) . -66672) (undo-tree-id19251 . -1) (undo-tree-id19252 . -1) (undo-tree-id19253 . -1) (undo-tree-id19254 . -1) (#("t" 0 1 (fontified nil)) . -66673) (undo-tree-id19255 . -1) (undo-tree-id19256 . -1) 66674 (66670 . 66674) (66649 . 66670) (66645 . 66649) (66628 . 66646) (66607 . 66628) (66586 . 66607) (#("i" 0 1 (fontified nil)) . -66586) (undo-tree-id19257 . -1) (undo-tree-id19258 . -1) 66587 (66582 . 66587) (66561 . 66582) (#("r" 0 1 (fontified nil)) . -66561) (undo-tree-id19259 . -1) (undo-tree-id19260 . -1) 66562 (66552 . 66562) (66531 . 66552) (66510 . 66531) (#("r" 0 1 (fontified nil)) . -66510) (undo-tree-id19261 . -1) (undo-tree-id19262 . -1) (undo-tree-id19263 . -1) (undo-tree-id19264 . -1) (undo-tree-id19265 . -1) (undo-tree-id19266 . -1) (#("i" 0 1 (fontified nil)) . -66511) (undo-tree-id19267 . -1) (undo-tree-id19268 . -1) (undo-tree-id19269 . -1) (undo-tree-id19270 . -1) (#("o" 0 1 (fontified nil)) . -66512) (undo-tree-id19271 . -1) (undo-tree-id19272 . -1) 66513 (66503 . 66513) (#("." 0 1 (fontified nil)) . -66503) (undo-tree-id19273 . -1) (undo-tree-id19274 . -1) (undo-tree-id19275 . -1) (undo-tree-id19276 . -1) (#(" " 0 1 (fontified nil)) . -66504) (undo-tree-id19277 . -1) (undo-tree-id19278 . -1) 66505 (66488 . 66505) (66467 . 66488) (66464 . 66467) (#(" " 0 1 (fontified nil)) . 66463) (undo-tree-id19279 . -1) (undo-tree-id19280 . -1) (66464 . 66465) (66463 . 66464)) nil (25151 37432 279749 547000) 0 nil])
([nil nil ((66809 . 66810)) nil (25151 37432 279638 288000) 0 nil])
([nil nil ((#("   This section is about zetteldesk-ref, an optional extension of zetteldesk.el. It includes integrationof the zetteldesk with various reference sources such as bibtex entry nodes (which are org-roam nodes, however they need a different behaviour than your typical org-roam nod,  It also include the info stuff as I decided to make that optional.
" 0 180 (fontified t) 180 346 (fontified t) 346 347 (fontified t)) . 66464) (undo-tree-id18301 . -347) (undo-tree-id18302 . -347) (undo-tree-id18303 . -347) (undo-tree-id18304 . 1) (undo-tree-id18305 . -343) (undo-tree-id18306 . -347) (undo-tree-id18307 . -347) (undo-tree-id18308 . -347) (undo-tree-id18309 . -347) (undo-tree-id18310 . -347) (undo-tree-id18311 . -347) (undo-tree-id18312 . -347) (undo-tree-id18313 . -347) (undo-tree-id18314 . -347) (undo-tree-id18315 . -347) (undo-tree-id18316 . -347) (undo-tree-id18317 . -347) (undo-tree-id18318 . -347) (undo-tree-id18319 . -347) (undo-tree-id18320 . -347) (undo-tree-id18321 . -347) (undo-tree-id18322 . -347) (undo-tree-id18323 . -347) (undo-tree-id18324 . -347) (undo-tree-id18325 . -347) (undo-tree-id18326 . -347) (undo-tree-id18327 . -347) (undo-tree-id18328 . -347) (undo-tree-id18329 . -347) (undo-tree-id18330 . -347) (undo-tree-id18331 . -347) (undo-tree-id18332 . -347) (undo-tree-id18333 . -347) (undo-tree-id18334 . -347) (undo-tree-id18335 . -347) (undo-tree-id18336 . -347) (undo-tree-id18337 . -347) (undo-tree-id18338 . -347) (undo-tree-id18339 . -347) (undo-tree-id18340 . -347) (undo-tree-id18341 . -347) (undo-tree-id18342 . -347) (undo-tree-id18343 . -347) (undo-tree-id18344 . -347) (undo-tree-id18345 . -347) (undo-tree-id18346 . -347) (undo-tree-id18347 . -347) (undo-tree-id18348 . -347) (undo-tree-id18349 . -347) (undo-tree-id18350 . -347) (undo-tree-id18351 . -347) (undo-tree-id18352 . -347) (undo-tree-id18353 . -347) (undo-tree-id18354 . -347) (undo-tree-id18355 . -347) (undo-tree-id18356 . -347) (undo-tree-id18357 . -347) (undo-tree-id18358 . -347) (undo-tree-id18359 . -347) (undo-tree-id18360 . -347) (undo-tree-id18361 . -347) (undo-tree-id18362 . -347) (undo-tree-id18363 . -347) (undo-tree-id18364 . -347) (undo-tree-id18365 . -347) (undo-tree-id18366 . -347) (undo-tree-id18367 . -347) (undo-tree-id18368 . -347) (undo-tree-id18369 . -347) (undo-tree-id18370 . -347) (undo-tree-id18371 . -347) (undo-tree-id18372 . -347) (undo-tree-id18373 . -347) (undo-tree-id18374 . -347) (undo-tree-id18375 . -347) (undo-tree-id18376 . -347) (undo-tree-id18377 . -347) (undo-tree-id18378 . -347) (undo-tree-id18379 . -347) (undo-tree-id18380 . -347) (undo-tree-id18381 . -347) (undo-tree-id18382 . -347) (undo-tree-id18383 . -347) (undo-tree-id18384 . -347) (undo-tree-id18385 . -347) (undo-tree-id18386 . -347) (undo-tree-id18387 . -347) (undo-tree-id18388 . -347) (undo-tree-id18389 . -347) (undo-tree-id18390 . -347) (undo-tree-id18391 . -347) (undo-tree-id18392 . -347) (undo-tree-id18393 . -347) (undo-tree-id18394 . -347) (undo-tree-id18395 . -347) (undo-tree-id18396 . -347) (undo-tree-id18397 . -347) (undo-tree-id18398 . -347) (undo-tree-id18399 . -347) (undo-tree-id18400 . -347) (undo-tree-id18401 . -347) (undo-tree-id18402 . -347) (undo-tree-id18403 . -347) (undo-tree-id18404 . -347) (undo-tree-id18405 . -347) (undo-tree-id18406 . -347) (undo-tree-id18407 . -347) (undo-tree-id18408 . -347) (undo-tree-id18409 . -347) (undo-tree-id18410 . -347) (undo-tree-id18411 . -347) (undo-tree-id18412 . -347) (undo-tree-id18413 . -347) (undo-tree-id18414 . -347) (undo-tree-id18415 . -347) (undo-tree-id18416 . -347) (undo-tree-id18417 . -347) (undo-tree-id18418 . -347) (undo-tree-id18419 . -347) (undo-tree-id18420 . -347) (undo-tree-id18421 . -347) (undo-tree-id18422 . -347) (undo-tree-id18423 . -347) (undo-tree-id18424 . -347) (undo-tree-id18425 . -347) (undo-tree-id18426 . -347) (undo-tree-id18427 . -347) (undo-tree-id18428 . -347) (undo-tree-id18429 . -347) (undo-tree-id18430 . -347) (undo-tree-id18431 . -347) (undo-tree-id18432 . -347) (undo-tree-id18433 . -347) (undo-tree-id18434 . -347) (undo-tree-id18435 . -347) (undo-tree-id18436 . -347) (undo-tree-id18437 . -347) (undo-tree-id18438 . -347) (undo-tree-id18439 . -347) (undo-tree-id18440 . -347) (undo-tree-id18441 . -347) (undo-tree-id18442 . -347) (undo-tree-id18443 . -347) (undo-tree-id18444 . -347) (undo-tree-id18445 . -347) (undo-tree-id18446 . -347) (undo-tree-id18447 . -347) (undo-tree-id18448 . -347) (undo-tree-id18449 . -347) (undo-tree-id18450 . -347) (undo-tree-id18451 . -347) (undo-tree-id18452 . -347) (undo-tree-id18453 . -347) (undo-tree-id18454 . -347) (undo-tree-id18455 . -347) (undo-tree-id18456 . -347) (undo-tree-id18457 . -347) (undo-tree-id18458 . -347) (undo-tree-id18459 . -347) (undo-tree-id18460 . -347) (undo-tree-id18461 . -347) (undo-tree-id18462 . -347) (undo-tree-id18463 . -347) (undo-tree-id18464 . -347) (undo-tree-id18465 . -347) (undo-tree-id18466 . -347) (undo-tree-id18467 . -347) (undo-tree-id18468 . -347) (undo-tree-id18469 . -347) (undo-tree-id18470 . -347) (undo-tree-id18471 . -347) (undo-tree-id18472 . -347) (undo-tree-id18473 . -347) (undo-tree-id18474 . -347) (undo-tree-id18475 . -347) (undo-tree-id18476 . -347) (undo-tree-id18477 . -347) (undo-tree-id18478 . -347) (undo-tree-id18479 . -347) (undo-tree-id18480 . -347) (undo-tree-id18481 . -347) (undo-tree-id18482 . -347) (undo-tree-id18483 . -347) (undo-tree-id18484 . -347) (undo-tree-id18485 . -347) (undo-tree-id18486 . -347) (undo-tree-id18487 . -347) (undo-tree-id18488 . -347) (undo-tree-id18489 . -347) (undo-tree-id18490 . -347) (undo-tree-id18491 . -347) (undo-tree-id18492 . -347) (undo-tree-id18493 . -347) (undo-tree-id18494 . -347) (undo-tree-id18495 . -347) (undo-tree-id18496 . -347) (undo-tree-id18497 . -347) (undo-tree-id18498 . -347) (undo-tree-id18499 . -347) (undo-tree-id18500 . -347) (undo-tree-id18501 . -347) (undo-tree-id18502 . -347) (undo-tree-id18503 . -347) (undo-tree-id18504 . -347) (undo-tree-id18505 . -347) (undo-tree-id18506 . -347) (undo-tree-id18507 . -347) (undo-tree-id18508 . -347) (undo-tree-id18509 . -347) (undo-tree-id18510 . -347) (undo-tree-id18511 . -347) (undo-tree-id18512 . -347) (undo-tree-id18513 . -347) (undo-tree-id18514 . -347) (undo-tree-id18515 . -347) (undo-tree-id18516 . -347) (undo-tree-id18517 . -347) (undo-tree-id18518 . -347) (undo-tree-id18519 . -347) (undo-tree-id18520 . -347) (undo-tree-id18521 . -347) (undo-tree-id18522 . -347) (undo-tree-id18523 . -347) (undo-tree-id18524 . -347) (undo-tree-id18525 . -347) (undo-tree-id18526 . -347) (undo-tree-id18527 . -347) (undo-tree-id18528 . -347) (undo-tree-id18529 . -347) (undo-tree-id18530 . -347) (undo-tree-id18531 . -347) (undo-tree-id18532 . -347) (undo-tree-id18533 . -347) (undo-tree-id18534 . -347) (undo-tree-id18535 . -347) (undo-tree-id18536 . -347) (undo-tree-id18537 . -347) (undo-tree-id18538 . -347) (undo-tree-id18539 . -347) (undo-tree-id18540 . -347) (undo-tree-id18541 . -347) (undo-tree-id18542 . -347) (undo-tree-id18543 . -347) (undo-tree-id18544 . -347) (undo-tree-id18545 . -347) (undo-tree-id18546 . -347) (undo-tree-id18547 . -347) (undo-tree-id18548 . -347) (undo-tree-id18549 . -347) (undo-tree-id18550 . -347) (undo-tree-id18551 . -347) (undo-tree-id18552 . -347) (undo-tree-id18553 . -347) (undo-tree-id18554 . -347) (undo-tree-id18555 . -347) (undo-tree-id18556 . -347) (undo-tree-id18557 . -347) (undo-tree-id18558 . -347) (undo-tree-id18559 . -347) (undo-tree-id18560 . -347) (undo-tree-id18561 . -347) (undo-tree-id18562 . -347) (undo-tree-id18563 . -347) (undo-tree-id18564 . -347) (undo-tree-id18565 . -347) (undo-tree-id18566 . -347) (undo-tree-id18567 . -347) (undo-tree-id18568 . -347) (undo-tree-id18569 . -347) (undo-tree-id18570 . -347) (undo-tree-id18571 . -347) (undo-tree-id18572 . -347) (undo-tree-id18573 . -347) (undo-tree-id18574 . -347) (undo-tree-id18575 . -347) (undo-tree-id18576 . -347) (undo-tree-id18577 . -347) (undo-tree-id18578 . -347) (undo-tree-id18579 . -347) (undo-tree-id18580 . -347) (undo-tree-id18581 . -347) (undo-tree-id18582 . -347) (undo-tree-id18583 . -347) (undo-tree-id18584 . -347) (undo-tree-id18585 . -347) (undo-tree-id18586 . -347) (undo-tree-id18587 . -347) (undo-tree-id18588 . -347) (undo-tree-id18589 . -347) (undo-tree-id18590 . -347) (undo-tree-id18591 . -347) (undo-tree-id18592 . -347) (undo-tree-id18593 . -347) (undo-tree-id18594 . -347) (undo-tree-id18595 . -347) (undo-tree-id18596 . -347) (undo-tree-id18597 . -347) (undo-tree-id18598 . -347) (undo-tree-id18599 . -347) (undo-tree-id18600 . -347) (undo-tree-id18601 . -347) (undo-tree-id18602 . -347) (undo-tree-id18603 . -347) (undo-tree-id18604 . -347) (undo-tree-id18605 . -347) (undo-tree-id18606 . -347) (undo-tree-id18607 . -347) (undo-tree-id18608 . -347) (undo-tree-id18609 . -347) (undo-tree-id18610 . -347) (undo-tree-id18611 . -347) (undo-tree-id18612 . -347) (undo-tree-id18613 . -347) (undo-tree-id18614 . -347) (undo-tree-id18615 . -347) (undo-tree-id18616 . -347) (undo-tree-id18617 . -347) (undo-tree-id18618 . -347) (undo-tree-id18619 . -347) (undo-tree-id18620 . -347) (undo-tree-id18621 . -347) (undo-tree-id18622 . -347) (undo-tree-id18623 . -347) (undo-tree-id18624 . -347) (undo-tree-id18625 . -347) (undo-tree-id18626 . -347) (undo-tree-id18627 . -347) (undo-tree-id18628 . -347) (undo-tree-id18629 . -347) (undo-tree-id18630 . -347) (undo-tree-id18631 . -347) (undo-tree-id18632 . -347) (undo-tree-id18633 . -347) (undo-tree-id18634 . -347) (undo-tree-id18635 . -347) (undo-tree-id18636 . -347) (undo-tree-id18637 . -347) (undo-tree-id18638 . -347) (undo-tree-id18639 . -347) (undo-tree-id18640 . -347) (undo-tree-id18641 . -347) (undo-tree-id18642 . -347) (undo-tree-id18643 . -347) (undo-tree-id18644 . -347) (undo-tree-id18645 . -347) (undo-tree-id18646 . -347) (undo-tree-id18647 . -347) (undo-tree-id18648 . -347) (undo-tree-id18649 . -347) (undo-tree-id18650 . -347) (undo-tree-id18651 . -347) (undo-tree-id18652 . -347) (undo-tree-id18653 . -347) (undo-tree-id18654 . -347) (undo-tree-id18655 . -347) (undo-tree-id18656 . -347) (undo-tree-id18657 . -347) (undo-tree-id18658 . -347) (undo-tree-id18659 . -347) (undo-tree-id18660 . -347) (undo-tree-id18661 . -347) (undo-tree-id18662 . -347) (undo-tree-id18663 . -347) (undo-tree-id18664 . -347) (undo-tree-id18665 . -347) (undo-tree-id18666 . -347) (undo-tree-id18667 . -347) (undo-tree-id18668 . -347) (undo-tree-id18669 . -347) (undo-tree-id18670 . -347) (undo-tree-id18671 . -347) (undo-tree-id18672 . -347) (undo-tree-id18673 . -347) (undo-tree-id18674 . -347) (undo-tree-id18675 . -347) (undo-tree-id18676 . -347) (undo-tree-id18677 . -347) (undo-tree-id18678 . -347) (undo-tree-id18679 . -347) (undo-tree-id18680 . -347) (undo-tree-id18681 . -347) (undo-tree-id18682 . -347) (undo-tree-id18683 . -347) (undo-tree-id18684 . -347) (undo-tree-id18685 . -347) (undo-tree-id18686 . -347) (undo-tree-id18687 . -347) (undo-tree-id18688 . -347) (undo-tree-id18689 . -347) (undo-tree-id18690 . -347) (undo-tree-id18691 . -347) (undo-tree-id18692 . -347) (undo-tree-id18693 . -347) (undo-tree-id18694 . -347) (undo-tree-id18695 . -347) (undo-tree-id18696 . -347) (undo-tree-id18697 . -347) (undo-tree-id18698 . -347) (undo-tree-id18699 . -347) (undo-tree-id18700 . -347) (undo-tree-id18701 . -347) (undo-tree-id18702 . -347) (undo-tree-id18703 . -347) (undo-tree-id18704 . -347) (undo-tree-id18705 . -347) (undo-tree-id18706 . -347) (undo-tree-id18707 . -347) (undo-tree-id18708 . -347) (undo-tree-id18709 . -347) (undo-tree-id18710 . -347) (undo-tree-id18711 . -347) (undo-tree-id18712 . -347) (undo-tree-id18713 . -347) (undo-tree-id18714 . -347) (undo-tree-id18715 . -347) (undo-tree-id18716 . -347) (undo-tree-id18717 . -347) (undo-tree-id18718 . -347) (undo-tree-id18719 . -347) (undo-tree-id18720 . -347) (undo-tree-id18721 . -347) (undo-tree-id18722 . -347) (undo-tree-id18723 . -347) (undo-tree-id18724 . -347) (undo-tree-id18725 . -347) (undo-tree-id18726 . -347) (undo-tree-id18727 . -3) (undo-tree-id18728 . -4) (undo-tree-id18729 . -5) (undo-tree-id18730 . -6) (undo-tree-id18731 . -7) (undo-tree-id18732 . -8) (undo-tree-id18733 . -9) (undo-tree-id18734 . -10) (undo-tree-id18735 . -11) (undo-tree-id18736 . -12) (undo-tree-id18737 . -13) (undo-tree-id18738 . -14) (undo-tree-id18739 . -15) (undo-tree-id18740 . -16) (undo-tree-id18741 . -17) (undo-tree-id18742 . -18) (undo-tree-id18743 . -19) (undo-tree-id18744 . -20) (undo-tree-id18745 . -21) (undo-tree-id18746 . -22) (undo-tree-id18747 . -23) (undo-tree-id18748 . -24) (undo-tree-id18749 . -25) (undo-tree-id18750 . -26) (undo-tree-id18751 . -27) (undo-tree-id18752 . -28) (undo-tree-id18753 . -29) (undo-tree-id18754 . -30) (undo-tree-id18755 . -31) (undo-tree-id18756 . -32) (undo-tree-id18757 . -33) (undo-tree-id18758 . -34) (undo-tree-id18759 . -35) (undo-tree-id18760 . -36) (undo-tree-id18761 . -37) (undo-tree-id18762 . -38) (undo-tree-id18763 . -39) (undo-tree-id18764 . -39) (undo-tree-id18765 . -39) (undo-tree-id18766 . -39) (undo-tree-id18767 . -39) (undo-tree-id18768 . -40) (undo-tree-id18769 . -41) (undo-tree-id18770 . -42) (undo-tree-id18771 . -43) (undo-tree-id18772 . -44) (undo-tree-id18773 . -45) (undo-tree-id18774 . -46) (undo-tree-id18775 . -46) (undo-tree-id18776 . -46) (undo-tree-id18777 . -46) (undo-tree-id18778 . -46) (undo-tree-id18779 . -46) (undo-tree-id18780 . -46) (undo-tree-id18781 . -47) (undo-tree-id18782 . -48) (undo-tree-id18783 . -49) (undo-tree-id18784 . -50) (undo-tree-id18785 . -51) (undo-tree-id18786 . -52) (undo-tree-id18787 . -53) (undo-tree-id18788 . -54) (undo-tree-id18789 . -55) (undo-tree-id18790 . -56) (undo-tree-id18791 . -57) (undo-tree-id18792 . -58) (undo-tree-id18793 . -59) (undo-tree-id18794 . -60) (undo-tree-id18795 . -61) (undo-tree-id18796 . -62) (undo-tree-id18797 . -63) (undo-tree-id18798 . -64) (undo-tree-id18799 . -65) (undo-tree-id18800 . -66) (undo-tree-id18801 . -67) (undo-tree-id18802 . -68) (undo-tree-id18803 . -69) (undo-tree-id18804 . -70) (undo-tree-id18805 . -71) (undo-tree-id18806 . -72) (undo-tree-id18807 . -73) (undo-tree-id18808 . -74) (undo-tree-id18809 . -75) (undo-tree-id18810 . -76) (undo-tree-id18811 . -77) (undo-tree-id18812 . -78) (undo-tree-id18813 . -79) (undo-tree-id18814 . -80) (undo-tree-id18815 . -81) (undo-tree-id18816 . -82) (undo-tree-id18817 . -83) (undo-tree-id18818 . -84) (undo-tree-id18819 . -85) (undo-tree-id18820 . -86) (undo-tree-id18821 . -87) (undo-tree-id18822 . -88) (undo-tree-id18823 . -89) (undo-tree-id18824 . -90) (undo-tree-id18825 . -91) (undo-tree-id18826 . -92) (undo-tree-id18827 . -93) (undo-tree-id18828 . -94) (undo-tree-id18829 . -95) (undo-tree-id18830 . -96) (undo-tree-id18831 . -97) (undo-tree-id18832 . -97) (undo-tree-id18833 . -97) (undo-tree-id18834 . -98) (undo-tree-id18835 . -99) (undo-tree-id18836 . -100) (undo-tree-id18837 . -101) (undo-tree-id18838 . -102) (undo-tree-id18839 . -103) (undo-tree-id18840 . -104) (undo-tree-id18841 . -105) (undo-tree-id18842 . -106) (undo-tree-id18843 . -107) (undo-tree-id18844 . -108) (undo-tree-id18845 . -109) (undo-tree-id18846 . -110) (undo-tree-id18847 . -111) (undo-tree-id18848 . -112) (undo-tree-id18849 . -113) (undo-tree-id18850 . -114) (undo-tree-id18851 . -115) (undo-tree-id18852 . -116) (undo-tree-id18853 . -117) (undo-tree-id18854 . -118) (undo-tree-id18855 . -119) (undo-tree-id18856 . -120) (undo-tree-id18857 . -121) (undo-tree-id18858 . -122) (undo-tree-id18859 . -122) (undo-tree-id18860 . -122) (undo-tree-id18861 . -123) (undo-tree-id18862 . -124) (undo-tree-id18863 . -125) (undo-tree-id18864 . -126) (undo-tree-id18865 . -127) (undo-tree-id18866 . -128) (undo-tree-id18867 . -129) (undo-tree-id18868 . -130) (undo-tree-id18869 . -131) (undo-tree-id18870 . -132) (undo-tree-id18871 . -133) (undo-tree-id18872 . -134) (undo-tree-id18873 . -135) (undo-tree-id18874 . -136) (undo-tree-id18875 . -137) (undo-tree-id18876 . -138) (undo-tree-id18877 . -139) (undo-tree-id18878 . -140) (undo-tree-id18879 . -141) (undo-tree-id18880 . -142) (undo-tree-id18881 . -143) (undo-tree-id18882 . -144) (undo-tree-id18883 . -145) (undo-tree-id18884 . -146) (undo-tree-id18885 . -147) (undo-tree-id18886 . -148) (undo-tree-id18887 . -149) (undo-tree-id18888 . -150) (undo-tree-id18889 . -151) (undo-tree-id18890 . -152) (undo-tree-id18891 . -153) (undo-tree-id18892 . -154) (undo-tree-id18893 . -155) (undo-tree-id18894 . -156) (undo-tree-id18895 . -157) (undo-tree-id18896 . -158) (undo-tree-id18897 . -159) (undo-tree-id18898 . -160) (undo-tree-id18899 . -161) (undo-tree-id18900 . -162) (undo-tree-id18901 . -163) (undo-tree-id18902 . -164) (undo-tree-id18903 . -165) (undo-tree-id18904 . -166) (undo-tree-id18905 . -167) (undo-tree-id18906 . -168) (undo-tree-id18907 . -169) (undo-tree-id18908 . -170) (undo-tree-id18909 . -171) (undo-tree-id18910 . -172) (undo-tree-id18911 . -173) (undo-tree-id18912 . -174) (undo-tree-id18913 . -175) (undo-tree-id18914 . -176) (undo-tree-id18915 . -177) (undo-tree-id18916 . -178) (undo-tree-id18917 . -179) (undo-tree-id18918 . -180) (undo-tree-id18919 . -181) (undo-tree-id18920 . -182) (undo-tree-id18921 . -183) (undo-tree-id18922 . -184) (undo-tree-id18923 . -185) (undo-tree-id18924 . -186) (undo-tree-id18925 . -187) (undo-tree-id18926 . -188) (undo-tree-id18927 . -189) (undo-tree-id18928 . -190) (undo-tree-id18929 . -191) (undo-tree-id18930 . -192) (undo-tree-id18931 . -193) (undo-tree-id18932 . -194) (undo-tree-id18933 . -195) (undo-tree-id18934 . -196) (undo-tree-id18935 . -197) (undo-tree-id18936 . -198) (undo-tree-id18937 . -199) (undo-tree-id18938 . -200) (undo-tree-id18939 . -201) (undo-tree-id18940 . -202) (undo-tree-id18941 . -203) (undo-tree-id18942 . -204) (undo-tree-id18943 . -205) (undo-tree-id18944 . -206) (undo-tree-id18945 . -206) (undo-tree-id18946 . -206) (undo-tree-id18947 . -206) (undo-tree-id18948 . -206) (undo-tree-id18949 . -206) (undo-tree-id18950 . -206) (undo-tree-id18951 . -206) (undo-tree-id18952 . -206) (undo-tree-id18953 . -207) (undo-tree-id18954 . -208) (undo-tree-id18955 . -209) (undo-tree-id18956 . -210) (undo-tree-id18957 . -211) (undo-tree-id18958 . -212) (undo-tree-id18959 . -213) (undo-tree-id18960 . -214) (undo-tree-id18961 . -215) (undo-tree-id18962 . -216) (undo-tree-id18963 . -217) (undo-tree-id18964 . -218) (undo-tree-id18965 . -219) (undo-tree-id18966 . -220) (undo-tree-id18967 . -221) (undo-tree-id18968 . -222) (undo-tree-id18969 . -223) (undo-tree-id18970 . -224) (undo-tree-id18971 . -225) (undo-tree-id18972 . -225) (undo-tree-id18973 . -225) (undo-tree-id18974 . -226) (undo-tree-id18975 . -227) (undo-tree-id18976 . -227) (undo-tree-id18977 . -227) (undo-tree-id18978 . -228) (undo-tree-id18979 . -229) (undo-tree-id18980 . -230) (undo-tree-id18981 . -231) (undo-tree-id18982 . -232) (undo-tree-id18983 . -233) (undo-tree-id18984 . -234) (undo-tree-id18985 . -235) (undo-tree-id18986 . -236) (undo-tree-id18987 . -237) (undo-tree-id18988 . -238) (undo-tree-id18989 . -239) (undo-tree-id18990 . -240) (undo-tree-id18991 . -241) (undo-tree-id18992 . -242) (undo-tree-id18993 . -243) (undo-tree-id18994 . -244) (undo-tree-id18995 . -245) (undo-tree-id18996 . -246) (undo-tree-id18997 . -247) (undo-tree-id18998 . -248) (undo-tree-id18999 . -249) (undo-tree-id19000 . -250) (undo-tree-id19001 . -251) (undo-tree-id19002 . -252) (undo-tree-id19003 . -253) (undo-tree-id19004 . -254) (undo-tree-id19005 . -255) (undo-tree-id19006 . -256) (undo-tree-id19007 . -256) (undo-tree-id19008 . -256) (undo-tree-id19009 . -256) (undo-tree-id19010 . -256) (undo-tree-id19011 . -257) (undo-tree-id19012 . -258) (undo-tree-id19013 . -259) (undo-tree-id19014 . -260) (undo-tree-id19015 . -261) (undo-tree-id19016 . -262) (undo-tree-id19017 . -263) (undo-tree-id19018 . -264) (undo-tree-id19019 . -265) (undo-tree-id19020 . -266) (undo-tree-id19021 . -267) (undo-tree-id19022 . -268) (undo-tree-id19023 . -269) (undo-tree-id19024 . -270) (undo-tree-id19025 . -271) (undo-tree-id19026 . -272) (undo-tree-id19027 . -273) (undo-tree-id19028 . -274) (undo-tree-id19029 . -275) (undo-tree-id19030 . -276) (undo-tree-id19031 . -277) (undo-tree-id19032 . -277) (undo-tree-id19033 . -277) (undo-tree-id19034 . -277) (undo-tree-id19035 . -277) (undo-tree-id19036 . -277) (undo-tree-id19037 . -278) (undo-tree-id19038 . -279) (undo-tree-id19039 . -280) (undo-tree-id19040 . -280) (undo-tree-id19041 . -280) (undo-tree-id19042 . -281) (undo-tree-id19043 . -282) (undo-tree-id19044 . -283) (undo-tree-id19045 . -284) (undo-tree-id19046 . -285) (undo-tree-id19047 . -286) (undo-tree-id19048 . -287) (undo-tree-id19049 . -288) (undo-tree-id19050 . -288) (undo-tree-id19051 . -288) (undo-tree-id19052 . -288) (undo-tree-id19053 . -288) (undo-tree-id19054 . -289) (undo-tree-id19055 . -290) (undo-tree-id19056 . -291) (undo-tree-id19057 . -292) (undo-tree-id19058 . -293) (undo-tree-id19059 . -294) (undo-tree-id19060 . -295) (undo-tree-id19061 . -296) (undo-tree-id19062 . -297) (undo-tree-id19063 . -298) (undo-tree-id19064 . -299) (undo-tree-id19065 . -300) (undo-tree-id19066 . -301) (undo-tree-id19067 . -302) (undo-tree-id19068 . -303) (undo-tree-id19069 . -304) (undo-tree-id19070 . -305) (undo-tree-id19071 . -305) (undo-tree-id19072 . -305) (undo-tree-id19073 . -306) (undo-tree-id19074 . -307) (undo-tree-id19075 . -308) (undo-tree-id19076 . -309) (undo-tree-id19077 . -310) (undo-tree-id19078 . -311) (undo-tree-id19079 . -312) (undo-tree-id19080 . -313) (undo-tree-id19081 . -314) (undo-tree-id19082 . -315) (undo-tree-id19083 . -316) (undo-tree-id19084 . -317) (undo-tree-id19085 . -318) (undo-tree-id19086 . -319) (undo-tree-id19087 . -320) (undo-tree-id19088 . -321) (undo-tree-id19089 . -322) (undo-tree-id19090 . -323) (undo-tree-id19091 . -324) (undo-tree-id19092 . -325) (undo-tree-id19093 . -326) (undo-tree-id19094 . -327) (undo-tree-id19095 . -328) (undo-tree-id19096 . -329) (undo-tree-id19097 . -330) (undo-tree-id19098 . -331) (undo-tree-id19099 . -332) (undo-tree-id19100 . -333) (undo-tree-id19101 . -334) (undo-tree-id19102 . -335) (undo-tree-id19103 . -336) (undo-tree-id19104 . -337) (undo-tree-id19105 . -338) (undo-tree-id19106 . -339) (undo-tree-id19107 . -340) (undo-tree-id19108 . -341) (undo-tree-id19109 . -342) (undo-tree-id19110 . -343) (undo-tree-id19111 . -344) (undo-tree-id19112 . -345) (undo-tree-id19113 . -345) (undo-tree-id19114 . -344) (undo-tree-id19115 . -344) (undo-tree-id19116 . -344) (undo-tree-id19117 . -344) (undo-tree-id19118 . -344) (undo-tree-id19119 . -344) (undo-tree-id19120 . -344) (undo-tree-id19121 . -344) (undo-tree-id19122 . -344) (undo-tree-id19123 . -344) (undo-tree-id19124 . -344) (undo-tree-id19125 . -345) (undo-tree-id19126 . -344) (undo-tree-id19127 . -345) (undo-tree-id19128 . -345) (undo-tree-id19129 . -345) (undo-tree-id19130 . -345) (undo-tree-id19131 . -345) (undo-tree-id19132 . -345) (undo-tree-id19133 . -345) (undo-tree-id19134 . -346) (undo-tree-id19135 . -345) (undo-tree-id19136 . -346) (undo-tree-id19137 . -346) (undo-tree-id19138 . -346) (undo-tree-id19139 . -346) (undo-tree-id19140 . -346) (undo-tree-id19141 . -346) (undo-tree-id19142 . -346) (undo-tree-id19143 . -346) (undo-tree-id19144 . -346) (undo-tree-id19145 . -346) (undo-tree-id19146 . -346) (undo-tree-id19147 . -346) (undo-tree-id19148 . -346) (undo-tree-id19149 . -346) (undo-tree-id19150 . -346) (undo-tree-id19151 . -346) (undo-tree-id19152 . -346) (undo-tree-id19153 . -346) (undo-tree-id19154 . -346) (undo-tree-id19155 . -346) (undo-tree-id19156 . -346) (undo-tree-id19157 . -345) (undo-tree-id19158 . -345) (undo-tree-id19159 . -345) (undo-tree-id19160 . -345) (undo-tree-id19161 . -345) (undo-tree-id19162 . -345) (undo-tree-id19163 . -345) (undo-tree-id19164 . -345) (undo-tree-id19165 . -345) (undo-tree-id19166 . -345) (undo-tree-id19167 . -345) (undo-tree-id19168 . -345) (undo-tree-id19169 . -345) (undo-tree-id19170 . -345) (undo-tree-id19171 . -345) (undo-tree-id19172 . -345) (undo-tree-id19173 . -344) (undo-tree-id19174 . -345) (undo-tree-id19175 . -344) (undo-tree-id19176 . -344) (undo-tree-id19177 . -344) (undo-tree-id19178 . -344) (undo-tree-id19179 . -344) (undo-tree-id19180 . -344) (undo-tree-id19181 . -344) (undo-tree-id19182 . -344) (undo-tree-id19183 . -344) (undo-tree-id19184 . -344) (undo-tree-id19185 . -343) (undo-tree-id19186 . -344) (undo-tree-id19187 . -343) (undo-tree-id19188 . -343) (undo-tree-id19189 . -343) (undo-tree-id19190 . -343) (undo-tree-id19191 . -343) (undo-tree-id19192 . -343) (undo-tree-id19193 . -343) (undo-tree-id19194 . -343) (undo-tree-id19195 . -343) (undo-tree-id19196 . -343) (undo-tree-id19197 . -343) (undo-tree-id19198 . -343) (undo-tree-id19199 . -343) (undo-tree-id19200 . -343) (undo-tree-id19201 . -343) (undo-tree-id19202 . -343) (undo-tree-id19203 . -343) (undo-tree-id19204 . -343) (undo-tree-id19205 . -343) (undo-tree-id19206 . -343) (undo-tree-id19207 . -343) (undo-tree-id19208 . -343) (undo-tree-id19209 . -343) 66807) nil (25151 37432 279560 553000) 0 nil])
([nil nil ((66463 . 66464)) nil (25151 37432 277596 934000) 0 nil])
([nil nil ((66945 . 66946) (#(" " 0 1 (fontified t)) . -66945) (undo-tree-id20676 . -1) (undo-tree-id20677 . -1) (undo-tree-id20678 . -1) (undo-tree-id20679 . -1) (undo-tree-id20680 . -1) (undo-tree-id20681 . -1) (undo-tree-id20682 . -1) (undo-tree-id20683 . -1) (undo-tree-id20684 . -1) (undo-tree-id20685 . -1) (undo-tree-id20686 . -1) (undo-tree-id20687 . -1) (undo-tree-id20688 . -1) (undo-tree-id20689 . -1) (undo-tree-id20690 . -1) (undo-tree-id20691 . -1) (undo-tree-id20692 . -1) (undo-tree-id20693 . -1) (undo-tree-id20694 . -1) (undo-tree-id20695 . -1) (undo-tree-id20696 . -1) (undo-tree-id20697 . -1) (undo-tree-id20698 . -1) (undo-tree-id20699 . -1) (undo-tree-id20700 . -1) (undo-tree-id20701 . -1) (undo-tree-id20702 . -1) (undo-tree-id20703 . -1) (undo-tree-id20704 . -1) (undo-tree-id20705 . -1) (undo-tree-id20706 . -1) (undo-tree-id20707 . -1) (undo-tree-id20708 . -1) (undo-tree-id20709 . -1) (undo-tree-id20710 . -1) (undo-tree-id20711 . -1) (undo-tree-id20712 . -1) (undo-tree-id20713 . -1) (undo-tree-id20714 . -1) (undo-tree-id20715 . -1) (undo-tree-id20716 . -1) (undo-tree-id20717 . -1) (undo-tree-id20718 . -1) (undo-tree-id20719 . -1) (undo-tree-id20720 . -1) (undo-tree-id20721 . -1) (undo-tree-id20722 . -1) (undo-tree-id20723 . -1) (undo-tree-id20724 . -1) (undo-tree-id20725 . -1) (undo-tree-id20726 . -1) (undo-tree-id20727 . -1) (undo-tree-id20728 . -1) (undo-tree-id20729 . -1) (undo-tree-id20730 . -1) (undo-tree-id20731 . -1) (undo-tree-id20732 . -1) (undo-tree-id20733 . -1) (undo-tree-id20734 . -1) (undo-tree-id20735 . -1) (undo-tree-id20736 . -1) (undo-tree-id20737 . -1) (undo-tree-id20738 . -1) (undo-tree-id20739 . -1) (undo-tree-id20740 . -1) (undo-tree-id20741 . -1) (undo-tree-id20742 . -1) (undo-tree-id20743 . -1) (undo-tree-id20744 . -1) (undo-tree-id20745 . -1) (undo-tree-id20746 . -1) (undo-tree-id20747 . -1) (undo-tree-id20748 . -1) (undo-tree-id20749 . -1) (undo-tree-id20750 . -1) (undo-tree-id20751 . -1) (undo-tree-id20752 . -1) (undo-tree-id20753 . -1) (undo-tree-id20754 . -1) (undo-tree-id20755 . -1) (undo-tree-id20756 . -1) (undo-tree-id20757 . -1) (undo-tree-id20758 . -1) (undo-tree-id20759 . -1) (undo-tree-id20760 . -1) (undo-tree-id20761 . -1) (undo-tree-id20762 . -1) (undo-tree-id20763 . -1) (undo-tree-id20764 . -1) (undo-tree-id20765 . -1) (undo-tree-id20766 . -1) (undo-tree-id20767 . -1) (undo-tree-id20768 . -1) (undo-tree-id20769 . -1) (undo-tree-id20770 . -1) (undo-tree-id20771 . -1) (undo-tree-id20772 . -1) (undo-tree-id20773 . -1) (undo-tree-id20774 . -1) (undo-tree-id20775 . -1) (undo-tree-id20776 . -1) (undo-tree-id20777 . -1) (undo-tree-id20778 . -1) (undo-tree-id20779 . -1) (undo-tree-id20780 . -1) (undo-tree-id20781 . -1) (undo-tree-id20782 . -1) (undo-tree-id20783 . -1) (undo-tree-id20784 . -1) (undo-tree-id20785 . -1) (undo-tree-id20786 . -1) (undo-tree-id20787 . -1) (undo-tree-id20788 . -1) (undo-tree-id20789 . -1) (undo-tree-id20790 . -1) (undo-tree-id20791 . -1) (undo-tree-id20792 . -1) (undo-tree-id20793 . -1) (undo-tree-id20794 . -1) (undo-tree-id20795 . -1) (undo-tree-id20796 . -1) (undo-tree-id20797 . -1) (undo-tree-id20798 . -1) (undo-tree-id20799 . -1) (undo-tree-id20800 . -1) (undo-tree-id20801 . -1) (undo-tree-id20802 . -1) (undo-tree-id20803 . -1) (undo-tree-id20804 . -1) (undo-tree-id20805 . -1) (undo-tree-id20806 . -1) (undo-tree-id20807 . -1) (undo-tree-id20808 . -1) (undo-tree-id20809 . -1) (undo-tree-id20810 . -1) (undo-tree-id20811 . -1) (undo-tree-id20812 . -1) (undo-tree-id20813 . -1) (undo-tree-id20814 . -1) (undo-tree-id20815 . -1) (undo-tree-id20816 . -1) (undo-tree-id20817 . -1) (undo-tree-id20818 . -1) (undo-tree-id20819 . -1) (undo-tree-id20820 . -1) (undo-tree-id20821 . -1) (undo-tree-id20822 . -1) (undo-tree-id20823 . -1) (undo-tree-id20824 . -1) (undo-tree-id20825 . -1) (undo-tree-id20826 . -1) (undo-tree-id20827 . -1) (undo-tree-id20828 . -1) (undo-tree-id20829 . -1) (undo-tree-id20830 . -1) (undo-tree-id20831 . -1) (undo-tree-id20832 . -1) (undo-tree-id20833 . -1) (undo-tree-id20834 . -1) (undo-tree-id20835 . -1) (undo-tree-id20836 . -1) (undo-tree-id20837 . -1) (undo-tree-id20838 . -1) (undo-tree-id20839 . -1) (undo-tree-id20840 . -1) (undo-tree-id20841 . -1) (undo-tree-id20842 . -1) (undo-tree-id20843 . -1) (undo-tree-id20844 . -1) (undo-tree-id20845 . -1) (undo-tree-id20846 . -1) (undo-tree-id20847 . -1) (undo-tree-id20848 . -1) (undo-tree-id20849 . -1) (undo-tree-id20850 . -1) (undo-tree-id20851 . -1) (undo-tree-id20852 . -1) (undo-tree-id20853 . -1) (undo-tree-id20854 . -1) (undo-tree-id20855 . -1) (undo-tree-id20856 . -1) (undo-tree-id20857 . -1) (undo-tree-id20858 . -1) (undo-tree-id20859 . -1) (undo-tree-id20860 . -1) (undo-tree-id20861 . -1) (undo-tree-id20862 . -1) (undo-tree-id20863 . -1) (undo-tree-id20864 . -1) (undo-tree-id20865 . -1) (undo-tree-id20866 . -1) (undo-tree-id20867 . -1) (undo-tree-id20868 . -1) (undo-tree-id20869 . -1) (undo-tree-id20870 . -1) (undo-tree-id20871 . -1) (undo-tree-id20872 . -1) (undo-tree-id20873 . -1) (undo-tree-id20874 . -1) (undo-tree-id20875 . -1) (undo-tree-id20876 . -1) (undo-tree-id20877 . -1) (undo-tree-id20878 . -1) (undo-tree-id20879 . -1) (undo-tree-id20880 . -1) (undo-tree-id20881 . -1) (undo-tree-id20882 . -1) (undo-tree-id20883 . -1) (undo-tree-id20884 . -1) (undo-tree-id20885 . -1) (undo-tree-id20886 . -1) (undo-tree-id20887 . -1) (undo-tree-id20888 . -1) (undo-tree-id20889 . -1) (undo-tree-id20890 . -1) (undo-tree-id20891 . -1) (undo-tree-id20892 . -1) (undo-tree-id20893 . -1) (undo-tree-id20894 . -1) (undo-tree-id20895 . -1) (undo-tree-id20896 . -1) (undo-tree-id20897 . -1) (undo-tree-id20898 . -1) (undo-tree-id20899 . -1) (undo-tree-id20900 . -1) (undo-tree-id20901 . -1) (undo-tree-id20902 . -1) (undo-tree-id20903 . -1) (undo-tree-id20904 . -1) (undo-tree-id20905 . -1) (undo-tree-id20906 . -1) (undo-tree-id20907 . -1) (undo-tree-id20908 . -1) (undo-tree-id20909 . -1) (undo-tree-id20910 . -1) (undo-tree-id20911 . -1) (undo-tree-id20912 . -1) (undo-tree-id20913 . -1) (undo-tree-id20914 . -1) (undo-tree-id20915 . -1) (undo-tree-id20916 . -1) (undo-tree-id20917 . -1) (undo-tree-id20918 . -1) (undo-tree-id20919 . -1) (undo-tree-id20920 . -1) (undo-tree-id20921 . -1) (undo-tree-id20922 . -1) (undo-tree-id20923 . -1) (undo-tree-id20924 . -1) (undo-tree-id20925 . -1) (undo-tree-id20926 . -1) (undo-tree-id20927 . -1) (undo-tree-id20928 . -1) (undo-tree-id20929 . -1) (undo-tree-id20930 . -1) (undo-tree-id20931 . -1) (undo-tree-id20932 . -1) (undo-tree-id20933 . -1) (undo-tree-id20934 . -1) (undo-tree-id20935 . -1) (undo-tree-id20936 . -1) (undo-tree-id20937 . -1) (undo-tree-id20938 . -1) (undo-tree-id20939 . -1) (undo-tree-id20940 . -1) (undo-tree-id20941 . -1) (undo-tree-id20942 . -1) (undo-tree-id20943 . -1) (undo-tree-id20944 . -1) (undo-tree-id20945 . -1) (undo-tree-id20946 . -1) (undo-tree-id20947 . -1) (undo-tree-id20948 . -1) (undo-tree-id20949 . -1) (undo-tree-id20950 . -1) (undo-tree-id20951 . -1) (undo-tree-id20952 . -1) (undo-tree-id20953 . -1) (undo-tree-id20954 . -1) (undo-tree-id20955 . -1) (undo-tree-id20956 . -1) (undo-tree-id20957 . -1) (undo-tree-id20958 . -1) (undo-tree-id20959 . -1) (undo-tree-id20960 . -1) (undo-tree-id20961 . -1) (undo-tree-id20962 . -1) (undo-tree-id20963 . -1) (undo-tree-id20964 . -1) (undo-tree-id20965 . -1) (undo-tree-id20966 . -1) (undo-tree-id20967 . -1) (undo-tree-id20968 . -1) (undo-tree-id20969 . -1) (undo-tree-id20970 . -1) (undo-tree-id20971 . -1) (undo-tree-id20972 . -1) (undo-tree-id20973 . -1) (undo-tree-id20974 . -1) (undo-tree-id20975 . -1) (undo-tree-id20976 . -1) (undo-tree-id20977 . -1) (undo-tree-id20978 . -1) (undo-tree-id20979 . -1) (undo-tree-id20980 . -1) (undo-tree-id20981 . -1) (undo-tree-id20982 . -1) (undo-tree-id20983 . -1) (undo-tree-id20984 . -1) (undo-tree-id20985 . -1) (undo-tree-id20986 . -1) (undo-tree-id20987 . -1) (undo-tree-id20988 . -1) (undo-tree-id20989 . -1) (undo-tree-id20990 . -1) (undo-tree-id20991 . -1) (undo-tree-id20992 . -1) (undo-tree-id20993 . -1) (undo-tree-id20994 . -1) (undo-tree-id20995 . -1) (undo-tree-id20996 . -1) (undo-tree-id20997 . -1) (undo-tree-id20998 . -1) (undo-tree-id20999 . -1) (undo-tree-id21000 . -1) (undo-tree-id21001 . -1) (undo-tree-id21002 . -1) (undo-tree-id21003 . -1) (undo-tree-id21004 . -1) (undo-tree-id21005 . -1) (undo-tree-id21006 . -1) (undo-tree-id21007 . -1) (undo-tree-id21008 . -1) (undo-tree-id21009 . -1) (undo-tree-id21010 . -1) (undo-tree-id21011 . -1) (undo-tree-id21012 . -1) (undo-tree-id21013 . -1) (undo-tree-id21014 . -1) (undo-tree-id21015 . -1) (undo-tree-id21016 . -1) (undo-tree-id21017 . -1) (undo-tree-id21018 . -1) (undo-tree-id21019 . -1) (undo-tree-id21020 . -1) (undo-tree-id21021 . -1) (undo-tree-id21022 . -1) (undo-tree-id21023 . -1) (undo-tree-id21024 . -1) (undo-tree-id21025 . -1) (undo-tree-id21026 . -1) (undo-tree-id21027 . -1) (undo-tree-id21028 . -1) (undo-tree-id21029 . -1) (undo-tree-id21030 . -1) (undo-tree-id21031 . -1) (undo-tree-id21032 . -1) (undo-tree-id21033 . -1) (undo-tree-id21034 . -1) (undo-tree-id21035 . -1) (undo-tree-id21036 . -1) (undo-tree-id21037 . -1) (undo-tree-id21038 . -1) (undo-tree-id21039 . -1) (undo-tree-id21040 . -1) (undo-tree-id21041 . -1) (undo-tree-id21042 . -1) (undo-tree-id21043 . -1) (undo-tree-id21044 . -1) (undo-tree-id21045 . -1) (undo-tree-id21046 . -1) (undo-tree-id21047 . -1) (undo-tree-id21048 . -1) (undo-tree-id21049 . -1) (undo-tree-id21050 . -1) (undo-tree-id21051 . -1) (undo-tree-id21052 . -1) (undo-tree-id21053 . -1) (undo-tree-id21054 . -1) (undo-tree-id21055 . -1) (undo-tree-id21056 . -1) (undo-tree-id21057 . -1) (undo-tree-id21058 . -1) (undo-tree-id21059 . -1) (undo-tree-id21060 . -1) (undo-tree-id21061 . -1) (undo-tree-id21062 . -1) (undo-tree-id21063 . -1) (undo-tree-id21064 . -1) (undo-tree-id21065 . -1) (undo-tree-id21066 . -1) (undo-tree-id21067 . -1) (undo-tree-id21068 . -1) (undo-tree-id21069 . -1) (undo-tree-id21070 . -1) (undo-tree-id21071 . -1) (undo-tree-id21072 . -1) (undo-tree-id21073 . -1) (undo-tree-id21074 . -1) (undo-tree-id21075 . -1) (undo-tree-id21076 . -1) (undo-tree-id21077 . -1) (undo-tree-id21078 . -1) (undo-tree-id21079 . -1) (undo-tree-id21080 . -1) (undo-tree-id21081 . -1) (undo-tree-id21082 . -1) (undo-tree-id21083 . -1) (undo-tree-id21084 . -1) (undo-tree-id21085 . -1) (undo-tree-id21086 . -1) (undo-tree-id21087 . -1) (undo-tree-id21088 . -1) (undo-tree-id21089 . -1) (undo-tree-id21090 . -1) (undo-tree-id21091 . -1) (undo-tree-id21092 . -1) (undo-tree-id21093 . -1) (undo-tree-id21094 . -1) (undo-tree-id21095 . -1) (undo-tree-id21096 . -1) (undo-tree-id21097 . -1) (undo-tree-id21098 . -1) (undo-tree-id21099 . -1) (undo-tree-id21100 . -1) (undo-tree-id21101 . -1) (undo-tree-id21102 . -1) (undo-tree-id21103 . -1) (undo-tree-id21104 . -1) (undo-tree-id21105 . -1) (undo-tree-id21106 . -1) (undo-tree-id21107 . -1) (undo-tree-id21108 . -1) (undo-tree-id21109 . -1) (undo-tree-id21110 . -1) (undo-tree-id21111 . -1) (undo-tree-id21112 . -1) (undo-tree-id21113 . -1) (undo-tree-id21114 . -1) (undo-tree-id21115 . -1) (undo-tree-id21116 . -1) (undo-tree-id21117 . -1) (undo-tree-id21118 . -1) (undo-tree-id21119 . -1) (undo-tree-id21120 . -1) (undo-tree-id21121 . -1) (undo-tree-id21122 . -1) (undo-tree-id21123 . -1) (undo-tree-id21124 . -1) (undo-tree-id21125 . -1) (undo-tree-id21126 . -1) (undo-tree-id21127 . -1) (undo-tree-id21128 . -1) (undo-tree-id21129 . -1) (undo-tree-id21130 . -1) (undo-tree-id21131 . -1) (undo-tree-id21132 . -1) (undo-tree-id21133 . -1) (undo-tree-id21134 . -1) (undo-tree-id21135 . -1) (undo-tree-id21136 . -1) (undo-tree-id21137 . -1) (undo-tree-id21138 . -1) (undo-tree-id21139 . -1) (undo-tree-id21140 . -1) (undo-tree-id21141 . -1) (undo-tree-id21142 . -1) (undo-tree-id21143 . -1) (undo-tree-id21144 . -1) (undo-tree-id21145 . -1) (undo-tree-id21146 . -1) (undo-tree-id21147 . -1) (undo-tree-id21148 . -1) (undo-tree-id21149 . -1) (undo-tree-id21150 . -1) (undo-tree-id21151 . -1) (undo-tree-id21152 . -1) (undo-tree-id21153 . -1) (undo-tree-id21154 . -1) (undo-tree-id21155 . -1) (undo-tree-id21156 . -1) (undo-tree-id21157 . -1) (undo-tree-id21158 . -1) (undo-tree-id21159 . -1) (undo-tree-id21160 . -1) (undo-tree-id21161 . -1) (undo-tree-id21162 . -1) (undo-tree-id21163 . -1) (undo-tree-id21164 . -1) (undo-tree-id21165 . -1) (undo-tree-id21166 . -1) (undo-tree-id21167 . -1) (undo-tree-id21168 . -1) (undo-tree-id21169 . -1) (undo-tree-id21170 . -1) (undo-tree-id21171 . -1) (undo-tree-id21172 . -1) (undo-tree-id21173 . -1) (undo-tree-id21174 . -1) (undo-tree-id21175 . -1) (undo-tree-id21176 . -1) (undo-tree-id21177 . -1) (undo-tree-id21178 . -1) (undo-tree-id21179 . -1) (undo-tree-id21180 . -1) (undo-tree-id21181 . -1) (undo-tree-id21182 . -1) (undo-tree-id21183 . -1) (undo-tree-id21184 . -1) (undo-tree-id21185 . -1) (undo-tree-id21186 . -1) (undo-tree-id21187 . -1) (undo-tree-id21188 . -1) (undo-tree-id21189 . -1) (undo-tree-id21190 . -1) (undo-tree-id21191 . -1) (undo-tree-id21192 . -1) (undo-tree-id21193 . -1) (undo-tree-id21194 . -1) (undo-tree-id21195 . -1) (undo-tree-id21196 . -1) (undo-tree-id21197 . -1) (undo-tree-id21198 . -1) (undo-tree-id21199 . -1) (undo-tree-id21200 . -1) (undo-tree-id21201 . -1) (undo-tree-id21202 . -1) (undo-tree-id21203 . -1) (undo-tree-id21204 . -1) (undo-tree-id21205 . -1) (undo-tree-id21206 . -1) (undo-tree-id21207 . -1) (undo-tree-id21208 . -1) (undo-tree-id21209 . -1) (undo-tree-id21210 . -1) (undo-tree-id21211 . -1) (undo-tree-id21212 . -1) (undo-tree-id21213 . -1) (undo-tree-id21214 . -1) (undo-tree-id21215 . -1) (undo-tree-id21216 . -1) (undo-tree-id21217 . -1) (undo-tree-id21218 . -1) (undo-tree-id21219 . -1) (undo-tree-id21220 . -1) (undo-tree-id21221 . -1) (undo-tree-id21222 . -1) (undo-tree-id21223 . -1) (undo-tree-id21224 . -1) (undo-tree-id21225 . -1) (undo-tree-id21226 . -1) (undo-tree-id21227 . -1) (undo-tree-id21228 . -1) (undo-tree-id21229 . -1) (undo-tree-id21230 . -1) (undo-tree-id21231 . -1) (undo-tree-id21232 . -1) (undo-tree-id21233 . -1) (undo-tree-id21234 . -1) (undo-tree-id21235 . -1) (undo-tree-id21236 . -1) (undo-tree-id21237 . -1) (undo-tree-id21238 . -1) (undo-tree-id21239 . -1) (undo-tree-id21240 . -1) (undo-tree-id21241 . -1) (undo-tree-id21242 . -1) (undo-tree-id21243 . -1) (undo-tree-id21244 . -1) (undo-tree-id21245 . -1) (undo-tree-id21246 . -1) (undo-tree-id21247 . -1) (undo-tree-id21248 . -1) (undo-tree-id21249 . -1) (undo-tree-id21250 . -1) (undo-tree-id21251 . -1) (undo-tree-id21252 . -1) (undo-tree-id21253 . -1) (undo-tree-id21254 . -1) (undo-tree-id21255 . -1) (undo-tree-id21256 . -1) (undo-tree-id21257 . -1) (undo-tree-id21258 . -1) (undo-tree-id21259 . -1) (undo-tree-id21260 . -1) (undo-tree-id21261 . -1) (undo-tree-id21262 . -1) (undo-tree-id21263 . -1) (undo-tree-id21264 . -1) (undo-tree-id21265 . -1) (undo-tree-id21266 . -1) (undo-tree-id21267 . -1) (undo-tree-id21268 . -1) (undo-tree-id21269 . -1) (undo-tree-id21270 . -1) (undo-tree-id21271 . -1) (undo-tree-id21272 . -1) (undo-tree-id21273 . -1) (undo-tree-id21274 . -1) (undo-tree-id21275 . -1) (undo-tree-id21276 . -1) (undo-tree-id21277 . -1) (undo-tree-id21278 . -1) (undo-tree-id21279 . -1) (undo-tree-id21280 . -1) (undo-tree-id21281 . -1) (undo-tree-id21282 . -1) (undo-tree-id21283 . -1) (undo-tree-id21284 . -1) (undo-tree-id21285 . -1) (undo-tree-id21286 . -1) (undo-tree-id21287 . -1) (undo-tree-id21288 . -1) (undo-tree-id21289 . -1) (undo-tree-id21290 . -1) (undo-tree-id21291 . -1) (undo-tree-id21292 . -1) (undo-tree-id21293 . -1) (undo-tree-id21294 . -1) (undo-tree-id21295 . -1) (undo-tree-id21296 . -1) (undo-tree-id21297 . -1) (undo-tree-id21298 . -1) (undo-tree-id21299 . -1) (undo-tree-id21300 . -1) (undo-tree-id21301 . -1) (undo-tree-id21302 . -1) (undo-tree-id21303 . -1) (undo-tree-id21304 . -1) (undo-tree-id21305 . -1) (undo-tree-id21306 . -1) (undo-tree-id21307 . -1) (undo-tree-id21308 . -1) (undo-tree-id21309 . -1) (undo-tree-id21310 . -1) (undo-tree-id21311 . -1) (undo-tree-id21312 . -1) (undo-tree-id21313 . -1) (undo-tree-id21314 . -1) (undo-tree-id21315 . -1) (undo-tree-id21316 . -1) (undo-tree-id21317 . -1) (undo-tree-id21318 . -1) (undo-tree-id21319 . -1) (undo-tree-id21320 . -1) (undo-tree-id21321 . -1) (undo-tree-id21322 . -1) (undo-tree-id21323 . -1) (undo-tree-id21324 . -1) (undo-tree-id21325 . -1) (undo-tree-id21326 . -1) (undo-tree-id21327 . -1) (undo-tree-id21328 . -1) (undo-tree-id21329 . -1) (undo-tree-id21330 . -1) (undo-tree-id21331 . -1) (undo-tree-id21332 . -1) (undo-tree-id21333 . -1) (undo-tree-id21334 . -1) (undo-tree-id21335 . -1) (undo-tree-id21336 . -1) (undo-tree-id21337 . -1) (undo-tree-id21338 . -1) (undo-tree-id21339 . -1) (undo-tree-id21340 . -1) (undo-tree-id21341 . -1) (undo-tree-id21342 . -1) (undo-tree-id21343 . -1) (undo-tree-id21344 . -1) (undo-tree-id21345 . -1) (undo-tree-id21346 . -1) (undo-tree-id21347 . -1) (undo-tree-id21348 . -1) (undo-tree-id21349 . -1) (undo-tree-id21350 . -1) (undo-tree-id21351 . -1) (undo-tree-id21352 . -1) (undo-tree-id21353 . -1) (undo-tree-id21354 . -1) (undo-tree-id21355 . -1) (undo-tree-id21356 . -1) (undo-tree-id21357 . -1) (undo-tree-id21358 . -1) (undo-tree-id21359 . -1) (undo-tree-id21360 . -1) (undo-tree-id21361 . -1) (undo-tree-id21362 . -1) (undo-tree-id21363 . -1) (undo-tree-id21364 . -1) (undo-tree-id21365 . -1) (undo-tree-id21366 . -1) (undo-tree-id21367 . -1) (undo-tree-id21368 . -1) (undo-tree-id21369 . -1) (undo-tree-id21370 . -1) (undo-tree-id21371 . -1) (undo-tree-id21372 . -1) (undo-tree-id21373 . -1) (undo-tree-id21374 . -1) (undo-tree-id21375 . -1) (undo-tree-id21376 . -1) (undo-tree-id21377 . -1) (undo-tree-id21378 . -1) (undo-tree-id21379 . -1) (undo-tree-id21380 . -1) (undo-tree-id21381 . -1) (undo-tree-id21382 . -1) (undo-tree-id21383 . -1) (undo-tree-id21384 . -1) (undo-tree-id21385 . -1) (undo-tree-id21386 . -1) (undo-tree-id21387 . -1) (undo-tree-id21388 . -1) (undo-tree-id21389 . -1) (undo-tree-id21390 . -1) (undo-tree-id21391 . -1) (undo-tree-id21392 . -1) (undo-tree-id21393 . -1) (undo-tree-id21394 . -1) (undo-tree-id21395 . -1) (undo-tree-id21396 . -1) (undo-tree-id21397 . -1) (undo-tree-id21398 . -1) (undo-tree-id21399 . -1) (undo-tree-id21400 . -1) (undo-tree-id21401 . -1) (undo-tree-id21402 . -1) (undo-tree-id21403 . -1) (undo-tree-id21404 . -1) (undo-tree-id21405 . -1) (undo-tree-id21406 . -1) (undo-tree-id21407 . -1) (undo-tree-id21408 . -1) (undo-tree-id21409 . -1) (undo-tree-id21410 . -1) (undo-tree-id21411 . -1) (undo-tree-id21412 . -1) (undo-tree-id21413 . -1) (undo-tree-id21414 . -1) (undo-tree-id21415 . -1) (undo-tree-id21416 . -1) (undo-tree-id21417 . -1) (undo-tree-id21418 . -1) (undo-tree-id21419 . -1) (#("a" 0 1 (fontified t)) . -66946) (undo-tree-id21420 . -1) (undo-tree-id21421 . -1) (undo-tree-id21422 . -1) (undo-tree-id21423 . -1) (undo-tree-id21424 . -1) (undo-tree-id21425 . -1) (undo-tree-id21426 . -1) (undo-tree-id21427 . -1) (undo-tree-id21428 . -1) (undo-tree-id21429 . -1) (undo-tree-id21430 . -1) (undo-tree-id21431 . -1) (undo-tree-id21432 . -1) (undo-tree-id21433 . -1) (undo-tree-id21434 . -1) (undo-tree-id21435 . -1) (undo-tree-id21436 . -1) (undo-tree-id21437 . -1) (undo-tree-id21438 . -1) (undo-tree-id21439 . -1) (undo-tree-id21440 . -1) (undo-tree-id21441 . -1) (undo-tree-id21442 . -1) (undo-tree-id21443 . -1) (undo-tree-id21444 . -1) (undo-tree-id21445 . -1) (undo-tree-id21446 . -1) (undo-tree-id21447 . -1) (undo-tree-id21448 . -1) (undo-tree-id21449 . -1) (undo-tree-id21450 . -1) (undo-tree-id21451 . -1) (undo-tree-id21452 . -1) (undo-tree-id21453 . -1) (undo-tree-id21454 . -1) (undo-tree-id21455 . -1) (undo-tree-id21456 . -1) (undo-tree-id21457 . -1) (undo-tree-id21458 . -1) (undo-tree-id21459 . -1) (undo-tree-id21460 . -1) (undo-tree-id21461 . -1) (undo-tree-id21462 . -1) (undo-tree-id21463 . -1) (undo-tree-id21464 . -1) (undo-tree-id21465 . -1) (undo-tree-id21466 . -1) (undo-tree-id21467 . -1) (undo-tree-id21468 . -1) (undo-tree-id21469 . -1) (undo-tree-id21470 . -1) (undo-tree-id21471 . -1) (undo-tree-id21472 . -1) (undo-tree-id21473 . -1) (undo-tree-id21474 . -1) (undo-tree-id21475 . -1) (undo-tree-id21476 . -1) (undo-tree-id21477 . -1) (undo-tree-id21478 . -1) (undo-tree-id21479 . -1) (undo-tree-id21480 . -1) (undo-tree-id21481 . -1) (undo-tree-id21482 . -1) (undo-tree-id21483 . -1) (undo-tree-id21484 . -1) (undo-tree-id21485 . -1) (undo-tree-id21486 . -1) (undo-tree-id21487 . -1) (undo-tree-id21488 . -1) (undo-tree-id21489 . -1) (undo-tree-id21490 . -1) (undo-tree-id21491 . -1) (undo-tree-id21492 . -1) (undo-tree-id21493 . -1) (undo-tree-id21494 . -1) (undo-tree-id21495 . -1) (undo-tree-id21496 . -1) (undo-tree-id21497 . -1) (undo-tree-id21498 . -1) (undo-tree-id21499 . -1) (undo-tree-id21500 . -1) (undo-tree-id21501 . -1) (undo-tree-id21502 . -1) (undo-tree-id21503 . -1) (undo-tree-id21504 . -1) (undo-tree-id21505 . -1) (undo-tree-id21506 . -1) (undo-tree-id21507 . -1) (undo-tree-id21508 . -1) (undo-tree-id21509 . -1) (undo-tree-id21510 . -1) (undo-tree-id21511 . -1) (undo-tree-id21512 . -1) (undo-tree-id21513 . -1) (undo-tree-id21514 . -1) (undo-tree-id21515 . -1) (undo-tree-id21516 . -1) (undo-tree-id21517 . -1) (undo-tree-id21518 . -1) (undo-tree-id21519 . -1) (undo-tree-id21520 . -1) (undo-tree-id21521 . -1) (undo-tree-id21522 . -1) (undo-tree-id21523 . -1) (undo-tree-id21524 . -1) (undo-tree-id21525 . -1) (undo-tree-id21526 . -1) (undo-tree-id21527 . -1) (undo-tree-id21528 . -1) (undo-tree-id21529 . -1) (undo-tree-id21530 . -1) (undo-tree-id21531 . -1) (undo-tree-id21532 . -1) (undo-tree-id21533 . -1) (undo-tree-id21534 . -1) (undo-tree-id21535 . -1) (undo-tree-id21536 . -1) (undo-tree-id21537 . -1) (undo-tree-id21538 . -1) (undo-tree-id21539 . -1) (undo-tree-id21540 . -1) (undo-tree-id21541 . -1) (undo-tree-id21542 . -1) (undo-tree-id21543 . -1) (undo-tree-id21544 . -1) (undo-tree-id21545 . -1) (undo-tree-id21546 . -1) (undo-tree-id21547 . -1) (undo-tree-id21548 . -1) (undo-tree-id21549 . -1) (undo-tree-id21550 . -1) (undo-tree-id21551 . -1) (undo-tree-id21552 . -1) (undo-tree-id21553 . -1) (undo-tree-id21554 . -1) (undo-tree-id21555 . -1) (undo-tree-id21556 . -1) (undo-tree-id21557 . -1) (undo-tree-id21558 . -1) (undo-tree-id21559 . -1) (undo-tree-id21560 . -1) (undo-tree-id21561 . -1) (undo-tree-id21562 . -1) (undo-tree-id21563 . -1) (undo-tree-id21564 . -1) (undo-tree-id21565 . -1) (undo-tree-id21566 . -1) (undo-tree-id21567 . -1) (undo-tree-id21568 . -1) (undo-tree-id21569 . -1) (undo-tree-id21570 . -1) (undo-tree-id21571 . -1) (undo-tree-id21572 . -1) (undo-tree-id21573 . -1) (undo-tree-id21574 . -1) (undo-tree-id21575 . -1) (undo-tree-id21576 . -1) (undo-tree-id21577 . -1) (undo-tree-id21578 . -1) (undo-tree-id21579 . -1) (undo-tree-id21580 . -1) (undo-tree-id21581 . -1) (undo-tree-id21582 . -1) (undo-tree-id21583 . -1) (undo-tree-id21584 . -1) (undo-tree-id21585 . -1) (undo-tree-id21586 . -1) (undo-tree-id21587 . -1) (undo-tree-id21588 . -1) (undo-tree-id21589 . -1) (undo-tree-id21590 . -1) (undo-tree-id21591 . -1) (undo-tree-id21592 . -1) (undo-tree-id21593 . -1) (undo-tree-id21594 . -1) (undo-tree-id21595 . -1) (undo-tree-id21596 . -1) (undo-tree-id21597 . -1) (undo-tree-id21598 . -1) (undo-tree-id21599 . -1) (undo-tree-id21600 . -1) (undo-tree-id21601 . -1) (undo-tree-id21602 . -1) (undo-tree-id21603 . -1) (undo-tree-id21604 . -1) (undo-tree-id21605 . -1) (undo-tree-id21606 . -1) (undo-tree-id21607 . -1) (undo-tree-id21608 . -1) (undo-tree-id21609 . -1) (undo-tree-id21610 . -1) (undo-tree-id21611 . -1) (undo-tree-id21612 . -1) (undo-tree-id21613 . -1) (undo-tree-id21614 . -1) (undo-tree-id21615 . -1) (undo-tree-id21616 . -1) (undo-tree-id21617 . -1) (undo-tree-id21618 . -1) (undo-tree-id21619 . -1) (undo-tree-id21620 . -1) (undo-tree-id21621 . -1) (undo-tree-id21622 . -1) (undo-tree-id21623 . -1) (undo-tree-id21624 . -1) (undo-tree-id21625 . -1) (undo-tree-id21626 . -1) (undo-tree-id21627 . -1) (undo-tree-id21628 . -1) (undo-tree-id21629 . -1) (undo-tree-id21630 . -1) (undo-tree-id21631 . -1) (undo-tree-id21632 . -1) (undo-tree-id21633 . -1) (undo-tree-id21634 . -1) (undo-tree-id21635 . -1) (undo-tree-id21636 . -1) (undo-tree-id21637 . -1) (undo-tree-id21638 . -1) (undo-tree-id21639 . -1) (undo-tree-id21640 . -1) (undo-tree-id21641 . -1) (undo-tree-id21642 . -1) (undo-tree-id21643 . -1) (undo-tree-id21644 . -1) (undo-tree-id21645 . -1) (undo-tree-id21646 . -1) (undo-tree-id21647 . -1) (undo-tree-id21648 . -1) (undo-tree-id21649 . -1) (undo-tree-id21650 . -1) (undo-tree-id21651 . -1) (undo-tree-id21652 . -1) (undo-tree-id21653 . -1) (undo-tree-id21654 . -1) (undo-tree-id21655 . -1) (undo-tree-id21656 . -1) (undo-tree-id21657 . -1) (undo-tree-id21658 . -1) (undo-tree-id21659 . -1) (undo-tree-id21660 . -1) (undo-tree-id21661 . -1) (undo-tree-id21662 . -1) (undo-tree-id21663 . -1) (undo-tree-id21664 . -1) (undo-tree-id21665 . -1) (undo-tree-id21666 . -1) (undo-tree-id21667 . -1) (undo-tree-id21668 . -1) (undo-tree-id21669 . -1) (undo-tree-id21670 . -1) (undo-tree-id21671 . -1) (undo-tree-id21672 . -1) (undo-tree-id21673 . -1) (undo-tree-id21674 . -1) (undo-tree-id21675 . -1) (undo-tree-id21676 . -1) (undo-tree-id21677 . -1) (undo-tree-id21678 . -1) (undo-tree-id21679 . -1) (undo-tree-id21680 . -1) (undo-tree-id21681 . -1) (undo-tree-id21682 . -1) (undo-tree-id21683 . -1) (undo-tree-id21684 . -1) (undo-tree-id21685 . -1) (undo-tree-id21686 . -1) (undo-tree-id21687 . -1) (undo-tree-id21688 . -1) (undo-tree-id21689 . -1) (undo-tree-id21690 . -1) (undo-tree-id21691 . -1) (undo-tree-id21692 . -1) (undo-tree-id21693 . -1) (undo-tree-id21694 . -1) (undo-tree-id21695 . -1) (undo-tree-id21696 . -1) (undo-tree-id21697 . -1) (undo-tree-id21698 . -1) (undo-tree-id21699 . -1) (undo-tree-id21700 . -1) (undo-tree-id21701 . -1) (undo-tree-id21702 . -1) (undo-tree-id21703 . -1) (undo-tree-id21704 . -1) (undo-tree-id21705 . -1) (undo-tree-id21706 . -1) (undo-tree-id21707 . -1) (undo-tree-id21708 . -1) (undo-tree-id21709 . -1) (undo-tree-id21710 . -1) (undo-tree-id21711 . -1) (undo-tree-id21712 . -1) (undo-tree-id21713 . -1) (undo-tree-id21714 . -1) (undo-tree-id21715 . -1) (undo-tree-id21716 . -1) (undo-tree-id21717 . -1) (undo-tree-id21718 . -1) (undo-tree-id21719 . -1) (undo-tree-id21720 . -1) (undo-tree-id21721 . -1) (undo-tree-id21722 . -1) (undo-tree-id21723 . -1) (undo-tree-id21724 . -1) (undo-tree-id21725 . -1) (undo-tree-id21726 . -1) (undo-tree-id21727 . -1) (undo-tree-id21728 . -1) (undo-tree-id21729 . -1) (undo-tree-id21730 . -1) (undo-tree-id21731 . -1) (undo-tree-id21732 . -1) (undo-tree-id21733 . -1) (undo-tree-id21734 . -1) (undo-tree-id21735 . -1) (undo-tree-id21736 . -1) (undo-tree-id21737 . -1) (undo-tree-id21738 . -1) (undo-tree-id21739 . -1) (undo-tree-id21740 . -1) (undo-tree-id21741 . -1) (undo-tree-id21742 . -1) (undo-tree-id21743 . -1) (undo-tree-id21744 . -1) (undo-tree-id21745 . -1) (undo-tree-id21746 . -1) (undo-tree-id21747 . -1) (undo-tree-id21748 . -1) (undo-tree-id21749 . -1) (undo-tree-id21750 . -1) (undo-tree-id21751 . -1) (undo-tree-id21752 . -1) (undo-tree-id21753 . -1) (undo-tree-id21754 . -1) (undo-tree-id21755 . -1) (undo-tree-id21756 . -1) (undo-tree-id21757 . -1) (undo-tree-id21758 . -1) (undo-tree-id21759 . -1) (undo-tree-id21760 . -1) (undo-tree-id21761 . -1) (undo-tree-id21762 . -1) (undo-tree-id21763 . -1) (undo-tree-id21764 . -1) (undo-tree-id21765 . -1) (undo-tree-id21766 . -1) (undo-tree-id21767 . -1) (undo-tree-id21768 . -1) (undo-tree-id21769 . -1) (undo-tree-id21770 . -1) (undo-tree-id21771 . -1) (undo-tree-id21772 . -1) (undo-tree-id21773 . -1) (undo-tree-id21774 . -1) (undo-tree-id21775 . -1) (undo-tree-id21776 . -1) (undo-tree-id21777 . -1) (undo-tree-id21778 . -1) (undo-tree-id21779 . -1) (undo-tree-id21780 . -1) (undo-tree-id21781 . -1) (undo-tree-id21782 . -1) (undo-tree-id21783 . -1) (undo-tree-id21784 . -1) (undo-tree-id21785 . -1) (undo-tree-id21786 . -1) (undo-tree-id21787 . -1) (undo-tree-id21788 . -1) (undo-tree-id21789 . -1) (undo-tree-id21790 . -1) (undo-tree-id21791 . -1) (undo-tree-id21792 . -1) (undo-tree-id21793 . -1) (undo-tree-id21794 . -1) (undo-tree-id21795 . -1) (undo-tree-id21796 . -1) (undo-tree-id21797 . -1) (undo-tree-id21798 . -1) (undo-tree-id21799 . -1) (undo-tree-id21800 . -1) (undo-tree-id21801 . -1) (undo-tree-id21802 . -1) (undo-tree-id21803 . -1) (undo-tree-id21804 . -1) (undo-tree-id21805 . -1) (undo-tree-id21806 . -1) (undo-tree-id21807 . -1) (undo-tree-id21808 . -1) (undo-tree-id21809 . -1) (undo-tree-id21810 . -1) (undo-tree-id21811 . -1) (undo-tree-id21812 . -1) (undo-tree-id21813 . -1) (undo-tree-id21814 . -1) (undo-tree-id21815 . -1) (undo-tree-id21816 . -1) (undo-tree-id21817 . -1) (undo-tree-id21818 . -1) (undo-tree-id21819 . -1) (undo-tree-id21820 . -1) (undo-tree-id21821 . -1) (undo-tree-id21822 . -1) (undo-tree-id21823 . -1) (undo-tree-id21824 . -1) (undo-tree-id21825 . -1) (undo-tree-id21826 . -1) (undo-tree-id21827 . -1) (undo-tree-id21828 . -1) (undo-tree-id21829 . -1) (undo-tree-id21830 . -1) (undo-tree-id21831 . -1) (undo-tree-id21832 . -1) (undo-tree-id21833 . -1) (undo-tree-id21834 . -1) (undo-tree-id21835 . -1) (undo-tree-id21836 . -1) (undo-tree-id21837 . -1) (undo-tree-id21838 . -1) (undo-tree-id21839 . -1) (undo-tree-id21840 . -1) (undo-tree-id21841 . -1) (undo-tree-id21842 . -1) (undo-tree-id21843 . -1) (undo-tree-id21844 . -1) (undo-tree-id21845 . -1) (undo-tree-id21846 . -1) (undo-tree-id21847 . -1) (undo-tree-id21848 . -1) (undo-tree-id21849 . -1) (undo-tree-id21850 . -1) (undo-tree-id21851 . -1) (undo-tree-id21852 . -1) (undo-tree-id21853 . -1) (undo-tree-id21854 . -1) (undo-tree-id21855 . -1) (undo-tree-id21856 . -1) (undo-tree-id21857 . -1) (undo-tree-id21858 . -1) (undo-tree-id21859 . -1) (undo-tree-id21860 . -1) (undo-tree-id21861 . -1) (undo-tree-id21862 . -1) (undo-tree-id21863 . -1) (undo-tree-id21864 . -1) (undo-tree-id21865 . -1) (undo-tree-id21866 . -1) (undo-tree-id21867 . -1) (undo-tree-id21868 . -1) (undo-tree-id21869 . -1) (undo-tree-id21870 . -1) (undo-tree-id21871 . -1) (undo-tree-id21872 . -1) (undo-tree-id21873 . -1) (undo-tree-id21874 . -1) (undo-tree-id21875 . -1) (undo-tree-id21876 . -1) (undo-tree-id21877 . -1) (undo-tree-id21878 . -1) (undo-tree-id21879 . -1) (undo-tree-id21880 . -1) (undo-tree-id21881 . -1) (undo-tree-id21882 . -1) (undo-tree-id21883 . -1) (undo-tree-id21884 . -1) (undo-tree-id21885 . -1) (undo-tree-id21886 . -1) (undo-tree-id21887 . -1) (undo-tree-id21888 . -1) (undo-tree-id21889 . -1) (undo-tree-id21890 . -1) (undo-tree-id21891 . -1) (undo-tree-id21892 . -1) (undo-tree-id21893 . -1) (undo-tree-id21894 . -1) (undo-tree-id21895 . -1) (undo-tree-id21896 . -1) (undo-tree-id21897 . -1) (undo-tree-id21898 . -1) (undo-tree-id21899 . -1) (undo-tree-id21900 . -1) (undo-tree-id21901 . -1) (undo-tree-id21902 . -1) (undo-tree-id21903 . -1) (undo-tree-id21904 . -1) (undo-tree-id21905 . -1) (undo-tree-id21906 . -1) (undo-tree-id21907 . -1) (undo-tree-id21908 . -1) (undo-tree-id21909 . -1) (undo-tree-id21910 . -1) (undo-tree-id21911 . -1) (undo-tree-id21912 . -1) (undo-tree-id21913 . -1) (undo-tree-id21914 . -1) (undo-tree-id21915 . -1) (undo-tree-id21916 . -1) (undo-tree-id21917 . -1) (undo-tree-id21918 . -1) (undo-tree-id21919 . -1) (undo-tree-id21920 . -1) (undo-tree-id21921 . -1) (undo-tree-id21922 . -1) (undo-tree-id21923 . -1) (undo-tree-id21924 . -1) (undo-tree-id21925 . -1) (undo-tree-id21926 . -1) (undo-tree-id21927 . -1) (undo-tree-id21928 . -1) (undo-tree-id21929 . -1) (undo-tree-id21930 . -1) (undo-tree-id21931 . -1) (undo-tree-id21932 . -1) (undo-tree-id21933 . -1) (undo-tree-id21934 . -1) (undo-tree-id21935 . -1) (undo-tree-id21936 . -1) (undo-tree-id21937 . -1) (undo-tree-id21938 . -1) (undo-tree-id21939 . -1) (undo-tree-id21940 . -1) (undo-tree-id21941 . -1) (undo-tree-id21942 . -1) (undo-tree-id21943 . -1) (undo-tree-id21944 . -1) (undo-tree-id21945 . -1) (undo-tree-id21946 . -1) (undo-tree-id21947 . -1) (undo-tree-id21948 . -1) (undo-tree-id21949 . -1) (undo-tree-id21950 . -1) (undo-tree-id21951 . -1) (undo-tree-id21952 . -1) (undo-tree-id21953 . -1) (undo-tree-id21954 . -1) (undo-tree-id21955 . -1) (undo-tree-id21956 . -1) (undo-tree-id21957 . -1) (undo-tree-id21958 . -1) (undo-tree-id21959 . -1) (undo-tree-id21960 . -1) (undo-tree-id21961 . -1) (undo-tree-id21962 . -1) (undo-tree-id21963 . -1) (undo-tree-id21964 . -1) (undo-tree-id21965 . -1) (undo-tree-id21966 . -1) (undo-tree-id21967 . -1) (undo-tree-id21968 . -1) (undo-tree-id21969 . -1) (undo-tree-id21970 . -1) (undo-tree-id21971 . -1) (undo-tree-id21972 . -1) (undo-tree-id21973 . -1) (undo-tree-id21974 . -1) (undo-tree-id21975 . -1) (undo-tree-id21976 . -1) (undo-tree-id21977 . -1) (undo-tree-id21978 . -1) (undo-tree-id21979 . -1) (undo-tree-id21980 . -1) (undo-tree-id21981 . -1) (undo-tree-id21982 . -1) (undo-tree-id21983 . -1) (undo-tree-id21984 . -1) (undo-tree-id21985 . -1) (undo-tree-id21986 . -1) (undo-tree-id21987 . -1) (undo-tree-id21988 . -1) (undo-tree-id21989 . -1) (undo-tree-id21990 . -1) (undo-tree-id21991 . -1) (undo-tree-id21992 . -1) (undo-tree-id21993 . -1) (undo-tree-id21994 . -1) (undo-tree-id21995 . -1) (undo-tree-id21996 . -1) (undo-tree-id21997 . -1) (undo-tree-id21998 . -1) (undo-tree-id21999 . -1) (undo-tree-id22000 . -1) (undo-tree-id22001 . -1) (undo-tree-id22002 . -1) (undo-tree-id22003 . -1) (undo-tree-id22004 . -1) (undo-tree-id22005 . -1) (undo-tree-id22006 . -1) (undo-tree-id22007 . -1) (undo-tree-id22008 . -1) (undo-tree-id22009 . -1) (undo-tree-id22010 . -1) (undo-tree-id22011 . -1) (undo-tree-id22012 . -1) (undo-tree-id22013 . -1) (undo-tree-id22014 . -1) (undo-tree-id22015 . -1) (undo-tree-id22016 . -1) (undo-tree-id22017 . -1) (undo-tree-id22018 . -1) (undo-tree-id22019 . -1) (undo-tree-id22020 . -1) (undo-tree-id22021 . -1) (undo-tree-id22022 . -1) (undo-tree-id22023 . -1) (undo-tree-id22024 . -1) (undo-tree-id22025 . -1) (undo-tree-id22026 . -1) (undo-tree-id22027 . -1) (undo-tree-id22028 . -1) (undo-tree-id22029 . -1) (undo-tree-id22030 . -1) (undo-tree-id22031 . -1) (undo-tree-id22032 . -1) (undo-tree-id22033 . -1) (undo-tree-id22034 . -1) (undo-tree-id22035 . -1) (undo-tree-id22036 . -1) (undo-tree-id22037 . -1) (undo-tree-id22038 . -1) (undo-tree-id22039 . -1) (undo-tree-id22040 . -1) (undo-tree-id22041 . -1) (undo-tree-id22042 . -1) (undo-tree-id22043 . -1) (undo-tree-id22044 . -1) (undo-tree-id22045 . -1) (undo-tree-id22046 . -1) (undo-tree-id22047 . -1) (undo-tree-id22048 . -1) (undo-tree-id22049 . -1) (undo-tree-id22050 . -1) (undo-tree-id22051 . -1) (undo-tree-id22052 . -1) (undo-tree-id22053 . -1) (undo-tree-id22054 . -1) (undo-tree-id22055 . -1) (undo-tree-id22056 . -1) (undo-tree-id22057 . -1) (undo-tree-id22058 . -1) (undo-tree-id22059 . -1) (undo-tree-id22060 . -1) (undo-tree-id22061 . -1) (undo-tree-id22062 . -1) (undo-tree-id22063 . -1) (undo-tree-id22064 . -1) (undo-tree-id22065 . -1) (undo-tree-id22066 . -1) (undo-tree-id22067 . -1) (undo-tree-id22068 . -1) (undo-tree-id22069 . -1) (undo-tree-id22070 . -1) (undo-tree-id22071 . -1) (undo-tree-id22072 . -1) (undo-tree-id22073 . -1) (undo-tree-id22074 . -1) (undo-tree-id22075 . -1) (undo-tree-id22076 . -1) (undo-tree-id22077 . -1) (undo-tree-id22078 . -1) (undo-tree-id22079 . -1) (undo-tree-id22080 . -1) (undo-tree-id22081 . -1) (undo-tree-id22082 . -1) (undo-tree-id22083 . -1) (undo-tree-id22084 . -1) (undo-tree-id22085 . -1) (undo-tree-id22086 . -1) (undo-tree-id22087 . -1) (undo-tree-id22088 . -1) (undo-tree-id22089 . -1) (undo-tree-id22090 . -1) (undo-tree-id22091 . -1) (undo-tree-id22092 . -1) (undo-tree-id22093 . -1) (undo-tree-id22094 . -1) (undo-tree-id22095 . -1) (undo-tree-id22096 . -1) (undo-tree-id22097 . -1) (undo-tree-id22098 . -1) (undo-tree-id22099 . -1) (undo-tree-id22100 . -1) (undo-tree-id22101 . -1) (undo-tree-id22102 . -1) (undo-tree-id22103 . -1) (undo-tree-id22104 . -1) (undo-tree-id22105 . -1) (undo-tree-id22106 . -1) (undo-tree-id22107 . -1) (undo-tree-id22108 . -1) (undo-tree-id22109 . -1) (undo-tree-id22110 . -1) (undo-tree-id22111 . -1) (undo-tree-id22112 . -1) (undo-tree-id22113 . -1) (undo-tree-id22114 . -1) (undo-tree-id22115 . -1) (undo-tree-id22116 . -1) (undo-tree-id22117 . -1) (undo-tree-id22118 . -1) (undo-tree-id22119 . -1) (undo-tree-id22120 . -1) (undo-tree-id22121 . -1) (undo-tree-id22122 . -1) (undo-tree-id22123 . -1) (undo-tree-id22124 . -1) (undo-tree-id22125 . -1) (undo-tree-id22126 . -1) (undo-tree-id22127 . -1) (undo-tree-id22128 . -1) (undo-tree-id22129 . -1) (undo-tree-id22130 . -1) (undo-tree-id22131 . -1) (undo-tree-id22132 . -1) (undo-tree-id22133 . -1) (undo-tree-id22134 . -1) (undo-tree-id22135 . -1) (undo-tree-id22136 . -1) (undo-tree-id22137 . -1) (#("n" 0 1 (fontified t)) . -66947) (undo-tree-id22138 . -1) (undo-tree-id22139 . -1) (undo-tree-id22140 . -1) (undo-tree-id22141 . -1) (undo-tree-id22142 . -1) (undo-tree-id22143 . -1) (undo-tree-id22144 . -1) (undo-tree-id22145 . -1) (undo-tree-id22146 . -1) (undo-tree-id22147 . -1) (undo-tree-id22148 . -1) (undo-tree-id22149 . -1) (undo-tree-id22150 . -1) (undo-tree-id22151 . -1) (undo-tree-id22152 . -1) (undo-tree-id22153 . -1) (undo-tree-id22154 . -1) (undo-tree-id22155 . -1) (undo-tree-id22156 . -1) (undo-tree-id22157 . -1) (undo-tree-id22158 . -1) (undo-tree-id22159 . -1) (undo-tree-id22160 . -1) (undo-tree-id22161 . -1) (undo-tree-id22162 . -1) (undo-tree-id22163 . -1) (undo-tree-id22164 . -1) (undo-tree-id22165 . -1) (undo-tree-id22166 . -1) (undo-tree-id22167 . -1) (undo-tree-id22168 . -1) (undo-tree-id22169 . -1) (undo-tree-id22170 . -1) (undo-tree-id22171 . -1) (undo-tree-id22172 . -1) (undo-tree-id22173 . -1) (undo-tree-id22174 . -1) (undo-tree-id22175 . -1) (undo-tree-id22176 . -1) (undo-tree-id22177 . -1) (undo-tree-id22178 . -1) (undo-tree-id22179 . -1) (undo-tree-id22180 . -1) (undo-tree-id22181 . -1) (undo-tree-id22182 . -1) (undo-tree-id22183 . -1) (undo-tree-id22184 . -1) (undo-tree-id22185 . -1) (undo-tree-id22186 . -1) (undo-tree-id22187 . -1) (undo-tree-id22188 . -1) (undo-tree-id22189 . -1) (undo-tree-id22190 . -1) (undo-tree-id22191 . -1) (undo-tree-id22192 . -1) (undo-tree-id22193 . -1) (undo-tree-id22194 . -1) (undo-tree-id22195 . -1) (undo-tree-id22196 . -1) (undo-tree-id22197 . -1) (undo-tree-id22198 . -1) (undo-tree-id22199 . -1) (undo-tree-id22200 . -1) (undo-tree-id22201 . -1) (undo-tree-id22202 . -1) (undo-tree-id22203 . -1) (undo-tree-id22204 . -1) (undo-tree-id22205 . -1) (undo-tree-id22206 . -1) (undo-tree-id22207 . -1) (undo-tree-id22208 . -1) (undo-tree-id22209 . -1) (undo-tree-id22210 . -1) (undo-tree-id22211 . -1) (undo-tree-id22212 . -1) (undo-tree-id22213 . -1) (undo-tree-id22214 . -1) (undo-tree-id22215 . -1) (undo-tree-id22216 . -1) (undo-tree-id22217 . -1) (undo-tree-id22218 . -1) (undo-tree-id22219 . -1) (undo-tree-id22220 . -1) (undo-tree-id22221 . -1) (undo-tree-id22222 . -1) (undo-tree-id22223 . -1) (undo-tree-id22224 . -1) (undo-tree-id22225 . -1) (undo-tree-id22226 . -1) (undo-tree-id22227 . -1) (undo-tree-id22228 . -1) (undo-tree-id22229 . -1) (undo-tree-id22230 . -1) (undo-tree-id22231 . -1) (undo-tree-id22232 . -1) (undo-tree-id22233 . -1) (undo-tree-id22234 . -1) (undo-tree-id22235 . -1) (undo-tree-id22236 . -1) (undo-tree-id22237 . -1) (undo-tree-id22238 . -1) (undo-tree-id22239 . -1) (undo-tree-id22240 . -1) (undo-tree-id22241 . -1) (undo-tree-id22242 . -1) (undo-tree-id22243 . -1) (undo-tree-id22244 . -1) (undo-tree-id22245 . -1) (undo-tree-id22246 . -1) (undo-tree-id22247 . -1) (undo-tree-id22248 . -1) (undo-tree-id22249 . -1) (undo-tree-id22250 . -1) (undo-tree-id22251 . -1) (undo-tree-id22252 . -1) (undo-tree-id22253 . -1) (undo-tree-id22254 . -1) (undo-tree-id22255 . -1) (undo-tree-id22256 . -1) (undo-tree-id22257 . -1) (undo-tree-id22258 . -1) (undo-tree-id22259 . -1) (undo-tree-id22260 . -1) (undo-tree-id22261 . -1) (undo-tree-id22262 . -1) (undo-tree-id22263 . -1) (undo-tree-id22264 . -1) (undo-tree-id22265 . -1) (undo-tree-id22266 . -1) (undo-tree-id22267 . -1) (undo-tree-id22268 . -1) (undo-tree-id22269 . -1) (undo-tree-id22270 . -1) (undo-tree-id22271 . -1) (undo-tree-id22272 . -1) (undo-tree-id22273 . -1) (undo-tree-id22274 . -1) (undo-tree-id22275 . -1) (undo-tree-id22276 . -1) (undo-tree-id22277 . -1) (undo-tree-id22278 . -1) (undo-tree-id22279 . -1) (undo-tree-id22280 . -1) (undo-tree-id22281 . -1) (undo-tree-id22282 . -1) (undo-tree-id22283 . -1) (undo-tree-id22284 . -1) (undo-tree-id22285 . -1) (undo-tree-id22286 . -1) (undo-tree-id22287 . -1) (undo-tree-id22288 . -1) (undo-tree-id22289 . -1) (undo-tree-id22290 . -1) (undo-tree-id22291 . -1) (undo-tree-id22292 . -1) (undo-tree-id22293 . -1) (undo-tree-id22294 . -1) (undo-tree-id22295 . -1) (undo-tree-id22296 . -1) (undo-tree-id22297 . -1) (undo-tree-id22298 . -1) (undo-tree-id22299 . -1) (undo-tree-id22300 . -1) (undo-tree-id22301 . -1) (undo-tree-id22302 . -1) (undo-tree-id22303 . -1) (undo-tree-id22304 . -1) (undo-tree-id22305 . -1) (undo-tree-id22306 . -1) (undo-tree-id22307 . -1) (undo-tree-id22308 . -1) (undo-tree-id22309 . -1) (undo-tree-id22310 . -1) (undo-tree-id22311 . -1) (undo-tree-id22312 . -1) (undo-tree-id22313 . -1) (undo-tree-id22314 . -1) (undo-tree-id22315 . -1) (undo-tree-id22316 . -1) (undo-tree-id22317 . -1) (undo-tree-id22318 . -1) (undo-tree-id22319 . -1) (undo-tree-id22320 . -1) (undo-tree-id22321 . -1) (undo-tree-id22322 . -1) (undo-tree-id22323 . -1) (undo-tree-id22324 . -1) (undo-tree-id22325 . -1) (undo-tree-id22326 . -1) (undo-tree-id22327 . -1) (undo-tree-id22328 . -1) (undo-tree-id22329 . -1) (undo-tree-id22330 . -1) (undo-tree-id22331 . -1) (undo-tree-id22332 . -1) (undo-tree-id22333 . -1) (undo-tree-id22334 . -1) (undo-tree-id22335 . -1) (undo-tree-id22336 . -1) (undo-tree-id22337 . -1) (undo-tree-id22338 . -1) (undo-tree-id22339 . -1) (undo-tree-id22340 . -1) (undo-tree-id22341 . -1) (undo-tree-id22342 . -1) (undo-tree-id22343 . -1) (undo-tree-id22344 . -1) (undo-tree-id22345 . -1) (undo-tree-id22346 . -1) (undo-tree-id22347 . -1) (undo-tree-id22348 . -1) (undo-tree-id22349 . -1) (undo-tree-id22350 . -1) (undo-tree-id22351 . -1) (undo-tree-id22352 . -1) (undo-tree-id22353 . -1) (undo-tree-id22354 . -1) (undo-tree-id22355 . -1) (undo-tree-id22356 . -1) (undo-tree-id22357 . -1) (undo-tree-id22358 . -1) (undo-tree-id22359 . -1) (undo-tree-id22360 . -1) (undo-tree-id22361 . -1) (undo-tree-id22362 . -1) (undo-tree-id22363 . -1) (undo-tree-id22364 . -1) (undo-tree-id22365 . -1) (undo-tree-id22366 . -1) (undo-tree-id22367 . -1) (undo-tree-id22368 . -1) (undo-tree-id22369 . -1) (undo-tree-id22370 . -1) (undo-tree-id22371 . -1) (undo-tree-id22372 . -1) (undo-tree-id22373 . -1) (undo-tree-id22374 . -1) (undo-tree-id22375 . -1) (undo-tree-id22376 . -1) (undo-tree-id22377 . -1) (undo-tree-id22378 . -1) (undo-tree-id22379 . -1) (undo-tree-id22380 . -1) (undo-tree-id22381 . -1) (undo-tree-id22382 . -1) (undo-tree-id22383 . -1) (undo-tree-id22384 . -1) (undo-tree-id22385 . -1) (undo-tree-id22386 . -1) (undo-tree-id22387 . -1) (undo-tree-id22388 . -1) (undo-tree-id22389 . -1) (undo-tree-id22390 . -1) (undo-tree-id22391 . -1) (undo-tree-id22392 . -1) (undo-tree-id22393 . -1) (undo-tree-id22394 . -1) (undo-tree-id22395 . -1) (undo-tree-id22396 . -1) (undo-tree-id22397 . -1) (undo-tree-id22398 . -1) (undo-tree-id22399 . -1) (undo-tree-id22400 . -1) (undo-tree-id22401 . -1) (undo-tree-id22402 . -1) (undo-tree-id22403 . -1) (undo-tree-id22404 . -1) (undo-tree-id22405 . -1) (undo-tree-id22406 . -1) (undo-tree-id22407 . -1) (undo-tree-id22408 . -1) (undo-tree-id22409 . -1) (undo-tree-id22410 . -1) (undo-tree-id22411 . -1) (undo-tree-id22412 . -1) (undo-tree-id22413 . -1) (undo-tree-id22414 . -1) (undo-tree-id22415 . -1) (undo-tree-id22416 . -1) (undo-tree-id22417 . -1) (undo-tree-id22418 . -1) (undo-tree-id22419 . -1) (undo-tree-id22420 . -1) (undo-tree-id22421 . -1) (undo-tree-id22422 . -1) (undo-tree-id22423 . -1) (undo-tree-id22424 . -1) (undo-tree-id22425 . -1) (undo-tree-id22426 . -1) (undo-tree-id22427 . -1) (undo-tree-id22428 . -1) (undo-tree-id22429 . -1) (undo-tree-id22430 . -1) (undo-tree-id22431 . -1) (undo-tree-id22432 . -1) (undo-tree-id22433 . -1) (undo-tree-id22434 . -1) (undo-tree-id22435 . -1) (undo-tree-id22436 . -1) (undo-tree-id22437 . -1) (undo-tree-id22438 . -1) (undo-tree-id22439 . -1) (undo-tree-id22440 . -1) (undo-tree-id22441 . -1) (undo-tree-id22442 . -1) (undo-tree-id22443 . -1) (undo-tree-id22444 . -1) (undo-tree-id22445 . -1) (undo-tree-id22446 . -1) (undo-tree-id22447 . -1) (undo-tree-id22448 . -1) (undo-tree-id22449 . -1) (undo-tree-id22450 . -1) (undo-tree-id22451 . -1) (undo-tree-id22452 . -1) (undo-tree-id22453 . -1) (undo-tree-id22454 . -1) (undo-tree-id22455 . -1) (undo-tree-id22456 . -1) (undo-tree-id22457 . -1) (undo-tree-id22458 . -1) (undo-tree-id22459 . -1) (undo-tree-id22460 . -1) (undo-tree-id22461 . -1) (undo-tree-id22462 . -1) (undo-tree-id22463 . -1) (undo-tree-id22464 . -1) (undo-tree-id22465 . -1) (undo-tree-id22466 . -1) (undo-tree-id22467 . -1) (undo-tree-id22468 . -1) (undo-tree-id22469 . -1) (undo-tree-id22470 . -1) (undo-tree-id22471 . -1) (undo-tree-id22472 . -1) (undo-tree-id22473 . -1) (undo-tree-id22474 . -1) (undo-tree-id22475 . -1) (undo-tree-id22476 . -1) (undo-tree-id22477 . -1) (undo-tree-id22478 . -1) (undo-tree-id22479 . -1) (undo-tree-id22480 . -1) (undo-tree-id22481 . -1) (undo-tree-id22482 . -1) (undo-tree-id22483 . -1) (undo-tree-id22484 . -1) (undo-tree-id22485 . -1) (undo-tree-id22486 . -1) (undo-tree-id22487 . -1) (undo-tree-id22488 . -1) (undo-tree-id22489 . -1) (undo-tree-id22490 . -1) (undo-tree-id22491 . -1) (undo-tree-id22492 . -1) (undo-tree-id22493 . -1) (undo-tree-id22494 . -1) (undo-tree-id22495 . -1) (undo-tree-id22496 . -1) (undo-tree-id22497 . -1) (undo-tree-id22498 . -1) (undo-tree-id22499 . -1) (undo-tree-id22500 . -1) (undo-tree-id22501 . -1) (undo-tree-id22502 . -1) (undo-tree-id22503 . -1) (undo-tree-id22504 . -1) (undo-tree-id22505 . -1) (undo-tree-id22506 . -1) (undo-tree-id22507 . -1) (undo-tree-id22508 . -1) (undo-tree-id22509 . -1) (undo-tree-id22510 . -1) (undo-tree-id22511 . -1) (undo-tree-id22512 . -1) (undo-tree-id22513 . -1) (undo-tree-id22514 . -1) (undo-tree-id22515 . -1) (undo-tree-id22516 . -1) (undo-tree-id22517 . -1) (undo-tree-id22518 . -1) (undo-tree-id22519 . -1) (undo-tree-id22520 . -1) (undo-tree-id22521 . -1) (undo-tree-id22522 . -1) (undo-tree-id22523 . -1) (undo-tree-id22524 . -1) (undo-tree-id22525 . -1) (undo-tree-id22526 . -1) (undo-tree-id22527 . -1) (undo-tree-id22528 . -1) (undo-tree-id22529 . -1) (undo-tree-id22530 . -1) (undo-tree-id22531 . -1) (undo-tree-id22532 . -1) (undo-tree-id22533 . -1) (undo-tree-id22534 . -1) (undo-tree-id22535 . -1) (undo-tree-id22536 . -1) (undo-tree-id22537 . -1) (undo-tree-id22538 . -1) (undo-tree-id22539 . -1) (undo-tree-id22540 . -1) (undo-tree-id22541 . -1) (undo-tree-id22542 . -1) (undo-tree-id22543 . -1) (undo-tree-id22544 . -1) (undo-tree-id22545 . -1) (undo-tree-id22546 . -1) (undo-tree-id22547 . -1) (undo-tree-id22548 . -1) (undo-tree-id22549 . -1) (undo-tree-id22550 . -1) (undo-tree-id22551 . -1) (undo-tree-id22552 . -1) (undo-tree-id22553 . -1) (undo-tree-id22554 . -1) (undo-tree-id22555 . -1) (undo-tree-id22556 . -1) (undo-tree-id22557 . -1) (undo-tree-id22558 . -1) (undo-tree-id22559 . -1) (undo-tree-id22560 . -1) (undo-tree-id22561 . -1) (undo-tree-id22562 . -1) (undo-tree-id22563 . -1) (undo-tree-id22564 . -1) (undo-tree-id22565 . -1) (undo-tree-id22566 . -1) (undo-tree-id22567 . -1) (undo-tree-id22568 . -1) (undo-tree-id22569 . -1) (undo-tree-id22570 . -1) (undo-tree-id22571 . -1) (undo-tree-id22572 . -1) (undo-tree-id22573 . -1) (undo-tree-id22574 . -1) (undo-tree-id22575 . -1) (undo-tree-id22576 . -1) (undo-tree-id22577 . -1) (undo-tree-id22578 . -1) (undo-tree-id22579 . -1) (undo-tree-id22580 . -1) (undo-tree-id22581 . -1) (undo-tree-id22582 . -1) (undo-tree-id22583 . -1) (undo-tree-id22584 . -1) (undo-tree-id22585 . -1) (undo-tree-id22586 . -1) (undo-tree-id22587 . -1) (undo-tree-id22588 . -1) (undo-tree-id22589 . -1) (undo-tree-id22590 . -1) (undo-tree-id22591 . -1) (undo-tree-id22592 . -1) (undo-tree-id22593 . -1) (undo-tree-id22594 . -1) (undo-tree-id22595 . -1) (undo-tree-id22596 . -1) (undo-tree-id22597 . -1) (undo-tree-id22598 . -1) (undo-tree-id22599 . -1) (undo-tree-id22600 . -1) (undo-tree-id22601 . -1) (undo-tree-id22602 . -1) (undo-tree-id22603 . -1) (undo-tree-id22604 . -1) (undo-tree-id22605 . -1) (undo-tree-id22606 . -1) (undo-tree-id22607 . -1) (undo-tree-id22608 . -1) (undo-tree-id22609 . -1) (undo-tree-id22610 . -1) (undo-tree-id22611 . -1) (undo-tree-id22612 . -1) (undo-tree-id22613 . -1) (undo-tree-id22614 . -1) (undo-tree-id22615 . -1) (undo-tree-id22616 . -1) (undo-tree-id22617 . -1) (undo-tree-id22618 . -1) (undo-tree-id22619 . -1) (undo-tree-id22620 . -1) (undo-tree-id22621 . -1) (undo-tree-id22622 . -1) (undo-tree-id22623 . -1) (undo-tree-id22624 . -1) (undo-tree-id22625 . -1) (undo-tree-id22626 . -1) (undo-tree-id22627 . -1) (undo-tree-id22628 . -1) (undo-tree-id22629 . -1) (undo-tree-id22630 . -1) (undo-tree-id22631 . -1) (undo-tree-id22632 . -1) (undo-tree-id22633 . -1) (undo-tree-id22634 . -1) (undo-tree-id22635 . -1) (undo-tree-id22636 . -1) (undo-tree-id22637 . -1) (undo-tree-id22638 . -1) (undo-tree-id22639 . -1) (undo-tree-id22640 . -1) (undo-tree-id22641 . -1) (undo-tree-id22642 . -1) (undo-tree-id22643 . -1) (undo-tree-id22644 . -1) (undo-tree-id22645 . -1) (undo-tree-id22646 . -1) (undo-tree-id22647 . -1) (undo-tree-id22648 . -1) (undo-tree-id22649 . -1) (undo-tree-id22650 . -1) (undo-tree-id22651 . -1) (undo-tree-id22652 . -1) (undo-tree-id22653 . -1) (undo-tree-id22654 . -1) (undo-tree-id22655 . -1) (undo-tree-id22656 . -1) (undo-tree-id22657 . -1) (undo-tree-id22658 . -1) (undo-tree-id22659 . -1) (undo-tree-id22660 . -1) (undo-tree-id22661 . -1) (undo-tree-id22662 . -1) (undo-tree-id22663 . -1) (undo-tree-id22664 . -1) (undo-tree-id22665 . -1) (undo-tree-id22666 . -1) (undo-tree-id22667 . -1) (undo-tree-id22668 . -1) (undo-tree-id22669 . -1) (undo-tree-id22670 . -1) (undo-tree-id22671 . -1) (undo-tree-id22672 . -1) (undo-tree-id22673 . -1) (undo-tree-id22674 . -1) (undo-tree-id22675 . -1) (undo-tree-id22676 . -1) (undo-tree-id22677 . -1) (undo-tree-id22678 . -1) (undo-tree-id22679 . -1) (undo-tree-id22680 . -1) (undo-tree-id22681 . -1) (undo-tree-id22682 . -1) (undo-tree-id22683 . -1) (undo-tree-id22684 . -1) (undo-tree-id22685 . -1) (undo-tree-id22686 . -1) (undo-tree-id22687 . -1) (undo-tree-id22688 . -1) (undo-tree-id22689 . -1) (undo-tree-id22690 . -1) (undo-tree-id22691 . -1) (undo-tree-id22692 . -1) (undo-tree-id22693 . -1) (undo-tree-id22694 . -1) (undo-tree-id22695 . -1) (undo-tree-id22696 . -1) (undo-tree-id22697 . -1) (undo-tree-id22698 . -1) (undo-tree-id22699 . -1) (undo-tree-id22700 . -1) (undo-tree-id22701 . -1) (undo-tree-id22702 . -1) (undo-tree-id22703 . -1) (undo-tree-id22704 . -1) (undo-tree-id22705 . -1) (undo-tree-id22706 . -1) (undo-tree-id22707 . -1) (undo-tree-id22708 . -1) (undo-tree-id22709 . -1) (undo-tree-id22710 . -1) (undo-tree-id22711 . -1) (undo-tree-id22712 . -1) (undo-tree-id22713 . -1) (undo-tree-id22714 . -1) (undo-tree-id22715 . -1) (undo-tree-id22716 . -1) (undo-tree-id22717 . -1) (undo-tree-id22718 . -1) (undo-tree-id22719 . -1) (undo-tree-id22720 . -1) (undo-tree-id22721 . -1) (undo-tree-id22722 . -1) (undo-tree-id22723 . -1) (undo-tree-id22724 . -1) (undo-tree-id22725 . -1) (undo-tree-id22726 . -1) (undo-tree-id22727 . -1) (undo-tree-id22728 . -1) (undo-tree-id22729 . -1) (undo-tree-id22730 . -1) (undo-tree-id22731 . -1) (undo-tree-id22732 . -1) (undo-tree-id22733 . -1) (undo-tree-id22734 . -1) (undo-tree-id22735 . -1) (undo-tree-id22736 . -1) (undo-tree-id22737 . -1) (undo-tree-id22738 . -1) (undo-tree-id22739 . -1) (undo-tree-id22740 . -1) (undo-tree-id22741 . -1) (undo-tree-id22742 . -1) (undo-tree-id22743 . -1) (undo-tree-id22744 . -1) (undo-tree-id22745 . -1) (undo-tree-id22746 . -1) (undo-tree-id22747 . -1) (undo-tree-id22748 . -1) (undo-tree-id22749 . -1) (undo-tree-id22750 . -1) (undo-tree-id22751 . -1) (undo-tree-id22752 . -1) (undo-tree-id22753 . -1) (undo-tree-id22754 . -1) (undo-tree-id22755 . -1) (undo-tree-id22756 . -1) (undo-tree-id22757 . -1) (undo-tree-id22758 . -1) (undo-tree-id22759 . -1) (undo-tree-id22760 . -1) (undo-tree-id22761 . -1) (undo-tree-id22762 . -1) (undo-tree-id22763 . -1) (undo-tree-id22764 . -1) (undo-tree-id22765 . -1) (undo-tree-id22766 . -1) (undo-tree-id22767 . -1) (undo-tree-id22768 . -1) (undo-tree-id22769 . -1) (undo-tree-id22770 . -1) (undo-tree-id22771 . -1) (undo-tree-id22772 . -1) (undo-tree-id22773 . -1) (undo-tree-id22774 . -1) (undo-tree-id22775 . -1) (undo-tree-id22776 . -1) (undo-tree-id22777 . -1) (undo-tree-id22778 . -1) (undo-tree-id22779 . -1) (undo-tree-id22780 . -1) (undo-tree-id22781 . -1) (undo-tree-id22782 . -1) (undo-tree-id22783 . -1) (undo-tree-id22784 . -1) (undo-tree-id22785 . -1) (undo-tree-id22786 . -1) (undo-tree-id22787 . -1) (undo-tree-id22788 . -1) (undo-tree-id22789 . -1) (undo-tree-id22790 . -1) (undo-tree-id22791 . -1) (undo-tree-id22792 . -1) (undo-tree-id22793 . -1) (undo-tree-id22794 . -1) (undo-tree-id22795 . -1) (undo-tree-id22796 . -1) (undo-tree-id22797 . -1) (undo-tree-id22798 . -1) (undo-tree-id22799 . -1) (undo-tree-id22800 . -1) (undo-tree-id22801 . -1) (undo-tree-id22802 . -1) (undo-tree-id22803 . -1) (undo-tree-id22804 . -1) (undo-tree-id22805 . -1) (undo-tree-id22806 . -1) (undo-tree-id22807 . -1) (undo-tree-id22808 . -1) (undo-tree-id22809 . -1) (undo-tree-id22810 . -1) (undo-tree-id22811 . -1) (undo-tree-id22812 . -1) (undo-tree-id22813 . -1) (undo-tree-id22814 . -1) (undo-tree-id22815 . -1) (undo-tree-id22816 . -1) (undo-tree-id22817 . -1) (undo-tree-id22818 . -1) (undo-tree-id22819 . -1) (undo-tree-id22820 . -1) (undo-tree-id22821 . -1) (undo-tree-id22822 . -1) (undo-tree-id22823 . -1) (undo-tree-id22824 . -1) (undo-tree-id22825 . -1) (undo-tree-id22826 . -1) (undo-tree-id22827 . -1) (undo-tree-id22828 . -1) (undo-tree-id22829 . -1) (undo-tree-id22830 . -1) (undo-tree-id22831 . -1) (undo-tree-id22832 . -1) (undo-tree-id22833 . -1) (undo-tree-id22834 . -1) (#("d" 0 1 (fontified t)) . -66948) (undo-tree-id22835 . -1) (undo-tree-id22836 . -1) (undo-tree-id22837 . -1) (undo-tree-id22838 . -1) (undo-tree-id22839 . -1) (undo-tree-id22840 . -1) (undo-tree-id22841 . -1) (undo-tree-id22842 . -1) (undo-tree-id22843 . -1) (undo-tree-id22844 . -1) (undo-tree-id22845 . -1) (undo-tree-id22846 . -1) (undo-tree-id22847 . -1) (undo-tree-id22848 . -1) (undo-tree-id22849 . -1) (undo-tree-id22850 . -1) (undo-tree-id22851 . -1) (undo-tree-id22852 . -1) (undo-tree-id22853 . -1) (undo-tree-id22854 . -1) (undo-tree-id22855 . -1) (undo-tree-id22856 . -1) (undo-tree-id22857 . -1) (undo-tree-id22858 . -1) (undo-tree-id22859 . -1) (undo-tree-id22860 . -1) (undo-tree-id22861 . -1) (undo-tree-id22862 . -1) (undo-tree-id22863 . -1) (undo-tree-id22864 . -1) (undo-tree-id22865 . -1) (undo-tree-id22866 . -1) (undo-tree-id22867 . -1) (undo-tree-id22868 . -1) (undo-tree-id22869 . -1) (undo-tree-id22870 . -1) (undo-tree-id22871 . -1) (undo-tree-id22872 . -1) (undo-tree-id22873 . -1) (undo-tree-id22874 . -1) (undo-tree-id22875 . -1) (undo-tree-id22876 . -1) (undo-tree-id22877 . -1) (undo-tree-id22878 . -1) (undo-tree-id22879 . -1) (undo-tree-id22880 . -1) (undo-tree-id22881 . -1) (undo-tree-id22882 . -1) (undo-tree-id22883 . -1) (undo-tree-id22884 . -1) (undo-tree-id22885 . -1) (undo-tree-id22886 . -1) (undo-tree-id22887 . -1) (undo-tree-id22888 . -1) (undo-tree-id22889 . -1) (undo-tree-id22890 . -1) (undo-tree-id22891 . -1) (undo-tree-id22892 . -1) (undo-tree-id22893 . -1) (undo-tree-id22894 . -1) (undo-tree-id22895 . -1) (undo-tree-id22896 . -1) (undo-tree-id22897 . -1) (undo-tree-id22898 . -1) (undo-tree-id22899 . -1) (undo-tree-id22900 . -1) (undo-tree-id22901 . -1) (undo-tree-id22902 . -1) (undo-tree-id22903 . -1) (undo-tree-id22904 . -1) (undo-tree-id22905 . -1) (undo-tree-id22906 . -1) (undo-tree-id22907 . -1) (undo-tree-id22908 . -1) (undo-tree-id22909 . -1) (undo-tree-id22910 . -1) (undo-tree-id22911 . -1) (undo-tree-id22912 . -1) (undo-tree-id22913 . -1) (undo-tree-id22914 . -1) (undo-tree-id22915 . -1) (undo-tree-id22916 . -1) (undo-tree-id22917 . -1) (undo-tree-id22918 . -1) (undo-tree-id22919 . -1) (undo-tree-id22920 . -1) (undo-tree-id22921 . -1) (undo-tree-id22922 . -1) (undo-tree-id22923 . -1) (undo-tree-id22924 . -1) (undo-tree-id22925 . -1) (undo-tree-id22926 . -1) (undo-tree-id22927 . -1) (undo-tree-id22928 . -1) (undo-tree-id22929 . -1) (undo-tree-id22930 . -1) (undo-tree-id22931 . -1) (undo-tree-id22932 . -1) (undo-tree-id22933 . -1) (undo-tree-id22934 . -1) (undo-tree-id22935 . -1) (undo-tree-id22936 . -1) (undo-tree-id22937 . -1) (undo-tree-id22938 . -1) (undo-tree-id22939 . -1) (undo-tree-id22940 . -1) (undo-tree-id22941 . -1) (undo-tree-id22942 . -1) (undo-tree-id22943 . -1) (undo-tree-id22944 . -1) (undo-tree-id22945 . -1) (undo-tree-id22946 . -1) (undo-tree-id22947 . -1) (undo-tree-id22948 . -1) (undo-tree-id22949 . -1) (undo-tree-id22950 . -1) (undo-tree-id22951 . -1) (undo-tree-id22952 . -1) (undo-tree-id22953 . -1) (undo-tree-id22954 . -1) (undo-tree-id22955 . -1) (undo-tree-id22956 . -1) (undo-tree-id22957 . -1) (undo-tree-id22958 . -1) (undo-tree-id22959 . -1) (undo-tree-id22960 . -1) (undo-tree-id22961 . -1) (undo-tree-id22962 . -1) (undo-tree-id22963 . -1) (undo-tree-id22964 . -1) (undo-tree-id22965 . -1) (undo-tree-id22966 . -1) (undo-tree-id22967 . -1) (undo-tree-id22968 . -1) (undo-tree-id22969 . -1) (undo-tree-id22970 . -1) (undo-tree-id22971 . -1) (undo-tree-id22972 . -1) (undo-tree-id22973 . -1) (undo-tree-id22974 . -1) (undo-tree-id22975 . -1) (undo-tree-id22976 . -1) (undo-tree-id22977 . -1) (undo-tree-id22978 . -1) (undo-tree-id22979 . -1) (undo-tree-id22980 . -1) (undo-tree-id22981 . -1) (undo-tree-id22982 . -1) (undo-tree-id22983 . -1) (undo-tree-id22984 . -1) (undo-tree-id22985 . -1) (undo-tree-id22986 . -1) (undo-tree-id22987 . -1) (undo-tree-id22988 . -1) (undo-tree-id22989 . -1) (undo-tree-id22990 . -1) (undo-tree-id22991 . -1) (undo-tree-id22992 . -1) (undo-tree-id22993 . -1) (undo-tree-id22994 . -1) (undo-tree-id22995 . -1) (undo-tree-id22996 . -1) (undo-tree-id22997 . -1) (undo-tree-id22998 . -1) (undo-tree-id22999 . -1) (undo-tree-id23000 . -1) (undo-tree-id23001 . -1) (undo-tree-id23002 . -1) (undo-tree-id23003 . -1) (undo-tree-id23004 . -1) (undo-tree-id23005 . -1) (undo-tree-id23006 . -1) (undo-tree-id23007 . -1) (undo-tree-id23008 . -1) (undo-tree-id23009 . -1) (undo-tree-id23010 . -1) (undo-tree-id23011 . -1) (undo-tree-id23012 . -1) (undo-tree-id23013 . -1) (undo-tree-id23014 . -1) (undo-tree-id23015 . -1) (undo-tree-id23016 . -1) (undo-tree-id23017 . -1) (undo-tree-id23018 . -1) (undo-tree-id23019 . -1) (undo-tree-id23020 . -1) (undo-tree-id23021 . -1) (undo-tree-id23022 . -1) (undo-tree-id23023 . -1) (undo-tree-id23024 . -1) (undo-tree-id23025 . -1) (undo-tree-id23026 . -1) (undo-tree-id23027 . -1) (undo-tree-id23028 . -1) (undo-tree-id23029 . -1) (undo-tree-id23030 . -1) (undo-tree-id23031 . -1) (undo-tree-id23032 . -1) (undo-tree-id23033 . -1) (undo-tree-id23034 . -1) (undo-tree-id23035 . -1) (undo-tree-id23036 . -1) (undo-tree-id23037 . -1) (undo-tree-id23038 . -1) (undo-tree-id23039 . -1) (undo-tree-id23040 . -1) (undo-tree-id23041 . -1) (undo-tree-id23042 . -1) (undo-tree-id23043 . -1) (undo-tree-id23044 . -1) (undo-tree-id23045 . -1) (undo-tree-id23046 . -1) (undo-tree-id23047 . -1) (undo-tree-id23048 . -1) (undo-tree-id23049 . -1) (undo-tree-id23050 . -1) (undo-tree-id23051 . -1) (undo-tree-id23052 . -1) (undo-tree-id23053 . -1) (undo-tree-id23054 . -1) (undo-tree-id23055 . -1) (undo-tree-id23056 . -1) (undo-tree-id23057 . -1) (undo-tree-id23058 . -1) (undo-tree-id23059 . -1) (undo-tree-id23060 . -1) (undo-tree-id23061 . -1) (undo-tree-id23062 . -1) (undo-tree-id23063 . -1) (undo-tree-id23064 . -1) (undo-tree-id23065 . -1) (undo-tree-id23066 . -1) (undo-tree-id23067 . -1) (undo-tree-id23068 . -1) (undo-tree-id23069 . -1) (undo-tree-id23070 . -1) (undo-tree-id23071 . -1) (undo-tree-id23072 . -1) (undo-tree-id23073 . -1) (undo-tree-id23074 . -1) (undo-tree-id23075 . -1) (undo-tree-id23076 . -1) (undo-tree-id23077 . -1) (undo-tree-id23078 . -1) (undo-tree-id23079 . -1) (undo-tree-id23080 . -1) (undo-tree-id23081 . -1) (undo-tree-id23082 . -1) (undo-tree-id23083 . -1) (undo-tree-id23084 . -1) (undo-tree-id23085 . -1) (undo-tree-id23086 . -1) (undo-tree-id23087 . -1) (undo-tree-id23088 . -1) (undo-tree-id23089 . -1) (undo-tree-id23090 . -1) (undo-tree-id23091 . -1) (undo-tree-id23092 . -1) (undo-tree-id23093 . -1) (undo-tree-id23094 . -1) (undo-tree-id23095 . -1) (undo-tree-id23096 . -1) (undo-tree-id23097 . -1) (undo-tree-id23098 . -1) (undo-tree-id23099 . -1) (undo-tree-id23100 . -1) (undo-tree-id23101 . -1) (undo-tree-id23102 . -1) (undo-tree-id23103 . -1) (undo-tree-id23104 . -1) (undo-tree-id23105 . -1) (undo-tree-id23106 . -1) (undo-tree-id23107 . -1) (undo-tree-id23108 . -1) (undo-tree-id23109 . -1) (undo-tree-id23110 . -1) (undo-tree-id23111 . -1) (undo-tree-id23112 . -1) (undo-tree-id23113 . -1) (undo-tree-id23114 . -1) (undo-tree-id23115 . -1) (undo-tree-id23116 . -1) (undo-tree-id23117 . -1) (undo-tree-id23118 . -1) (undo-tree-id23119 . -1) (undo-tree-id23120 . -1) (undo-tree-id23121 . -1) (undo-tree-id23122 . -1) (undo-tree-id23123 . -1) (undo-tree-id23124 . -1) (undo-tree-id23125 . -1) (undo-tree-id23126 . -1) (undo-tree-id23127 . -1) (undo-tree-id23128 . -1) (undo-tree-id23129 . -1) (undo-tree-id23130 . -1) (undo-tree-id23131 . -1) (undo-tree-id23132 . -1) (undo-tree-id23133 . -1) (undo-tree-id23134 . -1) (undo-tree-id23135 . -1) (undo-tree-id23136 . -1) (undo-tree-id23137 . -1) (undo-tree-id23138 . -1) (undo-tree-id23139 . -1) (undo-tree-id23140 . -1) (undo-tree-id23141 . -1) (undo-tree-id23142 . -1) (undo-tree-id23143 . -1) (undo-tree-id23144 . -1) (undo-tree-id23145 . -1) (undo-tree-id23146 . -1) (undo-tree-id23147 . -1) (undo-tree-id23148 . -1) (undo-tree-id23149 . -1) (undo-tree-id23150 . -1) (undo-tree-id23151 . -1) (undo-tree-id23152 . -1) (undo-tree-id23153 . -1) (undo-tree-id23154 . -1) (undo-tree-id23155 . -1) (undo-tree-id23156 . -1) (undo-tree-id23157 . -1) (undo-tree-id23158 . -1) (undo-tree-id23159 . -1) (undo-tree-id23160 . -1) (undo-tree-id23161 . -1) (undo-tree-id23162 . -1) (undo-tree-id23163 . -1) (undo-tree-id23164 . -1) (undo-tree-id23165 . -1) (undo-tree-id23166 . -1) (undo-tree-id23167 . -1) (undo-tree-id23168 . -1) (undo-tree-id23169 . -1) (undo-tree-id23170 . -1) (undo-tree-id23171 . -1) (undo-tree-id23172 . -1) (undo-tree-id23173 . -1) (undo-tree-id23174 . -1) (undo-tree-id23175 . -1) (undo-tree-id23176 . -1) (undo-tree-id23177 . -1) (undo-tree-id23178 . -1) (undo-tree-id23179 . -1) (undo-tree-id23180 . -1) (undo-tree-id23181 . -1) (undo-tree-id23182 . -1) (undo-tree-id23183 . -1) (undo-tree-id23184 . -1) (undo-tree-id23185 . -1) (undo-tree-id23186 . -1) (undo-tree-id23187 . -1) (undo-tree-id23188 . -1) (undo-tree-id23189 . -1) (undo-tree-id23190 . -1) (undo-tree-id23191 . -1) (undo-tree-id23192 . -1) (undo-tree-id23193 . -1) (undo-tree-id23194 . -1) (undo-tree-id23195 . -1) (undo-tree-id23196 . -1) (undo-tree-id23197 . -1) (undo-tree-id23198 . -1) (undo-tree-id23199 . -1) (undo-tree-id23200 . -1) (undo-tree-id23201 . -1) (undo-tree-id23202 . -1) (undo-tree-id23203 . -1) (undo-tree-id23204 . -1) (undo-tree-id23205 . -1) (undo-tree-id23206 . -1) (undo-tree-id23207 . -1) (undo-tree-id23208 . -1) (undo-tree-id23209 . -1) (undo-tree-id23210 . -1) (undo-tree-id23211 . -1) (undo-tree-id23212 . -1) (undo-tree-id23213 . -1) (undo-tree-id23214 . -1) (undo-tree-id23215 . -1) (undo-tree-id23216 . -1) (undo-tree-id23217 . -1) (undo-tree-id23218 . -1) (undo-tree-id23219 . -1) (undo-tree-id23220 . -1) (undo-tree-id23221 . -1) (undo-tree-id23222 . -1) (undo-tree-id23223 . -1) (undo-tree-id23224 . -1) (undo-tree-id23225 . -1) (undo-tree-id23226 . -1) (undo-tree-id23227 . -1) (undo-tree-id23228 . -1) (undo-tree-id23229 . -1) (undo-tree-id23230 . -1) (undo-tree-id23231 . -1) (undo-tree-id23232 . -1) (undo-tree-id23233 . -1) (undo-tree-id23234 . -1) (undo-tree-id23235 . -1) (undo-tree-id23236 . -1) (undo-tree-id23237 . -1) (undo-tree-id23238 . -1) (undo-tree-id23239 . -1) (undo-tree-id23240 . -1) (undo-tree-id23241 . -1) (undo-tree-id23242 . -1) (undo-tree-id23243 . -1) (undo-tree-id23244 . -1) (undo-tree-id23245 . -1) (undo-tree-id23246 . -1) (undo-tree-id23247 . -1) (undo-tree-id23248 . -1) (undo-tree-id23249 . -1) (undo-tree-id23250 . -1) (undo-tree-id23251 . -1) (undo-tree-id23252 . -1) (undo-tree-id23253 . -1) (undo-tree-id23254 . -1) (undo-tree-id23255 . -1) (undo-tree-id23256 . -1) (undo-tree-id23257 . -1) (undo-tree-id23258 . -1) (undo-tree-id23259 . -1) (undo-tree-id23260 . -1) (undo-tree-id23261 . -1) (undo-tree-id23262 . -1) (undo-tree-id23263 . -1) (undo-tree-id23264 . -1) (undo-tree-id23265 . -1) (undo-tree-id23266 . -1) (undo-tree-id23267 . -1) (undo-tree-id23268 . -1) (undo-tree-id23269 . -1) (undo-tree-id23270 . -1) (undo-tree-id23271 . -1) (undo-tree-id23272 . -1) (undo-tree-id23273 . -1) (undo-tree-id23274 . -1) (undo-tree-id23275 . -1) (undo-tree-id23276 . -1) (undo-tree-id23277 . -1) (undo-tree-id23278 . -1) (undo-tree-id23279 . -1) (undo-tree-id23280 . -1) (undo-tree-id23281 . -1) (undo-tree-id23282 . -1) (undo-tree-id23283 . -1) (undo-tree-id23284 . -1) (undo-tree-id23285 . -1) (undo-tree-id23286 . -1) (undo-tree-id23287 . -1) (undo-tree-id23288 . -1) (undo-tree-id23289 . -1) (undo-tree-id23290 . -1) (undo-tree-id23291 . -1) (undo-tree-id23292 . -1) (undo-tree-id23293 . -1) (undo-tree-id23294 . -1) (undo-tree-id23295 . -1) (undo-tree-id23296 . -1) (undo-tree-id23297 . -1) (undo-tree-id23298 . -1) (undo-tree-id23299 . -1) (undo-tree-id23300 . -1) (undo-tree-id23301 . -1) (undo-tree-id23302 . -1) (undo-tree-id23303 . -1) (undo-tree-id23304 . -1) (undo-tree-id23305 . -1) (undo-tree-id23306 . -1) (undo-tree-id23307 . -1) (undo-tree-id23308 . -1) (undo-tree-id23309 . -1) (undo-tree-id23310 . -1) (undo-tree-id23311 . -1) (undo-tree-id23312 . -1) (undo-tree-id23313 . -1) (undo-tree-id23314 . -1) (undo-tree-id23315 . -1) (undo-tree-id23316 . -1) (undo-tree-id23317 . -1) (undo-tree-id23318 . -1) (undo-tree-id23319 . -1) (undo-tree-id23320 . -1) (undo-tree-id23321 . -1) (undo-tree-id23322 . -1) (undo-tree-id23323 . -1) (undo-tree-id23324 . -1) (undo-tree-id23325 . -1) (undo-tree-id23326 . -1) (undo-tree-id23327 . -1) (undo-tree-id23328 . -1) (undo-tree-id23329 . -1) (undo-tree-id23330 . -1) (undo-tree-id23331 . -1) (undo-tree-id23332 . -1) (undo-tree-id23333 . -1) (undo-tree-id23334 . -1) (undo-tree-id23335 . -1) (undo-tree-id23336 . -1) (undo-tree-id23337 . -1) (undo-tree-id23338 . -1) (undo-tree-id23339 . -1) (undo-tree-id23340 . -1) (undo-tree-id23341 . -1) (undo-tree-id23342 . -1) (undo-tree-id23343 . -1) (undo-tree-id23344 . -1) (undo-tree-id23345 . -1) (undo-tree-id23346 . -1) (undo-tree-id23347 . -1) (undo-tree-id23348 . -1) (undo-tree-id23349 . -1) (undo-tree-id23350 . -1) (undo-tree-id23351 . -1) (undo-tree-id23352 . -1) (undo-tree-id23353 . -1) (undo-tree-id23354 . -1) (undo-tree-id23355 . -1) (undo-tree-id23356 . -1) (undo-tree-id23357 . -1) (undo-tree-id23358 . -1) (undo-tree-id23359 . -1) (undo-tree-id23360 . -1) (undo-tree-id23361 . -1) (undo-tree-id23362 . -1) (undo-tree-id23363 . -1) (undo-tree-id23364 . -1) (undo-tree-id23365 . -1) (undo-tree-id23366 . -1) (undo-tree-id23367 . -1) (undo-tree-id23368 . -1) (undo-tree-id23369 . -1) (undo-tree-id23370 . -1) (undo-tree-id23371 . -1) (undo-tree-id23372 . -1) (undo-tree-id23373 . -1) (undo-tree-id23374 . -1) (undo-tree-id23375 . -1) (undo-tree-id23376 . -1) (undo-tree-id23377 . -1) (undo-tree-id23378 . -1) (undo-tree-id23379 . -1) (undo-tree-id23380 . -1) (undo-tree-id23381 . -1) (undo-tree-id23382 . -1) (undo-tree-id23383 . -1) (undo-tree-id23384 . -1) (undo-tree-id23385 . -1) (undo-tree-id23386 . -1) (undo-tree-id23387 . -1) (undo-tree-id23388 . -1) (undo-tree-id23389 . -1) (undo-tree-id23390 . -1) (undo-tree-id23391 . -1) (undo-tree-id23392 . -1) (undo-tree-id23393 . -1) (undo-tree-id23394 . -1) (undo-tree-id23395 . -1) (undo-tree-id23396 . -1) (undo-tree-id23397 . -1) (undo-tree-id23398 . -1) (undo-tree-id23399 . -1) (undo-tree-id23400 . -1) (undo-tree-id23401 . -1) (undo-tree-id23402 . -1) (undo-tree-id23403 . -1) (undo-tree-id23404 . -1) (undo-tree-id23405 . -1) (undo-tree-id23406 . -1) (undo-tree-id23407 . -1) (undo-tree-id23408 . -1) (undo-tree-id23409 . -1) (undo-tree-id23410 . -1) (undo-tree-id23411 . -1) (undo-tree-id23412 . -1) (undo-tree-id23413 . -1) (undo-tree-id23414 . -1) (undo-tree-id23415 . -1) (undo-tree-id23416 . -1) (undo-tree-id23417 . -1) (undo-tree-id23418 . -1) (undo-tree-id23419 . -1) (undo-tree-id23420 . -1) (undo-tree-id23421 . -1) (undo-tree-id23422 . -1) (undo-tree-id23423 . -1) (undo-tree-id23424 . -1) (undo-tree-id23425 . -1) (undo-tree-id23426 . -1) (undo-tree-id23427 . -1) (undo-tree-id23428 . -1) (undo-tree-id23429 . -1) (undo-tree-id23430 . -1) (undo-tree-id23431 . -1) (undo-tree-id23432 . -1) (undo-tree-id23433 . -1) (undo-tree-id23434 . -1) (undo-tree-id23435 . -1) (undo-tree-id23436 . -1) (undo-tree-id23437 . -1) (undo-tree-id23438 . -1) (undo-tree-id23439 . -1) (undo-tree-id23440 . -1) (undo-tree-id23441 . -1) (undo-tree-id23442 . -1) (undo-tree-id23443 . -1) (undo-tree-id23444 . -1) (undo-tree-id23445 . -1) (undo-tree-id23446 . -1) (undo-tree-id23447 . -1) (undo-tree-id23448 . -1) (undo-tree-id23449 . -1) (undo-tree-id23450 . -1) (undo-tree-id23451 . -1) (undo-tree-id23452 . -1) (undo-tree-id23453 . -1) (undo-tree-id23454 . -1) (undo-tree-id23455 . -1) (undo-tree-id23456 . -1) (undo-tree-id23457 . -1) (undo-tree-id23458 . -1) (undo-tree-id23459 . -1) (undo-tree-id23460 . -1) (undo-tree-id23461 . -1) (undo-tree-id23462 . -1) (undo-tree-id23463 . -1) (undo-tree-id23464 . -1) (undo-tree-id23465 . -1) (undo-tree-id23466 . -1) (undo-tree-id23467 . -1) (undo-tree-id23468 . -1) (undo-tree-id23469 . -1) (undo-tree-id23470 . -1) (undo-tree-id23471 . -1) (undo-tree-id23472 . -1) (undo-tree-id23473 . -1) (undo-tree-id23474 . -1) (undo-tree-id23475 . -1) (undo-tree-id23476 . -1) (undo-tree-id23477 . -1) (undo-tree-id23478 . -1) (undo-tree-id23479 . -1) (undo-tree-id23480 . -1) (undo-tree-id23481 . -1) (undo-tree-id23482 . -1) (undo-tree-id23483 . -1) (undo-tree-id23484 . -1) (undo-tree-id23485 . -1) (undo-tree-id23486 . -1) (undo-tree-id23487 . -1) (undo-tree-id23488 . -1) (undo-tree-id23489 . -1) (undo-tree-id23490 . -1) (undo-tree-id23491 . -1) (undo-tree-id23492 . -1) (undo-tree-id23493 . -1) (undo-tree-id23494 . -1) (undo-tree-id23495 . -1) (undo-tree-id23496 . -1) (undo-tree-id23497 . -1) (undo-tree-id23498 . -1) (undo-tree-id23499 . -1) (undo-tree-id23500 . -1) (undo-tree-id23501 . -1) (undo-tree-id23502 . -1) (undo-tree-id23503 . -1) (undo-tree-id23504 . -1) (undo-tree-id23505 . -1) (undo-tree-id23506 . -1) (undo-tree-id23507 . -1) (undo-tree-id23508 . -1) (undo-tree-id23509 . -1) (undo-tree-id23510 . -1) (#(" " 0 1 (fontified t)) . -66949) (undo-tree-id23511 . -1) (undo-tree-id23512 . -1) (undo-tree-id23513 . -1) (undo-tree-id23514 . -1) (undo-tree-id23515 . -1) (undo-tree-id23516 . -1) (undo-tree-id23517 . -1) (undo-tree-id23518 . -1) (undo-tree-id23519 . -1) (undo-tree-id23520 . -1) (undo-tree-id23521 . -1) (undo-tree-id23522 . -1) (undo-tree-id23523 . -1) (undo-tree-id23524 . -1) (undo-tree-id23525 . -1) (undo-tree-id23526 . -1) (undo-tree-id23527 . -1) (undo-tree-id23528 . -1) (undo-tree-id23529 . -1) (undo-tree-id23530 . -1) (undo-tree-id23531 . -1) (undo-tree-id23532 . -1) (undo-tree-id23533 . -1) (undo-tree-id23534 . -1) (undo-tree-id23535 . -1) (undo-tree-id23536 . -1) (undo-tree-id23537 . -1) (undo-tree-id23538 . -1) (undo-tree-id23539 . -1) (undo-tree-id23540 . -1) (undo-tree-id23541 . -1) (undo-tree-id23542 . -1) (undo-tree-id23543 . -1) (undo-tree-id23544 . -1) (undo-tree-id23545 . -1) (undo-tree-id23546 . -1) (undo-tree-id23547 . -1) (undo-tree-id23548 . -1) (undo-tree-id23549 . -1) (undo-tree-id23550 . -1) (undo-tree-id23551 . -1) (undo-tree-id23552 . -1) (undo-tree-id23553 . -1) (undo-tree-id23554 . -1) (undo-tree-id23555 . -1) (undo-tree-id23556 . -1) (undo-tree-id23557 . -1) (undo-tree-id23558 . -1) (undo-tree-id23559 . -1) (undo-tree-id23560 . -1) (undo-tree-id23561 . -1) (undo-tree-id23562 . -1) (undo-tree-id23563 . -1) (undo-tree-id23564 . -1) (undo-tree-id23565 . -1) (undo-tree-id23566 . -1) (undo-tree-id23567 . -1) (undo-tree-id23568 . -1) (undo-tree-id23569 . -1) (undo-tree-id23570 . -1) (undo-tree-id23571 . -1) (undo-tree-id23572 . -1) (undo-tree-id23573 . -1) (undo-tree-id23574 . -1) (undo-tree-id23575 . -1) (undo-tree-id23576 . -1) (undo-tree-id23577 . -1) (undo-tree-id23578 . -1) (undo-tree-id23579 . -1) (undo-tree-id23580 . -1) (undo-tree-id23581 . -1) (undo-tree-id23582 . -1) (undo-tree-id23583 . -1) (undo-tree-id23584 . -1) (undo-tree-id23585 . -1) (undo-tree-id23586 . -1) (undo-tree-id23587 . -1) (undo-tree-id23588 . -1) (undo-tree-id23589 . -1) (undo-tree-id23590 . -1) (undo-tree-id23591 . -1) (undo-tree-id23592 . -1) (undo-tree-id23593 . -1) (undo-tree-id23594 . -1) (undo-tree-id23595 . -1) (undo-tree-id23596 . -1) (undo-tree-id23597 . -1) (undo-tree-id23598 . -1) (undo-tree-id23599 . -1) (undo-tree-id23600 . -1) (undo-tree-id23601 . -1) (undo-tree-id23602 . -1) (undo-tree-id23603 . -1) (undo-tree-id23604 . -1) (undo-tree-id23605 . -1) (undo-tree-id23606 . -1) (undo-tree-id23607 . -1) (undo-tree-id23608 . -1) (undo-tree-id23609 . -1) (undo-tree-id23610 . -1) (undo-tree-id23611 . -1) (undo-tree-id23612 . -1) (undo-tree-id23613 . -1) (undo-tree-id23614 . -1) (undo-tree-id23615 . -1) (undo-tree-id23616 . -1) (undo-tree-id23617 . -1) (undo-tree-id23618 . -1) (undo-tree-id23619 . -1) (undo-tree-id23620 . -1) (undo-tree-id23621 . -1) (undo-tree-id23622 . -1) (undo-tree-id23623 . -1) (undo-tree-id23624 . -1) (undo-tree-id23625 . -1) (undo-tree-id23626 . -1) (undo-tree-id23627 . -1) (undo-tree-id23628 . -1) (undo-tree-id23629 . -1) (undo-tree-id23630 . -1) (undo-tree-id23631 . -1) (undo-tree-id23632 . -1) (undo-tree-id23633 . -1) (undo-tree-id23634 . -1) (undo-tree-id23635 . -1) (undo-tree-id23636 . -1) (undo-tree-id23637 . -1) (undo-tree-id23638 . -1) (undo-tree-id23639 . -1) (undo-tree-id23640 . -1) (undo-tree-id23641 . -1) (undo-tree-id23642 . -1) (undo-tree-id23643 . -1) (undo-tree-id23644 . -1) (undo-tree-id23645 . -1) (undo-tree-id23646 . -1) (undo-tree-id23647 . -1) (undo-tree-id23648 . -1) (undo-tree-id23649 . -1) (undo-tree-id23650 . -1) (undo-tree-id23651 . -1) (undo-tree-id23652 . -1) (undo-tree-id23653 . -1) (undo-tree-id23654 . -1) (undo-tree-id23655 . -1) (undo-tree-id23656 . -1) (undo-tree-id23657 . -1) (undo-tree-id23658 . -1) (undo-tree-id23659 . -1) (undo-tree-id23660 . -1) (undo-tree-id23661 . -1) (undo-tree-id23662 . -1) (undo-tree-id23663 . -1) (undo-tree-id23664 . -1) (undo-tree-id23665 . -1) (undo-tree-id23666 . -1) (undo-tree-id23667 . -1) (undo-tree-id23668 . -1) (undo-tree-id23669 . -1) (undo-tree-id23670 . -1) (undo-tree-id23671 . -1) (undo-tree-id23672 . -1) (undo-tree-id23673 . -1) (undo-tree-id23674 . -1) (undo-tree-id23675 . -1) (undo-tree-id23676 . -1) (undo-tree-id23677 . -1) (undo-tree-id23678 . -1) (undo-tree-id23679 . -1) (undo-tree-id23680 . -1) (undo-tree-id23681 . -1) (undo-tree-id23682 . -1) (undo-tree-id23683 . -1) (undo-tree-id23684 . -1) (undo-tree-id23685 . -1) (undo-tree-id23686 . -1) (undo-tree-id23687 . -1) (undo-tree-id23688 . -1) (undo-tree-id23689 . -1) (undo-tree-id23690 . -1) (undo-tree-id23691 . -1) (undo-tree-id23692 . -1) (undo-tree-id23693 . -1) (undo-tree-id23694 . -1) (undo-tree-id23695 . -1) (undo-tree-id23696 . -1) (undo-tree-id23697 . -1) (undo-tree-id23698 . -1) (undo-tree-id23699 . -1) (undo-tree-id23700 . -1) (undo-tree-id23701 . -1) (undo-tree-id23702 . -1) (undo-tree-id23703 . -1) (undo-tree-id23704 . -1) (undo-tree-id23705 . -1) (undo-tree-id23706 . -1) (undo-tree-id23707 . -1) (undo-tree-id23708 . -1) (undo-tree-id23709 . -1) (undo-tree-id23710 . -1) (undo-tree-id23711 . -1) (undo-tree-id23712 . -1) (undo-tree-id23713 . -1) (undo-tree-id23714 . -1) (undo-tree-id23715 . -1) (undo-tree-id23716 . -1) (undo-tree-id23717 . -1) (undo-tree-id23718 . -1) (undo-tree-id23719 . -1) (undo-tree-id23720 . -1) (undo-tree-id23721 . -1) (undo-tree-id23722 . -1) (undo-tree-id23723 . -1) (undo-tree-id23724 . -1) (undo-tree-id23725 . -1) (undo-tree-id23726 . -1) (undo-tree-id23727 . -1) (undo-tree-id23728 . -1) (undo-tree-id23729 . -1) (undo-tree-id23730 . -1) (undo-tree-id23731 . -1) (undo-tree-id23732 . -1) (undo-tree-id23733 . -1) (undo-tree-id23734 . -1) (undo-tree-id23735 . -1) (undo-tree-id23736 . -1) (undo-tree-id23737 . -1) (undo-tree-id23738 . -1) (undo-tree-id23739 . -1) (undo-tree-id23740 . -1) (undo-tree-id23741 . -1) (undo-tree-id23742 . -1) (undo-tree-id23743 . -1) (undo-tree-id23744 . -1) (undo-tree-id23745 . -1) (undo-tree-id23746 . -1) (undo-tree-id23747 . -1) (undo-tree-id23748 . -1) (undo-tree-id23749 . -1) (undo-tree-id23750 . -1) (undo-tree-id23751 . -1) (undo-tree-id23752 . -1) (undo-tree-id23753 . -1) (undo-tree-id23754 . -1) (undo-tree-id23755 . -1) (undo-tree-id23756 . -1) (undo-tree-id23757 . -1) (undo-tree-id23758 . -1) (undo-tree-id23759 . -1) (undo-tree-id23760 . -1) (undo-tree-id23761 . -1) (undo-tree-id23762 . -1) (undo-tree-id23763 . -1) (undo-tree-id23764 . -1) (undo-tree-id23765 . -1) (undo-tree-id23766 . -1) (undo-tree-id23767 . -1) (undo-tree-id23768 . -1) (undo-tree-id23769 . -1) (undo-tree-id23770 . -1) (undo-tree-id23771 . -1) (undo-tree-id23772 . -1) (undo-tree-id23773 . -1) (undo-tree-id23774 . -1) (undo-tree-id23775 . -1) (undo-tree-id23776 . -1) (undo-tree-id23777 . -1) (undo-tree-id23778 . -1) (undo-tree-id23779 . -1) (undo-tree-id23780 . -1) (undo-tree-id23781 . -1) (undo-tree-id23782 . -1) (undo-tree-id23783 . -1) (undo-tree-id23784 . -1) (undo-tree-id23785 . -1) (undo-tree-id23786 . -1) (undo-tree-id23787 . -1) (undo-tree-id23788 . -1) (undo-tree-id23789 . -1) (undo-tree-id23790 . -1) (undo-tree-id23791 . -1) (undo-tree-id23792 . -1) (undo-tree-id23793 . -1) (undo-tree-id23794 . -1) (undo-tree-id23795 . -1) (undo-tree-id23796 . -1) (undo-tree-id23797 . -1) (undo-tree-id23798 . -1) (undo-tree-id23799 . -1) (undo-tree-id23800 . -1) (undo-tree-id23801 . -1) (undo-tree-id23802 . -1) (undo-tree-id23803 . -1) (undo-tree-id23804 . -1) (undo-tree-id23805 . -1) (undo-tree-id23806 . -1) (undo-tree-id23807 . -1) (undo-tree-id23808 . -1) (undo-tree-id23809 . -1) (undo-tree-id23810 . -1) (undo-tree-id23811 . -1) (undo-tree-id23812 . -1) (undo-tree-id23813 . -1) (undo-tree-id23814 . -1) (undo-tree-id23815 . -1) (undo-tree-id23816 . -1) (undo-tree-id23817 . -1) (undo-tree-id23818 . -1) (undo-tree-id23819 . -1) (undo-tree-id23820 . -1) (undo-tree-id23821 . -1) (undo-tree-id23822 . -1) (undo-tree-id23823 . -1) (undo-tree-id23824 . -1) (undo-tree-id23825 . -1) (undo-tree-id23826 . -1) (undo-tree-id23827 . -1) (undo-tree-id23828 . -1) (undo-tree-id23829 . -1) (undo-tree-id23830 . -1) (undo-tree-id23831 . -1) (undo-tree-id23832 . -1) (undo-tree-id23833 . -1) (undo-tree-id23834 . -1) (undo-tree-id23835 . -1) (undo-tree-id23836 . -1) (undo-tree-id23837 . -1) (undo-tree-id23838 . -1) (undo-tree-id23839 . -1) (undo-tree-id23840 . -1) (undo-tree-id23841 . -1) (undo-tree-id23842 . -1) (undo-tree-id23843 . -1) (undo-tree-id23844 . -1) (undo-tree-id23845 . -1) (undo-tree-id23846 . -1) (undo-tree-id23847 . -1) (undo-tree-id23848 . -1) (undo-tree-id23849 . -1) (undo-tree-id23850 . -1) (undo-tree-id23851 . -1) (undo-tree-id23852 . -1) (undo-tree-id23853 . -1) (undo-tree-id23854 . -1) (undo-tree-id23855 . -1) (undo-tree-id23856 . -1) (undo-tree-id23857 . -1) (undo-tree-id23858 . -1) (undo-tree-id23859 . -1) (undo-tree-id23860 . -1) (undo-tree-id23861 . -1) (undo-tree-id23862 . -1) (undo-tree-id23863 . -1) (undo-tree-id23864 . -1) (undo-tree-id23865 . -1) (undo-tree-id23866 . -1) (undo-tree-id23867 . -1) (undo-tree-id23868 . -1) (undo-tree-id23869 . -1) (undo-tree-id23870 . -1) (undo-tree-id23871 . -1) (undo-tree-id23872 . -1) (undo-tree-id23873 . -1) (undo-tree-id23874 . -1) (undo-tree-id23875 . -1) (undo-tree-id23876 . -1) (undo-tree-id23877 . -1) (undo-tree-id23878 . -1) (undo-tree-id23879 . -1) (undo-tree-id23880 . -1) (undo-tree-id23881 . -1) (undo-tree-id23882 . -1) (undo-tree-id23883 . -1) (undo-tree-id23884 . -1) (undo-tree-id23885 . -1) (undo-tree-id23886 . -1) (undo-tree-id23887 . -1) (undo-tree-id23888 . -1) (undo-tree-id23889 . -1) (undo-tree-id23890 . -1) (undo-tree-id23891 . -1) (undo-tree-id23892 . -1) (undo-tree-id23893 . -1) (undo-tree-id23894 . -1) (undo-tree-id23895 . -1) (undo-tree-id23896 . -1) (undo-tree-id23897 . -1) (undo-tree-id23898 . -1) (undo-tree-id23899 . -1) (undo-tree-id23900 . -1) (undo-tree-id23901 . -1) (undo-tree-id23902 . -1) (undo-tree-id23903 . -1) (undo-tree-id23904 . -1) (undo-tree-id23905 . -1) (undo-tree-id23906 . -1) (undo-tree-id23907 . -1) (undo-tree-id23908 . -1) (undo-tree-id23909 . -1) (undo-tree-id23910 . -1) (undo-tree-id23911 . -1) (undo-tree-id23912 . -1) (undo-tree-id23913 . -1) (undo-tree-id23914 . -1) (undo-tree-id23915 . -1) (undo-tree-id23916 . -1) (undo-tree-id23917 . -1) (undo-tree-id23918 . -1) (undo-tree-id23919 . -1) (undo-tree-id23920 . -1) (undo-tree-id23921 . -1) (undo-tree-id23922 . -1) (undo-tree-id23923 . -1) (undo-tree-id23924 . -1) (undo-tree-id23925 . -1) (undo-tree-id23926 . -1) (undo-tree-id23927 . -1) (undo-tree-id23928 . -1) (undo-tree-id23929 . -1) (undo-tree-id23930 . -1) (undo-tree-id23931 . -1) (undo-tree-id23932 . -1) (undo-tree-id23933 . -1) (undo-tree-id23934 . -1) (undo-tree-id23935 . -1) (undo-tree-id23936 . -1) (undo-tree-id23937 . -1) (undo-tree-id23938 . -1) (undo-tree-id23939 . -1) (undo-tree-id23940 . -1) (undo-tree-id23941 . -1) (undo-tree-id23942 . -1) (undo-tree-id23943 . -1) (undo-tree-id23944 . -1) (undo-tree-id23945 . -1) (undo-tree-id23946 . -1) (undo-tree-id23947 . -1) (undo-tree-id23948 . -1) (undo-tree-id23949 . -1) (undo-tree-id23950 . -1) (undo-tree-id23951 . -1) (undo-tree-id23952 . -1) (undo-tree-id23953 . -1) (undo-tree-id23954 . -1) (undo-tree-id23955 . -1) (undo-tree-id23956 . -1) (undo-tree-id23957 . -1) (undo-tree-id23958 . -1) (undo-tree-id23959 . -1) (undo-tree-id23960 . -1) (undo-tree-id23961 . -1) (undo-tree-id23962 . -1) (undo-tree-id23963 . -1) (undo-tree-id23964 . -1) (undo-tree-id23965 . -1) (undo-tree-id23966 . -1) (undo-tree-id23967 . -1) (undo-tree-id23968 . -1) (undo-tree-id23969 . -1) (undo-tree-id23970 . -1) (undo-tree-id23971 . -1) (undo-tree-id23972 . -1) (undo-tree-id23973 . -1) (undo-tree-id23974 . -1) (undo-tree-id23975 . -1) (undo-tree-id23976 . -1) (undo-tree-id23977 . -1) (undo-tree-id23978 . -1) (undo-tree-id23979 . -1) (undo-tree-id23980 . -1) (undo-tree-id23981 . -1) (undo-tree-id23982 . -1) (undo-tree-id23983 . -1) (undo-tree-id23984 . -1) (undo-tree-id23985 . -1) (undo-tree-id23986 . -1) (undo-tree-id23987 . -1) (undo-tree-id23988 . -1) (undo-tree-id23989 . -1) (undo-tree-id23990 . -1) (undo-tree-id23991 . -1) (undo-tree-id23992 . -1) (undo-tree-id23993 . -1) (undo-tree-id23994 . -1) (undo-tree-id23995 . -1) (undo-tree-id23996 . -1) (undo-tree-id23997 . -1) (undo-tree-id23998 . -1) (undo-tree-id23999 . -1) (undo-tree-id24000 . -1) (undo-tree-id24001 . -1) (undo-tree-id24002 . -1) (undo-tree-id24003 . -1) (undo-tree-id24004 . -1) (undo-tree-id24005 . -1) (undo-tree-id24006 . -1) (undo-tree-id24007 . -1) (undo-tree-id24008 . -1) (undo-tree-id24009 . -1) (undo-tree-id24010 . -1) (undo-tree-id24011 . -1) (undo-tree-id24012 . -1) (undo-tree-id24013 . -1) (undo-tree-id24014 . -1) (undo-tree-id24015 . -1) (undo-tree-id24016 . -1) (undo-tree-id24017 . -1) (undo-tree-id24018 . -1) (undo-tree-id24019 . -1) (undo-tree-id24020 . -1) (undo-tree-id24021 . -1) (undo-tree-id24022 . -1) (undo-tree-id24023 . -1) (undo-tree-id24024 . -1) (undo-tree-id24025 . -1) (undo-tree-id24026 . -1) (undo-tree-id24027 . -1) (undo-tree-id24028 . -1) (undo-tree-id24029 . -1) (undo-tree-id24030 . -1) (undo-tree-id24031 . -1) (undo-tree-id24032 . -1) (undo-tree-id24033 . -1) (undo-tree-id24034 . -1) (undo-tree-id24035 . -1) (undo-tree-id24036 . -1) (undo-tree-id24037 . -1) (undo-tree-id24038 . -1) (undo-tree-id24039 . -1) (undo-tree-id24040 . -1) (undo-tree-id24041 . -1) (undo-tree-id24042 . -1) (undo-tree-id24043 . -1) (undo-tree-id24044 . -1) (undo-tree-id24045 . -1) (undo-tree-id24046 . -1) (undo-tree-id24047 . -1) (undo-tree-id24048 . -1) (undo-tree-id24049 . -1) (undo-tree-id24050 . -1) (undo-tree-id24051 . -1) (undo-tree-id24052 . -1) (undo-tree-id24053 . -1) (undo-tree-id24054 . -1) (undo-tree-id24055 . -1) (undo-tree-id24056 . -1) (undo-tree-id24057 . -1) (undo-tree-id24058 . -1) (undo-tree-id24059 . -1) (undo-tree-id24060 . -1) (undo-tree-id24061 . -1) (undo-tree-id24062 . -1) (undo-tree-id24063 . -1) (undo-tree-id24064 . -1) (undo-tree-id24065 . -1) (undo-tree-id24066 . -1) (undo-tree-id24067 . -1) (undo-tree-id24068 . -1) (undo-tree-id24069 . -1) (undo-tree-id24070 . -1) (undo-tree-id24071 . -1) (undo-tree-id24072 . -1) (undo-tree-id24073 . -1) (undo-tree-id24074 . -1) (undo-tree-id24075 . -1) (undo-tree-id24076 . -1) (undo-tree-id24077 . -1) (undo-tree-id24078 . -1) (undo-tree-id24079 . -1) (undo-tree-id24080 . -1) (undo-tree-id24081 . -1) (undo-tree-id24082 . -1) (undo-tree-id24083 . -1) (undo-tree-id24084 . -1) (undo-tree-id24085 . -1) (undo-tree-id24086 . -1) (undo-tree-id24087 . -1) (undo-tree-id24088 . -1) (undo-tree-id24089 . -1) (undo-tree-id24090 . -1) (undo-tree-id24091 . -1) (undo-tree-id24092 . -1) (undo-tree-id24093 . -1) (undo-tree-id24094 . -1) (undo-tree-id24095 . -1) (undo-tree-id24096 . -1) (undo-tree-id24097 . -1) (undo-tree-id24098 . -1) (undo-tree-id24099 . -1) (undo-tree-id24100 . -1) (undo-tree-id24101 . -1) (undo-tree-id24102 . -1) (undo-tree-id24103 . -1) (undo-tree-id24104 . -1) (undo-tree-id24105 . -1) (undo-tree-id24106 . -1) (undo-tree-id24107 . -1) (undo-tree-id24108 . -1) (undo-tree-id24109 . -1) (undo-tree-id24110 . -1) (undo-tree-id24111 . -1) (undo-tree-id24112 . -1) (undo-tree-id24113 . -1) (undo-tree-id24114 . -1) (undo-tree-id24115 . -1) (undo-tree-id24116 . -1) (undo-tree-id24117 . -1) (undo-tree-id24118 . -1) (undo-tree-id24119 . -1) (undo-tree-id24120 . -1) (undo-tree-id24121 . -1) (undo-tree-id24122 . -1) (undo-tree-id24123 . -1) (undo-tree-id24124 . -1) (undo-tree-id24125 . -1) (undo-tree-id24126 . -1) (undo-tree-id24127 . -1) (undo-tree-id24128 . -1) (undo-tree-id24129 . -1) (undo-tree-id24130 . -1) (undo-tree-id24131 . -1) (undo-tree-id24132 . -1) (undo-tree-id24133 . -1) (undo-tree-id24134 . -1) (undo-tree-id24135 . -1) (undo-tree-id24136 . -1) (undo-tree-id24137 . -1) (undo-tree-id24138 . -1) (undo-tree-id24139 . -1) (undo-tree-id24140 . -1) (undo-tree-id24141 . -1) (undo-tree-id24142 . -1) (undo-tree-id24143 . -1) (undo-tree-id24144 . -1) (undo-tree-id24145 . -1) (undo-tree-id24146 . -1) (undo-tree-id24147 . -1) (undo-tree-id24148 . -1) (undo-tree-id24149 . -1) (undo-tree-id24150 . -1) (undo-tree-id24151 . -1) (undo-tree-id24152 . -1) (undo-tree-id24153 . -1) (undo-tree-id24154 . -1) (undo-tree-id24155 . -1) (undo-tree-id24156 . -1) (undo-tree-id24157 . -1) (undo-tree-id24158 . -1) (undo-tree-id24159 . -1) (undo-tree-id24160 . -1) (#("a" 0 1 (fontified t)) . -66950) (undo-tree-id24161 . -1) (undo-tree-id24162 . -1) (undo-tree-id24163 . -1) (undo-tree-id24164 . -1) (undo-tree-id24165 . -1) (undo-tree-id24166 . -1) (undo-tree-id24167 . -1) (undo-tree-id24168 . -1) (undo-tree-id24169 . -1) (undo-tree-id24170 . -1) (undo-tree-id24171 . -1) (undo-tree-id24172 . -1) (undo-tree-id24173 . -1) (undo-tree-id24174 . -1) (undo-tree-id24175 . -1) (undo-tree-id24176 . -1) (undo-tree-id24177 . -1) (undo-tree-id24178 . -1) (undo-tree-id24179 . -1) (undo-tree-id24180 . -1) (undo-tree-id24181 . -1) (undo-tree-id24182 . -1) (undo-tree-id24183 . -1) (undo-tree-id24184 . -1) (undo-tree-id24185 . -1) (undo-tree-id24186 . -1) (undo-tree-id24187 . -1) (undo-tree-id24188 . -1) (undo-tree-id24189 . -1) (undo-tree-id24190 . -1) (undo-tree-id24191 . -1) (undo-tree-id24192 . -1) (undo-tree-id24193 . -1) (undo-tree-id24194 . -1) (undo-tree-id24195 . -1) (undo-tree-id24196 . -1) (undo-tree-id24197 . -1) (undo-tree-id24198 . -1) (undo-tree-id24199 . -1) (undo-tree-id24200 . -1) (undo-tree-id24201 . -1) (undo-tree-id24202 . -1) (undo-tree-id24203 . -1) (undo-tree-id24204 . -1) (undo-tree-id24205 . -1) (undo-tree-id24206 . -1) (undo-tree-id24207 . -1) (undo-tree-id24208 . -1) (undo-tree-id24209 . -1) (undo-tree-id24210 . -1) (undo-tree-id24211 . -1) (undo-tree-id24212 . -1) (undo-tree-id24213 . -1) (undo-tree-id24214 . -1) (undo-tree-id24215 . -1) (undo-tree-id24216 . -1) (undo-tree-id24217 . -1) (undo-tree-id24218 . -1) (undo-tree-id24219 . -1) (undo-tree-id24220 . -1) (undo-tree-id24221 . -1) (undo-tree-id24222 . -1) (undo-tree-id24223 . -1) (undo-tree-id24224 . -1) (undo-tree-id24225 . -1) (undo-tree-id24226 . -1) (undo-tree-id24227 . -1) (undo-tree-id24228 . -1) (undo-tree-id24229 . -1) (undo-tree-id24230 . -1) (undo-tree-id24231 . -1) (undo-tree-id24232 . -1) (undo-tree-id24233 . -1) (undo-tree-id24234 . -1) (undo-tree-id24235 . -1) (undo-tree-id24236 . -1) (undo-tree-id24237 . -1) (undo-tree-id24238 . -1) (undo-tree-id24239 . -1) (undo-tree-id24240 . -1) (undo-tree-id24241 . -1) (undo-tree-id24242 . -1) (undo-tree-id24243 . -1) (undo-tree-id24244 . -1) (undo-tree-id24245 . -1) (undo-tree-id24246 . -1) (undo-tree-id24247 . -1) (undo-tree-id24248 . -1) (undo-tree-id24249 . -1) (undo-tree-id24250 . -1) (undo-tree-id24251 . -1) (undo-tree-id24252 . -1) (undo-tree-id24253 . -1) (undo-tree-id24254 . -1) (undo-tree-id24255 . -1) (undo-tree-id24256 . -1) (undo-tree-id24257 . -1) (undo-tree-id24258 . -1) (undo-tree-id24259 . -1) (undo-tree-id24260 . -1) (undo-tree-id24261 . -1) (undo-tree-id24262 . -1) (undo-tree-id24263 . -1) (undo-tree-id24264 . -1) (undo-tree-id24265 . -1) (undo-tree-id24266 . -1) (undo-tree-id24267 . -1) (undo-tree-id24268 . -1) (undo-tree-id24269 . -1) (undo-tree-id24270 . -1) (undo-tree-id24271 . -1) (undo-tree-id24272 . -1) (undo-tree-id24273 . -1) (undo-tree-id24274 . -1) (undo-tree-id24275 . -1) (undo-tree-id24276 . -1) (undo-tree-id24277 . -1) (undo-tree-id24278 . -1) (undo-tree-id24279 . -1) (undo-tree-id24280 . -1) (undo-tree-id24281 . -1) (undo-tree-id24282 . -1) (undo-tree-id24283 . -1) (undo-tree-id24284 . -1) (undo-tree-id24285 . -1) (undo-tree-id24286 . -1) (undo-tree-id24287 . -1) (undo-tree-id24288 . -1) (undo-tree-id24289 . -1) (undo-tree-id24290 . -1) (undo-tree-id24291 . -1) (undo-tree-id24292 . -1) (undo-tree-id24293 . -1) (undo-tree-id24294 . -1) (undo-tree-id24295 . -1) (undo-tree-id24296 . -1) (undo-tree-id24297 . -1) (undo-tree-id24298 . -1) (undo-tree-id24299 . -1) (undo-tree-id24300 . -1) (undo-tree-id24301 . -1) (undo-tree-id24302 . -1) (undo-tree-id24303 . -1) (undo-tree-id24304 . -1) (undo-tree-id24305 . -1) (undo-tree-id24306 . -1) (undo-tree-id24307 . -1) (undo-tree-id24308 . -1) (undo-tree-id24309 . -1) (undo-tree-id24310 . -1) (undo-tree-id24311 . -1) (undo-tree-id24312 . -1) (undo-tree-id24313 . -1) (undo-tree-id24314 . -1) (undo-tree-id24315 . -1) (undo-tree-id24316 . -1) (undo-tree-id24317 . -1) (undo-tree-id24318 . -1) (undo-tree-id24319 . -1) (undo-tree-id24320 . -1) (undo-tree-id24321 . -1) (undo-tree-id24322 . -1) (undo-tree-id24323 . -1) (undo-tree-id24324 . -1) (undo-tree-id24325 . -1) (undo-tree-id24326 . -1) (undo-tree-id24327 . -1) (undo-tree-id24328 . -1) (undo-tree-id24329 . -1) (undo-tree-id24330 . -1) (undo-tree-id24331 . -1) (undo-tree-id24332 . -1) (undo-tree-id24333 . -1) (undo-tree-id24334 . -1) (undo-tree-id24335 . -1) (undo-tree-id24336 . -1) (undo-tree-id24337 . -1) (undo-tree-id24338 . -1) (undo-tree-id24339 . -1) (undo-tree-id24340 . -1) (undo-tree-id24341 . -1) (undo-tree-id24342 . -1) (undo-tree-id24343 . -1) (undo-tree-id24344 . -1) (undo-tree-id24345 . -1) (undo-tree-id24346 . -1) (undo-tree-id24347 . -1) (undo-tree-id24348 . -1) (undo-tree-id24349 . -1) (undo-tree-id24350 . -1) (undo-tree-id24351 . -1) (undo-tree-id24352 . -1) (undo-tree-id24353 . -1) (undo-tree-id24354 . -1) (undo-tree-id24355 . -1) (undo-tree-id24356 . -1) (undo-tree-id24357 . -1) (undo-tree-id24358 . -1) (undo-tree-id24359 . -1) (undo-tree-id24360 . -1) (undo-tree-id24361 . -1) (undo-tree-id24362 . -1) (undo-tree-id24363 . -1) (undo-tree-id24364 . -1) (undo-tree-id24365 . -1) (undo-tree-id24366 . -1) (undo-tree-id24367 . -1) (undo-tree-id24368 . -1) (undo-tree-id24369 . -1) (undo-tree-id24370 . -1) (undo-tree-id24371 . -1) (undo-tree-id24372 . -1) (undo-tree-id24373 . -1) (undo-tree-id24374 . -1) (undo-tree-id24375 . -1) (undo-tree-id24376 . -1) (undo-tree-id24377 . -1) (undo-tree-id24378 . -1) (undo-tree-id24379 . -1) (undo-tree-id24380 . -1) (undo-tree-id24381 . -1) (undo-tree-id24382 . -1) (undo-tree-id24383 . -1) (undo-tree-id24384 . -1) (undo-tree-id24385 . -1) (undo-tree-id24386 . -1) (undo-tree-id24387 . -1) (undo-tree-id24388 . -1) (undo-tree-id24389 . -1) (undo-tree-id24390 . -1) (undo-tree-id24391 . -1) (undo-tree-id24392 . -1) (undo-tree-id24393 . -1) (undo-tree-id24394 . -1) (undo-tree-id24395 . -1) (undo-tree-id24396 . -1) (undo-tree-id24397 . -1) (undo-tree-id24398 . -1) (undo-tree-id24399 . -1) (undo-tree-id24400 . -1) (undo-tree-id24401 . -1) (undo-tree-id24402 . -1) (undo-tree-id24403 . -1) (undo-tree-id24404 . -1) (undo-tree-id24405 . -1) (undo-tree-id24406 . -1) (undo-tree-id24407 . -1) (undo-tree-id24408 . -1) (undo-tree-id24409 . -1) (undo-tree-id24410 . -1) (undo-tree-id24411 . -1) (undo-tree-id24412 . -1) (undo-tree-id24413 . -1) (undo-tree-id24414 . -1) (undo-tree-id24415 . -1) (undo-tree-id24416 . -1) (undo-tree-id24417 . -1) (undo-tree-id24418 . -1) (undo-tree-id24419 . -1) (undo-tree-id24420 . -1) (undo-tree-id24421 . -1) (undo-tree-id24422 . -1) (undo-tree-id24423 . -1) (undo-tree-id24424 . -1) (undo-tree-id24425 . -1) (undo-tree-id24426 . -1) (undo-tree-id24427 . -1) (undo-tree-id24428 . -1) (undo-tree-id24429 . -1) (undo-tree-id24430 . -1) (undo-tree-id24431 . -1) (undo-tree-id24432 . -1) (undo-tree-id24433 . -1) (undo-tree-id24434 . -1) (undo-tree-id24435 . -1) (undo-tree-id24436 . -1) (undo-tree-id24437 . -1) (undo-tree-id24438 . -1) (undo-tree-id24439 . -1) (undo-tree-id24440 . -1) (undo-tree-id24441 . -1) (undo-tree-id24442 . -1) (undo-tree-id24443 . -1) (undo-tree-id24444 . -1) (undo-tree-id24445 . -1) (undo-tree-id24446 . -1) (undo-tree-id24447 . -1) (undo-tree-id24448 . -1) (undo-tree-id24449 . -1) (undo-tree-id24450 . -1) (undo-tree-id24451 . -1) (undo-tree-id24452 . -1) (undo-tree-id24453 . -1) (undo-tree-id24454 . -1) (undo-tree-id24455 . -1) (undo-tree-id24456 . -1) (undo-tree-id24457 . -1) (undo-tree-id24458 . -1) (undo-tree-id24459 . -1) (undo-tree-id24460 . -1) (undo-tree-id24461 . -1) (undo-tree-id24462 . -1) (undo-tree-id24463 . -1) (undo-tree-id24464 . -1) (undo-tree-id24465 . -1) (undo-tree-id24466 . -1) (undo-tree-id24467 . -1) (undo-tree-id24468 . -1) (undo-tree-id24469 . -1) (undo-tree-id24470 . -1) (undo-tree-id24471 . -1) (undo-tree-id24472 . -1) (undo-tree-id24473 . -1) (undo-tree-id24474 . -1) (undo-tree-id24475 . -1) (undo-tree-id24476 . -1) (undo-tree-id24477 . -1) (undo-tree-id24478 . -1) (undo-tree-id24479 . -1) (undo-tree-id24480 . -1) (undo-tree-id24481 . -1) (undo-tree-id24482 . -1) (undo-tree-id24483 . -1) (undo-tree-id24484 . -1) (undo-tree-id24485 . -1) (undo-tree-id24486 . -1) (undo-tree-id24487 . -1) (undo-tree-id24488 . -1) (undo-tree-id24489 . -1) (undo-tree-id24490 . -1) (undo-tree-id24491 . -1) (undo-tree-id24492 . -1) (undo-tree-id24493 . -1) (undo-tree-id24494 . -1) (undo-tree-id24495 . -1) (undo-tree-id24496 . -1) (undo-tree-id24497 . -1) (undo-tree-id24498 . -1) (undo-tree-id24499 . -1) (undo-tree-id24500 . -1) (undo-tree-id24501 . -1) (undo-tree-id24502 . -1) (undo-tree-id24503 . -1) (undo-tree-id24504 . -1) (undo-tree-id24505 . -1) (undo-tree-id24506 . -1) (undo-tree-id24507 . -1) (undo-tree-id24508 . -1) (undo-tree-id24509 . -1) (undo-tree-id24510 . -1) (undo-tree-id24511 . -1) (undo-tree-id24512 . -1) (undo-tree-id24513 . -1) (undo-tree-id24514 . -1) (undo-tree-id24515 . -1) (undo-tree-id24516 . -1) (undo-tree-id24517 . -1) (undo-tree-id24518 . -1) (undo-tree-id24519 . -1) (undo-tree-id24520 . -1) (undo-tree-id24521 . -1) (undo-tree-id24522 . -1) (undo-tree-id24523 . -1) (undo-tree-id24524 . -1) (undo-tree-id24525 . -1) (undo-tree-id24526 . -1) (undo-tree-id24527 . -1) (undo-tree-id24528 . -1) (undo-tree-id24529 . -1) (undo-tree-id24530 . -1) (undo-tree-id24531 . -1) (undo-tree-id24532 . -1) (undo-tree-id24533 . -1) (undo-tree-id24534 . -1) (undo-tree-id24535 . -1) (undo-tree-id24536 . -1) (undo-tree-id24537 . -1) (undo-tree-id24538 . -1) (undo-tree-id24539 . -1) (undo-tree-id24540 . -1) (undo-tree-id24541 . -1) (undo-tree-id24542 . -1) (undo-tree-id24543 . -1) (undo-tree-id24544 . -1) (undo-tree-id24545 . -1) (undo-tree-id24546 . -1) (undo-tree-id24547 . -1) (undo-tree-id24548 . -1) (undo-tree-id24549 . -1) (undo-tree-id24550 . -1) (undo-tree-id24551 . -1) (undo-tree-id24552 . -1) (undo-tree-id24553 . -1) (undo-tree-id24554 . -1) (undo-tree-id24555 . -1) (undo-tree-id24556 . -1) (undo-tree-id24557 . -1) (undo-tree-id24558 . -1) (undo-tree-id24559 . -1) (undo-tree-id24560 . -1) (undo-tree-id24561 . -1) (undo-tree-id24562 . -1) (undo-tree-id24563 . -1) (undo-tree-id24564 . -1) (undo-tree-id24565 . -1) (undo-tree-id24566 . -1) (undo-tree-id24567 . -1) (undo-tree-id24568 . -1) (undo-tree-id24569 . -1) (undo-tree-id24570 . -1) (undo-tree-id24571 . -1) (undo-tree-id24572 . -1) (undo-tree-id24573 . -1) (undo-tree-id24574 . -1) (undo-tree-id24575 . -1) (undo-tree-id24576 . -1) (undo-tree-id24577 . -1) (undo-tree-id24578 . -1) (undo-tree-id24579 . -1) (undo-tree-id24580 . -1) (undo-tree-id24581 . -1) (undo-tree-id24582 . -1) (undo-tree-id24583 . -1) (undo-tree-id24584 . -1) (undo-tree-id24585 . -1) (undo-tree-id24586 . -1) (undo-tree-id24587 . -1) (undo-tree-id24588 . -1) (undo-tree-id24589 . -1) (undo-tree-id24590 . -1) (undo-tree-id24591 . -1) (undo-tree-id24592 . -1) (undo-tree-id24593 . -1) (undo-tree-id24594 . -1) (undo-tree-id24595 . -1) (undo-tree-id24596 . -1) (undo-tree-id24597 . -1) (undo-tree-id24598 . -1) (undo-tree-id24599 . -1) (undo-tree-id24600 . -1) (undo-tree-id24601 . -1) (undo-tree-id24602 . -1) (undo-tree-id24603 . -1) (undo-tree-id24604 . -1) (undo-tree-id24605 . -1) (undo-tree-id24606 . -1) (undo-tree-id24607 . -1) (undo-tree-id24608 . -1) (undo-tree-id24609 . -1) (undo-tree-id24610 . -1) (undo-tree-id24611 . -1) (undo-tree-id24612 . -1) (undo-tree-id24613 . -1) (undo-tree-id24614 . -1) (undo-tree-id24615 . -1) (undo-tree-id24616 . -1) (undo-tree-id24617 . -1) (undo-tree-id24618 . -1) (undo-tree-id24619 . -1) (undo-tree-id24620 . -1) (undo-tree-id24621 . -1) (undo-tree-id24622 . -1) (undo-tree-id24623 . -1) (undo-tree-id24624 . -1) (undo-tree-id24625 . -1) (undo-tree-id24626 . -1) (undo-tree-id24627 . -1) (undo-tree-id24628 . -1) (undo-tree-id24629 . -1) (undo-tree-id24630 . -1) (undo-tree-id24631 . -1) (undo-tree-id24632 . -1) (undo-tree-id24633 . -1) (undo-tree-id24634 . -1) (undo-tree-id24635 . -1) (undo-tree-id24636 . -1) (undo-tree-id24637 . -1) (undo-tree-id24638 . -1) (undo-tree-id24639 . -1) (undo-tree-id24640 . -1) (undo-tree-id24641 . -1) (undo-tree-id24642 . -1) (undo-tree-id24643 . -1) (undo-tree-id24644 . -1) (undo-tree-id24645 . -1) (undo-tree-id24646 . -1) (undo-tree-id24647 . -1) (undo-tree-id24648 . -1) (undo-tree-id24649 . -1) (undo-tree-id24650 . -1) (undo-tree-id24651 . -1) (undo-tree-id24652 . -1) (undo-tree-id24653 . -1) (undo-tree-id24654 . -1) (undo-tree-id24655 . -1) (undo-tree-id24656 . -1) (undo-tree-id24657 . -1) (undo-tree-id24658 . -1) (undo-tree-id24659 . -1) (undo-tree-id24660 . -1) (undo-tree-id24661 . -1) (undo-tree-id24662 . -1) (undo-tree-id24663 . -1) (undo-tree-id24664 . -1) (undo-tree-id24665 . -1) (undo-tree-id24666 . -1) (undo-tree-id24667 . -1) (undo-tree-id24668 . -1) (undo-tree-id24669 . -1) (undo-tree-id24670 . -1) (undo-tree-id24671 . -1) (undo-tree-id24672 . -1) (undo-tree-id24673 . -1) (undo-tree-id24674 . -1) (undo-tree-id24675 . -1) (undo-tree-id24676 . -1) (undo-tree-id24677 . -1) (undo-tree-id24678 . -1) (undo-tree-id24679 . -1) (undo-tree-id24680 . -1) (undo-tree-id24681 . -1) (undo-tree-id24682 . -1) (undo-tree-id24683 . -1) (undo-tree-id24684 . -1) (undo-tree-id24685 . -1) (undo-tree-id24686 . -1) (undo-tree-id24687 . -1) (undo-tree-id24688 . -1) (undo-tree-id24689 . -1) (undo-tree-id24690 . -1) (undo-tree-id24691 . -1) (undo-tree-id24692 . -1) (undo-tree-id24693 . -1) (undo-tree-id24694 . -1) (undo-tree-id24695 . -1) (undo-tree-id24696 . -1) (undo-tree-id24697 . -1) (undo-tree-id24698 . -1) (undo-tree-id24699 . -1) (undo-tree-id24700 . -1) (undo-tree-id24701 . -1) (undo-tree-id24702 . -1) (undo-tree-id24703 . -1) (undo-tree-id24704 . -1) (undo-tree-id24705 . -1) (undo-tree-id24706 . -1) (undo-tree-id24707 . -1) (undo-tree-id24708 . -1) (undo-tree-id24709 . -1) (undo-tree-id24710 . -1) (undo-tree-id24711 . -1) (undo-tree-id24712 . -1) (undo-tree-id24713 . -1) (undo-tree-id24714 . -1) (undo-tree-id24715 . -1) (undo-tree-id24716 . -1) (undo-tree-id24717 . -1) (undo-tree-id24718 . -1) (undo-tree-id24719 . -1) (undo-tree-id24720 . -1) (undo-tree-id24721 . -1) (undo-tree-id24722 . -1) (undo-tree-id24723 . -1) (undo-tree-id24724 . -1) (undo-tree-id24725 . -1) (undo-tree-id24726 . -1) (undo-tree-id24727 . -1) (undo-tree-id24728 . -1) (undo-tree-id24729 . -1) (undo-tree-id24730 . -1) (undo-tree-id24731 . -1) (undo-tree-id24732 . -1) (undo-tree-id24733 . -1) (undo-tree-id24734 . -1) (undo-tree-id24735 . -1) (undo-tree-id24736 . -1) (undo-tree-id24737 . -1) (undo-tree-id24738 . -1) (undo-tree-id24739 . -1) (undo-tree-id24740 . -1) (undo-tree-id24741 . -1) (undo-tree-id24742 . -1) (undo-tree-id24743 . -1) (undo-tree-id24744 . -1) (undo-tree-id24745 . -1) (undo-tree-id24746 . -1) (undo-tree-id24747 . -1) (undo-tree-id24748 . -1) (undo-tree-id24749 . -1) (undo-tree-id24750 . -1) (undo-tree-id24751 . -1) (undo-tree-id24752 . -1) (undo-tree-id24753 . -1) (undo-tree-id24754 . -1) (undo-tree-id24755 . -1) (undo-tree-id24756 . -1) (undo-tree-id24757 . -1) (undo-tree-id24758 . -1) (undo-tree-id24759 . -1) (undo-tree-id24760 . -1) (undo-tree-id24761 . -1) (undo-tree-id24762 . -1) (undo-tree-id24763 . -1) (undo-tree-id24764 . -1) (undo-tree-id24765 . -1) (undo-tree-id24766 . -1) (undo-tree-id24767 . -1) (undo-tree-id24768 . -1) (undo-tree-id24769 . -1) (undo-tree-id24770 . -1) (undo-tree-id24771 . -1) (undo-tree-id24772 . -1) (undo-tree-id24773 . -1) (undo-tree-id24774 . -1) (#(" " 0 1 (fontified t)) . -66951) (undo-tree-id24775 . -1) (undo-tree-id24776 . -1) (undo-tree-id24777 . -1) (undo-tree-id24778 . -1) (undo-tree-id24779 . -1) (undo-tree-id24780 . -1) (undo-tree-id24781 . -1) (undo-tree-id24782 . -1) (undo-tree-id24783 . -1) (undo-tree-id24784 . -1) (undo-tree-id24785 . -1) (undo-tree-id24786 . -1) (undo-tree-id24787 . -1) (undo-tree-id24788 . -1) (undo-tree-id24789 . -1) (undo-tree-id24790 . -1) (undo-tree-id24791 . -1) (undo-tree-id24792 . -1) (undo-tree-id24793 . -1) (undo-tree-id24794 . -1) (undo-tree-id24795 . -1) (undo-tree-id24796 . -1) (undo-tree-id24797 . -1) (undo-tree-id24798 . -1) (undo-tree-id24799 . -1) (undo-tree-id24800 . -1) (undo-tree-id24801 . -1) (undo-tree-id24802 . -1) (undo-tree-id24803 . -1) (undo-tree-id24804 . -1) (undo-tree-id24805 . -1) (undo-tree-id24806 . -1) (undo-tree-id24807 . -1) (undo-tree-id24808 . -1) (undo-tree-id24809 . -1) (undo-tree-id24810 . -1) (undo-tree-id24811 . -1) (undo-tree-id24812 . -1) (undo-tree-id24813 . -1) (undo-tree-id24814 . -1) (undo-tree-id24815 . -1) (undo-tree-id24816 . -1) (undo-tree-id24817 . -1) (undo-tree-id24818 . -1) (undo-tree-id24819 . -1) (undo-tree-id24820 . -1) (undo-tree-id24821 . -1) (undo-tree-id24822 . -1) (undo-tree-id24823 . -1) (undo-tree-id24824 . -1) (undo-tree-id24825 . -1) (undo-tree-id24826 . -1) (undo-tree-id24827 . -1) (undo-tree-id24828 . -1) (undo-tree-id24829 . -1) (undo-tree-id24830 . -1) (undo-tree-id24831 . -1) (undo-tree-id24832 . -1) (undo-tree-id24833 . -1) (undo-tree-id24834 . -1) (undo-tree-id24835 . -1) (undo-tree-id24836 . -1) (undo-tree-id24837 . -1) (undo-tree-id24838 . -1) (undo-tree-id24839 . -1) (undo-tree-id24840 . -1) (undo-tree-id24841 . -1) (undo-tree-id24842 . -1) (undo-tree-id24843 . -1) (undo-tree-id24844 . -1) (undo-tree-id24845 . -1) (undo-tree-id24846 . -1) (undo-tree-id24847 . -1) (undo-tree-id24848 . -1) (undo-tree-id24849 . -1) (undo-tree-id24850 . -1) (undo-tree-id24851 . -1) (undo-tree-id24852 . -1) (undo-tree-id24853 . -1) (undo-tree-id24854 . -1) (undo-tree-id24855 . -1) (undo-tree-id24856 . -1) (undo-tree-id24857 . -1) (undo-tree-id24858 . -1) (undo-tree-id24859 . -1) (undo-tree-id24860 . -1) (undo-tree-id24861 . -1) (undo-tree-id24862 . -1) (undo-tree-id24863 . -1) (undo-tree-id24864 . -1) (undo-tree-id24865 . -1) (undo-tree-id24866 . -1) (undo-tree-id24867 . -1) (undo-tree-id24868 . -1) (undo-tree-id24869 . -1) (undo-tree-id24870 . -1) (undo-tree-id24871 . -1) (undo-tree-id24872 . -1) (undo-tree-id24873 . -1) (undo-tree-id24874 . -1) (undo-tree-id24875 . -1) (undo-tree-id24876 . -1) (undo-tree-id24877 . -1) (undo-tree-id24878 . -1) (undo-tree-id24879 . -1) (undo-tree-id24880 . -1) (undo-tree-id24881 . -1) (undo-tree-id24882 . -1) (undo-tree-id24883 . -1) (undo-tree-id24884 . -1) (undo-tree-id24885 . -1) (undo-tree-id24886 . -1) (undo-tree-id24887 . -1) (undo-tree-id24888 . -1) (undo-tree-id24889 . -1) (undo-tree-id24890 . -1) (undo-tree-id24891 . -1) (undo-tree-id24892 . -1) (undo-tree-id24893 . -1) (undo-tree-id24894 . -1) (undo-tree-id24895 . -1) (undo-tree-id24896 . -1) (undo-tree-id24897 . -1) (undo-tree-id24898 . -1) (undo-tree-id24899 . -1) (undo-tree-id24900 . -1) (undo-tree-id24901 . -1) (undo-tree-id24902 . -1) (undo-tree-id24903 . -1) (undo-tree-id24904 . -1) (undo-tree-id24905 . -1) (undo-tree-id24906 . -1) (undo-tree-id24907 . -1) (undo-tree-id24908 . -1) (undo-tree-id24909 . -1) (undo-tree-id24910 . -1) (undo-tree-id24911 . -1) (undo-tree-id24912 . -1) (undo-tree-id24913 . -1) (undo-tree-id24914 . -1) (undo-tree-id24915 . -1) (undo-tree-id24916 . -1) (undo-tree-id24917 . -1) (undo-tree-id24918 . -1) (undo-tree-id24919 . -1) (undo-tree-id24920 . -1) (undo-tree-id24921 . -1) (undo-tree-id24922 . -1) (undo-tree-id24923 . -1) (undo-tree-id24924 . -1) (undo-tree-id24925 . -1) (undo-tree-id24926 . -1) (undo-tree-id24927 . -1) (undo-tree-id24928 . -1) (undo-tree-id24929 . -1) (undo-tree-id24930 . -1) (undo-tree-id24931 . -1) (undo-tree-id24932 . -1) (undo-tree-id24933 . -1) (undo-tree-id24934 . -1) (undo-tree-id24935 . -1) (undo-tree-id24936 . -1) (undo-tree-id24937 . -1) (undo-tree-id24938 . -1) (undo-tree-id24939 . -1) (undo-tree-id24940 . -1) (undo-tree-id24941 . -1) (undo-tree-id24942 . -1) (undo-tree-id24943 . -1) (undo-tree-id24944 . -1) (undo-tree-id24945 . -1) (undo-tree-id24946 . -1) (undo-tree-id24947 . -1) (undo-tree-id24948 . -1) (undo-tree-id24949 . -1) (undo-tree-id24950 . -1) (undo-tree-id24951 . -1) (undo-tree-id24952 . -1) (undo-tree-id24953 . -1) (undo-tree-id24954 . -1) (undo-tree-id24955 . -1) (undo-tree-id24956 . -1) (undo-tree-id24957 . -1) (undo-tree-id24958 . -1) (undo-tree-id24959 . -1) (undo-tree-id24960 . -1) (undo-tree-id24961 . -1) (undo-tree-id24962 . -1) (undo-tree-id24963 . -1) (undo-tree-id24964 . -1) (undo-tree-id24965 . -1) (undo-tree-id24966 . -1) (undo-tree-id24967 . -1) (undo-tree-id24968 . -1) (undo-tree-id24969 . -1) (undo-tree-id24970 . -1) (undo-tree-id24971 . -1) (undo-tree-id24972 . -1) (undo-tree-id24973 . -1) (undo-tree-id24974 . -1) (undo-tree-id24975 . -1) (undo-tree-id24976 . -1) (undo-tree-id24977 . -1) (undo-tree-id24978 . -1) (undo-tree-id24979 . -1) (undo-tree-id24980 . -1) (undo-tree-id24981 . -1) (undo-tree-id24982 . -1) (undo-tree-id24983 . -1) (undo-tree-id24984 . -1) (undo-tree-id24985 . -1) (undo-tree-id24986 . -1) (undo-tree-id24987 . -1) (undo-tree-id24988 . -1) (undo-tree-id24989 . -1) (undo-tree-id24990 . -1) (undo-tree-id24991 . -1) (undo-tree-id24992 . -1) (undo-tree-id24993 . -1) (undo-tree-id24994 . -1) (undo-tree-id24995 . -1) (undo-tree-id24996 . -1) (undo-tree-id24997 . -1) (undo-tree-id24998 . -1) (undo-tree-id24999 . -1) (undo-tree-id25000 . -1) (undo-tree-id25001 . -1) (undo-tree-id25002 . -1) (undo-tree-id25003 . -1) (undo-tree-id25004 . -1) (undo-tree-id25005 . -1) (undo-tree-id25006 . -1) (undo-tree-id25007 . -1) (undo-tree-id25008 . -1) (undo-tree-id25009 . -1) (undo-tree-id25010 . -1) (undo-tree-id25011 . -1) (undo-tree-id25012 . -1) (undo-tree-id25013 . -1) (undo-tree-id25014 . -1) (undo-tree-id25015 . -1) (undo-tree-id25016 . -1) (undo-tree-id25017 . -1) (undo-tree-id25018 . -1) (undo-tree-id25019 . -1) (undo-tree-id25020 . -1) (undo-tree-id25021 . -1) (undo-tree-id25022 . -1) (undo-tree-id25023 . -1) (undo-tree-id25024 . -1) (undo-tree-id25025 . -1) (undo-tree-id25026 . -1) (undo-tree-id25027 . -1) (undo-tree-id25028 . -1) (undo-tree-id25029 . -1) (undo-tree-id25030 . -1) (undo-tree-id25031 . -1) (undo-tree-id25032 . -1) (undo-tree-id25033 . -1) (undo-tree-id25034 . -1) (undo-tree-id25035 . -1) (undo-tree-id25036 . -1) (undo-tree-id25037 . -1) (undo-tree-id25038 . -1) (undo-tree-id25039 . -1) (undo-tree-id25040 . -1) (undo-tree-id25041 . -1) (undo-tree-id25042 . -1) (undo-tree-id25043 . -1) (undo-tree-id25044 . -1) (undo-tree-id25045 . -1) (undo-tree-id25046 . -1) (undo-tree-id25047 . -1) (undo-tree-id25048 . -1) (undo-tree-id25049 . -1) (undo-tree-id25050 . -1) (undo-tree-id25051 . -1) (undo-tree-id25052 . -1) (undo-tree-id25053 . -1) (undo-tree-id25054 . -1) (undo-tree-id25055 . -1) (undo-tree-id25056 . -1) (undo-tree-id25057 . -1) (undo-tree-id25058 . -1) (undo-tree-id25059 . -1) (undo-tree-id25060 . -1) (undo-tree-id25061 . -1) (undo-tree-id25062 . -1) (undo-tree-id25063 . -1) (undo-tree-id25064 . -1) (undo-tree-id25065 . -1) (undo-tree-id25066 . -1) (undo-tree-id25067 . -1) (undo-tree-id25068 . -1) (undo-tree-id25069 . -1) (undo-tree-id25070 . -1) (undo-tree-id25071 . -1) (undo-tree-id25072 . -1) (undo-tree-id25073 . -1) (undo-tree-id25074 . -1) (undo-tree-id25075 . -1) (undo-tree-id25076 . -1) (undo-tree-id25077 . -1) (undo-tree-id25078 . -1) (undo-tree-id25079 . -1) (undo-tree-id25080 . -1) (undo-tree-id25081 . -1) (undo-tree-id25082 . -1) (undo-tree-id25083 . -1) (undo-tree-id25084 . -1) (undo-tree-id25085 . -1) (undo-tree-id25086 . -1) (undo-tree-id25087 . -1) (undo-tree-id25088 . -1) (undo-tree-id25089 . -1) (undo-tree-id25090 . -1) (undo-tree-id25091 . -1) (undo-tree-id25092 . -1) (undo-tree-id25093 . -1) (undo-tree-id25094 . -1) (undo-tree-id25095 . -1) (undo-tree-id25096 . -1) (undo-tree-id25097 . -1) (undo-tree-id25098 . -1) (undo-tree-id25099 . -1) (undo-tree-id25100 . -1) (undo-tree-id25101 . -1) (undo-tree-id25102 . -1) (undo-tree-id25103 . -1) (undo-tree-id25104 . -1) (undo-tree-id25105 . -1) (undo-tree-id25106 . -1) (undo-tree-id25107 . -1) (undo-tree-id25108 . -1) (undo-tree-id25109 . -1) (undo-tree-id25110 . -1) (undo-tree-id25111 . -1) (undo-tree-id25112 . -1) (undo-tree-id25113 . -1) (undo-tree-id25114 . -1) (undo-tree-id25115 . -1) (undo-tree-id25116 . -1) (undo-tree-id25117 . -1) (undo-tree-id25118 . -1) (undo-tree-id25119 . -1) (undo-tree-id25120 . -1) (undo-tree-id25121 . -1) (undo-tree-id25122 . -1) (undo-tree-id25123 . -1) (undo-tree-id25124 . -1) (undo-tree-id25125 . -1) (undo-tree-id25126 . -1) (undo-tree-id25127 . -1) (undo-tree-id25128 . -1) (undo-tree-id25129 . -1) (undo-tree-id25130 . -1) (undo-tree-id25131 . -1) (undo-tree-id25132 . -1) (undo-tree-id25133 . -1) (undo-tree-id25134 . -1) (undo-tree-id25135 . -1) (undo-tree-id25136 . -1) (undo-tree-id25137 . -1) (undo-tree-id25138 . -1) (undo-tree-id25139 . -1) (undo-tree-id25140 . -1) (undo-tree-id25141 . -1) (undo-tree-id25142 . -1) (undo-tree-id25143 . -1) (undo-tree-id25144 . -1) (undo-tree-id25145 . -1) (undo-tree-id25146 . -1) (undo-tree-id25147 . -1) (undo-tree-id25148 . -1) (undo-tree-id25149 . -1) (undo-tree-id25150 . -1) (undo-tree-id25151 . -1) (undo-tree-id25152 . -1) (undo-tree-id25153 . -1) (undo-tree-id25154 . -1) (undo-tree-id25155 . -1) (undo-tree-id25156 . -1) (undo-tree-id25157 . -1) (undo-tree-id25158 . -1) (undo-tree-id25159 . -1) (undo-tree-id25160 . -1) (undo-tree-id25161 . -1) (undo-tree-id25162 . -1) (undo-tree-id25163 . -1) (undo-tree-id25164 . -1) (undo-tree-id25165 . -1) (undo-tree-id25166 . -1) (undo-tree-id25167 . -1) (undo-tree-id25168 . -1) (undo-tree-id25169 . -1) (undo-tree-id25170 . -1) (undo-tree-id25171 . -1) (undo-tree-id25172 . -1) (undo-tree-id25173 . -1) (undo-tree-id25174 . -1) (undo-tree-id25175 . -1) (undo-tree-id25176 . -1) (undo-tree-id25177 . -1) (undo-tree-id25178 . -1) (undo-tree-id25179 . -1) (undo-tree-id25180 . -1) (undo-tree-id25181 . -1) (undo-tree-id25182 . -1) (undo-tree-id25183 . -1) (undo-tree-id25184 . -1) (undo-tree-id25185 . -1) (undo-tree-id25186 . -1) (undo-tree-id25187 . -1) (undo-tree-id25188 . -1) (undo-tree-id25189 . -1) (undo-tree-id25190 . -1) (undo-tree-id25191 . -1) (undo-tree-id25192 . -1) (undo-tree-id25193 . -1) (undo-tree-id25194 . -1) (undo-tree-id25195 . -1) (undo-tree-id25196 . -1) (undo-tree-id25197 . -1) (undo-tree-id25198 . -1) (undo-tree-id25199 . -1) (undo-tree-id25200 . -1) (undo-tree-id25201 . -1) (undo-tree-id25202 . -1) (undo-tree-id25203 . -1) (undo-tree-id25204 . -1) (undo-tree-id25205 . -1) (undo-tree-id25206 . -1) (undo-tree-id25207 . -1) (undo-tree-id25208 . -1) (undo-tree-id25209 . -1) (undo-tree-id25210 . -1) (undo-tree-id25211 . -1) (undo-tree-id25212 . -1) (undo-tree-id25213 . -1) (undo-tree-id25214 . -1) (undo-tree-id25215 . -1) (undo-tree-id25216 . -1) (undo-tree-id25217 . -1) (undo-tree-id25218 . -1) (undo-tree-id25219 . -1) (undo-tree-id25220 . -1) (undo-tree-id25221 . -1) (undo-tree-id25222 . -1) (undo-tree-id25223 . -1) (undo-tree-id25224 . -1) (undo-tree-id25225 . -1) (undo-tree-id25226 . -1) (undo-tree-id25227 . -1) (undo-tree-id25228 . -1) (undo-tree-id25229 . -1) (undo-tree-id25230 . -1) (undo-tree-id25231 . -1) (undo-tree-id25232 . -1) (undo-tree-id25233 . -1) (undo-tree-id25234 . -1) (undo-tree-id25235 . -1) (undo-tree-id25236 . -1) (undo-tree-id25237 . -1) (undo-tree-id25238 . -1) (undo-tree-id25239 . -1) (undo-tree-id25240 . -1) (undo-tree-id25241 . -1) (undo-tree-id25242 . -1) (undo-tree-id25243 . -1) (undo-tree-id25244 . -1) (undo-tree-id25245 . -1) (undo-tree-id25246 . -1) (undo-tree-id25247 . -1) (undo-tree-id25248 . -1) (undo-tree-id25249 . -1) (undo-tree-id25250 . -1) (undo-tree-id25251 . -1) (undo-tree-id25252 . -1) (undo-tree-id25253 . -1) (undo-tree-id25254 . -1) (undo-tree-id25255 . -1) (undo-tree-id25256 . -1) (undo-tree-id25257 . -1) (undo-tree-id25258 . -1) (undo-tree-id25259 . -1) (undo-tree-id25260 . -1) (undo-tree-id25261 . -1) (undo-tree-id25262 . -1) (undo-tree-id25263 . -1) (undo-tree-id25264 . -1) (undo-tree-id25265 . -1) (undo-tree-id25266 . -1) (undo-tree-id25267 . -1) (undo-tree-id25268 . -1) (undo-tree-id25269 . -1) (undo-tree-id25270 . -1) (undo-tree-id25271 . -1) (undo-tree-id25272 . -1) (undo-tree-id25273 . -1) (undo-tree-id25274 . -1) (undo-tree-id25275 . -1) (undo-tree-id25276 . -1) (undo-tree-id25277 . -1) (undo-tree-id25278 . -1) (undo-tree-id25279 . -1) (undo-tree-id25280 . -1) (undo-tree-id25281 . -1) (undo-tree-id25282 . -1) (undo-tree-id25283 . -1) (undo-tree-id25284 . -1) (undo-tree-id25285 . -1) (undo-tree-id25286 . -1) (undo-tree-id25287 . -1) (undo-tree-id25288 . -1) (undo-tree-id25289 . -1) (undo-tree-id25290 . -1) (undo-tree-id25291 . -1) (undo-tree-id25292 . -1) (undo-tree-id25293 . -1) (undo-tree-id25294 . -1) (undo-tree-id25295 . -1) (undo-tree-id25296 . -1) (undo-tree-id25297 . -1) (undo-tree-id25298 . -1) (undo-tree-id25299 . -1) (undo-tree-id25300 . -1) (undo-tree-id25301 . -1) (undo-tree-id25302 . -1) (undo-tree-id25303 . -1) (undo-tree-id25304 . -1) (undo-tree-id25305 . -1) (undo-tree-id25306 . -1) (undo-tree-id25307 . -1) (undo-tree-id25308 . -1) (undo-tree-id25309 . -1) (undo-tree-id25310 . -1) (undo-tree-id25311 . -1) (undo-tree-id25312 . -1) (undo-tree-id25313 . -1) (undo-tree-id25314 . -1) (undo-tree-id25315 . -1) (undo-tree-id25316 . -1) (undo-tree-id25317 . -1) (undo-tree-id25318 . -1) (undo-tree-id25319 . -1) (undo-tree-id25320 . -1) (undo-tree-id25321 . -1) (undo-tree-id25322 . -1) (undo-tree-id25323 . -1) (undo-tree-id25324 . -1) (undo-tree-id25325 . -1) (undo-tree-id25326 . -1) (undo-tree-id25327 . -1) (undo-tree-id25328 . -1) (undo-tree-id25329 . -1) (undo-tree-id25330 . -1) (undo-tree-id25331 . -1) (undo-tree-id25332 . -1) (undo-tree-id25333 . -1) (undo-tree-id25334 . -1) (undo-tree-id25335 . -1) (undo-tree-id25336 . -1) (undo-tree-id25337 . -1) (undo-tree-id25338 . -1) (undo-tree-id25339 . -1) (undo-tree-id25340 . -1) (undo-tree-id25341 . -1) (undo-tree-id25342 . -1) (undo-tree-id25343 . -1) (undo-tree-id25344 . -1) (undo-tree-id25345 . -1) (undo-tree-id25346 . -1) (undo-tree-id25347 . -1) (undo-tree-id25348 . -1) (undo-tree-id25349 . -1) (undo-tree-id25350 . -1) (undo-tree-id25351 . -1) (undo-tree-id25352 . -1) (undo-tree-id25353 . -1) (undo-tree-id25354 . -1) (undo-tree-id25355 . -1) (undo-tree-id25356 . -1) (undo-tree-id25357 . -1) (undo-tree-id25358 . -1) (undo-tree-id25359 . -1) (undo-tree-id25360 . -1) (undo-tree-id25361 . -1) (undo-tree-id25362 . -1) (#("w" 0 1 (fontified t)) . -66952) (undo-tree-id25363 . -1) (undo-tree-id25364 . -1) (undo-tree-id25365 . -1) (undo-tree-id25366 . -1) (undo-tree-id25367 . -1) (undo-tree-id25368 . -1) (undo-tree-id25369 . -1) (undo-tree-id25370 . -1) (undo-tree-id25371 . -1) (undo-tree-id25372 . -1) (undo-tree-id25373 . -1) (undo-tree-id25374 . -1) (undo-tree-id25375 . -1) (undo-tree-id25376 . -1) (undo-tree-id25377 . -1) (undo-tree-id25378 . -1) (undo-tree-id25379 . -1) (undo-tree-id25380 . -1) (undo-tree-id25381 . -1) (undo-tree-id25382 . -1) (undo-tree-id25383 . -1) (undo-tree-id25384 . -1) (undo-tree-id25385 . -1) (undo-tree-id25386 . -1) (undo-tree-id25387 . -1) (undo-tree-id25388 . -1) (undo-tree-id25389 . -1) (undo-tree-id25390 . -1) (undo-tree-id25391 . -1) (undo-tree-id25392 . -1) (undo-tree-id25393 . -1) (undo-tree-id25394 . -1) (undo-tree-id25395 . -1) (undo-tree-id25396 . -1) (undo-tree-id25397 . -1) (undo-tree-id25398 . -1) (undo-tree-id25399 . -1) (undo-tree-id25400 . -1) (undo-tree-id25401 . -1) (undo-tree-id25402 . -1) (undo-tree-id25403 . -1) (undo-tree-id25404 . -1) (undo-tree-id25405 . -1) (undo-tree-id25406 . -1) (undo-tree-id25407 . -1) (undo-tree-id25408 . -1) (undo-tree-id25409 . -1) (undo-tree-id25410 . -1) (undo-tree-id25411 . -1) (undo-tree-id25412 . -1) (undo-tree-id25413 . -1) (undo-tree-id25414 . -1) (undo-tree-id25415 . -1) (undo-tree-id25416 . -1) (undo-tree-id25417 . -1) (undo-tree-id25418 . -1) (undo-tree-id25419 . -1) (undo-tree-id25420 . -1) (undo-tree-id25421 . -1) (undo-tree-id25422 . -1) (undo-tree-id25423 . -1) (undo-tree-id25424 . -1) (undo-tree-id25425 . -1) (undo-tree-id25426 . -1) (undo-tree-id25427 . -1) (undo-tree-id25428 . -1) (undo-tree-id25429 . -1) (undo-tree-id25430 . -1) (undo-tree-id25431 . -1) (undo-tree-id25432 . -1) (undo-tree-id25433 . -1) (undo-tree-id25434 . -1) (undo-tree-id25435 . -1) (undo-tree-id25436 . -1) (undo-tree-id25437 . -1) (undo-tree-id25438 . -1) (undo-tree-id25439 . -1) (undo-tree-id25440 . -1) (undo-tree-id25441 . -1) (undo-tree-id25442 . -1) (undo-tree-id25443 . -1) (undo-tree-id25444 . -1) (undo-tree-id25445 . -1) (undo-tree-id25446 . -1) (undo-tree-id25447 . -1) (undo-tree-id25448 . -1) (undo-tree-id25449 . -1) (undo-tree-id25450 . -1) (undo-tree-id25451 . -1) (undo-tree-id25452 . -1) (undo-tree-id25453 . -1) (undo-tree-id25454 . -1) (undo-tree-id25455 . -1) (undo-tree-id25456 . -1) (undo-tree-id25457 . -1) (undo-tree-id25458 . -1) (undo-tree-id25459 . -1) (undo-tree-id25460 . -1) (undo-tree-id25461 . -1) (undo-tree-id25462 . -1) (undo-tree-id25463 . -1) (undo-tree-id25464 . -1) (undo-tree-id25465 . -1) (undo-tree-id25466 . -1) (undo-tree-id25467 . -1) (undo-tree-id25468 . -1) (undo-tree-id25469 . -1) (undo-tree-id25470 . -1) (undo-tree-id25471 . -1) (undo-tree-id25472 . -1) (undo-tree-id25473 . -1) (undo-tree-id25474 . -1) (undo-tree-id25475 . -1) (undo-tree-id25476 . -1) (undo-tree-id25477 . -1) (undo-tree-id25478 . -1) (undo-tree-id25479 . -1) (undo-tree-id25480 . -1) (undo-tree-id25481 . -1) (undo-tree-id25482 . -1) (undo-tree-id25483 . -1) (undo-tree-id25484 . -1) (undo-tree-id25485 . -1) (undo-tree-id25486 . -1) (undo-tree-id25487 . -1) (undo-tree-id25488 . -1) (undo-tree-id25489 . -1) (undo-tree-id25490 . -1) (undo-tree-id25491 . -1) (undo-tree-id25492 . -1) (undo-tree-id25493 . -1) (undo-tree-id25494 . -1) (undo-tree-id25495 . -1) (undo-tree-id25496 . -1) (undo-tree-id25497 . -1) (undo-tree-id25498 . -1) (undo-tree-id25499 . -1) (undo-tree-id25500 . -1) (undo-tree-id25501 . -1) (undo-tree-id25502 . -1) (undo-tree-id25503 . -1) (undo-tree-id25504 . -1) (undo-tree-id25505 . -1) (undo-tree-id25506 . -1) (undo-tree-id25507 . -1) (undo-tree-id25508 . -1) (undo-tree-id25509 . -1) (undo-tree-id25510 . -1) (undo-tree-id25511 . -1) (undo-tree-id25512 . -1) (undo-tree-id25513 . -1) (undo-tree-id25514 . -1) (undo-tree-id25515 . -1) (undo-tree-id25516 . -1) (undo-tree-id25517 . -1) (undo-tree-id25518 . -1) (undo-tree-id25519 . -1) (undo-tree-id25520 . -1) (undo-tree-id25521 . -1) (undo-tree-id25522 . -1) (undo-tree-id25523 . -1) (undo-tree-id25524 . -1) (undo-tree-id25525 . -1) (undo-tree-id25526 . -1) (undo-tree-id25527 . -1) (undo-tree-id25528 . -1) (undo-tree-id25529 . -1) (undo-tree-id25530 . -1) (undo-tree-id25531 . -1) (undo-tree-id25532 . -1) (undo-tree-id25533 . -1) (undo-tree-id25534 . -1) (undo-tree-id25535 . -1) (undo-tree-id25536 . -1) (undo-tree-id25537 . -1) (undo-tree-id25538 . -1) (undo-tree-id25539 . -1) (undo-tree-id25540 . -1) (undo-tree-id25541 . -1) (undo-tree-id25542 . -1) (undo-tree-id25543 . -1) (undo-tree-id25544 . -1) (undo-tree-id25545 . -1) (undo-tree-id25546 . -1) (undo-tree-id25547 . -1) (undo-tree-id25548 . -1) (undo-tree-id25549 . -1) (undo-tree-id25550 . -1) (undo-tree-id25551 . -1) (undo-tree-id25552 . -1) (undo-tree-id25553 . -1) (undo-tree-id25554 . -1) (undo-tree-id25555 . -1) (undo-tree-id25556 . -1) (undo-tree-id25557 . -1) (undo-tree-id25558 . -1) (undo-tree-id25559 . -1) (undo-tree-id25560 . -1) (undo-tree-id25561 . -1) (undo-tree-id25562 . -1) (undo-tree-id25563 . -1) (undo-tree-id25564 . -1) (undo-tree-id25565 . -1) (undo-tree-id25566 . -1) (undo-tree-id25567 . -1) (undo-tree-id25568 . -1) (undo-tree-id25569 . -1) (undo-tree-id25570 . -1) (undo-tree-id25571 . -1) (undo-tree-id25572 . -1) (undo-tree-id25573 . -1) (undo-tree-id25574 . -1) (undo-tree-id25575 . -1) (undo-tree-id25576 . -1) (undo-tree-id25577 . -1) (undo-tree-id25578 . -1) (undo-tree-id25579 . -1) (undo-tree-id25580 . -1) (undo-tree-id25581 . -1) (undo-tree-id25582 . -1) (undo-tree-id25583 . -1) (undo-tree-id25584 . -1) (undo-tree-id25585 . -1) (undo-tree-id25586 . -1) (undo-tree-id25587 . -1) (undo-tree-id25588 . -1) (undo-tree-id25589 . -1) (undo-tree-id25590 . -1) (undo-tree-id25591 . -1) (undo-tree-id25592 . -1) (undo-tree-id25593 . -1) (undo-tree-id25594 . -1) (undo-tree-id25595 . -1) (undo-tree-id25596 . -1) (undo-tree-id25597 . -1) (undo-tree-id25598 . -1) (undo-tree-id25599 . -1) (undo-tree-id25600 . -1) (undo-tree-id25601 . -1) (undo-tree-id25602 . -1) (undo-tree-id25603 . -1) (undo-tree-id25604 . -1) (undo-tree-id25605 . -1) (undo-tree-id25606 . -1) (undo-tree-id25607 . -1) (undo-tree-id25608 . -1) (undo-tree-id25609 . -1) (undo-tree-id25610 . -1) (undo-tree-id25611 . -1) (undo-tree-id25612 . -1) (undo-tree-id25613 . -1) (undo-tree-id25614 . -1) (undo-tree-id25615 . -1) (undo-tree-id25616 . -1) (undo-tree-id25617 . -1) (undo-tree-id25618 . -1) (undo-tree-id25619 . -1) (undo-tree-id25620 . -1) (undo-tree-id25621 . -1) (undo-tree-id25622 . -1) (undo-tree-id25623 . -1) (undo-tree-id25624 . -1) (undo-tree-id25625 . -1) (undo-tree-id25626 . -1) (undo-tree-id25627 . -1) (undo-tree-id25628 . -1) (undo-tree-id25629 . -1) (undo-tree-id25630 . -1) (undo-tree-id25631 . -1) (undo-tree-id25632 . -1) (undo-tree-id25633 . -1) (undo-tree-id25634 . -1) (undo-tree-id25635 . -1) (undo-tree-id25636 . -1) (undo-tree-id25637 . -1) (undo-tree-id25638 . -1) (undo-tree-id25639 . -1) (undo-tree-id25640 . -1) (undo-tree-id25641 . -1) (undo-tree-id25642 . -1) (undo-tree-id25643 . -1) (undo-tree-id25644 . -1) (undo-tree-id25645 . -1) (undo-tree-id25646 . -1) (undo-tree-id25647 . -1) (undo-tree-id25648 . -1) (undo-tree-id25649 . -1) (undo-tree-id25650 . -1) (undo-tree-id25651 . -1) (undo-tree-id25652 . -1) (undo-tree-id25653 . -1) (undo-tree-id25654 . -1) (undo-tree-id25655 . -1) (undo-tree-id25656 . -1) (undo-tree-id25657 . -1) (undo-tree-id25658 . -1) (undo-tree-id25659 . -1) (undo-tree-id25660 . -1) (undo-tree-id25661 . -1) (undo-tree-id25662 . -1) (undo-tree-id25663 . -1) (undo-tree-id25664 . -1) (undo-tree-id25665 . -1) (undo-tree-id25666 . -1) (undo-tree-id25667 . -1) (undo-tree-id25668 . -1) (undo-tree-id25669 . -1) (undo-tree-id25670 . -1) (undo-tree-id25671 . -1) (undo-tree-id25672 . -1) (undo-tree-id25673 . -1) (undo-tree-id25674 . -1) (undo-tree-id25675 . -1) (undo-tree-id25676 . -1) (undo-tree-id25677 . -1) (undo-tree-id25678 . -1) (undo-tree-id25679 . -1) (undo-tree-id25680 . -1) (undo-tree-id25681 . -1) (undo-tree-id25682 . -1) (undo-tree-id25683 . -1) (undo-tree-id25684 . -1) (undo-tree-id25685 . -1) (undo-tree-id25686 . -1) (undo-tree-id25687 . -1) (undo-tree-id25688 . -1) (undo-tree-id25689 . -1) (undo-tree-id25690 . -1) (undo-tree-id25691 . -1) (undo-tree-id25692 . -1) (undo-tree-id25693 . -1) (undo-tree-id25694 . -1) (undo-tree-id25695 . -1) (undo-tree-id25696 . -1) (undo-tree-id25697 . -1) (undo-tree-id25698 . -1) (undo-tree-id25699 . -1) (undo-tree-id25700 . -1) (undo-tree-id25701 . -1) (undo-tree-id25702 . -1) (undo-tree-id25703 . -1) (undo-tree-id25704 . -1) (undo-tree-id25705 . -1) (undo-tree-id25706 . -1) (undo-tree-id25707 . -1) (undo-tree-id25708 . -1) (undo-tree-id25709 . -1) (undo-tree-id25710 . -1) (undo-tree-id25711 . -1) (undo-tree-id25712 . -1) (undo-tree-id25713 . -1) (undo-tree-id25714 . -1) (undo-tree-id25715 . -1) (undo-tree-id25716 . -1) (undo-tree-id25717 . -1) (undo-tree-id25718 . -1) (undo-tree-id25719 . -1) (undo-tree-id25720 . -1) (undo-tree-id25721 . -1) (undo-tree-id25722 . -1) (undo-tree-id25723 . -1) (undo-tree-id25724 . -1) (undo-tree-id25725 . -1) (undo-tree-id25726 . -1) (undo-tree-id25727 . -1) (undo-tree-id25728 . -1) (undo-tree-id25729 . -1) (undo-tree-id25730 . -1) (undo-tree-id25731 . -1) (undo-tree-id25732 . -1) (undo-tree-id25733 . -1) (undo-tree-id25734 . -1) (undo-tree-id25735 . -1) (undo-tree-id25736 . -1) (undo-tree-id25737 . -1) (undo-tree-id25738 . -1) (undo-tree-id25739 . -1) (undo-tree-id25740 . -1) (undo-tree-id25741 . -1) (undo-tree-id25742 . -1) (undo-tree-id25743 . -1) (undo-tree-id25744 . -1) (undo-tree-id25745 . -1) (undo-tree-id25746 . -1) (undo-tree-id25747 . -1) (undo-tree-id25748 . -1) (undo-tree-id25749 . -1) (undo-tree-id25750 . -1) (undo-tree-id25751 . -1) (undo-tree-id25752 . -1) (undo-tree-id25753 . -1) (undo-tree-id25754 . -1) (undo-tree-id25755 . -1) (undo-tree-id25756 . -1) (undo-tree-id25757 . -1) (undo-tree-id25758 . -1) (undo-tree-id25759 . -1) (undo-tree-id25760 . -1) (undo-tree-id25761 . -1) (undo-tree-id25762 . -1) (undo-tree-id25763 . -1) (undo-tree-id25764 . -1) (undo-tree-id25765 . -1) (undo-tree-id25766 . -1) (undo-tree-id25767 . -1) (undo-tree-id25768 . -1) (undo-tree-id25769 . -1) (undo-tree-id25770 . -1) (undo-tree-id25771 . -1) (undo-tree-id25772 . -1) (undo-tree-id25773 . -1) (undo-tree-id25774 . -1) (undo-tree-id25775 . -1) (undo-tree-id25776 . -1) (undo-tree-id25777 . -1) (undo-tree-id25778 . -1) (undo-tree-id25779 . -1) (undo-tree-id25780 . -1) (undo-tree-id25781 . -1) (undo-tree-id25782 . -1) (undo-tree-id25783 . -1) (undo-tree-id25784 . -1) (undo-tree-id25785 . -1) (undo-tree-id25786 . -1) (undo-tree-id25787 . -1) (undo-tree-id25788 . -1) (undo-tree-id25789 . -1) (undo-tree-id25790 . -1) (undo-tree-id25791 . -1) (undo-tree-id25792 . -1) (undo-tree-id25793 . -1) (undo-tree-id25794 . -1) (undo-tree-id25795 . -1) (undo-tree-id25796 . -1) (undo-tree-id25797 . -1) (undo-tree-id25798 . -1) (undo-tree-id25799 . -1) (undo-tree-id25800 . -1) (undo-tree-id25801 . -1) (undo-tree-id25802 . -1) (undo-tree-id25803 . -1) (undo-tree-id25804 . -1) (undo-tree-id25805 . -1) (undo-tree-id25806 . -1) (undo-tree-id25807 . -1) (undo-tree-id25808 . -1) (undo-tree-id25809 . -1) (undo-tree-id25810 . -1) (undo-tree-id25811 . -1) (undo-tree-id25812 . -1) (undo-tree-id25813 . -1) (undo-tree-id25814 . -1) (undo-tree-id25815 . -1) (undo-tree-id25816 . -1) (undo-tree-id25817 . -1) (undo-tree-id25818 . -1) (undo-tree-id25819 . -1) (undo-tree-id25820 . -1) (undo-tree-id25821 . -1) (undo-tree-id25822 . -1) (undo-tree-id25823 . -1) (undo-tree-id25824 . -1) (undo-tree-id25825 . -1) (undo-tree-id25826 . -1) (undo-tree-id25827 . -1) (undo-tree-id25828 . -1) (undo-tree-id25829 . -1) (undo-tree-id25830 . -1) (undo-tree-id25831 . -1) (undo-tree-id25832 . -1) (undo-tree-id25833 . -1) (undo-tree-id25834 . -1) (undo-tree-id25835 . -1) (undo-tree-id25836 . -1) (undo-tree-id25837 . -1) (undo-tree-id25838 . -1) (undo-tree-id25839 . -1) (undo-tree-id25840 . -1) (undo-tree-id25841 . -1) (undo-tree-id25842 . -1) (undo-tree-id25843 . -1) (undo-tree-id25844 . -1) (undo-tree-id25845 . -1) (undo-tree-id25846 . -1) (undo-tree-id25847 . -1) (undo-tree-id25848 . -1) (undo-tree-id25849 . -1) (undo-tree-id25850 . -1) (undo-tree-id25851 . -1) (undo-tree-id25852 . -1) (undo-tree-id25853 . -1) (undo-tree-id25854 . -1) (undo-tree-id25855 . -1) (undo-tree-id25856 . -1) (undo-tree-id25857 . -1) (undo-tree-id25858 . -1) (undo-tree-id25859 . -1) (undo-tree-id25860 . -1) (undo-tree-id25861 . -1) (undo-tree-id25862 . -1) (undo-tree-id25863 . -1) (undo-tree-id25864 . -1) (undo-tree-id25865 . -1) (undo-tree-id25866 . -1) (undo-tree-id25867 . -1) (undo-tree-id25868 . -1) (undo-tree-id25869 . -1) (undo-tree-id25870 . -1) (undo-tree-id25871 . -1) (undo-tree-id25872 . -1) (undo-tree-id25873 . -1) (undo-tree-id25874 . -1) (undo-tree-id25875 . -1) (undo-tree-id25876 . -1) (undo-tree-id25877 . -1) (undo-tree-id25878 . -1) (undo-tree-id25879 . -1) (undo-tree-id25880 . -1) (undo-tree-id25881 . -1) (undo-tree-id25882 . -1) (undo-tree-id25883 . -1) (undo-tree-id25884 . -1) (undo-tree-id25885 . -1) (undo-tree-id25886 . -1) (undo-tree-id25887 . -1) (undo-tree-id25888 . -1) (undo-tree-id25889 . -1) (undo-tree-id25890 . -1) (undo-tree-id25891 . -1) (undo-tree-id25892 . -1) (undo-tree-id25893 . -1) (undo-tree-id25894 . -1) (undo-tree-id25895 . -1) (undo-tree-id25896 . -1) (undo-tree-id25897 . -1) (undo-tree-id25898 . -1) (undo-tree-id25899 . -1) (undo-tree-id25900 . -1) (undo-tree-id25901 . -1) (undo-tree-id25902 . -1) (undo-tree-id25903 . -1) (undo-tree-id25904 . -1) (undo-tree-id25905 . -1) (undo-tree-id25906 . -1) (undo-tree-id25907 . -1) (undo-tree-id25908 . -1) (undo-tree-id25909 . -1) (undo-tree-id25910 . -1) (undo-tree-id25911 . -1) (undo-tree-id25912 . -1) (undo-tree-id25913 . -1) (undo-tree-id25914 . -1) (undo-tree-id25915 . -1) (undo-tree-id25916 . -1) (undo-tree-id25917 . -1) (undo-tree-id25918 . -1) (undo-tree-id25919 . -1) (undo-tree-id25920 . -1) (undo-tree-id25921 . -1) (undo-tree-id25922 . -1) (undo-tree-id25923 . -1) (undo-tree-id25924 . -1) (undo-tree-id25925 . -1) (undo-tree-id25926 . -1) (undo-tree-id25927 . -1) (undo-tree-id25928 . -1) (undo-tree-id25929 . -1) (undo-tree-id25930 . -1) (undo-tree-id25931 . -1) (undo-tree-id25932 . -1) (undo-tree-id25933 . -1) (undo-tree-id25934 . -1) 66953 (#("a" 0 1 (fontified t)) . -66953) (undo-tree-id25935 . -1) (undo-tree-id25936 . -1) (undo-tree-id25937 . -1) (undo-tree-id25938 . -1) (undo-tree-id25939 . -1) (undo-tree-id25940 . -1) (undo-tree-id25941 . -1) (undo-tree-id25942 . -1) (undo-tree-id25943 . -1) (undo-tree-id25944 . -1) (undo-tree-id25945 . -1) (undo-tree-id25946 . -1) (undo-tree-id25947 . -1) (undo-tree-id25948 . -1) (undo-tree-id25949 . -1) (undo-tree-id25950 . -1) (undo-tree-id25951 . -1) (undo-tree-id25952 . -1) (undo-tree-id25953 . -1) (undo-tree-id25954 . -1) (undo-tree-id25955 . -1) (undo-tree-id25956 . -1) (undo-tree-id25957 . -1) (undo-tree-id25958 . -1) (undo-tree-id25959 . -1) (undo-tree-id25960 . -1) (undo-tree-id25961 . -1) (undo-tree-id25962 . -1) (undo-tree-id25963 . -1) (undo-tree-id25964 . -1) (undo-tree-id25965 . -1) (undo-tree-id25966 . -1) (undo-tree-id25967 . -1) (undo-tree-id25968 . -1) (undo-tree-id25969 . -1) (undo-tree-id25970 . -1) (undo-tree-id25971 . -1) (undo-tree-id25972 . -1) (undo-tree-id25973 . -1) (undo-tree-id25974 . -1) (undo-tree-id25975 . -1) (undo-tree-id25976 . -1) (undo-tree-id25977 . -1) (undo-tree-id25978 . -1) (undo-tree-id25979 . -1) (undo-tree-id25980 . -1) (undo-tree-id25981 . -1) (undo-tree-id25982 . -1) (undo-tree-id25983 . -1) (undo-tree-id25984 . -1) (undo-tree-id25985 . -1) (undo-tree-id25986 . -1) (undo-tree-id25987 . -1) (undo-tree-id25988 . -1) (undo-tree-id25989 . -1) (undo-tree-id25990 . -1) (undo-tree-id25991 . -1) (undo-tree-id25992 . -1) (undo-tree-id25993 . -1) (undo-tree-id25994 . -1) (undo-tree-id25995 . -1) (undo-tree-id25996 . -1) (undo-tree-id25997 . -1) (undo-tree-id25998 . -1) (undo-tree-id25999 . -1) (undo-tree-id26000 . -1) (undo-tree-id26001 . -1) (undo-tree-id26002 . -1) (undo-tree-id26003 . -1) (undo-tree-id26004 . -1) (undo-tree-id26005 . -1) (undo-tree-id26006 . -1) (undo-tree-id26007 . -1) (undo-tree-id26008 . -1) (undo-tree-id26009 . -1) (undo-tree-id26010 . -1) (undo-tree-id26011 . -1) (undo-tree-id26012 . -1) (undo-tree-id26013 . -1) (undo-tree-id26014 . -1) (undo-tree-id26015 . -1) (undo-tree-id26016 . -1) (undo-tree-id26017 . -1) (undo-tree-id26018 . -1) (undo-tree-id26019 . -1) (undo-tree-id26020 . -1) (undo-tree-id26021 . -1) (undo-tree-id26022 . -1) (undo-tree-id26023 . -1) (undo-tree-id26024 . -1) (undo-tree-id26025 . -1) (undo-tree-id26026 . -1) (undo-tree-id26027 . -1) (undo-tree-id26028 . -1) (undo-tree-id26029 . -1) (undo-tree-id26030 . -1) (undo-tree-id26031 . -1) (undo-tree-id26032 . -1) (undo-tree-id26033 . -1) (undo-tree-id26034 . -1) (undo-tree-id26035 . -1) (undo-tree-id26036 . -1) (undo-tree-id26037 . -1) (undo-tree-id26038 . -1) (undo-tree-id26039 . -1) (undo-tree-id26040 . -1) (undo-tree-id26041 . -1) (undo-tree-id26042 . -1) (undo-tree-id26043 . -1) (undo-tree-id26044 . -1) (undo-tree-id26045 . -1) (undo-tree-id26046 . -1) (undo-tree-id26047 . -1) (undo-tree-id26048 . -1) (undo-tree-id26049 . -1) (undo-tree-id26050 . -1) (undo-tree-id26051 . -1) (undo-tree-id26052 . -1) (undo-tree-id26053 . -1) (undo-tree-id26054 . -1) (undo-tree-id26055 . -1) (undo-tree-id26056 . -1) (undo-tree-id26057 . -1) (undo-tree-id26058 . -1) (undo-tree-id26059 . -1) (undo-tree-id26060 . -1) (undo-tree-id26061 . -1) (undo-tree-id26062 . -1) (undo-tree-id26063 . -1) (undo-tree-id26064 . -1) (undo-tree-id26065 . -1) (undo-tree-id26066 . -1) (undo-tree-id26067 . -1) (undo-tree-id26068 . -1) (undo-tree-id26069 . -1) (undo-tree-id26070 . -1) (undo-tree-id26071 . -1) (undo-tree-id26072 . -1) (undo-tree-id26073 . -1) (undo-tree-id26074 . -1) (undo-tree-id26075 . -1) (undo-tree-id26076 . -1) (undo-tree-id26077 . -1) (undo-tree-id26078 . -1) (undo-tree-id26079 . -1) (undo-tree-id26080 . -1) (undo-tree-id26081 . -1) (undo-tree-id26082 . -1) (undo-tree-id26083 . -1) (undo-tree-id26084 . -1) (undo-tree-id26085 . -1) (undo-tree-id26086 . -1) (undo-tree-id26087 . -1) (undo-tree-id26088 . -1) (undo-tree-id26089 . -1) (undo-tree-id26090 . -1) (undo-tree-id26091 . -1) (undo-tree-id26092 . -1) (undo-tree-id26093 . -1) (undo-tree-id26094 . -1) (undo-tree-id26095 . -1) (undo-tree-id26096 . -1) (undo-tree-id26097 . -1) (undo-tree-id26098 . -1) (undo-tree-id26099 . -1) (undo-tree-id26100 . -1) (undo-tree-id26101 . -1) (undo-tree-id26102 . -1) (undo-tree-id26103 . -1) (undo-tree-id26104 . -1) (undo-tree-id26105 . -1) (undo-tree-id26106 . -1) (undo-tree-id26107 . -1) (undo-tree-id26108 . -1) (undo-tree-id26109 . -1) (undo-tree-id26110 . -1) (undo-tree-id26111 . -1) (undo-tree-id26112 . -1) (undo-tree-id26113 . -1) (undo-tree-id26114 . -1) (undo-tree-id26115 . -1) (undo-tree-id26116 . -1) (undo-tree-id26117 . -1) (undo-tree-id26118 . -1) (undo-tree-id26119 . -1) (undo-tree-id26120 . -1) (undo-tree-id26121 . -1) (undo-tree-id26122 . -1) (undo-tree-id26123 . -1) (undo-tree-id26124 . -1) (undo-tree-id26125 . -1) (undo-tree-id26126 . -1) (undo-tree-id26127 . -1) (undo-tree-id26128 . -1) (undo-tree-id26129 . -1) (undo-tree-id26130 . -1) (undo-tree-id26131 . -1) (undo-tree-id26132 . -1) (undo-tree-id26133 . -1) (undo-tree-id26134 . -1) (undo-tree-id26135 . -1) (undo-tree-id26136 . -1) (undo-tree-id26137 . -1) (undo-tree-id26138 . -1) (undo-tree-id26139 . -1) (undo-tree-id26140 . -1) (undo-tree-id26141 . -1) (undo-tree-id26142 . -1) (undo-tree-id26143 . -1) (undo-tree-id26144 . -1) (undo-tree-id26145 . -1) (undo-tree-id26146 . -1) (undo-tree-id26147 . -1) (undo-tree-id26148 . -1) (undo-tree-id26149 . -1) (undo-tree-id26150 . -1) (undo-tree-id26151 . -1) (undo-tree-id26152 . -1) (undo-tree-id26153 . -1) (undo-tree-id26154 . -1) (undo-tree-id26155 . -1) (undo-tree-id26156 . -1) (undo-tree-id26157 . -1) (undo-tree-id26158 . -1) (undo-tree-id26159 . -1) (undo-tree-id26160 . -1) (undo-tree-id26161 . -1) (undo-tree-id26162 . -1) (undo-tree-id26163 . -1) (undo-tree-id26164 . -1) (undo-tree-id26165 . -1) (undo-tree-id26166 . -1) (undo-tree-id26167 . -1) (undo-tree-id26168 . -1) (undo-tree-id26169 . -1) (undo-tree-id26170 . -1) (undo-tree-id26171 . -1) (undo-tree-id26172 . -1) (undo-tree-id26173 . -1) (undo-tree-id26174 . -1) (undo-tree-id26175 . -1) (undo-tree-id26176 . -1) (undo-tree-id26177 . -1) (undo-tree-id26178 . -1) (undo-tree-id26179 . -1) (undo-tree-id26180 . -1) (undo-tree-id26181 . -1) (undo-tree-id26182 . -1) (undo-tree-id26183 . -1) (undo-tree-id26184 . -1) (undo-tree-id26185 . -1) (undo-tree-id26186 . -1) (undo-tree-id26187 . -1) (undo-tree-id26188 . -1) (undo-tree-id26189 . -1) (undo-tree-id26190 . -1) (undo-tree-id26191 . -1) (undo-tree-id26192 . -1) (undo-tree-id26193 . -1) (undo-tree-id26194 . -1) (undo-tree-id26195 . -1) (undo-tree-id26196 . -1) (undo-tree-id26197 . -1) (undo-tree-id26198 . -1) (undo-tree-id26199 . -1) (undo-tree-id26200 . -1) (undo-tree-id26201 . -1) (undo-tree-id26202 . -1) (undo-tree-id26203 . -1) (undo-tree-id26204 . -1) (undo-tree-id26205 . -1) (undo-tree-id26206 . -1) (undo-tree-id26207 . -1) (undo-tree-id26208 . -1) (undo-tree-id26209 . -1) (undo-tree-id26210 . -1) (undo-tree-id26211 . -1) (undo-tree-id26212 . -1) (undo-tree-id26213 . -1) (undo-tree-id26214 . -1) (undo-tree-id26215 . -1) (undo-tree-id26216 . -1) (undo-tree-id26217 . -1) (undo-tree-id26218 . -1) (undo-tree-id26219 . -1) (undo-tree-id26220 . -1) (undo-tree-id26221 . -1) (undo-tree-id26222 . -1) (undo-tree-id26223 . -1) (undo-tree-id26224 . -1) (undo-tree-id26225 . -1) (undo-tree-id26226 . -1) (undo-tree-id26227 . -1) (undo-tree-id26228 . -1) (undo-tree-id26229 . -1) (undo-tree-id26230 . -1) (undo-tree-id26231 . -1) (undo-tree-id26232 . -1) (undo-tree-id26233 . -1) (undo-tree-id26234 . -1) (undo-tree-id26235 . -1) (undo-tree-id26236 . -1) (undo-tree-id26237 . -1) (undo-tree-id26238 . -1) (undo-tree-id26239 . -1) (undo-tree-id26240 . -1) (undo-tree-id26241 . -1) (undo-tree-id26242 . -1) (undo-tree-id26243 . -1) (undo-tree-id26244 . -1) (undo-tree-id26245 . -1) (undo-tree-id26246 . -1) (undo-tree-id26247 . -1) (undo-tree-id26248 . -1) (undo-tree-id26249 . -1) (undo-tree-id26250 . -1) (undo-tree-id26251 . -1) (undo-tree-id26252 . -1) (undo-tree-id26253 . -1) (undo-tree-id26254 . -1) (undo-tree-id26255 . -1) (undo-tree-id26256 . -1) (undo-tree-id26257 . -1) (undo-tree-id26258 . -1) (undo-tree-id26259 . -1) (undo-tree-id26260 . -1) (undo-tree-id26261 . -1) (undo-tree-id26262 . -1) (undo-tree-id26263 . -1) (undo-tree-id26264 . -1) (undo-tree-id26265 . -1) (undo-tree-id26266 . -1) (undo-tree-id26267 . -1) (undo-tree-id26268 . -1) (undo-tree-id26269 . -1) (undo-tree-id26270 . -1) (undo-tree-id26271 . -1) (undo-tree-id26272 . -1) (undo-tree-id26273 . -1) (undo-tree-id26274 . -1) (undo-tree-id26275 . -1) (undo-tree-id26276 . -1) (undo-tree-id26277 . -1) (undo-tree-id26278 . -1) (undo-tree-id26279 . -1) (undo-tree-id26280 . -1) (undo-tree-id26281 . -1) (undo-tree-id26282 . -1) (undo-tree-id26283 . -1) (undo-tree-id26284 . -1) (undo-tree-id26285 . -1) (undo-tree-id26286 . -1) (undo-tree-id26287 . -1) (undo-tree-id26288 . -1) (undo-tree-id26289 . -1) (undo-tree-id26290 . -1) (undo-tree-id26291 . -1) (undo-tree-id26292 . -1) (undo-tree-id26293 . -1) (undo-tree-id26294 . -1) (undo-tree-id26295 . -1) (undo-tree-id26296 . -1) (undo-tree-id26297 . -1) (undo-tree-id26298 . -1) (undo-tree-id26299 . -1) (undo-tree-id26300 . -1) (undo-tree-id26301 . -1) (undo-tree-id26302 . -1) (undo-tree-id26303 . -1) (undo-tree-id26304 . -1) (undo-tree-id26305 . -1) (undo-tree-id26306 . -1) (undo-tree-id26307 . -1) (undo-tree-id26308 . -1) (undo-tree-id26309 . -1) (undo-tree-id26310 . -1) (undo-tree-id26311 . -1) (undo-tree-id26312 . -1) (undo-tree-id26313 . -1) (undo-tree-id26314 . -1) (undo-tree-id26315 . -1) (undo-tree-id26316 . -1) (undo-tree-id26317 . -1) (undo-tree-id26318 . -1) (undo-tree-id26319 . -1) (undo-tree-id26320 . -1) (undo-tree-id26321 . -1) (undo-tree-id26322 . -1) (undo-tree-id26323 . -1) (undo-tree-id26324 . -1) (undo-tree-id26325 . -1) (undo-tree-id26326 . -1) (undo-tree-id26327 . -1) (undo-tree-id26328 . -1) (undo-tree-id26329 . -1) (undo-tree-id26330 . -1) (undo-tree-id26331 . -1) (undo-tree-id26332 . -1) (undo-tree-id26333 . -1) (undo-tree-id26334 . -1) (undo-tree-id26335 . -1) (undo-tree-id26336 . -1) (undo-tree-id26337 . -1) (undo-tree-id26338 . -1) (undo-tree-id26339 . -1) (undo-tree-id26340 . -1) (undo-tree-id26341 . -1) (undo-tree-id26342 . -1) (undo-tree-id26343 . -1) (undo-tree-id26344 . -1) (undo-tree-id26345 . -1) (undo-tree-id26346 . -1) (undo-tree-id26347 . -1) (undo-tree-id26348 . -1) (undo-tree-id26349 . -1) (undo-tree-id26350 . -1) (undo-tree-id26351 . -1) (undo-tree-id26352 . -1) (undo-tree-id26353 . -1) (undo-tree-id26354 . -1) (undo-tree-id26355 . -1) (undo-tree-id26356 . -1) (undo-tree-id26357 . -1) (undo-tree-id26358 . -1) (undo-tree-id26359 . -1) (undo-tree-id26360 . -1) (undo-tree-id26361 . -1) (undo-tree-id26362 . -1) (undo-tree-id26363 . -1) (undo-tree-id26364 . -1) (undo-tree-id26365 . -1) (undo-tree-id26366 . -1) (undo-tree-id26367 . -1) (undo-tree-id26368 . -1) (undo-tree-id26369 . -1) (undo-tree-id26370 . -1) (undo-tree-id26371 . -1) (undo-tree-id26372 . -1) (undo-tree-id26373 . -1) (undo-tree-id26374 . -1) (undo-tree-id26375 . -1) (undo-tree-id26376 . -1) (undo-tree-id26377 . -1) (undo-tree-id26378 . -1) (undo-tree-id26379 . -1) (undo-tree-id26380 . -1) (undo-tree-id26381 . -1) (undo-tree-id26382 . -1) (undo-tree-id26383 . -1) (undo-tree-id26384 . -1) (undo-tree-id26385 . -1) (undo-tree-id26386 . -1) (undo-tree-id26387 . -1) (undo-tree-id26388 . -1) (undo-tree-id26389 . -1) (undo-tree-id26390 . -1) (undo-tree-id26391 . -1) (undo-tree-id26392 . -1) (undo-tree-id26393 . -1) (undo-tree-id26394 . -1) (undo-tree-id26395 . -1) (undo-tree-id26396 . -1) (undo-tree-id26397 . -1) (undo-tree-id26398 . -1) (undo-tree-id26399 . -1) (undo-tree-id26400 . -1) (undo-tree-id26401 . -1) (undo-tree-id26402 . -1) (undo-tree-id26403 . -1) (undo-tree-id26404 . -1) (undo-tree-id26405 . -1) (undo-tree-id26406 . -1) (undo-tree-id26407 . -1) (undo-tree-id26408 . -1) (undo-tree-id26409 . -1) (undo-tree-id26410 . -1) (undo-tree-id26411 . -1) (undo-tree-id26412 . -1) (undo-tree-id26413 . -1) (undo-tree-id26414 . -1) (undo-tree-id26415 . -1) (undo-tree-id26416 . -1) (undo-tree-id26417 . -1) (undo-tree-id26418 . -1) (undo-tree-id26419 . -1) (undo-tree-id26420 . -1) (undo-tree-id26421 . -1) (undo-tree-id26422 . -1) (undo-tree-id26423 . -1) (undo-tree-id26424 . -1) (undo-tree-id26425 . -1) (undo-tree-id26426 . -1) (undo-tree-id26427 . -1) (undo-tree-id26428 . -1) (undo-tree-id26429 . -1) (undo-tree-id26430 . -1) (undo-tree-id26431 . -1) (undo-tree-id26432 . -1) (undo-tree-id26433 . -1) (undo-tree-id26434 . -1) (undo-tree-id26435 . -1) (undo-tree-id26436 . -1) (undo-tree-id26437 . -1) (undo-tree-id26438 . -1) (undo-tree-id26439 . -1) (undo-tree-id26440 . -1) (undo-tree-id26441 . -1) (undo-tree-id26442 . -1) (undo-tree-id26443 . -1) (undo-tree-id26444 . -1) (undo-tree-id26445 . -1) (undo-tree-id26446 . -1) (undo-tree-id26447 . -1) (undo-tree-id26448 . -1) (undo-tree-id26449 . -1) (undo-tree-id26450 . -1) (undo-tree-id26451 . -1) (undo-tree-id26452 . -1) (undo-tree-id26453 . -1) (undo-tree-id26454 . -1) (undo-tree-id26455 . -1) (undo-tree-id26456 . -1) (undo-tree-id26457 . -1) (undo-tree-id26458 . -1) (undo-tree-id26459 . -1) (undo-tree-id26460 . -1) (undo-tree-id26461 . -1) (undo-tree-id26462 . -1) (undo-tree-id26463 . -1) (undo-tree-id26464 . -1) (undo-tree-id26465 . -1) (undo-tree-id26466 . -1) (undo-tree-id26467 . -1) (undo-tree-id26468 . -1) (undo-tree-id26469 . -1) (undo-tree-id26470 . -1) (undo-tree-id26471 . -1) (undo-tree-id26472 . -1) (undo-tree-id26473 . -1) (undo-tree-id26474 . -1) (undo-tree-id26475 . -1) (undo-tree-id26476 . -1) (undo-tree-id26477 . -1) (undo-tree-id26478 . -1) (undo-tree-id26479 . -1) (undo-tree-id26480 . -1) (undo-tree-id26481 . -1) (undo-tree-id26482 . -1) (undo-tree-id26483 . -1) (undo-tree-id26484 . -1) (undo-tree-id26485 . -1) (#("y" 0 1 (fontified t)) . -66954) (undo-tree-id26486 . -1) (undo-tree-id26487 . -1) (undo-tree-id26488 . -1) (undo-tree-id26489 . -1) (undo-tree-id26490 . -1) (undo-tree-id26491 . -1) (undo-tree-id26492 . -1) (undo-tree-id26493 . -1) (undo-tree-id26494 . -1) (undo-tree-id26495 . -1) (undo-tree-id26496 . -1) (undo-tree-id26497 . -1) (undo-tree-id26498 . -1) (undo-tree-id26499 . -1) (undo-tree-id26500 . -1) (undo-tree-id26501 . -1) (undo-tree-id26502 . -1) (undo-tree-id26503 . -1) (undo-tree-id26504 . -1) (undo-tree-id26505 . -1) (undo-tree-id26506 . -1) (undo-tree-id26507 . -1) (undo-tree-id26508 . -1) (undo-tree-id26509 . -1) (undo-tree-id26510 . -1) (undo-tree-id26511 . -1) (undo-tree-id26512 . -1) (undo-tree-id26513 . -1) (undo-tree-id26514 . -1) (undo-tree-id26515 . -1) (undo-tree-id26516 . -1) (undo-tree-id26517 . -1) (undo-tree-id26518 . -1) (undo-tree-id26519 . -1) (undo-tree-id26520 . -1) (undo-tree-id26521 . -1) (undo-tree-id26522 . -1) (undo-tree-id26523 . -1) (undo-tree-id26524 . -1) (undo-tree-id26525 . -1) (undo-tree-id26526 . -1) (undo-tree-id26527 . -1) (undo-tree-id26528 . -1) (undo-tree-id26529 . -1) (undo-tree-id26530 . -1) (undo-tree-id26531 . -1) (undo-tree-id26532 . -1) (undo-tree-id26533 . -1) (undo-tree-id26534 . -1) (undo-tree-id26535 . -1) (undo-tree-id26536 . -1) (undo-tree-id26537 . -1) (undo-tree-id26538 . -1) (undo-tree-id26539 . -1) (undo-tree-id26540 . -1) (undo-tree-id26541 . -1) (undo-tree-id26542 . -1) (undo-tree-id26543 . -1) (undo-tree-id26544 . -1) (undo-tree-id26545 . -1) (undo-tree-id26546 . -1) (undo-tree-id26547 . -1) (undo-tree-id26548 . -1) (undo-tree-id26549 . -1) (undo-tree-id26550 . -1) (undo-tree-id26551 . -1) (undo-tree-id26552 . -1) (undo-tree-id26553 . -1) (undo-tree-id26554 . -1) (undo-tree-id26555 . -1) (undo-tree-id26556 . -1) (undo-tree-id26557 . -1) (undo-tree-id26558 . -1) (undo-tree-id26559 . -1) (undo-tree-id26560 . -1) (undo-tree-id26561 . -1) (undo-tree-id26562 . -1) (undo-tree-id26563 . -1) (undo-tree-id26564 . -1) (undo-tree-id26565 . -1) (undo-tree-id26566 . -1) (undo-tree-id26567 . -1) (undo-tree-id26568 . -1) (undo-tree-id26569 . -1) (undo-tree-id26570 . -1) (undo-tree-id26571 . -1) (undo-tree-id26572 . -1) (undo-tree-id26573 . -1) (undo-tree-id26574 . -1) (undo-tree-id26575 . -1) (undo-tree-id26576 . -1) (undo-tree-id26577 . -1) (undo-tree-id26578 . -1) (undo-tree-id26579 . -1) (undo-tree-id26580 . -1) (undo-tree-id26581 . -1) (undo-tree-id26582 . -1) (undo-tree-id26583 . -1) (undo-tree-id26584 . -1) (undo-tree-id26585 . -1) (undo-tree-id26586 . -1) (undo-tree-id26587 . -1) (undo-tree-id26588 . -1) (undo-tree-id26589 . -1) (undo-tree-id26590 . -1) (undo-tree-id26591 . -1) (undo-tree-id26592 . -1) (undo-tree-id26593 . -1) (undo-tree-id26594 . -1) (undo-tree-id26595 . -1) (undo-tree-id26596 . -1) (undo-tree-id26597 . -1) (undo-tree-id26598 . -1) (undo-tree-id26599 . -1) (undo-tree-id26600 . -1) (undo-tree-id26601 . -1) (undo-tree-id26602 . -1) (undo-tree-id26603 . -1) (undo-tree-id26604 . -1) (undo-tree-id26605 . -1) (undo-tree-id26606 . -1) (undo-tree-id26607 . -1) (undo-tree-id26608 . -1) (undo-tree-id26609 . -1) (undo-tree-id26610 . -1) (undo-tree-id26611 . -1) (undo-tree-id26612 . -1) (undo-tree-id26613 . -1) (undo-tree-id26614 . -1) (undo-tree-id26615 . -1) (undo-tree-id26616 . -1) (undo-tree-id26617 . -1) (undo-tree-id26618 . -1) (undo-tree-id26619 . -1) (undo-tree-id26620 . -1) (undo-tree-id26621 . -1) (undo-tree-id26622 . -1) (undo-tree-id26623 . -1) (undo-tree-id26624 . -1) (undo-tree-id26625 . -1) (undo-tree-id26626 . -1) (undo-tree-id26627 . -1) (undo-tree-id26628 . -1) (undo-tree-id26629 . -1) (undo-tree-id26630 . -1) (undo-tree-id26631 . -1) (undo-tree-id26632 . -1) (undo-tree-id26633 . -1) (undo-tree-id26634 . -1) (undo-tree-id26635 . -1) (undo-tree-id26636 . -1) (undo-tree-id26637 . -1) (undo-tree-id26638 . -1) (undo-tree-id26639 . -1) (undo-tree-id26640 . -1) (undo-tree-id26641 . -1) (undo-tree-id26642 . -1) (undo-tree-id26643 . -1) (undo-tree-id26644 . -1) (undo-tree-id26645 . -1) (undo-tree-id26646 . -1) (undo-tree-id26647 . -1) (undo-tree-id26648 . -1) (undo-tree-id26649 . -1) (undo-tree-id26650 . -1) (undo-tree-id26651 . -1) (undo-tree-id26652 . -1) (undo-tree-id26653 . -1) (undo-tree-id26654 . -1) (undo-tree-id26655 . -1) (undo-tree-id26656 . -1) (undo-tree-id26657 . -1) (undo-tree-id26658 . -1) (undo-tree-id26659 . -1) (undo-tree-id26660 . -1) (undo-tree-id26661 . -1) (undo-tree-id26662 . -1) (undo-tree-id26663 . -1) (undo-tree-id26664 . -1) (undo-tree-id26665 . -1) (undo-tree-id26666 . -1) (undo-tree-id26667 . -1) (undo-tree-id26668 . -1) (undo-tree-id26669 . -1) (undo-tree-id26670 . -1) (undo-tree-id26671 . -1) (undo-tree-id26672 . -1) (undo-tree-id26673 . -1) (undo-tree-id26674 . -1) (undo-tree-id26675 . -1) (undo-tree-id26676 . -1) (undo-tree-id26677 . -1) (undo-tree-id26678 . -1) (undo-tree-id26679 . -1) (undo-tree-id26680 . -1) (undo-tree-id26681 . -1) (undo-tree-id26682 . -1) (undo-tree-id26683 . -1) (undo-tree-id26684 . -1) (undo-tree-id26685 . -1) (undo-tree-id26686 . -1) (undo-tree-id26687 . -1) (undo-tree-id26688 . -1) (undo-tree-id26689 . -1) (undo-tree-id26690 . -1) (undo-tree-id26691 . -1) (undo-tree-id26692 . -1) (undo-tree-id26693 . -1) (undo-tree-id26694 . -1) (undo-tree-id26695 . -1) (undo-tree-id26696 . -1) (undo-tree-id26697 . -1) (undo-tree-id26698 . -1) (undo-tree-id26699 . -1) (undo-tree-id26700 . -1) (undo-tree-id26701 . -1) (undo-tree-id26702 . -1) (undo-tree-id26703 . -1) (undo-tree-id26704 . -1) (undo-tree-id26705 . -1) (undo-tree-id26706 . -1) (undo-tree-id26707 . -1) (undo-tree-id26708 . -1) (undo-tree-id26709 . -1) (undo-tree-id26710 . -1) (undo-tree-id26711 . -1) (undo-tree-id26712 . -1) (undo-tree-id26713 . -1) (undo-tree-id26714 . -1) (undo-tree-id26715 . -1) (undo-tree-id26716 . -1) (undo-tree-id26717 . -1) (undo-tree-id26718 . -1) (undo-tree-id26719 . -1) (undo-tree-id26720 . -1) (undo-tree-id26721 . -1) (undo-tree-id26722 . -1) (undo-tree-id26723 . -1) (undo-tree-id26724 . -1) (undo-tree-id26725 . -1) (undo-tree-id26726 . -1) (undo-tree-id26727 . -1) (undo-tree-id26728 . -1) (undo-tree-id26729 . -1) (undo-tree-id26730 . -1) (undo-tree-id26731 . -1) (undo-tree-id26732 . -1) (undo-tree-id26733 . -1) (undo-tree-id26734 . -1) (undo-tree-id26735 . -1) (undo-tree-id26736 . -1) (undo-tree-id26737 . -1) (undo-tree-id26738 . -1) (undo-tree-id26739 . -1) (undo-tree-id26740 . -1) (undo-tree-id26741 . -1) (undo-tree-id26742 . -1) (undo-tree-id26743 . -1) (undo-tree-id26744 . -1) (undo-tree-id26745 . -1) (undo-tree-id26746 . -1) (undo-tree-id26747 . -1) (undo-tree-id26748 . -1) (undo-tree-id26749 . -1) (undo-tree-id26750 . -1) (undo-tree-id26751 . -1) (undo-tree-id26752 . -1) (undo-tree-id26753 . -1) (undo-tree-id26754 . -1) (undo-tree-id26755 . -1) (undo-tree-id26756 . -1) (undo-tree-id26757 . -1) (undo-tree-id26758 . -1) (undo-tree-id26759 . -1) (undo-tree-id26760 . -1) (undo-tree-id26761 . -1) (undo-tree-id26762 . -1) (undo-tree-id26763 . -1) (undo-tree-id26764 . -1) (undo-tree-id26765 . -1) (undo-tree-id26766 . -1) (undo-tree-id26767 . -1) (undo-tree-id26768 . -1) (undo-tree-id26769 . -1) (undo-tree-id26770 . -1) (undo-tree-id26771 . -1) (undo-tree-id26772 . -1) (undo-tree-id26773 . -1) (undo-tree-id26774 . -1) (undo-tree-id26775 . -1) (undo-tree-id26776 . -1) (undo-tree-id26777 . -1) (undo-tree-id26778 . -1) (undo-tree-id26779 . -1) (undo-tree-id26780 . -1) (undo-tree-id26781 . -1) (undo-tree-id26782 . -1) (undo-tree-id26783 . -1) (undo-tree-id26784 . -1) (undo-tree-id26785 . -1) (undo-tree-id26786 . -1) (undo-tree-id26787 . -1) (undo-tree-id26788 . -1) (undo-tree-id26789 . -1) (undo-tree-id26790 . -1) (undo-tree-id26791 . -1) (undo-tree-id26792 . -1) (undo-tree-id26793 . -1) (undo-tree-id26794 . -1) (undo-tree-id26795 . -1) (undo-tree-id26796 . -1) (undo-tree-id26797 . -1) (undo-tree-id26798 . -1) (undo-tree-id26799 . -1) (undo-tree-id26800 . -1) (undo-tree-id26801 . -1) (undo-tree-id26802 . -1) (undo-tree-id26803 . -1) (undo-tree-id26804 . -1) (undo-tree-id26805 . -1) (undo-tree-id26806 . -1) (undo-tree-id26807 . -1) (undo-tree-id26808 . -1) (undo-tree-id26809 . -1) (undo-tree-id26810 . -1) (undo-tree-id26811 . -1) (undo-tree-id26812 . -1) (undo-tree-id26813 . -1) (undo-tree-id26814 . -1) (undo-tree-id26815 . -1) (undo-tree-id26816 . -1) (undo-tree-id26817 . -1) (undo-tree-id26818 . -1) (undo-tree-id26819 . -1) (undo-tree-id26820 . -1) (undo-tree-id26821 . -1) (undo-tree-id26822 . -1) (undo-tree-id26823 . -1) (undo-tree-id26824 . -1) (undo-tree-id26825 . -1) (undo-tree-id26826 . -1) (undo-tree-id26827 . -1) (undo-tree-id26828 . -1) (undo-tree-id26829 . -1) (undo-tree-id26830 . -1) (undo-tree-id26831 . -1) (undo-tree-id26832 . -1) (undo-tree-id26833 . -1) (undo-tree-id26834 . -1) (undo-tree-id26835 . -1) (undo-tree-id26836 . -1) (undo-tree-id26837 . -1) (undo-tree-id26838 . -1) (undo-tree-id26839 . -1) (undo-tree-id26840 . -1) (undo-tree-id26841 . -1) (undo-tree-id26842 . -1) (undo-tree-id26843 . -1) (undo-tree-id26844 . -1) (undo-tree-id26845 . -1) (undo-tree-id26846 . -1) (undo-tree-id26847 . -1) (undo-tree-id26848 . -1) (undo-tree-id26849 . -1) (undo-tree-id26850 . -1) (undo-tree-id26851 . -1) (undo-tree-id26852 . -1) (undo-tree-id26853 . -1) (undo-tree-id26854 . -1) (undo-tree-id26855 . -1) (undo-tree-id26856 . -1) (undo-tree-id26857 . -1) (undo-tree-id26858 . -1) (undo-tree-id26859 . -1) (undo-tree-id26860 . -1) (undo-tree-id26861 . -1) (undo-tree-id26862 . -1) (undo-tree-id26863 . -1) (undo-tree-id26864 . -1) (undo-tree-id26865 . -1) (undo-tree-id26866 . -1) (undo-tree-id26867 . -1) (undo-tree-id26868 . -1) (undo-tree-id26869 . -1) (undo-tree-id26870 . -1) (undo-tree-id26871 . -1) (undo-tree-id26872 . -1) (undo-tree-id26873 . -1) (undo-tree-id26874 . -1) (undo-tree-id26875 . -1) (undo-tree-id26876 . -1) (undo-tree-id26877 . -1) (undo-tree-id26878 . -1) (undo-tree-id26879 . -1) (undo-tree-id26880 . -1) (undo-tree-id26881 . -1) (undo-tree-id26882 . -1) (undo-tree-id26883 . -1) (undo-tree-id26884 . -1) (undo-tree-id26885 . -1) (undo-tree-id26886 . -1) (undo-tree-id26887 . -1) (undo-tree-id26888 . -1) (undo-tree-id26889 . -1) (undo-tree-id26890 . -1) (undo-tree-id26891 . -1) (undo-tree-id26892 . -1) (undo-tree-id26893 . -1) (undo-tree-id26894 . -1) (undo-tree-id26895 . -1) (undo-tree-id26896 . -1) (undo-tree-id26897 . -1) (undo-tree-id26898 . -1) (undo-tree-id26899 . -1) (undo-tree-id26900 . -1) (undo-tree-id26901 . -1) (undo-tree-id26902 . -1) (undo-tree-id26903 . -1) (undo-tree-id26904 . -1) (undo-tree-id26905 . -1) (undo-tree-id26906 . -1) (undo-tree-id26907 . -1) (undo-tree-id26908 . -1) (undo-tree-id26909 . -1) (undo-tree-id26910 . -1) (undo-tree-id26911 . -1) (undo-tree-id26912 . -1) (undo-tree-id26913 . -1) (undo-tree-id26914 . -1) (undo-tree-id26915 . -1) (undo-tree-id26916 . -1) (undo-tree-id26917 . -1) (undo-tree-id26918 . -1) (undo-tree-id26919 . -1) (undo-tree-id26920 . -1) (undo-tree-id26921 . -1) (undo-tree-id26922 . -1) (undo-tree-id26923 . -1) (undo-tree-id26924 . -1) (#(" " 0 1 (fontified t)) . -66955) (undo-tree-id26925 . -1) (undo-tree-id26926 . -1) (undo-tree-id26927 . -1) (undo-tree-id26928 . -1) (undo-tree-id26929 . -1) (undo-tree-id26930 . -1) (undo-tree-id26931 . -1) (undo-tree-id26932 . -1) (undo-tree-id26933 . -1) (undo-tree-id26934 . -1) (undo-tree-id26935 . -1) (undo-tree-id26936 . -1) (undo-tree-id26937 . -1) (undo-tree-id26938 . -1) (undo-tree-id26939 . -1) (undo-tree-id26940 . -1) (undo-tree-id26941 . -1) (undo-tree-id26942 . -1) (undo-tree-id26943 . -1) (undo-tree-id26944 . -1) (undo-tree-id26945 . -1) (undo-tree-id26946 . -1) (undo-tree-id26947 . -1) (undo-tree-id26948 . -1) (undo-tree-id26949 . -1) (undo-tree-id26950 . -1) (undo-tree-id26951 . -1) (undo-tree-id26952 . -1) (undo-tree-id26953 . -1) (undo-tree-id26954 . -1) (undo-tree-id26955 . -1) (undo-tree-id26956 . -1) (undo-tree-id26957 . -1) (undo-tree-id26958 . -1) (undo-tree-id26959 . -1) (undo-tree-id26960 . -1) (undo-tree-id26961 . -1) (undo-tree-id26962 . -1) (undo-tree-id26963 . -1) (undo-tree-id26964 . -1) (undo-tree-id26965 . -1) (undo-tree-id26966 . -1) (undo-tree-id26967 . -1) (undo-tree-id26968 . -1) (undo-tree-id26969 . -1) (undo-tree-id26970 . -1) (undo-tree-id26971 . -1) (undo-tree-id26972 . -1) (undo-tree-id26973 . -1) (undo-tree-id26974 . -1) (undo-tree-id26975 . -1) (undo-tree-id26976 . -1) (undo-tree-id26977 . -1) (undo-tree-id26978 . -1) (undo-tree-id26979 . -1) (undo-tree-id26980 . -1) (undo-tree-id26981 . -1) (undo-tree-id26982 . -1) (undo-tree-id26983 . -1) (undo-tree-id26984 . -1) (undo-tree-id26985 . -1) (undo-tree-id26986 . -1) (undo-tree-id26987 . -1) (undo-tree-id26988 . -1) (undo-tree-id26989 . -1) (undo-tree-id26990 . -1) (undo-tree-id26991 . -1) (undo-tree-id26992 . -1) (undo-tree-id26993 . -1) (undo-tree-id26994 . -1) (undo-tree-id26995 . -1) (undo-tree-id26996 . -1) (undo-tree-id26997 . -1) (undo-tree-id26998 . -1) (undo-tree-id26999 . -1) (undo-tree-id27000 . -1) (undo-tree-id27001 . -1) (undo-tree-id27002 . -1) (undo-tree-id27003 . -1) (undo-tree-id27004 . -1) (undo-tree-id27005 . -1) (undo-tree-id27006 . -1) (undo-tree-id27007 . -1) (undo-tree-id27008 . -1) (undo-tree-id27009 . -1) (undo-tree-id27010 . -1) (undo-tree-id27011 . -1) (undo-tree-id27012 . -1) (undo-tree-id27013 . -1) (undo-tree-id27014 . -1) (undo-tree-id27015 . -1) (undo-tree-id27016 . -1) (undo-tree-id27017 . -1) (undo-tree-id27018 . -1) (undo-tree-id27019 . -1) (undo-tree-id27020 . -1) (undo-tree-id27021 . -1) (undo-tree-id27022 . -1) (undo-tree-id27023 . -1) (undo-tree-id27024 . -1) (undo-tree-id27025 . -1) (undo-tree-id27026 . -1) (undo-tree-id27027 . -1) (undo-tree-id27028 . -1) (undo-tree-id27029 . -1) (undo-tree-id27030 . -1) (undo-tree-id27031 . -1) (undo-tree-id27032 . -1) (undo-tree-id27033 . -1) (undo-tree-id27034 . -1) (undo-tree-id27035 . -1) (undo-tree-id27036 . -1) (undo-tree-id27037 . -1) (undo-tree-id27038 . -1) (undo-tree-id27039 . -1) (undo-tree-id27040 . -1) (undo-tree-id27041 . -1) (undo-tree-id27042 . -1) (undo-tree-id27043 . -1) (undo-tree-id27044 . -1) (undo-tree-id27045 . -1) (undo-tree-id27046 . -1) (undo-tree-id27047 . -1) (undo-tree-id27048 . -1) (undo-tree-id27049 . -1) (undo-tree-id27050 . -1) (undo-tree-id27051 . -1) (undo-tree-id27052 . -1) (undo-tree-id27053 . -1) (undo-tree-id27054 . -1) (undo-tree-id27055 . -1) (undo-tree-id27056 . -1) (undo-tree-id27057 . -1) (undo-tree-id27058 . -1) (undo-tree-id27059 . -1) (undo-tree-id27060 . -1) (undo-tree-id27061 . -1) (undo-tree-id27062 . -1) (undo-tree-id27063 . -1) (undo-tree-id27064 . -1) (undo-tree-id27065 . -1) (undo-tree-id27066 . -1) (undo-tree-id27067 . -1) (undo-tree-id27068 . -1) (undo-tree-id27069 . -1) (undo-tree-id27070 . -1) (undo-tree-id27071 . -1) (undo-tree-id27072 . -1) (undo-tree-id27073 . -1) (undo-tree-id27074 . -1) (undo-tree-id27075 . -1) (undo-tree-id27076 . -1) (undo-tree-id27077 . -1) (undo-tree-id27078 . -1) (undo-tree-id27079 . -1) (undo-tree-id27080 . -1) (undo-tree-id27081 . -1) (undo-tree-id27082 . -1) (undo-tree-id27083 . -1) (undo-tree-id27084 . -1) (undo-tree-id27085 . -1) (undo-tree-id27086 . -1) (undo-tree-id27087 . -1) (undo-tree-id27088 . -1) (undo-tree-id27089 . -1) (undo-tree-id27090 . -1) (undo-tree-id27091 . -1) (undo-tree-id27092 . -1) (undo-tree-id27093 . -1) (undo-tree-id27094 . -1) (undo-tree-id27095 . -1) (undo-tree-id27096 . -1) (undo-tree-id27097 . -1) (undo-tree-id27098 . -1) (undo-tree-id27099 . -1) (undo-tree-id27100 . -1) (undo-tree-id27101 . -1) (undo-tree-id27102 . -1) (undo-tree-id27103 . -1) (undo-tree-id27104 . -1) (undo-tree-id27105 . -1) (undo-tree-id27106 . -1) (undo-tree-id27107 . -1) (undo-tree-id27108 . -1) (undo-tree-id27109 . -1) (undo-tree-id27110 . -1) (undo-tree-id27111 . -1) (undo-tree-id27112 . -1) (undo-tree-id27113 . -1) (undo-tree-id27114 . -1) (undo-tree-id27115 . -1) (undo-tree-id27116 . -1) (undo-tree-id27117 . -1) (undo-tree-id27118 . -1) (undo-tree-id27119 . -1) (undo-tree-id27120 . -1) (undo-tree-id27121 . -1) (undo-tree-id27122 . -1) (undo-tree-id27123 . -1) (undo-tree-id27124 . -1) (undo-tree-id27125 . -1) (undo-tree-id27126 . -1) (undo-tree-id27127 . -1) (undo-tree-id27128 . -1) (undo-tree-id27129 . -1) (undo-tree-id27130 . -1) (undo-tree-id27131 . -1) (undo-tree-id27132 . -1) (undo-tree-id27133 . -1) (undo-tree-id27134 . -1) (undo-tree-id27135 . -1) (undo-tree-id27136 . -1) (undo-tree-id27137 . -1) (undo-tree-id27138 . -1) (undo-tree-id27139 . -1) (undo-tree-id27140 . -1) (undo-tree-id27141 . -1) (undo-tree-id27142 . -1) (undo-tree-id27143 . -1) (undo-tree-id27144 . -1) (undo-tree-id27145 . -1) (undo-tree-id27146 . -1) (undo-tree-id27147 . -1) (undo-tree-id27148 . -1) (undo-tree-id27149 . -1) (undo-tree-id27150 . -1) (undo-tree-id27151 . -1) (undo-tree-id27152 . -1) (undo-tree-id27153 . -1) (undo-tree-id27154 . -1) (undo-tree-id27155 . -1) (undo-tree-id27156 . -1) (undo-tree-id27157 . -1) (undo-tree-id27158 . -1) (undo-tree-id27159 . -1) (undo-tree-id27160 . -1) (undo-tree-id27161 . -1) (undo-tree-id27162 . -1) (undo-tree-id27163 . -1) (undo-tree-id27164 . -1) (undo-tree-id27165 . -1) (undo-tree-id27166 . -1) (undo-tree-id27167 . -1) (undo-tree-id27168 . -1) (undo-tree-id27169 . -1) (undo-tree-id27170 . -1) (undo-tree-id27171 . -1) (undo-tree-id27172 . -1) (undo-tree-id27173 . -1) (undo-tree-id27174 . -1) (undo-tree-id27175 . -1) (undo-tree-id27176 . -1) (undo-tree-id27177 . -1) (undo-tree-id27178 . -1) (undo-tree-id27179 . -1) (undo-tree-id27180 . -1) (undo-tree-id27181 . -1) (undo-tree-id27182 . -1) (undo-tree-id27183 . -1) (undo-tree-id27184 . -1) (undo-tree-id27185 . -1) (undo-tree-id27186 . -1) (undo-tree-id27187 . -1) (undo-tree-id27188 . -1) (undo-tree-id27189 . -1) (undo-tree-id27190 . -1) (undo-tree-id27191 . -1) (undo-tree-id27192 . -1) (undo-tree-id27193 . -1) (undo-tree-id27194 . -1) (undo-tree-id27195 . -1) (undo-tree-id27196 . -1) (undo-tree-id27197 . -1) (undo-tree-id27198 . -1) (undo-tree-id27199 . -1) (undo-tree-id27200 . -1) (undo-tree-id27201 . -1) (undo-tree-id27202 . -1) (undo-tree-id27203 . -1) (undo-tree-id27204 . -1) (undo-tree-id27205 . -1) (undo-tree-id27206 . -1) (undo-tree-id27207 . -1) (undo-tree-id27208 . -1) (undo-tree-id27209 . -1) (undo-tree-id27210 . -1) (undo-tree-id27211 . -1) (undo-tree-id27212 . -1) (undo-tree-id27213 . -1) (undo-tree-id27214 . -1) (undo-tree-id27215 . -1) (undo-tree-id27216 . -1) (undo-tree-id27217 . -1) (undo-tree-id27218 . -1) (undo-tree-id27219 . -1) (undo-tree-id27220 . -1) (undo-tree-id27221 . -1) (undo-tree-id27222 . -1) (undo-tree-id27223 . -1) (undo-tree-id27224 . -1) (undo-tree-id27225 . -1) (undo-tree-id27226 . -1) (undo-tree-id27227 . -1) (undo-tree-id27228 . -1) (undo-tree-id27229 . -1) (undo-tree-id27230 . -1) (undo-tree-id27231 . -1) (undo-tree-id27232 . -1) (undo-tree-id27233 . -1) (undo-tree-id27234 . -1) (undo-tree-id27235 . -1) (undo-tree-id27236 . -1) (undo-tree-id27237 . -1) (undo-tree-id27238 . -1) (undo-tree-id27239 . -1) (undo-tree-id27240 . -1) (undo-tree-id27241 . -1) (undo-tree-id27242 . -1) (undo-tree-id27243 . -1) (undo-tree-id27244 . -1) (undo-tree-id27245 . -1) (undo-tree-id27246 . -1) (undo-tree-id27247 . -1) (undo-tree-id27248 . -1) (undo-tree-id27249 . -1) (undo-tree-id27250 . -1) (undo-tree-id27251 . -1) (undo-tree-id27252 . -1) (undo-tree-id27253 . -1) (undo-tree-id27254 . -1) (undo-tree-id27255 . -1) (undo-tree-id27256 . -1) (undo-tree-id27257 . -1) (undo-tree-id27258 . -1) (undo-tree-id27259 . -1) (undo-tree-id27260 . -1) (undo-tree-id27261 . -1) (undo-tree-id27262 . -1) (undo-tree-id27263 . -1) (undo-tree-id27264 . -1) (undo-tree-id27265 . -1) (undo-tree-id27266 . -1) (undo-tree-id27267 . -1) (undo-tree-id27268 . -1) (undo-tree-id27269 . -1) (undo-tree-id27270 . -1) (undo-tree-id27271 . -1) (undo-tree-id27272 . -1) (undo-tree-id27273 . -1) (undo-tree-id27274 . -1) (undo-tree-id27275 . -1) (undo-tree-id27276 . -1) (undo-tree-id27277 . -1) (undo-tree-id27278 . -1) (undo-tree-id27279 . -1) (undo-tree-id27280 . -1) (undo-tree-id27281 . -1) (undo-tree-id27282 . -1) (undo-tree-id27283 . -1) (undo-tree-id27284 . -1) (undo-tree-id27285 . -1) (undo-tree-id27286 . -1) (undo-tree-id27287 . -1) (undo-tree-id27288 . -1) (undo-tree-id27289 . -1) (undo-tree-id27290 . -1) (undo-tree-id27291 . -1) (undo-tree-id27292 . -1) (undo-tree-id27293 . -1) (undo-tree-id27294 . -1) (undo-tree-id27295 . -1) (undo-tree-id27296 . -1) (undo-tree-id27297 . -1) (undo-tree-id27298 . -1) (undo-tree-id27299 . -1) (undo-tree-id27300 . -1) (undo-tree-id27301 . -1) (undo-tree-id27302 . -1) (undo-tree-id27303 . -1) (undo-tree-id27304 . -1) (undo-tree-id27305 . -1) (undo-tree-id27306 . -1) (undo-tree-id27307 . -1) (undo-tree-id27308 . -1) (undo-tree-id27309 . -1) (undo-tree-id27310 . -1) (undo-tree-id27311 . -1) (undo-tree-id27312 . -1) (undo-tree-id27313 . -1) (undo-tree-id27314 . -1) (undo-tree-id27315 . -1) (undo-tree-id27316 . -1) (undo-tree-id27317 . -1) (undo-tree-id27318 . -1) (undo-tree-id27319 . -1) (undo-tree-id27320 . -1) (undo-tree-id27321 . -1) (undo-tree-id27322 . -1) (undo-tree-id27323 . -1) (undo-tree-id27324 . -1) (undo-tree-id27325 . -1) (undo-tree-id27326 . -1) (undo-tree-id27327 . -1) (undo-tree-id27328 . -1) (undo-tree-id27329 . -1) (undo-tree-id27330 . -1) (undo-tree-id27331 . -1) (undo-tree-id27332 . -1) (undo-tree-id27333 . -1) (undo-tree-id27334 . -1) (undo-tree-id27335 . -1) (undo-tree-id27336 . -1) (undo-tree-id27337 . -1) (undo-tree-id27338 . -1) (undo-tree-id27339 . -1) (undo-tree-id27340 . -1) (undo-tree-id27341 . -1) (undo-tree-id27342 . -1) (#("t" 0 1 (fontified t)) . -66956) (undo-tree-id27343 . -1) (undo-tree-id27344 . -1) (undo-tree-id27345 . -1) (undo-tree-id27346 . -1) (undo-tree-id27347 . -1) (undo-tree-id27348 . -1) (undo-tree-id27349 . -1) (undo-tree-id27350 . -1) (undo-tree-id27351 . -1) (undo-tree-id27352 . -1) (undo-tree-id27353 . -1) (undo-tree-id27354 . -1) (undo-tree-id27355 . -1) (undo-tree-id27356 . -1) (undo-tree-id27357 . -1) (undo-tree-id27358 . -1) (undo-tree-id27359 . -1) (undo-tree-id27360 . -1) (undo-tree-id27361 . -1) (undo-tree-id27362 . -1) (undo-tree-id27363 . -1) (undo-tree-id27364 . -1) (undo-tree-id27365 . -1) (undo-tree-id27366 . -1) (undo-tree-id27367 . -1) (undo-tree-id27368 . -1) (undo-tree-id27369 . -1) (undo-tree-id27370 . -1) (undo-tree-id27371 . -1) (undo-tree-id27372 . -1) (undo-tree-id27373 . -1) (undo-tree-id27374 . -1) (undo-tree-id27375 . -1) (undo-tree-id27376 . -1) (undo-tree-id27377 . -1) (undo-tree-id27378 . -1) (undo-tree-id27379 . -1) (undo-tree-id27380 . -1) (undo-tree-id27381 . -1) (undo-tree-id27382 . -1) (undo-tree-id27383 . -1) (undo-tree-id27384 . -1) (undo-tree-id27385 . -1) (undo-tree-id27386 . -1) (undo-tree-id27387 . -1) (undo-tree-id27388 . -1) (undo-tree-id27389 . -1) (undo-tree-id27390 . -1) (undo-tree-id27391 . -1) (undo-tree-id27392 . -1) (undo-tree-id27393 . -1) (undo-tree-id27394 . -1) (undo-tree-id27395 . -1) (undo-tree-id27396 . -1) (undo-tree-id27397 . -1) (undo-tree-id27398 . -1) (undo-tree-id27399 . -1) (undo-tree-id27400 . -1) (undo-tree-id27401 . -1) (undo-tree-id27402 . -1) (undo-tree-id27403 . -1) (undo-tree-id27404 . -1) (undo-tree-id27405 . -1) (undo-tree-id27406 . -1) (undo-tree-id27407 . -1) (undo-tree-id27408 . -1) (undo-tree-id27409 . -1) (undo-tree-id27410 . -1) (undo-tree-id27411 . -1) (undo-tree-id27412 . -1) (undo-tree-id27413 . -1) (undo-tree-id27414 . -1) (undo-tree-id27415 . -1) (undo-tree-id27416 . -1) (undo-tree-id27417 . -1) (undo-tree-id27418 . -1) (undo-tree-id27419 . -1) (undo-tree-id27420 . -1) (undo-tree-id27421 . -1) (undo-tree-id27422 . -1) (undo-tree-id27423 . -1) (undo-tree-id27424 . -1) (undo-tree-id27425 . -1) (undo-tree-id27426 . -1) (undo-tree-id27427 . -1) (undo-tree-id27428 . -1) (undo-tree-id27429 . -1) (undo-tree-id27430 . -1) (undo-tree-id27431 . -1) (undo-tree-id27432 . -1) (undo-tree-id27433 . -1) (undo-tree-id27434 . -1) (undo-tree-id27435 . -1) (undo-tree-id27436 . -1) (undo-tree-id27437 . -1) (undo-tree-id27438 . -1) (undo-tree-id27439 . -1) (undo-tree-id27440 . -1) (undo-tree-id27441 . -1) (undo-tree-id27442 . -1) (undo-tree-id27443 . -1) (undo-tree-id27444 . -1) (undo-tree-id27445 . -1) (undo-tree-id27446 . -1) (undo-tree-id27447 . -1) (undo-tree-id27448 . -1) (undo-tree-id27449 . -1) (undo-tree-id27450 . -1) (undo-tree-id27451 . -1) (undo-tree-id27452 . -1) (undo-tree-id27453 . -1) (undo-tree-id27454 . -1) (undo-tree-id27455 . -1) (undo-tree-id27456 . -1) (undo-tree-id27457 . -1) (undo-tree-id27458 . -1) (undo-tree-id27459 . -1) (undo-tree-id27460 . -1) (undo-tree-id27461 . -1) (undo-tree-id27462 . -1) (undo-tree-id27463 . -1) (undo-tree-id27464 . -1) (undo-tree-id27465 . -1) (undo-tree-id27466 . -1) (undo-tree-id27467 . -1) (undo-tree-id27468 . -1) (undo-tree-id27469 . -1) (undo-tree-id27470 . -1) (undo-tree-id27471 . -1) (undo-tree-id27472 . -1) (undo-tree-id27473 . -1) (undo-tree-id27474 . -1) (undo-tree-id27475 . -1) (undo-tree-id27476 . -1) (undo-tree-id27477 . -1) (undo-tree-id27478 . -1) (undo-tree-id27479 . -1) (undo-tree-id27480 . -1) (undo-tree-id27481 . -1) (undo-tree-id27482 . -1) (undo-tree-id27483 . -1) (undo-tree-id27484 . -1) (undo-tree-id27485 . -1) (undo-tree-id27486 . -1) (undo-tree-id27487 . -1) (undo-tree-id27488 . -1) (undo-tree-id27489 . -1) (undo-tree-id27490 . -1) (undo-tree-id27491 . -1) (undo-tree-id27492 . -1) (undo-tree-id27493 . -1) (undo-tree-id27494 . -1) (undo-tree-id27495 . -1) (undo-tree-id27496 . -1) (undo-tree-id27497 . -1) (undo-tree-id27498 . -1) (undo-tree-id27499 . -1) (undo-tree-id27500 . -1) (undo-tree-id27501 . -1) (undo-tree-id27502 . -1) (undo-tree-id27503 . -1) (undo-tree-id27504 . -1) (undo-tree-id27505 . -1) (undo-tree-id27506 . -1) (undo-tree-id27507 . -1) (undo-tree-id27508 . -1) (undo-tree-id27509 . -1) (undo-tree-id27510 . -1) (undo-tree-id27511 . -1) (undo-tree-id27512 . -1) (undo-tree-id27513 . -1) (undo-tree-id27514 . -1) (undo-tree-id27515 . -1) (undo-tree-id27516 . -1) (undo-tree-id27517 . -1) (undo-tree-id27518 . -1) (undo-tree-id27519 . -1) (undo-tree-id27520 . -1) (undo-tree-id27521 . -1) (undo-tree-id27522 . -1) (undo-tree-id27523 . -1) (undo-tree-id27524 . -1) (undo-tree-id27525 . -1) (undo-tree-id27526 . -1) (undo-tree-id27527 . -1) (undo-tree-id27528 . -1) (undo-tree-id27529 . -1) (undo-tree-id27530 . -1) (undo-tree-id27531 . -1) (undo-tree-id27532 . -1) (undo-tree-id27533 . -1) (undo-tree-id27534 . -1) (undo-tree-id27535 . -1) (undo-tree-id27536 . -1) (undo-tree-id27537 . -1) (undo-tree-id27538 . -1) (undo-tree-id27539 . -1) (undo-tree-id27540 . -1) (undo-tree-id27541 . -1) (undo-tree-id27542 . -1) (undo-tree-id27543 . -1) (undo-tree-id27544 . -1) (undo-tree-id27545 . -1) (undo-tree-id27546 . -1) (undo-tree-id27547 . -1) (undo-tree-id27548 . -1) (undo-tree-id27549 . -1) (undo-tree-id27550 . -1) (undo-tree-id27551 . -1) (undo-tree-id27552 . -1) (undo-tree-id27553 . -1) (undo-tree-id27554 . -1) (undo-tree-id27555 . -1) (undo-tree-id27556 . -1) (undo-tree-id27557 . -1) (undo-tree-id27558 . -1) (undo-tree-id27559 . -1) (undo-tree-id27560 . -1) (undo-tree-id27561 . -1) (undo-tree-id27562 . -1) (undo-tree-id27563 . -1) (undo-tree-id27564 . -1) (undo-tree-id27565 . -1) (undo-tree-id27566 . -1) (undo-tree-id27567 . -1) (undo-tree-id27568 . -1) (undo-tree-id27569 . -1) (undo-tree-id27570 . -1) (undo-tree-id27571 . -1) (undo-tree-id27572 . -1) (undo-tree-id27573 . -1) (undo-tree-id27574 . -1) (undo-tree-id27575 . -1) (undo-tree-id27576 . -1) (undo-tree-id27577 . -1) (undo-tree-id27578 . -1) (undo-tree-id27579 . -1) (undo-tree-id27580 . -1) (undo-tree-id27581 . -1) (undo-tree-id27582 . -1) (undo-tree-id27583 . -1) (undo-tree-id27584 . -1) (undo-tree-id27585 . -1) (undo-tree-id27586 . -1) (undo-tree-id27587 . -1) (undo-tree-id27588 . -1) (undo-tree-id27589 . -1) (undo-tree-id27590 . -1) (undo-tree-id27591 . -1) (undo-tree-id27592 . -1) (undo-tree-id27593 . -1) (undo-tree-id27594 . -1) (undo-tree-id27595 . -1) (undo-tree-id27596 . -1) (undo-tree-id27597 . -1) (undo-tree-id27598 . -1) (undo-tree-id27599 . -1) (undo-tree-id27600 . -1) (undo-tree-id27601 . -1) (undo-tree-id27602 . -1) (undo-tree-id27603 . -1) (undo-tree-id27604 . -1) (undo-tree-id27605 . -1) (undo-tree-id27606 . -1) (undo-tree-id27607 . -1) (undo-tree-id27608 . -1) (undo-tree-id27609 . -1) (undo-tree-id27610 . -1) (undo-tree-id27611 . -1) (undo-tree-id27612 . -1) (undo-tree-id27613 . -1) (undo-tree-id27614 . -1) (undo-tree-id27615 . -1) (undo-tree-id27616 . -1) (undo-tree-id27617 . -1) (undo-tree-id27618 . -1) (undo-tree-id27619 . -1) (undo-tree-id27620 . -1) (undo-tree-id27621 . -1) (undo-tree-id27622 . -1) (undo-tree-id27623 . -1) (undo-tree-id27624 . -1) (undo-tree-id27625 . -1) (undo-tree-id27626 . -1) (undo-tree-id27627 . -1) (undo-tree-id27628 . -1) (undo-tree-id27629 . -1) (undo-tree-id27630 . -1) (undo-tree-id27631 . -1) (undo-tree-id27632 . -1) (undo-tree-id27633 . -1) (undo-tree-id27634 . -1) (undo-tree-id27635 . -1) (undo-tree-id27636 . -1) (undo-tree-id27637 . -1) (undo-tree-id27638 . -1) (undo-tree-id27639 . -1) (undo-tree-id27640 . -1) (undo-tree-id27641 . -1) (undo-tree-id27642 . -1) (undo-tree-id27643 . -1) (undo-tree-id27644 . -1) (undo-tree-id27645 . -1) (undo-tree-id27646 . -1) (undo-tree-id27647 . -1) (undo-tree-id27648 . -1) (undo-tree-id27649 . -1) (undo-tree-id27650 . -1) (undo-tree-id27651 . -1) (undo-tree-id27652 . -1) (undo-tree-id27653 . -1) (undo-tree-id27654 . -1) (undo-tree-id27655 . -1) (undo-tree-id27656 . -1) (undo-tree-id27657 . -1) (undo-tree-id27658 . -1) (undo-tree-id27659 . -1) (undo-tree-id27660 . -1) (undo-tree-id27661 . -1) (undo-tree-id27662 . -1) (undo-tree-id27663 . -1) (undo-tree-id27664 . -1) (undo-tree-id27665 . -1) (undo-tree-id27666 . -1) (undo-tree-id27667 . -1) (undo-tree-id27668 . -1) (undo-tree-id27669 . -1) (undo-tree-id27670 . -1) (undo-tree-id27671 . -1) (undo-tree-id27672 . -1) (undo-tree-id27673 . -1) (undo-tree-id27674 . -1) (undo-tree-id27675 . -1) (undo-tree-id27676 . -1) (undo-tree-id27677 . -1) (undo-tree-id27678 . -1) (undo-tree-id27679 . -1) (undo-tree-id27680 . -1) (undo-tree-id27681 . -1) (undo-tree-id27682 . -1) (undo-tree-id27683 . -1) (undo-tree-id27684 . -1) (undo-tree-id27685 . -1) (undo-tree-id27686 . -1) (undo-tree-id27687 . -1) (undo-tree-id27688 . -1) (undo-tree-id27689 . -1) (undo-tree-id27690 . -1) (undo-tree-id27691 . -1) (undo-tree-id27692 . -1) (undo-tree-id27693 . -1) (undo-tree-id27694 . -1) (undo-tree-id27695 . -1) (undo-tree-id27696 . -1) (undo-tree-id27697 . -1) (undo-tree-id27698 . -1) (undo-tree-id27699 . -1) (undo-tree-id27700 . -1) (undo-tree-id27701 . -1) (undo-tree-id27702 . -1) (undo-tree-id27703 . -1) (undo-tree-id27704 . -1) (undo-tree-id27705 . -1) (undo-tree-id27706 . -1) (undo-tree-id27707 . -1) (undo-tree-id27708 . -1) (undo-tree-id27709 . -1) (undo-tree-id27710 . -1) (undo-tree-id27711 . -1) (undo-tree-id27712 . -1) (undo-tree-id27713 . -1) (undo-tree-id27714 . -1) (undo-tree-id27715 . -1) (undo-tree-id27716 . -1) (undo-tree-id27717 . -1) (undo-tree-id27718 . -1) (undo-tree-id27719 . -1) (undo-tree-id27720 . -1) (undo-tree-id27721 . -1) (undo-tree-id27722 . -1) (undo-tree-id27723 . -1) (undo-tree-id27724 . -1) (undo-tree-id27725 . -1) (undo-tree-id27726 . -1) (undo-tree-id27727 . -1) (undo-tree-id27728 . -1) (undo-tree-id27729 . -1) (undo-tree-id27730 . -1) (undo-tree-id27731 . -1) (undo-tree-id27732 . -1) (undo-tree-id27733 . -1) (undo-tree-id27734 . -1) (undo-tree-id27735 . -1) (undo-tree-id27736 . -1) (undo-tree-id27737 . -1) (undo-tree-id27738 . -1) (undo-tree-id27739 . -1) (undo-tree-id27740 . -1) (undo-tree-id27741 . -1) (undo-tree-id27742 . -1) (undo-tree-id27743 . -1) (undo-tree-id27744 . -1) (#("o" 0 1 (fontified t)) . -66957) (undo-tree-id27745 . -1) (undo-tree-id27746 . -1) (undo-tree-id27747 . -1) (undo-tree-id27748 . -1) (undo-tree-id27749 . -1) (undo-tree-id27750 . -1) (undo-tree-id27751 . -1) (undo-tree-id27752 . -1) (undo-tree-id27753 . -1) (undo-tree-id27754 . -1) (undo-tree-id27755 . -1) (undo-tree-id27756 . -1) (undo-tree-id27757 . -1) (undo-tree-id27758 . -1) (undo-tree-id27759 . -1) (undo-tree-id27760 . -1) (undo-tree-id27761 . -1) (undo-tree-id27762 . -1) (undo-tree-id27763 . -1) (undo-tree-id27764 . -1) (undo-tree-id27765 . -1) (undo-tree-id27766 . -1) (undo-tree-id27767 . -1) (undo-tree-id27768 . -1) (undo-tree-id27769 . -1) (undo-tree-id27770 . -1) (undo-tree-id27771 . -1) (undo-tree-id27772 . -1) (undo-tree-id27773 . -1) (undo-tree-id27774 . -1) (undo-tree-id27775 . -1) (undo-tree-id27776 . -1) (undo-tree-id27777 . -1) (undo-tree-id27778 . -1) (undo-tree-id27779 . -1) (undo-tree-id27780 . -1) (undo-tree-id27781 . -1) (undo-tree-id27782 . -1) (undo-tree-id27783 . -1) (undo-tree-id27784 . -1) (undo-tree-id27785 . -1) (undo-tree-id27786 . -1) (undo-tree-id27787 . -1) (undo-tree-id27788 . -1) (undo-tree-id27789 . -1) (undo-tree-id27790 . -1) (undo-tree-id27791 . -1) (undo-tree-id27792 . -1) (undo-tree-id27793 . -1) (undo-tree-id27794 . -1) (undo-tree-id27795 . -1) (undo-tree-id27796 . -1) (undo-tree-id27797 . -1) (undo-tree-id27798 . -1) (undo-tree-id27799 . -1) (undo-tree-id27800 . -1) (undo-tree-id27801 . -1) (undo-tree-id27802 . -1) (undo-tree-id27803 . -1) (undo-tree-id27804 . -1) (undo-tree-id27805 . -1) (undo-tree-id27806 . -1) (undo-tree-id27807 . -1) (undo-tree-id27808 . -1) (undo-tree-id27809 . -1) (undo-tree-id27810 . -1) (undo-tree-id27811 . -1) (undo-tree-id27812 . -1) (undo-tree-id27813 . -1) (undo-tree-id27814 . -1) (undo-tree-id27815 . -1) (undo-tree-id27816 . -1) (undo-tree-id27817 . -1) (undo-tree-id27818 . -1) (undo-tree-id27819 . -1) (undo-tree-id27820 . -1) (undo-tree-id27821 . -1) (undo-tree-id27822 . -1) (undo-tree-id27823 . -1) (undo-tree-id27824 . -1) (undo-tree-id27825 . -1) (undo-tree-id27826 . -1) (undo-tree-id27827 . -1) (undo-tree-id27828 . -1) (undo-tree-id27829 . -1) (undo-tree-id27830 . -1) (undo-tree-id27831 . -1) (undo-tree-id27832 . -1) (undo-tree-id27833 . -1) (undo-tree-id27834 . -1) (undo-tree-id27835 . -1) (undo-tree-id27836 . -1) (undo-tree-id27837 . -1) (undo-tree-id27838 . -1) (undo-tree-id27839 . -1) (undo-tree-id27840 . -1) (undo-tree-id27841 . -1) (undo-tree-id27842 . -1) (undo-tree-id27843 . -1) (undo-tree-id27844 . -1) (undo-tree-id27845 . -1) (undo-tree-id27846 . -1) (undo-tree-id27847 . -1) (undo-tree-id27848 . -1) (undo-tree-id27849 . -1) (undo-tree-id27850 . -1) (undo-tree-id27851 . -1) (undo-tree-id27852 . -1) (undo-tree-id27853 . -1) (undo-tree-id27854 . -1) (undo-tree-id27855 . -1) (undo-tree-id27856 . -1) (undo-tree-id27857 . -1) (undo-tree-id27858 . -1) (undo-tree-id27859 . -1) (undo-tree-id27860 . -1) (undo-tree-id27861 . -1) (undo-tree-id27862 . -1) (undo-tree-id27863 . -1) (undo-tree-id27864 . -1) (undo-tree-id27865 . -1) (undo-tree-id27866 . -1) (undo-tree-id27867 . -1) (undo-tree-id27868 . -1) (undo-tree-id27869 . -1) (undo-tree-id27870 . -1) (undo-tree-id27871 . -1) (undo-tree-id27872 . -1) (undo-tree-id27873 . -1) (undo-tree-id27874 . -1) (undo-tree-id27875 . -1) (undo-tree-id27876 . -1) (undo-tree-id27877 . -1) (undo-tree-id27878 . -1) (undo-tree-id27879 . -1) (undo-tree-id27880 . -1) (undo-tree-id27881 . -1) (undo-tree-id27882 . -1) (undo-tree-id27883 . -1) (undo-tree-id27884 . -1) (undo-tree-id27885 . -1) (undo-tree-id27886 . -1) (undo-tree-id27887 . -1) (undo-tree-id27888 . -1) (undo-tree-id27889 . -1) (undo-tree-id27890 . -1) (undo-tree-id27891 . -1) (undo-tree-id27892 . -1) (undo-tree-id27893 . -1) (undo-tree-id27894 . -1) (undo-tree-id27895 . -1) (undo-tree-id27896 . -1) (undo-tree-id27897 . -1) (undo-tree-id27898 . -1) (undo-tree-id27899 . -1) (undo-tree-id27900 . -1) (undo-tree-id27901 . -1) (undo-tree-id27902 . -1) (undo-tree-id27903 . -1) (undo-tree-id27904 . -1) (undo-tree-id27905 . -1) (undo-tree-id27906 . -1) (undo-tree-id27907 . -1) (undo-tree-id27908 . -1) (undo-tree-id27909 . -1) (undo-tree-id27910 . -1) (undo-tree-id27911 . -1) (undo-tree-id27912 . -1) (undo-tree-id27913 . -1) (undo-tree-id27914 . -1) (undo-tree-id27915 . -1) (undo-tree-id27916 . -1) (undo-tree-id27917 . -1) (undo-tree-id27918 . -1) (undo-tree-id27919 . -1) (undo-tree-id27920 . -1) (undo-tree-id27921 . -1) (undo-tree-id27922 . -1) (undo-tree-id27923 . -1) (undo-tree-id27924 . -1) (undo-tree-id27925 . -1) (undo-tree-id27926 . -1) (undo-tree-id27927 . -1) (undo-tree-id27928 . -1) (undo-tree-id27929 . -1) (undo-tree-id27930 . -1) (undo-tree-id27931 . -1) (undo-tree-id27932 . -1) (undo-tree-id27933 . -1) (undo-tree-id27934 . -1) (undo-tree-id27935 . -1) (undo-tree-id27936 . -1) (undo-tree-id27937 . -1) (undo-tree-id27938 . -1) (undo-tree-id27939 . -1) (undo-tree-id27940 . -1) (undo-tree-id27941 . -1) (undo-tree-id27942 . -1) (undo-tree-id27943 . -1) (undo-tree-id27944 . -1) (undo-tree-id27945 . -1) (undo-tree-id27946 . -1) (undo-tree-id27947 . -1) (undo-tree-id27948 . -1) (undo-tree-id27949 . -1) (undo-tree-id27950 . -1) (undo-tree-id27951 . -1) (undo-tree-id27952 . -1) (undo-tree-id27953 . -1) (undo-tree-id27954 . -1) (undo-tree-id27955 . -1) (undo-tree-id27956 . -1) (undo-tree-id27957 . -1) (undo-tree-id27958 . -1) (undo-tree-id27959 . -1) (undo-tree-id27960 . -1) (undo-tree-id27961 . -1) (undo-tree-id27962 . -1) (undo-tree-id27963 . -1) (undo-tree-id27964 . -1) (undo-tree-id27965 . -1) (undo-tree-id27966 . -1) (undo-tree-id27967 . -1) (undo-tree-id27968 . -1) (undo-tree-id27969 . -1) (undo-tree-id27970 . -1) (undo-tree-id27971 . -1) (undo-tree-id27972 . -1) (undo-tree-id27973 . -1) (undo-tree-id27974 . -1) (undo-tree-id27975 . -1) (undo-tree-id27976 . -1) (undo-tree-id27977 . -1) (undo-tree-id27978 . -1) (undo-tree-id27979 . -1) (undo-tree-id27980 . -1) (undo-tree-id27981 . -1) (undo-tree-id27982 . -1) (undo-tree-id27983 . -1) (undo-tree-id27984 . -1) (undo-tree-id27985 . -1) (undo-tree-id27986 . -1) (undo-tree-id27987 . -1) (undo-tree-id27988 . -1) (undo-tree-id27989 . -1) (undo-tree-id27990 . -1) (undo-tree-id27991 . -1) (undo-tree-id27992 . -1) (undo-tree-id27993 . -1) (undo-tree-id27994 . -1) (undo-tree-id27995 . -1) (undo-tree-id27996 . -1) (undo-tree-id27997 . -1) (undo-tree-id27998 . -1) (undo-tree-id27999 . -1) (undo-tree-id28000 . -1) (undo-tree-id28001 . -1) (undo-tree-id28002 . -1) (undo-tree-id28003 . -1) (undo-tree-id28004 . -1) (undo-tree-id28005 . -1) (undo-tree-id28006 . -1) (undo-tree-id28007 . -1) (undo-tree-id28008 . -1) (undo-tree-id28009 . -1) (undo-tree-id28010 . -1) (undo-tree-id28011 . -1) (undo-tree-id28012 . -1) (undo-tree-id28013 . -1) (undo-tree-id28014 . -1) (undo-tree-id28015 . -1) (undo-tree-id28016 . -1) (undo-tree-id28017 . -1) (undo-tree-id28018 . -1) (undo-tree-id28019 . -1) (undo-tree-id28020 . -1) (undo-tree-id28021 . -1) (undo-tree-id28022 . -1) (undo-tree-id28023 . -1) (undo-tree-id28024 . -1) (undo-tree-id28025 . -1) (undo-tree-id28026 . -1) (undo-tree-id28027 . -1) (undo-tree-id28028 . -1) (undo-tree-id28029 . -1) (undo-tree-id28030 . -1) (undo-tree-id28031 . -1) (undo-tree-id28032 . -1) (undo-tree-id28033 . -1) (undo-tree-id28034 . -1) (undo-tree-id28035 . -1) (undo-tree-id28036 . -1) (undo-tree-id28037 . -1) (undo-tree-id28038 . -1) (undo-tree-id28039 . -1) (undo-tree-id28040 . -1) (undo-tree-id28041 . -1) (undo-tree-id28042 . -1) (undo-tree-id28043 . -1) (undo-tree-id28044 . -1) (undo-tree-id28045 . -1) (undo-tree-id28046 . -1) (undo-tree-id28047 . -1) (undo-tree-id28048 . -1) (undo-tree-id28049 . -1) (undo-tree-id28050 . -1) (undo-tree-id28051 . -1) (undo-tree-id28052 . -1) (undo-tree-id28053 . -1) (undo-tree-id28054 . -1) (undo-tree-id28055 . -1) (undo-tree-id28056 . -1) (undo-tree-id28057 . -1) (undo-tree-id28058 . -1) (undo-tree-id28059 . -1) (undo-tree-id28060 . -1) (undo-tree-id28061 . -1) (undo-tree-id28062 . -1) (undo-tree-id28063 . -1) (undo-tree-id28064 . -1) (undo-tree-id28065 . -1) (undo-tree-id28066 . -1) (undo-tree-id28067 . -1) (undo-tree-id28068 . -1) (undo-tree-id28069 . -1) (undo-tree-id28070 . -1) (undo-tree-id28071 . -1) (undo-tree-id28072 . -1) (undo-tree-id28073 . -1) (undo-tree-id28074 . -1) (undo-tree-id28075 . -1) (undo-tree-id28076 . -1) (undo-tree-id28077 . -1) (undo-tree-id28078 . -1) (undo-tree-id28079 . -1) (undo-tree-id28080 . -1) (undo-tree-id28081 . -1) (undo-tree-id28082 . -1) (undo-tree-id28083 . -1) (undo-tree-id28084 . -1) (undo-tree-id28085 . -1) (undo-tree-id28086 . -1) (undo-tree-id28087 . -1) (undo-tree-id28088 . -1) (undo-tree-id28089 . -1) (undo-tree-id28090 . -1) (undo-tree-id28091 . -1) (undo-tree-id28092 . -1) (undo-tree-id28093 . -1) (undo-tree-id28094 . -1) (undo-tree-id28095 . -1) (undo-tree-id28096 . -1) (undo-tree-id28097 . -1) (undo-tree-id28098 . -1) (undo-tree-id28099 . -1) (undo-tree-id28100 . -1) (undo-tree-id28101 . -1) (undo-tree-id28102 . -1) (undo-tree-id28103 . -1) (undo-tree-id28104 . -1) (undo-tree-id28105 . -1) (undo-tree-id28106 . -1) (undo-tree-id28107 . -1) (undo-tree-id28108 . -1) (undo-tree-id28109 . -1) (undo-tree-id28110 . -1) (undo-tree-id28111 . -1) (undo-tree-id28112 . -1) (undo-tree-id28113 . -1) (undo-tree-id28114 . -1) (undo-tree-id28115 . -1) (undo-tree-id28116 . -1) (undo-tree-id28117 . -1) (undo-tree-id28118 . -1) (undo-tree-id28119 . -1) (undo-tree-id28120 . -1) (undo-tree-id28121 . -1) (undo-tree-id28122 . -1) (undo-tree-id28123 . -1) (undo-tree-id28124 . -1) (undo-tree-id28125 . -1) (undo-tree-id28126 . -1) (undo-tree-id28127 . -1) (undo-tree-id28128 . -1) (undo-tree-id28129 . -1) (undo-tree-id28130 . -1) (#(" " 0 1 (fontified t)) . -66958) (undo-tree-id28131 . -1) (undo-tree-id28132 . -1) (undo-tree-id28133 . -1) (undo-tree-id28134 . -1) (undo-tree-id28135 . -1) (undo-tree-id28136 . -1) (undo-tree-id28137 . -1) (undo-tree-id28138 . -1) (undo-tree-id28139 . -1) (undo-tree-id28140 . -1) (undo-tree-id28141 . -1) (undo-tree-id28142 . -1) (undo-tree-id28143 . -1) (undo-tree-id28144 . -1) (undo-tree-id28145 . -1) (undo-tree-id28146 . -1) (undo-tree-id28147 . -1) (undo-tree-id28148 . -1) (undo-tree-id28149 . -1) (undo-tree-id28150 . -1) (undo-tree-id28151 . -1) (undo-tree-id28152 . -1) (undo-tree-id28153 . -1) (undo-tree-id28154 . -1) (undo-tree-id28155 . -1) (undo-tree-id28156 . -1) (undo-tree-id28157 . -1) (undo-tree-id28158 . -1) (undo-tree-id28159 . -1) (undo-tree-id28160 . -1) (undo-tree-id28161 . -1) (undo-tree-id28162 . -1) (undo-tree-id28163 . -1) (undo-tree-id28164 . -1) (undo-tree-id28165 . -1) (undo-tree-id28166 . -1) (undo-tree-id28167 . -1) (undo-tree-id28168 . -1) (undo-tree-id28169 . -1) (undo-tree-id28170 . -1) (undo-tree-id28171 . -1) (undo-tree-id28172 . -1) (undo-tree-id28173 . -1) (undo-tree-id28174 . -1) (undo-tree-id28175 . -1) (undo-tree-id28176 . -1) (undo-tree-id28177 . -1) (undo-tree-id28178 . -1) (undo-tree-id28179 . -1) (undo-tree-id28180 . -1) (undo-tree-id28181 . -1) (undo-tree-id28182 . -1) (undo-tree-id28183 . -1) (undo-tree-id28184 . -1) (undo-tree-id28185 . -1) (undo-tree-id28186 . -1) (undo-tree-id28187 . -1) (undo-tree-id28188 . -1) (undo-tree-id28189 . -1) (undo-tree-id28190 . -1) (undo-tree-id28191 . -1) (undo-tree-id28192 . -1) (undo-tree-id28193 . -1) (undo-tree-id28194 . -1) (undo-tree-id28195 . -1) (undo-tree-id28196 . -1) (undo-tree-id28197 . -1) (undo-tree-id28198 . -1) (undo-tree-id28199 . -1) (undo-tree-id28200 . -1) (undo-tree-id28201 . -1) (undo-tree-id28202 . -1) (undo-tree-id28203 . -1) (undo-tree-id28204 . -1) (undo-tree-id28205 . -1) (undo-tree-id28206 . -1) (undo-tree-id28207 . -1) (undo-tree-id28208 . -1) (undo-tree-id28209 . -1) (undo-tree-id28210 . -1) (undo-tree-id28211 . -1) (undo-tree-id28212 . -1) (undo-tree-id28213 . -1) (undo-tree-id28214 . -1) (undo-tree-id28215 . -1) (undo-tree-id28216 . -1) (undo-tree-id28217 . -1) (undo-tree-id28218 . -1) (undo-tree-id28219 . -1) (undo-tree-id28220 . -1) (undo-tree-id28221 . -1) (undo-tree-id28222 . -1) (undo-tree-id28223 . -1) (undo-tree-id28224 . -1) (undo-tree-id28225 . -1) (undo-tree-id28226 . -1) (undo-tree-id28227 . -1) (undo-tree-id28228 . -1) (undo-tree-id28229 . -1) (undo-tree-id28230 . -1) (undo-tree-id28231 . -1) (undo-tree-id28232 . -1) (undo-tree-id28233 . -1) (undo-tree-id28234 . -1) (undo-tree-id28235 . -1) (undo-tree-id28236 . -1) (undo-tree-id28237 . -1) (undo-tree-id28238 . -1) (undo-tree-id28239 . -1) (undo-tree-id28240 . -1) (undo-tree-id28241 . -1) (undo-tree-id28242 . -1) (undo-tree-id28243 . -1) (undo-tree-id28244 . -1) (undo-tree-id28245 . -1) (undo-tree-id28246 . -1) (undo-tree-id28247 . -1) (undo-tree-id28248 . -1) (undo-tree-id28249 . -1) (undo-tree-id28250 . -1) (undo-tree-id28251 . -1) (undo-tree-id28252 . -1) (undo-tree-id28253 . -1) (undo-tree-id28254 . -1) (undo-tree-id28255 . -1) (undo-tree-id28256 . -1) (undo-tree-id28257 . -1) (undo-tree-id28258 . -1) (undo-tree-id28259 . -1) (undo-tree-id28260 . -1) (undo-tree-id28261 . -1) (undo-tree-id28262 . -1) (undo-tree-id28263 . -1) (undo-tree-id28264 . -1) (undo-tree-id28265 . -1) (undo-tree-id28266 . -1) (undo-tree-id28267 . -1) (undo-tree-id28268 . -1) (undo-tree-id28269 . -1) (undo-tree-id28270 . -1) (undo-tree-id28271 . -1) (undo-tree-id28272 . -1) (undo-tree-id28273 . -1) (undo-tree-id28274 . -1) (undo-tree-id28275 . -1) (undo-tree-id28276 . -1) (undo-tree-id28277 . -1) (undo-tree-id28278 . -1) (undo-tree-id28279 . -1) (undo-tree-id28280 . -1) (undo-tree-id28281 . -1) (undo-tree-id28282 . -1) (undo-tree-id28283 . -1) (undo-tree-id28284 . -1) (undo-tree-id28285 . -1) (undo-tree-id28286 . -1) (undo-tree-id28287 . -1) (undo-tree-id28288 . -1) (undo-tree-id28289 . -1) (undo-tree-id28290 . -1) (undo-tree-id28291 . -1) (undo-tree-id28292 . -1) (undo-tree-id28293 . -1) (undo-tree-id28294 . -1) (undo-tree-id28295 . -1) (undo-tree-id28296 . -1) (undo-tree-id28297 . -1) (undo-tree-id28298 . -1) (undo-tree-id28299 . -1) (undo-tree-id28300 . -1) (undo-tree-id28301 . -1) (undo-tree-id28302 . -1) (undo-tree-id28303 . -1) (undo-tree-id28304 . -1) (undo-tree-id28305 . -1) (undo-tree-id28306 . -1) (undo-tree-id28307 . -1) (undo-tree-id28308 . -1) (undo-tree-id28309 . -1) (undo-tree-id28310 . -1) (undo-tree-id28311 . -1) (undo-tree-id28312 . -1) (undo-tree-id28313 . -1) (undo-tree-id28314 . -1) (undo-tree-id28315 . -1) (undo-tree-id28316 . -1) (undo-tree-id28317 . -1) (undo-tree-id28318 . -1) (undo-tree-id28319 . -1) (undo-tree-id28320 . -1) (undo-tree-id28321 . -1) (undo-tree-id28322 . -1) (undo-tree-id28323 . -1) (undo-tree-id28324 . -1) (undo-tree-id28325 . -1) (undo-tree-id28326 . -1) (undo-tree-id28327 . -1) (undo-tree-id28328 . -1) (undo-tree-id28329 . -1) (undo-tree-id28330 . -1) (undo-tree-id28331 . -1) (undo-tree-id28332 . -1) (undo-tree-id28333 . -1) (undo-tree-id28334 . -1) (undo-tree-id28335 . -1) (undo-tree-id28336 . -1) (undo-tree-id28337 . -1) (undo-tree-id28338 . -1) (undo-tree-id28339 . -1) (undo-tree-id28340 . -1) (undo-tree-id28341 . -1) (undo-tree-id28342 . -1) (undo-tree-id28343 . -1) (undo-tree-id28344 . -1) (undo-tree-id28345 . -1) (undo-tree-id28346 . -1) (undo-tree-id28347 . -1) (undo-tree-id28348 . -1) (undo-tree-id28349 . -1) (undo-tree-id28350 . -1) (undo-tree-id28351 . -1) (undo-tree-id28352 . -1) (undo-tree-id28353 . -1) (undo-tree-id28354 . -1) (undo-tree-id28355 . -1) (undo-tree-id28356 . -1) (undo-tree-id28357 . -1) (undo-tree-id28358 . -1) (undo-tree-id28359 . -1) (undo-tree-id28360 . -1) (undo-tree-id28361 . -1) (undo-tree-id28362 . -1) (undo-tree-id28363 . -1) (undo-tree-id28364 . -1) (undo-tree-id28365 . -1) (undo-tree-id28366 . -1) (undo-tree-id28367 . -1) (undo-tree-id28368 . -1) (undo-tree-id28369 . -1) (undo-tree-id28370 . -1) (undo-tree-id28371 . -1) (undo-tree-id28372 . -1) (undo-tree-id28373 . -1) (undo-tree-id28374 . -1) (undo-tree-id28375 . -1) (undo-tree-id28376 . -1) (undo-tree-id28377 . -1) (undo-tree-id28378 . -1) (undo-tree-id28379 . -1) (undo-tree-id28380 . -1) (undo-tree-id28381 . -1) (undo-tree-id28382 . -1) (undo-tree-id28383 . -1) (undo-tree-id28384 . -1) (undo-tree-id28385 . -1) (undo-tree-id28386 . -1) (undo-tree-id28387 . -1) (undo-tree-id28388 . -1) (undo-tree-id28389 . -1) (undo-tree-id28390 . -1) (undo-tree-id28391 . -1) (undo-tree-id28392 . -1) (undo-tree-id28393 . -1) (undo-tree-id28394 . -1) (undo-tree-id28395 . -1) (undo-tree-id28396 . -1) (undo-tree-id28397 . -1) (undo-tree-id28398 . -1) (undo-tree-id28399 . -1) (undo-tree-id28400 . -1) (undo-tree-id28401 . -1) (undo-tree-id28402 . -1) (undo-tree-id28403 . -1) (undo-tree-id28404 . -1) (undo-tree-id28405 . -1) (undo-tree-id28406 . -1) (undo-tree-id28407 . -1) (undo-tree-id28408 . -1) (undo-tree-id28409 . -1) (undo-tree-id28410 . -1) (undo-tree-id28411 . -1) (undo-tree-id28412 . -1) (undo-tree-id28413 . -1) (undo-tree-id28414 . -1) (undo-tree-id28415 . -1) (undo-tree-id28416 . -1) (undo-tree-id28417 . -1) (undo-tree-id28418 . -1) (undo-tree-id28419 . -1) (undo-tree-id28420 . -1) (undo-tree-id28421 . -1) (undo-tree-id28422 . -1) (undo-tree-id28423 . -1) (undo-tree-id28424 . -1) (undo-tree-id28425 . -1) (undo-tree-id28426 . -1) (undo-tree-id28427 . -1) (undo-tree-id28428 . -1) (undo-tree-id28429 . -1) (undo-tree-id28430 . -1) (undo-tree-id28431 . -1) (undo-tree-id28432 . -1) (undo-tree-id28433 . -1) (undo-tree-id28434 . -1) (undo-tree-id28435 . -1) (undo-tree-id28436 . -1) (undo-tree-id28437 . -1) (undo-tree-id28438 . -1) (undo-tree-id28439 . -1) (undo-tree-id28440 . -1) (undo-tree-id28441 . -1) (undo-tree-id28442 . -1) (undo-tree-id28443 . -1) (undo-tree-id28444 . -1) (undo-tree-id28445 . -1) (undo-tree-id28446 . -1) (undo-tree-id28447 . -1) (undo-tree-id28448 . -1) (undo-tree-id28449 . -1) (undo-tree-id28450 . -1) (undo-tree-id28451 . -1) (undo-tree-id28452 . -1) (undo-tree-id28453 . -1) (undo-tree-id28454 . -1) (undo-tree-id28455 . -1) (undo-tree-id28456 . -1) (undo-tree-id28457 . -1) (undo-tree-id28458 . -1) (undo-tree-id28459 . -1) (undo-tree-id28460 . -1) (undo-tree-id28461 . -1) (undo-tree-id28462 . -1) (undo-tree-id28463 . -1) (undo-tree-id28464 . -1) (undo-tree-id28465 . -1) (undo-tree-id28466 . -1) (undo-tree-id28467 . -1) (undo-tree-id28468 . -1) (undo-tree-id28469 . -1) (undo-tree-id28470 . -1) (undo-tree-id28471 . -1) (undo-tree-id28472 . -1) (undo-tree-id28473 . -1) (undo-tree-id28474 . -1) (undo-tree-id28475 . -1) (undo-tree-id28476 . -1) (undo-tree-id28477 . -1) (undo-tree-id28478 . -1) (undo-tree-id28479 . -1) (undo-tree-id28480 . -1) (undo-tree-id28481 . -1) (undo-tree-id28482 . -1) (undo-tree-id28483 . -1) (undo-tree-id28484 . -1) (undo-tree-id28485 . -1) (undo-tree-id28486 . -1) (undo-tree-id28487 . -1) (undo-tree-id28488 . -1) (undo-tree-id28489 . -1) (undo-tree-id28490 . -1) (undo-tree-id28491 . -1) (undo-tree-id28492 . -1) (undo-tree-id28493 . -1) (undo-tree-id28494 . -1) (undo-tree-id28495 . -1) (undo-tree-id28496 . -1) (undo-tree-id28497 . -1) (undo-tree-id28498 . -1) (undo-tree-id28499 . -1) (undo-tree-id28500 . -1) (#("g" 0 1 (fontified t)) . -66959) (undo-tree-id28501 . -1) (undo-tree-id28502 . -1) (undo-tree-id28503 . -1) (undo-tree-id28504 . -1) (undo-tree-id28505 . -1) (undo-tree-id28506 . -1) (undo-tree-id28507 . -1) (undo-tree-id28508 . -1) (undo-tree-id28509 . -1) (undo-tree-id28510 . -1) (undo-tree-id28511 . -1) (undo-tree-id28512 . -1) (undo-tree-id28513 . -1) (undo-tree-id28514 . -1) (undo-tree-id28515 . -1) (undo-tree-id28516 . -1) (undo-tree-id28517 . -1) (undo-tree-id28518 . -1) (undo-tree-id28519 . -1) (undo-tree-id28520 . -1) (undo-tree-id28521 . -1) (undo-tree-id28522 . -1) (undo-tree-id28523 . -1) (undo-tree-id28524 . -1) (undo-tree-id28525 . -1) (undo-tree-id28526 . -1) (undo-tree-id28527 . -1) (undo-tree-id28528 . -1) (undo-tree-id28529 . -1) (undo-tree-id28530 . -1) (undo-tree-id28531 . -1) (undo-tree-id28532 . -1) (undo-tree-id28533 . -1) (undo-tree-id28534 . -1) (undo-tree-id28535 . -1) (undo-tree-id28536 . -1) (undo-tree-id28537 . -1) (undo-tree-id28538 . -1) (undo-tree-id28539 . -1) (undo-tree-id28540 . -1) (undo-tree-id28541 . -1) (undo-tree-id28542 . -1) (undo-tree-id28543 . -1) (undo-tree-id28544 . -1) (undo-tree-id28545 . -1) (undo-tree-id28546 . -1) (undo-tree-id28547 . -1) (undo-tree-id28548 . -1) (undo-tree-id28549 . -1) (undo-tree-id28550 . -1) (undo-tree-id28551 . -1) (undo-tree-id28552 . -1) (undo-tree-id28553 . -1) (undo-tree-id28554 . -1) (undo-tree-id28555 . -1) (undo-tree-id28556 . -1) (undo-tree-id28557 . -1) (undo-tree-id28558 . -1) (undo-tree-id28559 . -1) (undo-tree-id28560 . -1) (undo-tree-id28561 . -1) (undo-tree-id28562 . -1) (undo-tree-id28563 . -1) (undo-tree-id28564 . -1) (undo-tree-id28565 . -1) (undo-tree-id28566 . -1) (undo-tree-id28567 . -1) (undo-tree-id28568 . -1) (undo-tree-id28569 . -1) (undo-tree-id28570 . -1) (undo-tree-id28571 . -1) (undo-tree-id28572 . -1) (undo-tree-id28573 . -1) (undo-tree-id28574 . -1) (undo-tree-id28575 . -1) (undo-tree-id28576 . -1) (undo-tree-id28577 . -1) (undo-tree-id28578 . -1) (undo-tree-id28579 . -1) (undo-tree-id28580 . -1) (undo-tree-id28581 . -1) (undo-tree-id28582 . -1) (undo-tree-id28583 . -1) (undo-tree-id28584 . -1) (undo-tree-id28585 . -1) (undo-tree-id28586 . -1) (undo-tree-id28587 . -1) (undo-tree-id28588 . -1) (undo-tree-id28589 . -1) (undo-tree-id28590 . -1) (undo-tree-id28591 . -1) (undo-tree-id28592 . -1) (undo-tree-id28593 . -1) (undo-tree-id28594 . -1) (undo-tree-id28595 . -1) (undo-tree-id28596 . -1) (undo-tree-id28597 . -1) (undo-tree-id28598 . -1) (undo-tree-id28599 . -1) (undo-tree-id28600 . -1) (undo-tree-id28601 . -1) (undo-tree-id28602 . -1) (undo-tree-id28603 . -1) (undo-tree-id28604 . -1) (undo-tree-id28605 . -1) (undo-tree-id28606 . -1) (undo-tree-id28607 . -1) (undo-tree-id28608 . -1) (undo-tree-id28609 . -1) (undo-tree-id28610 . -1) (undo-tree-id28611 . -1) (undo-tree-id28612 . -1) (undo-tree-id28613 . -1) (undo-tree-id28614 . -1) (undo-tree-id28615 . -1) (undo-tree-id28616 . -1) (undo-tree-id28617 . -1) (undo-tree-id28618 . -1) (undo-tree-id28619 . -1) (undo-tree-id28620 . -1) (undo-tree-id28621 . -1) (undo-tree-id28622 . -1) (undo-tree-id28623 . -1) (undo-tree-id28624 . -1) (undo-tree-id28625 . -1) (undo-tree-id28626 . -1) (undo-tree-id28627 . -1) (undo-tree-id28628 . -1) (undo-tree-id28629 . -1) (undo-tree-id28630 . -1) (undo-tree-id28631 . -1) (undo-tree-id28632 . -1) (undo-tree-id28633 . -1) (undo-tree-id28634 . -1) (undo-tree-id28635 . -1) (undo-tree-id28636 . -1) (undo-tree-id28637 . -1) (undo-tree-id28638 . -1) (undo-tree-id28639 . -1) (undo-tree-id28640 . -1) (undo-tree-id28641 . -1) (undo-tree-id28642 . -1) (undo-tree-id28643 . -1) (undo-tree-id28644 . -1) (undo-tree-id28645 . -1) (undo-tree-id28646 . -1) (undo-tree-id28647 . -1) (undo-tree-id28648 . -1) (undo-tree-id28649 . -1) (undo-tree-id28650 . -1) (undo-tree-id28651 . -1) (undo-tree-id28652 . -1) (undo-tree-id28653 . -1) (undo-tree-id28654 . -1) (undo-tree-id28655 . -1) (undo-tree-id28656 . -1) (undo-tree-id28657 . -1) (undo-tree-id28658 . -1) (undo-tree-id28659 . -1) (undo-tree-id28660 . -1) (undo-tree-id28661 . -1) (undo-tree-id28662 . -1) (undo-tree-id28663 . -1) (undo-tree-id28664 . -1) (undo-tree-id28665 . -1) (undo-tree-id28666 . -1) (undo-tree-id28667 . -1) (undo-tree-id28668 . -1) (undo-tree-id28669 . -1) (undo-tree-id28670 . -1) (undo-tree-id28671 . -1) (undo-tree-id28672 . -1) (undo-tree-id28673 . -1) (undo-tree-id28674 . -1) (undo-tree-id28675 . -1) (undo-tree-id28676 . -1) (undo-tree-id28677 . -1) (undo-tree-id28678 . -1) (undo-tree-id28679 . -1) (undo-tree-id28680 . -1) (undo-tree-id28681 . -1) (undo-tree-id28682 . -1) (undo-tree-id28683 . -1) (undo-tree-id28684 . -1) (undo-tree-id28685 . -1) (undo-tree-id28686 . -1) (undo-tree-id28687 . -1) (undo-tree-id28688 . -1) (undo-tree-id28689 . -1) (undo-tree-id28690 . -1) (undo-tree-id28691 . -1) (undo-tree-id28692 . -1) (undo-tree-id28693 . -1) (undo-tree-id28694 . -1) (undo-tree-id28695 . -1) (undo-tree-id28696 . -1) (undo-tree-id28697 . -1) (undo-tree-id28698 . -1) (undo-tree-id28699 . -1) (undo-tree-id28700 . -1) (undo-tree-id28701 . -1) (undo-tree-id28702 . -1) (undo-tree-id28703 . -1) (undo-tree-id28704 . -1) (undo-tree-id28705 . -1) (undo-tree-id28706 . -1) (undo-tree-id28707 . -1) (undo-tree-id28708 . -1) (undo-tree-id28709 . -1) (undo-tree-id28710 . -1) (undo-tree-id28711 . -1) (undo-tree-id28712 . -1) (undo-tree-id28713 . -1) (undo-tree-id28714 . -1) (undo-tree-id28715 . -1) (undo-tree-id28716 . -1) (undo-tree-id28717 . -1) (undo-tree-id28718 . -1) (undo-tree-id28719 . -1) (undo-tree-id28720 . -1) (undo-tree-id28721 . -1) (undo-tree-id28722 . -1) (undo-tree-id28723 . -1) (undo-tree-id28724 . -1) (undo-tree-id28725 . -1) (undo-tree-id28726 . -1) (undo-tree-id28727 . -1) (undo-tree-id28728 . -1) (undo-tree-id28729 . -1) (undo-tree-id28730 . -1) (undo-tree-id28731 . -1) (undo-tree-id28732 . -1) (undo-tree-id28733 . -1) (undo-tree-id28734 . -1) (undo-tree-id28735 . -1) (undo-tree-id28736 . -1) (undo-tree-id28737 . -1) (undo-tree-id28738 . -1) (undo-tree-id28739 . -1) (undo-tree-id28740 . -1) (undo-tree-id28741 . -1) (undo-tree-id28742 . -1) (undo-tree-id28743 . -1) (undo-tree-id28744 . -1) (undo-tree-id28745 . -1) (undo-tree-id28746 . -1) (undo-tree-id28747 . -1) (undo-tree-id28748 . -1) (undo-tree-id28749 . -1) (undo-tree-id28750 . -1) (undo-tree-id28751 . -1) (undo-tree-id28752 . -1) (undo-tree-id28753 . -1) (undo-tree-id28754 . -1) (undo-tree-id28755 . -1) (undo-tree-id28756 . -1) (undo-tree-id28757 . -1) (undo-tree-id28758 . -1) (undo-tree-id28759 . -1) (undo-tree-id28760 . -1) (undo-tree-id28761 . -1) (undo-tree-id28762 . -1) (undo-tree-id28763 . -1) (undo-tree-id28764 . -1) (undo-tree-id28765 . -1) (undo-tree-id28766 . -1) (undo-tree-id28767 . -1) (undo-tree-id28768 . -1) (undo-tree-id28769 . -1) (undo-tree-id28770 . -1) (undo-tree-id28771 . -1) (undo-tree-id28772 . -1) (undo-tree-id28773 . -1) (undo-tree-id28774 . -1) (undo-tree-id28775 . -1) (undo-tree-id28776 . -1) (undo-tree-id28777 . -1) (undo-tree-id28778 . -1) (undo-tree-id28779 . -1) (undo-tree-id28780 . -1) (undo-tree-id28781 . -1) (undo-tree-id28782 . -1) (undo-tree-id28783 . -1) (undo-tree-id28784 . -1) (undo-tree-id28785 . -1) (undo-tree-id28786 . -1) (undo-tree-id28787 . -1) (undo-tree-id28788 . -1) (undo-tree-id28789 . -1) (undo-tree-id28790 . -1) (undo-tree-id28791 . -1) (undo-tree-id28792 . -1) (undo-tree-id28793 . -1) (undo-tree-id28794 . -1) (undo-tree-id28795 . -1) (undo-tree-id28796 . -1) (undo-tree-id28797 . -1) (undo-tree-id28798 . -1) (undo-tree-id28799 . -1) (undo-tree-id28800 . -1) (undo-tree-id28801 . -1) (undo-tree-id28802 . -1) (undo-tree-id28803 . -1) (undo-tree-id28804 . -1) (undo-tree-id28805 . -1) (undo-tree-id28806 . -1) (undo-tree-id28807 . -1) (undo-tree-id28808 . -1) (undo-tree-id28809 . -1) (undo-tree-id28810 . -1) (undo-tree-id28811 . -1) (undo-tree-id28812 . -1) (undo-tree-id28813 . -1) (undo-tree-id28814 . -1) (undo-tree-id28815 . -1) (undo-tree-id28816 . -1) (undo-tree-id28817 . -1) (undo-tree-id28818 . -1) (undo-tree-id28819 . -1) (undo-tree-id28820 . -1) (undo-tree-id28821 . -1) (undo-tree-id28822 . -1) (undo-tree-id28823 . -1) (undo-tree-id28824 . -1) (undo-tree-id28825 . -1) (undo-tree-id28826 . -1) (undo-tree-id28827 . -1) (undo-tree-id28828 . -1) (undo-tree-id28829 . -1) (undo-tree-id28830 . -1) (undo-tree-id28831 . -1) (undo-tree-id28832 . -1) (undo-tree-id28833 . -1) (undo-tree-id28834 . -1) (undo-tree-id28835 . -1) (undo-tree-id28836 . -1) (undo-tree-id28837 . -1) (undo-tree-id28838 . -1) (undo-tree-id28839 . -1) (undo-tree-id28840 . -1) (undo-tree-id28841 . -1) (undo-tree-id28842 . -1) (undo-tree-id28843 . -1) (undo-tree-id28844 . -1) (#("e" 0 1 (fontified t)) . -66960) (undo-tree-id28845 . -1) (undo-tree-id28846 . -1) (undo-tree-id28847 . -1) (undo-tree-id28848 . -1) (undo-tree-id28849 . -1) (undo-tree-id28850 . -1) (undo-tree-id28851 . -1) (undo-tree-id28852 . -1) (undo-tree-id28853 . -1) (undo-tree-id28854 . -1) (undo-tree-id28855 . -1) (undo-tree-id28856 . -1) (undo-tree-id28857 . -1) (undo-tree-id28858 . -1) (undo-tree-id28859 . -1) (undo-tree-id28860 . -1) (undo-tree-id28861 . -1) (undo-tree-id28862 . -1) (undo-tree-id28863 . -1) (undo-tree-id28864 . -1) (undo-tree-id28865 . -1) (undo-tree-id28866 . -1) (undo-tree-id28867 . -1) (undo-tree-id28868 . -1) (undo-tree-id28869 . -1) (undo-tree-id28870 . -1) (undo-tree-id28871 . -1) (undo-tree-id28872 . -1) (undo-tree-id28873 . -1) (undo-tree-id28874 . -1) (undo-tree-id28875 . -1) (undo-tree-id28876 . -1) (undo-tree-id28877 . -1) (undo-tree-id28878 . -1) (undo-tree-id28879 . -1) (undo-tree-id28880 . -1) (undo-tree-id28881 . -1) (undo-tree-id28882 . -1) (undo-tree-id28883 . -1) (undo-tree-id28884 . -1) (undo-tree-id28885 . -1) (undo-tree-id28886 . -1) (undo-tree-id28887 . -1) (undo-tree-id28888 . -1) (undo-tree-id28889 . -1) (undo-tree-id28890 . -1) (undo-tree-id28891 . -1) (undo-tree-id28892 . -1) (undo-tree-id28893 . -1) (undo-tree-id28894 . -1) (undo-tree-id28895 . -1) (undo-tree-id28896 . -1) (undo-tree-id28897 . -1) (undo-tree-id28898 . -1) (undo-tree-id28899 . -1) (undo-tree-id28900 . -1) (undo-tree-id28901 . -1) (undo-tree-id28902 . -1) (undo-tree-id28903 . -1) (undo-tree-id28904 . -1) (undo-tree-id28905 . -1) (undo-tree-id28906 . -1) (undo-tree-id28907 . -1) (undo-tree-id28908 . -1) (undo-tree-id28909 . -1) (undo-tree-id28910 . -1) (undo-tree-id28911 . -1) (undo-tree-id28912 . -1) (undo-tree-id28913 . -1) (undo-tree-id28914 . -1) (undo-tree-id28915 . -1) (undo-tree-id28916 . -1) (undo-tree-id28917 . -1) (undo-tree-id28918 . -1) (undo-tree-id28919 . -1) (undo-tree-id28920 . -1) (undo-tree-id28921 . -1) (undo-tree-id28922 . -1) (undo-tree-id28923 . -1) (undo-tree-id28924 . -1) (undo-tree-id28925 . -1) (undo-tree-id28926 . -1) (undo-tree-id28927 . -1) (undo-tree-id28928 . -1) (undo-tree-id28929 . -1) (undo-tree-id28930 . -1) (undo-tree-id28931 . -1) (undo-tree-id28932 . -1) (undo-tree-id28933 . -1) (undo-tree-id28934 . -1) (undo-tree-id28935 . -1) (undo-tree-id28936 . -1) (undo-tree-id28937 . -1) (undo-tree-id28938 . -1) (undo-tree-id28939 . -1) (undo-tree-id28940 . -1) (undo-tree-id28941 . -1) (undo-tree-id28942 . -1) (undo-tree-id28943 . -1) (undo-tree-id28944 . -1) (undo-tree-id28945 . -1) (undo-tree-id28946 . -1) (undo-tree-id28947 . -1) (undo-tree-id28948 . -1) (undo-tree-id28949 . -1) (undo-tree-id28950 . -1) (undo-tree-id28951 . -1) (undo-tree-id28952 . -1) (undo-tree-id28953 . -1) (undo-tree-id28954 . -1) (undo-tree-id28955 . -1) (undo-tree-id28956 . -1) (undo-tree-id28957 . -1) (undo-tree-id28958 . -1) (undo-tree-id28959 . -1) (undo-tree-id28960 . -1) (undo-tree-id28961 . -1) (undo-tree-id28962 . -1) (undo-tree-id28963 . -1) (undo-tree-id28964 . -1) (undo-tree-id28965 . -1) (undo-tree-id28966 . -1) (undo-tree-id28967 . -1) (undo-tree-id28968 . -1) (undo-tree-id28969 . -1) (undo-tree-id28970 . -1) (undo-tree-id28971 . -1) (undo-tree-id28972 . -1) (undo-tree-id28973 . -1) (undo-tree-id28974 . -1) (undo-tree-id28975 . -1) (undo-tree-id28976 . -1) (undo-tree-id28977 . -1) (undo-tree-id28978 . -1) (undo-tree-id28979 . -1) (undo-tree-id28980 . -1) (undo-tree-id28981 . -1) (undo-tree-id28982 . -1) (undo-tree-id28983 . -1) (undo-tree-id28984 . -1) (undo-tree-id28985 . -1) (undo-tree-id28986 . -1) (undo-tree-id28987 . -1) (undo-tree-id28988 . -1) (undo-tree-id28989 . -1) (undo-tree-id28990 . -1) (undo-tree-id28991 . -1) (undo-tree-id28992 . -1) (undo-tree-id28993 . -1) (undo-tree-id28994 . -1) (undo-tree-id28995 . -1) (undo-tree-id28996 . -1) (undo-tree-id28997 . -1) (undo-tree-id28998 . -1) (undo-tree-id28999 . -1) (undo-tree-id29000 . -1) (undo-tree-id29001 . -1) (undo-tree-id29002 . -1) (undo-tree-id29003 . -1) (undo-tree-id29004 . -1) (undo-tree-id29005 . -1) (undo-tree-id29006 . -1) (undo-tree-id29007 . -1) (undo-tree-id29008 . -1) (undo-tree-id29009 . -1) (undo-tree-id29010 . -1) (undo-tree-id29011 . -1) (undo-tree-id29012 . -1) (undo-tree-id29013 . -1) (undo-tree-id29014 . -1) (undo-tree-id29015 . -1) (undo-tree-id29016 . -1) (undo-tree-id29017 . -1) (undo-tree-id29018 . -1) (undo-tree-id29019 . -1) (undo-tree-id29020 . -1) (undo-tree-id29021 . -1) (undo-tree-id29022 . -1) (undo-tree-id29023 . -1) (undo-tree-id29024 . -1) (undo-tree-id29025 . -1) (undo-tree-id29026 . -1) (undo-tree-id29027 . -1) (undo-tree-id29028 . -1) (undo-tree-id29029 . -1) (undo-tree-id29030 . -1) (undo-tree-id29031 . -1) (undo-tree-id29032 . -1) (undo-tree-id29033 . -1) (undo-tree-id29034 . -1) (undo-tree-id29035 . -1) (undo-tree-id29036 . -1) (undo-tree-id29037 . -1) (undo-tree-id29038 . -1) (undo-tree-id29039 . -1) (undo-tree-id29040 . -1) (undo-tree-id29041 . -1) (undo-tree-id29042 . -1) (undo-tree-id29043 . -1) (undo-tree-id29044 . -1) (undo-tree-id29045 . -1) (undo-tree-id29046 . -1) (undo-tree-id29047 . -1) (undo-tree-id29048 . -1) (undo-tree-id29049 . -1) (undo-tree-id29050 . -1) (undo-tree-id29051 . -1) (undo-tree-id29052 . -1) (undo-tree-id29053 . -1) (undo-tree-id29054 . -1) (undo-tree-id29055 . -1) (undo-tree-id29056 . -1) (undo-tree-id29057 . -1) (undo-tree-id29058 . -1) (undo-tree-id29059 . -1) (undo-tree-id29060 . -1) (undo-tree-id29061 . -1) (undo-tree-id29062 . -1) (undo-tree-id29063 . -1) (undo-tree-id29064 . -1) (undo-tree-id29065 . -1) (undo-tree-id29066 . -1) (undo-tree-id29067 . -1) (undo-tree-id29068 . -1) (undo-tree-id29069 . -1) (undo-tree-id29070 . -1) (undo-tree-id29071 . -1) (undo-tree-id29072 . -1) (undo-tree-id29073 . -1) (undo-tree-id29074 . -1) (undo-tree-id29075 . -1) (undo-tree-id29076 . -1) (undo-tree-id29077 . -1) (undo-tree-id29078 . -1) (undo-tree-id29079 . -1) (undo-tree-id29080 . -1) (undo-tree-id29081 . -1) (undo-tree-id29082 . -1) (undo-tree-id29083 . -1) (undo-tree-id29084 . -1) (undo-tree-id29085 . -1) (undo-tree-id29086 . -1) (undo-tree-id29087 . -1) (undo-tree-id29088 . -1) (undo-tree-id29089 . -1) (undo-tree-id29090 . -1) (undo-tree-id29091 . -1) (undo-tree-id29092 . -1) (undo-tree-id29093 . -1) (undo-tree-id29094 . -1) (undo-tree-id29095 . -1) (undo-tree-id29096 . -1) (undo-tree-id29097 . -1) (undo-tree-id29098 . -1) (undo-tree-id29099 . -1) (undo-tree-id29100 . -1) (undo-tree-id29101 . -1) (undo-tree-id29102 . -1) (undo-tree-id29103 . -1) (undo-tree-id29104 . -1) (undo-tree-id29105 . -1) (undo-tree-id29106 . -1) (undo-tree-id29107 . -1) (undo-tree-id29108 . -1) (undo-tree-id29109 . -1) (undo-tree-id29110 . -1) (undo-tree-id29111 . -1) (undo-tree-id29112 . -1) (undo-tree-id29113 . -1) (undo-tree-id29114 . -1) (undo-tree-id29115 . -1) (undo-tree-id29116 . -1) (undo-tree-id29117 . -1) (undo-tree-id29118 . -1) (undo-tree-id29119 . -1) (undo-tree-id29120 . -1) (undo-tree-id29121 . -1) (undo-tree-id29122 . -1) (undo-tree-id29123 . -1) (undo-tree-id29124 . -1) (undo-tree-id29125 . -1) (undo-tree-id29126 . -1) (undo-tree-id29127 . -1) (undo-tree-id29128 . -1) (undo-tree-id29129 . -1) (undo-tree-id29130 . -1) (undo-tree-id29131 . -1) (undo-tree-id29132 . -1) (undo-tree-id29133 . -1) (undo-tree-id29134 . -1) (undo-tree-id29135 . -1) (undo-tree-id29136 . -1) (undo-tree-id29137 . -1) (undo-tree-id29138 . -1) (undo-tree-id29139 . -1) (undo-tree-id29140 . -1) (undo-tree-id29141 . -1) (undo-tree-id29142 . -1) (undo-tree-id29143 . -1) (undo-tree-id29144 . -1) (undo-tree-id29145 . -1) (undo-tree-id29146 . -1) (undo-tree-id29147 . -1) (undo-tree-id29148 . -1) (undo-tree-id29149 . -1) (undo-tree-id29150 . -1) (undo-tree-id29151 . -1) (undo-tree-id29152 . -1) (undo-tree-id29153 . -1) (undo-tree-id29154 . -1) (undo-tree-id29155 . -1) (undo-tree-id29156 . -1) (undo-tree-id29157 . -1) (undo-tree-id29158 . -1) (undo-tree-id29159 . -1) (undo-tree-id29160 . -1) (undo-tree-id29161 . -1) (undo-tree-id29162 . -1) (undo-tree-id29163 . -1) (undo-tree-id29164 . -1) (undo-tree-id29165 . -1) (undo-tree-id29166 . -1) (undo-tree-id29167 . -1) (undo-tree-id29168 . -1) (undo-tree-id29169 . -1) (undo-tree-id29170 . -1) (undo-tree-id29171 . -1) (undo-tree-id29172 . -1) (#("t" 0 1 (fontified t)) . -66961) (undo-tree-id29173 . -1) (undo-tree-id29174 . -1) (undo-tree-id29175 . -1) (undo-tree-id29176 . -1) (undo-tree-id29177 . -1) (undo-tree-id29178 . -1) (undo-tree-id29179 . -1) (undo-tree-id29180 . -1) (undo-tree-id29181 . -1) (undo-tree-id29182 . -1) (undo-tree-id29183 . -1) (undo-tree-id29184 . -1) (undo-tree-id29185 . -1) (undo-tree-id29186 . -1) (undo-tree-id29187 . -1) (undo-tree-id29188 . -1) (undo-tree-id29189 . -1) (undo-tree-id29190 . -1) (undo-tree-id29191 . -1) (undo-tree-id29192 . -1) (undo-tree-id29193 . -1) (undo-tree-id29194 . -1) (undo-tree-id29195 . -1) (undo-tree-id29196 . -1) (undo-tree-id29197 . -1) (undo-tree-id29198 . -1) (undo-tree-id29199 . -1) (undo-tree-id29200 . -1) (undo-tree-id29201 . -1) (undo-tree-id29202 . -1) (undo-tree-id29203 . -1) (undo-tree-id29204 . -1) (undo-tree-id29205 . -1) (undo-tree-id29206 . -1) (undo-tree-id29207 . -1) (undo-tree-id29208 . -1) (undo-tree-id29209 . -1) (undo-tree-id29210 . -1) (undo-tree-id29211 . -1) (undo-tree-id29212 . -1) (undo-tree-id29213 . -1) (undo-tree-id29214 . -1) (undo-tree-id29215 . -1) (undo-tree-id29216 . -1) (undo-tree-id29217 . -1) (undo-tree-id29218 . -1) (undo-tree-id29219 . -1) (undo-tree-id29220 . -1) (undo-tree-id29221 . -1) (undo-tree-id29222 . -1) (undo-tree-id29223 . -1) (undo-tree-id29224 . -1) (undo-tree-id29225 . -1) (undo-tree-id29226 . -1) (undo-tree-id29227 . -1) (undo-tree-id29228 . -1) (undo-tree-id29229 . -1) (undo-tree-id29230 . -1) (undo-tree-id29231 . -1) (undo-tree-id29232 . -1) (undo-tree-id29233 . -1) (undo-tree-id29234 . -1) (undo-tree-id29235 . -1) (undo-tree-id29236 . -1) (undo-tree-id29237 . -1) (undo-tree-id29238 . -1) (undo-tree-id29239 . -1) (undo-tree-id29240 . -1) (undo-tree-id29241 . -1) (undo-tree-id29242 . -1) (undo-tree-id29243 . -1) (undo-tree-id29244 . -1) (undo-tree-id29245 . -1) (undo-tree-id29246 . -1) (undo-tree-id29247 . -1) (undo-tree-id29248 . -1) (undo-tree-id29249 . -1) (undo-tree-id29250 . -1) (undo-tree-id29251 . -1) (undo-tree-id29252 . -1) (undo-tree-id29253 . -1) (undo-tree-id29254 . -1) (undo-tree-id29255 . -1) (undo-tree-id29256 . -1) (undo-tree-id29257 . -1) (undo-tree-id29258 . -1) (undo-tree-id29259 . -1) (undo-tree-id29260 . -1) (undo-tree-id29261 . -1) (undo-tree-id29262 . -1) (undo-tree-id29263 . -1) (undo-tree-id29264 . -1) (undo-tree-id29265 . -1) (undo-tree-id29266 . -1) (undo-tree-id29267 . -1) (undo-tree-id29268 . -1) (undo-tree-id29269 . -1) (undo-tree-id29270 . -1) (undo-tree-id29271 . -1) (undo-tree-id29272 . -1) (undo-tree-id29273 . -1) (undo-tree-id29274 . -1) (undo-tree-id29275 . -1) (undo-tree-id29276 . -1) (undo-tree-id29277 . -1) (undo-tree-id29278 . -1) (undo-tree-id29279 . -1) (undo-tree-id29280 . -1) (undo-tree-id29281 . -1) (undo-tree-id29282 . -1) (undo-tree-id29283 . -1) (undo-tree-id29284 . -1) (undo-tree-id29285 . -1) (undo-tree-id29286 . -1) (undo-tree-id29287 . -1) (undo-tree-id29288 . -1) (undo-tree-id29289 . -1) (undo-tree-id29290 . -1) (undo-tree-id29291 . -1) (undo-tree-id29292 . -1) (undo-tree-id29293 . -1) (undo-tree-id29294 . -1) (undo-tree-id29295 . -1) (undo-tree-id29296 . -1) (undo-tree-id29297 . -1) (undo-tree-id29298 . -1) (undo-tree-id29299 . -1) (undo-tree-id29300 . -1) (undo-tree-id29301 . -1) (undo-tree-id29302 . -1) (undo-tree-id29303 . -1) (undo-tree-id29304 . -1) (undo-tree-id29305 . -1) (undo-tree-id29306 . -1) (undo-tree-id29307 . -1) (undo-tree-id29308 . -1) (undo-tree-id29309 . -1) (undo-tree-id29310 . -1) (undo-tree-id29311 . -1) (undo-tree-id29312 . -1) (undo-tree-id29313 . -1) (undo-tree-id29314 . -1) (undo-tree-id29315 . -1) (undo-tree-id29316 . -1) (undo-tree-id29317 . -1) (undo-tree-id29318 . -1) (undo-tree-id29319 . -1) (undo-tree-id29320 . -1) (undo-tree-id29321 . -1) (undo-tree-id29322 . -1) (undo-tree-id29323 . -1) (undo-tree-id29324 . -1) (undo-tree-id29325 . -1) (undo-tree-id29326 . -1) (undo-tree-id29327 . -1) (undo-tree-id29328 . -1) (undo-tree-id29329 . -1) (undo-tree-id29330 . -1) (undo-tree-id29331 . -1) (undo-tree-id29332 . -1) (undo-tree-id29333 . -1) (undo-tree-id29334 . -1) (undo-tree-id29335 . -1) (undo-tree-id29336 . -1) (undo-tree-id29337 . -1) (undo-tree-id29338 . -1) (undo-tree-id29339 . -1) (undo-tree-id29340 . -1) (undo-tree-id29341 . -1) (undo-tree-id29342 . -1) (undo-tree-id29343 . -1) (undo-tree-id29344 . -1) (undo-tree-id29345 . -1) (undo-tree-id29346 . -1) (undo-tree-id29347 . -1) (undo-tree-id29348 . -1) (undo-tree-id29349 . -1) (undo-tree-id29350 . -1) (undo-tree-id29351 . -1) (undo-tree-id29352 . -1) (undo-tree-id29353 . -1) (undo-tree-id29354 . -1) (undo-tree-id29355 . -1) (undo-tree-id29356 . -1) (undo-tree-id29357 . -1) (undo-tree-id29358 . -1) (undo-tree-id29359 . -1) (undo-tree-id29360 . -1) (undo-tree-id29361 . -1) (undo-tree-id29362 . -1) (undo-tree-id29363 . -1) (undo-tree-id29364 . -1) (undo-tree-id29365 . -1) (undo-tree-id29366 . -1) (undo-tree-id29367 . -1) (undo-tree-id29368 . -1) (undo-tree-id29369 . -1) (undo-tree-id29370 . -1) (undo-tree-id29371 . -1) (undo-tree-id29372 . -1) (undo-tree-id29373 . -1) (undo-tree-id29374 . -1) (undo-tree-id29375 . -1) (undo-tree-id29376 . -1) (undo-tree-id29377 . -1) (undo-tree-id29378 . -1) (undo-tree-id29379 . -1) (undo-tree-id29380 . -1) (undo-tree-id29381 . -1) (undo-tree-id29382 . -1) (undo-tree-id29383 . -1) (undo-tree-id29384 . -1) (undo-tree-id29385 . -1) (undo-tree-id29386 . -1) (undo-tree-id29387 . -1) (undo-tree-id29388 . -1) (undo-tree-id29389 . -1) (undo-tree-id29390 . -1) (undo-tree-id29391 . -1) (undo-tree-id29392 . -1) (undo-tree-id29393 . -1) (undo-tree-id29394 . -1) (undo-tree-id29395 . -1) (undo-tree-id29396 . -1) (undo-tree-id29397 . -1) (undo-tree-id29398 . -1) (undo-tree-id29399 . -1) (undo-tree-id29400 . -1) (undo-tree-id29401 . -1) (undo-tree-id29402 . -1) (undo-tree-id29403 . -1) (undo-tree-id29404 . -1) (undo-tree-id29405 . -1) (undo-tree-id29406 . -1) (undo-tree-id29407 . -1) (undo-tree-id29408 . -1) (undo-tree-id29409 . -1) (undo-tree-id29410 . -1) (undo-tree-id29411 . -1) (undo-tree-id29412 . -1) (undo-tree-id29413 . -1) (undo-tree-id29414 . -1) (undo-tree-id29415 . -1) (undo-tree-id29416 . -1) (undo-tree-id29417 . -1) (undo-tree-id29418 . -1) (undo-tree-id29419 . -1) (undo-tree-id29420 . -1) (undo-tree-id29421 . -1) (undo-tree-id29422 . -1) (undo-tree-id29423 . -1) (undo-tree-id29424 . -1) (undo-tree-id29425 . -1) (undo-tree-id29426 . -1) (undo-tree-id29427 . -1) (undo-tree-id29428 . -1) (undo-tree-id29429 . -1) (undo-tree-id29430 . -1) (undo-tree-id29431 . -1) (undo-tree-id29432 . -1) (undo-tree-id29433 . -1) (undo-tree-id29434 . -1) (undo-tree-id29435 . -1) (undo-tree-id29436 . -1) (undo-tree-id29437 . -1) (undo-tree-id29438 . -1) (undo-tree-id29439 . -1) (undo-tree-id29440 . -1) (undo-tree-id29441 . -1) (undo-tree-id29442 . -1) (undo-tree-id29443 . -1) (undo-tree-id29444 . -1) (undo-tree-id29445 . -1) (undo-tree-id29446 . -1) (undo-tree-id29447 . -1) (undo-tree-id29448 . -1) (undo-tree-id29449 . -1) (undo-tree-id29450 . -1) (undo-tree-id29451 . -1) (undo-tree-id29452 . -1) (undo-tree-id29453 . -1) (undo-tree-id29454 . -1) (undo-tree-id29455 . -1) (undo-tree-id29456 . -1) (undo-tree-id29457 . -1) (undo-tree-id29458 . -1) (undo-tree-id29459 . -1) (undo-tree-id29460 . -1) (undo-tree-id29461 . -1) (undo-tree-id29462 . -1) (undo-tree-id29463 . -1) (undo-tree-id29464 . -1) (undo-tree-id29465 . -1) (undo-tree-id29466 . -1) (undo-tree-id29467 . -1) (undo-tree-id29468 . -1) (undo-tree-id29469 . -1) (undo-tree-id29470 . -1) (undo-tree-id29471 . -1) (undo-tree-id29472 . -1) (undo-tree-id29473 . -1) (undo-tree-id29474 . -1) (undo-tree-id29475 . -1) (undo-tree-id29476 . -1) (undo-tree-id29477 . -1) (undo-tree-id29478 . -1) (undo-tree-id29479 . -1) (#(" " 0 1 (fontified t)) . -66962) (undo-tree-id29480 . -1) (undo-tree-id29481 . -1) (undo-tree-id29482 . -1) (undo-tree-id29483 . -1) (undo-tree-id29484 . -1) (undo-tree-id29485 . -1) (undo-tree-id29486 . -1) (undo-tree-id29487 . -1) (undo-tree-id29488 . -1) (undo-tree-id29489 . -1) (undo-tree-id29490 . -1) (undo-tree-id29491 . -1) (undo-tree-id29492 . -1) (undo-tree-id29493 . -1) (undo-tree-id29494 . -1) (undo-tree-id29495 . -1) (undo-tree-id29496 . -1) (undo-tree-id29497 . -1) (undo-tree-id29498 . -1) (undo-tree-id29499 . -1) (undo-tree-id29500 . -1) (undo-tree-id29501 . -1) (undo-tree-id29502 . -1) (undo-tree-id29503 . -1) (undo-tree-id29504 . -1) (undo-tree-id29505 . -1) (undo-tree-id29506 . -1) (undo-tree-id29507 . -1) (undo-tree-id29508 . -1) (undo-tree-id29509 . -1) (undo-tree-id29510 . -1) (undo-tree-id29511 . -1) (undo-tree-id29512 . -1) (undo-tree-id29513 . -1) (undo-tree-id29514 . -1) (undo-tree-id29515 . -1) (undo-tree-id29516 . -1) (undo-tree-id29517 . -1) (undo-tree-id29518 . -1) (undo-tree-id29519 . -1) (undo-tree-id29520 . -1) (undo-tree-id29521 . -1) (undo-tree-id29522 . -1) (undo-tree-id29523 . -1) (undo-tree-id29524 . -1) (undo-tree-id29525 . -1) (undo-tree-id29526 . -1) (undo-tree-id29527 . -1) (undo-tree-id29528 . -1) (undo-tree-id29529 . -1) (undo-tree-id29530 . -1) (undo-tree-id29531 . -1) (undo-tree-id29532 . -1) (undo-tree-id29533 . -1) (undo-tree-id29534 . -1) (undo-tree-id29535 . -1) (undo-tree-id29536 . -1) (undo-tree-id29537 . -1) (undo-tree-id29538 . -1) (undo-tree-id29539 . -1) (undo-tree-id29540 . -1) (undo-tree-id29541 . -1) (undo-tree-id29542 . -1) (undo-tree-id29543 . -1) (undo-tree-id29544 . -1) (undo-tree-id29545 . -1) (undo-tree-id29546 . -1) (undo-tree-id29547 . -1) (undo-tree-id29548 . -1) (undo-tree-id29549 . -1) (undo-tree-id29550 . -1) (undo-tree-id29551 . -1) (undo-tree-id29552 . -1) (undo-tree-id29553 . -1) (undo-tree-id29554 . -1) (undo-tree-id29555 . -1) (undo-tree-id29556 . -1) (undo-tree-id29557 . -1) (undo-tree-id29558 . -1) (undo-tree-id29559 . -1) (undo-tree-id29560 . -1) (undo-tree-id29561 . -1) (undo-tree-id29562 . -1) (undo-tree-id29563 . -1) (undo-tree-id29564 . -1) (undo-tree-id29565 . -1) (undo-tree-id29566 . -1) (undo-tree-id29567 . -1) (undo-tree-id29568 . -1) (undo-tree-id29569 . -1) (undo-tree-id29570 . -1) (undo-tree-id29571 . -1) (undo-tree-id29572 . -1) (undo-tree-id29573 . -1) (undo-tree-id29574 . -1) (undo-tree-id29575 . -1) (undo-tree-id29576 . -1) (undo-tree-id29577 . -1) (undo-tree-id29578 . -1) (undo-tree-id29579 . -1) (undo-tree-id29580 . -1) (undo-tree-id29581 . -1) (undo-tree-id29582 . -1) (undo-tree-id29583 . -1) (undo-tree-id29584 . -1) (undo-tree-id29585 . -1) (undo-tree-id29586 . -1) (undo-tree-id29587 . -1) (undo-tree-id29588 . -1) (undo-tree-id29589 . -1) (undo-tree-id29590 . -1) (undo-tree-id29591 . -1) (undo-tree-id29592 . -1) (undo-tree-id29593 . -1) (undo-tree-id29594 . -1) (undo-tree-id29595 . -1) (undo-tree-id29596 . -1) (undo-tree-id29597 . -1) (undo-tree-id29598 . -1) (undo-tree-id29599 . -1) (undo-tree-id29600 . -1) (undo-tree-id29601 . -1) (undo-tree-id29602 . -1) (undo-tree-id29603 . -1) (undo-tree-id29604 . -1) (undo-tree-id29605 . -1) (undo-tree-id29606 . -1) (undo-tree-id29607 . -1) (undo-tree-id29608 . -1) (undo-tree-id29609 . -1) (undo-tree-id29610 . -1) (undo-tree-id29611 . -1) (undo-tree-id29612 . -1) (undo-tree-id29613 . -1) (undo-tree-id29614 . -1) (undo-tree-id29615 . -1) (undo-tree-id29616 . -1) (undo-tree-id29617 . -1) (undo-tree-id29618 . -1) (undo-tree-id29619 . -1) (undo-tree-id29620 . -1) (undo-tree-id29621 . -1) (undo-tree-id29622 . -1) (undo-tree-id29623 . -1) (undo-tree-id29624 . -1) (undo-tree-id29625 . -1) (undo-tree-id29626 . -1) (undo-tree-id29627 . -1) (undo-tree-id29628 . -1) (undo-tree-id29629 . -1) (undo-tree-id29630 . -1) (undo-tree-id29631 . -1) (undo-tree-id29632 . -1) (undo-tree-id29633 . -1) (undo-tree-id29634 . -1) (undo-tree-id29635 . -1) (undo-tree-id29636 . -1) (undo-tree-id29637 . -1) (undo-tree-id29638 . -1) (undo-tree-id29639 . -1) (undo-tree-id29640 . -1) (undo-tree-id29641 . -1) (undo-tree-id29642 . -1) (undo-tree-id29643 . -1) (undo-tree-id29644 . -1) (undo-tree-id29645 . -1) (undo-tree-id29646 . -1) (undo-tree-id29647 . -1) (undo-tree-id29648 . -1) (undo-tree-id29649 . -1) (undo-tree-id29650 . -1) (undo-tree-id29651 . -1) (undo-tree-id29652 . -1) (undo-tree-id29653 . -1) (undo-tree-id29654 . -1) (undo-tree-id29655 . -1) (undo-tree-id29656 . -1) (undo-tree-id29657 . -1) (undo-tree-id29658 . -1) (undo-tree-id29659 . -1) (undo-tree-id29660 . -1) (undo-tree-id29661 . -1) (undo-tree-id29662 . -1) (undo-tree-id29663 . -1) (undo-tree-id29664 . -1) (undo-tree-id29665 . -1) (undo-tree-id29666 . -1) (undo-tree-id29667 . -1) (undo-tree-id29668 . -1) (undo-tree-id29669 . -1) (undo-tree-id29670 . -1) (undo-tree-id29671 . -1) (undo-tree-id29672 . -1) (undo-tree-id29673 . -1) (undo-tree-id29674 . -1) (undo-tree-id29675 . -1) (undo-tree-id29676 . -1) (undo-tree-id29677 . -1) (undo-tree-id29678 . -1) (undo-tree-id29679 . -1) (undo-tree-id29680 . -1) (undo-tree-id29681 . -1) (undo-tree-id29682 . -1) (undo-tree-id29683 . -1) (undo-tree-id29684 . -1) (undo-tree-id29685 . -1) (undo-tree-id29686 . -1) (undo-tree-id29687 . -1) (undo-tree-id29688 . -1) (undo-tree-id29689 . -1) (undo-tree-id29690 . -1) (undo-tree-id29691 . -1) (undo-tree-id29692 . -1) (undo-tree-id29693 . -1) (undo-tree-id29694 . -1) (undo-tree-id29695 . -1) (undo-tree-id29696 . -1) (undo-tree-id29697 . -1) (undo-tree-id29698 . -1) (undo-tree-id29699 . -1) (undo-tree-id29700 . -1) (undo-tree-id29701 . -1) (undo-tree-id29702 . -1) (undo-tree-id29703 . -1) (undo-tree-id29704 . -1) (undo-tree-id29705 . -1) (undo-tree-id29706 . -1) (undo-tree-id29707 . -1) (undo-tree-id29708 . -1) (undo-tree-id29709 . -1) (undo-tree-id29710 . -1) (undo-tree-id29711 . -1) (undo-tree-id29712 . -1) (undo-tree-id29713 . -1) (undo-tree-id29714 . -1) (undo-tree-id29715 . -1) (undo-tree-id29716 . -1) (undo-tree-id29717 . -1) (undo-tree-id29718 . -1) (undo-tree-id29719 . -1) (undo-tree-id29720 . -1) (undo-tree-id29721 . -1) (undo-tree-id29722 . -1) (undo-tree-id29723 . -1) (undo-tree-id29724 . -1) (undo-tree-id29725 . -1) (undo-tree-id29726 . -1) (undo-tree-id29727 . -1) (undo-tree-id29728 . -1) (undo-tree-id29729 . -1) (undo-tree-id29730 . -1) (undo-tree-id29731 . -1) (undo-tree-id29732 . -1) (undo-tree-id29733 . -1) (undo-tree-id29734 . -1) (undo-tree-id29735 . -1) (undo-tree-id29736 . -1) (undo-tree-id29737 . -1) (undo-tree-id29738 . -1) (undo-tree-id29739 . -1) (undo-tree-id29740 . -1) (undo-tree-id29741 . -1) (undo-tree-id29742 . -1) (undo-tree-id29743 . -1) (undo-tree-id29744 . -1) (undo-tree-id29745 . -1) (undo-tree-id29746 . -1) (undo-tree-id29747 . -1) (undo-tree-id29748 . -1) (undo-tree-id29749 . -1) (undo-tree-id29750 . -1) (undo-tree-id29751 . -1) (undo-tree-id29752 . -1) (undo-tree-id29753 . -1) (undo-tree-id29754 . -1) (undo-tree-id29755 . -1) (undo-tree-id29756 . -1) (undo-tree-id29757 . -1) (undo-tree-id29758 . -1) (undo-tree-id29759 . -1) (undo-tree-id29760 . -1) (undo-tree-id29761 . -1) (undo-tree-id29762 . -1) (undo-tree-id29763 . -1) (undo-tree-id29764 . -1) (undo-tree-id29765 . -1) (undo-tree-id29766 . -1) (undo-tree-id29767 . -1) (undo-tree-id29768 . -1) (undo-tree-id29769 . -1) (undo-tree-id29770 . -1) (#("b" 0 1 (fontified t)) . -66963) (undo-tree-id29771 . -1) (undo-tree-id29772 . -1) (undo-tree-id29773 . -1) (undo-tree-id29774 . -1) (undo-tree-id29775 . -1) (undo-tree-id29776 . -1) (undo-tree-id29777 . -1) (undo-tree-id29778 . -1) (undo-tree-id29779 . -1) (undo-tree-id29780 . -1) (undo-tree-id29781 . -1) (undo-tree-id29782 . -1) (undo-tree-id29783 . -1) (undo-tree-id29784 . -1) (undo-tree-id29785 . -1) (undo-tree-id29786 . -1) (undo-tree-id29787 . -1) (undo-tree-id29788 . -1) (undo-tree-id29789 . -1) (undo-tree-id29790 . -1) (undo-tree-id29791 . -1) (undo-tree-id29792 . -1) (undo-tree-id29793 . -1) (undo-tree-id29794 . -1) (undo-tree-id29795 . -1) (undo-tree-id29796 . -1) (undo-tree-id29797 . -1) (undo-tree-id29798 . -1) (undo-tree-id29799 . -1) (undo-tree-id29800 . -1) (undo-tree-id29801 . -1) (undo-tree-id29802 . -1) (undo-tree-id29803 . -1) (undo-tree-id29804 . -1) (undo-tree-id29805 . -1) (undo-tree-id29806 . -1) (undo-tree-id29807 . -1) (undo-tree-id29808 . -1) (undo-tree-id29809 . -1) (undo-tree-id29810 . -1) (undo-tree-id29811 . -1) (undo-tree-id29812 . -1) (undo-tree-id29813 . -1) (undo-tree-id29814 . -1) (undo-tree-id29815 . -1) (undo-tree-id29816 . -1) (undo-tree-id29817 . -1) (undo-tree-id29818 . -1) (undo-tree-id29819 . -1) (undo-tree-id29820 . -1) (undo-tree-id29821 . -1) (undo-tree-id29822 . -1) (undo-tree-id29823 . -1) (undo-tree-id29824 . -1) (undo-tree-id29825 . -1) (undo-tree-id29826 . -1) (undo-tree-id29827 . -1) (undo-tree-id29828 . -1) (undo-tree-id29829 . -1) (undo-tree-id29830 . -1) (undo-tree-id29831 . -1) (undo-tree-id29832 . -1) (undo-tree-id29833 . -1) (undo-tree-id29834 . -1) (undo-tree-id29835 . -1) (undo-tree-id29836 . -1) (undo-tree-id29837 . -1) (undo-tree-id29838 . -1) (undo-tree-id29839 . -1) (undo-tree-id29840 . -1) (undo-tree-id29841 . -1) (undo-tree-id29842 . -1) (undo-tree-id29843 . -1) (undo-tree-id29844 . -1) (undo-tree-id29845 . -1) (undo-tree-id29846 . -1) (undo-tree-id29847 . -1) (undo-tree-id29848 . -1) (undo-tree-id29849 . -1) (undo-tree-id29850 . -1) (undo-tree-id29851 . -1) (undo-tree-id29852 . -1) (undo-tree-id29853 . -1) (undo-tree-id29854 . -1) (undo-tree-id29855 . -1) (undo-tree-id29856 . -1) (undo-tree-id29857 . -1) (undo-tree-id29858 . -1) (undo-tree-id29859 . -1) (undo-tree-id29860 . -1) (undo-tree-id29861 . -1) (undo-tree-id29862 . -1) (undo-tree-id29863 . -1) (undo-tree-id29864 . -1) (undo-tree-id29865 . -1) (undo-tree-id29866 . -1) (undo-tree-id29867 . -1) (undo-tree-id29868 . -1) (undo-tree-id29869 . -1) (undo-tree-id29870 . -1) (undo-tree-id29871 . -1) (undo-tree-id29872 . -1) (undo-tree-id29873 . -1) (undo-tree-id29874 . -1) (undo-tree-id29875 . -1) (undo-tree-id29876 . -1) (undo-tree-id29877 . -1) (undo-tree-id29878 . -1) (undo-tree-id29879 . -1) (undo-tree-id29880 . -1) (undo-tree-id29881 . -1) (undo-tree-id29882 . -1) (undo-tree-id29883 . -1) (undo-tree-id29884 . -1) (undo-tree-id29885 . -1) (undo-tree-id29886 . -1) (undo-tree-id29887 . -1) (undo-tree-id29888 . -1) (undo-tree-id29889 . -1) (undo-tree-id29890 . -1) (undo-tree-id29891 . -1) (undo-tree-id29892 . -1) (undo-tree-id29893 . -1) (undo-tree-id29894 . -1) (undo-tree-id29895 . -1) (undo-tree-id29896 . -1) (undo-tree-id29897 . -1) (undo-tree-id29898 . -1) (undo-tree-id29899 . -1) (undo-tree-id29900 . -1) (undo-tree-id29901 . -1) (undo-tree-id29902 . -1) (undo-tree-id29903 . -1) (undo-tree-id29904 . -1) (undo-tree-id29905 . -1) (undo-tree-id29906 . -1) (undo-tree-id29907 . -1) (undo-tree-id29908 . -1) (undo-tree-id29909 . -1) (undo-tree-id29910 . -1) (undo-tree-id29911 . -1) (undo-tree-id29912 . -1) (undo-tree-id29913 . -1) (undo-tree-id29914 . -1) (undo-tree-id29915 . -1) (undo-tree-id29916 . -1) (undo-tree-id29917 . -1) (undo-tree-id29918 . -1) (undo-tree-id29919 . -1) (undo-tree-id29920 . -1) (undo-tree-id29921 . -1) (undo-tree-id29922 . -1) (undo-tree-id29923 . -1) (undo-tree-id29924 . -1) (undo-tree-id29925 . -1) (undo-tree-id29926 . -1) (undo-tree-id29927 . -1) (undo-tree-id29928 . -1) (undo-tree-id29929 . -1) (undo-tree-id29930 . -1) (undo-tree-id29931 . -1) (undo-tree-id29932 . -1) (undo-tree-id29933 . -1) (undo-tree-id29934 . -1) (undo-tree-id29935 . -1) (undo-tree-id29936 . -1) (undo-tree-id29937 . -1) (undo-tree-id29938 . -1) (undo-tree-id29939 . -1) (undo-tree-id29940 . -1) (undo-tree-id29941 . -1) (undo-tree-id29942 . -1) (undo-tree-id29943 . -1) (undo-tree-id29944 . -1) (undo-tree-id29945 . -1) (undo-tree-id29946 . -1) (undo-tree-id29947 . -1) (undo-tree-id29948 . -1) (undo-tree-id29949 . -1) (undo-tree-id29950 . -1) (undo-tree-id29951 . -1) (undo-tree-id29952 . -1) (undo-tree-id29953 . -1) (undo-tree-id29954 . -1) (undo-tree-id29955 . -1) (undo-tree-id29956 . -1) (undo-tree-id29957 . -1) (undo-tree-id29958 . -1) (undo-tree-id29959 . -1) (undo-tree-id29960 . -1) (undo-tree-id29961 . -1) (undo-tree-id29962 . -1) (undo-tree-id29963 . -1) (undo-tree-id29964 . -1) (undo-tree-id29965 . -1) (undo-tree-id29966 . -1) (undo-tree-id29967 . -1) (undo-tree-id29968 . -1) (undo-tree-id29969 . -1) (undo-tree-id29970 . -1) (undo-tree-id29971 . -1) (undo-tree-id29972 . -1) (undo-tree-id29973 . -1) (undo-tree-id29974 . -1) (undo-tree-id29975 . -1) (undo-tree-id29976 . -1) (undo-tree-id29977 . -1) (undo-tree-id29978 . -1) (undo-tree-id29979 . -1) (undo-tree-id29980 . -1) (undo-tree-id29981 . -1) (undo-tree-id29982 . -1) (undo-tree-id29983 . -1) (undo-tree-id29984 . -1) (undo-tree-id29985 . -1) (undo-tree-id29986 . -1) (undo-tree-id29987 . -1) (undo-tree-id29988 . -1) (undo-tree-id29989 . -1) (undo-tree-id29990 . -1) (undo-tree-id29991 . -1) (undo-tree-id29992 . -1) (undo-tree-id29993 . -1) (undo-tree-id29994 . -1) (undo-tree-id29995 . -1) (undo-tree-id29996 . -1) (undo-tree-id29997 . -1) (undo-tree-id29998 . -1) (undo-tree-id29999 . -1) (undo-tree-id30000 . -1) (undo-tree-id30001 . -1) (undo-tree-id30002 . -1) (undo-tree-id30003 . -1) (undo-tree-id30004 . -1) (undo-tree-id30005 . -1) (undo-tree-id30006 . -1) (undo-tree-id30007 . -1) (undo-tree-id30008 . -1) (undo-tree-id30009 . -1) (undo-tree-id30010 . -1) (undo-tree-id30011 . -1) (undo-tree-id30012 . -1) (undo-tree-id30013 . -1) (undo-tree-id30014 . -1) (undo-tree-id30015 . -1) (undo-tree-id30016 . -1) (undo-tree-id30017 . -1) (undo-tree-id30018 . -1) (undo-tree-id30019 . -1) (undo-tree-id30020 . -1) (undo-tree-id30021 . -1) (undo-tree-id30022 . -1) (undo-tree-id30023 . -1) (undo-tree-id30024 . -1) (undo-tree-id30025 . -1) (undo-tree-id30026 . -1) (undo-tree-id30027 . -1) (undo-tree-id30028 . -1) (undo-tree-id30029 . -1) (undo-tree-id30030 . -1) (undo-tree-id30031 . -1) (undo-tree-id30032 . -1) (undo-tree-id30033 . -1) (undo-tree-id30034 . -1) (undo-tree-id30035 . -1) (undo-tree-id30036 . -1) (undo-tree-id30037 . -1) (undo-tree-id30038 . -1) (undo-tree-id30039 . -1) (undo-tree-id30040 . -1) (#("e" 0 1 (fontified t)) . -66964) (undo-tree-id30041 . -1) (undo-tree-id30042 . -1) (undo-tree-id30043 . -1) (undo-tree-id30044 . -1) (undo-tree-id30045 . -1) (undo-tree-id30046 . -1) (undo-tree-id30047 . -1) (undo-tree-id30048 . -1) (undo-tree-id30049 . -1) (undo-tree-id30050 . -1) (undo-tree-id30051 . -1) (undo-tree-id30052 . -1) (undo-tree-id30053 . -1) (undo-tree-id30054 . -1) (undo-tree-id30055 . -1) (undo-tree-id30056 . -1) (undo-tree-id30057 . -1) (undo-tree-id30058 . -1) (undo-tree-id30059 . -1) (undo-tree-id30060 . -1) (undo-tree-id30061 . -1) (undo-tree-id30062 . -1) (undo-tree-id30063 . -1) (undo-tree-id30064 . -1) (undo-tree-id30065 . -1) (undo-tree-id30066 . -1) (undo-tree-id30067 . -1) (undo-tree-id30068 . -1) (undo-tree-id30069 . -1) (undo-tree-id30070 . -1) (undo-tree-id30071 . -1) (undo-tree-id30072 . -1) (undo-tree-id30073 . -1) (undo-tree-id30074 . -1) (undo-tree-id30075 . -1) (undo-tree-id30076 . -1) (undo-tree-id30077 . -1) (undo-tree-id30078 . -1) (undo-tree-id30079 . -1) (undo-tree-id30080 . -1) (undo-tree-id30081 . -1) (undo-tree-id30082 . -1) (undo-tree-id30083 . -1) (undo-tree-id30084 . -1) (undo-tree-id30085 . -1) (undo-tree-id30086 . -1) (undo-tree-id30087 . -1) (undo-tree-id30088 . -1) (undo-tree-id30089 . -1) (undo-tree-id30090 . -1) (undo-tree-id30091 . -1) (undo-tree-id30092 . -1) (undo-tree-id30093 . -1) (undo-tree-id30094 . -1) (undo-tree-id30095 . -1) (undo-tree-id30096 . -1) (undo-tree-id30097 . -1) (undo-tree-id30098 . -1) (undo-tree-id30099 . -1) (undo-tree-id30100 . -1) (undo-tree-id30101 . -1) (undo-tree-id30102 . -1) (undo-tree-id30103 . -1) (undo-tree-id30104 . -1) (undo-tree-id30105 . -1) (undo-tree-id30106 . -1) (undo-tree-id30107 . -1) (undo-tree-id30108 . -1) (undo-tree-id30109 . -1) (undo-tree-id30110 . -1) (undo-tree-id30111 . -1) (undo-tree-id30112 . -1) (undo-tree-id30113 . -1) (undo-tree-id30114 . -1) (undo-tree-id30115 . -1) (undo-tree-id30116 . -1) (undo-tree-id30117 . -1) (undo-tree-id30118 . -1) (undo-tree-id30119 . -1) (undo-tree-id30120 . -1) (undo-tree-id30121 . -1) (undo-tree-id30122 . -1) (undo-tree-id30123 . -1) (undo-tree-id30124 . -1) (undo-tree-id30125 . -1) (undo-tree-id30126 . -1) (undo-tree-id30127 . -1) (undo-tree-id30128 . -1) (undo-tree-id30129 . -1) (undo-tree-id30130 . -1) (undo-tree-id30131 . -1) (undo-tree-id30132 . -1) (undo-tree-id30133 . -1) (undo-tree-id30134 . -1) (undo-tree-id30135 . -1) (undo-tree-id30136 . -1) (undo-tree-id30137 . -1) (undo-tree-id30138 . -1) (undo-tree-id30139 . -1) (undo-tree-id30140 . -1) (undo-tree-id30141 . -1) (undo-tree-id30142 . -1) (undo-tree-id30143 . -1) (undo-tree-id30144 . -1) (undo-tree-id30145 . -1) (undo-tree-id30146 . -1) (undo-tree-id30147 . -1) (undo-tree-id30148 . -1) (undo-tree-id30149 . -1) (undo-tree-id30150 . -1) (undo-tree-id30151 . -1) (undo-tree-id30152 . -1) (undo-tree-id30153 . -1) (undo-tree-id30154 . -1) (undo-tree-id30155 . -1) (undo-tree-id30156 . -1) (undo-tree-id30157 . -1) (undo-tree-id30158 . -1) (undo-tree-id30159 . -1) (undo-tree-id30160 . -1) (undo-tree-id30161 . -1) (undo-tree-id30162 . -1) (undo-tree-id30163 . -1) (undo-tree-id30164 . -1) (undo-tree-id30165 . -1) (undo-tree-id30166 . -1) (undo-tree-id30167 . -1) (undo-tree-id30168 . -1) (undo-tree-id30169 . -1) (undo-tree-id30170 . -1) (undo-tree-id30171 . -1) (undo-tree-id30172 . -1) (undo-tree-id30173 . -1) (undo-tree-id30174 . -1) (undo-tree-id30175 . -1) (undo-tree-id30176 . -1) (undo-tree-id30177 . -1) (undo-tree-id30178 . -1) (undo-tree-id30179 . -1) (undo-tree-id30180 . -1) (undo-tree-id30181 . -1) (undo-tree-id30182 . -1) (undo-tree-id30183 . -1) (undo-tree-id30184 . -1) (undo-tree-id30185 . -1) (undo-tree-id30186 . -1) (undo-tree-id30187 . -1) (undo-tree-id30188 . -1) (undo-tree-id30189 . -1) (undo-tree-id30190 . -1) (undo-tree-id30191 . -1) (undo-tree-id30192 . -1) (undo-tree-id30193 . -1) (undo-tree-id30194 . -1) (undo-tree-id30195 . -1) (undo-tree-id30196 . -1) (undo-tree-id30197 . -1) (undo-tree-id30198 . -1) (undo-tree-id30199 . -1) (undo-tree-id30200 . -1) (undo-tree-id30201 . -1) (undo-tree-id30202 . -1) (undo-tree-id30203 . -1) (undo-tree-id30204 . -1) (undo-tree-id30205 . -1) (undo-tree-id30206 . -1) (undo-tree-id30207 . -1) (undo-tree-id30208 . -1) (undo-tree-id30209 . -1) (undo-tree-id30210 . -1) (undo-tree-id30211 . -1) (undo-tree-id30212 . -1) (undo-tree-id30213 . -1) (undo-tree-id30214 . -1) (undo-tree-id30215 . -1) (undo-tree-id30216 . -1) (undo-tree-id30217 . -1) (undo-tree-id30218 . -1) (undo-tree-id30219 . -1) (undo-tree-id30220 . -1) (undo-tree-id30221 . -1) (undo-tree-id30222 . -1) (undo-tree-id30223 . -1) (undo-tree-id30224 . -1) (undo-tree-id30225 . -1) (undo-tree-id30226 . -1) (undo-tree-id30227 . -1) (undo-tree-id30228 . -1) (undo-tree-id30229 . -1) (undo-tree-id30230 . -1) (undo-tree-id30231 . -1) (undo-tree-id30232 . -1) (undo-tree-id30233 . -1) (undo-tree-id30234 . -1) (undo-tree-id30235 . -1) (undo-tree-id30236 . -1) (undo-tree-id30237 . -1) (undo-tree-id30238 . -1) (undo-tree-id30239 . -1) (undo-tree-id30240 . -1) (undo-tree-id30241 . -1) (undo-tree-id30242 . -1) (undo-tree-id30243 . -1) (undo-tree-id30244 . -1) (undo-tree-id30245 . -1) (undo-tree-id30246 . -1) (undo-tree-id30247 . -1) (undo-tree-id30248 . -1) (undo-tree-id30249 . -1) (undo-tree-id30250 . -1) (undo-tree-id30251 . -1) (undo-tree-id30252 . -1) (undo-tree-id30253 . -1) (undo-tree-id30254 . -1) (undo-tree-id30255 . -1) (undo-tree-id30256 . -1) (undo-tree-id30257 . -1) (undo-tree-id30258 . -1) (undo-tree-id30259 . -1) (undo-tree-id30260 . -1) (undo-tree-id30261 . -1) (undo-tree-id30262 . -1) (undo-tree-id30263 . -1) (undo-tree-id30264 . -1) (undo-tree-id30265 . -1) (undo-tree-id30266 . -1) (undo-tree-id30267 . -1) (undo-tree-id30268 . -1) (undo-tree-id30269 . -1) (undo-tree-id30270 . -1) (undo-tree-id30271 . -1) (undo-tree-id30272 . -1) (undo-tree-id30273 . -1) (undo-tree-id30274 . -1) (undo-tree-id30275 . -1) (undo-tree-id30276 . -1) (undo-tree-id30277 . -1) (undo-tree-id30278 . -1) (undo-tree-id30279 . -1) (undo-tree-id30280 . -1) (undo-tree-id30281 . -1) (undo-tree-id30282 . -1) (undo-tree-id30283 . -1) (undo-tree-id30284 . -1) (undo-tree-id30285 . -1) (undo-tree-id30286 . -1) (undo-tree-id30287 . -1) (undo-tree-id30288 . -1) (undo-tree-id30289 . -1) (undo-tree-id30290 . -1) (undo-tree-id30291 . -1) (undo-tree-id30292 . -1) (undo-tree-id30293 . -1) (undo-tree-id30294 . -1) (#("t" 0 1 (fontified t)) . -66965) (undo-tree-id30295 . -1) (undo-tree-id30296 . -1) (undo-tree-id30297 . -1) (undo-tree-id30298 . -1) (undo-tree-id30299 . -1) (undo-tree-id30300 . -1) (undo-tree-id30301 . -1) (undo-tree-id30302 . -1) (undo-tree-id30303 . -1) (undo-tree-id30304 . -1) (undo-tree-id30305 . -1) (undo-tree-id30306 . -1) (undo-tree-id30307 . -1) (undo-tree-id30308 . -1) (undo-tree-id30309 . -1) (undo-tree-id30310 . -1) (undo-tree-id30311 . -1) (undo-tree-id30312 . -1) (undo-tree-id30313 . -1) (undo-tree-id30314 . -1) (undo-tree-id30315 . -1) (undo-tree-id30316 . -1) (undo-tree-id30317 . -1) (undo-tree-id30318 . -1) (undo-tree-id30319 . -1) (undo-tree-id30320 . -1) (undo-tree-id30321 . -1) (undo-tree-id30322 . -1) (undo-tree-id30323 . -1) (undo-tree-id30324 . -1) (undo-tree-id30325 . -1) (undo-tree-id30326 . -1) (undo-tree-id30327 . -1) (undo-tree-id30328 . -1) (undo-tree-id30329 . -1) (undo-tree-id30330 . -1) (undo-tree-id30331 . -1) (undo-tree-id30332 . -1) (undo-tree-id30333 . -1) (undo-tree-id30334 . -1) (undo-tree-id30335 . -1) (undo-tree-id30336 . -1) (undo-tree-id30337 . -1) (undo-tree-id30338 . -1) (undo-tree-id30339 . -1) (undo-tree-id30340 . -1) (undo-tree-id30341 . -1) (undo-tree-id30342 . -1) (undo-tree-id30343 . -1) (undo-tree-id30344 . -1) (undo-tree-id30345 . -1) (undo-tree-id30346 . -1) (undo-tree-id30347 . -1) (undo-tree-id30348 . -1) (undo-tree-id30349 . -1) (undo-tree-id30350 . -1) (undo-tree-id30351 . -1) (undo-tree-id30352 . -1) (undo-tree-id30353 . -1) (undo-tree-id30354 . -1) (undo-tree-id30355 . -1) (undo-tree-id30356 . -1) (undo-tree-id30357 . -1) (undo-tree-id30358 . -1) (undo-tree-id30359 . -1) (undo-tree-id30360 . -1) (undo-tree-id30361 . -1) (undo-tree-id30362 . -1) (undo-tree-id30363 . -1) (undo-tree-id30364 . -1) (undo-tree-id30365 . -1) (undo-tree-id30366 . -1) (undo-tree-id30367 . -1) (undo-tree-id30368 . -1) (undo-tree-id30369 . -1) (undo-tree-id30370 . -1) (undo-tree-id30371 . -1) (undo-tree-id30372 . -1) (undo-tree-id30373 . -1) (undo-tree-id30374 . -1) (undo-tree-id30375 . -1) (undo-tree-id30376 . -1) (undo-tree-id30377 . -1) (undo-tree-id30378 . -1) (undo-tree-id30379 . -1) (undo-tree-id30380 . -1) (undo-tree-id30381 . -1) (undo-tree-id30382 . -1) (undo-tree-id30383 . -1) (undo-tree-id30384 . -1) (undo-tree-id30385 . -1) (undo-tree-id30386 . -1) (undo-tree-id30387 . -1) (undo-tree-id30388 . -1) (undo-tree-id30389 . -1) (undo-tree-id30390 . -1) (undo-tree-id30391 . -1) (undo-tree-id30392 . -1) (undo-tree-id30393 . -1) (undo-tree-id30394 . -1) (undo-tree-id30395 . -1) (undo-tree-id30396 . -1) (undo-tree-id30397 . -1) (undo-tree-id30398 . -1) (undo-tree-id30399 . -1) (undo-tree-id30400 . -1) (undo-tree-id30401 . -1) (undo-tree-id30402 . -1) (undo-tree-id30403 . -1) (undo-tree-id30404 . -1) (undo-tree-id30405 . -1) (undo-tree-id30406 . -1) (undo-tree-id30407 . -1) (undo-tree-id30408 . -1) (undo-tree-id30409 . -1) (undo-tree-id30410 . -1) (undo-tree-id30411 . -1) (undo-tree-id30412 . -1) (undo-tree-id30413 . -1) (undo-tree-id30414 . -1) (undo-tree-id30415 . -1) (undo-tree-id30416 . -1) (undo-tree-id30417 . -1) (undo-tree-id30418 . -1) (undo-tree-id30419 . -1) (undo-tree-id30420 . -1) (undo-tree-id30421 . -1) (undo-tree-id30422 . -1) (undo-tree-id30423 . -1) (undo-tree-id30424 . -1) (undo-tree-id30425 . -1) (undo-tree-id30426 . -1) (undo-tree-id30427 . -1) (undo-tree-id30428 . -1) (undo-tree-id30429 . -1) (undo-tree-id30430 . -1) (undo-tree-id30431 . -1) (undo-tree-id30432 . -1) (undo-tree-id30433 . -1) (undo-tree-id30434 . -1) (undo-tree-id30435 . -1) (undo-tree-id30436 . -1) (undo-tree-id30437 . -1) (undo-tree-id30438 . -1) (undo-tree-id30439 . -1) (undo-tree-id30440 . -1) (undo-tree-id30441 . -1) (undo-tree-id30442 . -1) (undo-tree-id30443 . -1) (undo-tree-id30444 . -1) (undo-tree-id30445 . -1) (undo-tree-id30446 . -1) (undo-tree-id30447 . -1) (undo-tree-id30448 . -1) (undo-tree-id30449 . -1) (undo-tree-id30450 . -1) (undo-tree-id30451 . -1) (undo-tree-id30452 . -1) (undo-tree-id30453 . -1) (undo-tree-id30454 . -1) (undo-tree-id30455 . -1) (undo-tree-id30456 . -1) (undo-tree-id30457 . -1) (undo-tree-id30458 . -1) (undo-tree-id30459 . -1) (undo-tree-id30460 . -1) (undo-tree-id30461 . -1) (undo-tree-id30462 . -1) (undo-tree-id30463 . -1) (undo-tree-id30464 . -1) (undo-tree-id30465 . -1) (undo-tree-id30466 . -1) (undo-tree-id30467 . -1) (undo-tree-id30468 . -1) (undo-tree-id30469 . -1) (undo-tree-id30470 . -1) (undo-tree-id30471 . -1) (undo-tree-id30472 . -1) (undo-tree-id30473 . -1) (undo-tree-id30474 . -1) (undo-tree-id30475 . -1) (undo-tree-id30476 . -1) (undo-tree-id30477 . -1) (undo-tree-id30478 . -1) (undo-tree-id30479 . -1) (undo-tree-id30480 . -1) (undo-tree-id30481 . -1) (undo-tree-id30482 . -1) (undo-tree-id30483 . -1) (undo-tree-id30484 . -1) (undo-tree-id30485 . -1) (undo-tree-id30486 . -1) (undo-tree-id30487 . -1) (undo-tree-id30488 . -1) (undo-tree-id30489 . -1) (undo-tree-id30490 . -1) (undo-tree-id30491 . -1) (undo-tree-id30492 . -1) (undo-tree-id30493 . -1) (undo-tree-id30494 . -1) (undo-tree-id30495 . -1) (undo-tree-id30496 . -1) (undo-tree-id30497 . -1) (undo-tree-id30498 . -1) (undo-tree-id30499 . -1) (undo-tree-id30500 . -1) (undo-tree-id30501 . -1) (undo-tree-id30502 . -1) (undo-tree-id30503 . -1) (undo-tree-id30504 . -1) (undo-tree-id30505 . -1) (undo-tree-id30506 . -1) (undo-tree-id30507 . -1) (undo-tree-id30508 . -1) (undo-tree-id30509 . -1) (undo-tree-id30510 . -1) (undo-tree-id30511 . -1) (undo-tree-id30512 . -1) (undo-tree-id30513 . -1) (undo-tree-id30514 . -1) (undo-tree-id30515 . -1) (undo-tree-id30516 . -1) (undo-tree-id30517 . -1) (undo-tree-id30518 . -1) (undo-tree-id30519 . -1) (undo-tree-id30520 . -1) (undo-tree-id30521 . -1) (undo-tree-id30522 . -1) (#("t" 0 1 (fontified t)) . -66966) (undo-tree-id30523 . -1) (undo-tree-id30524 . -1) (undo-tree-id30525 . -1) (undo-tree-id30526 . -1) (undo-tree-id30527 . -1) (undo-tree-id30528 . -1) (undo-tree-id30529 . -1) (undo-tree-id30530 . -1) (undo-tree-id30531 . -1) (undo-tree-id30532 . -1) (undo-tree-id30533 . -1) (undo-tree-id30534 . -1) (undo-tree-id30535 . -1) (undo-tree-id30536 . -1) (undo-tree-id30537 . -1) (undo-tree-id30538 . -1) (undo-tree-id30539 . -1) (undo-tree-id30540 . -1) (undo-tree-id30541 . -1) (undo-tree-id30542 . -1) (undo-tree-id30543 . -1) (undo-tree-id30544 . -1) (undo-tree-id30545 . -1) (undo-tree-id30546 . -1) (undo-tree-id30547 . -1) (undo-tree-id30548 . -1) (undo-tree-id30549 . -1) (undo-tree-id30550 . -1) (undo-tree-id30551 . -1) (undo-tree-id30552 . -1) (undo-tree-id30553 . -1) (undo-tree-id30554 . -1) (undo-tree-id30555 . -1) (undo-tree-id30556 . -1) (undo-tree-id30557 . -1) (undo-tree-id30558 . -1) (undo-tree-id30559 . -1) (undo-tree-id30560 . -1) (undo-tree-id30561 . -1) (undo-tree-id30562 . -1) (undo-tree-id30563 . -1) (undo-tree-id30564 . -1) (undo-tree-id30565 . -1) (undo-tree-id30566 . -1) (undo-tree-id30567 . -1) (undo-tree-id30568 . -1) (undo-tree-id30569 . -1) (undo-tree-id30570 . -1) (undo-tree-id30571 . -1) (undo-tree-id30572 . -1) (undo-tree-id30573 . -1) (undo-tree-id30574 . -1) (undo-tree-id30575 . -1) (undo-tree-id30576 . -1) (undo-tree-id30577 . -1) (undo-tree-id30578 . -1) (undo-tree-id30579 . -1) (undo-tree-id30580 . -1) (undo-tree-id30581 . -1) (undo-tree-id30582 . -1) (undo-tree-id30583 . -1) (undo-tree-id30584 . -1) (undo-tree-id30585 . -1) (undo-tree-id30586 . -1) (undo-tree-id30587 . -1) (undo-tree-id30588 . -1) (undo-tree-id30589 . -1) (undo-tree-id30590 . -1) (undo-tree-id30591 . -1) (undo-tree-id30592 . -1) (undo-tree-id30593 . -1) (undo-tree-id30594 . -1) (undo-tree-id30595 . -1) (undo-tree-id30596 . -1) (undo-tree-id30597 . -1) (undo-tree-id30598 . -1) (undo-tree-id30599 . -1) (undo-tree-id30600 . -1) (undo-tree-id30601 . -1) (undo-tree-id30602 . -1) (undo-tree-id30603 . -1) (undo-tree-id30604 . -1) (undo-tree-id30605 . -1) (undo-tree-id30606 . -1) (undo-tree-id30607 . -1) (undo-tree-id30608 . -1) (undo-tree-id30609 . -1) (undo-tree-id30610 . -1) (undo-tree-id30611 . -1) (undo-tree-id30612 . -1) (undo-tree-id30613 . -1) (undo-tree-id30614 . -1) (undo-tree-id30615 . -1) (undo-tree-id30616 . -1) (undo-tree-id30617 . -1) (undo-tree-id30618 . -1) (undo-tree-id30619 . -1) (undo-tree-id30620 . -1) (undo-tree-id30621 . -1) (undo-tree-id30622 . -1) (undo-tree-id30623 . -1) (undo-tree-id30624 . -1) (undo-tree-id30625 . -1) (undo-tree-id30626 . -1) (undo-tree-id30627 . -1) (undo-tree-id30628 . -1) (undo-tree-id30629 . -1) (undo-tree-id30630 . -1) (undo-tree-id30631 . -1) (undo-tree-id30632 . -1) (undo-tree-id30633 . -1) (undo-tree-id30634 . -1) (undo-tree-id30635 . -1) (undo-tree-id30636 . -1) (undo-tree-id30637 . -1) (undo-tree-id30638 . -1) (undo-tree-id30639 . -1) (undo-tree-id30640 . -1) (undo-tree-id30641 . -1) (undo-tree-id30642 . -1) (undo-tree-id30643 . -1) (undo-tree-id30644 . -1) (undo-tree-id30645 . -1) (undo-tree-id30646 . -1) (undo-tree-id30647 . -1) (undo-tree-id30648 . -1) (undo-tree-id30649 . -1) (undo-tree-id30650 . -1) (undo-tree-id30651 . -1) (undo-tree-id30652 . -1) (undo-tree-id30653 . -1) (undo-tree-id30654 . -1) (undo-tree-id30655 . -1) (undo-tree-id30656 . -1) (undo-tree-id30657 . -1) (undo-tree-id30658 . -1) (undo-tree-id30659 . -1) (undo-tree-id30660 . -1) (undo-tree-id30661 . -1) (undo-tree-id30662 . -1) (undo-tree-id30663 . -1) (undo-tree-id30664 . -1) (undo-tree-id30665 . -1) (undo-tree-id30666 . -1) (undo-tree-id30667 . -1) (undo-tree-id30668 . -1) (undo-tree-id30669 . -1) (undo-tree-id30670 . -1) (undo-tree-id30671 . -1) (undo-tree-id30672 . -1) (undo-tree-id30673 . -1) (undo-tree-id30674 . -1) (undo-tree-id30675 . -1) (undo-tree-id30676 . -1) (undo-tree-id30677 . -1) (undo-tree-id30678 . -1) (undo-tree-id30679 . -1) (undo-tree-id30680 . -1) (undo-tree-id30681 . -1) (undo-tree-id30682 . -1) (undo-tree-id30683 . -1) (undo-tree-id30684 . -1) (undo-tree-id30685 . -1) (undo-tree-id30686 . -1) (undo-tree-id30687 . -1) (undo-tree-id30688 . -1) (undo-tree-id30689 . -1) (undo-tree-id30690 . -1) (undo-tree-id30691 . -1) (undo-tree-id30692 . -1) (undo-tree-id30693 . -1) (undo-tree-id30694 . -1) (undo-tree-id30695 . -1) (undo-tree-id30696 . -1) (undo-tree-id30697 . -1) (undo-tree-id30698 . -1) (undo-tree-id30699 . -1) (undo-tree-id30700 . -1) (undo-tree-id30701 . -1) (undo-tree-id30702 . -1) (undo-tree-id30703 . -1) (undo-tree-id30704 . -1) (undo-tree-id30705 . -1) (undo-tree-id30706 . -1) (undo-tree-id30707 . -1) (undo-tree-id30708 . -1) (undo-tree-id30709 . -1) (undo-tree-id30710 . -1) (undo-tree-id30711 . -1) (undo-tree-id30712 . -1) (undo-tree-id30713 . -1) (undo-tree-id30714 . -1) (undo-tree-id30715 . -1) (undo-tree-id30716 . -1) (undo-tree-id30717 . -1) (undo-tree-id30718 . -1) (undo-tree-id30719 . -1) (undo-tree-id30720 . -1) (undo-tree-id30721 . -1) (undo-tree-id30722 . -1) (undo-tree-id30723 . -1) (undo-tree-id30724 . -1) (undo-tree-id30725 . -1) (undo-tree-id30726 . -1) (undo-tree-id30727 . -1) (undo-tree-id30728 . -1) (undo-tree-id30729 . -1) (undo-tree-id30730 . -1) (undo-tree-id30731 . -1) (undo-tree-id30732 . -1) (undo-tree-id30733 . -1) (undo-tree-id30734 . -1) (#("e" 0 1 (fontified t)) . -66967) (undo-tree-id30735 . -1) (undo-tree-id30736 . -1) (undo-tree-id30737 . -1) (undo-tree-id30738 . -1) (undo-tree-id30739 . -1) (undo-tree-id30740 . -1) (undo-tree-id30741 . -1) (undo-tree-id30742 . -1) (undo-tree-id30743 . -1) (undo-tree-id30744 . -1) (undo-tree-id30745 . -1) (undo-tree-id30746 . -1) (undo-tree-id30747 . -1) (undo-tree-id30748 . -1) (undo-tree-id30749 . -1) (undo-tree-id30750 . -1) (undo-tree-id30751 . -1) (undo-tree-id30752 . -1) (undo-tree-id30753 . -1) (undo-tree-id30754 . -1) (undo-tree-id30755 . -1) (undo-tree-id30756 . -1) (undo-tree-id30757 . -1) (undo-tree-id30758 . -1) (undo-tree-id30759 . -1) (undo-tree-id30760 . -1) (undo-tree-id30761 . -1) (undo-tree-id30762 . -1) (undo-tree-id30763 . -1) (undo-tree-id30764 . -1) (undo-tree-id30765 . -1) (undo-tree-id30766 . -1) (undo-tree-id30767 . -1) (undo-tree-id30768 . -1) (undo-tree-id30769 . -1) (undo-tree-id30770 . -1) (undo-tree-id30771 . -1) (undo-tree-id30772 . -1) (undo-tree-id30773 . -1) (undo-tree-id30774 . -1) (undo-tree-id30775 . -1) (undo-tree-id30776 . -1) (undo-tree-id30777 . -1) (undo-tree-id30778 . -1) (undo-tree-id30779 . -1) (undo-tree-id30780 . -1) (undo-tree-id30781 . -1) (undo-tree-id30782 . -1) (undo-tree-id30783 . -1) (undo-tree-id30784 . -1) (undo-tree-id30785 . -1) (undo-tree-id30786 . -1) (undo-tree-id30787 . -1) (undo-tree-id30788 . -1) (undo-tree-id30789 . -1) (undo-tree-id30790 . -1) (undo-tree-id30791 . -1) (undo-tree-id30792 . -1) (undo-tree-id30793 . -1) (undo-tree-id30794 . -1) (undo-tree-id30795 . -1) (undo-tree-id30796 . -1) (undo-tree-id30797 . -1) (undo-tree-id30798 . -1) (undo-tree-id30799 . -1) (undo-tree-id30800 . -1) (undo-tree-id30801 . -1) (undo-tree-id30802 . -1) (undo-tree-id30803 . -1) (undo-tree-id30804 . -1) (undo-tree-id30805 . -1) (undo-tree-id30806 . -1) (undo-tree-id30807 . -1) (undo-tree-id30808 . -1) (undo-tree-id30809 . -1) (undo-tree-id30810 . -1) (undo-tree-id30811 . -1) (undo-tree-id30812 . -1) (undo-tree-id30813 . -1) (undo-tree-id30814 . -1) (undo-tree-id30815 . -1) (undo-tree-id30816 . -1) (undo-tree-id30817 . -1) (undo-tree-id30818 . -1) (undo-tree-id30819 . -1) (undo-tree-id30820 . -1) (undo-tree-id30821 . -1) (undo-tree-id30822 . -1) (undo-tree-id30823 . -1) (undo-tree-id30824 . -1) (undo-tree-id30825 . -1) (undo-tree-id30826 . -1) (undo-tree-id30827 . -1) (undo-tree-id30828 . -1) (undo-tree-id30829 . -1) (undo-tree-id30830 . -1) (undo-tree-id30831 . -1) (undo-tree-id30832 . -1) (undo-tree-id30833 . -1) (undo-tree-id30834 . -1) (undo-tree-id30835 . -1) (undo-tree-id30836 . -1) (undo-tree-id30837 . -1) (undo-tree-id30838 . -1) (undo-tree-id30839 . -1) (undo-tree-id30840 . -1) (undo-tree-id30841 . -1) (undo-tree-id30842 . -1) (undo-tree-id30843 . -1) (undo-tree-id30844 . -1) (undo-tree-id30845 . -1) (undo-tree-id30846 . -1) (undo-tree-id30847 . -1) (undo-tree-id30848 . -1) (undo-tree-id30849 . -1) (undo-tree-id30850 . -1) (undo-tree-id30851 . -1) (undo-tree-id30852 . -1) (undo-tree-id30853 . -1) (undo-tree-id30854 . -1) (undo-tree-id30855 . -1) (undo-tree-id30856 . -1) (undo-tree-id30857 . -1) (undo-tree-id30858 . -1) (undo-tree-id30859 . -1) (undo-tree-id30860 . -1) (undo-tree-id30861 . -1) (undo-tree-id30862 . -1) (undo-tree-id30863 . -1) (undo-tree-id30864 . -1) (undo-tree-id30865 . -1) (undo-tree-id30866 . -1) (undo-tree-id30867 . -1) (undo-tree-id30868 . -1) (undo-tree-id30869 . -1) (undo-tree-id30870 . -1) (undo-tree-id30871 . -1) (undo-tree-id30872 . -1) (undo-tree-id30873 . -1) (undo-tree-id30874 . -1) (undo-tree-id30875 . -1) (undo-tree-id30876 . -1) (undo-tree-id30877 . -1) (undo-tree-id30878 . -1) (undo-tree-id30879 . -1) (undo-tree-id30880 . -1) (undo-tree-id30881 . -1) (undo-tree-id30882 . -1) (undo-tree-id30883 . -1) (undo-tree-id30884 . -1) (undo-tree-id30885 . -1) (undo-tree-id30886 . -1) (undo-tree-id30887 . -1) (undo-tree-id30888 . -1) (undo-tree-id30889 . -1) (undo-tree-id30890 . -1) (undo-tree-id30891 . -1) (undo-tree-id30892 . -1) (undo-tree-id30893 . -1) (undo-tree-id30894 . -1) (undo-tree-id30895 . -1) (undo-tree-id30896 . -1) (undo-tree-id30897 . -1) (undo-tree-id30898 . -1) (undo-tree-id30899 . -1) (undo-tree-id30900 . -1) (undo-tree-id30901 . -1) (undo-tree-id30902 . -1) (undo-tree-id30903 . -1) (undo-tree-id30904 . -1) (undo-tree-id30905 . -1) (undo-tree-id30906 . -1) (undo-tree-id30907 . -1) (undo-tree-id30908 . -1) (undo-tree-id30909 . -1) (undo-tree-id30910 . -1) (undo-tree-id30911 . -1) (undo-tree-id30912 . -1) (undo-tree-id30913 . -1) (undo-tree-id30914 . -1) (undo-tree-id30915 . -1) (undo-tree-id30916 . -1) (undo-tree-id30917 . -1) (undo-tree-id30918 . -1) (undo-tree-id30919 . -1) (undo-tree-id30920 . -1) (undo-tree-id30921 . -1) (undo-tree-id30922 . -1) (undo-tree-id30923 . -1) (undo-tree-id30924 . -1) (undo-tree-id30925 . -1) (undo-tree-id30926 . -1) (undo-tree-id30927 . -1) (undo-tree-id30928 . -1) (undo-tree-id30929 . -1) (undo-tree-id30930 . -1) (#("r" 0 1 (fontified t)) . -66968) (undo-tree-id30931 . -1) (undo-tree-id30932 . -1) (undo-tree-id30933 . -1) (undo-tree-id30934 . -1) (undo-tree-id30935 . -1) (undo-tree-id30936 . -1) (undo-tree-id30937 . -1) (undo-tree-id30938 . -1) (undo-tree-id30939 . -1) (undo-tree-id30940 . -1) (undo-tree-id30941 . -1) (undo-tree-id30942 . -1) (undo-tree-id30943 . -1) (undo-tree-id30944 . -1) (undo-tree-id30945 . -1) (undo-tree-id30946 . -1) (undo-tree-id30947 . -1) (undo-tree-id30948 . -1) (undo-tree-id30949 . -1) (undo-tree-id30950 . -1) (undo-tree-id30951 . -1) (undo-tree-id30952 . -1) (undo-tree-id30953 . -1) (undo-tree-id30954 . -1) (undo-tree-id30955 . -1) (undo-tree-id30956 . -1) (undo-tree-id30957 . -1) (undo-tree-id30958 . -1) (undo-tree-id30959 . -1) (undo-tree-id30960 . -1) (undo-tree-id30961 . -1) (undo-tree-id30962 . -1) (undo-tree-id30963 . -1) (undo-tree-id30964 . -1) (undo-tree-id30965 . -1) (undo-tree-id30966 . -1) (undo-tree-id30967 . -1) (undo-tree-id30968 . -1) (undo-tree-id30969 . -1) (undo-tree-id30970 . -1) (undo-tree-id30971 . -1) (undo-tree-id30972 . -1) (undo-tree-id30973 . -1) (undo-tree-id30974 . -1) (undo-tree-id30975 . -1) (undo-tree-id30976 . -1) (undo-tree-id30977 . -1) (undo-tree-id30978 . -1) (undo-tree-id30979 . -1) (undo-tree-id30980 . -1) (undo-tree-id30981 . -1) (undo-tree-id30982 . -1) (undo-tree-id30983 . -1) (undo-tree-id30984 . -1) (undo-tree-id30985 . -1) (undo-tree-id30986 . -1) (undo-tree-id30987 . -1) (undo-tree-id30988 . -1) (undo-tree-id30989 . -1) (undo-tree-id30990 . -1) (undo-tree-id30991 . -1) (undo-tree-id30992 . -1) (undo-tree-id30993 . -1) (undo-tree-id30994 . -1) (undo-tree-id30995 . -1) (undo-tree-id30996 . -1) (undo-tree-id30997 . -1) (undo-tree-id30998 . -1) (undo-tree-id30999 . -1) (undo-tree-id31000 . -1) (undo-tree-id31001 . -1) (undo-tree-id31002 . -1) (undo-tree-id31003 . -1) (undo-tree-id31004 . -1) (undo-tree-id31005 . -1) (undo-tree-id31006 . -1) (undo-tree-id31007 . -1) (undo-tree-id31008 . -1) (undo-tree-id31009 . -1) (undo-tree-id31010 . -1) (undo-tree-id31011 . -1) (undo-tree-id31012 . -1) (undo-tree-id31013 . -1) (undo-tree-id31014 . -1) (undo-tree-id31015 . -1) (undo-tree-id31016 . -1) (undo-tree-id31017 . -1) (undo-tree-id31018 . -1) (undo-tree-id31019 . -1) (undo-tree-id31020 . -1) (undo-tree-id31021 . -1) (undo-tree-id31022 . -1) (undo-tree-id31023 . -1) (undo-tree-id31024 . -1) (undo-tree-id31025 . -1) (undo-tree-id31026 . -1) (undo-tree-id31027 . -1) (undo-tree-id31028 . -1) (undo-tree-id31029 . -1) (undo-tree-id31030 . -1) (undo-tree-id31031 . -1) (undo-tree-id31032 . -1) (undo-tree-id31033 . -1) (undo-tree-id31034 . -1) (undo-tree-id31035 . -1) (undo-tree-id31036 . -1) (undo-tree-id31037 . -1) (undo-tree-id31038 . -1) (undo-tree-id31039 . -1) (undo-tree-id31040 . -1) (undo-tree-id31041 . -1) (undo-tree-id31042 . -1) (undo-tree-id31043 . -1) (undo-tree-id31044 . -1) (undo-tree-id31045 . -1) (undo-tree-id31046 . -1) (undo-tree-id31047 . -1) (undo-tree-id31048 . -1) (undo-tree-id31049 . -1) (undo-tree-id31050 . -1) (undo-tree-id31051 . -1) (undo-tree-id31052 . -1) (undo-tree-id31053 . -1) (undo-tree-id31054 . -1) (undo-tree-id31055 . -1) (undo-tree-id31056 . -1) (undo-tree-id31057 . -1) (undo-tree-id31058 . -1) (undo-tree-id31059 . -1) (undo-tree-id31060 . -1) (undo-tree-id31061 . -1) (undo-tree-id31062 . -1) (undo-tree-id31063 . -1) (undo-tree-id31064 . -1) (undo-tree-id31065 . -1) (undo-tree-id31066 . -1) (undo-tree-id31067 . -1) (undo-tree-id31068 . -1) (undo-tree-id31069 . -1) (undo-tree-id31070 . -1) (undo-tree-id31071 . -1) (undo-tree-id31072 . -1) (undo-tree-id31073 . -1) (undo-tree-id31074 . -1) (undo-tree-id31075 . -1) (undo-tree-id31076 . -1) (undo-tree-id31077 . -1) (undo-tree-id31078 . -1) (undo-tree-id31079 . -1) (undo-tree-id31080 . -1) (undo-tree-id31081 . -1) (undo-tree-id31082 . -1) (undo-tree-id31083 . -1) (undo-tree-id31084 . -1) (undo-tree-id31085 . -1) (undo-tree-id31086 . -1) (undo-tree-id31087 . -1) (undo-tree-id31088 . -1) (undo-tree-id31089 . -1) (undo-tree-id31090 . -1) (undo-tree-id31091 . -1) (undo-tree-id31092 . -1) (undo-tree-id31093 . -1) (undo-tree-id31094 . -1) (undo-tree-id31095 . -1) (undo-tree-id31096 . -1) (undo-tree-id31097 . -1) (undo-tree-id31098 . -1) (undo-tree-id31099 . -1) (undo-tree-id31100 . -1) (undo-tree-id31101 . -1) (undo-tree-id31102 . -1) (undo-tree-id31103 . -1) (undo-tree-id31104 . -1) (undo-tree-id31105 . -1) (undo-tree-id31106 . -1) (undo-tree-id31107 . -1) (undo-tree-id31108 . -1) (undo-tree-id31109 . -1) (undo-tree-id31110 . -1) (#(" " 0 1 (fontified t)) . -66969) (undo-tree-id31111 . -1) (undo-tree-id31112 . -1) (undo-tree-id31113 . -1) (undo-tree-id31114 . -1) (undo-tree-id31115 . -1) (undo-tree-id31116 . -1) (undo-tree-id31117 . -1) (undo-tree-id31118 . -1) (undo-tree-id31119 . -1) (undo-tree-id31120 . -1) (undo-tree-id31121 . -1) (undo-tree-id31122 . -1) (undo-tree-id31123 . -1) (undo-tree-id31124 . -1) (undo-tree-id31125 . -1) (undo-tree-id31126 . -1) (undo-tree-id31127 . -1) (undo-tree-id31128 . -1) (undo-tree-id31129 . -1) (undo-tree-id31130 . -1) (undo-tree-id31131 . -1) (undo-tree-id31132 . -1) (undo-tree-id31133 . -1) (undo-tree-id31134 . -1) (undo-tree-id31135 . -1) (undo-tree-id31136 . -1) (undo-tree-id31137 . -1) (undo-tree-id31138 . -1) (undo-tree-id31139 . -1) (undo-tree-id31140 . -1) (undo-tree-id31141 . -1) (undo-tree-id31142 . -1) (undo-tree-id31143 . -1) (undo-tree-id31144 . -1) (undo-tree-id31145 . -1) (undo-tree-id31146 . -1) (undo-tree-id31147 . -1) (undo-tree-id31148 . -1) (undo-tree-id31149 . -1) (undo-tree-id31150 . -1) (undo-tree-id31151 . -1) (undo-tree-id31152 . -1) (undo-tree-id31153 . -1) (undo-tree-id31154 . -1) (undo-tree-id31155 . -1) (undo-tree-id31156 . -1) (undo-tree-id31157 . -1) (undo-tree-id31158 . -1) (undo-tree-id31159 . -1) (undo-tree-id31160 . -1) (undo-tree-id31161 . -1) (undo-tree-id31162 . -1) (undo-tree-id31163 . -1) (undo-tree-id31164 . -1) (undo-tree-id31165 . -1) (undo-tree-id31166 . -1) (undo-tree-id31167 . -1) (undo-tree-id31168 . -1) (undo-tree-id31169 . -1) (undo-tree-id31170 . -1) (undo-tree-id31171 . -1) (undo-tree-id31172 . -1) (undo-tree-id31173 . -1) (undo-tree-id31174 . -1) (undo-tree-id31175 . -1) (undo-tree-id31176 . -1) (undo-tree-id31177 . -1) (undo-tree-id31178 . -1) (undo-tree-id31179 . -1) (undo-tree-id31180 . -1) (undo-tree-id31181 . -1) (undo-tree-id31182 . -1) (undo-tree-id31183 . -1) (undo-tree-id31184 . -1) (undo-tree-id31185 . -1) (undo-tree-id31186 . -1) (undo-tree-id31187 . -1) (undo-tree-id31188 . -1) (undo-tree-id31189 . -1) (undo-tree-id31190 . -1) (undo-tree-id31191 . -1) (undo-tree-id31192 . -1) (undo-tree-id31193 . -1) (undo-tree-id31194 . -1) (undo-tree-id31195 . -1) (undo-tree-id31196 . -1) (undo-tree-id31197 . -1) (undo-tree-id31198 . -1) (undo-tree-id31199 . -1) (undo-tree-id31200 . -1) (undo-tree-id31201 . -1) (undo-tree-id31202 . -1) (undo-tree-id31203 . -1) (undo-tree-id31204 . -1) (undo-tree-id31205 . -1) (undo-tree-id31206 . -1) (undo-tree-id31207 . -1) (undo-tree-id31208 . -1) (undo-tree-id31209 . -1) (undo-tree-id31210 . -1) (undo-tree-id31211 . -1) (undo-tree-id31212 . -1) (undo-tree-id31213 . -1) (undo-tree-id31214 . -1) (undo-tree-id31215 . -1) (undo-tree-id31216 . -1) (undo-tree-id31217 . -1) (undo-tree-id31218 . -1) (undo-tree-id31219 . -1) (undo-tree-id31220 . -1) (undo-tree-id31221 . -1) (undo-tree-id31222 . -1) (undo-tree-id31223 . -1) (undo-tree-id31224 . -1) (undo-tree-id31225 . -1) (undo-tree-id31226 . -1) (undo-tree-id31227 . -1) (undo-tree-id31228 . -1) (undo-tree-id31229 . -1) (undo-tree-id31230 . -1) (undo-tree-id31231 . -1) (undo-tree-id31232 . -1) (undo-tree-id31233 . -1) (undo-tree-id31234 . -1) (undo-tree-id31235 . -1) (undo-tree-id31236 . -1) (undo-tree-id31237 . -1) (undo-tree-id31238 . -1) (undo-tree-id31239 . -1) (undo-tree-id31240 . -1) (undo-tree-id31241 . -1) (undo-tree-id31242 . -1) (undo-tree-id31243 . -1) (undo-tree-id31244 . -1) (undo-tree-id31245 . -1) (undo-tree-id31246 . -1) (undo-tree-id31247 . -1) (undo-tree-id31248 . -1) (undo-tree-id31249 . -1) (undo-tree-id31250 . -1) (undo-tree-id31251 . -1) (undo-tree-id31252 . -1) (undo-tree-id31253 . -1) (undo-tree-id31254 . -1) (undo-tree-id31255 . -1) (undo-tree-id31256 . -1) (undo-tree-id31257 . -1) (undo-tree-id31258 . -1) (undo-tree-id31259 . -1) (undo-tree-id31260 . -1) (undo-tree-id31261 . -1) (undo-tree-id31262 . -1) (undo-tree-id31263 . -1) (undo-tree-id31264 . -1) (undo-tree-id31265 . -1) (undo-tree-id31266 . -1) (undo-tree-id31267 . -1) (undo-tree-id31268 . -1) (undo-tree-id31269 . -1) (undo-tree-id31270 . -1) (undo-tree-id31271 . -1) (undo-tree-id31272 . -1) (undo-tree-id31273 . -1) (undo-tree-id31274 . -1) (#("a" 0 1 (fontified t)) . -66970) (undo-tree-id31275 . -1) (undo-tree-id31276 . -1) (undo-tree-id31277 . -1) (undo-tree-id31278 . -1) (undo-tree-id31279 . -1) (undo-tree-id31280 . -1) (undo-tree-id31281 . -1) (undo-tree-id31282 . -1) (undo-tree-id31283 . -1) (undo-tree-id31284 . -1) (undo-tree-id31285 . -1) (undo-tree-id31286 . -1) (undo-tree-id31287 . -1) (undo-tree-id31288 . -1) (undo-tree-id31289 . -1) (undo-tree-id31290 . -1) (undo-tree-id31291 . -1) (undo-tree-id31292 . -1) (undo-tree-id31293 . -1) (undo-tree-id31294 . -1) (undo-tree-id31295 . -1) (undo-tree-id31296 . -1) (undo-tree-id31297 . -1) (undo-tree-id31298 . -1) (undo-tree-id31299 . -1) (undo-tree-id31300 . -1) (undo-tree-id31301 . -1) (undo-tree-id31302 . -1) (undo-tree-id31303 . -1) (undo-tree-id31304 . -1) (undo-tree-id31305 . -1) (undo-tree-id31306 . -1) (undo-tree-id31307 . -1) (undo-tree-id31308 . -1) (undo-tree-id31309 . -1) (undo-tree-id31310 . -1) (undo-tree-id31311 . -1) (undo-tree-id31312 . -1) (undo-tree-id31313 . -1) (undo-tree-id31314 . -1) (undo-tree-id31315 . -1) (undo-tree-id31316 . -1) (undo-tree-id31317 . -1) (undo-tree-id31318 . -1) (undo-tree-id31319 . -1) (undo-tree-id31320 . -1) (undo-tree-id31321 . -1) (undo-tree-id31322 . -1) (undo-tree-id31323 . -1) (undo-tree-id31324 . -1) (undo-tree-id31325 . -1) (undo-tree-id31326 . -1) (undo-tree-id31327 . -1) (undo-tree-id31328 . -1) (undo-tree-id31329 . -1) (undo-tree-id31330 . -1) (undo-tree-id31331 . -1) (undo-tree-id31332 . -1) (undo-tree-id31333 . -1) (undo-tree-id31334 . -1) (undo-tree-id31335 . -1) (undo-tree-id31336 . -1) (undo-tree-id31337 . -1) (undo-tree-id31338 . -1) (undo-tree-id31339 . -1) (undo-tree-id31340 . -1) (undo-tree-id31341 . -1) (undo-tree-id31342 . -1) (undo-tree-id31343 . -1) (undo-tree-id31344 . -1) (undo-tree-id31345 . -1) (undo-tree-id31346 . -1) (undo-tree-id31347 . -1) (undo-tree-id31348 . -1) (undo-tree-id31349 . -1) (undo-tree-id31350 . -1) (undo-tree-id31351 . -1) (undo-tree-id31352 . -1) (undo-tree-id31353 . -1) (undo-tree-id31354 . -1) (undo-tree-id31355 . -1) (undo-tree-id31356 . -1) (undo-tree-id31357 . -1) (undo-tree-id31358 . -1) (undo-tree-id31359 . -1) (undo-tree-id31360 . -1) (undo-tree-id31361 . -1) (undo-tree-id31362 . -1) (undo-tree-id31363 . -1) (undo-tree-id31364 . -1) (undo-tree-id31365 . -1) (undo-tree-id31366 . -1) (undo-tree-id31367 . -1) (undo-tree-id31368 . -1) (undo-tree-id31369 . -1) (undo-tree-id31370 . -1) (undo-tree-id31371 . -1) (undo-tree-id31372 . -1) (undo-tree-id31373 . -1) (undo-tree-id31374 . -1) (undo-tree-id31375 . -1) (undo-tree-id31376 . -1) (undo-tree-id31377 . -1) (undo-tree-id31378 . -1) (undo-tree-id31379 . -1) (undo-tree-id31380 . -1) (undo-tree-id31381 . -1) (undo-tree-id31382 . -1) (undo-tree-id31383 . -1) (undo-tree-id31384 . -1) (undo-tree-id31385 . -1) (undo-tree-id31386 . -1) (undo-tree-id31387 . -1) (undo-tree-id31388 . -1) (undo-tree-id31389 . -1) (undo-tree-id31390 . -1) (undo-tree-id31391 . -1) (undo-tree-id31392 . -1) (undo-tree-id31393 . -1) (undo-tree-id31394 . -1) (undo-tree-id31395 . -1) (undo-tree-id31396 . -1) (undo-tree-id31397 . -1) (undo-tree-id31398 . -1) (undo-tree-id31399 . -1) (undo-tree-id31400 . -1) (undo-tree-id31401 . -1) (undo-tree-id31402 . -1) (undo-tree-id31403 . -1) (undo-tree-id31404 . -1) (undo-tree-id31405 . -1) (undo-tree-id31406 . -1) (undo-tree-id31407 . -1) (undo-tree-id31408 . -1) (undo-tree-id31409 . -1) (undo-tree-id31410 . -1) (undo-tree-id31411 . -1) (undo-tree-id31412 . -1) (#("q" 0 1 (fontified t)) . -66971) (undo-tree-id31413 . -1) (undo-tree-id31414 . -1) (undo-tree-id31415 . -1) (undo-tree-id31416 . -1) (undo-tree-id31417 . -1) (undo-tree-id31418 . -1) (undo-tree-id31419 . -1) (undo-tree-id31420 . -1) (undo-tree-id31421 . -1) (undo-tree-id31422 . -1) (undo-tree-id31423 . -1) (undo-tree-id31424 . -1) (undo-tree-id31425 . -1) (undo-tree-id31426 . -1) (undo-tree-id31427 . -1) (undo-tree-id31428 . -1) (undo-tree-id31429 . -1) (undo-tree-id31430 . -1) (undo-tree-id31431 . -1) (undo-tree-id31432 . -1) (undo-tree-id31433 . -1) (undo-tree-id31434 . -1) (undo-tree-id31435 . -1) (undo-tree-id31436 . -1) (undo-tree-id31437 . -1) (undo-tree-id31438 . -1) (undo-tree-id31439 . -1) (undo-tree-id31440 . -1) (undo-tree-id31441 . -1) (undo-tree-id31442 . -1) (undo-tree-id31443 . -1) (undo-tree-id31444 . -1) (undo-tree-id31445 . -1) (undo-tree-id31446 . -1) (undo-tree-id31447 . -1) (undo-tree-id31448 . -1) (undo-tree-id31449 . -1) (undo-tree-id31450 . -1) (undo-tree-id31451 . -1) (undo-tree-id31452 . -1) (undo-tree-id31453 . -1) (undo-tree-id31454 . -1) (undo-tree-id31455 . -1) (undo-tree-id31456 . -1) (undo-tree-id31457 . -1) (undo-tree-id31458 . -1) (undo-tree-id31459 . -1) (undo-tree-id31460 . -1) (undo-tree-id31461 . -1) (undo-tree-id31462 . -1) (undo-tree-id31463 . -1) (undo-tree-id31464 . -1) (undo-tree-id31465 . -1) (undo-tree-id31466 . -1) (undo-tree-id31467 . -1) (undo-tree-id31468 . -1) (undo-tree-id31469 . -1) (undo-tree-id31470 . -1) (undo-tree-id31471 . -1) (undo-tree-id31472 . -1) (undo-tree-id31473 . -1) (undo-tree-id31474 . -1) (undo-tree-id31475 . -1) (undo-tree-id31476 . -1) (undo-tree-id31477 . -1) (undo-tree-id31478 . -1) (undo-tree-id31479 . -1) (undo-tree-id31480 . -1) (undo-tree-id31481 . -1) (undo-tree-id31482 . -1) (undo-tree-id31483 . -1) (undo-tree-id31484 . -1) (undo-tree-id31485 . -1) (undo-tree-id31486 . -1) (undo-tree-id31487 . -1) (undo-tree-id31488 . -1) (undo-tree-id31489 . -1) (undo-tree-id31490 . -1) (undo-tree-id31491 . -1) (undo-tree-id31492 . -1) (undo-tree-id31493 . -1) (undo-tree-id31494 . -1) (undo-tree-id31495 . -1) (undo-tree-id31496 . -1) (undo-tree-id31497 . -1) (undo-tree-id31498 . -1) (undo-tree-id31499 . -1) (undo-tree-id31500 . -1) (undo-tree-id31501 . -1) (undo-tree-id31502 . -1) (undo-tree-id31503 . -1) (undo-tree-id31504 . -1) (undo-tree-id31505 . -1) (undo-tree-id31506 . -1) (undo-tree-id31507 . -1) (undo-tree-id31508 . -1) (undo-tree-id31509 . -1) (undo-tree-id31510 . -1) (undo-tree-id31511 . -1) (undo-tree-id31512 . -1) (undo-tree-id31513 . -1) (undo-tree-id31514 . -1) (undo-tree-id31515 . -1) (undo-tree-id31516 . -1) (undo-tree-id31517 . -1) (undo-tree-id31518 . -1) (undo-tree-id31519 . -1) (undo-tree-id31520 . -1) (undo-tree-id31521 . -1) (undo-tree-id31522 . -1) (undo-tree-id31523 . -1) (undo-tree-id31524 . -1) (#("u" 0 1 (fontified t)) . -66972) (undo-tree-id31525 . -1) (undo-tree-id31526 . -1) (undo-tree-id31527 . -1) (undo-tree-id31528 . -1) (undo-tree-id31529 . -1) (undo-tree-id31530 . -1) (undo-tree-id31531 . -1) (undo-tree-id31532 . -1) (undo-tree-id31533 . -1) (undo-tree-id31534 . -1) (undo-tree-id31535 . -1) (undo-tree-id31536 . -1) (undo-tree-id31537 . -1) (undo-tree-id31538 . -1) (undo-tree-id31539 . -1) (undo-tree-id31540 . -1) (undo-tree-id31541 . -1) (undo-tree-id31542 . -1) (undo-tree-id31543 . -1) (undo-tree-id31544 . -1) (undo-tree-id31545 . -1) (undo-tree-id31546 . -1) (undo-tree-id31547 . -1) (undo-tree-id31548 . -1) (undo-tree-id31549 . -1) (undo-tree-id31550 . -1) (undo-tree-id31551 . -1) (undo-tree-id31552 . -1) (undo-tree-id31553 . -1) (undo-tree-id31554 . -1) (undo-tree-id31555 . -1) (undo-tree-id31556 . -1) (undo-tree-id31557 . -1) (undo-tree-id31558 . -1) (undo-tree-id31559 . -1) (undo-tree-id31560 . -1) (undo-tree-id31561 . -1) (undo-tree-id31562 . -1) (undo-tree-id31563 . -1) (undo-tree-id31564 . -1) (undo-tree-id31565 . -1) (undo-tree-id31566 . -1) (undo-tree-id31567 . -1) (undo-tree-id31568 . -1) (undo-tree-id31569 . -1) (undo-tree-id31570 . -1) (undo-tree-id31571 . -1) (undo-tree-id31572 . -1) (undo-tree-id31573 . -1) (undo-tree-id31574 . -1) (undo-tree-id31575 . -1) (undo-tree-id31576 . -1) (undo-tree-id31577 . -1) (undo-tree-id31578 . -1) (undo-tree-id31579 . -1) (undo-tree-id31580 . -1) (undo-tree-id31581 . -1) (undo-tree-id31582 . -1) (undo-tree-id31583 . -1) (undo-tree-id31584 . -1) (undo-tree-id31585 . -1) (undo-tree-id31586 . -1) (undo-tree-id31587 . -1) (undo-tree-id31588 . -1) (undo-tree-id31589 . -1) (undo-tree-id31590 . -1) (undo-tree-id31591 . -1) (undo-tree-id31592 . -1) (undo-tree-id31593 . -1) (undo-tree-id31594 . -1) (undo-tree-id31595 . -1) (undo-tree-id31596 . -1) (undo-tree-id31597 . -1) (undo-tree-id31598 . -1) (undo-tree-id31599 . -1) (undo-tree-id31600 . -1) (undo-tree-id31601 . -1) (undo-tree-id31602 . -1) (undo-tree-id31603 . -1) (undo-tree-id31604 . -1) (undo-tree-id31605 . -1) (#("a" 0 1 (fontified t)) . -66973) (undo-tree-id31606 . -1) (undo-tree-id31607 . -1) (undo-tree-id31608 . -1) (undo-tree-id31609 . -1) (undo-tree-id31610 . -1) (undo-tree-id31611 . -1) (undo-tree-id31612 . -1) (undo-tree-id31613 . -1) (undo-tree-id31614 . -1) (undo-tree-id31615 . -1) (undo-tree-id31616 . -1) (undo-tree-id31617 . -1) (undo-tree-id31618 . -1) (undo-tree-id31619 . -1) (undo-tree-id31620 . -1) (undo-tree-id31621 . -1) (undo-tree-id31622 . -1) (undo-tree-id31623 . -1) (undo-tree-id31624 . -1) (undo-tree-id31625 . -1) (undo-tree-id31626 . -1) (undo-tree-id31627 . -1) (undo-tree-id31628 . -1) (undo-tree-id31629 . -1) (undo-tree-id31630 . -1) (undo-tree-id31631 . -1) (undo-tree-id31632 . -1) (undo-tree-id31633 . -1) (undo-tree-id31634 . -1) (undo-tree-id31635 . -1) (undo-tree-id31636 . -1) (undo-tree-id31637 . -1) (undo-tree-id31638 . -1) (undo-tree-id31639 . -1) (undo-tree-id31640 . -1) (undo-tree-id31641 . -1) (undo-tree-id31642 . -1) (undo-tree-id31643 . -1) (undo-tree-id31644 . -1) (undo-tree-id31645 . -1) (undo-tree-id31646 . -1) (undo-tree-id31647 . -1) (undo-tree-id31648 . -1) (undo-tree-id31649 . -1) (undo-tree-id31650 . -1) (undo-tree-id31651 . -1) (undo-tree-id31652 . -1) (undo-tree-id31653 . -1) (undo-tree-id31654 . -1) (undo-tree-id31655 . -1) 66974 (#("i" 0 1 (fontified t)) . -66974) (undo-tree-id31656 . -1) (undo-tree-id31657 . -1) (undo-tree-id31658 . -1) (undo-tree-id31659 . -1) (undo-tree-id31660 . -1) (undo-tree-id31661 . -1) (undo-tree-id31662 . -1) (undo-tree-id31663 . -1) (undo-tree-id31664 . -1) (undo-tree-id31665 . -1) (undo-tree-id31666 . -1) (undo-tree-id31667 . -1) (undo-tree-id31668 . -1) (undo-tree-id31669 . -1) (undo-tree-id31670 . -1) (undo-tree-id31671 . -1) (undo-tree-id31672 . -1) (undo-tree-id31673 . -1) (undo-tree-id31674 . -1) 66975 (66954 . 66975) (#(" " 0 1 (fontified t)) . -66954) (undo-tree-id31675 . -1) (undo-tree-id31676 . -1) (undo-tree-id31677 . -1) (undo-tree-id31678 . -1) (undo-tree-id31679 . -1) (undo-tree-id31680 . -1) (undo-tree-id31681 . -1) (undo-tree-id31682 . -1) (undo-tree-id31683 . -1) (undo-tree-id31684 . -1) (undo-tree-id31685 . -1) (undo-tree-id31686 . -1) (undo-tree-id31687 . -1) (undo-tree-id31688 . -1) (undo-tree-id31689 . -1) (undo-tree-id31690 . -1) (undo-tree-id31691 . -1) (undo-tree-id31692 . -1) (undo-tree-id31693 . -1) (undo-tree-id31694 . -1) (undo-tree-id31695 . -1) (undo-tree-id31696 . -1) (undo-tree-id31697 . -1) (undo-tree-id31698 . -1) (undo-tree-id31699 . -1) (undo-tree-id31700 . -1) (undo-tree-id31701 . -1) (undo-tree-id31702 . -1) (undo-tree-id31703 . -1) (undo-tree-id31704 . -1) (undo-tree-id31705 . -1) (undo-tree-id31706 . -1) (undo-tree-id31707 . -1) (undo-tree-id31708 . -1) (undo-tree-id31709 . -1) (undo-tree-id31710 . -1) (undo-tree-id31711 . -1) (undo-tree-id31712 . -1) (undo-tree-id31713 . -1) (undo-tree-id31714 . -1) (#("y" 0 1 (fontified t)) . -66955) (undo-tree-id31715 . -1) (undo-tree-id31716 . -1) (undo-tree-id31717 . -1) (undo-tree-id31718 . -1) (undo-tree-id31719 . -1) (undo-tree-id31720 . -1) (undo-tree-id31721 . -1) (undo-tree-id31722 . -1) (undo-tree-id31723 . -1) (undo-tree-id31724 . -1) (undo-tree-id31725 . -1) (undo-tree-id31726 . -1) (undo-tree-id31727 . -1) (undo-tree-id31728 . -1) (undo-tree-id31729 . -1) (undo-tree-id31730 . -1) (undo-tree-id31731 . -1) (undo-tree-id31732 . -1) (undo-tree-id31733 . -1) 66956 (66954 . 66956) (#("y" 0 1 (fontified t)) . -66954) (undo-tree-id31734 . -1) (undo-tree-id31735 . -1) (undo-tree-id31736 . -1) (undo-tree-id31737 . -1) (undo-tree-id31738 . -1) (undo-tree-id31739 . -1) (undo-tree-id31740 . -1) (undo-tree-id31741 . -1) (undo-tree-id31742 . -1) (undo-tree-id31743 . -1) (undo-tree-id31744 . -1) (undo-tree-id31745 . -1) (undo-tree-id31746 . -1) (undo-tree-id31747 . -1) (undo-tree-id31748 . -1) (undo-tree-id31749 . -1) (undo-tree-id31750 . -1) (undo-tree-id31751 . -1) (undo-tree-id31752 . -1) (undo-tree-id31753 . -1) (undo-tree-id31754 . -1) (undo-tree-id31755 . -1) (undo-tree-id31756 . -1) (undo-tree-id31757 . -1) (undo-tree-id31758 . -1) (undo-tree-id31759 . -1) (undo-tree-id31760 . -1) (undo-tree-id31761 . -1) (undo-tree-id31762 . -1) (undo-tree-id31763 . -1) (undo-tree-id31764 . -1) (undo-tree-id31765 . -1) (undo-tree-id31766 . -1) (undo-tree-id31767 . -1) (undo-tree-id31768 . -1) (undo-tree-id31769 . -1) (undo-tree-id31770 . -1) (#("s" 0 1 (fontified t)) . -66955) (undo-tree-id31771 . -1) (undo-tree-id31772 . -1) (undo-tree-id31773 . -1) (undo-tree-id31774 . -1) (undo-tree-id31775 . -1) (undo-tree-id31776 . -1) (undo-tree-id31777 . -1) (undo-tree-id31778 . -1) (undo-tree-id31779 . -1) (undo-tree-id31780 . -1) (undo-tree-id31781 . -1) (undo-tree-id31782 . -1) (undo-tree-id31783 . -1) (undo-tree-id31784 . -1) (undo-tree-id31785 . -1) (undo-tree-id31786 . -1) (undo-tree-id31787 . -1) (undo-tree-id31788 . -1) (undo-tree-id31789 . -1) (undo-tree-id31790 . -1) (undo-tree-id31791 . -1) 66956 (66935 . 66956) (66915 . 66935) (#("c" 0 1 (fontified t)) . -66915) (undo-tree-id31792 . -1) (undo-tree-id31793 . -1) (undo-tree-id31794 . -1) (undo-tree-id31795 . -1) (undo-tree-id31796 . -1) (undo-tree-id31797 . -1) (undo-tree-id31798 . -1) (undo-tree-id31799 . -1) (undo-tree-id31800 . -1) (undo-tree-id31801 . -1) (undo-tree-id31802 . -1) (undo-tree-id31803 . -1) (undo-tree-id31804 . -1) (undo-tree-id31805 . -1) (undo-tree-id31806 . -1) (undo-tree-id31807 . -1) (undo-tree-id31808 . -1) (undo-tree-id31809 . -1) (undo-tree-id31810 . -1) (undo-tree-id31811 . -1) (undo-tree-id31812 . -1) (undo-tree-id31813 . -1) (undo-tree-id31814 . -1) (undo-tree-id31815 . -1) (undo-tree-id31816 . -1) (undo-tree-id31817 . -1) (undo-tree-id31818 . -1) (undo-tree-id31819 . -1) (undo-tree-id31820 . -1) (undo-tree-id31821 . -1) (undo-tree-id31822 . -1) (undo-tree-id31823 . -1) (undo-tree-id31824 . -1) (undo-tree-id31825 . -1) (undo-tree-id31826 . -1) (undo-tree-id31827 . -1) (undo-tree-id31828 . -1) (undo-tree-id31829 . -1) (undo-tree-id31830 . -1) (undo-tree-id31831 . -1) (undo-tree-id31832 . -1) (undo-tree-id31833 . -1) (undo-tree-id31834 . -1) (undo-tree-id31835 . -1) (undo-tree-id31836 . -1) (undo-tree-id31837 . -1) (undo-tree-id31838 . -1) (undo-tree-id31839 . -1) (undo-tree-id31840 . -1) (undo-tree-id31841 . -1) (undo-tree-id31842 . -1) (undo-tree-id31843 . -1) (undo-tree-id31844 . -1) (undo-tree-id31845 . -1) (undo-tree-id31846 . -1) (undo-tree-id31847 . -1) (undo-tree-id31848 . -1) (undo-tree-id31849 . -1) (undo-tree-id31850 . -1) (undo-tree-id31851 . -1) (undo-tree-id31852 . -1) (undo-tree-id31853 . -1) (undo-tree-id31854 . -1) (undo-tree-id31855 . -1) (undo-tree-id31856 . -1) (undo-tree-id31857 . -1) (undo-tree-id31858 . -1) (#("i" 0 1 (fontified t)) . -66916) (undo-tree-id31859 . -1) (undo-tree-id31860 . -1) (undo-tree-id31861 . -1) (undo-tree-id31862 . -1) (undo-tree-id31863 . -1) (undo-tree-id31864 . -1) (undo-tree-id31865 . -1) (undo-tree-id31866 . -1) (undo-tree-id31867 . -1) (undo-tree-id31868 . -1) (undo-tree-id31869 . -1) (undo-tree-id31870 . -1) (undo-tree-id31871 . -1) (undo-tree-id31872 . -1) (undo-tree-id31873 . -1) (undo-tree-id31874 . -1) (undo-tree-id31875 . -1) (undo-tree-id31876 . -1) (undo-tree-id31877 . -1) (undo-tree-id31878 . -1) (undo-tree-id31879 . -1) (undo-tree-id31880 . -1) (undo-tree-id31881 . -1) (undo-tree-id31882 . -1) (undo-tree-id31883 . -1) (undo-tree-id31884 . -1) (undo-tree-id31885 . -1) (undo-tree-id31886 . -1) (undo-tree-id31887 . -1) (undo-tree-id31888 . -1) (undo-tree-id31889 . -1) (undo-tree-id31890 . -1) (undo-tree-id31891 . -1) (undo-tree-id31892 . -1) (undo-tree-id31893 . -1) (undo-tree-id31894 . -1) (undo-tree-id31895 . -1) (undo-tree-id31896 . -1) (undo-tree-id31897 . -1) (undo-tree-id31898 . -1) (undo-tree-id31899 . -1) (undo-tree-id31900 . -1) (undo-tree-id31901 . -1) (undo-tree-id31902 . -1) (undo-tree-id31903 . -1) (undo-tree-id31904 . -1) (undo-tree-id31905 . -1) (undo-tree-id31906 . -1) (undo-tree-id31907 . -1) (undo-tree-id31908 . -1) (undo-tree-id31909 . -1) (#(" " 0 1 (fontified t)) . -66917) (undo-tree-id31910 . -1) (undo-tree-id31911 . -1) (undo-tree-id31912 . -1) (undo-tree-id31913 . -1) (undo-tree-id31914 . -1) (undo-tree-id31915 . -1) (undo-tree-id31916 . -1) (undo-tree-id31917 . -1) (undo-tree-id31918 . -1) (undo-tree-id31919 . -1) (undo-tree-id31920 . -1) (undo-tree-id31921 . -1) (undo-tree-id31922 . -1) (undo-tree-id31923 . -1) (undo-tree-id31924 . -1) (undo-tree-id31925 . -1) (undo-tree-id31926 . -1) (undo-tree-id31927 . -1) (undo-tree-id31928 . -1) (undo-tree-id31929 . -1) (undo-tree-id31930 . -1) (undo-tree-id31931 . -1) (undo-tree-id31932 . -1) (undo-tree-id31933 . -1) (undo-tree-id31934 . -1) (undo-tree-id31935 . -1) (undo-tree-id31936 . -1) (undo-tree-id31937 . -1) (undo-tree-id31938 . -1) (undo-tree-id31939 . -1) (#("h" 0 1 (fontified t)) . -66918) (undo-tree-id31940 . -1) (undo-tree-id31941 . -1) (undo-tree-id31942 . -1) (undo-tree-id31943 . -1) (undo-tree-id31944 . -1) (undo-tree-id31945 . -1) (undo-tree-id31946 . -1) (undo-tree-id31947 . -1) (undo-tree-id31948 . -1) (undo-tree-id31949 . -1) (undo-tree-id31950 . -1) (undo-tree-id31951 . -1) (undo-tree-id31952 . -1) (undo-tree-id31953 . -1) 66919 (66911 . 66919) (#(" " 0 1 (fontified t)) . -66911) (undo-tree-id31954 . -1) (undo-tree-id31955 . -1) (undo-tree-id31956 . -1) (undo-tree-id31957 . -1) (undo-tree-id31958 . -1) (undo-tree-id31959 . -1) (undo-tree-id31960 . -1) (undo-tree-id31961 . -1) (undo-tree-id31962 . -1) (undo-tree-id31963 . -1) (undo-tree-id31964 . -1) (undo-tree-id31965 . -1) (undo-tree-id31966 . -1) (undo-tree-id31967 . -1) (undo-tree-id31968 . -1) (undo-tree-id31969 . -1) (undo-tree-id31970 . -1) (undo-tree-id31971 . -1) (undo-tree-id31972 . -1) (undo-tree-id31973 . -1) (undo-tree-id31974 . -1) (undo-tree-id31975 . -1) (undo-tree-id31976 . -1) (undo-tree-id31977 . -1) (undo-tree-id31978 . -1) (undo-tree-id31979 . -1) (undo-tree-id31980 . -1) (undo-tree-id31981 . -1) (undo-tree-id31982 . -1) 66912 (66893 . 66912) (66891 . 66893) (#("w" 0 1 (fontified t)) . -66891) (undo-tree-id31983 . -1) (undo-tree-id31984 . -1) (undo-tree-id31985 . -1) (undo-tree-id31986 . -1) (undo-tree-id31987 . -1) (undo-tree-id31988 . -1) (undo-tree-id31989 . -1) (undo-tree-id31990 . -1) (undo-tree-id31991 . -1) (undo-tree-id31992 . -1) (undo-tree-id31993 . -1) (undo-tree-id31994 . -1) (undo-tree-id31995 . -1) (undo-tree-id31996 . -1) (undo-tree-id31997 . -1) (undo-tree-id31998 . -1) (undo-tree-id31999 . -1) (undo-tree-id32000 . -1) (undo-tree-id32001 . -1) (undo-tree-id32002 . -1) (undo-tree-id32003 . -1) (undo-tree-id32004 . -1) (undo-tree-id32005 . -1) (undo-tree-id32006 . -1) (undo-tree-id32007 . -1) (undo-tree-id32008 . -1) (undo-tree-id32009 . -1) (undo-tree-id32010 . -1) (undo-tree-id32011 . -1) (undo-tree-id32012 . -1) (undo-tree-id32013 . -1) (undo-tree-id32014 . -1) (undo-tree-id32015 . -1) (undo-tree-id32016 . -1) (undo-tree-id32017 . -1) (undo-tree-id32018 . -1) (undo-tree-id32019 . -1) (undo-tree-id32020 . -1) (undo-tree-id32021 . -1) (undo-tree-id32022 . -1) (undo-tree-id32023 . -1) (undo-tree-id32024 . -1) (undo-tree-id32025 . -1) (undo-tree-id32026 . -1) (undo-tree-id32027 . -1) (undo-tree-id32028 . -1) (undo-tree-id32029 . -1) (undo-tree-id32030 . -1) (undo-tree-id32031 . -1) (undo-tree-id32032 . -1) (undo-tree-id32033 . -1) (undo-tree-id32034 . -1) (undo-tree-id32035 . -1) (undo-tree-id32036 . -1) (undo-tree-id32037 . -1) (undo-tree-id32038 . -1) (undo-tree-id32039 . -1) (undo-tree-id32040 . -1) (undo-tree-id32041 . -1) (undo-tree-id32042 . -1) (undo-tree-id32043 . -1) (undo-tree-id32044 . -1) (#("t" 0 1 (fontified t)) . -66892) (undo-tree-id32045 . -1) (undo-tree-id32046 . -1) (undo-tree-id32047 . -1) (undo-tree-id32048 . -1) (undo-tree-id32049 . -1) (undo-tree-id32050 . -1) (undo-tree-id32051 . -1) (undo-tree-id32052 . -1) (undo-tree-id32053 . -1) (undo-tree-id32054 . -1) (undo-tree-id32055 . -1) (undo-tree-id32056 . -1) (undo-tree-id32057 . -1) (undo-tree-id32058 . -1) (undo-tree-id32059 . -1) (undo-tree-id32060 . -1) (undo-tree-id32061 . -1) (undo-tree-id32062 . -1) (undo-tree-id32063 . -1) (undo-tree-id32064 . -1) (undo-tree-id32065 . -1) (undo-tree-id32066 . -1) (undo-tree-id32067 . -1) (undo-tree-id32068 . -1) (undo-tree-id32069 . -1) (undo-tree-id32070 . -1) (undo-tree-id32071 . -1) (undo-tree-id32072 . -1) (undo-tree-id32073 . -1) (undo-tree-id32074 . -1) (undo-tree-id32075 . -1) (undo-tree-id32076 . -1) (undo-tree-id32077 . -1) (undo-tree-id32078 . -1) (undo-tree-id32079 . -1) (undo-tree-id32080 . -1) (undo-tree-id32081 . -1) (undo-tree-id32082 . -1) (undo-tree-id32083 . -1) (undo-tree-id32084 . -1) (undo-tree-id32085 . -1) (undo-tree-id32086 . -1) (undo-tree-id32087 . -1) (undo-tree-id32088 . -1) (undo-tree-id32089 . -1) (undo-tree-id32090 . -1) (#("h" 0 1 (fontified t)) . -66893) (undo-tree-id32091 . -1) (undo-tree-id32092 . -1) (undo-tree-id32093 . -1) (undo-tree-id32094 . -1) (undo-tree-id32095 . -1) (undo-tree-id32096 . -1) (undo-tree-id32097 . -1) (undo-tree-id32098 . -1) (undo-tree-id32099 . -1) (undo-tree-id32100 . -1) (undo-tree-id32101 . -1) (undo-tree-id32102 . -1) (undo-tree-id32103 . -1) (undo-tree-id32104 . -1) (undo-tree-id32105 . -1) (undo-tree-id32106 . -1) (undo-tree-id32107 . -1) (undo-tree-id32108 . -1) (undo-tree-id32109 . -1) (undo-tree-id32110 . -1) (undo-tree-id32111 . -1) (undo-tree-id32112 . -1) (undo-tree-id32113 . -1) (undo-tree-id32114 . -1) (undo-tree-id32115 . -1) (undo-tree-id32116 . -1) (undo-tree-id32117 . -1) (undo-tree-id32118 . -1) (undo-tree-id32119 . -1) (undo-tree-id32120 . -1) (#(" " 0 1 (fontified t)) . -66894) (undo-tree-id32121 . -1) (undo-tree-id32122 . -1) (undo-tree-id32123 . -1) (undo-tree-id32124 . -1) (undo-tree-id32125 . -1) (undo-tree-id32126 . -1) (undo-tree-id32127 . -1) (undo-tree-id32128 . -1) (undo-tree-id32129 . -1) (undo-tree-id32130 . -1) (undo-tree-id32131 . -1) (undo-tree-id32132 . -1) (undo-tree-id32133 . -1) (undo-tree-id32134 . -1) 66895 (66889 . 66895) (#("t" 0 1 (fontified t)) . -66889) (undo-tree-id32135 . -1) (undo-tree-id32136 . -1) (undo-tree-id32137 . -1) (undo-tree-id32138 . -1) (undo-tree-id32139 . -1) (undo-tree-id32140 . -1) (undo-tree-id32141 . -1) (undo-tree-id32142 . -1) (undo-tree-id32143 . -1) (undo-tree-id32144 . -1) (undo-tree-id32145 . -1) (undo-tree-id32146 . -1) (undo-tree-id32147 . -1) (undo-tree-id32148 . -1) (undo-tree-id32149 . -1) (undo-tree-id32150 . -1) (undo-tree-id32151 . -1) (undo-tree-id32152 . -1) (undo-tree-id32153 . -1) 66890 (66882 . 66890) (66861 . 66882) (#("v" 0 1 (fontified t)) . -66861) (undo-tree-id32154 . -1) (undo-tree-id32155 . -1) (undo-tree-id32156 . -1) (undo-tree-id32157 . -1) (undo-tree-id32158 . -1) (undo-tree-id32159 . -1) (undo-tree-id32160 . -1) (undo-tree-id32161 . -1) (undo-tree-id32162 . -1) (undo-tree-id32163 . -1) (undo-tree-id32164 . -1) (undo-tree-id32165 . -1) (undo-tree-id32166 . -1) (undo-tree-id32167 . -1) (undo-tree-id32168 . -1) (undo-tree-id32169 . -1) (undo-tree-id32170 . -1) (undo-tree-id32171 . -1) (undo-tree-id32172 . -1) (undo-tree-id32173 . -1) (undo-tree-id32174 . -1) (undo-tree-id32175 . -1) (undo-tree-id32176 . -1) (undo-tree-id32177 . -1) (undo-tree-id32178 . -1) (undo-tree-id32179 . -1) (undo-tree-id32180 . -1) (undo-tree-id32181 . -1) (undo-tree-id32182 . -1) (undo-tree-id32183 . -1) (undo-tree-id32184 . -1) (undo-tree-id32185 . -1) (undo-tree-id32186 . -1) (undo-tree-id32187 . -1) (undo-tree-id32188 . -1) (undo-tree-id32189 . -1) (undo-tree-id32190 . -1) (undo-tree-id32191 . -1) (undo-tree-id32192 . -1) (undo-tree-id32193 . -1) (undo-tree-id32194 . -1) (undo-tree-id32195 . -1) (undo-tree-id32196 . -1) (undo-tree-id32197 . -1) (undo-tree-id32198 . -1) (undo-tree-id32199 . -1) (undo-tree-id32200 . -1) (undo-tree-id32201 . -1) (undo-tree-id32202 . -1) (undo-tree-id32203 . -1) (undo-tree-id32204 . -1) (undo-tree-id32205 . -1) (#("e" 0 1 (fontified t)) . -66862) (undo-tree-id32206 . -1) (undo-tree-id32207 . -1) (undo-tree-id32208 . -1) (undo-tree-id32209 . -1) (undo-tree-id32210 . -1) (undo-tree-id32211 . -1) (undo-tree-id32212 . -1) (undo-tree-id32213 . -1) (undo-tree-id32214 . -1) (undo-tree-id32215 . -1) (undo-tree-id32216 . -1) (undo-tree-id32217 . -1) (undo-tree-id32218 . -1) (undo-tree-id32219 . -1) (undo-tree-id32220 . -1) (undo-tree-id32221 . -1) (undo-tree-id32222 . -1) (undo-tree-id32223 . -1) (undo-tree-id32224 . -1) (undo-tree-id32225 . -1) (undo-tree-id32226 . -1) (undo-tree-id32227 . -1) (undo-tree-id32228 . -1) (undo-tree-id32229 . -1) (undo-tree-id32230 . -1) (undo-tree-id32231 . -1) (undo-tree-id32232 . -1) (undo-tree-id32233 . -1) (undo-tree-id32234 . -1) (undo-tree-id32235 . -1) (undo-tree-id32236 . -1) (undo-tree-id32237 . -1) (undo-tree-id32238 . -1) (undo-tree-id32239 . -1) (undo-tree-id32240 . -1) (#(" " 0 1 (fontified t)) . -66863) (undo-tree-id32241 . -1) (undo-tree-id32242 . -1) (undo-tree-id32243 . -1) (undo-tree-id32244 . -1) (undo-tree-id32245 . -1) (undo-tree-id32246 . -1) (undo-tree-id32247 . -1) (undo-tree-id32248 . -1) (undo-tree-id32249 . -1) (undo-tree-id32250 . -1) (undo-tree-id32251 . -1) (undo-tree-id32252 . -1) (undo-tree-id32253 . -1) (undo-tree-id32254 . -1) (undo-tree-id32255 . -1) (undo-tree-id32256 . -1) (undo-tree-id32257 . -1) (undo-tree-id32258 . -1) (undo-tree-id32259 . -1) 66864 (66844 . 66864) (66842 . 66844) (#("," 0 1 (fontified t)) . -66842) (undo-tree-id32260 . -1) (undo-tree-id32261 . -1) (undo-tree-id32262 . -1) (undo-tree-id32263 . -1) (undo-tree-id32264 . -1) (undo-tree-id32265 . -1) (undo-tree-id32266 . -1) (undo-tree-id32267 . -1) (undo-tree-id32268 . -1) (undo-tree-id32269 . -1) (undo-tree-id32270 . -1) (undo-tree-id32271 . -1) (undo-tree-id32272 . -1) (undo-tree-id32273 . -1) (undo-tree-id32274 . -1) (undo-tree-id32275 . -1) (undo-tree-id32276 . -1) (undo-tree-id32277 . -1) (undo-tree-id32278 . -1) (undo-tree-id32279 . -1) (undo-tree-id32280 . -1) (undo-tree-id32281 . -1) (undo-tree-id32282 . -1) (undo-tree-id32283 . -1) (undo-tree-id32284 . -1) (undo-tree-id32285 . -1) (undo-tree-id32286 . -1) (undo-tree-id32287 . -1) (undo-tree-id32288 . -1) (undo-tree-id32289 . -1) (undo-tree-id32290 . -1) (undo-tree-id32291 . -1) (undo-tree-id32292 . -1) (undo-tree-id32293 . -1) (undo-tree-id32294 . -1) (#(" " 0 1 (fontified t)) . -66843) (undo-tree-id32295 . -1) (undo-tree-id32296 . -1) (undo-tree-id32297 . -1) (undo-tree-id32298 . -1) (undo-tree-id32299 . -1) (undo-tree-id32300 . -1) (undo-tree-id32301 . -1) (undo-tree-id32302 . -1) (undo-tree-id32303 . -1) (undo-tree-id32304 . -1) (undo-tree-id32305 . -1) (undo-tree-id32306 . -1) (undo-tree-id32307 . -1) (undo-tree-id32308 . -1) (undo-tree-id32309 . -1) (undo-tree-id32310 . -1) (undo-tree-id32311 . -1) (undo-tree-id32312 . -1) (undo-tree-id32313 . -1) 66844 (66840 . 66844) (66819 . 66840) (#("n" 0 1 (fontified t)) . -66819) (undo-tree-id32314 . -1) (undo-tree-id32315 . -1) (undo-tree-id32316 . -1) (undo-tree-id32317 . -1) (undo-tree-id32318 . -1) (undo-tree-id32319 . -1) (undo-tree-id32320 . -1) (undo-tree-id32321 . -1) (undo-tree-id32322 . -1) (undo-tree-id32323 . -1) (undo-tree-id32324 . -1) (undo-tree-id32325 . -1) (undo-tree-id32326 . -1) (undo-tree-id32327 . -1) (undo-tree-id32328 . -1) (undo-tree-id32329 . -1) (undo-tree-id32330 . -1) (undo-tree-id32331 . -1) (undo-tree-id32332 . -1) (undo-tree-id32333 . -1) (undo-tree-id32334 . -1) (undo-tree-id32335 . -1) (undo-tree-id32336 . -1) (undo-tree-id32337 . -1) (undo-tree-id32338 . -1) (undo-tree-id32339 . -1) (undo-tree-id32340 . -1) (undo-tree-id32341 . -1) (undo-tree-id32342 . -1) (undo-tree-id32343 . -1) (undo-tree-id32344 . -1) (undo-tree-id32345 . -1) (undo-tree-id32346 . -1) (undo-tree-id32347 . -1) (undo-tree-id32348 . -1) (undo-tree-id32349 . -1) (undo-tree-id32350 . -1) (undo-tree-id32351 . -1) (undo-tree-id32352 . -1) (undo-tree-id32353 . -1) (undo-tree-id32354 . -1) (undo-tree-id32355 . -1) (undo-tree-id32356 . -1) (undo-tree-id32357 . -1) (undo-tree-id32358 . -1) (undo-tree-id32359 . -1) (undo-tree-id32360 . -1) (undo-tree-id32361 . -1) (undo-tree-id32362 . -1) (undo-tree-id32363 . -1) (undo-tree-id32364 . -1) (undo-tree-id32365 . -1) (undo-tree-id32366 . -1) (undo-tree-id32367 . -1) (undo-tree-id32368 . -1) (undo-tree-id32369 . -1) (#("e" 0 1 (fontified t)) . -66820) (undo-tree-id32370 . -1) (undo-tree-id32371 . -1) (undo-tree-id32372 . -1) (undo-tree-id32373 . -1) (undo-tree-id32374 . -1) (undo-tree-id32375 . -1) (undo-tree-id32376 . -1) (undo-tree-id32377 . -1) (undo-tree-id32378 . -1) (undo-tree-id32379 . -1) (undo-tree-id32380 . -1) (undo-tree-id32381 . -1) (undo-tree-id32382 . -1) (undo-tree-id32383 . -1) (undo-tree-id32384 . -1) (undo-tree-id32385 . -1) (undo-tree-id32386 . -1) (undo-tree-id32387 . -1) (undo-tree-id32388 . -1) (undo-tree-id32389 . -1) (undo-tree-id32390 . -1) (undo-tree-id32391 . -1) (undo-tree-id32392 . -1) (undo-tree-id32393 . -1) (undo-tree-id32394 . -1) (undo-tree-id32395 . -1) (undo-tree-id32396 . -1) (undo-tree-id32397 . -1) (undo-tree-id32398 . -1) (undo-tree-id32399 . -1) (undo-tree-id32400 . -1) (undo-tree-id32401 . -1) (undo-tree-id32402 . -1) (undo-tree-id32403 . -1) (undo-tree-id32404 . -1) (undo-tree-id32405 . -1) (undo-tree-id32406 . -1) (undo-tree-id32407 . -1) (undo-tree-id32408 . -1) (undo-tree-id32409 . -1) (#("t" 0 1 (fontified t)) . -66821) (undo-tree-id32410 . -1) (undo-tree-id32411 . -1) (undo-tree-id32412 . -1) (undo-tree-id32413 . -1) (undo-tree-id32414 . -1) (undo-tree-id32415 . -1) (undo-tree-id32416 . -1) (undo-tree-id32417 . -1) (undo-tree-id32418 . -1) (undo-tree-id32419 . -1) (undo-tree-id32420 . -1) (undo-tree-id32421 . -1) (undo-tree-id32422 . -1) (undo-tree-id32423 . -1) (undo-tree-id32424 . -1) (undo-tree-id32425 . -1) (undo-tree-id32426 . -1) (undo-tree-id32427 . -1) (undo-tree-id32428 . -1) 66822 (66818 . 66822) (66816 . 66818) (#("d" 0 1 (fontified t)) . -66816) (undo-tree-id32429 . -1) (undo-tree-id32430 . -1) (undo-tree-id32431 . -1) (undo-tree-id32432 . -1) (undo-tree-id32433 . -1) (undo-tree-id32434 . -1) (undo-tree-id32435 . -1) (undo-tree-id32436 . -1) (undo-tree-id32437 . -1) (undo-tree-id32438 . -1) (undo-tree-id32439 . -1) (undo-tree-id32440 . -1) (undo-tree-id32441 . -1) (undo-tree-id32442 . -1) (undo-tree-id32443 . -1) (undo-tree-id32444 . -1) (undo-tree-id32445 . -1) (undo-tree-id32446 . -1) (undo-tree-id32447 . -1) (undo-tree-id32448 . -1) (undo-tree-id32449 . -1) (undo-tree-id32450 . -1) (undo-tree-id32451 . -1) (undo-tree-id32452 . -1) (undo-tree-id32453 . -1) (undo-tree-id32454 . -1) (undo-tree-id32455 . -1) (undo-tree-id32456 . -1) (undo-tree-id32457 . -1) (undo-tree-id32458 . -1) (undo-tree-id32459 . -1) (undo-tree-id32460 . -1) (undo-tree-id32461 . -1) (undo-tree-id32462 . -1) (undo-tree-id32463 . -1) (#("a" 0 1 (fontified t)) . -66817) (undo-tree-id32464 . -1) (undo-tree-id32465 . -1) (undo-tree-id32466 . -1) (undo-tree-id32467 . -1) (undo-tree-id32468 . -1) (undo-tree-id32469 . -1) (undo-tree-id32470 . -1) (undo-tree-id32471 . -1) (undo-tree-id32472 . -1) 66818 (66813 . 66818) (#("n" 0 1 (fontified t)) . -66813) (undo-tree-id32473 . -1) (undo-tree-id32474 . -1) (undo-tree-id32475 . -1) (undo-tree-id32476 . -1) (undo-tree-id32477 . -1) (undo-tree-id32478 . -1) (undo-tree-id32479 . -1) (undo-tree-id32480 . -1) (undo-tree-id32481 . -1) (undo-tree-id32482 . -1) (undo-tree-id32483 . -1) (undo-tree-id32484 . -1) (undo-tree-id32485 . -1) (undo-tree-id32486 . -1) (undo-tree-id32487 . -1) (undo-tree-id32488 . -1) (undo-tree-id32489 . -1) (undo-tree-id32490 . -1) (undo-tree-id32491 . -1) (undo-tree-id32492 . -1) (undo-tree-id32493 . -1) (undo-tree-id32494 . -1) (undo-tree-id32495 . -1) (undo-tree-id32496 . -1) (undo-tree-id32497 . -1) (undo-tree-id32498 . -1) (undo-tree-id32499 . -1) (undo-tree-id32500 . -1) (undo-tree-id32501 . -1) (undo-tree-id32502 . -1) (undo-tree-id32503 . -1) (undo-tree-id32504 . -1) (undo-tree-id32505 . -1) (undo-tree-id32506 . -1) (undo-tree-id32507 . -1) (#("a" 0 1 (fontified t)) . -66814) (undo-tree-id32508 . -1) (undo-tree-id32509 . -1) (undo-tree-id32510 . -1) (undo-tree-id32511 . -1) (undo-tree-id32512 . -1) (undo-tree-id32513 . -1) (undo-tree-id32514 . -1) (undo-tree-id32515 . -1) (undo-tree-id32516 . -1) 66815 (66810 . 66815) (66789 . 66810) (#("c" 0 1 (fontified t)) . -66789) (undo-tree-id32517 . -1) (undo-tree-id32518 . -1) (undo-tree-id32519 . -1) (undo-tree-id32520 . -1) (undo-tree-id32521 . -1) (undo-tree-id32522 . -1) (undo-tree-id32523 . -1) (undo-tree-id32524 . -1) (undo-tree-id32525 . -1) (undo-tree-id32526 . -1) (undo-tree-id32527 . -1) (undo-tree-id32528 . -1) (undo-tree-id32529 . -1) (undo-tree-id32530 . -1) (undo-tree-id32531 . -1) (undo-tree-id32532 . -1) (undo-tree-id32533 . -1) (undo-tree-id32534 . -1) (undo-tree-id32535 . -1) 66790 (66788 . 66790) (66767 . 66788) (#("i" 0 1 (fontified t)) . -66767) (undo-tree-id32536 . -1) (undo-tree-id32537 . -1) (undo-tree-id32538 . -1) (undo-tree-id32539 . -1) (undo-tree-id32540 . -1) (undo-tree-id32541 . -1) (undo-tree-id32542 . -1) (undo-tree-id32543 . -1) (undo-tree-id32544 . -1) (undo-tree-id32545 . -1) (undo-tree-id32546 . -1) (undo-tree-id32547 . -1) (undo-tree-id32548 . -1) (undo-tree-id32549 . -1) (undo-tree-id32550 . -1) (undo-tree-id32551 . -1) (undo-tree-id32552 . -1) (undo-tree-id32553 . -1) (undo-tree-id32554 . -1) (undo-tree-id32555 . -1) (undo-tree-id32556 . -1) (undo-tree-id32557 . -1) (undo-tree-id32558 . -1) (undo-tree-id32559 . -1) (undo-tree-id32560 . -1) (undo-tree-id32561 . -1) (#("c" 0 1 (fontified t)) . -66768) (undo-tree-id32562 . -1) (undo-tree-id32563 . -1) (undo-tree-id32564 . -1) (undo-tree-id32565 . -1) (undo-tree-id32566 . -1) (undo-tree-id32567 . -1) (undo-tree-id32568 . -1) (undo-tree-id32569 . -1) (undo-tree-id32570 . -1) 66769 (66767 . 66769) (66762 . 66767) (#("d" 0 1 (fontified t)) . -66762) (undo-tree-id32571 . -1) (undo-tree-id32572 . -1) (undo-tree-id32573 . -1) (undo-tree-id32574 . -1) (undo-tree-id32575 . -1) (undo-tree-id32576 . -1) (undo-tree-id32577 . -1) (undo-tree-id32578 . -1) (undo-tree-id32579 . -1) (undo-tree-id32580 . -1) (undo-tree-id32581 . -1) (undo-tree-id32582 . -1) (undo-tree-id32583 . -1) (undo-tree-id32584 . -1) (undo-tree-id32585 . -1) (undo-tree-id32586 . -1) (undo-tree-id32587 . -1) (undo-tree-id32588 . -1) (undo-tree-id32589 . -1) 66763 (66760 . 66763) (#(" " 0 1 (fontified t)) . -66760) (undo-tree-id32590 . -1) (undo-tree-id32591 . -1) (undo-tree-id32592 . -1) (undo-tree-id32593 . -1) (undo-tree-id32594 . -1) (undo-tree-id32595 . -1) (undo-tree-id32596 . -1) (undo-tree-id32597 . -1) (undo-tree-id32598 . -1) (undo-tree-id32599 . -1) (undo-tree-id32600 . -1) (undo-tree-id32601 . -1) (undo-tree-id32602 . -1) (undo-tree-id32603 . -1) (undo-tree-id32604 . -1) (undo-tree-id32605 . -1) (undo-tree-id32606 . -1) (undo-tree-id32607 . -1) (undo-tree-id32608 . -1) (undo-tree-id32609 . -1) (undo-tree-id32610 . -1) (undo-tree-id32611 . -1) (undo-tree-id32612 . -1) (undo-tree-id32613 . -1) (undo-tree-id32614 . -1) (undo-tree-id32615 . -1) (undo-tree-id32616 . -1) (undo-tree-id32617 . -1) (undo-tree-id32618 . -1) (undo-tree-id32619 . -1) (undo-tree-id32620 . -1) (undo-tree-id32621 . -1) (undo-tree-id32622 . -1) (undo-tree-id32623 . -1) (undo-tree-id32624 . -1) (#("e" 0 1 (fontified t)) . -66761) (undo-tree-id32625 . -1) (undo-tree-id32626 . -1) (undo-tree-id32627 . -1) (undo-tree-id32628 . -1) (undo-tree-id32629 . -1) (undo-tree-id32630 . -1) (undo-tree-id32631 . -1) (undo-tree-id32632 . -1) (undo-tree-id32633 . -1) (undo-tree-id32634 . -1) (undo-tree-id32635 . -1) (undo-tree-id32636 . -1) (undo-tree-id32637 . -1) (undo-tree-id32638 . -1) (undo-tree-id32639 . -1) (undo-tree-id32640 . -1) (undo-tree-id32641 . -1) (undo-tree-id32642 . -1) (undo-tree-id32643 . -1) 66762 (66761 . 66762) (66740 . 66761) (#(" " 0 1 (fontified t)) . -66740) (undo-tree-id32644 . -1) (undo-tree-id32645 . -1) (undo-tree-id32646 . -1) (undo-tree-id32647 . -1) (undo-tree-id32648 . -1) (undo-tree-id32649 . -1) (undo-tree-id32650 . -1) (undo-tree-id32651 . -1) (undo-tree-id32652 . -1) (undo-tree-id32653 . -1) (undo-tree-id32654 . -1) (undo-tree-id32655 . -1) (undo-tree-id32656 . -1) (undo-tree-id32657 . -1) (undo-tree-id32658 . -1) (undo-tree-id32659 . -1) (undo-tree-id32660 . -1) (undo-tree-id32661 . -1) (undo-tree-id32662 . -1) (undo-tree-id32663 . -1) (undo-tree-id32664 . -1) (undo-tree-id32665 . -1) (undo-tree-id32666 . -1) (undo-tree-id32667 . -1) (undo-tree-id32668 . -1) (undo-tree-id32669 . -1) (undo-tree-id32670 . -1) (undo-tree-id32671 . -1) (undo-tree-id32672 . -1) (undo-tree-id32673 . -1) (undo-tree-id32674 . -1) (undo-tree-id32675 . -1) (undo-tree-id32676 . -1) (undo-tree-id32677 . -1) (undo-tree-id32678 . -1) (#("g" 0 1 (fontified t)) . -66741) (undo-tree-id32679 . -1) (undo-tree-id32680 . -1) (undo-tree-id32681 . -1) (undo-tree-id32682 . -1) (undo-tree-id32683 . -1) (undo-tree-id32684 . -1) (undo-tree-id32685 . -1) (undo-tree-id32686 . -1) (undo-tree-id32687 . -1) (undo-tree-id32688 . -1) (undo-tree-id32689 . -1) (undo-tree-id32690 . -1) (undo-tree-id32691 . -1) (undo-tree-id32692 . -1) (undo-tree-id32693 . -1) (undo-tree-id32694 . -1) (undo-tree-id32695 . -1) (undo-tree-id32696 . -1) (undo-tree-id32697 . -1) 66742 (66730 . 66742) (#(" " 0 1 (fontified t)) . -66730) (undo-tree-id32698 . -1) (undo-tree-id32699 . -1) (undo-tree-id32700 . -1) (undo-tree-id32701 . -1) (undo-tree-id32702 . -1) (undo-tree-id32703 . -1) (undo-tree-id32704 . -1) (undo-tree-id32705 . -1) (undo-tree-id32706 . -1) (undo-tree-id32707 . -1) (undo-tree-id32708 . -1) (undo-tree-id32709 . -1) (undo-tree-id32710 . -1) (undo-tree-id32711 . -1) (undo-tree-id32712 . -1) (undo-tree-id32713 . -1) (undo-tree-id32714 . -1) (undo-tree-id32715 . -1) (undo-tree-id32716 . -1) (undo-tree-id32717 . -1) (undo-tree-id32718 . -1) (undo-tree-id32719 . -1) (undo-tree-id32720 . -1) (undo-tree-id32721 . -1) 66731 (66726 . 66731) (66716 . 66726) (#("t" 0 1 (fontified t)) . -66716) (undo-tree-id32722 . -1) 66717 (66707 . 66717) (#(" " 0 1 (fontified t)) . -66707) (undo-tree-id32723 . -1) 66708 (66700 . 66708) (#("a" 0 1 (fontified t)) . -66700) (undo-tree-id32724 . -1) 66701 (66700 . 66701) (#("h" 0 1 (fontified t)) . -66700) (undo-tree-id32725 . -1) (#("t" 0 1 (fontified t)) . -66701) (undo-tree-id32726 . -1) 66702 (66686 . 66702) (66685 . 66686) (66677 . 66685) (#("i" 0 1 (fontified t)) . -66677) (undo-tree-id32727 . -1) (#("t" 0 1 (fontified t)) . -66678) (undo-tree-id32728 . -1) 66679 (66678 . 66679) (#("i" 0 1 (fontified t)) . -66678) (undo-tree-id32729 . -1) 66679 (66659 . 66679) (#("n" 0 1 (fontified t)) . -66659) (undo-tree-id32730 . -1) 66660 (66658 . 66660) (66652 . 66658) (#("v" 0 1 (fontified t)) . -66652) (undo-tree-id32731 . -1) 66653 (66643 . 66653) (#("i" 0 1 (fontified t)) . -66643) (undo-tree-id32732 . -1) (#("c" 0 1 (fontified t)) . -66644) (undo-tree-id32733 . -1) 66645 (66642 . 66645) (66621 . 66642) (66600 . 66621) (#("i" 0 1 (fontified t)) . -66600) (undo-tree-id32734 . -1) (#("s" 0 1 (fontified t)) . -66601) (undo-tree-id32735 . -1) (#(" " 0 1 (fontified t)) . -66602) (undo-tree-id32736 . -1) 66603 (66598 . 66603) (t 25151 37432 387117 162000)) nil (25151 37639 525633 402000) 0 nil])
([nil nil ((73331 . 73336) (t 25151 37639 632645 733000) 73330) nil (25151 37710 926017 273000) 0 nil])
([nil nil ((#("   Lastly, I add a mechanism to add info nodes to the Zetteldesk. The info buffer is a single persistent buffer. Therefore, the typical things done for eveything else don't work here. However, there is a function that gives the nodes name in a format that all other Info functions accept. I use that function and add the nodes selected to a variable. The rest of the functions, choose something from that list with completing-read and that is how this system works. For example, the removing mechanisms works by using remove with its argument being the output of the completing-read.
" 0 500 (fontified t) 500 584 (fontified t)) . 40984) (undo-tree-id32737 . -5) (undo-tree-id32738 . -5) (undo-tree-id32739 . 578) (undo-tree-id32740 . -5) (undo-tree-id32741 . -5) (undo-tree-id32742 . -584) (undo-tree-id32743 . -584) (undo-tree-id32744 . -5) (undo-tree-id32745 . -5) (undo-tree-id32746 . -5) (undo-tree-id32747 . -5) (undo-tree-id32748 . -5) (undo-tree-id32749 . -5) (undo-tree-id32750 . -5) (undo-tree-id32751 . -5) (undo-tree-id32752 . -5) (undo-tree-id32753 . -5) (undo-tree-id32754 . -5) (undo-tree-id32755 . -5) (undo-tree-id32756 . -5) (undo-tree-id32757 . -5) (undo-tree-id32758 . -5) (undo-tree-id32759 . -5) (undo-tree-id32760 . -5) (undo-tree-id32761 . -5) (undo-tree-id32762 . -5) (undo-tree-id32763 . -5) (undo-tree-id32764 . -5) (undo-tree-id32765 . -5) (undo-tree-id32766 . -5) (undo-tree-id32767 . -5) (undo-tree-id32768 . -5) (undo-tree-id32769 . -5) (undo-tree-id32770 . -5) (undo-tree-id32771 . -5) (undo-tree-id32772 . -5) (undo-tree-id32773 . -5) (undo-tree-id32774 . -5) (undo-tree-id32775 . -5) (undo-tree-id32776 . -5) (undo-tree-id32777 . -5) (undo-tree-id32778 . -5) (undo-tree-id32779 . -5) (undo-tree-id32780 . -5) (undo-tree-id32781 . -5) (undo-tree-id32782 . -5) (undo-tree-id32783 . -5) (undo-tree-id32784 . -5) (undo-tree-id32785 . -5) (undo-tree-id32786 . -5) (undo-tree-id32787 . -5) (undo-tree-id32788 . -5) (undo-tree-id32789 . -5) (undo-tree-id32790 . -5) (undo-tree-id32791 . -5) (undo-tree-id32792 . -5) (undo-tree-id32793 . -5) (undo-tree-id32794 . -5) (undo-tree-id32795 . -5) (undo-tree-id32796 . -5) (undo-tree-id32797 . -5) (undo-tree-id32798 . -5) (undo-tree-id32799 . -5) (undo-tree-id32800 . -5) (undo-tree-id32801 . -5) (undo-tree-id32802 . -5) (undo-tree-id32803 . -5) (undo-tree-id32804 . -5) (undo-tree-id32805 . -5) (undo-tree-id32806 . -5) (undo-tree-id32807 . -5) (undo-tree-id32808 . -5) (undo-tree-id32809 . -5) (undo-tree-id32810 . -5) (undo-tree-id32811 . -5) (undo-tree-id32812 . -5) (undo-tree-id32813 . -5) (undo-tree-id32814 . -5) (undo-tree-id32815 . -5) (undo-tree-id32816 . -5) (undo-tree-id32817 . -5) 40989) nil (25151 37710 926006 657000) 0 nil])
([nil nil ((nil rear-nonsticky nil 72755 . 72756) (#("
" 0 1 (fontified nil)) . -73336) (72752 . 73337) 72751) nil (25151 37715 363393 998000) 0 nil])
([nil nil ((#("Lastly, I add a mechanism to add info nodes to the Zetteldesk." 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 62 (fontified t)) . 72756) (undo-tree-id37130 . 24) (undo-tree-id37131 . -31) (undo-tree-id37132 . -31) (undo-tree-id37133 . -30) (undo-tree-id37134 . -31) (undo-tree-id37135 . -30) (undo-tree-id37136 . -30) (undo-tree-id37137 . -30) (undo-tree-id37138 . -30) (undo-tree-id37139 . -30) (undo-tree-id37140 . -30) (undo-tree-id37141 . -30) (undo-tree-id37142 . -30) (undo-tree-id37143 . -30) (undo-tree-id37144 . -30) (undo-tree-id37145 . -30) (undo-tree-id37146 . -11) (undo-tree-id37147 . -30) (undo-tree-id37148 . -11) (undo-tree-id37149 . -11) (undo-tree-id37150 . -11) (undo-tree-id37151 . -11) (undo-tree-id37152 . -11) (undo-tree-id37153 . -11) (undo-tree-id37154 . -11) (undo-tree-id37155 . -11) (undo-tree-id37156 . -11) (undo-tree-id37157 . -11) (undo-tree-id37158 . -11) (undo-tree-id37159 . -11) (undo-tree-id37160 . -11) (undo-tree-id37161 . -11) (undo-tree-id37162 . -11) (undo-tree-id37163 . -11) (undo-tree-id37164 . -10) (undo-tree-id37165 . -11) (undo-tree-id37166 . -10) (undo-tree-id37167 . -10) (undo-tree-id37168 . -10) (undo-tree-id37169 . -10) (undo-tree-id37170 . -10) (undo-tree-id37171 . -10) (undo-tree-id37172 . -10) (undo-tree-id37173 . -10) (undo-tree-id37174 . -10) (undo-tree-id37175 . -10) (undo-tree-id37176 . -9) (undo-tree-id37177 . -10) (undo-tree-id37178 . -9) (undo-tree-id37179 . -9) (undo-tree-id37180 . -9) (undo-tree-id37181 . -9) (undo-tree-id37182 . -9) (undo-tree-id37183 . -9) (undo-tree-id37184 . -9) (undo-tree-id37185 . -9) (undo-tree-id37186 . -9) (undo-tree-id37187 . -9) (undo-tree-id37188 . -8) (undo-tree-id37189 . -9) (undo-tree-id37190 . -8) (undo-tree-id37191 . -8) (undo-tree-id37192 . -8) (undo-tree-id37193 . -8) (undo-tree-id37194 . -8) (undo-tree-id37195 . -8) (undo-tree-id37196 . -61) (undo-tree-id37197 . -61) (undo-tree-id37198 . -61) (undo-tree-id37199 . -61) (undo-tree-id37200 . -61) (undo-tree-id37201 . -61) (undo-tree-id37202 . -61) (undo-tree-id37203 . -61) (undo-tree-id37204 . -61) (undo-tree-id37205 . -61) (undo-tree-id37206 . -61) (undo-tree-id37207 . -61) (undo-tree-id37208 . -61) (undo-tree-id37209 . -61) (undo-tree-id37210 . -61) (undo-tree-id37211 . -61) (undo-tree-id37212 . -61) (undo-tree-id37213 . -61) (undo-tree-id37214 . -61) (undo-tree-id37215 . -61) (undo-tree-id37216 . -61) (undo-tree-id37217 . -61) (undo-tree-id37218 . -61) (undo-tree-id37219 . -61) (undo-tree-id37220 . -61) (undo-tree-id37221 . -61) (undo-tree-id37222 . -61) (undo-tree-id37223 . -61) (undo-tree-id37224 . -61) (undo-tree-id37225 . -61) (undo-tree-id37226 . -61) (undo-tree-id37227 . -61) (undo-tree-id37228 . -61) (undo-tree-id37229 . -61) (undo-tree-id37230 . -61) (undo-tree-id37231 . -61) (undo-tree-id37232 . -61) (undo-tree-id37233 . -61) (undo-tree-id37234 . -61) (undo-tree-id37235 . -61) (undo-tree-id37236 . -61) (undo-tree-id37237 . -61) (undo-tree-id37238 . -61) (undo-tree-id37239 . -61) (undo-tree-id37240 . -61) (undo-tree-id37241 . -61) (undo-tree-id37242 . -61) (undo-tree-id37243 . -61) (undo-tree-id37244 . -61) (undo-tree-id37245 . -61) (undo-tree-id37246 . -61) (undo-tree-id37247 . -61) (undo-tree-id37248 . -61) (undo-tree-id37249 . -61) (undo-tree-id37250 . -61) (undo-tree-id37251 . -61) (undo-tree-id37252 . -61) (undo-tree-id37253 . -61)) nil (25151 37779 626684 690000) 0 nil] [nil nil ((#("," 0 1 (fontified t)) . 72757) (#("y" 0 1 (fontified t)) . 72757) (#("l" 0 1 (fontified t)) . 72757) (#("t" 0 1 (fontified t)) . 72757) (#("s" 0 1 (fontified t)) . 72757) (#("a" 0 1 (fontified t)) . 72757) (#("L" 0 1 (fontified t)) . 72757) (72756 . 72757)) ((#(" " 0 1 (fontified nil)) . 72756) (undo-tree-id32818 . -1) (undo-tree-id32819 . -1) (undo-tree-id32820 . -1) (undo-tree-id32821 . -1) (undo-tree-id32822 . -1) (undo-tree-id32823 . -1) (undo-tree-id32824 . -1) (undo-tree-id32825 . -1) (undo-tree-id32826 . -1) (undo-tree-id32827 . -1) (undo-tree-id32828 . -1) (undo-tree-id32829 . -1) (undo-tree-id32830 . -1) (undo-tree-id32831 . -1) (undo-tree-id32832 . -1) (undo-tree-id32833 . -1) (undo-tree-id32834 . -1) (undo-tree-id32835 . -1) (undo-tree-id32836 . -1) (undo-tree-id32837 . -1) (undo-tree-id32838 . -1) (undo-tree-id32839 . -1) (72757 . 72758) (72757 . 72758) (72757 . 72758) (72757 . 72758) (72757 . 72758) (72757 . 72758) (72757 . 72758)) (25151 37711 334975 597000) 0 nil])
([nil nil ((72952 . 72953) (72952 . 72953) (#("t" 0 1 (fontified t)) . 72952) (#(" " 0 1 (fontified t)) . 72952) (#("," 0 1 (fontified t)) . 72952) (#("r" 0 1 (fontified t)) . 72952) (#("e" 0 1 (fontified t)) . 72952) (#("v" 0 1 (fontified t)) . 72952) (#("e" 0 1 (fontified t)) . 72952) (#("w" 0 1 (fontified t)) . 72952) (#("o" 0 1 (fontified t)) . 72952) (#("H" 0 1 (fontified t)) . 72952) (#(" " 0 1 (fontified t)) . 72952) (72940 . 72952) (72937 . 72940) (#("t" 0 1 (fontified t)) . -72937) (undo-tree-id32840 . -1) (undo-tree-id32841 . -1) (undo-tree-id32842 . -1) (undo-tree-id32843 . -1) (undo-tree-id32844 . -1) (undo-tree-id32845 . -1) (undo-tree-id32846 . -1) (undo-tree-id32847 . -1) (undo-tree-id32848 . -1) (undo-tree-id32849 . -1) (undo-tree-id32850 . -1) (undo-tree-id32851 . -1) (undo-tree-id32852 . -1) (undo-tree-id32853 . -1) (undo-tree-id32854 . -1) (undo-tree-id32855 . -1) (undo-tree-id32856 . -1) (undo-tree-id32857 . -1) (undo-tree-id32858 . -1) 72938 (72931 . 72938) (#("h" 0 1 (fontified t)) . -72931) (undo-tree-id32859 . -1) (undo-tree-id32860 . -1) (undo-tree-id32861 . -1) (undo-tree-id32862 . -1) (undo-tree-id32863 . -1) (undo-tree-id32864 . -1) (undo-tree-id32865 . -1) (undo-tree-id32866 . -1) (undo-tree-id32867 . -1) (undo-tree-id32868 . -1) (undo-tree-id32869 . -1) (undo-tree-id32870 . -1) (undo-tree-id32871 . -1) (undo-tree-id32872 . -1) (undo-tree-id32873 . -1) (undo-tree-id32874 . -1) (undo-tree-id32875 . -1) (undo-tree-id32876 . -1) (undo-tree-id32877 . -1) (undo-tree-id32878 . -1) (undo-tree-id32879 . -1) (undo-tree-id32880 . -1) (undo-tree-id32881 . -1) (undo-tree-id32882 . -1) (undo-tree-id32883 . -1) (undo-tree-id32884 . -1) (undo-tree-id32885 . -1) (undo-tree-id32886 . -1) (undo-tree-id32887 . -1) (undo-tree-id32888 . -1) (undo-tree-id32889 . -1) (undo-tree-id32890 . -1) (undo-tree-id32891 . -1) (undo-tree-id32892 . -1) (undo-tree-id32893 . -1) (#("t" 0 1 (fontified t)) . -72932) (undo-tree-id32894 . -1) (undo-tree-id32895 . -1) (undo-tree-id32896 . -1) (undo-tree-id32897 . -1) (undo-tree-id32898 . -1) (undo-tree-id32899 . -1) (undo-tree-id32900 . -1) (undo-tree-id32901 . -1) (undo-tree-id32902 . -1) (undo-tree-id32903 . -1) (undo-tree-id32904 . -1) (undo-tree-id32905 . -1) (undo-tree-id32906 . -1) (undo-tree-id32907 . -1) (undo-tree-id32908 . -1) (undo-tree-id32909 . -1) (undo-tree-id32910 . -1) (undo-tree-id32911 . -1) (undo-tree-id32912 . -1) 72933 (72930 . 72933) (#("h" 0 1 (fontified t)) . -72930) (undo-tree-id32913 . -1) (undo-tree-id32914 . -1) (undo-tree-id32915 . -1) (undo-tree-id32916 . -1) (undo-tree-id32917 . -1) (undo-tree-id32918 . -1) (undo-tree-id32919 . -1) (undo-tree-id32920 . -1) (undo-tree-id32921 . -1) (undo-tree-id32922 . -1) (undo-tree-id32923 . -1) (undo-tree-id32924 . -1) (undo-tree-id32925 . -1) (undo-tree-id32926 . -1) (undo-tree-id32927 . -1) (undo-tree-id32928 . -1) (undo-tree-id32929 . -1) (undo-tree-id32930 . -1) (undo-tree-id32931 . -1) (undo-tree-id32932 . -1) (undo-tree-id32933 . -1) (undo-tree-id32934 . -1) (undo-tree-id32935 . -1) (undo-tree-id32936 . -1) (undo-tree-id32937 . -1) (undo-tree-id32938 . -1) (undo-tree-id32939 . -1) (undo-tree-id32940 . -1) (undo-tree-id32941 . -1) (undo-tree-id32942 . -1) (undo-tree-id32943 . -1) (undo-tree-id32944 . -1) (undo-tree-id32945 . -1) (undo-tree-id32946 . -1) (undo-tree-id32947 . -1) (#("e" 0 1 (fontified t)) . -72931) (undo-tree-id32948 . -1) (undo-tree-id32949 . -1) (undo-tree-id32950 . -1) (undo-tree-id32951 . -1) (undo-tree-id32952 . -1) (undo-tree-id32953 . -1) (undo-tree-id32954 . -1) (undo-tree-id32955 . -1) (undo-tree-id32956 . -1) (undo-tree-id32957 . -1) (undo-tree-id32958 . -1) (undo-tree-id32959 . -1) (undo-tree-id32960 . -1) (undo-tree-id32961 . -1) (undo-tree-id32962 . -1) (undo-tree-id32963 . -1) (undo-tree-id32964 . -1) (undo-tree-id32965 . -1) (undo-tree-id32966 . -1) 72932 (72915 . 72932) (#(" " 0 1 (fontified t)) . -72915) (undo-tree-id32967 . -1) (undo-tree-id32968 . -1) (undo-tree-id32969 . -1) (undo-tree-id32970 . -1) (undo-tree-id32971 . -1) (undo-tree-id32972 . -1) (undo-tree-id32973 . -1) (undo-tree-id32974 . -1) (undo-tree-id32975 . -1) (undo-tree-id32976 . -1) (undo-tree-id32977 . -1) (undo-tree-id32978 . -1) (undo-tree-id32979 . -1) (undo-tree-id32980 . -1) (undo-tree-id32981 . -1) (undo-tree-id32982 . -1) (undo-tree-id32983 . -1) (undo-tree-id32984 . -1) (undo-tree-id32985 . -1) (undo-tree-id32986 . -1) (undo-tree-id32987 . -1) (undo-tree-id32988 . -1) (undo-tree-id32989 . -1) (undo-tree-id32990 . -1) (undo-tree-id32991 . -1) (undo-tree-id32992 . -1) (undo-tree-id32993 . -1) (undo-tree-id32994 . -1) (undo-tree-id32995 . -1) (undo-tree-id32996 . -1) (undo-tree-id32997 . -1) (undo-tree-id32998 . -1) (undo-tree-id32999 . -1) (undo-tree-id33000 . -1) (undo-tree-id33001 . -1) (undo-tree-id33002 . -1) (undo-tree-id33003 . -1) (undo-tree-id33004 . -1) (undo-tree-id33005 . -1) (undo-tree-id33006 . -1) (undo-tree-id33007 . -1) (undo-tree-id33008 . -1) (undo-tree-id33009 . -1) (undo-tree-id33010 . -1) (undo-tree-id33011 . -1) (undo-tree-id33012 . -1) (undo-tree-id33013 . -1) (undo-tree-id33014 . -1) (undo-tree-id33015 . -1) (undo-tree-id33016 . -1) (undo-tree-id33017 . -1) (undo-tree-id33018 . -1) (undo-tree-id33019 . -1) (undo-tree-id33020 . -1) (undo-tree-id33021 . -1) (undo-tree-id33022 . -1) (undo-tree-id33023 . -1) (undo-tree-id33024 . -1) (undo-tree-id33025 . -1) (undo-tree-id33026 . -1) (undo-tree-id33027 . -1) (undo-tree-id33028 . -1) (undo-tree-id33029 . -1) (undo-tree-id33030 . -1) (undo-tree-id33031 . -1) (undo-tree-id33032 . -1) (undo-tree-id33033 . -1) (undo-tree-id33034 . -1) (undo-tree-id33035 . -1) (undo-tree-id33036 . -1) (undo-tree-id33037 . -1) (undo-tree-id33038 . -1) (undo-tree-id33039 . -1) (undo-tree-id33040 . -1) (undo-tree-id33041 . -1) (undo-tree-id33042 . -1) (undo-tree-id33043 . -1) (undo-tree-id33044 . -1) (undo-tree-id33045 . -1) (undo-tree-id33046 . -1) (undo-tree-id33047 . -1) (undo-tree-id33048 . -1) (undo-tree-id33049 . -1) (undo-tree-id33050 . -1) (undo-tree-id33051 . -1) (undo-tree-id33052 . -1) (undo-tree-id33053 . -1) (undo-tree-id33054 . -1) (undo-tree-id33055 . -1) (undo-tree-id33056 . -1) (undo-tree-id33057 . -1) (undo-tree-id33058 . -1) (undo-tree-id33059 . -1) (undo-tree-id33060 . -1) (undo-tree-id33061 . -1) (undo-tree-id33062 . -1) (undo-tree-id33063 . -1) (undo-tree-id33064 . -1) (undo-tree-id33065 . -1) (undo-tree-id33066 . -1) (undo-tree-id33067 . -1) (undo-tree-id33068 . -1) (undo-tree-id33069 . -1) (undo-tree-id33070 . -1) (undo-tree-id33071 . -1) (undo-tree-id33072 . -1) (undo-tree-id33073 . -1) (undo-tree-id33074 . -1) (undo-tree-id33075 . -1) (undo-tree-id33076 . -1) (undo-tree-id33077 . -1) (undo-tree-id33078 . -1) (undo-tree-id33079 . -1) (undo-tree-id33080 . -1) (undo-tree-id33081 . -1) (undo-tree-id33082 . -1) (undo-tree-id33083 . -1) (undo-tree-id33084 . -1) (undo-tree-id33085 . -1) (undo-tree-id33086 . -1) (undo-tree-id33087 . -1) (undo-tree-id33088 . -1) (undo-tree-id33089 . -1) (undo-tree-id33090 . -1) (undo-tree-id33091 . -1) (undo-tree-id33092 . -1) (undo-tree-id33093 . -1) (undo-tree-id33094 . -1) (undo-tree-id33095 . -1) (undo-tree-id33096 . -1) (undo-tree-id33097 . -1) (undo-tree-id33098 . -1) (undo-tree-id33099 . -1) (undo-tree-id33100 . -1) (undo-tree-id33101 . -1) (undo-tree-id33102 . -1) (undo-tree-id33103 . -1) (undo-tree-id33104 . -1) (undo-tree-id33105 . -1) (undo-tree-id33106 . -1) (undo-tree-id33107 . -1) (undo-tree-id33108 . -1) (undo-tree-id33109 . -1) (undo-tree-id33110 . -1) (undo-tree-id33111 . -1) (undo-tree-id33112 . -1) (undo-tree-id33113 . -1) (undo-tree-id33114 . -1) (undo-tree-id33115 . -1) (undo-tree-id33116 . -1) (undo-tree-id33117 . -1) (undo-tree-id33118 . -1) (undo-tree-id33119 . -1) (undo-tree-id33120 . -1) (undo-tree-id33121 . -1) (undo-tree-id33122 . -1) (undo-tree-id33123 . -1) (undo-tree-id33124 . -1) (undo-tree-id33125 . -1) (undo-tree-id33126 . -1) (undo-tree-id33127 . -1) (undo-tree-id33128 . -1) (undo-tree-id33129 . -1) (undo-tree-id33130 . -1) (undo-tree-id33131 . -1) (undo-tree-id33132 . -1) (undo-tree-id33133 . -1) (undo-tree-id33134 . -1) (undo-tree-id33135 . -1) (undo-tree-id33136 . -1) (undo-tree-id33137 . -1) (undo-tree-id33138 . -1) (undo-tree-id33139 . -1) (undo-tree-id33140 . -1) (undo-tree-id33141 . -1) (undo-tree-id33142 . -1) (undo-tree-id33143 . -1) (undo-tree-id33144 . -1) (undo-tree-id33145 . -1) (undo-tree-id33146 . -1) (undo-tree-id33147 . -1) (undo-tree-id33148 . -1) (undo-tree-id33149 . -1) (undo-tree-id33150 . -1) (undo-tree-id33151 . -1) (undo-tree-id33152 . -1) (undo-tree-id33153 . -1) (undo-tree-id33154 . -1) (undo-tree-id33155 . -1) (undo-tree-id33156 . -1) (undo-tree-id33157 . -1) (undo-tree-id33158 . -1) (undo-tree-id33159 . -1) (undo-tree-id33160 . -1) (undo-tree-id33161 . -1) (#("z" 0 1 (fontified t)) . -72916) (undo-tree-id33162 . -1) (undo-tree-id33163 . -1) (undo-tree-id33164 . -1) (undo-tree-id33165 . -1) (undo-tree-id33166 . -1) (undo-tree-id33167 . -1) (undo-tree-id33168 . -1) (undo-tree-id33169 . -1) (undo-tree-id33170 . -1) (undo-tree-id33171 . -1) (undo-tree-id33172 . -1) (undo-tree-id33173 . -1) (undo-tree-id33174 . -1) (undo-tree-id33175 . -1) (undo-tree-id33176 . -1) (undo-tree-id33177 . -1) (undo-tree-id33178 . -1) (undo-tree-id33179 . -1) (undo-tree-id33180 . -1) (undo-tree-id33181 . -1) (undo-tree-id33182 . -1) (undo-tree-id33183 . -1) (undo-tree-id33184 . -1) (undo-tree-id33185 . -1) (undo-tree-id33186 . -1) (undo-tree-id33187 . -1) (undo-tree-id33188 . -1) (undo-tree-id33189 . -1) (undo-tree-id33190 . -1) (undo-tree-id33191 . -1) (undo-tree-id33192 . -1) (undo-tree-id33193 . -1) (undo-tree-id33194 . -1) (undo-tree-id33195 . -1) (undo-tree-id33196 . -1) (undo-tree-id33197 . -1) (undo-tree-id33198 . -1) (undo-tree-id33199 . -1) (undo-tree-id33200 . -1) (undo-tree-id33201 . -1) (undo-tree-id33202 . -1) (undo-tree-id33203 . -1) (undo-tree-id33204 . -1) (undo-tree-id33205 . -1) (undo-tree-id33206 . -1) (undo-tree-id33207 . -1) (undo-tree-id33208 . -1) (undo-tree-id33209 . -1) (undo-tree-id33210 . -1) (undo-tree-id33211 . -1) (undo-tree-id33212 . -1) (undo-tree-id33213 . -1) (undo-tree-id33214 . -1) (undo-tree-id33215 . -1) (undo-tree-id33216 . -1) (undo-tree-id33217 . -1) (undo-tree-id33218 . -1) (undo-tree-id33219 . -1) (undo-tree-id33220 . -1) (undo-tree-id33221 . -1) (undo-tree-id33222 . -1) (undo-tree-id33223 . -1) (undo-tree-id33224 . -1) (undo-tree-id33225 . -1) (undo-tree-id33226 . -1) (undo-tree-id33227 . -1) (undo-tree-id33228 . -1) (undo-tree-id33229 . -1) (undo-tree-id33230 . -1) (undo-tree-id33231 . -1) (undo-tree-id33232 . -1) (undo-tree-id33233 . -1) (undo-tree-id33234 . -1) (undo-tree-id33235 . -1) (undo-tree-id33236 . -1) (undo-tree-id33237 . -1) (undo-tree-id33238 . -1) (undo-tree-id33239 . -1) (undo-tree-id33240 . -1) (undo-tree-id33241 . -1) (undo-tree-id33242 . -1) (undo-tree-id33243 . -1) (undo-tree-id33244 . -1) (undo-tree-id33245 . -1) (undo-tree-id33246 . -1) (undo-tree-id33247 . -1) (undo-tree-id33248 . -1) (undo-tree-id33249 . -1) (undo-tree-id33250 . -1) (undo-tree-id33251 . -1) (undo-tree-id33252 . -1) (undo-tree-id33253 . -1) (undo-tree-id33254 . -1) (undo-tree-id33255 . -1) (undo-tree-id33256 . -1) (undo-tree-id33257 . -1) (undo-tree-id33258 . -1) (undo-tree-id33259 . -1) (undo-tree-id33260 . -1) (undo-tree-id33261 . -1) (undo-tree-id33262 . -1) (undo-tree-id33263 . -1) (undo-tree-id33264 . -1) (undo-tree-id33265 . -1) (undo-tree-id33266 . -1) (undo-tree-id33267 . -1) (undo-tree-id33268 . -1) (undo-tree-id33269 . -1) (undo-tree-id33270 . -1) (undo-tree-id33271 . -1) (undo-tree-id33272 . -1) (undo-tree-id33273 . -1) (undo-tree-id33274 . -1) (undo-tree-id33275 . -1) (undo-tree-id33276 . -1) (undo-tree-id33277 . -1) (undo-tree-id33278 . -1) (undo-tree-id33279 . -1) (undo-tree-id33280 . -1) (undo-tree-id33281 . -1) (undo-tree-id33282 . -1) (undo-tree-id33283 . -1) (undo-tree-id33284 . -1) (undo-tree-id33285 . -1) (undo-tree-id33286 . -1) (undo-tree-id33287 . -1) (undo-tree-id33288 . -1) (undo-tree-id33289 . -1) (undo-tree-id33290 . -1) (undo-tree-id33291 . -1) (undo-tree-id33292 . -1) (undo-tree-id33293 . -1) (undo-tree-id33294 . -1) (undo-tree-id33295 . -1) (undo-tree-id33296 . -1) (undo-tree-id33297 . -1) (undo-tree-id33298 . -1) (undo-tree-id33299 . -1) (undo-tree-id33300 . -1) (undo-tree-id33301 . -1) (undo-tree-id33302 . -1) (undo-tree-id33303 . -1) (undo-tree-id33304 . -1) (undo-tree-id33305 . -1) (undo-tree-id33306 . -1) (undo-tree-id33307 . -1) (undo-tree-id33308 . -1) (undo-tree-id33309 . -1) (undo-tree-id33310 . -1) (undo-tree-id33311 . -1) (undo-tree-id33312 . -1) (undo-tree-id33313 . -1) (undo-tree-id33314 . -1) (undo-tree-id33315 . -1) (undo-tree-id33316 . -1) (undo-tree-id33317 . -1) (undo-tree-id33318 . -1) (undo-tree-id33319 . -1) (undo-tree-id33320 . -1) (#("e" 0 1 (fontified t)) . -72917) (undo-tree-id33321 . -1) (undo-tree-id33322 . -1) (undo-tree-id33323 . -1) (undo-tree-id33324 . -1) (undo-tree-id33325 . -1) (undo-tree-id33326 . -1) (undo-tree-id33327 . -1) (undo-tree-id33328 . -1) (undo-tree-id33329 . -1) (undo-tree-id33330 . -1) (undo-tree-id33331 . -1) (undo-tree-id33332 . -1) (undo-tree-id33333 . -1) (undo-tree-id33334 . -1) (undo-tree-id33335 . -1) (undo-tree-id33336 . -1) (undo-tree-id33337 . -1) (undo-tree-id33338 . -1) (undo-tree-id33339 . -1) (undo-tree-id33340 . -1) (undo-tree-id33341 . -1) (undo-tree-id33342 . -1) (undo-tree-id33343 . -1) (undo-tree-id33344 . -1) (undo-tree-id33345 . -1) (undo-tree-id33346 . -1) (undo-tree-id33347 . -1) (undo-tree-id33348 . -1) (undo-tree-id33349 . -1) (undo-tree-id33350 . -1) (undo-tree-id33351 . -1) (undo-tree-id33352 . -1) (undo-tree-id33353 . -1) (undo-tree-id33354 . -1) (undo-tree-id33355 . -1) (undo-tree-id33356 . -1) (undo-tree-id33357 . -1) (undo-tree-id33358 . -1) (undo-tree-id33359 . -1) (undo-tree-id33360 . -1) (undo-tree-id33361 . -1) (undo-tree-id33362 . -1) (undo-tree-id33363 . -1) (undo-tree-id33364 . -1) (undo-tree-id33365 . -1) (undo-tree-id33366 . -1) (undo-tree-id33367 . -1) (undo-tree-id33368 . -1) (undo-tree-id33369 . -1) (undo-tree-id33370 . -1) (undo-tree-id33371 . -1) (undo-tree-id33372 . -1) (undo-tree-id33373 . -1) (undo-tree-id33374 . -1) (undo-tree-id33375 . -1) (undo-tree-id33376 . -1) (undo-tree-id33377 . -1) (undo-tree-id33378 . -1) (undo-tree-id33379 . -1) (undo-tree-id33380 . -1) (undo-tree-id33381 . -1) (undo-tree-id33382 . -1) (undo-tree-id33383 . -1) (undo-tree-id33384 . -1) (undo-tree-id33385 . -1) (undo-tree-id33386 . -1) (undo-tree-id33387 . -1) (undo-tree-id33388 . -1) (undo-tree-id33389 . -1) (undo-tree-id33390 . -1) (undo-tree-id33391 . -1) (undo-tree-id33392 . -1) (undo-tree-id33393 . -1) (undo-tree-id33394 . -1) (undo-tree-id33395 . -1) (undo-tree-id33396 . -1) (undo-tree-id33397 . -1) (undo-tree-id33398 . -1) (undo-tree-id33399 . -1) (undo-tree-id33400 . -1) (undo-tree-id33401 . -1) (undo-tree-id33402 . -1) (undo-tree-id33403 . -1) (undo-tree-id33404 . -1) (undo-tree-id33405 . -1) (undo-tree-id33406 . -1) (undo-tree-id33407 . -1) (undo-tree-id33408 . -1) (undo-tree-id33409 . -1) (undo-tree-id33410 . -1) (undo-tree-id33411 . -1) (undo-tree-id33412 . -1) (undo-tree-id33413 . -1) (undo-tree-id33414 . -1) (undo-tree-id33415 . -1) (undo-tree-id33416 . -1) (undo-tree-id33417 . -1) (undo-tree-id33418 . -1) (undo-tree-id33419 . -1) (undo-tree-id33420 . -1) (undo-tree-id33421 . -1) (undo-tree-id33422 . -1) (undo-tree-id33423 . -1) (undo-tree-id33424 . -1) (undo-tree-id33425 . -1) (undo-tree-id33426 . -1) (undo-tree-id33427 . -1) (undo-tree-id33428 . -1) (undo-tree-id33429 . -1) (undo-tree-id33430 . -1) (undo-tree-id33431 . -1) (undo-tree-id33432 . -1) (undo-tree-id33433 . -1) (undo-tree-id33434 . -1) (undo-tree-id33435 . -1) (undo-tree-id33436 . -1) (undo-tree-id33437 . -1) (undo-tree-id33438 . -1) (undo-tree-id33439 . -1) (undo-tree-id33440 . -1) (undo-tree-id33441 . -1) (undo-tree-id33442 . -1) (undo-tree-id33443 . -1) (undo-tree-id33444 . -1) (undo-tree-id33445 . -1) (undo-tree-id33446 . -1) (undo-tree-id33447 . -1) (undo-tree-id33448 . -1) (undo-tree-id33449 . -1) (undo-tree-id33450 . -1) (undo-tree-id33451 . -1) (undo-tree-id33452 . -1) (undo-tree-id33453 . -1) (#("t" 0 1 (fontified t)) . -72918) (undo-tree-id33454 . -1) (undo-tree-id33455 . -1) (undo-tree-id33456 . -1) (undo-tree-id33457 . -1) (undo-tree-id33458 . -1) (undo-tree-id33459 . -1) (undo-tree-id33460 . -1) (undo-tree-id33461 . -1) (undo-tree-id33462 . -1) (undo-tree-id33463 . -1) (undo-tree-id33464 . -1) (undo-tree-id33465 . -1) (undo-tree-id33466 . -1) (undo-tree-id33467 . -1) (undo-tree-id33468 . -1) (undo-tree-id33469 . -1) (undo-tree-id33470 . -1) (undo-tree-id33471 . -1) (undo-tree-id33472 . -1) (undo-tree-id33473 . -1) (undo-tree-id33474 . -1) (undo-tree-id33475 . -1) (undo-tree-id33476 . -1) (undo-tree-id33477 . -1) (undo-tree-id33478 . -1) (undo-tree-id33479 . -1) (undo-tree-id33480 . -1) (undo-tree-id33481 . -1) (undo-tree-id33482 . -1) (undo-tree-id33483 . -1) (undo-tree-id33484 . -1) (undo-tree-id33485 . -1) (undo-tree-id33486 . -1) (undo-tree-id33487 . -1) (undo-tree-id33488 . -1) (undo-tree-id33489 . -1) (undo-tree-id33490 . -1) (undo-tree-id33491 . -1) (undo-tree-id33492 . -1) (undo-tree-id33493 . -1) (undo-tree-id33494 . -1) (undo-tree-id33495 . -1) (undo-tree-id33496 . -1) (undo-tree-id33497 . -1) (undo-tree-id33498 . -1) (undo-tree-id33499 . -1) (undo-tree-id33500 . -1) (undo-tree-id33501 . -1) (undo-tree-id33502 . -1) (undo-tree-id33503 . -1) (undo-tree-id33504 . -1) (undo-tree-id33505 . -1) (undo-tree-id33506 . -1) (undo-tree-id33507 . -1) (undo-tree-id33508 . -1) (undo-tree-id33509 . -1) (undo-tree-id33510 . -1) (undo-tree-id33511 . -1) (undo-tree-id33512 . -1) (undo-tree-id33513 . -1) (undo-tree-id33514 . -1) (undo-tree-id33515 . -1) (undo-tree-id33516 . -1) (undo-tree-id33517 . -1) (undo-tree-id33518 . -1) (undo-tree-id33519 . -1) (undo-tree-id33520 . -1) (undo-tree-id33521 . -1) (undo-tree-id33522 . -1) (undo-tree-id33523 . -1) (undo-tree-id33524 . -1) (undo-tree-id33525 . -1) (undo-tree-id33526 . -1) (undo-tree-id33527 . -1) (undo-tree-id33528 . -1) (undo-tree-id33529 . -1) (undo-tree-id33530 . -1) (undo-tree-id33531 . -1) (undo-tree-id33532 . -1) (undo-tree-id33533 . -1) (undo-tree-id33534 . -1) (undo-tree-id33535 . -1) (undo-tree-id33536 . -1) (undo-tree-id33537 . -1) (undo-tree-id33538 . -1) (undo-tree-id33539 . -1) (undo-tree-id33540 . -1) (undo-tree-id33541 . -1) (undo-tree-id33542 . -1) (undo-tree-id33543 . -1) (undo-tree-id33544 . -1) (undo-tree-id33545 . -1) (undo-tree-id33546 . -1) (undo-tree-id33547 . -1) (undo-tree-id33548 . -1) (undo-tree-id33549 . -1) (undo-tree-id33550 . -1) (undo-tree-id33551 . -1) (undo-tree-id33552 . -1) (undo-tree-id33553 . -1) (undo-tree-id33554 . -1) (undo-tree-id33555 . -1) (undo-tree-id33556 . -1) (undo-tree-id33557 . -1) (undo-tree-id33558 . -1) (undo-tree-id33559 . -1) (undo-tree-id33560 . -1) (undo-tree-id33561 . -1) (undo-tree-id33562 . -1) (undo-tree-id33563 . -1) (undo-tree-id33564 . -1) (undo-tree-id33565 . -1) (undo-tree-id33566 . -1) (undo-tree-id33567 . -1) (undo-tree-id33568 . -1) (undo-tree-id33569 . -1) (undo-tree-id33570 . -1) (#("t" 0 1 (fontified t)) . -72919) (undo-tree-id33571 . -1) (undo-tree-id33572 . -1) (undo-tree-id33573 . -1) (undo-tree-id33574 . -1) (undo-tree-id33575 . -1) (undo-tree-id33576 . -1) (undo-tree-id33577 . -1) (undo-tree-id33578 . -1) (undo-tree-id33579 . -1) (undo-tree-id33580 . -1) (undo-tree-id33581 . -1) (undo-tree-id33582 . -1) (undo-tree-id33583 . -1) (undo-tree-id33584 . -1) (undo-tree-id33585 . -1) (undo-tree-id33586 . -1) (undo-tree-id33587 . -1) (undo-tree-id33588 . -1) (undo-tree-id33589 . -1) (undo-tree-id33590 . -1) (undo-tree-id33591 . -1) (undo-tree-id33592 . -1) (undo-tree-id33593 . -1) (undo-tree-id33594 . -1) (undo-tree-id33595 . -1) (undo-tree-id33596 . -1) (undo-tree-id33597 . -1) (undo-tree-id33598 . -1) (undo-tree-id33599 . -1) (undo-tree-id33600 . -1) (undo-tree-id33601 . -1) (undo-tree-id33602 . -1) (undo-tree-id33603 . -1) (undo-tree-id33604 . -1) (undo-tree-id33605 . -1) (undo-tree-id33606 . -1) (undo-tree-id33607 . -1) (undo-tree-id33608 . -1) (undo-tree-id33609 . -1) (undo-tree-id33610 . -1) (undo-tree-id33611 . -1) (undo-tree-id33612 . -1) (undo-tree-id33613 . -1) (undo-tree-id33614 . -1) (undo-tree-id33615 . -1) (undo-tree-id33616 . -1) (undo-tree-id33617 . -1) (undo-tree-id33618 . -1) (undo-tree-id33619 . -1) (undo-tree-id33620 . -1) (undo-tree-id33621 . -1) (undo-tree-id33622 . -1) (undo-tree-id33623 . -1) (undo-tree-id33624 . -1) (undo-tree-id33625 . -1) (undo-tree-id33626 . -1) (undo-tree-id33627 . -1) (undo-tree-id33628 . -1) (undo-tree-id33629 . -1) (undo-tree-id33630 . -1) (undo-tree-id33631 . -1) (undo-tree-id33632 . -1) (undo-tree-id33633 . -1) (undo-tree-id33634 . -1) (undo-tree-id33635 . -1) (undo-tree-id33636 . -1) (undo-tree-id33637 . -1) (undo-tree-id33638 . -1) (undo-tree-id33639 . -1) (undo-tree-id33640 . -1) (undo-tree-id33641 . -1) (undo-tree-id33642 . -1) (undo-tree-id33643 . -1) (undo-tree-id33644 . -1) (undo-tree-id33645 . -1) (undo-tree-id33646 . -1) (undo-tree-id33647 . -1) (undo-tree-id33648 . -1) (undo-tree-id33649 . -1) (undo-tree-id33650 . -1) (undo-tree-id33651 . -1) (#("e" 0 1 (fontified t)) . -72920) (undo-tree-id33652 . -1) (undo-tree-id33653 . -1) (undo-tree-id33654 . -1) (undo-tree-id33655 . -1) (undo-tree-id33656 . -1) (undo-tree-id33657 . -1) (undo-tree-id33658 . -1) (undo-tree-id33659 . -1) (undo-tree-id33660 . -1) (undo-tree-id33661 . -1) (undo-tree-id33662 . -1) (undo-tree-id33663 . -1) (undo-tree-id33664 . -1) (undo-tree-id33665 . -1) (undo-tree-id33666 . -1) (undo-tree-id33667 . -1) (undo-tree-id33668 . -1) (undo-tree-id33669 . -1) (undo-tree-id33670 . -1) (undo-tree-id33671 . -1) (undo-tree-id33672 . -1) (undo-tree-id33673 . -1) (undo-tree-id33674 . -1) (undo-tree-id33675 . -1) (undo-tree-id33676 . -1) (undo-tree-id33677 . -1) (undo-tree-id33678 . -1) (undo-tree-id33679 . -1) (undo-tree-id33680 . -1) (undo-tree-id33681 . -1) (undo-tree-id33682 . -1) (undo-tree-id33683 . -1) (undo-tree-id33684 . -1) (undo-tree-id33685 . -1) (undo-tree-id33686 . -1) (undo-tree-id33687 . -1) (undo-tree-id33688 . -1) (undo-tree-id33689 . -1) (undo-tree-id33690 . -1) (undo-tree-id33691 . -1) (undo-tree-id33692 . -1) (undo-tree-id33693 . -1) (undo-tree-id33694 . -1) (undo-tree-id33695 . -1) (undo-tree-id33696 . -1) 72921 (72915 . 72921) (72907 . 72915) (#("i" 0 1 (fontified t)) . -72907) (undo-tree-id33697 . -1) (undo-tree-id33698 . -1) (undo-tree-id33699 . -1) (undo-tree-id33700 . -1) (undo-tree-id33701 . -1) (undo-tree-id33702 . -1) (undo-tree-id33703 . -1) (undo-tree-id33704 . -1) (undo-tree-id33705 . -1) (undo-tree-id33706 . -1) (undo-tree-id33707 . -1) (undo-tree-id33708 . -1) (undo-tree-id33709 . -1) (undo-tree-id33710 . -1) (undo-tree-id33711 . -1) (undo-tree-id33712 . -1) (undo-tree-id33713 . -1) (undo-tree-id33714 . -1) (undo-tree-id33715 . -1) (undo-tree-id33716 . -1) (undo-tree-id33717 . -1) (undo-tree-id33718 . -1) (undo-tree-id33719 . -1) (undo-tree-id33720 . -1) 72908 (72907 . 72908) (72886 . 72907) (#("a" 0 1 (fontified t)) . -72886) (undo-tree-id33721 . -1) (undo-tree-id33722 . -1) (undo-tree-id33723 . -1) (undo-tree-id33724 . -1) (undo-tree-id33725 . -1) (undo-tree-id33726 . -1) (undo-tree-id33727 . -1) (undo-tree-id33728 . -1) (undo-tree-id33729 . -1) (undo-tree-id33730 . -1) (undo-tree-id33731 . -1) (undo-tree-id33732 . -1) (undo-tree-id33733 . -1) (undo-tree-id33734 . -1) (undo-tree-id33735 . -1) (undo-tree-id33736 . -1) (undo-tree-id33737 . -1) (undo-tree-id33738 . -1) (undo-tree-id33739 . -1) 72887 (72886 . 72887) (#("b" 0 1 (fontified t)) . -72886) (undo-tree-id33740 . -1) (undo-tree-id33741 . -1) (undo-tree-id33742 . -1) (undo-tree-id33743 . -1) (undo-tree-id33744 . -1) (undo-tree-id33745 . -1) (undo-tree-id33746 . -1) (undo-tree-id33747 . -1) (undo-tree-id33748 . -1) (undo-tree-id33749 . -1) (undo-tree-id33750 . -1) (undo-tree-id33751 . -1) (undo-tree-id33752 . -1) (undo-tree-id33753 . -1) (undo-tree-id33754 . -1) (undo-tree-id33755 . -1) (undo-tree-id33756 . -1) (undo-tree-id33757 . -1) (undo-tree-id33758 . -1) (undo-tree-id33759 . -1) (undo-tree-id33760 . -1) (undo-tree-id33761 . -1) (undo-tree-id33762 . -1) (undo-tree-id33763 . -1) (undo-tree-id33764 . -1) (undo-tree-id33765 . -1) (undo-tree-id33766 . -1) (undo-tree-id33767 . -1) (undo-tree-id33768 . -1) (undo-tree-id33769 . -1) (undo-tree-id33770 . -1) (undo-tree-id33771 . -1) (undo-tree-id33772 . -1) (undo-tree-id33773 . -1) (undo-tree-id33774 . -1) (undo-tree-id33775 . -1) (undo-tree-id33776 . -1) (undo-tree-id33777 . -1) (undo-tree-id33778 . -1) (undo-tree-id33779 . -1) (undo-tree-id33780 . -1) (undo-tree-id33781 . -1) (undo-tree-id33782 . -1) (undo-tree-id33783 . -1) (undo-tree-id33784 . -1) (undo-tree-id33785 . -1) (undo-tree-id33786 . -1) (undo-tree-id33787 . -1) (undo-tree-id33788 . -1) (undo-tree-id33789 . -1) (undo-tree-id33790 . -1) (undo-tree-id33791 . -1) (undo-tree-id33792 . -1) (undo-tree-id33793 . -1) (undo-tree-id33794 . -1) (undo-tree-id33795 . -1) (undo-tree-id33796 . -1) (undo-tree-id33797 . -1) (undo-tree-id33798 . -1) (undo-tree-id33799 . -1) (undo-tree-id33800 . -1) (#("n" 0 1 (fontified t)) . -72887) (undo-tree-id33801 . -1) (undo-tree-id33802 . -1) (undo-tree-id33803 . -1) (undo-tree-id33804 . -1) (undo-tree-id33805 . -1) (undo-tree-id33806 . -1) (undo-tree-id33807 . -1) (undo-tree-id33808 . -1) (undo-tree-id33809 . -1) (undo-tree-id33810 . -1) (undo-tree-id33811 . -1) (undo-tree-id33812 . -1) (undo-tree-id33813 . -1) (undo-tree-id33814 . -1) (undo-tree-id33815 . -1) (undo-tree-id33816 . -1) (undo-tree-id33817 . -1) (undo-tree-id33818 . -1) (undo-tree-id33819 . -1) (undo-tree-id33820 . -1) (undo-tree-id33821 . -1) (undo-tree-id33822 . -1) (undo-tree-id33823 . -1) (undo-tree-id33824 . -1) (undo-tree-id33825 . -1) (undo-tree-id33826 . -1) (undo-tree-id33827 . -1) (undo-tree-id33828 . -1) (undo-tree-id33829 . -1) (undo-tree-id33830 . -1) (undo-tree-id33831 . -1) (undo-tree-id33832 . -1) (undo-tree-id33833 . -1) (undo-tree-id33834 . -1) (undo-tree-id33835 . -1) (undo-tree-id33836 . -1) (undo-tree-id33837 . -1) (undo-tree-id33838 . -1) (undo-tree-id33839 . -1) (undo-tree-id33840 . -1) (#(" " 0 1 (fontified t)) . -72888) (undo-tree-id33841 . -1) (undo-tree-id33842 . -1) (undo-tree-id33843 . -1) (undo-tree-id33844 . -1) (undo-tree-id33845 . -1) (undo-tree-id33846 . -1) (undo-tree-id33847 . -1) (undo-tree-id33848 . -1) (undo-tree-id33849 . -1) (undo-tree-id33850 . -1) (undo-tree-id33851 . -1) (undo-tree-id33852 . -1) (undo-tree-id33853 . -1) (undo-tree-id33854 . -1) (undo-tree-id33855 . -1) (undo-tree-id33856 . -1) (undo-tree-id33857 . -1) (undo-tree-id33858 . -1) (undo-tree-id33859 . -1) 72889 (72885 . 72889) (#("a" 0 1 (fontified t)) . -72885) (undo-tree-id33860 . -1) (undo-tree-id33861 . -1) (undo-tree-id33862 . -1) (undo-tree-id33863 . -1) (undo-tree-id33864 . -1) (undo-tree-id33865 . -1) (undo-tree-id33866 . -1) (undo-tree-id33867 . -1) (undo-tree-id33868 . -1) (undo-tree-id33869 . -1) (undo-tree-id33870 . -1) (undo-tree-id33871 . -1) (undo-tree-id33872 . -1) (undo-tree-id33873 . -1) (undo-tree-id33874 . -1) (undo-tree-id33875 . -1) (undo-tree-id33876 . -1) (undo-tree-id33877 . -1) (undo-tree-id33878 . -1) 72886 (72873 . 72886) (72868 . 72873) (72845 . 72851) (#("l" 0 1 (fontified t)) . -72845) (undo-tree-id33879 . -1) (undo-tree-id33880 . -1) (undo-tree-id33881 . -1) (undo-tree-id33882 . -1) (undo-tree-id33883 . -1) (undo-tree-id33884 . -1) (undo-tree-id33885 . -1) (undo-tree-id33886 . -1) (undo-tree-id33887 . -1) (undo-tree-id33888 . -1) (undo-tree-id33889 . -1) (undo-tree-id33890 . -1) (undo-tree-id33891 . -1) (undo-tree-id33892 . -1) (undo-tree-id33893 . -1) (undo-tree-id33894 . -1) (undo-tree-id33895 . -1) (undo-tree-id33896 . -1) (undo-tree-id33897 . -1) (undo-tree-id33898 . -1) (undo-tree-id33899 . -1) (undo-tree-id33900 . -1) (undo-tree-id33901 . -1) (undo-tree-id33902 . -1) (undo-tree-id33903 . -1) (undo-tree-id33904 . -1) (undo-tree-id33905 . -1) (undo-tree-id33906 . -1) (undo-tree-id33907 . -1) (undo-tree-id33908 . -1) (undo-tree-id33909 . -1) (undo-tree-id33910 . -1) (undo-tree-id33911 . -1) (undo-tree-id33912 . -1) (undo-tree-id33913 . -1) (#("e" 0 1 (fontified t)) . -72846) (undo-tree-id33914 . -1) (undo-tree-id33915 . -1) (undo-tree-id33916 . -1) (undo-tree-id33917 . -1) (undo-tree-id33918 . -1) (undo-tree-id33919 . -1) (undo-tree-id33920 . -1) (undo-tree-id33921 . -1) (undo-tree-id33922 . -1) (undo-tree-id33923 . -1) (undo-tree-id33924 . -1) (undo-tree-id33925 . -1) (undo-tree-id33926 . -1) (undo-tree-id33927 . -1) (undo-tree-id33928 . -1) (undo-tree-id33929 . -1) (undo-tree-id33930 . -1) (undo-tree-id33931 . -1) (undo-tree-id33932 . -1) 72847 (72829 . 72847) (#("i" 0 1 (fontified t)) . -72829) (undo-tree-id33933 . -1) (undo-tree-id33934 . -1) (undo-tree-id33935 . -1) (undo-tree-id33936 . -1) (undo-tree-id33937 . -1) (undo-tree-id33938 . -1) (undo-tree-id33939 . -1) (undo-tree-id33940 . -1) (undo-tree-id33941 . -1) (undo-tree-id33942 . -1) (undo-tree-id33943 . -1) (undo-tree-id33944 . -1) (undo-tree-id33945 . -1) (undo-tree-id33946 . -1) (undo-tree-id33947 . -1) (undo-tree-id33948 . -1) (undo-tree-id33949 . -1) (undo-tree-id33950 . -1) (undo-tree-id33951 . -1) (undo-tree-id33952 . -1) (undo-tree-id33953 . -1) (undo-tree-id33954 . -1) (undo-tree-id33955 . -1) (undo-tree-id33956 . -1) (undo-tree-id33957 . -1) (undo-tree-id33958 . -1) (undo-tree-id33959 . -1) (undo-tree-id33960 . -1) (undo-tree-id33961 . -1) (undo-tree-id33962 . -1) (undo-tree-id33963 . -1) (undo-tree-id33964 . -1) (undo-tree-id33965 . -1) (undo-tree-id33966 . -1) (undo-tree-id33967 . -1) (undo-tree-id33968 . -1) (undo-tree-id33969 . -1) (undo-tree-id33970 . -1) (undo-tree-id33971 . -1) (undo-tree-id33972 . -1) (undo-tree-id33973 . -1) (undo-tree-id33974 . -1) (undo-tree-id33975 . -1) (undo-tree-id33976 . -1) (undo-tree-id33977 . -1) (undo-tree-id33978 . -1) (undo-tree-id33979 . -1) (undo-tree-id33980 . -1) (undo-tree-id33981 . -1) (undo-tree-id33982 . -1) (undo-tree-id33983 . -1) (undo-tree-id33984 . -1) (undo-tree-id33985 . -1) (undo-tree-id33986 . -1) (undo-tree-id33987 . -1) (undo-tree-id33988 . -1) (undo-tree-id33989 . -1) (undo-tree-id33990 . -1) (undo-tree-id33991 . -1) (undo-tree-id33992 . -1) (undo-tree-id33993 . -1) (#("n" 0 1 (fontified t)) . -72830) (undo-tree-id33994 . -1) (undo-tree-id33995 . -1) (undo-tree-id33996 . -1) (undo-tree-id33997 . -1) (undo-tree-id33998 . -1) (undo-tree-id33999 . -1) (undo-tree-id34000 . -1) (undo-tree-id34001 . -1) (undo-tree-id34002 . -1) (undo-tree-id34003 . -1) (undo-tree-id34004 . -1) (undo-tree-id34005 . -1) (undo-tree-id34006 . -1) (undo-tree-id34007 . -1) (undo-tree-id34008 . -1) (undo-tree-id34009 . -1) (undo-tree-id34010 . -1) (undo-tree-id34011 . -1) (undo-tree-id34012 . -1) (undo-tree-id34013 . -1) (undo-tree-id34014 . -1) (undo-tree-id34015 . -1) (undo-tree-id34016 . -1) (undo-tree-id34017 . -1) (undo-tree-id34018 . -1) (undo-tree-id34019 . -1) (undo-tree-id34020 . -1) (undo-tree-id34021 . -1) (undo-tree-id34022 . -1) (undo-tree-id34023 . -1) (undo-tree-id34024 . -1) (undo-tree-id34025 . -1) (undo-tree-id34026 . -1) (undo-tree-id34027 . -1) (undo-tree-id34028 . -1) (#(" " 0 1 (fontified t)) . -72831) (undo-tree-id34029 . -1) (undo-tree-id34030 . -1) (undo-tree-id34031 . -1) (undo-tree-id34032 . -1) (undo-tree-id34033 . -1) (undo-tree-id34034 . -1) (undo-tree-id34035 . -1) (undo-tree-id34036 . -1) (undo-tree-id34037 . -1) (undo-tree-id34038 . -1) (undo-tree-id34039 . -1) (undo-tree-id34040 . -1) (undo-tree-id34041 . -1) (undo-tree-id34042 . -1) (undo-tree-id34043 . -1) (undo-tree-id34044 . -1) (undo-tree-id34045 . -1) (undo-tree-id34046 . -1) (undo-tree-id34047 . -1) 72832 (72829 . 72832) (#("d" 0 1 (fontified t)) . -72829) (undo-tree-id34048 . -1) (undo-tree-id34049 . -1) (undo-tree-id34050 . -1) (undo-tree-id34051 . -1) (undo-tree-id34052 . -1) (undo-tree-id34053 . -1) (undo-tree-id34054 . -1) (undo-tree-id34055 . -1) (undo-tree-id34056 . -1) (undo-tree-id34057 . -1) (undo-tree-id34058 . -1) (undo-tree-id34059 . -1) (undo-tree-id34060 . -1) (undo-tree-id34061 . -1) (undo-tree-id34062 . -1) (undo-tree-id34063 . -1) (undo-tree-id34064 . -1) (undo-tree-id34065 . -1) (undo-tree-id34066 . -1) (undo-tree-id34067 . -1) (undo-tree-id34068 . -1) (undo-tree-id34069 . -1) (undo-tree-id34070 . -1) (undo-tree-id34071 . -1) (undo-tree-id34072 . -1) (undo-tree-id34073 . -1) (undo-tree-id34074 . -1) (undo-tree-id34075 . -1) (undo-tree-id34076 . -1) (undo-tree-id34077 . -1) (undo-tree-id34078 . -1) (undo-tree-id34079 . -1) (undo-tree-id34080 . -1) (undo-tree-id34081 . -1) (undo-tree-id34082 . -1) (undo-tree-id34083 . -1) (undo-tree-id34084 . -1) (undo-tree-id34085 . -1) (undo-tree-id34086 . -1) (undo-tree-id34087 . -1) (undo-tree-id34088 . -1) (undo-tree-id34089 . -1) (undo-tree-id34090 . -1) (undo-tree-id34091 . -1) (undo-tree-id34092 . -1) (undo-tree-id34093 . -1) (undo-tree-id34094 . -1) (undo-tree-id34095 . -1) (undo-tree-id34096 . -1) (undo-tree-id34097 . -1) (undo-tree-id34098 . -1) (undo-tree-id34099 . -1) (undo-tree-id34100 . -1) (undo-tree-id34101 . -1) (undo-tree-id34102 . -1) (undo-tree-id34103 . -1) (undo-tree-id34104 . -1) (undo-tree-id34105 . -1) (undo-tree-id34106 . -1) (undo-tree-id34107 . -1) (undo-tree-id34108 . -1) (undo-tree-id34109 . -1) (undo-tree-id34110 . -1) (undo-tree-id34111 . -1) (undo-tree-id34112 . -1) (undo-tree-id34113 . -1) (undo-tree-id34114 . -1) (undo-tree-id34115 . -1) (undo-tree-id34116 . -1) (undo-tree-id34117 . -1) (undo-tree-id34118 . -1) (undo-tree-id34119 . -1) (undo-tree-id34120 . -1) (undo-tree-id34121 . -1) (undo-tree-id34122 . -1) (undo-tree-id34123 . -1) (undo-tree-id34124 . -1) (undo-tree-id34125 . -1) (undo-tree-id34126 . -1) (undo-tree-id34127 . -1) (undo-tree-id34128 . -1) (undo-tree-id34129 . -1) (undo-tree-id34130 . -1) (undo-tree-id34131 . -1) (undo-tree-id34132 . -1) (undo-tree-id34133 . -1) (undo-tree-id34134 . -1) (undo-tree-id34135 . -1) (undo-tree-id34136 . -1) (undo-tree-id34137 . -1) (undo-tree-id34138 . -1) (undo-tree-id34139 . -1) (undo-tree-id34140 . -1) (undo-tree-id34141 . -1) (undo-tree-id34142 . -1) (undo-tree-id34143 . -1) (undo-tree-id34144 . -1) (undo-tree-id34145 . -1) (undo-tree-id34146 . -1) (undo-tree-id34147 . -1) (undo-tree-id34148 . -1) (undo-tree-id34149 . -1) (undo-tree-id34150 . -1) (undo-tree-id34151 . -1) (undo-tree-id34152 . -1) (undo-tree-id34153 . -1) (undo-tree-id34154 . -1) (undo-tree-id34155 . -1) (undo-tree-id34156 . -1) (undo-tree-id34157 . -1) (undo-tree-id34158 . -1) (undo-tree-id34159 . -1) (undo-tree-id34160 . -1) (undo-tree-id34161 . -1) (undo-tree-id34162 . -1) (undo-tree-id34163 . -1) (undo-tree-id34164 . -1) (undo-tree-id34165 . -1) (undo-tree-id34166 . -1) (undo-tree-id34167 . -1) (undo-tree-id34168 . -1) (undo-tree-id34169 . -1) (undo-tree-id34170 . -1) (undo-tree-id34171 . -1) (undo-tree-id34172 . -1) (undo-tree-id34173 . -1) (undo-tree-id34174 . -1) (undo-tree-id34175 . -1) (undo-tree-id34176 . -1) (undo-tree-id34177 . -1) (undo-tree-id34178 . -1) (undo-tree-id34179 . -1) (undo-tree-id34180 . -1) (undo-tree-id34181 . -1) (undo-tree-id34182 . -1) (undo-tree-id34183 . -1) (undo-tree-id34184 . -1) (undo-tree-id34185 . -1) (undo-tree-id34186 . -1) (undo-tree-id34187 . -1) (undo-tree-id34188 . -1) (undo-tree-id34189 . -1) (undo-tree-id34190 . -1) (undo-tree-id34191 . -1) (undo-tree-id34192 . -1) (undo-tree-id34193 . -1) (undo-tree-id34194 . -1) (undo-tree-id34195 . -1) (undo-tree-id34196 . -1) (undo-tree-id34197 . -1) (undo-tree-id34198 . -1) (undo-tree-id34199 . -1) (undo-tree-id34200 . -1) (undo-tree-id34201 . -1) (undo-tree-id34202 . -1) (undo-tree-id34203 . -1) (undo-tree-id34204 . -1) (undo-tree-id34205 . -1) (undo-tree-id34206 . -1) (undo-tree-id34207 . -1) (undo-tree-id34208 . -1) (undo-tree-id34209 . -1) (undo-tree-id34210 . -1) (undo-tree-id34211 . -1) (undo-tree-id34212 . -1) (undo-tree-id34213 . -1) (undo-tree-id34214 . -1) (undo-tree-id34215 . -1) (undo-tree-id34216 . -1) (undo-tree-id34217 . -1) (undo-tree-id34218 . -1) (undo-tree-id34219 . -1) (undo-tree-id34220 . -1) (undo-tree-id34221 . -1) (undo-tree-id34222 . -1) (undo-tree-id34223 . -1) (undo-tree-id34224 . -1) (undo-tree-id34225 . -1) (undo-tree-id34226 . -1) (undo-tree-id34227 . -1) (undo-tree-id34228 . -1) (undo-tree-id34229 . -1) (undo-tree-id34230 . -1) (undo-tree-id34231 . -1) (undo-tree-id34232 . -1) (undo-tree-id34233 . -1) (undo-tree-id34234 . -1) (undo-tree-id34235 . -1) (undo-tree-id34236 . -1) (undo-tree-id34237 . -1) (undo-tree-id34238 . -1) (undo-tree-id34239 . -1) (undo-tree-id34240 . -1) (undo-tree-id34241 . -1) (undo-tree-id34242 . -1) (undo-tree-id34243 . -1) (undo-tree-id34244 . -1) (undo-tree-id34245 . -1) (undo-tree-id34246 . -1) (undo-tree-id34247 . -1) (undo-tree-id34248 . -1) (undo-tree-id34249 . -1) (undo-tree-id34250 . -1) (undo-tree-id34251 . -1) (undo-tree-id34252 . -1) (undo-tree-id34253 . -1) (undo-tree-id34254 . -1) (undo-tree-id34255 . -1) (undo-tree-id34256 . -1) (undo-tree-id34257 . -1) (undo-tree-id34258 . -1) (undo-tree-id34259 . -1) (undo-tree-id34260 . -1) (undo-tree-id34261 . -1) (undo-tree-id34262 . -1) (undo-tree-id34263 . -1) (undo-tree-id34264 . -1) (undo-tree-id34265 . -1) (undo-tree-id34266 . -1) (undo-tree-id34267 . -1) (undo-tree-id34268 . -1) (#("o" 0 1 (fontified t)) . -72830) (undo-tree-id34269 . -1) (undo-tree-id34270 . -1) (undo-tree-id34271 . -1) (undo-tree-id34272 . -1) (undo-tree-id34273 . -1) (undo-tree-id34274 . -1) (undo-tree-id34275 . -1) (undo-tree-id34276 . -1) (undo-tree-id34277 . -1) (undo-tree-id34278 . -1) (undo-tree-id34279 . -1) (undo-tree-id34280 . -1) (undo-tree-id34281 . -1) (undo-tree-id34282 . -1) (undo-tree-id34283 . -1) (undo-tree-id34284 . -1) (undo-tree-id34285 . -1) (undo-tree-id34286 . -1) (undo-tree-id34287 . -1) (undo-tree-id34288 . -1) (undo-tree-id34289 . -1) (undo-tree-id34290 . -1) (undo-tree-id34291 . -1) (undo-tree-id34292 . -1) (undo-tree-id34293 . -1) (undo-tree-id34294 . -1) (undo-tree-id34295 . -1) (undo-tree-id34296 . -1) (undo-tree-id34297 . -1) (undo-tree-id34298 . -1) (undo-tree-id34299 . -1) (undo-tree-id34300 . -1) (undo-tree-id34301 . -1) (undo-tree-id34302 . -1) (undo-tree-id34303 . -1) (undo-tree-id34304 . -1) (undo-tree-id34305 . -1) (undo-tree-id34306 . -1) (undo-tree-id34307 . -1) (undo-tree-id34308 . -1) (undo-tree-id34309 . -1) (undo-tree-id34310 . -1) (undo-tree-id34311 . -1) (undo-tree-id34312 . -1) (undo-tree-id34313 . -1) (undo-tree-id34314 . -1) (undo-tree-id34315 . -1) (undo-tree-id34316 . -1) (undo-tree-id34317 . -1) (undo-tree-id34318 . -1) (undo-tree-id34319 . -1) (undo-tree-id34320 . -1) (undo-tree-id34321 . -1) (undo-tree-id34322 . -1) (undo-tree-id34323 . -1) (undo-tree-id34324 . -1) (undo-tree-id34325 . -1) (undo-tree-id34326 . -1) (undo-tree-id34327 . -1) (undo-tree-id34328 . -1) (undo-tree-id34329 . -1) (undo-tree-id34330 . -1) (undo-tree-id34331 . -1) (undo-tree-id34332 . -1) (undo-tree-id34333 . -1) (undo-tree-id34334 . -1) (undo-tree-id34335 . -1) (undo-tree-id34336 . -1) (undo-tree-id34337 . -1) (undo-tree-id34338 . -1) (undo-tree-id34339 . -1) (undo-tree-id34340 . -1) (undo-tree-id34341 . -1) (undo-tree-id34342 . -1) (undo-tree-id34343 . -1) (undo-tree-id34344 . -1) (undo-tree-id34345 . -1) (undo-tree-id34346 . -1) (undo-tree-id34347 . -1) (undo-tree-id34348 . -1) (undo-tree-id34349 . -1) (undo-tree-id34350 . -1) (undo-tree-id34351 . -1) (undo-tree-id34352 . -1) (undo-tree-id34353 . -1) (undo-tree-id34354 . -1) (undo-tree-id34355 . -1) (undo-tree-id34356 . -1) (undo-tree-id34357 . -1) (undo-tree-id34358 . -1) (undo-tree-id34359 . -1) (undo-tree-id34360 . -1) (undo-tree-id34361 . -1) (undo-tree-id34362 . -1) (undo-tree-id34363 . -1) (undo-tree-id34364 . -1) (undo-tree-id34365 . -1) (undo-tree-id34366 . -1) (undo-tree-id34367 . -1) (undo-tree-id34368 . -1) (undo-tree-id34369 . -1) (undo-tree-id34370 . -1) (undo-tree-id34371 . -1) (undo-tree-id34372 . -1) (undo-tree-id34373 . -1) (undo-tree-id34374 . -1) (undo-tree-id34375 . -1) (undo-tree-id34376 . -1) (undo-tree-id34377 . -1) (undo-tree-id34378 . -1) (undo-tree-id34379 . -1) (undo-tree-id34380 . -1) (undo-tree-id34381 . -1) (undo-tree-id34382 . -1) (undo-tree-id34383 . -1) (undo-tree-id34384 . -1) (undo-tree-id34385 . -1) (undo-tree-id34386 . -1) (undo-tree-id34387 . -1) (undo-tree-id34388 . -1) (undo-tree-id34389 . -1) (undo-tree-id34390 . -1) (undo-tree-id34391 . -1) (undo-tree-id34392 . -1) (undo-tree-id34393 . -1) (undo-tree-id34394 . -1) (undo-tree-id34395 . -1) (undo-tree-id34396 . -1) (undo-tree-id34397 . -1) (undo-tree-id34398 . -1) (undo-tree-id34399 . -1) (undo-tree-id34400 . -1) (undo-tree-id34401 . -1) (undo-tree-id34402 . -1) (undo-tree-id34403 . -1) (undo-tree-id34404 . -1) (undo-tree-id34405 . -1) (undo-tree-id34406 . -1) (undo-tree-id34407 . -1) (undo-tree-id34408 . -1) (undo-tree-id34409 . -1) (undo-tree-id34410 . -1) (undo-tree-id34411 . -1) (undo-tree-id34412 . -1) (undo-tree-id34413 . -1) (undo-tree-id34414 . -1) (undo-tree-id34415 . -1) (undo-tree-id34416 . -1) (undo-tree-id34417 . -1) (undo-tree-id34418 . -1) (undo-tree-id34419 . -1) (undo-tree-id34420 . -1) (undo-tree-id34421 . -1) (undo-tree-id34422 . -1) (undo-tree-id34423 . -1) (undo-tree-id34424 . -1) (undo-tree-id34425 . -1) (undo-tree-id34426 . -1) (undo-tree-id34427 . -1) (undo-tree-id34428 . -1) (undo-tree-id34429 . -1) (undo-tree-id34430 . -1) (undo-tree-id34431 . -1) (undo-tree-id34432 . -1) (undo-tree-id34433 . -1) (undo-tree-id34434 . -1) (undo-tree-id34435 . -1) (undo-tree-id34436 . -1) (undo-tree-id34437 . -1) (undo-tree-id34438 . -1) (undo-tree-id34439 . -1) (undo-tree-id34440 . -1) (undo-tree-id34441 . -1) (undo-tree-id34442 . -1) (undo-tree-id34443 . -1) (undo-tree-id34444 . -1) (undo-tree-id34445 . -1) (undo-tree-id34446 . -1) (undo-tree-id34447 . -1) (undo-tree-id34448 . -1) (undo-tree-id34449 . -1) (undo-tree-id34450 . -1) (undo-tree-id34451 . -1) (undo-tree-id34452 . -1) (undo-tree-id34453 . -1) (undo-tree-id34454 . -1) (undo-tree-id34455 . -1) (undo-tree-id34456 . -1) (undo-tree-id34457 . -1) (undo-tree-id34458 . -1) (undo-tree-id34459 . -1) (undo-tree-id34460 . -1) (undo-tree-id34461 . -1) (undo-tree-id34462 . -1) (undo-tree-id34463 . -1) (undo-tree-id34464 . -1) (undo-tree-id34465 . -1) (undo-tree-id34466 . -1) (undo-tree-id34467 . -1) (undo-tree-id34468 . -1) (undo-tree-id34469 . -1) (undo-tree-id34470 . -1) (undo-tree-id34471 . -1) (undo-tree-id34472 . -1) (undo-tree-id34473 . -1) (undo-tree-id34474 . -1) (undo-tree-id34475 . -1) (undo-tree-id34476 . -1) 72831 (#("n" 0 1 (fontified t)) . -72831) (undo-tree-id34477 . -1) (undo-tree-id34478 . -1) (undo-tree-id34479 . -1) (undo-tree-id34480 . -1) (undo-tree-id34481 . -1) (undo-tree-id34482 . -1) (undo-tree-id34483 . -1) (undo-tree-id34484 . -1) (undo-tree-id34485 . -1) (undo-tree-id34486 . -1) (undo-tree-id34487 . -1) (undo-tree-id34488 . -1) (undo-tree-id34489 . -1) (undo-tree-id34490 . -1) (undo-tree-id34491 . -1) (undo-tree-id34492 . -1) (undo-tree-id34493 . -1) (undo-tree-id34494 . -1) (undo-tree-id34495 . -1) (undo-tree-id34496 . -1) (undo-tree-id34497 . -1) (undo-tree-id34498 . -1) (undo-tree-id34499 . -1) (undo-tree-id34500 . -1) (undo-tree-id34501 . -1) (undo-tree-id34502 . -1) (undo-tree-id34503 . -1) (undo-tree-id34504 . -1) (undo-tree-id34505 . -1) (undo-tree-id34506 . -1) (undo-tree-id34507 . -1) (undo-tree-id34508 . -1) (undo-tree-id34509 . -1) (undo-tree-id34510 . -1) (undo-tree-id34511 . -1) (undo-tree-id34512 . -1) (undo-tree-id34513 . -1) (undo-tree-id34514 . -1) (undo-tree-id34515 . -1) (undo-tree-id34516 . -1) (undo-tree-id34517 . -1) (undo-tree-id34518 . -1) (undo-tree-id34519 . -1) (undo-tree-id34520 . -1) (undo-tree-id34521 . -1) (undo-tree-id34522 . -1) (undo-tree-id34523 . -1) (undo-tree-id34524 . -1) (undo-tree-id34525 . -1) (undo-tree-id34526 . -1) (undo-tree-id34527 . -1) (undo-tree-id34528 . -1) (undo-tree-id34529 . -1) (undo-tree-id34530 . -1) (undo-tree-id34531 . -1) (undo-tree-id34532 . -1) (undo-tree-id34533 . -1) (undo-tree-id34534 . -1) (undo-tree-id34535 . -1) (undo-tree-id34536 . -1) (undo-tree-id34537 . -1) (undo-tree-id34538 . -1) (undo-tree-id34539 . -1) (undo-tree-id34540 . -1) (undo-tree-id34541 . -1) (undo-tree-id34542 . -1) (undo-tree-id34543 . -1) (undo-tree-id34544 . -1) (undo-tree-id34545 . -1) (undo-tree-id34546 . -1) (undo-tree-id34547 . -1) (undo-tree-id34548 . -1) (undo-tree-id34549 . -1) (undo-tree-id34550 . -1) (undo-tree-id34551 . -1) (undo-tree-id34552 . -1) (undo-tree-id34553 . -1) (undo-tree-id34554 . -1) (undo-tree-id34555 . -1) (undo-tree-id34556 . -1) (undo-tree-id34557 . -1) (undo-tree-id34558 . -1) (undo-tree-id34559 . -1) (undo-tree-id34560 . -1) (undo-tree-id34561 . -1) (undo-tree-id34562 . -1) (undo-tree-id34563 . -1) (undo-tree-id34564 . -1) (undo-tree-id34565 . -1) (undo-tree-id34566 . -1) (undo-tree-id34567 . -1) (undo-tree-id34568 . -1) (undo-tree-id34569 . -1) (undo-tree-id34570 . -1) (undo-tree-id34571 . -1) (undo-tree-id34572 . -1) (undo-tree-id34573 . -1) (undo-tree-id34574 . -1) (undo-tree-id34575 . -1) (undo-tree-id34576 . -1) (undo-tree-id34577 . -1) (undo-tree-id34578 . -1) (undo-tree-id34579 . -1) (undo-tree-id34580 . -1) (undo-tree-id34581 . -1) (undo-tree-id34582 . -1) (undo-tree-id34583 . -1) (undo-tree-id34584 . -1) (undo-tree-id34585 . -1) (undo-tree-id34586 . -1) (undo-tree-id34587 . -1) (undo-tree-id34588 . -1) (undo-tree-id34589 . -1) (undo-tree-id34590 . -1) (undo-tree-id34591 . -1) (undo-tree-id34592 . -1) (undo-tree-id34593 . -1) (undo-tree-id34594 . -1) (undo-tree-id34595 . -1) (undo-tree-id34596 . -1) (undo-tree-id34597 . -1) (undo-tree-id34598 . -1) (undo-tree-id34599 . -1) (undo-tree-id34600 . -1) (undo-tree-id34601 . -1) (undo-tree-id34602 . -1) (undo-tree-id34603 . -1) (undo-tree-id34604 . -1) (undo-tree-id34605 . -1) (undo-tree-id34606 . -1) (undo-tree-id34607 . -1) (undo-tree-id34608 . -1) (undo-tree-id34609 . -1) (undo-tree-id34610 . -1) (undo-tree-id34611 . -1) (undo-tree-id34612 . -1) (undo-tree-id34613 . -1) (undo-tree-id34614 . -1) (undo-tree-id34615 . -1) (undo-tree-id34616 . -1) (undo-tree-id34617 . -1) (undo-tree-id34618 . -1) (undo-tree-id34619 . -1) (undo-tree-id34620 . -1) (undo-tree-id34621 . -1) (undo-tree-id34622 . -1) (undo-tree-id34623 . -1) (undo-tree-id34624 . -1) (undo-tree-id34625 . -1) (undo-tree-id34626 . -1) (undo-tree-id34627 . -1) (undo-tree-id34628 . -1) (undo-tree-id34629 . -1) (undo-tree-id34630 . -1) (undo-tree-id34631 . -1) (undo-tree-id34632 . -1) (undo-tree-id34633 . -1) (undo-tree-id34634 . -1) (undo-tree-id34635 . -1) (undo-tree-id34636 . -1) (undo-tree-id34637 . -1) (undo-tree-id34638 . -1) (undo-tree-id34639 . -1) (undo-tree-id34640 . -1) (undo-tree-id34641 . -1) (undo-tree-id34642 . -1) (undo-tree-id34643 . -1) (undo-tree-id34644 . -1) (undo-tree-id34645 . -1) (undo-tree-id34646 . -1) (undo-tree-id34647 . -1) (undo-tree-id34648 . -1) (undo-tree-id34649 . -1) (undo-tree-id34650 . -1) (undo-tree-id34651 . -1) (undo-tree-id34652 . -1) (undo-tree-id34653 . -1) (undo-tree-id34654 . -1) (undo-tree-id34655 . -1) (undo-tree-id34656 . -1) (undo-tree-id34657 . -1) (undo-tree-id34658 . -1) (undo-tree-id34659 . -1) (undo-tree-id34660 . -1) (undo-tree-id34661 . -1) (undo-tree-id34662 . -1) (undo-tree-id34663 . -1) (undo-tree-id34664 . -1) (undo-tree-id34665 . -1) (undo-tree-id34666 . -1) (undo-tree-id34667 . -1) (undo-tree-id34668 . -1) (undo-tree-id34669 . -1) (undo-tree-id34670 . -1) (undo-tree-id34671 . -1) (#("e" 0 1 (fontified t)) . -72832) (undo-tree-id34672 . -1) (undo-tree-id34673 . -1) (undo-tree-id34674 . -1) (undo-tree-id34675 . -1) (undo-tree-id34676 . -1) (undo-tree-id34677 . -1) (undo-tree-id34678 . -1) (undo-tree-id34679 . -1) (undo-tree-id34680 . -1) (undo-tree-id34681 . -1) (undo-tree-id34682 . -1) (undo-tree-id34683 . -1) (undo-tree-id34684 . -1) (undo-tree-id34685 . -1) (undo-tree-id34686 . -1) (undo-tree-id34687 . -1) (undo-tree-id34688 . -1) (undo-tree-id34689 . -1) (undo-tree-id34690 . -1) (undo-tree-id34691 . -1) (undo-tree-id34692 . -1) (undo-tree-id34693 . -1) (undo-tree-id34694 . -1) (undo-tree-id34695 . -1) (undo-tree-id34696 . -1) (undo-tree-id34697 . -1) (undo-tree-id34698 . -1) (undo-tree-id34699 . -1) (undo-tree-id34700 . -1) (undo-tree-id34701 . -1) (undo-tree-id34702 . -1) (undo-tree-id34703 . -1) (undo-tree-id34704 . -1) (undo-tree-id34705 . -1) (undo-tree-id34706 . -1) (undo-tree-id34707 . -1) (undo-tree-id34708 . -1) (undo-tree-id34709 . -1) (undo-tree-id34710 . -1) (undo-tree-id34711 . -1) (undo-tree-id34712 . -1) (undo-tree-id34713 . -1) (undo-tree-id34714 . -1) (undo-tree-id34715 . -1) (undo-tree-id34716 . -1) (undo-tree-id34717 . -1) (undo-tree-id34718 . -1) (undo-tree-id34719 . -1) (undo-tree-id34720 . -1) (undo-tree-id34721 . -1) (undo-tree-id34722 . -1) (undo-tree-id34723 . -1) (undo-tree-id34724 . -1) (undo-tree-id34725 . -1) (undo-tree-id34726 . -1) (undo-tree-id34727 . -1) (undo-tree-id34728 . -1) (undo-tree-id34729 . -1) (undo-tree-id34730 . -1) (undo-tree-id34731 . -1) (undo-tree-id34732 . -1) (undo-tree-id34733 . -1) (undo-tree-id34734 . -1) (undo-tree-id34735 . -1) (undo-tree-id34736 . -1) (undo-tree-id34737 . -1) (undo-tree-id34738 . -1) (undo-tree-id34739 . -1) (undo-tree-id34740 . -1) (undo-tree-id34741 . -1) (undo-tree-id34742 . -1) (undo-tree-id34743 . -1) (undo-tree-id34744 . -1) (undo-tree-id34745 . -1) (undo-tree-id34746 . -1) (undo-tree-id34747 . -1) (undo-tree-id34748 . -1) (undo-tree-id34749 . -1) (undo-tree-id34750 . -1) (undo-tree-id34751 . -1) (undo-tree-id34752 . -1) (undo-tree-id34753 . -1) (undo-tree-id34754 . -1) (undo-tree-id34755 . -1) (undo-tree-id34756 . -1) (undo-tree-id34757 . -1) (undo-tree-id34758 . -1) (undo-tree-id34759 . -1) (undo-tree-id34760 . -1) (undo-tree-id34761 . -1) (undo-tree-id34762 . -1) (undo-tree-id34763 . -1) (undo-tree-id34764 . -1) (undo-tree-id34765 . -1) (undo-tree-id34766 . -1) (undo-tree-id34767 . -1) (undo-tree-id34768 . -1) (undo-tree-id34769 . -1) (undo-tree-id34770 . -1) (undo-tree-id34771 . -1) (undo-tree-id34772 . -1) (undo-tree-id34773 . -1) (undo-tree-id34774 . -1) (undo-tree-id34775 . -1) (undo-tree-id34776 . -1) (undo-tree-id34777 . -1) (undo-tree-id34778 . -1) (undo-tree-id34779 . -1) (undo-tree-id34780 . -1) (undo-tree-id34781 . -1) (undo-tree-id34782 . -1) (undo-tree-id34783 . -1) (undo-tree-id34784 . -1) (undo-tree-id34785 . -1) (undo-tree-id34786 . -1) (undo-tree-id34787 . -1) (undo-tree-id34788 . -1) (undo-tree-id34789 . -1) (undo-tree-id34790 . -1) (undo-tree-id34791 . -1) (undo-tree-id34792 . -1) (undo-tree-id34793 . -1) (undo-tree-id34794 . -1) (undo-tree-id34795 . -1) (undo-tree-id34796 . -1) (undo-tree-id34797 . -1) (undo-tree-id34798 . -1) (undo-tree-id34799 . -1) (undo-tree-id34800 . -1) (undo-tree-id34801 . -1) (undo-tree-id34802 . -1) (undo-tree-id34803 . -1) (undo-tree-id34804 . -1) (undo-tree-id34805 . -1) (undo-tree-id34806 . -1) (undo-tree-id34807 . -1) (undo-tree-id34808 . -1) (undo-tree-id34809 . -1) (undo-tree-id34810 . -1) (undo-tree-id34811 . -1) (undo-tree-id34812 . -1) (undo-tree-id34813 . -1) (undo-tree-id34814 . -1) (undo-tree-id34815 . -1) (undo-tree-id34816 . -1) (undo-tree-id34817 . -1) (undo-tree-id34818 . -1) (undo-tree-id34819 . -1) (undo-tree-id34820 . -1) (undo-tree-id34821 . -1) (undo-tree-id34822 . -1) (undo-tree-id34823 . -1) (undo-tree-id34824 . -1) (undo-tree-id34825 . -1) (undo-tree-id34826 . -1) (undo-tree-id34827 . -1) (undo-tree-id34828 . -1) (undo-tree-id34829 . -1) (undo-tree-id34830 . -1) (undo-tree-id34831 . -1) (undo-tree-id34832 . -1) (undo-tree-id34833 . -1) (undo-tree-id34834 . -1) (undo-tree-id34835 . -1) (undo-tree-id34836 . -1) (undo-tree-id34837 . -1) (undo-tree-id34838 . -1) (undo-tree-id34839 . -1) (undo-tree-id34840 . -1) (undo-tree-id34841 . -1) (undo-tree-id34842 . -1) (undo-tree-id34843 . -1) (undo-tree-id34844 . -1) (undo-tree-id34845 . -1) (undo-tree-id34846 . -1) (undo-tree-id34847 . -1) (undo-tree-id34848 . -1) (undo-tree-id34849 . -1) (undo-tree-id34850 . -1) (undo-tree-id34851 . -1) (undo-tree-id34852 . -1) (undo-tree-id34853 . -1) (undo-tree-id34854 . -1) (undo-tree-id34855 . -1) (undo-tree-id34856 . -1) (undo-tree-id34857 . -1) (undo-tree-id34858 . -1) (#(" " 0 1 (fontified t)) . -72833) (undo-tree-id34859 . -1) (undo-tree-id34860 . -1) (undo-tree-id34861 . -1) (undo-tree-id34862 . -1) (undo-tree-id34863 . -1) (undo-tree-id34864 . -1) (undo-tree-id34865 . -1) (undo-tree-id34866 . -1) (undo-tree-id34867 . -1) (undo-tree-id34868 . -1) (undo-tree-id34869 . -1) (undo-tree-id34870 . -1) (undo-tree-id34871 . -1) (undo-tree-id34872 . -1) (undo-tree-id34873 . -1) (undo-tree-id34874 . -1) (undo-tree-id34875 . -1) (undo-tree-id34876 . -1) (undo-tree-id34877 . -1) (undo-tree-id34878 . -1) (undo-tree-id34879 . -1) (undo-tree-id34880 . -1) (undo-tree-id34881 . -1) (undo-tree-id34882 . -1) (undo-tree-id34883 . -1) (undo-tree-id34884 . -1) (undo-tree-id34885 . -1) (undo-tree-id34886 . -1) (undo-tree-id34887 . -1) (undo-tree-id34888 . -1) (undo-tree-id34889 . -1) (undo-tree-id34890 . -1) (undo-tree-id34891 . -1) (undo-tree-id34892 . -1) (undo-tree-id34893 . -1) (undo-tree-id34894 . -1) (undo-tree-id34895 . -1) (undo-tree-id34896 . -1) (undo-tree-id34897 . -1) (undo-tree-id34898 . -1) (undo-tree-id34899 . -1) (undo-tree-id34900 . -1) (undo-tree-id34901 . -1) (undo-tree-id34902 . -1) (undo-tree-id34903 . -1) (undo-tree-id34904 . -1) (undo-tree-id34905 . -1) (undo-tree-id34906 . -1) (undo-tree-id34907 . -1) (undo-tree-id34908 . -1) (undo-tree-id34909 . -1) (undo-tree-id34910 . -1) (undo-tree-id34911 . -1) (undo-tree-id34912 . -1) (undo-tree-id34913 . -1) (undo-tree-id34914 . -1) (undo-tree-id34915 . -1) (undo-tree-id34916 . -1) (undo-tree-id34917 . -1) (undo-tree-id34918 . -1) (undo-tree-id34919 . -1) (undo-tree-id34920 . -1) (undo-tree-id34921 . -1) (undo-tree-id34922 . -1) (undo-tree-id34923 . -1) (undo-tree-id34924 . -1) (undo-tree-id34925 . -1) (undo-tree-id34926 . -1) (undo-tree-id34927 . -1) (undo-tree-id34928 . -1) (undo-tree-id34929 . -1) (undo-tree-id34930 . -1) (undo-tree-id34931 . -1) (undo-tree-id34932 . -1) (undo-tree-id34933 . -1) (undo-tree-id34934 . -1) (undo-tree-id34935 . -1) (undo-tree-id34936 . -1) (undo-tree-id34937 . -1) (undo-tree-id34938 . -1) (undo-tree-id34939 . -1) (undo-tree-id34940 . -1) (undo-tree-id34941 . -1) (undo-tree-id34942 . -1) (undo-tree-id34943 . -1) (undo-tree-id34944 . -1) (undo-tree-id34945 . -1) (undo-tree-id34946 . -1) (undo-tree-id34947 . -1) (undo-tree-id34948 . -1) (undo-tree-id34949 . -1) (undo-tree-id34950 . -1) (undo-tree-id34951 . -1) (undo-tree-id34952 . -1) (undo-tree-id34953 . -1) (undo-tree-id34954 . -1) (undo-tree-id34955 . -1) (undo-tree-id34956 . -1) (undo-tree-id34957 . -1) (undo-tree-id34958 . -1) (undo-tree-id34959 . -1) (undo-tree-id34960 . -1) (undo-tree-id34961 . -1) (undo-tree-id34962 . -1) (undo-tree-id34963 . -1) (undo-tree-id34964 . -1) (undo-tree-id34965 . -1) (undo-tree-id34966 . -1) (undo-tree-id34967 . -1) (undo-tree-id34968 . -1) (undo-tree-id34969 . -1) (undo-tree-id34970 . -1) (undo-tree-id34971 . -1) (undo-tree-id34972 . -1) (undo-tree-id34973 . -1) (undo-tree-id34974 . -1) (undo-tree-id34975 . -1) (undo-tree-id34976 . -1) (undo-tree-id34977 . -1) (undo-tree-id34978 . -1) (undo-tree-id34979 . -1) (undo-tree-id34980 . -1) (undo-tree-id34981 . -1) (undo-tree-id34982 . -1) (undo-tree-id34983 . -1) (undo-tree-id34984 . -1) (undo-tree-id34985 . -1) (undo-tree-id34986 . -1) (undo-tree-id34987 . -1) (undo-tree-id34988 . -1) (undo-tree-id34989 . -1) (undo-tree-id34990 . -1) (undo-tree-id34991 . -1) (undo-tree-id34992 . -1) (undo-tree-id34993 . -1) (undo-tree-id34994 . -1) (undo-tree-id34995 . -1) (undo-tree-id34996 . -1) (undo-tree-id34997 . -1) (undo-tree-id34998 . -1) (undo-tree-id34999 . -1) (undo-tree-id35000 . -1) (undo-tree-id35001 . -1) (undo-tree-id35002 . -1) (undo-tree-id35003 . -1) (undo-tree-id35004 . -1) (undo-tree-id35005 . -1) (undo-tree-id35006 . -1) (undo-tree-id35007 . -1) (undo-tree-id35008 . -1) (undo-tree-id35009 . -1) (undo-tree-id35010 . -1) (undo-tree-id35011 . -1) (undo-tree-id35012 . -1) (undo-tree-id35013 . -1) (undo-tree-id35014 . -1) (undo-tree-id35015 . -1) (undo-tree-id35016 . -1) (undo-tree-id35017 . -1) (undo-tree-id35018 . -1) (undo-tree-id35019 . -1) (undo-tree-id35020 . -1) (undo-tree-id35021 . -1) (undo-tree-id35022 . -1) (undo-tree-id35023 . -1) (undo-tree-id35024 . -1) (undo-tree-id35025 . -1) (undo-tree-id35026 . -1) (undo-tree-id35027 . -1) (undo-tree-id35028 . -1) (undo-tree-id35029 . -1) (undo-tree-id35030 . -1) (undo-tree-id35031 . -1) (undo-tree-id35032 . -1) (undo-tree-id35033 . -1) (undo-tree-id35034 . -1) (undo-tree-id35035 . -1) (undo-tree-id35036 . -1) (undo-tree-id35037 . -1) (#("f" 0 1 (fontified t)) . -72834) (undo-tree-id35038 . -1) (undo-tree-id35039 . -1) (undo-tree-id35040 . -1) (undo-tree-id35041 . -1) (undo-tree-id35042 . -1) (undo-tree-id35043 . -1) (undo-tree-id35044 . -1) (undo-tree-id35045 . -1) (undo-tree-id35046 . -1) (undo-tree-id35047 . -1) (undo-tree-id35048 . -1) (undo-tree-id35049 . -1) (undo-tree-id35050 . -1) (undo-tree-id35051 . -1) (undo-tree-id35052 . -1) (undo-tree-id35053 . -1) (undo-tree-id35054 . -1) (undo-tree-id35055 . -1) (undo-tree-id35056 . -1) (undo-tree-id35057 . -1) (undo-tree-id35058 . -1) (undo-tree-id35059 . -1) (undo-tree-id35060 . -1) (undo-tree-id35061 . -1) (undo-tree-id35062 . -1) (undo-tree-id35063 . -1) (undo-tree-id35064 . -1) (undo-tree-id35065 . -1) (undo-tree-id35066 . -1) (undo-tree-id35067 . -1) (undo-tree-id35068 . -1) (undo-tree-id35069 . -1) (undo-tree-id35070 . -1) (undo-tree-id35071 . -1) (undo-tree-id35072 . -1) (undo-tree-id35073 . -1) (undo-tree-id35074 . -1) (undo-tree-id35075 . -1) (undo-tree-id35076 . -1) (undo-tree-id35077 . -1) (undo-tree-id35078 . -1) (undo-tree-id35079 . -1) (undo-tree-id35080 . -1) (undo-tree-id35081 . -1) (undo-tree-id35082 . -1) (undo-tree-id35083 . -1) (undo-tree-id35084 . -1) (undo-tree-id35085 . -1) (undo-tree-id35086 . -1) (undo-tree-id35087 . -1) (undo-tree-id35088 . -1) (undo-tree-id35089 . -1) (undo-tree-id35090 . -1) (undo-tree-id35091 . -1) (undo-tree-id35092 . -1) (undo-tree-id35093 . -1) (undo-tree-id35094 . -1) (undo-tree-id35095 . -1) (undo-tree-id35096 . -1) (undo-tree-id35097 . -1) (undo-tree-id35098 . -1) (undo-tree-id35099 . -1) (undo-tree-id35100 . -1) (undo-tree-id35101 . -1) (undo-tree-id35102 . -1) (undo-tree-id35103 . -1) (undo-tree-id35104 . -1) (undo-tree-id35105 . -1) (undo-tree-id35106 . -1) (undo-tree-id35107 . -1) (undo-tree-id35108 . -1) (undo-tree-id35109 . -1) (undo-tree-id35110 . -1) (undo-tree-id35111 . -1) (undo-tree-id35112 . -1) (undo-tree-id35113 . -1) (undo-tree-id35114 . -1) (undo-tree-id35115 . -1) (undo-tree-id35116 . -1) (undo-tree-id35117 . -1) (undo-tree-id35118 . -1) (undo-tree-id35119 . -1) (undo-tree-id35120 . -1) (undo-tree-id35121 . -1) (undo-tree-id35122 . -1) (undo-tree-id35123 . -1) (undo-tree-id35124 . -1) (undo-tree-id35125 . -1) (undo-tree-id35126 . -1) (undo-tree-id35127 . -1) (undo-tree-id35128 . -1) (undo-tree-id35129 . -1) (undo-tree-id35130 . -1) (undo-tree-id35131 . -1) (undo-tree-id35132 . -1) (undo-tree-id35133 . -1) (undo-tree-id35134 . -1) (undo-tree-id35135 . -1) (undo-tree-id35136 . -1) (undo-tree-id35137 . -1) (undo-tree-id35138 . -1) (undo-tree-id35139 . -1) (undo-tree-id35140 . -1) (undo-tree-id35141 . -1) (undo-tree-id35142 . -1) (undo-tree-id35143 . -1) (undo-tree-id35144 . -1) (undo-tree-id35145 . -1) (undo-tree-id35146 . -1) (undo-tree-id35147 . -1) (undo-tree-id35148 . -1) (undo-tree-id35149 . -1) (undo-tree-id35150 . -1) (undo-tree-id35151 . -1) (undo-tree-id35152 . -1) (undo-tree-id35153 . -1) (undo-tree-id35154 . -1) (undo-tree-id35155 . -1) (undo-tree-id35156 . -1) (undo-tree-id35157 . -1) (undo-tree-id35158 . -1) (undo-tree-id35159 . -1) (undo-tree-id35160 . -1) (undo-tree-id35161 . -1) (undo-tree-id35162 . -1) (undo-tree-id35163 . -1) (undo-tree-id35164 . -1) (undo-tree-id35165 . -1) (undo-tree-id35166 . -1) (undo-tree-id35167 . -1) (undo-tree-id35168 . -1) (undo-tree-id35169 . -1) (undo-tree-id35170 . -1) (undo-tree-id35171 . -1) (undo-tree-id35172 . -1) (undo-tree-id35173 . -1) (undo-tree-id35174 . -1) (undo-tree-id35175 . -1) (undo-tree-id35176 . -1) (undo-tree-id35177 . -1) (undo-tree-id35178 . -1) (undo-tree-id35179 . -1) (undo-tree-id35180 . -1) (undo-tree-id35181 . -1) (undo-tree-id35182 . -1) (undo-tree-id35183 . -1) (undo-tree-id35184 . -1) (undo-tree-id35185 . -1) (undo-tree-id35186 . -1) (undo-tree-id35187 . -1) (undo-tree-id35188 . -1) (undo-tree-id35189 . -1) (undo-tree-id35190 . -1) (undo-tree-id35191 . -1) (undo-tree-id35192 . -1) (undo-tree-id35193 . -1) (undo-tree-id35194 . -1) (undo-tree-id35195 . -1) (undo-tree-id35196 . -1) (undo-tree-id35197 . -1) (undo-tree-id35198 . -1) (undo-tree-id35199 . -1) (undo-tree-id35200 . -1) (undo-tree-id35201 . -1) (undo-tree-id35202 . -1) (undo-tree-id35203 . -1) (undo-tree-id35204 . -1) (undo-tree-id35205 . -1) (undo-tree-id35206 . -1) (undo-tree-id35207 . -1) (undo-tree-id35208 . -1) (#("o" 0 1 (fontified t)) . -72835) (undo-tree-id35209 . -1) (undo-tree-id35210 . -1) (undo-tree-id35211 . -1) (undo-tree-id35212 . -1) (undo-tree-id35213 . -1) (undo-tree-id35214 . -1) (undo-tree-id35215 . -1) (undo-tree-id35216 . -1) (undo-tree-id35217 . -1) (undo-tree-id35218 . -1) (undo-tree-id35219 . -1) (undo-tree-id35220 . -1) (undo-tree-id35221 . -1) (undo-tree-id35222 . -1) (undo-tree-id35223 . -1) (undo-tree-id35224 . -1) (undo-tree-id35225 . -1) (undo-tree-id35226 . -1) (undo-tree-id35227 . -1) (undo-tree-id35228 . -1) (undo-tree-id35229 . -1) (undo-tree-id35230 . -1) (undo-tree-id35231 . -1) (undo-tree-id35232 . -1) (undo-tree-id35233 . -1) (undo-tree-id35234 . -1) (undo-tree-id35235 . -1) (undo-tree-id35236 . -1) (undo-tree-id35237 . -1) (undo-tree-id35238 . -1) (undo-tree-id35239 . -1) (undo-tree-id35240 . -1) (undo-tree-id35241 . -1) (undo-tree-id35242 . -1) (undo-tree-id35243 . -1) (undo-tree-id35244 . -1) (undo-tree-id35245 . -1) (undo-tree-id35246 . -1) (undo-tree-id35247 . -1) (undo-tree-id35248 . -1) (undo-tree-id35249 . -1) (undo-tree-id35250 . -1) (undo-tree-id35251 . -1) (undo-tree-id35252 . -1) (undo-tree-id35253 . -1) (undo-tree-id35254 . -1) (undo-tree-id35255 . -1) (undo-tree-id35256 . -1) (undo-tree-id35257 . -1) (undo-tree-id35258 . -1) (undo-tree-id35259 . -1) (undo-tree-id35260 . -1) (undo-tree-id35261 . -1) (undo-tree-id35262 . -1) (undo-tree-id35263 . -1) (undo-tree-id35264 . -1) (undo-tree-id35265 . -1) (undo-tree-id35266 . -1) (undo-tree-id35267 . -1) (undo-tree-id35268 . -1) (undo-tree-id35269 . -1) (undo-tree-id35270 . -1) (undo-tree-id35271 . -1) (undo-tree-id35272 . -1) (undo-tree-id35273 . -1) (undo-tree-id35274 . -1) (undo-tree-id35275 . -1) (undo-tree-id35276 . -1) (undo-tree-id35277 . -1) (undo-tree-id35278 . -1) (undo-tree-id35279 . -1) (undo-tree-id35280 . -1) (undo-tree-id35281 . -1) (undo-tree-id35282 . -1) (undo-tree-id35283 . -1) (undo-tree-id35284 . -1) (undo-tree-id35285 . -1) (undo-tree-id35286 . -1) (undo-tree-id35287 . -1) (undo-tree-id35288 . -1) (undo-tree-id35289 . -1) (undo-tree-id35290 . -1) (undo-tree-id35291 . -1) (undo-tree-id35292 . -1) (undo-tree-id35293 . -1) (undo-tree-id35294 . -1) (undo-tree-id35295 . -1) (undo-tree-id35296 . -1) (undo-tree-id35297 . -1) (undo-tree-id35298 . -1) (undo-tree-id35299 . -1) (undo-tree-id35300 . -1) (undo-tree-id35301 . -1) (undo-tree-id35302 . -1) (undo-tree-id35303 . -1) (undo-tree-id35304 . -1) (undo-tree-id35305 . -1) (undo-tree-id35306 . -1) (undo-tree-id35307 . -1) (undo-tree-id35308 . -1) (undo-tree-id35309 . -1) (undo-tree-id35310 . -1) (undo-tree-id35311 . -1) (undo-tree-id35312 . -1) (undo-tree-id35313 . -1) (undo-tree-id35314 . -1) (undo-tree-id35315 . -1) (undo-tree-id35316 . -1) (undo-tree-id35317 . -1) (undo-tree-id35318 . -1) (undo-tree-id35319 . -1) (undo-tree-id35320 . -1) (undo-tree-id35321 . -1) (undo-tree-id35322 . -1) (undo-tree-id35323 . -1) (undo-tree-id35324 . -1) (undo-tree-id35325 . -1) (undo-tree-id35326 . -1) (undo-tree-id35327 . -1) (undo-tree-id35328 . -1) (undo-tree-id35329 . -1) (undo-tree-id35330 . -1) (undo-tree-id35331 . -1) (undo-tree-id35332 . -1) (undo-tree-id35333 . -1) (undo-tree-id35334 . -1) (undo-tree-id35335 . -1) (undo-tree-id35336 . -1) (undo-tree-id35337 . -1) (undo-tree-id35338 . -1) (undo-tree-id35339 . -1) (undo-tree-id35340 . -1) (undo-tree-id35341 . -1) (undo-tree-id35342 . -1) (undo-tree-id35343 . -1) (undo-tree-id35344 . -1) (undo-tree-id35345 . -1) (undo-tree-id35346 . -1) (undo-tree-id35347 . -1) (undo-tree-id35348 . -1) (undo-tree-id35349 . -1) (undo-tree-id35350 . -1) (undo-tree-id35351 . -1) (undo-tree-id35352 . -1) (undo-tree-id35353 . -1) (undo-tree-id35354 . -1) (undo-tree-id35355 . -1) (undo-tree-id35356 . -1) (undo-tree-id35357 . -1) (undo-tree-id35358 . -1) (undo-tree-id35359 . -1) (undo-tree-id35360 . -1) (undo-tree-id35361 . -1) (undo-tree-id35362 . -1) (undo-tree-id35363 . -1) (undo-tree-id35364 . -1) (undo-tree-id35365 . -1) (undo-tree-id35366 . -1) (undo-tree-id35367 . -1) (undo-tree-id35368 . -1) (undo-tree-id35369 . -1) (undo-tree-id35370 . -1) (undo-tree-id35371 . -1) (#("r" 0 1 (fontified t)) . -72836) (undo-tree-id35372 . -1) (undo-tree-id35373 . -1) (undo-tree-id35374 . -1) (undo-tree-id35375 . -1) (undo-tree-id35376 . -1) (undo-tree-id35377 . -1) (undo-tree-id35378 . -1) (undo-tree-id35379 . -1) (undo-tree-id35380 . -1) (undo-tree-id35381 . -1) (undo-tree-id35382 . -1) (undo-tree-id35383 . -1) (undo-tree-id35384 . -1) (undo-tree-id35385 . -1) (undo-tree-id35386 . -1) (undo-tree-id35387 . -1) (undo-tree-id35388 . -1) (undo-tree-id35389 . -1) (undo-tree-id35390 . -1) (undo-tree-id35391 . -1) (undo-tree-id35392 . -1) (undo-tree-id35393 . -1) (undo-tree-id35394 . -1) (undo-tree-id35395 . -1) (undo-tree-id35396 . -1) (undo-tree-id35397 . -1) (undo-tree-id35398 . -1) (undo-tree-id35399 . -1) (undo-tree-id35400 . -1) (undo-tree-id35401 . -1) (undo-tree-id35402 . -1) (undo-tree-id35403 . -1) (undo-tree-id35404 . -1) (undo-tree-id35405 . -1) (undo-tree-id35406 . -1) (undo-tree-id35407 . -1) (undo-tree-id35408 . -1) (undo-tree-id35409 . -1) (undo-tree-id35410 . -1) (undo-tree-id35411 . -1) (undo-tree-id35412 . -1) (undo-tree-id35413 . -1) (undo-tree-id35414 . -1) (undo-tree-id35415 . -1) (undo-tree-id35416 . -1) (undo-tree-id35417 . -1) (undo-tree-id35418 . -1) (undo-tree-id35419 . -1) (undo-tree-id35420 . -1) (undo-tree-id35421 . -1) (undo-tree-id35422 . -1) (undo-tree-id35423 . -1) (undo-tree-id35424 . -1) (undo-tree-id35425 . -1) (undo-tree-id35426 . -1) (undo-tree-id35427 . -1) (undo-tree-id35428 . -1) (undo-tree-id35429 . -1) (undo-tree-id35430 . -1) (undo-tree-id35431 . -1) (undo-tree-id35432 . -1) (undo-tree-id35433 . -1) (undo-tree-id35434 . -1) (undo-tree-id35435 . -1) (undo-tree-id35436 . -1) (undo-tree-id35437 . -1) (undo-tree-id35438 . -1) (undo-tree-id35439 . -1) (undo-tree-id35440 . -1) (undo-tree-id35441 . -1) (undo-tree-id35442 . -1) (undo-tree-id35443 . -1) (undo-tree-id35444 . -1) (undo-tree-id35445 . -1) (undo-tree-id35446 . -1) (undo-tree-id35447 . -1) (undo-tree-id35448 . -1) (undo-tree-id35449 . -1) (undo-tree-id35450 . -1) (undo-tree-id35451 . -1) (undo-tree-id35452 . -1) (undo-tree-id35453 . -1) (undo-tree-id35454 . -1) (undo-tree-id35455 . -1) (undo-tree-id35456 . -1) (undo-tree-id35457 . -1) (undo-tree-id35458 . -1) (undo-tree-id35459 . -1) (undo-tree-id35460 . -1) (undo-tree-id35461 . -1) (undo-tree-id35462 . -1) (undo-tree-id35463 . -1) (undo-tree-id35464 . -1) (undo-tree-id35465 . -1) (undo-tree-id35466 . -1) (undo-tree-id35467 . -1) (undo-tree-id35468 . -1) (undo-tree-id35469 . -1) (undo-tree-id35470 . -1) (undo-tree-id35471 . -1) (undo-tree-id35472 . -1) (undo-tree-id35473 . -1) (undo-tree-id35474 . -1) (undo-tree-id35475 . -1) (undo-tree-id35476 . -1) (undo-tree-id35477 . -1) (undo-tree-id35478 . -1) (undo-tree-id35479 . -1) (undo-tree-id35480 . -1) (undo-tree-id35481 . -1) (undo-tree-id35482 . -1) (undo-tree-id35483 . -1) (undo-tree-id35484 . -1) (undo-tree-id35485 . -1) (undo-tree-id35486 . -1) (undo-tree-id35487 . -1) (undo-tree-id35488 . -1) (undo-tree-id35489 . -1) (undo-tree-id35490 . -1) (undo-tree-id35491 . -1) (undo-tree-id35492 . -1) (undo-tree-id35493 . -1) (undo-tree-id35494 . -1) (undo-tree-id35495 . -1) (undo-tree-id35496 . -1) (undo-tree-id35497 . -1) (undo-tree-id35498 . -1) (undo-tree-id35499 . -1) (undo-tree-id35500 . -1) (undo-tree-id35501 . -1) (undo-tree-id35502 . -1) (undo-tree-id35503 . -1) (undo-tree-id35504 . -1) (undo-tree-id35505 . -1) (undo-tree-id35506 . -1) (undo-tree-id35507 . -1) (undo-tree-id35508 . -1) (undo-tree-id35509 . -1) (undo-tree-id35510 . -1) (undo-tree-id35511 . -1) (undo-tree-id35512 . -1) (undo-tree-id35513 . -1) (undo-tree-id35514 . -1) (undo-tree-id35515 . -1) (undo-tree-id35516 . -1) (undo-tree-id35517 . -1) (undo-tree-id35518 . -1) (undo-tree-id35519 . -1) (undo-tree-id35520 . -1) (undo-tree-id35521 . -1) (undo-tree-id35522 . -1) (undo-tree-id35523 . -1) (undo-tree-id35524 . -1) (undo-tree-id35525 . -1) (undo-tree-id35526 . -1) (#(" " 0 1 (fontified t)) . -72837) (undo-tree-id35527 . -1) (undo-tree-id35528 . -1) (undo-tree-id35529 . -1) (undo-tree-id35530 . -1) (undo-tree-id35531 . -1) (undo-tree-id35532 . -1) (undo-tree-id35533 . -1) (undo-tree-id35534 . -1) (undo-tree-id35535 . -1) (undo-tree-id35536 . -1) (undo-tree-id35537 . -1) (undo-tree-id35538 . -1) (undo-tree-id35539 . -1) (undo-tree-id35540 . -1) (undo-tree-id35541 . -1) (undo-tree-id35542 . -1) (undo-tree-id35543 . -1) (undo-tree-id35544 . -1) (undo-tree-id35545 . -1) (undo-tree-id35546 . -1) (undo-tree-id35547 . -1) (undo-tree-id35548 . -1) (undo-tree-id35549 . -1) (undo-tree-id35550 . -1) (undo-tree-id35551 . -1) (undo-tree-id35552 . -1) (undo-tree-id35553 . -1) (undo-tree-id35554 . -1) (undo-tree-id35555 . -1) (undo-tree-id35556 . -1) (undo-tree-id35557 . -1) (undo-tree-id35558 . -1) (undo-tree-id35559 . -1) (undo-tree-id35560 . -1) (undo-tree-id35561 . -1) (undo-tree-id35562 . -1) (undo-tree-id35563 . -1) (undo-tree-id35564 . -1) (undo-tree-id35565 . -1) (undo-tree-id35566 . -1) (undo-tree-id35567 . -1) (undo-tree-id35568 . -1) (undo-tree-id35569 . -1) (undo-tree-id35570 . -1) (undo-tree-id35571 . -1) (undo-tree-id35572 . -1) (undo-tree-id35573 . -1) (undo-tree-id35574 . -1) (undo-tree-id35575 . -1) (undo-tree-id35576 . -1) (undo-tree-id35577 . -1) (undo-tree-id35578 . -1) (undo-tree-id35579 . -1) (undo-tree-id35580 . -1) (undo-tree-id35581 . -1) (undo-tree-id35582 . -1) (undo-tree-id35583 . -1) (undo-tree-id35584 . -1) (undo-tree-id35585 . -1) (undo-tree-id35586 . -1) (undo-tree-id35587 . -1) (undo-tree-id35588 . -1) (undo-tree-id35589 . -1) (undo-tree-id35590 . -1) (undo-tree-id35591 . -1) (undo-tree-id35592 . -1) (undo-tree-id35593 . -1) (undo-tree-id35594 . -1) (undo-tree-id35595 . -1) (undo-tree-id35596 . -1) (undo-tree-id35597 . -1) (undo-tree-id35598 . -1) (undo-tree-id35599 . -1) (undo-tree-id35600 . -1) (undo-tree-id35601 . -1) (undo-tree-id35602 . -1) (undo-tree-id35603 . -1) (undo-tree-id35604 . -1) (undo-tree-id35605 . -1) (undo-tree-id35606 . -1) (undo-tree-id35607 . -1) (undo-tree-id35608 . -1) (undo-tree-id35609 . -1) (undo-tree-id35610 . -1) (undo-tree-id35611 . -1) (undo-tree-id35612 . -1) (undo-tree-id35613 . -1) (undo-tree-id35614 . -1) (undo-tree-id35615 . -1) (undo-tree-id35616 . -1) (undo-tree-id35617 . -1) (undo-tree-id35618 . -1) (undo-tree-id35619 . -1) (undo-tree-id35620 . -1) (undo-tree-id35621 . -1) (undo-tree-id35622 . -1) (undo-tree-id35623 . -1) (undo-tree-id35624 . -1) (undo-tree-id35625 . -1) (undo-tree-id35626 . -1) (undo-tree-id35627 . -1) (undo-tree-id35628 . -1) (undo-tree-id35629 . -1) (undo-tree-id35630 . -1) (undo-tree-id35631 . -1) (undo-tree-id35632 . -1) (undo-tree-id35633 . -1) (undo-tree-id35634 . -1) (undo-tree-id35635 . -1) (undo-tree-id35636 . -1) (undo-tree-id35637 . -1) (undo-tree-id35638 . -1) (undo-tree-id35639 . -1) (undo-tree-id35640 . -1) (undo-tree-id35641 . -1) (undo-tree-id35642 . -1) (undo-tree-id35643 . -1) (undo-tree-id35644 . -1) (undo-tree-id35645 . -1) (undo-tree-id35646 . -1) (undo-tree-id35647 . -1) (undo-tree-id35648 . -1) (undo-tree-id35649 . -1) (undo-tree-id35650 . -1) (undo-tree-id35651 . -1) (undo-tree-id35652 . -1) (undo-tree-id35653 . -1) (undo-tree-id35654 . -1) (undo-tree-id35655 . -1) (undo-tree-id35656 . -1) (undo-tree-id35657 . -1) (undo-tree-id35658 . -1) (undo-tree-id35659 . -1) (undo-tree-id35660 . -1) (undo-tree-id35661 . -1) (undo-tree-id35662 . -1) (undo-tree-id35663 . -1) (undo-tree-id35664 . -1) (undo-tree-id35665 . -1) (undo-tree-id35666 . -1) (undo-tree-id35667 . -1) (undo-tree-id35668 . -1) (undo-tree-id35669 . -1) (undo-tree-id35670 . -1) (undo-tree-id35671 . -1) (undo-tree-id35672 . -1) (undo-tree-id35673 . -1) (#("e" 0 1 (fontified t)) . -72838) (undo-tree-id35674 . -1) (undo-tree-id35675 . -1) (undo-tree-id35676 . -1) (undo-tree-id35677 . -1) (undo-tree-id35678 . -1) (undo-tree-id35679 . -1) (undo-tree-id35680 . -1) (undo-tree-id35681 . -1) (undo-tree-id35682 . -1) (undo-tree-id35683 . -1) (undo-tree-id35684 . -1) (undo-tree-id35685 . -1) (undo-tree-id35686 . -1) (undo-tree-id35687 . -1) (undo-tree-id35688 . -1) (undo-tree-id35689 . -1) (undo-tree-id35690 . -1) (undo-tree-id35691 . -1) (undo-tree-id35692 . -1) (undo-tree-id35693 . -1) (undo-tree-id35694 . -1) (undo-tree-id35695 . -1) (undo-tree-id35696 . -1) (undo-tree-id35697 . -1) (undo-tree-id35698 . -1) (undo-tree-id35699 . -1) (undo-tree-id35700 . -1) (undo-tree-id35701 . -1) (undo-tree-id35702 . -1) (undo-tree-id35703 . -1) (undo-tree-id35704 . -1) (undo-tree-id35705 . -1) (undo-tree-id35706 . -1) (undo-tree-id35707 . -1) (undo-tree-id35708 . -1) (undo-tree-id35709 . -1) (undo-tree-id35710 . -1) (undo-tree-id35711 . -1) (undo-tree-id35712 . -1) (undo-tree-id35713 . -1) (undo-tree-id35714 . -1) (undo-tree-id35715 . -1) (undo-tree-id35716 . -1) (undo-tree-id35717 . -1) (undo-tree-id35718 . -1) (undo-tree-id35719 . -1) (undo-tree-id35720 . -1) (undo-tree-id35721 . -1) (undo-tree-id35722 . -1) (undo-tree-id35723 . -1) (undo-tree-id35724 . -1) (undo-tree-id35725 . -1) (undo-tree-id35726 . -1) (undo-tree-id35727 . -1) (undo-tree-id35728 . -1) (undo-tree-id35729 . -1) (undo-tree-id35730 . -1) (undo-tree-id35731 . -1) (undo-tree-id35732 . -1) (undo-tree-id35733 . -1) (undo-tree-id35734 . -1) (undo-tree-id35735 . -1) (undo-tree-id35736 . -1) (undo-tree-id35737 . -1) (undo-tree-id35738 . -1) (undo-tree-id35739 . -1) (undo-tree-id35740 . -1) (undo-tree-id35741 . -1) (undo-tree-id35742 . -1) (undo-tree-id35743 . -1) (undo-tree-id35744 . -1) (undo-tree-id35745 . -1) (undo-tree-id35746 . -1) (undo-tree-id35747 . -1) (undo-tree-id35748 . -1) (undo-tree-id35749 . -1) (undo-tree-id35750 . -1) (undo-tree-id35751 . -1) (undo-tree-id35752 . -1) (undo-tree-id35753 . -1) (undo-tree-id35754 . -1) (undo-tree-id35755 . -1) (undo-tree-id35756 . -1) (undo-tree-id35757 . -1) (undo-tree-id35758 . -1) (undo-tree-id35759 . -1) (undo-tree-id35760 . -1) (undo-tree-id35761 . -1) (undo-tree-id35762 . -1) (undo-tree-id35763 . -1) (undo-tree-id35764 . -1) (undo-tree-id35765 . -1) (undo-tree-id35766 . -1) (undo-tree-id35767 . -1) (undo-tree-id35768 . -1) (undo-tree-id35769 . -1) (undo-tree-id35770 . -1) (undo-tree-id35771 . -1) (undo-tree-id35772 . -1) (undo-tree-id35773 . -1) (undo-tree-id35774 . -1) (undo-tree-id35775 . -1) (undo-tree-id35776 . -1) (undo-tree-id35777 . -1) (undo-tree-id35778 . -1) (undo-tree-id35779 . -1) (undo-tree-id35780 . -1) (undo-tree-id35781 . -1) (undo-tree-id35782 . -1) (undo-tree-id35783 . -1) (undo-tree-id35784 . -1) (undo-tree-id35785 . -1) (undo-tree-id35786 . -1) (undo-tree-id35787 . -1) (undo-tree-id35788 . -1) (undo-tree-id35789 . -1) (undo-tree-id35790 . -1) (undo-tree-id35791 . -1) (undo-tree-id35792 . -1) (undo-tree-id35793 . -1) (undo-tree-id35794 . -1) (undo-tree-id35795 . -1) (undo-tree-id35796 . -1) (undo-tree-id35797 . -1) (undo-tree-id35798 . -1) (undo-tree-id35799 . -1) (undo-tree-id35800 . -1) (undo-tree-id35801 . -1) (undo-tree-id35802 . -1) (undo-tree-id35803 . -1) (undo-tree-id35804 . -1) (undo-tree-id35805 . -1) (undo-tree-id35806 . -1) (undo-tree-id35807 . -1) (undo-tree-id35808 . -1) (undo-tree-id35809 . -1) (undo-tree-id35810 . -1) (undo-tree-id35811 . -1) (undo-tree-id35812 . -1) (#("v" 0 1 (fontified t)) . -72839) (undo-tree-id35813 . -1) (undo-tree-id35814 . -1) (undo-tree-id35815 . -1) (undo-tree-id35816 . -1) (undo-tree-id35817 . -1) (undo-tree-id35818 . -1) (undo-tree-id35819 . -1) (undo-tree-id35820 . -1) (undo-tree-id35821 . -1) (undo-tree-id35822 . -1) (undo-tree-id35823 . -1) (undo-tree-id35824 . -1) (undo-tree-id35825 . -1) (undo-tree-id35826 . -1) (undo-tree-id35827 . -1) (undo-tree-id35828 . -1) (undo-tree-id35829 . -1) (undo-tree-id35830 . -1) (undo-tree-id35831 . -1) (undo-tree-id35832 . -1) (undo-tree-id35833 . -1) (undo-tree-id35834 . -1) (undo-tree-id35835 . -1) (undo-tree-id35836 . -1) (undo-tree-id35837 . -1) (undo-tree-id35838 . -1) (undo-tree-id35839 . -1) (undo-tree-id35840 . -1) (undo-tree-id35841 . -1) (undo-tree-id35842 . -1) (undo-tree-id35843 . -1) (undo-tree-id35844 . -1) (undo-tree-id35845 . -1) (undo-tree-id35846 . -1) (undo-tree-id35847 . -1) (undo-tree-id35848 . -1) (undo-tree-id35849 . -1) (undo-tree-id35850 . -1) (undo-tree-id35851 . -1) (undo-tree-id35852 . -1) (undo-tree-id35853 . -1) (undo-tree-id35854 . -1) (undo-tree-id35855 . -1) (undo-tree-id35856 . -1) (undo-tree-id35857 . -1) (undo-tree-id35858 . -1) (undo-tree-id35859 . -1) (undo-tree-id35860 . -1) (undo-tree-id35861 . -1) (undo-tree-id35862 . -1) (undo-tree-id35863 . -1) (undo-tree-id35864 . -1) (undo-tree-id35865 . -1) (undo-tree-id35866 . -1) (undo-tree-id35867 . -1) (undo-tree-id35868 . -1) (undo-tree-id35869 . -1) (undo-tree-id35870 . -1) (undo-tree-id35871 . -1) (undo-tree-id35872 . -1) (undo-tree-id35873 . -1) (undo-tree-id35874 . -1) (undo-tree-id35875 . -1) (undo-tree-id35876 . -1) (undo-tree-id35877 . -1) (undo-tree-id35878 . -1) (undo-tree-id35879 . -1) (undo-tree-id35880 . -1) (undo-tree-id35881 . -1) (undo-tree-id35882 . -1) (undo-tree-id35883 . -1) (undo-tree-id35884 . -1) (undo-tree-id35885 . -1) (undo-tree-id35886 . -1) (undo-tree-id35887 . -1) (undo-tree-id35888 . -1) (undo-tree-id35889 . -1) (undo-tree-id35890 . -1) (undo-tree-id35891 . -1) (undo-tree-id35892 . -1) (undo-tree-id35893 . -1) (undo-tree-id35894 . -1) (undo-tree-id35895 . -1) (undo-tree-id35896 . -1) (undo-tree-id35897 . -1) (undo-tree-id35898 . -1) (undo-tree-id35899 . -1) (undo-tree-id35900 . -1) (undo-tree-id35901 . -1) (undo-tree-id35902 . -1) (undo-tree-id35903 . -1) (undo-tree-id35904 . -1) (undo-tree-id35905 . -1) (undo-tree-id35906 . -1) (undo-tree-id35907 . -1) (undo-tree-id35908 . -1) (undo-tree-id35909 . -1) (undo-tree-id35910 . -1) (undo-tree-id35911 . -1) (undo-tree-id35912 . -1) (undo-tree-id35913 . -1) (undo-tree-id35914 . -1) (undo-tree-id35915 . -1) (undo-tree-id35916 . -1) (undo-tree-id35917 . -1) (undo-tree-id35918 . -1) (undo-tree-id35919 . -1) (undo-tree-id35920 . -1) (undo-tree-id35921 . -1) (undo-tree-id35922 . -1) (undo-tree-id35923 . -1) (undo-tree-id35924 . -1) (undo-tree-id35925 . -1) (undo-tree-id35926 . -1) (undo-tree-id35927 . -1) (undo-tree-id35928 . -1) (undo-tree-id35929 . -1) (undo-tree-id35930 . -1) (undo-tree-id35931 . -1) (undo-tree-id35932 . -1) (undo-tree-id35933 . -1) (undo-tree-id35934 . -1) (undo-tree-id35935 . -1) (undo-tree-id35936 . -1) (undo-tree-id35937 . -1) (undo-tree-id35938 . -1) (undo-tree-id35939 . -1) (undo-tree-id35940 . -1) (undo-tree-id35941 . -1) (undo-tree-id35942 . -1) (undo-tree-id35943 . -1) (#("e" 0 1 (fontified t)) . -72840) (undo-tree-id35944 . -1) (undo-tree-id35945 . -1) (undo-tree-id35946 . -1) (undo-tree-id35947 . -1) (undo-tree-id35948 . -1) (undo-tree-id35949 . -1) (undo-tree-id35950 . -1) (undo-tree-id35951 . -1) (undo-tree-id35952 . -1) (undo-tree-id35953 . -1) (undo-tree-id35954 . -1) (undo-tree-id35955 . -1) (undo-tree-id35956 . -1) (undo-tree-id35957 . -1) (undo-tree-id35958 . -1) (undo-tree-id35959 . -1) (undo-tree-id35960 . -1) (undo-tree-id35961 . -1) (undo-tree-id35962 . -1) (undo-tree-id35963 . -1) (undo-tree-id35964 . -1) (undo-tree-id35965 . -1) (undo-tree-id35966 . -1) (undo-tree-id35967 . -1) (undo-tree-id35968 . -1) (undo-tree-id35969 . -1) (undo-tree-id35970 . -1) (undo-tree-id35971 . -1) (undo-tree-id35972 . -1) (undo-tree-id35973 . -1) (undo-tree-id35974 . -1) (undo-tree-id35975 . -1) (undo-tree-id35976 . -1) (undo-tree-id35977 . -1) (undo-tree-id35978 . -1) (undo-tree-id35979 . -1) (undo-tree-id35980 . -1) (undo-tree-id35981 . -1) (undo-tree-id35982 . -1) (undo-tree-id35983 . -1) (undo-tree-id35984 . -1) (undo-tree-id35985 . -1) (undo-tree-id35986 . -1) (undo-tree-id35987 . -1) (undo-tree-id35988 . -1) (undo-tree-id35989 . -1) (undo-tree-id35990 . -1) (undo-tree-id35991 . -1) (undo-tree-id35992 . -1) (undo-tree-id35993 . -1) (undo-tree-id35994 . -1) (undo-tree-id35995 . -1) (undo-tree-id35996 . -1) (undo-tree-id35997 . -1) (undo-tree-id35998 . -1) (undo-tree-id35999 . -1) (undo-tree-id36000 . -1) (undo-tree-id36001 . -1) (undo-tree-id36002 . -1) (undo-tree-id36003 . -1) (undo-tree-id36004 . -1) (undo-tree-id36005 . -1) (undo-tree-id36006 . -1) (undo-tree-id36007 . -1) (undo-tree-id36008 . -1) (undo-tree-id36009 . -1) (undo-tree-id36010 . -1) (undo-tree-id36011 . -1) (undo-tree-id36012 . -1) (undo-tree-id36013 . -1) (undo-tree-id36014 . -1) (undo-tree-id36015 . -1) (undo-tree-id36016 . -1) (undo-tree-id36017 . -1) (undo-tree-id36018 . -1) (undo-tree-id36019 . -1) (undo-tree-id36020 . -1) (undo-tree-id36021 . -1) (undo-tree-id36022 . -1) (undo-tree-id36023 . -1) (undo-tree-id36024 . -1) (undo-tree-id36025 . -1) (undo-tree-id36026 . -1) (undo-tree-id36027 . -1) (undo-tree-id36028 . -1) (undo-tree-id36029 . -1) (undo-tree-id36030 . -1) (undo-tree-id36031 . -1) (undo-tree-id36032 . -1) (undo-tree-id36033 . -1) (undo-tree-id36034 . -1) (undo-tree-id36035 . -1) (undo-tree-id36036 . -1) (undo-tree-id36037 . -1) (undo-tree-id36038 . -1) (undo-tree-id36039 . -1) (undo-tree-id36040 . -1) (undo-tree-id36041 . -1) (undo-tree-id36042 . -1) (undo-tree-id36043 . -1) (undo-tree-id36044 . -1) (undo-tree-id36045 . -1) (undo-tree-id36046 . -1) (undo-tree-id36047 . -1) (undo-tree-id36048 . -1) (undo-tree-id36049 . -1) (undo-tree-id36050 . -1) (undo-tree-id36051 . -1) (undo-tree-id36052 . -1) (undo-tree-id36053 . -1) (undo-tree-id36054 . -1) (undo-tree-id36055 . -1) (undo-tree-id36056 . -1) (undo-tree-id36057 . -1) (undo-tree-id36058 . -1) (undo-tree-id36059 . -1) (undo-tree-id36060 . -1) (undo-tree-id36061 . -1) (undo-tree-id36062 . -1) (undo-tree-id36063 . -1) (undo-tree-id36064 . -1) (undo-tree-id36065 . -1) (undo-tree-id36066 . -1) (#("y" 0 1 (fontified t)) . -72841) (undo-tree-id36067 . -1) (undo-tree-id36068 . -1) (undo-tree-id36069 . -1) (undo-tree-id36070 . -1) (undo-tree-id36071 . -1) (undo-tree-id36072 . -1) (undo-tree-id36073 . -1) (undo-tree-id36074 . -1) (undo-tree-id36075 . -1) (undo-tree-id36076 . -1) (undo-tree-id36077 . -1) (undo-tree-id36078 . -1) (undo-tree-id36079 . -1) (undo-tree-id36080 . -1) (undo-tree-id36081 . -1) (undo-tree-id36082 . -1) (undo-tree-id36083 . -1) (undo-tree-id36084 . -1) (undo-tree-id36085 . -1) (undo-tree-id36086 . -1) (undo-tree-id36087 . -1) (undo-tree-id36088 . -1) (undo-tree-id36089 . -1) (undo-tree-id36090 . -1) (undo-tree-id36091 . -1) (undo-tree-id36092 . -1) (undo-tree-id36093 . -1) (undo-tree-id36094 . -1) (undo-tree-id36095 . -1) (undo-tree-id36096 . -1) (undo-tree-id36097 . -1) (undo-tree-id36098 . -1) (undo-tree-id36099 . -1) (undo-tree-id36100 . -1) (undo-tree-id36101 . -1) (undo-tree-id36102 . -1) (undo-tree-id36103 . -1) (undo-tree-id36104 . -1) (undo-tree-id36105 . -1) (undo-tree-id36106 . -1) (undo-tree-id36107 . -1) (undo-tree-id36108 . -1) (undo-tree-id36109 . -1) (undo-tree-id36110 . -1) (undo-tree-id36111 . -1) (undo-tree-id36112 . -1) (undo-tree-id36113 . -1) (undo-tree-id36114 . -1) (undo-tree-id36115 . -1) (undo-tree-id36116 . -1) (undo-tree-id36117 . -1) (undo-tree-id36118 . -1) (undo-tree-id36119 . -1) (undo-tree-id36120 . -1) (undo-tree-id36121 . -1) (undo-tree-id36122 . -1) (undo-tree-id36123 . -1) (undo-tree-id36124 . -1) (undo-tree-id36125 . -1) (undo-tree-id36126 . -1) (undo-tree-id36127 . -1) (undo-tree-id36128 . -1) (undo-tree-id36129 . -1) (undo-tree-id36130 . -1) (undo-tree-id36131 . -1) (undo-tree-id36132 . -1) (undo-tree-id36133 . -1) (undo-tree-id36134 . -1) (undo-tree-id36135 . -1) (undo-tree-id36136 . -1) (undo-tree-id36137 . -1) (undo-tree-id36138 . -1) (undo-tree-id36139 . -1) (undo-tree-id36140 . -1) (undo-tree-id36141 . -1) (undo-tree-id36142 . -1) (undo-tree-id36143 . -1) (undo-tree-id36144 . -1) (undo-tree-id36145 . -1) (undo-tree-id36146 . -1) (undo-tree-id36147 . -1) (undo-tree-id36148 . -1) (undo-tree-id36149 . -1) (undo-tree-id36150 . -1) (undo-tree-id36151 . -1) (undo-tree-id36152 . -1) (undo-tree-id36153 . -1) (undo-tree-id36154 . -1) (undo-tree-id36155 . -1) (undo-tree-id36156 . -1) (undo-tree-id36157 . -1) (undo-tree-id36158 . -1) (undo-tree-id36159 . -1) (undo-tree-id36160 . -1) (undo-tree-id36161 . -1) (undo-tree-id36162 . -1) (undo-tree-id36163 . -1) (undo-tree-id36164 . -1) (undo-tree-id36165 . -1) (undo-tree-id36166 . -1) (undo-tree-id36167 . -1) (undo-tree-id36168 . -1) (undo-tree-id36169 . -1) (undo-tree-id36170 . -1) (undo-tree-id36171 . -1) (undo-tree-id36172 . -1) (undo-tree-id36173 . -1) (undo-tree-id36174 . -1) (undo-tree-id36175 . -1) (undo-tree-id36176 . -1) (undo-tree-id36177 . -1) (undo-tree-id36178 . -1) (undo-tree-id36179 . -1) (undo-tree-id36180 . -1) (undo-tree-id36181 . -1) (#("t" 0 1 (fontified t)) . -72842) (undo-tree-id36182 . -1) (undo-tree-id36183 . -1) (undo-tree-id36184 . -1) (undo-tree-id36185 . -1) (undo-tree-id36186 . -1) (undo-tree-id36187 . -1) (undo-tree-id36188 . -1) (undo-tree-id36189 . -1) (undo-tree-id36190 . -1) (undo-tree-id36191 . -1) (undo-tree-id36192 . -1) (undo-tree-id36193 . -1) (undo-tree-id36194 . -1) (undo-tree-id36195 . -1) (undo-tree-id36196 . -1) (undo-tree-id36197 . -1) (undo-tree-id36198 . -1) (undo-tree-id36199 . -1) (undo-tree-id36200 . -1) (undo-tree-id36201 . -1) (undo-tree-id36202 . -1) (undo-tree-id36203 . -1) (undo-tree-id36204 . -1) (undo-tree-id36205 . -1) (undo-tree-id36206 . -1) (undo-tree-id36207 . -1) (undo-tree-id36208 . -1) (undo-tree-id36209 . -1) (undo-tree-id36210 . -1) (undo-tree-id36211 . -1) (undo-tree-id36212 . -1) (undo-tree-id36213 . -1) (undo-tree-id36214 . -1) (undo-tree-id36215 . -1) (undo-tree-id36216 . -1) (undo-tree-id36217 . -1) (undo-tree-id36218 . -1) (undo-tree-id36219 . -1) (undo-tree-id36220 . -1) (undo-tree-id36221 . -1) (undo-tree-id36222 . -1) (undo-tree-id36223 . -1) (undo-tree-id36224 . -1) (undo-tree-id36225 . -1) (undo-tree-id36226 . -1) (undo-tree-id36227 . -1) (undo-tree-id36228 . -1) (undo-tree-id36229 . -1) (undo-tree-id36230 . -1) (undo-tree-id36231 . -1) (undo-tree-id36232 . -1) (undo-tree-id36233 . -1) (undo-tree-id36234 . -1) (undo-tree-id36235 . -1) (undo-tree-id36236 . -1) (undo-tree-id36237 . -1) (undo-tree-id36238 . -1) (undo-tree-id36239 . -1) (undo-tree-id36240 . -1) (undo-tree-id36241 . -1) (undo-tree-id36242 . -1) (undo-tree-id36243 . -1) (undo-tree-id36244 . -1) (undo-tree-id36245 . -1) (undo-tree-id36246 . -1) (undo-tree-id36247 . -1) (undo-tree-id36248 . -1) (undo-tree-id36249 . -1) (undo-tree-id36250 . -1) (undo-tree-id36251 . -1) (undo-tree-id36252 . -1) (undo-tree-id36253 . -1) (undo-tree-id36254 . -1) (undo-tree-id36255 . -1) (undo-tree-id36256 . -1) (undo-tree-id36257 . -1) (undo-tree-id36258 . -1) (undo-tree-id36259 . -1) (undo-tree-id36260 . -1) (undo-tree-id36261 . -1) (undo-tree-id36262 . -1) (undo-tree-id36263 . -1) (undo-tree-id36264 . -1) (undo-tree-id36265 . -1) (undo-tree-id36266 . -1) (undo-tree-id36267 . -1) (undo-tree-id36268 . -1) (undo-tree-id36269 . -1) (undo-tree-id36270 . -1) (undo-tree-id36271 . -1) (undo-tree-id36272 . -1) (undo-tree-id36273 . -1) (undo-tree-id36274 . -1) (undo-tree-id36275 . -1) (undo-tree-id36276 . -1) (undo-tree-id36277 . -1) (undo-tree-id36278 . -1) (undo-tree-id36279 . -1) (undo-tree-id36280 . -1) (undo-tree-id36281 . -1) (undo-tree-id36282 . -1) (undo-tree-id36283 . -1) (undo-tree-id36284 . -1) (undo-tree-id36285 . -1) (undo-tree-id36286 . -1) (undo-tree-id36287 . -1) (undo-tree-id36288 . -1) (#("h" 0 1 (fontified t)) . -72843) (undo-tree-id36289 . -1) (undo-tree-id36290 . -1) (undo-tree-id36291 . -1) (undo-tree-id36292 . -1) (undo-tree-id36293 . -1) (undo-tree-id36294 . -1) (undo-tree-id36295 . -1) (undo-tree-id36296 . -1) (undo-tree-id36297 . -1) (undo-tree-id36298 . -1) (undo-tree-id36299 . -1) (undo-tree-id36300 . -1) (undo-tree-id36301 . -1) (undo-tree-id36302 . -1) (undo-tree-id36303 . -1) (undo-tree-id36304 . -1) (undo-tree-id36305 . -1) (undo-tree-id36306 . -1) (undo-tree-id36307 . -1) (undo-tree-id36308 . -1) (undo-tree-id36309 . -1) (undo-tree-id36310 . -1) (undo-tree-id36311 . -1) (undo-tree-id36312 . -1) (undo-tree-id36313 . -1) (undo-tree-id36314 . -1) (undo-tree-id36315 . -1) (undo-tree-id36316 . -1) (undo-tree-id36317 . -1) (undo-tree-id36318 . -1) (undo-tree-id36319 . -1) (undo-tree-id36320 . -1) (undo-tree-id36321 . -1) (undo-tree-id36322 . -1) (undo-tree-id36323 . -1) (undo-tree-id36324 . -1) (undo-tree-id36325 . -1) (undo-tree-id36326 . -1) (undo-tree-id36327 . -1) (undo-tree-id36328 . -1) (undo-tree-id36329 . -1) (undo-tree-id36330 . -1) (undo-tree-id36331 . -1) (undo-tree-id36332 . -1) (undo-tree-id36333 . -1) (undo-tree-id36334 . -1) (undo-tree-id36335 . -1) (undo-tree-id36336 . -1) (undo-tree-id36337 . -1) (undo-tree-id36338 . -1) (undo-tree-id36339 . -1) (undo-tree-id36340 . -1) (undo-tree-id36341 . -1) (undo-tree-id36342 . -1) (undo-tree-id36343 . -1) (undo-tree-id36344 . -1) (undo-tree-id36345 . -1) (undo-tree-id36346 . -1) (undo-tree-id36347 . -1) (undo-tree-id36348 . -1) (undo-tree-id36349 . -1) (undo-tree-id36350 . -1) (undo-tree-id36351 . -1) (undo-tree-id36352 . -1) (undo-tree-id36353 . -1) (undo-tree-id36354 . -1) (undo-tree-id36355 . -1) (undo-tree-id36356 . -1) (undo-tree-id36357 . -1) (undo-tree-id36358 . -1) (undo-tree-id36359 . -1) (undo-tree-id36360 . -1) (undo-tree-id36361 . -1) (undo-tree-id36362 . -1) (undo-tree-id36363 . -1) (undo-tree-id36364 . -1) (undo-tree-id36365 . -1) (undo-tree-id36366 . -1) (undo-tree-id36367 . -1) (undo-tree-id36368 . -1) (undo-tree-id36369 . -1) (undo-tree-id36370 . -1) (undo-tree-id36371 . -1) (undo-tree-id36372 . -1) (undo-tree-id36373 . -1) (undo-tree-id36374 . -1) (undo-tree-id36375 . -1) (undo-tree-id36376 . -1) (undo-tree-id36377 . -1) (undo-tree-id36378 . -1) (undo-tree-id36379 . -1) (undo-tree-id36380 . -1) (undo-tree-id36381 . -1) (undo-tree-id36382 . -1) (undo-tree-id36383 . -1) (undo-tree-id36384 . -1) (undo-tree-id36385 . -1) (undo-tree-id36386 . -1) (undo-tree-id36387 . -1) (#("i" 0 1 (fontified t)) . -72844) (undo-tree-id36388 . -1) (undo-tree-id36389 . -1) (undo-tree-id36390 . -1) (undo-tree-id36391 . -1) (undo-tree-id36392 . -1) (undo-tree-id36393 . -1) (undo-tree-id36394 . -1) (undo-tree-id36395 . -1) (undo-tree-id36396 . -1) (undo-tree-id36397 . -1) (undo-tree-id36398 . -1) (undo-tree-id36399 . -1) (undo-tree-id36400 . -1) (undo-tree-id36401 . -1) (undo-tree-id36402 . -1) (undo-tree-id36403 . -1) (undo-tree-id36404 . -1) (undo-tree-id36405 . -1) (undo-tree-id36406 . -1) (undo-tree-id36407 . -1) (undo-tree-id36408 . -1) (undo-tree-id36409 . -1) (undo-tree-id36410 . -1) (undo-tree-id36411 . -1) (undo-tree-id36412 . -1) (undo-tree-id36413 . -1) (undo-tree-id36414 . -1) (undo-tree-id36415 . -1) (undo-tree-id36416 . -1) (undo-tree-id36417 . -1) (undo-tree-id36418 . -1) (undo-tree-id36419 . -1) (undo-tree-id36420 . -1) (undo-tree-id36421 . -1) (undo-tree-id36422 . -1) (undo-tree-id36423 . -1) (undo-tree-id36424 . -1) (undo-tree-id36425 . -1) (undo-tree-id36426 . -1) (undo-tree-id36427 . -1) (undo-tree-id36428 . -1) (undo-tree-id36429 . -1) (undo-tree-id36430 . -1) (undo-tree-id36431 . -1) (undo-tree-id36432 . -1) (undo-tree-id36433 . -1) (undo-tree-id36434 . -1) (undo-tree-id36435 . -1) (undo-tree-id36436 . -1) (undo-tree-id36437 . -1) (undo-tree-id36438 . -1) (undo-tree-id36439 . -1) (undo-tree-id36440 . -1) (undo-tree-id36441 . -1) (undo-tree-id36442 . -1) (undo-tree-id36443 . -1) (undo-tree-id36444 . -1) (undo-tree-id36445 . -1) (undo-tree-id36446 . -1) (undo-tree-id36447 . -1) (undo-tree-id36448 . -1) (undo-tree-id36449 . -1) (undo-tree-id36450 . -1) (undo-tree-id36451 . -1) (undo-tree-id36452 . -1) (undo-tree-id36453 . -1) (undo-tree-id36454 . -1) (undo-tree-id36455 . -1) (undo-tree-id36456 . -1) (undo-tree-id36457 . -1) (undo-tree-id36458 . -1) (undo-tree-id36459 . -1) (undo-tree-id36460 . -1) (undo-tree-id36461 . -1) (undo-tree-id36462 . -1) (undo-tree-id36463 . -1) (undo-tree-id36464 . -1) (undo-tree-id36465 . -1) (undo-tree-id36466 . -1) (undo-tree-id36467 . -1) (undo-tree-id36468 . -1) (undo-tree-id36469 . -1) (undo-tree-id36470 . -1) (undo-tree-id36471 . -1) (undo-tree-id36472 . -1) (undo-tree-id36473 . -1) (undo-tree-id36474 . -1) (undo-tree-id36475 . -1) (undo-tree-id36476 . -1) (undo-tree-id36477 . -1) (undo-tree-id36478 . -1) (#("n" 0 1 (fontified t)) . -72845) (undo-tree-id36479 . -1) (undo-tree-id36480 . -1) (undo-tree-id36481 . -1) (undo-tree-id36482 . -1) (undo-tree-id36483 . -1) (undo-tree-id36484 . -1) (undo-tree-id36485 . -1) (undo-tree-id36486 . -1) (undo-tree-id36487 . -1) (undo-tree-id36488 . -1) (undo-tree-id36489 . -1) (undo-tree-id36490 . -1) (undo-tree-id36491 . -1) (undo-tree-id36492 . -1) (undo-tree-id36493 . -1) (undo-tree-id36494 . -1) (undo-tree-id36495 . -1) (undo-tree-id36496 . -1) (undo-tree-id36497 . -1) (undo-tree-id36498 . -1) (undo-tree-id36499 . -1) (undo-tree-id36500 . -1) (undo-tree-id36501 . -1) (undo-tree-id36502 . -1) (undo-tree-id36503 . -1) (undo-tree-id36504 . -1) (undo-tree-id36505 . -1) (undo-tree-id36506 . -1) (undo-tree-id36507 . -1) (undo-tree-id36508 . -1) (undo-tree-id36509 . -1) (undo-tree-id36510 . -1) (undo-tree-id36511 . -1) (undo-tree-id36512 . -1) (undo-tree-id36513 . -1) (undo-tree-id36514 . -1) (undo-tree-id36515 . -1) (undo-tree-id36516 . -1) (undo-tree-id36517 . -1) (undo-tree-id36518 . -1) (undo-tree-id36519 . -1) (undo-tree-id36520 . -1) (undo-tree-id36521 . -1) (undo-tree-id36522 . -1) (undo-tree-id36523 . -1) (undo-tree-id36524 . -1) (undo-tree-id36525 . -1) (undo-tree-id36526 . -1) (undo-tree-id36527 . -1) (undo-tree-id36528 . -1) (undo-tree-id36529 . -1) (undo-tree-id36530 . -1) (undo-tree-id36531 . -1) (undo-tree-id36532 . -1) (undo-tree-id36533 . -1) (undo-tree-id36534 . -1) (undo-tree-id36535 . -1) (undo-tree-id36536 . -1) (undo-tree-id36537 . -1) (undo-tree-id36538 . -1) (undo-tree-id36539 . -1) (undo-tree-id36540 . -1) (undo-tree-id36541 . -1) (undo-tree-id36542 . -1) (undo-tree-id36543 . -1) (undo-tree-id36544 . -1) (undo-tree-id36545 . -1) (undo-tree-id36546 . -1) (undo-tree-id36547 . -1) (undo-tree-id36548 . -1) (undo-tree-id36549 . -1) (undo-tree-id36550 . -1) (undo-tree-id36551 . -1) (undo-tree-id36552 . -1) (undo-tree-id36553 . -1) (undo-tree-id36554 . -1) (undo-tree-id36555 . -1) (undo-tree-id36556 . -1) (undo-tree-id36557 . -1) (undo-tree-id36558 . -1) (undo-tree-id36559 . -1) (undo-tree-id36560 . -1) (undo-tree-id36561 . -1) (#("g" 0 1 (fontified t)) . -72846) (undo-tree-id36562 . -1) (undo-tree-id36563 . -1) (undo-tree-id36564 . -1) (undo-tree-id36565 . -1) (undo-tree-id36566 . -1) (undo-tree-id36567 . -1) (undo-tree-id36568 . -1) (undo-tree-id36569 . -1) (undo-tree-id36570 . -1) (undo-tree-id36571 . -1) (undo-tree-id36572 . -1) (undo-tree-id36573 . -1) (undo-tree-id36574 . -1) (undo-tree-id36575 . -1) (undo-tree-id36576 . -1) (undo-tree-id36577 . -1) (undo-tree-id36578 . -1) (undo-tree-id36579 . -1) (undo-tree-id36580 . -1) (undo-tree-id36581 . -1) (undo-tree-id36582 . -1) (undo-tree-id36583 . -1) (undo-tree-id36584 . -1) (undo-tree-id36585 . -1) (undo-tree-id36586 . -1) (undo-tree-id36587 . -1) (undo-tree-id36588 . -1) (undo-tree-id36589 . -1) (undo-tree-id36590 . -1) (undo-tree-id36591 . -1) (undo-tree-id36592 . -1) (undo-tree-id36593 . -1) (undo-tree-id36594 . -1) (undo-tree-id36595 . -1) (undo-tree-id36596 . -1) (undo-tree-id36597 . -1) (undo-tree-id36598 . -1) (undo-tree-id36599 . -1) (undo-tree-id36600 . -1) (undo-tree-id36601 . -1) (undo-tree-id36602 . -1) (undo-tree-id36603 . -1) (undo-tree-id36604 . -1) (undo-tree-id36605 . -1) (undo-tree-id36606 . -1) (undo-tree-id36607 . -1) (undo-tree-id36608 . -1) (undo-tree-id36609 . -1) (undo-tree-id36610 . -1) (undo-tree-id36611 . -1) (undo-tree-id36612 . -1) (undo-tree-id36613 . -1) (undo-tree-id36614 . -1) (undo-tree-id36615 . -1) (undo-tree-id36616 . -1) (undo-tree-id36617 . -1) (undo-tree-id36618 . -1) (undo-tree-id36619 . -1) (undo-tree-id36620 . -1) (undo-tree-id36621 . -1) (undo-tree-id36622 . -1) (undo-tree-id36623 . -1) (undo-tree-id36624 . -1) (undo-tree-id36625 . -1) (undo-tree-id36626 . -1) (undo-tree-id36627 . -1) (undo-tree-id36628 . -1) (undo-tree-id36629 . -1) (undo-tree-id36630 . -1) (undo-tree-id36631 . -1) (undo-tree-id36632 . -1) (undo-tree-id36633 . -1) (undo-tree-id36634 . -1) (undo-tree-id36635 . -1) (undo-tree-id36636 . -1) (#(" " 0 1 (fontified t)) . -72847) (undo-tree-id36637 . -1) (undo-tree-id36638 . -1) (undo-tree-id36639 . -1) (undo-tree-id36640 . -1) (undo-tree-id36641 . -1) (undo-tree-id36642 . -1) (undo-tree-id36643 . -1) (undo-tree-id36644 . -1) (undo-tree-id36645 . -1) (undo-tree-id36646 . -1) (undo-tree-id36647 . -1) (undo-tree-id36648 . -1) (undo-tree-id36649 . -1) (undo-tree-id36650 . -1) (undo-tree-id36651 . -1) (undo-tree-id36652 . -1) (undo-tree-id36653 . -1) (undo-tree-id36654 . -1) (undo-tree-id36655 . -1) (undo-tree-id36656 . -1) (undo-tree-id36657 . -1) (undo-tree-id36658 . -1) (undo-tree-id36659 . -1) (undo-tree-id36660 . -1) (undo-tree-id36661 . -1) (undo-tree-id36662 . -1) (undo-tree-id36663 . -1) (undo-tree-id36664 . -1) (undo-tree-id36665 . -1) (undo-tree-id36666 . -1) (undo-tree-id36667 . -1) (undo-tree-id36668 . -1) (undo-tree-id36669 . -1) (undo-tree-id36670 . -1) (undo-tree-id36671 . -1) (undo-tree-id36672 . -1) (undo-tree-id36673 . -1) (undo-tree-id36674 . -1) (undo-tree-id36675 . -1) (undo-tree-id36676 . -1) (undo-tree-id36677 . -1) (undo-tree-id36678 . -1) (undo-tree-id36679 . -1) (undo-tree-id36680 . -1) (undo-tree-id36681 . -1) (undo-tree-id36682 . -1) (undo-tree-id36683 . -1) (undo-tree-id36684 . -1) (undo-tree-id36685 . -1) (undo-tree-id36686 . -1) (undo-tree-id36687 . -1) (undo-tree-id36688 . -1) (undo-tree-id36689 . -1) (undo-tree-id36690 . -1) (undo-tree-id36691 . -1) (undo-tree-id36692 . -1) (undo-tree-id36693 . -1) (undo-tree-id36694 . -1) (undo-tree-id36695 . -1) (undo-tree-id36696 . -1) (undo-tree-id36697 . -1) (undo-tree-id36698 . -1) (undo-tree-id36699 . -1) (undo-tree-id36700 . -1) (undo-tree-id36701 . -1) (undo-tree-id36702 . -1) (undo-tree-id36703 . -1) (#("e" 0 1 (fontified t)) . -72848) (undo-tree-id36704 . -1) (undo-tree-id36705 . -1) (undo-tree-id36706 . -1) (undo-tree-id36707 . -1) (undo-tree-id36708 . -1) (undo-tree-id36709 . -1) (undo-tree-id36710 . -1) (undo-tree-id36711 . -1) (undo-tree-id36712 . -1) (undo-tree-id36713 . -1) (undo-tree-id36714 . -1) (undo-tree-id36715 . -1) (undo-tree-id36716 . -1) (undo-tree-id36717 . -1) (undo-tree-id36718 . -1) (undo-tree-id36719 . -1) (undo-tree-id36720 . -1) (undo-tree-id36721 . -1) (undo-tree-id36722 . -1) (undo-tree-id36723 . -1) (undo-tree-id36724 . -1) (undo-tree-id36725 . -1) (undo-tree-id36726 . -1) (undo-tree-id36727 . -1) (undo-tree-id36728 . -1) (undo-tree-id36729 . -1) (undo-tree-id36730 . -1) (undo-tree-id36731 . -1) (undo-tree-id36732 . -1) (undo-tree-id36733 . -1) (undo-tree-id36734 . -1) (undo-tree-id36735 . -1) (undo-tree-id36736 . -1) (undo-tree-id36737 . -1) (undo-tree-id36738 . -1) (undo-tree-id36739 . -1) (undo-tree-id36740 . -1) (undo-tree-id36741 . -1) (undo-tree-id36742 . -1) (undo-tree-id36743 . -1) (undo-tree-id36744 . -1) (undo-tree-id36745 . -1) (undo-tree-id36746 . -1) (undo-tree-id36747 . -1) (undo-tree-id36748 . -1) (undo-tree-id36749 . -1) (undo-tree-id36750 . -1) (undo-tree-id36751 . -1) (undo-tree-id36752 . -1) (undo-tree-id36753 . -1) (undo-tree-id36754 . -1) (undo-tree-id36755 . -1) (undo-tree-id36756 . -1) (undo-tree-id36757 . -1) (undo-tree-id36758 . -1) (undo-tree-id36759 . -1) (undo-tree-id36760 . -1) (undo-tree-id36761 . -1) (undo-tree-id36762 . -1) (#("l" 0 1 (fontified t)) . -72849) (undo-tree-id36763 . -1) (undo-tree-id36764 . -1) (undo-tree-id36765 . -1) (undo-tree-id36766 . -1) (undo-tree-id36767 . -1) (undo-tree-id36768 . -1) (undo-tree-id36769 . -1) (undo-tree-id36770 . -1) (undo-tree-id36771 . -1) (undo-tree-id36772 . -1) (undo-tree-id36773 . -1) (undo-tree-id36774 . -1) (undo-tree-id36775 . -1) (undo-tree-id36776 . -1) (undo-tree-id36777 . -1) (undo-tree-id36778 . -1) (undo-tree-id36779 . -1) (undo-tree-id36780 . -1) (undo-tree-id36781 . -1) (undo-tree-id36782 . -1) (undo-tree-id36783 . -1) (undo-tree-id36784 . -1) (undo-tree-id36785 . -1) (undo-tree-id36786 . -1) (undo-tree-id36787 . -1) (undo-tree-id36788 . -1) (undo-tree-id36789 . -1) (undo-tree-id36790 . -1) (undo-tree-id36791 . -1) (undo-tree-id36792 . -1) (undo-tree-id36793 . -1) (undo-tree-id36794 . -1) (undo-tree-id36795 . -1) (undo-tree-id36796 . -1) (undo-tree-id36797 . -1) (undo-tree-id36798 . -1) (undo-tree-id36799 . -1) (undo-tree-id36800 . -1) (undo-tree-id36801 . -1) (undo-tree-id36802 . -1) (undo-tree-id36803 . -1) (undo-tree-id36804 . -1) (undo-tree-id36805 . -1) (undo-tree-id36806 . -1) (undo-tree-id36807 . -1) (undo-tree-id36808 . -1) (undo-tree-id36809 . -1) (undo-tree-id36810 . -1) (undo-tree-id36811 . -1) (undo-tree-id36812 . -1) (undo-tree-id36813 . -1) (#("s" 0 1 (fontified t)) . -72850) (undo-tree-id36814 . -1) (undo-tree-id36815 . -1) (undo-tree-id36816 . -1) (undo-tree-id36817 . -1) (undo-tree-id36818 . -1) (undo-tree-id36819 . -1) (undo-tree-id36820 . -1) (undo-tree-id36821 . -1) (undo-tree-id36822 . -1) (undo-tree-id36823 . -1) (undo-tree-id36824 . -1) (undo-tree-id36825 . -1) (undo-tree-id36826 . -1) (undo-tree-id36827 . -1) (undo-tree-id36828 . -1) (undo-tree-id36829 . -1) (undo-tree-id36830 . -1) (undo-tree-id36831 . -1) (undo-tree-id36832 . -1) (undo-tree-id36833 . -1) (undo-tree-id36834 . -1) (undo-tree-id36835 . -1) (undo-tree-id36836 . -1) (undo-tree-id36837 . -1) (undo-tree-id36838 . -1) (undo-tree-id36839 . -1) (undo-tree-id36840 . -1) (undo-tree-id36841 . -1) (undo-tree-id36842 . -1) (undo-tree-id36843 . -1) (undo-tree-id36844 . -1) (undo-tree-id36845 . -1) (undo-tree-id36846 . -1) (undo-tree-id36847 . -1) (undo-tree-id36848 . -1) (undo-tree-id36849 . -1) (undo-tree-id36850 . -1) (undo-tree-id36851 . -1) (undo-tree-id36852 . -1) (undo-tree-id36853 . -1) (undo-tree-id36854 . -1) (undo-tree-id36855 . -1) (undo-tree-id36856 . -1) (#("e" 0 1 (fontified t)) . -72851) (undo-tree-id36857 . -1) (undo-tree-id36858 . -1) (undo-tree-id36859 . -1) (undo-tree-id36860 . -1) (undo-tree-id36861 . -1) (undo-tree-id36862 . -1) (undo-tree-id36863 . -1) (undo-tree-id36864 . -1) (undo-tree-id36865 . -1) (undo-tree-id36866 . -1) (undo-tree-id36867 . -1) (undo-tree-id36868 . -1) (undo-tree-id36869 . -1) (undo-tree-id36870 . -1) (undo-tree-id36871 . -1) (undo-tree-id36872 . -1) (undo-tree-id36873 . -1) (undo-tree-id36874 . -1) (undo-tree-id36875 . -1) (undo-tree-id36876 . -1) (undo-tree-id36877 . -1) (undo-tree-id36878 . -1) (undo-tree-id36879 . -1) (undo-tree-id36880 . -1) (undo-tree-id36881 . -1) 72852 (#("
" 0 1 (fontified t)) . -72747) (undo-tree-id36882 . -1) (undo-tree-id36883 . -1) (undo-tree-id36884 . -1) (undo-tree-id36885 . -1) (undo-tree-id36886 . -1) (undo-tree-id36887 . -1) (undo-tree-id36888 . -1) (undo-tree-id36889 . -1) (undo-tree-id36890 . -1) (undo-tree-id36891 . -1) (undo-tree-id36892 . -1) (undo-tree-id36893 . -1) (undo-tree-id36894 . -1) (undo-tree-id36895 . -1) (undo-tree-id36896 . -1) (undo-tree-id36897 . -1) (undo-tree-id36898 . -1) (undo-tree-id36899 . -1) (undo-tree-id36900 . -1) (undo-tree-id36901 . -1) (undo-tree-id36902 . -1) (undo-tree-id36903 . -1) (undo-tree-id36904 . -1) (undo-tree-id36905 . -1) (undo-tree-id36906 . -1) (undo-tree-id36907 . -1) (undo-tree-id36908 . -1) (undo-tree-id36909 . -1) (undo-tree-id36910 . -1) (undo-tree-id36911 . -1) (undo-tree-id36912 . -1) (undo-tree-id36913 . -1) (undo-tree-id36914 . -1) (undo-tree-id36915 . -1) (undo-tree-id36916 . -1) (undo-tree-id36917 . -1) (undo-tree-id36918 . -1) (undo-tree-id36919 . -1) (undo-tree-id36920 . -1) (undo-tree-id36921 . -1) (undo-tree-id36922 . -1) (undo-tree-id36923 . -1) (undo-tree-id36924 . -1) (undo-tree-id36925 . -1) (undo-tree-id36926 . -1) (undo-tree-id36927 . -1) (undo-tree-id36928 . -1) (undo-tree-id36929 . -1) (undo-tree-id36930 . -1) (undo-tree-id36931 . -1) (undo-tree-id36932 . -1) (undo-tree-id36933 . -1) (undo-tree-id36934 . -1) (undo-tree-id36935 . -1) (undo-tree-id36936 . -1) (undo-tree-id36937 . -1) (undo-tree-id36938 . -1) (undo-tree-id36939 . -1) (#(" " 0 1 (fontified t)) . -72748) (undo-tree-id36940 . -1) (undo-tree-id36941 . -1) (undo-tree-id36942 . -1) (undo-tree-id36943 . -1) (undo-tree-id36944 . -1) (undo-tree-id36945 . -1) (undo-tree-id36946 . -1) (undo-tree-id36947 . -1) (undo-tree-id36948 . -1) (undo-tree-id36949 . -1) (undo-tree-id36950 . -1) (undo-tree-id36951 . -1) (undo-tree-id36952 . -1) (undo-tree-id36953 . -1) (undo-tree-id36954 . -1) (undo-tree-id36955 . -1) (undo-tree-id36956 . -1) (undo-tree-id36957 . -1) (undo-tree-id36958 . -1) (undo-tree-id36959 . -1) (undo-tree-id36960 . -1) (undo-tree-id36961 . -1) (undo-tree-id36962 . -1) (undo-tree-id36963 . -1) (undo-tree-id36964 . -1) (undo-tree-id36965 . -1) (undo-tree-id36966 . -1) (undo-tree-id36967 . -1) (undo-tree-id36968 . -1) (undo-tree-id36969 . -1) (undo-tree-id36970 . -1) (undo-tree-id36971 . -1) (undo-tree-id36972 . -1) (undo-tree-id36973 . -1) (undo-tree-id36974 . -1) (undo-tree-id36975 . -1) (undo-tree-id36976 . -1) (undo-tree-id36977 . -1) (undo-tree-id36978 . -1) (undo-tree-id36979 . -1) (undo-tree-id36980 . -1) (undo-tree-id36981 . -1) (undo-tree-id36982 . -1) (undo-tree-id36983 . -1) (undo-tree-id36984 . -1) (undo-tree-id36985 . -1) (undo-tree-id36986 . -1) (undo-tree-id36987 . -1) (undo-tree-id36988 . -1) (undo-tree-id36989 . -1) (#(" " 0 1 (fontified t)) . -72749) (undo-tree-id36990 . -1) (undo-tree-id36991 . -1) (undo-tree-id36992 . -1) (undo-tree-id36993 . -1) (undo-tree-id36994 . -1) (undo-tree-id36995 . -1) (undo-tree-id36996 . -1) (undo-tree-id36997 . -1) (undo-tree-id36998 . -1) (undo-tree-id36999 . -1) (undo-tree-id37000 . -1) (undo-tree-id37001 . -1) (undo-tree-id37002 . -1) (undo-tree-id37003 . -1) (undo-tree-id37004 . -1) (undo-tree-id37005 . -1) (undo-tree-id37006 . -1) (undo-tree-id37007 . -1) (undo-tree-id37008 . -1) (undo-tree-id37009 . -1) (undo-tree-id37010 . -1) (undo-tree-id37011 . -1) (undo-tree-id37012 . -1) (undo-tree-id37013 . -1) (undo-tree-id37014 . -1) (undo-tree-id37015 . -1) (undo-tree-id37016 . -1) (undo-tree-id37017 . -1) (undo-tree-id37018 . -1) (undo-tree-id37019 . -1) (undo-tree-id37020 . -1) (undo-tree-id37021 . -1) (undo-tree-id37022 . -1) (undo-tree-id37023 . -1) (undo-tree-id37024 . -1) (undo-tree-id37025 . -1) (undo-tree-id37026 . -1) (undo-tree-id37027 . -1) (undo-tree-id37028 . -1) (undo-tree-id37029 . -1) (undo-tree-id37030 . -1) (undo-tree-id37031 . -1) (#(" " 0 1 (fontified t)) . -72750) (undo-tree-id37032 . -1) (undo-tree-id37033 . -1) (undo-tree-id37034 . -1) (undo-tree-id37035 . -1) (undo-tree-id37036 . -1) (undo-tree-id37037 . -1) (undo-tree-id37038 . -1) (undo-tree-id37039 . -1) (undo-tree-id37040 . -1) (undo-tree-id37041 . -1) (undo-tree-id37042 . -1) (undo-tree-id37043 . -1) (undo-tree-id37044 . -1) (undo-tree-id37045 . -1) (undo-tree-id37046 . -1) (undo-tree-id37047 . -1) (undo-tree-id37048 . -1) (undo-tree-id37049 . -1) (undo-tree-id37050 . -1) (undo-tree-id37051 . -1) (undo-tree-id37052 . -1) (undo-tree-id37053 . -1) (undo-tree-id37054 . -1) (undo-tree-id37055 . -1) (undo-tree-id37056 . -1) (undo-tree-id37057 . -1) (undo-tree-id37058 . -1) (undo-tree-id37059 . -1) (undo-tree-id37060 . -1) (undo-tree-id37061 . -1) (undo-tree-id37062 . -1) (undo-tree-id37063 . -1) (undo-tree-id37064 . -1) (undo-tree-id37065 . -1) (#(" " 0 1 (fontified t)) . -72751) (undo-tree-id37066 . -1) (undo-tree-id37067 . -1) (undo-tree-id37068 . -1) (undo-tree-id37069 . -1) (undo-tree-id37070 . -1) (undo-tree-id37071 . -1) (undo-tree-id37072 . -1) (undo-tree-id37073 . -1) (undo-tree-id37074 . -1) (undo-tree-id37075 . -1) (undo-tree-id37076 . -1) (undo-tree-id37077 . -1) (undo-tree-id37078 . -1) (undo-tree-id37079 . -1) (undo-tree-id37080 . -1) (undo-tree-id37081 . -1) (undo-tree-id37082 . -1) (undo-tree-id37083 . -1) (undo-tree-id37084 . -1) (undo-tree-id37085 . -1) (undo-tree-id37086 . -1) (undo-tree-id37087 . -1) (undo-tree-id37088 . -1) (undo-tree-id37089 . -1) (undo-tree-id37090 . -1) (undo-tree-id37091 . -1) 72752 (72756 . 72757) (#(" " 0 1 (fontified t)) . -72756) (undo-tree-id37092 . 1) (undo-tree-id37093 . -1) (undo-tree-id37094 . -1) (undo-tree-id37095 . -1) (undo-tree-id37096 . -1) (undo-tree-id37097 . -1) (undo-tree-id37098 . -1) (undo-tree-id37099 . -1) (undo-tree-id37100 . -1) (undo-tree-id37101 . -1) (undo-tree-id37102 . -1) (undo-tree-id37103 . -1) (undo-tree-id37104 . -1) (undo-tree-id37105 . -1) (undo-tree-id37106 . -1) (undo-tree-id37107 . -1) (undo-tree-id37108 . -1) (undo-tree-id37109 . -1) (undo-tree-id37110 . -1) (undo-tree-id37111 . -1) (undo-tree-id37112 . -1) (undo-tree-id37113 . -1) (undo-tree-id37114 . -1) (undo-tree-id37115 . -1) (undo-tree-id37116 . -1) (undo-tree-id37117 . -1) (undo-tree-id37118 . -1) (undo-tree-id37119 . -1) (undo-tree-id37120 . -1) (undo-tree-id37121 . -1) (undo-tree-id37122 . -1) (undo-tree-id37123 . -1) (undo-tree-id37124 . -1) (undo-tree-id37125 . -1) (undo-tree-id37126 . -1) (undo-tree-id37127 . -1) (undo-tree-id37128 . -1) (undo-tree-id37129 . -1) 72757) nil (25151 37779 626020 908000) 0 nil])
([nil nil ((#("c" 0 1 (fontified nil)) . 72763) (#("e" 0 1 (fontified nil)) . 72763) (#("m" 0 1 (fontified nil)) . 72763) (#(" " 0 1 (fontified nil)) . 72763) (#("a" 0 1 (fontified nil)) . 72763) (#(" " 0 1 (fontified nil)) . 72763) (#("d" 0 1 (fontified nil)) . 72763) (72762 . 72763) 72761) ((#(" " 0 1 (fontified nil)) . 72762) (72763 . 72764) (72763 . 72764) (72763 . 72764) (72763 . 72764) (72763 . 72764) (72763 . 72764) (72763 . 72764)) (25151 37710 926373 120000) 0 nil])
([nil nil ((#("   - A function that prompts the user to select an info buffer that is part of the zetteldesk and inserts its contents to the zetteldesk-scratch buffer under a similarly to above formatted heading. Furthermore, it inserts a link to the info node so you can see it in its context. 
" 0 3 (fontified t) 3 4 (fontified t composition (1 1 [8211]) face org-superstar-item) 4 117 (fontified t) 117 281 (fontified t)) . 51489) (undo-tree-id37670 . -45) (undo-tree-id37671 . -45) (undo-tree-id37672 . -45) (undo-tree-id37673 . -45) (undo-tree-id37674 . -45) (undo-tree-id37675 . -45) (undo-tree-id37676 . -45) (undo-tree-id37677 . -45) (undo-tree-id37678 . -45) (undo-tree-id37679 . -45) (undo-tree-id37680 . -45) (undo-tree-id37681 . -45) (undo-tree-id37682 . -45) (undo-tree-id37683 . -45) (undo-tree-id37684 . -45) (undo-tree-id37685 . -45) (undo-tree-id37686 . -45) (undo-tree-id37687 . -45) (undo-tree-id37688 . -45) (undo-tree-id37689 . -45) (undo-tree-id37690 . -45) (undo-tree-id37691 . -45) (undo-tree-id37692 . -45) (undo-tree-id37693 . -45) (undo-tree-id37694 . -45) (undo-tree-id37695 . -45) (undo-tree-id37696 . -45) (undo-tree-id37697 . -45) (undo-tree-id37698 . -45) (undo-tree-id37699 . -45) (undo-tree-id37700 . -45) (undo-tree-id37701 . -45) (undo-tree-id37702 . -45) (undo-tree-id37703 . -45) (undo-tree-id37704 . -45) (undo-tree-id37705 . -45) (undo-tree-id37706 . -45) (undo-tree-id37707 . -45) (undo-tree-id37708 . -45) (undo-tree-id37709 . -45) (undo-tree-id37710 . -45) (undo-tree-id37711 . -45) (undo-tree-id37712 . -45) (undo-tree-id37713 . -45) (undo-tree-id37714 . -45) (undo-tree-id37715 . -45) (undo-tree-id37716 . -45) (undo-tree-id37717 . -45) (undo-tree-id37718 . -45) (undo-tree-id37719 . -45) (undo-tree-id37720 . -45) (undo-tree-id37721 . -45) (undo-tree-id37722 . -45) (undo-tree-id37723 . -45) (undo-tree-id37724 . -45) (undo-tree-id37725 . -45) (undo-tree-id37726 . -45) (undo-tree-id37727 . -45) (undo-tree-id37728 . -45) (undo-tree-id37729 . -45) (undo-tree-id37730 . -45) (undo-tree-id37731 . -45) (undo-tree-id37732 . -45) (undo-tree-id37733 . -45) (undo-tree-id37734 . -45) (undo-tree-id37735 . -45) (undo-tree-id37736 . -45) (undo-tree-id37737 . -45) 51534 (t 25151 37779 754133 611000)) nil (25151 37816 38972 680000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 72776) (#("o" 0 1 (fontified nil)) . 72776) (#("f" 0 1 (fontified nil)) . 72776) (#("n" 0 1 (fontified nil)) . 72776) (#("i" 0 1 (fontified nil)) . 72776) (#(" " 0 1 (fontified nil)) . 72776) (#("d" 0 1 (fontified nil)) . 72776) (72775 . 72776) 72774) ((#(" " 0 1 (fontified nil)) . 72775) (72776 . 72777) (72776 . 72777) (72776 . 72777) (72776 . 72777) (72776 . 72777) (72776 . 72777) (72776 . 72777)) (25151 37710 925858 871000) 0 nil])
([nil nil ((73071 . 73088) (#("t" 0 1 (fontified t)) . -73071) (undo-tree-id37472 . -1) (undo-tree-id37473 . -1) (undo-tree-id37474 . -1) (undo-tree-id37475 . -1) (undo-tree-id37476 . -1) (undo-tree-id37477 . -1) (undo-tree-id37478 . -1) (undo-tree-id37479 . -1) (undo-tree-id37480 . -1) (undo-tree-id37481 . -1) (undo-tree-id37482 . -1) (undo-tree-id37483 . -1) (undo-tree-id37484 . -1) (undo-tree-id37485 . -1) (undo-tree-id37486 . -1) (undo-tree-id37487 . -1) (undo-tree-id37488 . -1) (undo-tree-id37489 . -1) (undo-tree-id37490 . -1) (undo-tree-id37491 . -1) (undo-tree-id37492 . -1) (undo-tree-id37493 . -1) (undo-tree-id37494 . -1) (undo-tree-id37495 . -1) (undo-tree-id37496 . -1) (undo-tree-id37497 . -1) (undo-tree-id37498 . -1) (undo-tree-id37499 . -1) (undo-tree-id37500 . -1) (undo-tree-id37501 . -1) (undo-tree-id37502 . -1) (undo-tree-id37503 . -1) (undo-tree-id37504 . -1) (undo-tree-id37505 . -1) (undo-tree-id37506 . -1) (undo-tree-id37507 . -1) (undo-tree-id37508 . -1) (undo-tree-id37509 . -1) (undo-tree-id37510 . -1) (undo-tree-id37511 . -1) (undo-tree-id37512 . -1) (undo-tree-id37513 . -1) (undo-tree-id37514 . -1) (undo-tree-id37515 . -1) (undo-tree-id37516 . -1) (undo-tree-id37517 . -1) (undo-tree-id37518 . -1) (undo-tree-id37519 . -1) (undo-tree-id37520 . -1) (undo-tree-id37521 . -1) (undo-tree-id37522 . -1) (undo-tree-id37523 . -1) (undo-tree-id37524 . -1) (undo-tree-id37525 . -1) (undo-tree-id37526 . -1) (undo-tree-id37527 . -1) (undo-tree-id37528 . -1) (undo-tree-id37529 . -1) (undo-tree-id37530 . -1) (undo-tree-id37531 . -1) (undo-tree-id37532 . -1) (undo-tree-id37533 . -1) (undo-tree-id37534 . -1) (undo-tree-id37535 . -1) (undo-tree-id37536 . -1) (undo-tree-id37537 . -1) (undo-tree-id37538 . -1) (undo-tree-id37539 . -1) (undo-tree-id37540 . -1) (undo-tree-id37541 . -1) (undo-tree-id37542 . -1) (undo-tree-id37543 . -1) (undo-tree-id37544 . -1) (undo-tree-id37545 . -1) (undo-tree-id37546 . -1) (undo-tree-id37547 . -1) (undo-tree-id37548 . -1) (undo-tree-id37549 . -1) (#("i" 0 1 (fontified t)) . -73072) (undo-tree-id37550 . -1) (undo-tree-id37551 . -1) (undo-tree-id37552 . -1) (undo-tree-id37553 . -1) (undo-tree-id37554 . -1) (undo-tree-id37555 . -1) (undo-tree-id37556 . -1) (undo-tree-id37557 . -1) (undo-tree-id37558 . -1) (undo-tree-id37559 . -1) (undo-tree-id37560 . -1) (undo-tree-id37561 . -1) (undo-tree-id37562 . -1) (undo-tree-id37563 . -1) (undo-tree-id37564 . -1) (undo-tree-id37565 . -1) (undo-tree-id37566 . -1) (undo-tree-id37567 . -1) (undo-tree-id37568 . -1) (undo-tree-id37569 . -1) (undo-tree-id37570 . -1) (undo-tree-id37571 . -1) (undo-tree-id37572 . -1) (undo-tree-id37573 . -1) (undo-tree-id37574 . -1) (undo-tree-id37575 . -1) (undo-tree-id37576 . -1) (undo-tree-id37577 . -1) (undo-tree-id37578 . -1) (undo-tree-id37579 . -1) (undo-tree-id37580 . -1) (undo-tree-id37581 . -1) (undo-tree-id37582 . -1) (undo-tree-id37583 . -1) (undo-tree-id37584 . -1) (undo-tree-id37585 . -1) (undo-tree-id37586 . -1) (undo-tree-id37587 . -1) (undo-tree-id37588 . -1) (undo-tree-id37589 . -1) (undo-tree-id37590 . -1) (undo-tree-id37591 . -1) (undo-tree-id37592 . -1) (undo-tree-id37593 . -1) (undo-tree-id37594 . -1) (undo-tree-id37595 . -1) (undo-tree-id37596 . -1) (undo-tree-id37597 . -1) (undo-tree-id37598 . -1) (undo-tree-id37599 . -1) (undo-tree-id37600 . -1) (undo-tree-id37601 . -1) (undo-tree-id37602 . -1) (undo-tree-id37603 . -1) (undo-tree-id37604 . -1) (undo-tree-id37605 . -1) (undo-tree-id37606 . -1) (undo-tree-id37607 . -1) (undo-tree-id37608 . -1) (undo-tree-id37609 . -1) (undo-tree-id37610 . -1) (#("o" 0 1 (fontified t)) . -73073) (undo-tree-id37611 . -1) (undo-tree-id37612 . -1) (undo-tree-id37613 . -1) (undo-tree-id37614 . -1) (undo-tree-id37615 . -1) (undo-tree-id37616 . -1) (undo-tree-id37617 . -1) (undo-tree-id37618 . -1) (undo-tree-id37619 . -1) (undo-tree-id37620 . -1) (undo-tree-id37621 . -1) (undo-tree-id37622 . -1) (undo-tree-id37623 . -1) (undo-tree-id37624 . -1) (undo-tree-id37625 . -1) (undo-tree-id37626 . -1) (undo-tree-id37627 . -1) (undo-tree-id37628 . -1) (undo-tree-id37629 . -1) (undo-tree-id37630 . -1) (undo-tree-id37631 . -1) (undo-tree-id37632 . -1) (undo-tree-id37633 . -1) (undo-tree-id37634 . -1) (undo-tree-id37635 . -1) (undo-tree-id37636 . -1) (undo-tree-id37637 . -1) (undo-tree-id37638 . -1) (undo-tree-id37639 . -1) (undo-tree-id37640 . -1) (undo-tree-id37641 . -1) (undo-tree-id37642 . -1) (undo-tree-id37643 . -1) (undo-tree-id37644 . -1) (undo-tree-id37645 . -1) (undo-tree-id37646 . -1) (undo-tree-id37647 . -1) (undo-tree-id37648 . -1) (undo-tree-id37649 . -1) (undo-tree-id37650 . -1) (#("n" 0 1 (fontified t)) . -73074) (undo-tree-id37651 . -1) (undo-tree-id37652 . -1) (undo-tree-id37653 . -1) (undo-tree-id37654 . -1) (undo-tree-id37655 . -1) (undo-tree-id37656 . -1) (undo-tree-id37657 . -1) (undo-tree-id37658 . -1) (undo-tree-id37659 . -1) (undo-tree-id37660 . -1) (undo-tree-id37661 . -1) (undo-tree-id37662 . -1) (undo-tree-id37663 . -1) (undo-tree-id37664 . -1) (undo-tree-id37665 . -1) (undo-tree-id37666 . -1) (undo-tree-id37667 . -1) (undo-tree-id37668 . -1) (undo-tree-id37669 . -1) 73075 (73062 . 73075)) nil (25151 37816 38792 906000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 73091 . 73092) (#("
" 0 1 (fontified nil)) . -73369) (73088 . 73370) 73087) nil (25151 37816 36474 417000) 0 nil])
([nil nil ((73089 . 73090) (#("A" 0 1 (fontified t)) . 73089) (#(" " 0 1 (fontified t)) . 73089) (73088 . 73089) (#("
" 0 1 (fontified t)) . -73088) (undo-tree-id37254 . -1) (undo-tree-id37255 . -1) (undo-tree-id37256 . -1) (undo-tree-id37257 . -1) (undo-tree-id37258 . -1) (undo-tree-id37259 . -1) (undo-tree-id37260 . -1) (undo-tree-id37261 . -1) (undo-tree-id37262 . -1) (undo-tree-id37263 . -1) (undo-tree-id37264 . -1) (undo-tree-id37265 . -1) (undo-tree-id37266 . -1) (undo-tree-id37267 . -1) (undo-tree-id37268 . -1) (undo-tree-id37269 . -1) (undo-tree-id37270 . -1) (undo-tree-id37271 . -1) (undo-tree-id37272 . -1) (undo-tree-id37273 . -1) (undo-tree-id37274 . -1) (undo-tree-id37275 . -1) (undo-tree-id37276 . -1) (undo-tree-id37277 . -1) (undo-tree-id37278 . -1) (undo-tree-id37279 . -1) (undo-tree-id37280 . -1) (undo-tree-id37281 . -1) (undo-tree-id37282 . -1) (undo-tree-id37283 . -1) (undo-tree-id37284 . -1) (undo-tree-id37285 . -1) (undo-tree-id37286 . -1) (undo-tree-id37287 . -1) (undo-tree-id37288 . -1) (undo-tree-id37289 . -1) (undo-tree-id37290 . -1) (undo-tree-id37291 . -1) (undo-tree-id37292 . -1) (undo-tree-id37293 . -1) (undo-tree-id37294 . -1) (undo-tree-id37295 . -1) (undo-tree-id37296 . -1) (undo-tree-id37297 . -1) (undo-tree-id37298 . -1) (undo-tree-id37299 . -1) (undo-tree-id37300 . -1) (undo-tree-id37301 . -1) (undo-tree-id37302 . -1) (undo-tree-id37303 . -1) (undo-tree-id37304 . -1) (undo-tree-id37305 . -1) (undo-tree-id37306 . -1) (undo-tree-id37307 . -1) (undo-tree-id37308 . -1) (undo-tree-id37309 . -1) (undo-tree-id37310 . -1) (undo-tree-id37311 . -1) (undo-tree-id37312 . -1) (undo-tree-id37313 . -1) (undo-tree-id37314 . -1) (undo-tree-id37315 . -1) (undo-tree-id37316 . -1) (undo-tree-id37317 . -1) (undo-tree-id37318 . -1) (undo-tree-id37319 . -1) (undo-tree-id37320 . -1) (undo-tree-id37321 . -1) (undo-tree-id37322 . -1) (undo-tree-id37323 . -1) (undo-tree-id37324 . -1) (#(" " 0 1 (fontified t)) . -73089) (undo-tree-id37325 . -1) (undo-tree-id37326 . -1) (undo-tree-id37327 . -1) (undo-tree-id37328 . -1) (undo-tree-id37329 . -1) (undo-tree-id37330 . -1) (undo-tree-id37331 . -1) (undo-tree-id37332 . -1) (undo-tree-id37333 . -1) (undo-tree-id37334 . -1) (undo-tree-id37335 . -1) (undo-tree-id37336 . -1) (undo-tree-id37337 . -1) (undo-tree-id37338 . -1) (undo-tree-id37339 . -1) (undo-tree-id37340 . -1) (undo-tree-id37341 . -1) (undo-tree-id37342 . -1) (undo-tree-id37343 . -1) (undo-tree-id37344 . -1) (undo-tree-id37345 . -1) (undo-tree-id37346 . -1) (undo-tree-id37347 . -1) (undo-tree-id37348 . -1) (undo-tree-id37349 . -1) (undo-tree-id37350 . -1) (undo-tree-id37351 . -1) (undo-tree-id37352 . -1) (undo-tree-id37353 . -1) (undo-tree-id37354 . -1) (undo-tree-id37355 . -1) (undo-tree-id37356 . -1) (undo-tree-id37357 . -1) (undo-tree-id37358 . -1) (undo-tree-id37359 . -1) (undo-tree-id37360 . -1) (undo-tree-id37361 . -1) (undo-tree-id37362 . -1) (undo-tree-id37363 . -1) (undo-tree-id37364 . -1) (undo-tree-id37365 . -1) (undo-tree-id37366 . -1) (undo-tree-id37367 . -1) (undo-tree-id37368 . -1) (undo-tree-id37369 . -1) (undo-tree-id37370 . -1) (undo-tree-id37371 . -1) (undo-tree-id37372 . -1) (undo-tree-id37373 . -1) (undo-tree-id37374 . -1) (undo-tree-id37375 . -1) (undo-tree-id37376 . -1) (undo-tree-id37377 . -1) (undo-tree-id37378 . -1) (undo-tree-id37379 . -1) (undo-tree-id37380 . -1) (undo-tree-id37381 . -1) (#(" " 0 1 (fontified t)) . -73090) (undo-tree-id37382 . -1) (undo-tree-id37383 . -1) (undo-tree-id37384 . -1) (undo-tree-id37385 . -1) (undo-tree-id37386 . -1) (undo-tree-id37387 . -1) (undo-tree-id37388 . -1) (undo-tree-id37389 . -1) (undo-tree-id37390 . -1) (undo-tree-id37391 . -1) (undo-tree-id37392 . -1) (undo-tree-id37393 . -1) (undo-tree-id37394 . -1) (undo-tree-id37395 . -1) (undo-tree-id37396 . -1) (undo-tree-id37397 . -1) (undo-tree-id37398 . -1) (undo-tree-id37399 . -1) (undo-tree-id37400 . -1) (undo-tree-id37401 . -1) (undo-tree-id37402 . -1) (undo-tree-id37403 . -1) (undo-tree-id37404 . -1) (undo-tree-id37405 . -1) (undo-tree-id37406 . -1) (undo-tree-id37407 . -1) (undo-tree-id37408 . -1) (undo-tree-id37409 . -1) (undo-tree-id37410 . -1) (undo-tree-id37411 . -1) (undo-tree-id37412 . -1) (undo-tree-id37413 . -1) (undo-tree-id37414 . -1) (undo-tree-id37415 . -1) (undo-tree-id37416 . -1) (undo-tree-id37417 . -1) (undo-tree-id37418 . -1) (undo-tree-id37419 . -1) (undo-tree-id37420 . -1) (undo-tree-id37421 . -1) (undo-tree-id37422 . -1) (undo-tree-id37423 . -1) (undo-tree-id37424 . -1) (undo-tree-id37425 . -1) (#(" " 0 1 (fontified t rear-nonsticky t)) . -73091) (undo-tree-id37426 . -1) (undo-tree-id37427 . -1) (undo-tree-id37428 . -1) (undo-tree-id37429 . -1) (undo-tree-id37430 . -1) (undo-tree-id37431 . -1) (undo-tree-id37432 . -1) (undo-tree-id37433 . -1) (undo-tree-id37434 . -1) (undo-tree-id37435 . -1) (undo-tree-id37436 . -1) (undo-tree-id37437 . -1) (undo-tree-id37438 . -1) (undo-tree-id37439 . -1) (undo-tree-id37440 . -1) (undo-tree-id37441 . -1) (undo-tree-id37442 . -1) (undo-tree-id37443 . -1) (undo-tree-id37444 . -1) (undo-tree-id37445 . -1) (undo-tree-id37446 . -1) (undo-tree-id37447 . -1) (undo-tree-id37448 . -1) (undo-tree-id37449 . -1) (undo-tree-id37450 . -1) (undo-tree-id37451 . -1) (undo-tree-id37452 . -1) (undo-tree-id37453 . -1) (undo-tree-id37454 . -1) (undo-tree-id37455 . -1) (undo-tree-id37456 . -1) (undo-tree-id37457 . -1) (undo-tree-id37458 . -1) (undo-tree-id37459 . -1) (undo-tree-id37460 . -1) (undo-tree-id37461 . -1) (#("-" 0 1 (fontified t composition (1 1 [8211]) face org-superstar-item)) . -73092) (undo-tree-id37462 . -1) (undo-tree-id37463 . -1) (undo-tree-id37464 . -1) (undo-tree-id37465 . -1) (undo-tree-id37466 . -1) (undo-tree-id37467 . -1) (undo-tree-id37468 . -1) (undo-tree-id37469 . -1) (undo-tree-id37470 . -1) (undo-tree-id37471 . -1) 73093) nil (25151 37816 36439 77000) 0 nil])
([nil nil ((65733 . 65736) (#("f" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -65733) (undo-tree-id37741 . -1) (undo-tree-id37742 . -1) (#("." 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -65734) (undo-tree-id37743 . -1) (undo-tree-id37744 . -1) (#("e" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -65735) (undo-tree-id37745 . -1) (undo-tree-id37746 . -1) (#("l" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -65736) (undo-tree-id37747 . -1) (undo-tree-id37748 . -1) 65737 (65730 . 65737) (#("s" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -65730) (undo-tree-id37749 . -1) (undo-tree-id37750 . -1) 65731 (65724 . 65731) (#("d" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -65724) (undo-tree-id37751 . -1) (undo-tree-id37752 . -1) (#("l" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -65725) (undo-tree-id37753 . -1) (undo-tree-id37754 . -1) 65726 (65705 . 65726) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 65705 65736 nil nil nil t #s(yas--field 2 65737 65737 nil nil nil nil nil)) #s(yas--field 2 65737 65737 nil nil nil nil nil)) nil 2 nil #s(yas--field 2 65737 65737 nil nil nil nil nil) nil nil)) (65707 . 65711) (65693 . 65716) (#("\\s" 0 2 (fontified t)) . 65693) (undo-tree-id37755 . -2) 65695 (65693 . 65695) (#("'" 0 1 (fontified t)) . -65693) (undo-tree-id37756 . -1) (#("s" 0 1 (fontified t)) . -65694) (undo-tree-id37757 . -1) 65695 (65694 . 65695) (65693 . 65694) (65689 . 65693) (#("    " 0 4 (fontified nil)) . 65688) (undo-tree-id37758 . -4) (65687 . 65693) (65674 . 65687) (#("r" 0 1 (fontified t)) . -65674) (undo-tree-id37759 . -1) (#("t" 0 1 (fontified t)) . -65675) (undo-tree-id37760 . -1) 65676 (65656 . 65676) (65635 . 65656) (65618 . 65635) (65614 . 65618) (65615 . 65619) (#("    " 0 4 (fontified nil)) . 65614) (undo-tree-id37761 . -4) (65613 . 65619) (65610 . 65613) (#("v" 0 1 (fontified t face org-level-3)) . -65610) (undo-tree-id37762 . -1) 65611 (65608 . 65611) (#("m" 0 1 (fontified t face org-level-3)) . -65608) (undo-tree-id37763 . -1) (#("a" 0 1 (fontified t face org-level-3)) . -65609) (undo-tree-id37764 . -1) 65610 (65601 . 65610) (#(" " 0 1 (fontified t)) . -65601) (undo-tree-id37765 . -1) (#(" " 0 1 (fontified t)) . -65602) (undo-tree-id37766 . -1) (#(" " 0 1 (fontified t)) . -65603) (undo-tree-id37767 . -1) 65604 (65600 . 65604) (#("
" 0 1 (fontified t)) . -65600) (undo-tree-id37768 . -1) (#(" " 0 1 (fontified t)) . -65601) (undo-tree-id37769 . -1) (#(" " 0 1 (fontified t)) . -65602) (undo-tree-id37770 . -1) (#(" " 0 1 (fontified t)) . -65603) (undo-tree-id37771 . -1) 65604 (65600 . 65604) (t 25151 37816 174520 808000) 65600) nil (25151 38174 222320 292000) 0 nil])
([nil nil ((65737 . 67257) (apply yas--snippet-revive 65693 65750 #s(yas--snippet nil (#s(yas--field 1 65705 65736 nil nil nil t #s(yas--field 2 65737 65737 nil nil nil nil nil)) #s(yas--field 2 65737 65737 nil nil nil nil nil)) nil 2 nil #s(yas--field 2 65737 65737 nil nil nil nil nil) nil nil)) (#("
" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 65737) (undo-tree-id37738 . 1) (undo-tree-id37739 . -1) (undo-tree-id37740 . 1)) nil (25156 39111 30262 340000) 0 nil])
([nil nil ((74141 . 74144) (74141 . 74143) (74130 . 74177) (#("
" 0 1 (fontified nil)) . 74130) (74127 . 74130) (74126 . 74128) (t 25151 38174 388338 925000)) ((#("

" 0 1 (fontified nil) 1 2 (fontified nil)) . 74126) (#("   " 0 3 (fontified nil)) . 74127) (74130 . 74131) (#("#+RESULTS:
zetteldesk-insert-ref-node-contents
" 0 11 (fontified nil) 11 47 (fontified nil)) . 74130) (#(": " 0 2 (fontified nil)) . 74141) (#("   " 0 3 (fontified nil)) . 74141)) (25156 39118 2467 651000) 0 nil])
([nil nil ((#("(and (zetteldesk-buffer-p BUFFER) (eq (buffer-local-value 'major-mode (cdr BUFFER)) 'org-mode))" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 4 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4 95 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 40129) (undo-tree-id18 . -94) (undo-tree-id19 . -94) (undo-tree-id20 . -94) (undo-tree-id21 . -2) (undo-tree-id22 . -2) (undo-tree-id23 . -2) (undo-tree-id24 . -2) (undo-tree-id25 . -2) (undo-tree-id26 . -2) (undo-tree-id27 . -2) (undo-tree-id28 . -2) (undo-tree-id29 . -2) (undo-tree-id30 . -2) (undo-tree-id31 . -2) (undo-tree-id32 . -2) (undo-tree-id33 . -2) (undo-tree-id34 . -2) (undo-tree-id35 . -2) (undo-tree-id36 . -3) (undo-tree-id37 . -3) (undo-tree-id38 . -3) (undo-tree-id39 . -3) (undo-tree-id40 . -3) (undo-tree-id41 . -3) (undo-tree-id42 . -3) (undo-tree-id43 . -3) (undo-tree-id44 . -3) (undo-tree-id45 . -3) (undo-tree-id46 . -5) (undo-tree-id47 . -5) (undo-tree-id48 . -5) (undo-tree-id49 . -5) (undo-tree-id50 . -5) (undo-tree-id51 . -5) (undo-tree-id52 . -5) (undo-tree-id53 . -5) (undo-tree-id54 . -5) (undo-tree-id55 . -5) (undo-tree-id56 . -5) (undo-tree-id57 . -5) (undo-tree-id58 . -5) (undo-tree-id59 . -5) (undo-tree-id60 . -5) (undo-tree-id61 . -6) (undo-tree-id62 . -6) (undo-tree-id63 . -6) (undo-tree-id64 . -6) (undo-tree-id65 . -6) (undo-tree-id66 . -6) (undo-tree-id67 . -6) (undo-tree-id68 . -6) (undo-tree-id69 . -6) (undo-tree-id70 . -6) (undo-tree-id71 . -6) (undo-tree-id72 . -6) (undo-tree-id73 . -6) (undo-tree-id74 . -6) (undo-tree-id75 . -6) (undo-tree-id76 . -7) (undo-tree-id77 . -7) (undo-tree-id78 . -7) (undo-tree-id79 . -7) (undo-tree-id80 . -7) (undo-tree-id81 . -7) (undo-tree-id82 . -7) (undo-tree-id83 . -7) (undo-tree-id84 . -7) (undo-tree-id85 . -7) (undo-tree-id86 . -11) (undo-tree-id87 . -11) (undo-tree-id88 . -11) (undo-tree-id89 . -11) (undo-tree-id90 . -11) (undo-tree-id91 . -11) (undo-tree-id92 . -11) (undo-tree-id93 . -11) (undo-tree-id94 . -11) (undo-tree-id95 . -11) (undo-tree-id96 . -11) (undo-tree-id97 . -11) (undo-tree-id98 . -11) (undo-tree-id99 . -11) (undo-tree-id100 . -11) (undo-tree-id101 . -11) (undo-tree-id102 . -11) (undo-tree-id103 . -11) (undo-tree-id104 . -11) (undo-tree-id105 . -11) (undo-tree-id106 . -12) (undo-tree-id107 . -12) (undo-tree-id108 . -12) (undo-tree-id109 . -12) (undo-tree-id110 . -12) (undo-tree-id111 . -12) (undo-tree-id112 . -12) (undo-tree-id113 . -12) (undo-tree-id114 . -12) (undo-tree-id115 . -12) (undo-tree-id116 . -92) (undo-tree-id117 . -92) (undo-tree-id118 . -92) (undo-tree-id119 . -92) (undo-tree-id120 . -92) (undo-tree-id121 . -92) (undo-tree-id122 . -92) (undo-tree-id123 . -92) (undo-tree-id124 . -92) (undo-tree-id125 . -92) (undo-tree-id126 . -92) (undo-tree-id127 . -92) (undo-tree-id128 . -92) (undo-tree-id129 . -92) (undo-tree-id130 . -92) (undo-tree-id131 . -92) (undo-tree-id132 . -92) (undo-tree-id133 . -92) (undo-tree-id134 . -92) (undo-tree-id135 . -92) (undo-tree-id136 . -92) (undo-tree-id137 . -92) (undo-tree-id138 . -92) (undo-tree-id139 . -92) (undo-tree-id140 . -92) (undo-tree-id141 . -93) (undo-tree-id142 . -93) (undo-tree-id143 . -93) (undo-tree-id144 . -93) (undo-tree-id145 . -93) (undo-tree-id146 . -93) (undo-tree-id147 . -93) (undo-tree-id148 . -93) (undo-tree-id149 . -93) (undo-tree-id150 . -93) (undo-tree-id151 . -93) (undo-tree-id152 . -93) (undo-tree-id153 . -93) (undo-tree-id154 . -93) (undo-tree-id155 . -93) (undo-tree-id156 . -93) (undo-tree-id157 . -93) (undo-tree-id158 . -93) (undo-tree-id159 . -93) (undo-tree-id160 . -93) (undo-tree-id161 . -93) (undo-tree-id162 . -93) (undo-tree-id163 . -93) (undo-tree-id164 . -93) (undo-tree-id165 . -93) (undo-tree-id166 . -94) (undo-tree-id167 . -94) (undo-tree-id168 . -94) (undo-tree-id169 . -94) (undo-tree-id170 . -94) (undo-tree-id171 . -94) (undo-tree-id172 . -94) (undo-tree-id173 . -94) (undo-tree-id174 . -94) (undo-tree-id175 . -94) (undo-tree-id176 . -94) (undo-tree-id177 . -94) (undo-tree-id178 . -94) (undo-tree-id179 . -94) (undo-tree-id180 . -94) (undo-tree-id181 . -94) (undo-tree-id182 . -94) (undo-tree-id183 . -94) (undo-tree-id184 . -94) (undo-tree-id185 . -94) (undo-tree-id186 . -94) (undo-tree-id187 . -94) (undo-tree-id188 . -94) (undo-tree-id189 . -94) (undo-tree-id190 . -94) (undo-tree-id191 . -94) (undo-tree-id192 . -94) (undo-tree-id193 . -94) (undo-tree-id194 . -94) (undo-tree-id195 . -94) (undo-tree-id196 . -94) (undo-tree-id197 . -94) (undo-tree-id198 . -94) (undo-tree-id199 . -94) (undo-tree-id200 . -94) (undo-tree-id201 . -94) (undo-tree-id202 . -94) (undo-tree-id203 . -94) (undo-tree-id204 . -94) (undo-tree-id205 . -94) (undo-tree-id206 . -94) (undo-tree-id207 . -94) (undo-tree-id208 . -94) (undo-tree-id209 . -94) (undo-tree-id210 . -94) (undo-tree-id211 . -94) (undo-tree-id212 . -94) (undo-tree-id213 . -94) (undo-tree-id214 . -94) (undo-tree-id215 . -94) (undo-tree-id216 . -94) (undo-tree-id217 . -94) (undo-tree-id218 . -94) (undo-tree-id219 . -94) (undo-tree-id220 . -94) (undo-tree-id221 . -94) (undo-tree-id222 . -94) (undo-tree-id223 . -94) (undo-tree-id224 . -94) (undo-tree-id225 . -94) (undo-tree-id226 . -94) (undo-tree-id227 . -94) (undo-tree-id228 . -94) (undo-tree-id229 . -94) (undo-tree-id230 . -94) (undo-tree-id231 . -94) (undo-tree-id232 . -94) (undo-tree-id233 . -94) (undo-tree-id234 . -94) (undo-tree-id235 . -94) (undo-tree-id236 . -94) (undo-tree-id237 . -94) (undo-tree-id238 . -93) (undo-tree-id239 . -93) (undo-tree-id240 . -93) (undo-tree-id241 . -93) (undo-tree-id242 . -93) (undo-tree-id243 . -93) (undo-tree-id244 . -93) (undo-tree-id245 . -93) (undo-tree-id246 . -93) (undo-tree-id247 . -93) (undo-tree-id248 . -92) (undo-tree-id249 . -92) (undo-tree-id250 . -92) (undo-tree-id251 . -92) (undo-tree-id252 . -92) (undo-tree-id253 . -92) (undo-tree-id254 . -92) (undo-tree-id255 . -92) (undo-tree-id256 . -92) (undo-tree-id257 . -92) (undo-tree-id258 . -91) (undo-tree-id259 . -91) (undo-tree-id260 . -91) (undo-tree-id261 . -91) (undo-tree-id262 . -91) (undo-tree-id263 . -91) (undo-tree-id264 . -91) (undo-tree-id265 . -91) (undo-tree-id266 . -91) (undo-tree-id267 . -91) (undo-tree-id268 . -90) (undo-tree-id269 . -90) (undo-tree-id270 . -90) (undo-tree-id271 . -90) (undo-tree-id272 . -90) (undo-tree-id273 . -90) (undo-tree-id274 . -90) (undo-tree-id275 . -90) (undo-tree-id276 . -90) (undo-tree-id277 . -90) (undo-tree-id278 . -90) (undo-tree-id279 . -90) (undo-tree-id280 . -90) (undo-tree-id281 . -90) (undo-tree-id282 . -90) (undo-tree-id283 . -89) (undo-tree-id284 . -89) (undo-tree-id285 . -89) (undo-tree-id286 . -89) (undo-tree-id287 . -89) (undo-tree-id288 . -89) (undo-tree-id289 . -89) (undo-tree-id290 . -89) (undo-tree-id291 . -89) (undo-tree-id292 . -89) (undo-tree-id293 . -87) (undo-tree-id294 . -87) (undo-tree-id295 . -87) (undo-tree-id296 . -87) (undo-tree-id297 . -87) (undo-tree-id298 . -86) (undo-tree-id299 . -86) (undo-tree-id300 . -86) (undo-tree-id301 . -86) (undo-tree-id302 . -86) (undo-tree-id303 . -86) (undo-tree-id304 . -86) (undo-tree-id305 . -86) (undo-tree-id306 . -86) (undo-tree-id307 . -86) (undo-tree-id308 . -85) (undo-tree-id309 . -85) (undo-tree-id310 . -85) (undo-tree-id311 . -85) (undo-tree-id312 . -85) (undo-tree-id313 . -85) (undo-tree-id314 . -85) (undo-tree-id315 . -85) (undo-tree-id316 . -85) (undo-tree-id317 . -85) (undo-tree-id318 . -85) (undo-tree-id319 . -85) (undo-tree-id320 . -85) (undo-tree-id321 . -85) (undo-tree-id322 . -85) (undo-tree-id323 . -85) (undo-tree-id324 . -85) (undo-tree-id325 . -85) (undo-tree-id326 . -85) (undo-tree-id327 . -85) (undo-tree-id328 . -85) (undo-tree-id329 . -85) (undo-tree-id330 . -85) (undo-tree-id331 . -85) (undo-tree-id332 . -85) (undo-tree-id333 . -5) (undo-tree-id334 . -5) (undo-tree-id335 . -5) (undo-tree-id336 . -5) (undo-tree-id337 . -5) (undo-tree-id338 . -5) (undo-tree-id339 . -5) (undo-tree-id340 . -5) (undo-tree-id341 . -5) (undo-tree-id342 . -5) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -2) (undo-tree-id401 . -2) (undo-tree-id402 . -2) (undo-tree-id403 . -2) (undo-tree-id404 . -2) (undo-tree-id405 . -2) (undo-tree-id406 . -2) (undo-tree-id407 . -2) (undo-tree-id408 . -2) (undo-tree-id409 . -2) (undo-tree-id410 . -2) (undo-tree-id411 . -2) (undo-tree-id412 . -2) (undo-tree-id413 . -2) (undo-tree-id414 . -2) (undo-tree-id415 . -2) (undo-tree-id416 . -2) (undo-tree-id417 . -2) (undo-tree-id418 . -2) (undo-tree-id419 . -2) (undo-tree-id420 . -2) (undo-tree-id421 . -2) (undo-tree-id422 . -2) (undo-tree-id423 . -2) (undo-tree-id424 . -2) (undo-tree-id425 . -2) (undo-tree-id426 . -2) (undo-tree-id427 . -2) (undo-tree-id428 . -2) (undo-tree-id429 . -2) (undo-tree-id430 . -2) (undo-tree-id431 . -94) (undo-tree-id432 . -95) (undo-tree-id433 . -2) (undo-tree-id434 . -2) (undo-tree-id435 . -2) (undo-tree-id436 . -2) (undo-tree-id437 . -2) (undo-tree-id438 . -2) (undo-tree-id439 . -2) (undo-tree-id440 . -2) (undo-tree-id441 . -2) (undo-tree-id442 . -2) (undo-tree-id443 . -3) (undo-tree-id444 . -3) (undo-tree-id445 . -3) (undo-tree-id446 . -3) (undo-tree-id447 . -3) (undo-tree-id448 . -3) (undo-tree-id449 . -3) (undo-tree-id450 . -3) (undo-tree-id451 . -3) (undo-tree-id452 . -3) (undo-tree-id453 . -5) (undo-tree-id454 . -5) (undo-tree-id455 . -5) (undo-tree-id456 . -5) (undo-tree-id457 . -5) (undo-tree-id458 . -5) (undo-tree-id459 . -5) (undo-tree-id460 . -5) (undo-tree-id461 . -5) (undo-tree-id462 . -5) (undo-tree-id463 . -5) (undo-tree-id464 . -5) (undo-tree-id465 . -5) (undo-tree-id466 . -5) (undo-tree-id467 . -5) (undo-tree-id468 . -6) (undo-tree-id469 . -6) (undo-tree-id470 . -6) (undo-tree-id471 . -6) (undo-tree-id472 . -6) (undo-tree-id473 . -6) (undo-tree-id474 . -6) (undo-tree-id475 . -6) (undo-tree-id476 . -6) (undo-tree-id477 . -6) (undo-tree-id478 . -86) (undo-tree-id479 . -86) (undo-tree-id480 . -86) (undo-tree-id481 . -86) (undo-tree-id482 . -86) (undo-tree-id483 . -86) (undo-tree-id484 . -86) (undo-tree-id485 . -86) (undo-tree-id486 . -86) (undo-tree-id487 . -86) (undo-tree-id488 . -87) (undo-tree-id489 . -87) (undo-tree-id490 . -87) (undo-tree-id491 . -87) (undo-tree-id492 . -87) (undo-tree-id493 . -87) (undo-tree-id494 . -87) (undo-tree-id495 . -87) (undo-tree-id496 . -87) (undo-tree-id497 . -87) (undo-tree-id498 . -88) (undo-tree-id499 . -88) (undo-tree-id500 . -88) (undo-tree-id501 . -88) (undo-tree-id502 . -88) (undo-tree-id503 . -88) (undo-tree-id504 . -88) (undo-tree-id505 . -88) (undo-tree-id506 . -88) (undo-tree-id507 . -88) (undo-tree-id508 . -88) (undo-tree-id509 . -88) (undo-tree-id510 . -88) (undo-tree-id511 . -88) (undo-tree-id512 . -88) (undo-tree-id513 . -89) (undo-tree-id514 . -89) (undo-tree-id515 . -89) (undo-tree-id516 . -89) (undo-tree-id517 . -89) (undo-tree-id518 . -89) (undo-tree-id519 . -89) (undo-tree-id520 . -89) (undo-tree-id521 . -89) (undo-tree-id522 . -89) (undo-tree-id523 . -90) (undo-tree-id524 . -90) (undo-tree-id525 . -90) (undo-tree-id526 . -90) (undo-tree-id527 . -90) (undo-tree-id528 . -90) (undo-tree-id529 . -90) (undo-tree-id530 . -90) (undo-tree-id531 . -90) (undo-tree-id532 . -90) (undo-tree-id533 . -95) (undo-tree-id534 . -95) (undo-tree-id535 . -95) (undo-tree-id536 . -95) (undo-tree-id537 . -95) (undo-tree-id538 . -95) (undo-tree-id539 . -95) (undo-tree-id540 . -95) (undo-tree-id541 . -95) (undo-tree-id542 . -95) (undo-tree-id543 . -95) (undo-tree-id544 . -95) (undo-tree-id545 . -95) (undo-tree-id546 . -95) (undo-tree-id547 . -95) (undo-tree-id548 . 1) (undo-tree-id549 . -95) (undo-tree-id550 . 95) (undo-tree-id551 . -1) (undo-tree-id552 . -95) (undo-tree-id553 . -95) (undo-tree-id554 . -95) (undo-tree-id555 . -95) (undo-tree-id556 . -95) (undo-tree-id557 . -95) (undo-tree-id558 . -95) (undo-tree-id559 . -95) (undo-tree-id560 . -95) (undo-tree-id561 . -95) (undo-tree-id562 . -94) (undo-tree-id563 . -94) (undo-tree-id564 . -94) (undo-tree-id565 . -94) (undo-tree-id566 . -94) (undo-tree-id567 . -94) (undo-tree-id568 . -94) (undo-tree-id569 . -94) (undo-tree-id570 . -94) (undo-tree-id571 . -94) (undo-tree-id572 . -94) (undo-tree-id573 . -94) (undo-tree-id574 . -94) (undo-tree-id575 . -94) (undo-tree-id576 . -94) (undo-tree-id577 . -94) (undo-tree-id578 . -94) (undo-tree-id579 . -94) (undo-tree-id580 . -94) (undo-tree-id581 . -94) (undo-tree-id582 . -94) (undo-tree-id583 . -94) (undo-tree-id584 . -94) (undo-tree-id585 . -94) (undo-tree-id586 . -94) (undo-tree-id587 . -94) (undo-tree-id588 . -94) (undo-tree-id589 . -94) (undo-tree-id590 . -94) (undo-tree-id591 . -94) (undo-tree-id592 . -94) (undo-tree-id593 . -94) (undo-tree-id594 . -94) (undo-tree-id595 . -94) (undo-tree-id596 . -94) (undo-tree-id597 . -94) (undo-tree-id598 . -94) (undo-tree-id599 . -94) (undo-tree-id600 . -94) (undo-tree-id601 . -94) (undo-tree-id602 . -94) (undo-tree-id603 . -94) (undo-tree-id604 . -94) 40223 (t 25156 39119 756830 441000)) nil (25157 56314 657278 348000) 0 nil])
([nil nil ((40163 . 40171) (40162 . 40163) (40159 . 40162) (#("F" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -40159) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) 40160 (40158 . 40160) (#("U" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -40158) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) 40159 (40155 . 40159) (40154 . 40155) (40150 . 40154) (40130 . 40150) (40129 . 40131)) nil (25157 56314 653151 567000) 0 nil])
([nil nil ((#("(and (zetteldesk-p BUFFER) (eq (buffer-local-value 'major-mode (cdr BUFFER)) 'pdf-view-mode))" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 4 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4 93 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 40293) (undo-tree-id648 . -92) (undo-tree-id649 . -92) (undo-tree-id650 . -92) (undo-tree-id651 . -92) (undo-tree-id652 . -92) (undo-tree-id653 . -92) (undo-tree-id654 . -92) (undo-tree-id655 . -92) (undo-tree-id656 . -92) (undo-tree-id657 . -92) (undo-tree-id658 . -92) (undo-tree-id659 . -92) (undo-tree-id660 . -92) (undo-tree-id661 . -92) (undo-tree-id662 . -92) (undo-tree-id663 . -92) (undo-tree-id664 . -92) (undo-tree-id665 . -92) (undo-tree-id666 . -92) (undo-tree-id667 . -92) (undo-tree-id668 . -93) (undo-tree-id669 . -92) (undo-tree-id670 . -92) (undo-tree-id671 . -92) (undo-tree-id672 . -92) (undo-tree-id673 . -92) (undo-tree-id674 . -92) (undo-tree-id675 . -92) (undo-tree-id676 . -92) (undo-tree-id677 . -92) (undo-tree-id678 . -92) (undo-tree-id679 . -92) (undo-tree-id680 . -92) (undo-tree-id681 . -92) (undo-tree-id682 . -92) (undo-tree-id683 . -92) (undo-tree-id684 . -92) (undo-tree-id685 . -92) (undo-tree-id686 . -91) (undo-tree-id687 . -91) (undo-tree-id688 . -91) (undo-tree-id689 . -91) (undo-tree-id690 . -91) (undo-tree-id691 . -91) (undo-tree-id692 . -91) (undo-tree-id693 . -91) (undo-tree-id694 . -91) (undo-tree-id695 . -91) (undo-tree-id696 . -90) (undo-tree-id697 . -90) (undo-tree-id698 . -90) (undo-tree-id699 . -90) (undo-tree-id700 . -90) (undo-tree-id701 . -90) (undo-tree-id702 . -90) (undo-tree-id703 . -90) (undo-tree-id704 . -90) (undo-tree-id705 . -90) (undo-tree-id706 . -89) (undo-tree-id707 . -89) (undo-tree-id708 . -89) (undo-tree-id709 . -89) (undo-tree-id710 . -89) (undo-tree-id711 . -89) (undo-tree-id712 . -89) (undo-tree-id713 . -89) (undo-tree-id714 . -89) (undo-tree-id715 . -89) (undo-tree-id716 . -7) (undo-tree-id717 . -7) (undo-tree-id718 . -7) (undo-tree-id719 . -7) (undo-tree-id720 . -7) (undo-tree-id721 . -6) (undo-tree-id722 . -6) (undo-tree-id723 . -6) (undo-tree-id724 . -6) (undo-tree-id725 . -6) (undo-tree-id726 . -6) (undo-tree-id727 . -6) (undo-tree-id728 . -6) (undo-tree-id729 . -6) (undo-tree-id730 . -6) (undo-tree-id731 . -6) (undo-tree-id732 . -6) (undo-tree-id733 . -6) (undo-tree-id734 . -6) (undo-tree-id735 . -6) (undo-tree-id736 . -5) (undo-tree-id737 . -5) (undo-tree-id738 . -5) (undo-tree-id739 . -5) (undo-tree-id740 . -5) (undo-tree-id741 . -5) (undo-tree-id742 . -5) (undo-tree-id743 . -5) (undo-tree-id744 . -5) (undo-tree-id745 . -5) (undo-tree-id746 . -3) (undo-tree-id747 . -3) (undo-tree-id748 . -3) (undo-tree-id749 . -3) (undo-tree-id750 . -3) (undo-tree-id751 . -3) (undo-tree-id752 . -3) (undo-tree-id753 . -3) (undo-tree-id754 . -3) (undo-tree-id755 . -3) (undo-tree-id756 . -2) (undo-tree-id757 . -2) (undo-tree-id758 . -2) (undo-tree-id759 . -2) (undo-tree-id760 . -2) (undo-tree-id761 . -2) (undo-tree-id762 . -2) (undo-tree-id763 . -2) (undo-tree-id764 . -2) (undo-tree-id765 . -2) (undo-tree-id766 . -2) (undo-tree-id767 . -2) (undo-tree-id768 . -2) (undo-tree-id769 . -2) (undo-tree-id770 . -2) (undo-tree-id771 . -2) (undo-tree-id772 . -2) (undo-tree-id773 . -2) (undo-tree-id774 . -2) (undo-tree-id775 . -2) (undo-tree-id776 . -2) (undo-tree-id777 . -2) (undo-tree-id778 . -2) (undo-tree-id779 . -2) (undo-tree-id780 . -2) (undo-tree-id781 . -2) (undo-tree-id782 . -2) (undo-tree-id783 . -2) (undo-tree-id784 . -2) (undo-tree-id785 . -2) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . 93) (undo-tree-id802 . -1) (undo-tree-id803 . 1) (undo-tree-id804 . -93) (t 25157 56314 778563 963000)) nil (25157 56353 614884 13000) 0 nil])
([nil nil ((40327 . 40340) (40326 . 40327) (40321 . 40326) (#("U" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -40321) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (#("F" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -40322) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) 40323 (40319 . 40323) (#("b" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -40319) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) 40320 (40318 . 40320) (40314 . 40318) (40294 . 40314) (40293 . 40295)) nil (25157 56353 613665 821000) 0 nil])
([nil nil ((39698 . 40222) 37946 (t 25157 56353 739003 700000)) nil (25157 56584 480936 245000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block))) . -39790) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (#("w" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block))) . -39791) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (#("
" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block))) . -39792) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) 39793 (39792 . 39793) (39790 . 39792) (39779 . 39791) 37946 (#("\\" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block))) . -39779) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (#("z" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block))) . -39780) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (#("e" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block))) . -39781) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (#("t" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block))) . -39782) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (#("a" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t)) . -39783) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) 39784 (39779 . 39784) (#("z" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block))) . -39779) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (#("e" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block))) . -39780) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (#("t" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block))) . -39781) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (#("t" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block))) . -39782) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (#("e" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block))) . -39783) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (#("l" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block))) . -39784) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (#("d" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block))) . -39785) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (#("e" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block))) . -39786) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (#("s" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block))) . -39787) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (#("k" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t)) . -39788) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) 39789 (t 25157 56584 611630 290000)) nil (25157 56805 146762 581000) 0 nil])
([nil nil ((41799 . 42290) 41459 (t 25157 56805 273867 588000)) nil (25157 56897 582750 686000) 0 nil])
([nil nil ((42407 . 42408) (#("with-curr" 0 9 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block))) . 42407) (#("n" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block))) . 42417) (42419 . 42431) (#("
	(setq-local zetteldesk \"foo\"" 0 3 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3 13 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 13 25 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 25 30 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 42433) (#(")" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 42465) (undo-tree-id1902 . -1) (42889 . 42890) (#("with-curr" 0 9 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block))) . 42889) (#("n" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block))) . 42899) (42901 . 42908) (42902 . 42907) (42915 . 42916) (#("    " 0 4 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 42917) (#("setq-local " 0 10 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 10 11 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 42924) (#(" \"foo\"))
	  (with" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 6 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6 13 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 17 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block))) . 42945) (42963 . 42967) (#("current" 0 7 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block))) . 42963) (#("le)
	    (setq-" 0 10 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10 15 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block))) . 43000) (#("ocal zett" 0 4 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4 9 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 43016) (#("ldesk \"foo\"" 0 6 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6 11 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 43026) (44569 . 44570) (#("with-curr" 0 9 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block))) . 44569) (#("n" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block))) . 44579) (44581 . 44593) (44595 . 44596) (#("	" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 44596) (44600 . 44603) (#("(setq-local" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 11 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block))) . 44600) (44612 . 44613) (#(" \"foo\"))
	      (with" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 6 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6 17 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 17 21 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block))) . 44622) (44644 . 44648) (#("current" 0 7 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block))) . 44644) (#(")
		(setq-local zetteldesk \"foo\"" 0 5 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5 15 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 15 27 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 27 32 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 44683) 41459 (t 25157 56897 711269 267000)) nil (25157 57032 684822 860000) 0 nil])
([nil nil ((44578 . 44583) (#("un" 0 2 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block))) . 44578) (44591 . 44592) (44599 . 44601) (44600 . 44601) (#("rom-d" 0 5 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block))) . 44600) (44606 . 44607) (#("sktop" 0 5 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block))) . 44606) (44672 . 44673) (#("\"" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block))) . 44672) (44678 . 44682) (44679 . 44681) (44680 . 44703) (#("(" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 44680) (44683 . 44691) (44684 . 44687) (44685 . 44688) (44686 . 44731) (44687 . 44696) (44688 . 44689) (44689 . 44732) (44690 . 44700) (44691 . 44711) (44692 . 44694) (44693 . 44703) (#("\"b" 0 2 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 44693) (#(")" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 44696) (44704 . 44705) (44725 . 44726) (44733 . 44734) (44755 . 44860) (44765 . 44791) (44766 . 44806) (45065 . 45067) (#("wi" 0 2 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block))) . 45065) (45068 . 45075) (#("h" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block))) . 45068) (45070 . 45071) (#("cur" 0 3 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block))) . 45070) (45075 . 45079) (#("nt" 0 2 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block))) . 45075) (#("
	  (kill-local-variable 'zetteldesk)" 0 37 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 45091) (45750 . 45752) (#("wi" 0 2 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block))) . 45750) (45753 . 45760) (#("h" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block))) . 45753) (45755 . 45756) (#("cur" 0 3 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block))) . 45755) (45760 . 45764) (#("nt" 0 2 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block))) . 45760) (#("r
		(kill-local-va" 0 18 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 45775) (#("iable 'zetteldesk)" 0 18 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 45794) 41459 (t 25157 57032 812390 100000)) nil (25157 57195 939416 479000) 0 nil])
([nil nil ((46138 . 46140) (46138 . 46140) (46127 . 46179) (#("
" 0 1 (fontified nil)) . 46127) (46125 . 46127) (46124 . 46126)) nil (25157 57195 939387 843000) 0 nil])
([nil nil ((68372 . 68437) 66852 (t 25157 57196 67142 871000)) nil (25157 57770 305044 343000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 68435) (t 25157 57770 435464 340000)) nil (25157 57842 350344 281000) 0 nil])
([nil nil ((79704 . 79709) (79699 . 79704) 79699) nil (25157 57842 350340 999000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 79700) (undo-tree-id2036 . 1) (undo-tree-id2037 . -3) (undo-tree-id2038 . -4) (undo-tree-id2039 . -4) (undo-tree-id2040 . -4) (undo-tree-id2041 . -4) (undo-tree-id2042 . -4) (undo-tree-id2043 . -4) (undo-tree-id2044 . -4) (undo-tree-id2045 . -4) (undo-tree-id2046 . -4) (undo-tree-id2047 . -4) (undo-tree-id2048 . -4) (undo-tree-id2049 . -4) (undo-tree-id2050 . -4) (undo-tree-id2051 . -4) (undo-tree-id2052 . -4) (undo-tree-id2053 . -3) (undo-tree-id2054 . -3) (undo-tree-id2055 . -3) (undo-tree-id2056 . -3) (undo-tree-id2057 . -3) (undo-tree-id2058 . -3) (undo-tree-id2059 . -3) (undo-tree-id2060 . -3) (undo-tree-id2061 . -3) (undo-tree-id2062 . -3) (undo-tree-id2063 . -3) (undo-tree-id2064 . -3) (undo-tree-id2065 . -3) (undo-tree-id2066 . -3) (undo-tree-id2067 . -3) (undo-tree-id2068 . -3) (undo-tree-id2069 . -3) (undo-tree-id2070 . -3) (undo-tree-id2071 . -3) (undo-tree-id2072 . -3) (undo-tree-id2073 . -3) (undo-tree-id2074 . -3) (undo-tree-id2075 . -3) (undo-tree-id2076 . -3) 79703) nil (25157 57842 350333 386000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -79783) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) 79784 (79772 . 79784) (#("e" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -79772) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) 79773 (79762 . 79773) (79752 . 79762) (#(":" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -79752) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) 79753 (79752 . 79753) (#("z" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -79752) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) 79753 (79752 . 79753) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 79760 79791 nil nil nil t #s(yas--field 2 79792 79792 nil nil nil nil nil)) #s(yas--field 2 79792 79792 nil nil nil nil nil)) nil 9 nil #s(yas--field 1 79760 79791 nil nil nil t #s(yas--field 2 79792 79792 nil nil nil nil nil)) nil nil)) (79740 . 79763) (#("\\s" 0 2 (fontified t)) . 79740) (undo-tree-id1943 . -2) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -2) (undo-tree-id1952 . -1) (undo-tree-id1953 . -2) (undo-tree-id1954 . -2) (undo-tree-id1955 . -2) (undo-tree-id1956 . -2) (undo-tree-id1957 . -2) (undo-tree-id1958 . -2) (undo-tree-id1959 . -2) (undo-tree-id1960 . -2) 79742 (79740 . 79742) (79739 . 79740) (79734 . 79739) (79733 . 79734) (79712 . 79733) (#("b" 0 1 (fontified t face org-level-3)) . -79712) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (#("h" 0 1 (fontified t face org-level-3)) . -79713) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (#("e" 0 1 (fontified t face org-level-3)) . -79714) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) 79715 (79704 . 79715)) nil (25157 57842 350254 45000) 0 nil])
([nil nil ((79704 . 79712) 79782) nil (25157 57842 346525 795000) 0 nil])
([nil nil ((apply yas--snippet-revive 79748 80687 #s(yas--snippet nil (#s(yas--field 1 79760 79791 nil nil nil t #s(yas--field 2 79792 79792 nil nil nil nil nil)) #s(yas--field 2 79792 79792 nil nil nil nil nil)) nil 9 nil #s(yas--field 1 79760 79791 nil nil nil t #s(yas--field 2 79792 79792 nil nil nil nil nil)) nil nil)) (79792 . 80677)) nil (25157 57842 346513 852000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face org-level-3)) . -79747) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (undo-tree-id3482 . -1) (undo-tree-id3483 . -1) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3487 . -1) (undo-tree-id3488 . -1) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) (undo-tree-id3491 . -1) (undo-tree-id3492 . -1) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) (undo-tree-id3500 . -1) (undo-tree-id3501 . -1) (undo-tree-id3502 . -1) (undo-tree-id3503 . -1) (undo-tree-id3504 . -1) (undo-tree-id3505 . -1) (undo-tree-id3506 . -1) (undo-tree-id3507 . -1) (undo-tree-id3508 . -1) (undo-tree-id3509 . -1) (undo-tree-id3510 . -1) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) (undo-tree-id3514 . -1) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) (undo-tree-id3517 . -1) (undo-tree-id3518 . -1) (undo-tree-id3519 . -1) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (#(" " 0 1 (fontified t face org-level-3)) . -79748) (undo-tree-id3523 . -1) (undo-tree-id3524 . -1) (undo-tree-id3525 . -1) (undo-tree-id3526 . -1) (undo-tree-id3527 . -1) (undo-tree-id3528 . -1) (undo-tree-id3529 . -1) (undo-tree-id3530 . -1) (undo-tree-id3531 . -1) (undo-tree-id3532 . -1) (undo-tree-id3533 . -1) (undo-tree-id3534 . -1) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (undo-tree-id3538 . -1) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (#("n" 0 1 (fontified t face org-level-3)) . -79749) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (undo-tree-id3566 . -1) (undo-tree-id3567 . -1) (undo-tree-id3568 . -1) (undo-tree-id3569 . -1) (undo-tree-id3570 . -1) (undo-tree-id3571 . -1) (undo-tree-id3572 . -1) (undo-tree-id3573 . -1) (undo-tree-id3574 . -1) (undo-tree-id3575 . -1) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (#("t" 0 1 (fontified t face org-level-3)) . -79750) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) 79751 (79747 . 79751) (79797 . 79804) (#("d" 0 1 (fontified t)) . -79797) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1) (undo-tree-id3624 . -1) (undo-tree-id3625 . -1) (undo-tree-id3626 . -1) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (undo-tree-id3629 . -1) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) (undo-tree-id3633 . -1) (undo-tree-id3634 . -1) (undo-tree-id3635 . -1) (undo-tree-id3636 . -1) (undo-tree-id3637 . -1) (undo-tree-id3638 . -1) (undo-tree-id3639 . -1) (#("n" 0 1 (fontified t)) . -79798) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (undo-tree-id3651 . -1) (undo-tree-id3652 . -1) (undo-tree-id3653 . -1) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1) (undo-tree-id3662 . -1) (undo-tree-id3663 . -1) (undo-tree-id3664 . -1) (#("i" 0 1 (fontified t)) . -79799) (undo-tree-id3665 . -1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (undo-tree-id3670 . -1) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) 79800 (79787 . 79800) (79780 . 79787) (#("u" 0 1 (fontified t)) . -79780) (undo-tree-id3674 . -1) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (undo-tree-id3682 . -1) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (#("s" 0 1 (fontified t)) . -79781) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) 79782 (79776 . 79782) (#(" " 0 1 (fontified t)) . -79776) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) 79777 (79773 . 79777) (#("-" 0 1 (fontified t)) . -79773) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) 79774 (79769 . 79774) (79748 . 79769) (79748 . 79749) (79747 . 79748) (t 25157 57842 482738 45000) 79746) nil (25157 57985 178365 523000) 0 nil])
([nil nil ((80145 . 80155) (#("-" 0 1 (fontified t)) . -80145) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) 80146 (80139 . 80146) (#("-" 0 1 (fontified t)) . -80139) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (#("y" 0 1 (fontified t)) . -80140) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) 80141 (80126 . 80141) (80124 . 80126) (#("s" 0 1 (fontified t)) . -80124) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) 80125 (80120 . 80125) (#("t" 0 1 (fontified t)) . -80120) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) 80121 (80117 . 80121) (80096 . 80117) (#("-" 0 1 (fontified t)) . -80096) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) 80097 (80094 . 80097) (#("k" 0 1 (fontified t)) . -80094) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (#("s" 0 1 (fontified t)) . -80095) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) 80096 (80090 . 80096) (#("l" 0 1 (fontified t)) . -80090) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (#("e" 0 1 (fontified t)) . -80091) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (#("d" 0 1 (fontified t)) . -80092) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (#("e" 0 1 (fontified t)) . -80093) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) 80094 (80084 . 80094) (80067 . 80084) (80046 . 80067) (80025 . 80046) (80020 . 80025) (#("W" 0 1 (fontified t)) . -80020) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) 80021 (80004 . 80021) (79983 . 80004) (#("o" 0 1 (fontified t)) . -79983) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (#("o" 0 1 (fontified t)) . -79984) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (#("f" 0 1 (fontified t)) . -79985) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) 79986 (79983 . 79986) (#("o" 0 1 (fontified t)) . -79983) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (#("f" 0 1 (fontified t)) . -79984) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (#("r" 0 1 (fontified t)) . -79985) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) 79986 (79970 . 79986) (79957 . 79970) (#("k" 0 1 (fontified t)) . -79957) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (#("l" 0 1 (fontified t)) . -79958) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (#("o" 0 1 (fontified t)) . -79959) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (#("a" 0 1 (fontified t)) . -79960) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) 79961 (79953 . 79961) (#("r" 0 1 (fontified t)) . -79953) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (#("v" 0 1 (fontified t)) . -79954) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (#("e" 0 1 (fontified t)) . -79955) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) 79956 (79937 . 79956) (79917 . 79936) (#("e" 0 1 (fontified t)) . -79917) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (#(" " 0 1 (fontified t)) . -79918) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) 79919 (79917 . 79919) (79896 . 79917) (#("l" 0 1 (fontified t)) . -79896) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (#("y" 0 1 (fontified t)) . -79897) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) 79898 (79897 . 79898) (#("y" 0 1 (fontified t)) . -79897) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -1) (undo-tree-id3100 . -1) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1) (#("e" 0 1 (fontified t)) . -79898) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1) (undo-tree-id3109 . -1) (undo-tree-id3110 . -1) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (undo-tree-id3114 . -1) (undo-tree-id3115 . -1) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (#("c" 0 1 (fontified t)) . -79899) (undo-tree-id3146 . -1) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (#(" " 0 1 (fontified t)) . -79900) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) 79901 (79898 . 79901) (79882 . 79898) (79876 . 79882) (79861 . 79877) (#("d" 0 1 (fontified t)) . -79861) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) (undo-tree-id3219 . -1) (undo-tree-id3220 . -1) (undo-tree-id3221 . -1) (#("n" 0 1 (fontified t)) . -79862) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (#("i" 0 1 (fontified t)) . -79863) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (undo-tree-id3250 . -1) (undo-tree-id3251 . -1) (undo-tree-id3252 . -1) (undo-tree-id3253 . -1) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) 79864 (79852 . 79864) (#("i" 0 1 (fontified t)) . -79852) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (#("e" 0 1 (fontified t)) . -79853) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) 79854 (79853 . 79854) (#("s" 0 1 (fontified t)) . -79853) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) (undo-tree-id3318 . -1) (undo-tree-id3319 . -1) (undo-tree-id3320 . -1) (undo-tree-id3321 . -1) (undo-tree-id3322 . -1) (undo-tree-id3323 . -1) (undo-tree-id3324 . -1) (undo-tree-id3325 . -1) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (undo-tree-id3328 . -1) 79854 (79846 . 79854) (79845 . 79846) (#(" " 0 1 (fontified t)) . -79845) (undo-tree-id3329 . -1) (undo-tree-id3330 . -1) (undo-tree-id3331 . -1) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (undo-tree-id3336 . -1) (undo-tree-id3337 . -1) 79846 (79845 . 79846) (#("dont" 0 4 (fontified nil)) . 79845) (undo-tree-id3338 . -4) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (undo-tree-id3346 . -2) (undo-tree-id3347 . -1) (undo-tree-id3348 . -2) (undo-tree-id3349 . -2) (undo-tree-id3350 . -2) (undo-tree-id3351 . -2) (undo-tree-id3352 . -2) (undo-tree-id3353 . -2) (undo-tree-id3354 . -3) (undo-tree-id3355 . -2) (undo-tree-id3356 . -3) (undo-tree-id3357 . -3) (undo-tree-id3358 . -3) (undo-tree-id3359 . -3) (undo-tree-id3360 . -3) (undo-tree-id3361 . -3) (undo-tree-id3362 . -4) (undo-tree-id3363 . -3) (undo-tree-id3364 . -4) (undo-tree-id3365 . -4) (undo-tree-id3366 . -4) (undo-tree-id3367 . -4) (undo-tree-id3368 . -4) (undo-tree-id3369 . -4) (undo-tree-id3370 . -4) (79839 . 79845) 79843 (79832 . 79843) (#("." 0 1 (fontified t)) . -79832) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (#(" " 0 1 (fontified t)) . -79833) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) 79834 (79826 . 79834) (#("." 0 1 (fontified t)) . -79826) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) 79827 (79811 . 79827) (79809 . 79811) (#("w" 0 1 (fontified t)) . -79809) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) 79810 (79804 . 79810) (#("I" 0 1 (fontified t)) . -79804) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (#("n" 0 1 (fontified t)) . -79805) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) 79806 (79804 . 79806) (#(" " 0 1 (fontified t)) . -79804) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) 79805 (79804 . 79805)) nil (25157 57985 177881 96000) 0 nil])
([nil nil ((35980 . 36026) (35981 . 35982) 34178 (t 25157 57985 293978 743000)) nil (25157 64762 519417 269000) 0 nil])
([nil nil ((#("
* Implementing the Zettelkasten \"desktop\" to org-roam 
  A desktop, is the top surface of a desk, or in the digital world an area in a computer screen in which some people arrange their icons, similarly to how they would arrange stuff in their desk. Now if I had an irl zettelkasten, I know for sure that my desktop would be filled with little notes with various topic when studying something. So why shouldn't I have a digital desktop where I can spread all my notes and look at them one by one, when studying. Wouldn't that be handy?

  This very thought is what started this idea. The idea of the zettelkasten-desktop, which I shortened to zetteldesk as I wanted my functions to not have huge names. The plan for the finished project is a dedicated buffer in which I can input whichever note I want and view them all at the same time, a way to create a true desktop experience inside emacs. Once done, it will be a great benefit to my workflow I believe.

  So far, I have done only what I would consider to be the first part of the workflow. I have created a system which marks an org-roam-node (from a completion menu) and adds it to the zetteldesk and a filtered org-roam-node-find which shows me only those nodes. Furthermore, the node doesn't have to be open currently, the functions take care of opening nodes. As I liked the idea, I thought it should be something I can do with any buffer. A lot of the times when studying, or doing any sort of research, you need not only your notes and a place to combine your ideas, but also supplementary materials to that work. That might be a pdf, a directory structure, an info page or whatever else suits your boat. So all the functionality written has a version for nodes and one generally for buffers.

  I plan for this to become its own emacs package for people to use. Now some of its functionality is and will be really specific to my workflow, but hopefully others may like it and use it. For this reason this section tangles to a different file zetteldesk.el. 

** Description
   I plan to publish this as a package on github so a description is needed in the top of the file. This section is basically that part.

   #+BEGIN_SRC elisp :tangle zetteldesk.el

     ;;; zetteldesk.el --- A revision and outlining tool for org-roam

     ;; Author: Vidianos Giannitsis <vidianosgiannitsis@gmail.com>
     ;; Maintaner: Vidianos Giannitsis <vidianosgiannitsis@gmail.com>
     ;; URL: https://github.com/Vidianos-Giannitsis/zetteldesk.el
     ;; Package-Requires: ((org-roam \"2.0\"))
     ;; Tested on Emacs 27.2 and org-roam v2.2
     ;; Created: 6th February 2022
     ;; License: GPL-3.0
     ;; Keywords: org-roam, revision, zettelkasten
     ;; Version: 0.2

     ;; This file is free software; you can redistribute it and/or modify
     ;; it under the terms of the GNU General Public License as published by
     ;; the Free Software Foundation; either version 3, or (at your option)
     ;; any later version.

     ;; This program is distributed in the hope that it will be useful,
     ;; but WITHOUT ANY WARRANTY; without even the implied warranty of
     ;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     ;; GNU General Public License for more details.

     ;; For a full copy of the GNU General Public License
     ;; see <https://www.gnu.org/licenses/>.

     ;;; Commentary:

     ;; This package provides various filter functions to \"traverse\" your
     ;; org-roam database more smoothly.  I use it for doing revision in
     ;; lessons and I personally find it highly efficient for this
     ;; purpose.  Its also good to just sort out your thoughts.  In general,
     ;; org-roam lacks a good framework for filtering your nodes although
     ;; it has all the backend for doing that.

     ;;; Code:
   #+END_SRC
   
** Dependencies
   As I want this to work independently to my config, this section has a copy of all the custom function I use which were not defined in this section as I felt they fit more somewhere else in my config. These are the dependencies this has from my config. For general dependencies I will do those once this is actually complete enough to make its own package

   #+BEGIN_SRC elisp :tangle zetteldesk.el

     ;; -- DEPENDENCIES --
     ;; These are some functions that are needed for the package to work as
     ;; it should, but that are not specific to the package

     (require 'org-roam)

     (cl-defmethod org-roam-node-buffer ((node org-roam-node))
       \"Access slot \\\"buffer\\\" of org-roam-node struct CL-X.
     NODE is an org-roam-node\"
       (let ((buffer (get-file-buffer (org-roam-node-file node))))
	 buffer))

     (cl-defmethod org-roam-node-backlinkscount-number ((node org-roam-node))
	 \"Access slot \\\"backlinks\\\" of org-roam-node struct CL-X. This
	 is identical to `org-roam-node-backlinkscount' with the
	 difference that it returns a number instead of a fromatted
	 string. This is to be used in
	 `org-roam-node-sort-by-backlinks'\"
	 (let* ((count (caar (org-roam-db-query
			      [:select (funcall count source)
				       :from links
				       :where (= dest $s1)
				       :and (= type \"id\")]
			      (org-roam-node-id node)))))
	   count))

     (defun org-roam-node-poi-or-moc-p (NODE)
       \"Check if NODE has the tag POI or the tag MOC.  Return t if it does.\"
       (or (string-equal (car (org-roam-node-tags NODE)) \"POI\")
	   (string-equal (car (org-roam-node-tags NODE)) \"MOC\")))

     (defun org-roam-backlink-query ()
       \"Simple org-roam query function.
     Stores the IDs of all the files that link to the node at point.
     This is a modified part of the `org-roam-backlinks-get' function
     keeping only the part necessary for `org-roam-backlink-files' to
     work as this is a complimentary function to that\"
       (org-roam-db-query
	[:select [source dest]
		 :from links
		 :where (= dest $s1)
		 :and (= type \"id\")]
	(org-roam-node-id (org-roam-node-at-point))))

     (defun org-roam-backlink-query* (NODE)
       \"Run `org-roam-backlink-query' with NODE instead of `org-roam-node-at-point'.

     Instead of returning a list of the backlinks of
     `org-roam-node-at-point', find the backlinks of NODE.  This is
     handy in cases where NODE is read through `org-roam-node-read'
     and doesn't have to be the `current-buffer'\"
       (org-roam-db-query
	     [:select [source dest]
		      :from links
		      :where (= dest $s1)
		      :and (= type \"id\")]
	     (org-roam-node-id NODE)))

     (defun org-roam-node-sort-by-backlinks (completion-a completion-b)
       \"Sorting function for org-roam that sort the list of nodes.
     Sorting is done accordint to the number of backlinks.  This is
     the sorting function in `org-roam-node-find-by-backlinks' and
     `zetteldesk-node-insert-sort-backlinks'.  Arguments COMPLETION-A
     and COMPLETION-B are same as in
     `org-roam-node-read-sort-by-file-atime'\"
       (let ((node-a (cdr completion-a))
	     (node-b (cdr completion-b)))
	 (>= (org-roam-node-backlinkscount-number node-a)
	     (org-roam-node-backlinkscount-number node-b))))

   #+END_SRC
   
** Predicate Functions
I tried to follow a rather simple idea to do this and not overcomplicate things. Essentially, I define a buffer-local variable and give it a default value. Then I define the predicate function that shows when a buffer is part of the zettelkasten desktop. A buffer will be part of the desktop only if the value of that variable in the buffer is not equal to the default. I define the low level predicate functions that check if a buffer or node is part of the zetteldesk and then I define a predicate that checks if a buffer is part of the zetteldesk but not an org-roam file, as on the switch-to-buffer prompt I do not care about org-roam files (I can view them with org-roam-node-file) and another predicate which filters the list down further to only include org files that are part of the zetteldesk but not org-roam files (which is handy for another function below).

#+BEGIN_SRC elisp :tangle zetteldesk.el

  ;; -- PREDICATE FUNCTIONS --
  ;; This section contains the predicate functions the package uses. The
  ;; core of the package is that it provides well filtered completion
  ;; menus as chosen by the user, so obviously predicate functions are
  ;; core to the package

  (defcustom zetteldesk
    \"default\"
    \"Buffer local variable.
  Checks if the current buffer is part of the zetteldesk.  A buffer
  is part of the zetteldesk only if the value of this variable is
  not its default value in that buffer.  Its default value is
  default because I am not creative.\"
    :type 'string
    :group 'zetteldesk
    :local t)

  (defun zetteldesk-p (BUFFER)
    \"Check if BUFFER is part of the current `zetteldesk'.\"
    (not (eq (default-value 'zetteldesk) (buffer-local-value 'zetteldesk (cdr BUFFER)))))

  (defun zetteldesk-buffer-p (BUFFER)
    \"Check if BUFFER is part of the current `zetteldesk'.
  Then check if BUFFER is not associated to an org-roam file.

  Org-roam file buffers are better viewed with `org-roam-node-file'
  so this function filters down the database to non org-roam
  zetteldesk buffers.  This is what is used to create the filter
  function `zetteldesk-switch-to-buffer'\"
    (and (zetteldesk-p BUFFER) (not (org-roam-buffer-p (cdr BUFFER)))))

  (defun zetteldesk-node-p (NODE)
    \"Check if NODE is associated with an open buffer.
  If it is, check if that buffer is part of the current
  `zetteldesk'.  If it isn't, return nil.

  This function is used as a filter function to create
  `zetteldesk-node-find' which is a filtered view of
  `org-roam-node-find'\"
    (if (org-roam-node-buffer NODE)
	(not (eq (default-value 'zetteldesk) (buffer-local-value 'zetteldesk (org-roam-node-buffer NODE))))
      nil))

  (defmacro zetteldesk-mode-buffer-p (BUFFER MODE)
    \"Check if BUFFER is part of the `zetteldesk' and in major-mode MODE.

  This macro is meant to be used to write filter functions to be
  passed to `read-buffer' variants such as
  `zetteldesk-org-buffer-p' which is used in
  `zetteldesk-insert-org-file-contents'. BUFFER is in the form
  required for `read-buffer' while MODE should be a symbol such as
  'org-mode.\"
    `(and (zetteldesk-buffer-p ,BUFFER)
	  (eq (buffer-local-value 'major-mode (cdr ,BUFFER)) ,MODE)))

  (defun zetteldesk-org-buffer-p (BUFFER)
    \"Check if BUFFER is part of the current `zetteldesk'.
  Then check if the file is an org file but not one that belongs to
  org-roam.

  This is used as the filter function for
  `zetteldesk-insert-org-file-contents' which prompts for an org
  file, but as `zetteldesk-insert-node-contents' is a superior
  version for org-roam nodes, that function should not prompts for
  those files\"
    (zetteldesk-mode-buffer-p BUFFER 'org-mode))

  (defun zetteldesk-pdf-p (BUFFER)
    \"Check if BUFFER is part of the current `zetteldesk' and also a pdf file.\"
    (zetteldesk-mode-buffer-p BUFFER 'pdf-view-mode))

#+END_SRC

#+RESULTS:
: zetteldesk-node-insert

** Adding and Removing things in the Zetteldesk
   I define a few adding mechanisms and the matching removing ones, as can seen below. The first is adding/removing a buffer, the second is for a node and then I have two ways of playing with a nodes backlinks. I can add a node and all its backlinks to the zetteldesk, or I can select a node and add one of its backlinks to the zetteldesk. Both have their use cases imo. For the last one, I believe there is no need for a matching removing one. 

   
  #+BEGIN_SRC elisp :tangle zetteldesk.el

    ;; -- ADD/REMOVE THINGS IN THE ZETTELDESK --
    ;; To get a system where the user can get multiple filtered views of
    ;; the nodes/buffers of their choice, obviously you need functions
    ;; that allow the user to add them to something. And then, you also
    ;; need ways to remove things, because people make mistakes.

    (defmacro zetteldesk--add-buffer (BUFFER)
      \"Add BUFFER to the current `zettelesk'.

    This is a low-level macro used in all zetteldesk-add
    functions. Given BUFFER it creates the code required to add the
    buffer to the zetteldesk. For example all
    `zetteldesk-add-to-desktop' is, is an interactive call to this
    macro. Other functions need more stuff, but deep-down they all
    use this macro.\"
      `(with-current-buffer ,BUFFER	
	 (setq-local zetteldesk \"foo\")))

    (defun zetteldesk-add-to-desktop (BUFFER)
      \"Add BUFFER to the current `zetteldesk'.\"
      (interactive \"b\")
      (zetteldesk--add-buffer BUFFER))

    (defun zetteldesk-add-node-to-desktop (NODE)
      \"Add NODE to the `zetteldesk'.
    If there isn't a buffer associated to it, create it.  NODE is an
    org-roam node read through `org-roam-node-read'\"
      (interactive (list (org-roam-node-read)))
      (let ((buffer (org-roam-node-buffer NODE))
	     (file (org-roam-node-file NODE))
	     (org-startup-with-latex-preview nil))
	(if (not (eq buffer nil))
	    (zetteldesk--add-buffer buffer)
	  (zetteldesk--add-buffer (find-file-noselect file)))))

    (defun zetteldesk-add-poi-or-moc-backlink-to-desktop ()
      \"Prompts the user to select an org-roam node that has a specific tag.
    Looks for the POI or MOC tag (filtering done with
    `org-roam-node-poi-or-moc-p') and collects its ID and backlinks.
    Then, prompt the user to select one of its backlinks and add that
    to the zetteldesk.\"
      (interactive)
      (let* ((source (org-roam-node-read nil #'org-roam-node-poi-or-moc-p))
	     (source-id (org-roam-node-id source))
	     (backlinks (org-roam-backlink-query* source)))
	(zetteldesk-add-node-to-desktop
	 (org-roam-node-read nil (lambda (NODE)
				   (let* ((id (org-roam-node-id NODE))
					  (id-list (list id source-id)))
				     (member id-list backlinks)))))))

    (defun zetteldesk-add-backlinks-to-desktop ()
      \"Add the current buffer and all its backlinks to the `zetteldesk'.

    This function queries the database for all the nodes that link to
    the current node with the `org-roam-backlink-query' function and
    then recursively checks if there is an open buffer associated
    with them, and if so adds it to the `zetteldesk'\"
      (interactive)
      (setq-local zetteldesk \"foo\")
      (let ((backlinks (length (org-roam-backlink-query)))
	    (org-startup-with-latex-preview nil))
	(dotimes (number backlinks)
	  (let* ((id (car (nth number (org-roam-backlink-query))))
		  (node (org-roam-node-from-id id))
		  (buffer (org-roam-node-buffer node))
		  (file (org-roam-node-file node)))
	    (if (not (eq buffer nil))
		(zetteldesk--add-buffer buffer)
	      (zetteldesk--add-buffer (find-file-noselect file)))))))

    (defmacro zetteldesk--remove-buffer (BUFFER)
      \"Remove BUFFER from the current `zetteldesk'.

    This is a low-level macro used in all zetteldesk-remove
    functions. This function is identical in logic to
    `zetteldesk--add-buffer', however it is for removing thingss
    instead of adding.\"
      `(with-current-buffer ,BUFFER
	 (kill-local-variable 'zetteldesk)))

    (defun zetteldesk-remove-from-desktop (BUFFER)
      \"Remove BUFFER from the current `zetteldesk'.\"
      (interactive \"b\")
      (zetteldesk--remove-buffer BUFFER))

    (defun zetteldesk-remove-node-from-desktop (NODE)
      \"Remove NODE from the `zetteldesk'.
    NODE is an org-roam node
    and is read through `org-roam-node-read'\"
      (interactive (list (org-roam-node-read nil #'zetteldesk-node-p)))
      (let ((buffer (org-roam-node-buffer NODE)))
	(zetteldesk--remove-buffer buffer)))

    (defun zetteldesk-remove-backlinks-from-desktop ()
      \"Remove from the `zetteldesk', the current buffer and its backlinks.

    This function is essentially a carbon copy of
    `zetteldesk-add-backlinks-to-desktop' but instead of adding the
    buffer to the desktop it removes it.\"
      (interactive)
      (kill-local-variable 'zetteldesk)
      (let ((backlinks (length (org-roam-backlink-query))))
	(dotimes (number backlinks)
	  (let* ((id (car (nth number (org-roam-backlink-query))))
		  (node (org-roam-node-from-id id))
		  (buffer (org-roam-node-buffer node)))
	    (unless (eq buffer nil)
	      (zetteldesk--remove-buffer buffer))))))


  #+END_SRC 

  #+RESULTS:
  : zetteldesk-remove-backlinks-from-desktop
   
** Filter functions
   Here I define the functions which give you a filtered view of switch-to-buffer and org-roam-node-find to the current zetteldesk. I also define a filtered view of org-roam-node-insert as its not rare to want to insert a link to a file from the zetteldesk and an iteration of that, that also sorts by backlinks.

   Lastly, trying to handle info buffers, I add a filtered view of Info-goto-node, using completing-read.

   #+BEGIN_SRC elisp :tangle zetteldesk.el

     ;; -- FILTER FUNCTIONS --
     ;; This section is about defining all the functions that show you the
     ;; filtered results of all your nodes/buffers

     (defun zetteldesk-switch-to-buffer ()
       \"Execute a filtered `switch-to-buffer'.
     The filter is done using `zetteldesk-buffer-p' to show only
     buffers that are part of the current `zetteldesk' and not
     `org-roam-node's.\"
       (interactive)
       (switch-to-buffer (read-buffer \"Zetteldesk Buffers: \" nil nil #'zetteldesk-buffer-p)))

     (defun zetteldesk-node-find ()
       \"Execute a filtered `org-roam-node-find'.
     The filter is done using `zetteldesk-node-p' to show only nodes that are
     part of the current `zetteldesk'\"
       (interactive)
       (org-roam-node-find nil nil #'zetteldesk-node-p))

     (defun zetteldesk-node-insert ()
       \"Execute a filtered `org-roam-node-insert'.
     The filter is done using `zetteldesk-node-p' to show only nodes that are
     part of the current `zetteldesk'\"
       (interactive)
       (org-roam-node-insert #'zetteldesk-node-p))

     (defun zetteldesk-node-insert-sort-backlinks ()
       \"Select a node that is part of the zetteldesk.
     The function used is `org-roam-node-read' in a UI sorted by the
       number of backlinks.  Insert a link in the current buffer to
       the selected node.

     This function essentially has the core functionality of
     `org-roam-node-insert', but it uses `org-roam-node-read' instead
     as only that can take a sort-function.  Some files may be
     important to their topic, but not MOCs or POIs, so this function
     acts essentially as a complimentary function to
     `zetteldesk-node-insert-if-poi-or-moc' to check if that one
     missed something you want to include.\"
       (interactive)
       (let* ((node (org-roam-node-read nil #'zetteldesk-node-p #'org-roam-node-sort-by-backlinks))
	      (id (org-roam-node-id node))
	      (description (org-roam-node-formatted node)))
	 (insert (org-link-make-string
		  (concat \"id:\" id)
		  description))))


   #+END_SRC
    
** On the zetteldesk-scratch buffer
   The zetteldesk-scratch buffer is a bit equivalent to the emacs scratch buffer. Its essentially a buffer unique to the session in which you can drop all the links, node contents or whatever else interests you and use it as the place to hold your crude notes until you drop them where they belong. I also envision this to be the buffer in which you drop all the notes you want to view at one time, in the way you would spread them on your desk.

   I am considering making a global minor mode zetteldesk-mode in which map you can put all your keybindings if you do not want the override map littered with those. It will also have a hook when turned on to create the scratch buffer. I will do this as I find it more classy to enable a minor mode than to just run the zetteldesk-create-scratch-buffer at initialization

   Things I have implemented so far
   - Creating a global minor mode for the zetteldesk.
   - Creating a function which initialises the zetteldesk-scratch buffer and hook that to the on-hook of zetteldesk-mode. The primary reason for wanting to define the minor mode was to enable it on startup and have this hook initialise the scratch buffer so I do not have to worry about it. The other reason is that for distributing this as a package I think it makes sense for it to have a minor mode in which I could possibly isolate the keybindings.
   - A function that inserts links to all the POIs in the zetteldesk to the current buffer. The way I have my zettelkasten sorted, my index files have the MOC (map of contents) tag and other important files of a subject have the POI (point of interest) tag. POIs are chosen by opening org-roam UI, blacklisting index files (in my case blacklisting the MOC tag), having a high value for \"Node connections size scale\" and seeing which nodes stand out the most. This is an idea taken from the book How to make a complete map of every thought you think. I use my zettelkasten for university notes and when revisioning its a great tool to be able to insert links to all POIs in some sort of scratch buffer, then sorting them and with that writing an outline of everything in that lesson. In a way, this does function as an outliner tool.
   - A function that prompts for a node inside the zetteldesk and inserts its contents to the zetteldesk-scratch buffer omitting the properties section where the id is stored. As it uses an absolute number for this, it doesn't exactly omit properties if the node has aliases or refs, I could consider trying to fix that, but I do not know how as of now. It also replaces the title keyword with a top level heading. This way you can add any node to your scratch buffer. This is equivalent to taking the note out of the drawer and putting it into your desk, the very first part of what I plan for this tool.
   - A similar function which prompts for org files in the zetteldesk but excluding org-roam files. Its behaviour is a bit different. No links are inserted as they are not needed, no part of the file is truncated as typically the first line is the title, the title is again changed to a top level heading, but as most big org files have some kind of structure to them, I also demote all their headings by 1, as their top level heading will be the title. This is part of an idea I had that this system should integrate with more than org-roam files (albeit that being the main plan) because your notes could also be in other org files.
   - A function that prompts the user to select a pdf that is part of the zetteldesk and a page in that pdf and inserts a link to that pdf, in that page. The link sits under a heading which has a specifically formatted name of the type \"Supplementary Material - name_of_pdf (PDF)\". Also has functionality of inserting the highlighted region of text to the zetteldesk-scratch buffer.

   Only other supportive material for any kind of work/research I could think of is source code files and browser pages. For source code files, it is in my opinion trivial to paste the code into an org mode source code block. I might automate it a bit better in the future, but for now I am not that interested in setting up something like this. For web pages, there really wouldn't be a point in inserting the web page verbatim, but only a link and some notes about it. This is already handled by org-roam protocol and that capture template of mine so if anything I will mention it and prompt to that capture template for what I think it should have. There is also screenshots and MS Office formats I guess but screenshots can be pasted into an org file from the clipboard and therefore require no automation and all MS Office formats aren't that readable in Emacs in the first place so they should be converted to pdf and handled by that imo. 

   #+BEGIN_SRC elisp :tangle zetteldesk.el

     ;; -- *ZETTELDESK-SCRATCH* --
     ;; This is the section where it all comes together. The
     ;; zetteldesk-scratch buffer is a special buffer defined here on which
     ;; you drop all your stuff. Its what molds the whole workflow together

     (defcustom zetteldesk-map (make-sparse-keymap)
       \"This variable is the keymap for `zetteldesk-mode'.\"
       :type 'keymap
       :group 'zetteldesk)

     (defcustom zetteldesk-insert-scratch-or-current-buffer t
       \"Customization variable.
     Decides whethere zetteldesk-insert functions will insert to the
     ,*zetteldesk-scratch* buffer or the current buffer.  Default value
     is t which makes those functions insert to the scratch.  Setting
     it to nil will make those functions insert to the current buffer,
     for whichever usecase you might want\"
       :type 'string
       :group 'zetteldesk)

     (define-minor-mode zetteldesk-mode
       \"Toggles the global zetteldesk-mode.

     When turned on, this mode initialises the *zetteldesk-scratch*
     buffer, a useful part of the whole zetteldesk workflow.\"
       nil
       :global t
       :group 'zetteldesk
       :keymap zetteldesk-map
       :lighter \" zetteldesk\")

     (defun zetteldesk--create-scratch-buffer ()
       \"Create the zetteldesk-scratch buffer and put it in `org-mode'.\"
       (let ((buffer (generate-new-buffer \"*zetteldesk-scratch*\"))
	     (org-startup-with-latex-preview nil))
	 (with-current-buffer buffer
	   (org-mode))))

     (add-hook 'zetteldesk-mode-on-hook 'zetteldesk--create-scratch-buffer)

     (defmacro zetteldesk-insert-location ()
       \"Find the location the zetteldesk-insert functions should insert to.

     The decision is made depending on the variable
     `zetteldesk-insert-scratch-or-current-buffer'.  Check its
     docstring for more info.  This is used in all zetteldesk-insert
     functions to decide if the insertion should happen in
     ,*zetteldesk-scratch or the current buffer.\"
       `(if zetteldesk-insert-scratch-or-current-buffer
		       \"*zetteldesk-scratch*\"
		     (current-buffer)))

     (defmacro zetteldesk-insert-switch-to-scratch (arg)
       \"Switch to the *zetteldesk-scratch* if ARG is the `\\\\[universal-argument]'.

     All the zetteldesk-insert functions have a similar logic of
     switching to the *zetteldesk-scratch* buffer in a split if given
     a `\\\\[universal-argument]'.  To avoid repetition, this macro
     expands to the needed code.\"
       `(when (equal ,arg '(4))
	  (switch-to-buffer-other-window \"*zetteldesk-scratch*\")))

     (defun zetteldesk-switch-to-scratch-buffer (&optional arg)
       \"Open the zetteldesk-scratch buffer in a split with the current buffer.

     Optionally, if given optional argument ARG, which needs to be the
     `\\\\[universal-argument]' switch to the *zetteldesk-scratch*
     buffer without issuing a split.\"
       (interactive \"P\")
       (if (equal arg '(4))
	   (switch-to-buffer \"*zetteldesk-scratch*\")
	 (switch-to-buffer-other-window \"*zetteldesk-scratch*\")))

     (defun zetteldesk-node-insert-if-poi-or-moc ()
       \"Filter `org-roam-node-list' to show zetteldesk-nodes only.
     Then filter that to only those that have the POI or MOC tag with
     `zetteldesk-node-p' and `org-roam-node-poi-or-moc-p'.  Then
     insert a link to every one of those nodes and seperate them with
     commas\"
       (interactive)
       (let* ((init_list (org-roam-node-list))
	      (zetteldesk_nodes (cl-remove-if-not #'zetteldesk-node-p init_list))
	      (nodes_poi (cl-remove-if-not #'org-roam-node-poi-or-moc-p zetteldesk_nodes)))
	 (while nodes_poi
	   (let* ((node (car nodes_poi))
		  (description (org-roam-node-formatted (car nodes_poi))))
	     (insert (org-link-make-string
		      (concat \"id:\" (org-roam-node-id (car nodes_poi)))
		      description))
	     (insert \", \"))
	   (setq nodes_poi (cdr nodes_poi)))))

     (defun zetteldesk-insert-node-contents (&optional arg)
       \"Select a node that is part of the current `zetteldesk'.
     Add a link to it at point and then insert its contents to the
     bottom of the *zetteldesk-scratch* buffer after inserting a
     newline there.  Remove the first 67 characters which is the
     properties section if it only contains the ID of the node as its
     unneeded and change the string #+title to a top level heading as
     its more practical when inserting the contents of multiple files.

     If given the optional argument ARG, which needs to be the
     `\\\\[universal-argument]' also switch to the *zetteldesk-scratch*
     buffer in a split.\"
       (interactive \"P\")
       (let* ((node (org-roam-node-read nil #'zetteldesk-node-p))
	      (file (org-roam-node-file node))
	      (description (org-roam-node-formatted node))
	      (location (zetteldesk-insert-location)))
	 (insert (org-link-make-string
		  (concat \"id:\" (org-roam-node-id node))
		  description))
	 (with-current-buffer location
	   (goto-char (point-max))
	   (newline)
	   (insert-file-contents file nil 67)
	   (replace-string \"#+title: \" \"* \")))
       (zetteldesk-insert-switch-to-scratch arg))

     (defun zetteldesk-insert-node-contents-without-link ()
       \"\\\"Sister function\\\" of `zetteldesk-insert-node-contents'.
     Finds a node that is part of the `zetteldesk' and inserts its
     contents to the bottom of the zetteldesk-scratch buffer. This
     function differentiates itself, by the fact that it doesn't
     insert an ID link to the node in the current buffer and by the
     fact that it switches to the scratch buffer in a split without
     needing a `\\\\[universal-argument]'.

     For me, it makes sense a lot of the time to insert a link to the
     node inthe current buffer, especially if its an outlining
     buffer. But sometimes its not handy, and so, I just made this
     second iteration to fix that issue.\"
       (interactive)
       (let* ((node (org-roam-node-read nil #'zetteldesk-node-p))
	      (location (zetteldesk-insert-location))
	      (file (org-roam-node-file node)))
	 (with-current-buffer location
	   (goto-char (point-max))
	   (newline)
	   (insert-file-contents file nil 67)
	   (replace-string \"#+title: \" \"* \")))
       (switch-to-buffer-other-window \"*zetteldesk-scratch*\"))

     (defun zetteldesk-insert-org-file-contents (&optional arg)
       \"Select an org buffer that is in the `zetteldesk'.
     Insert its contents to the *zetteldesk-scratch* buffer, make its
      title a top level heading and demote all of its headings by one
      level (since the title now acts as a top level heading).  Note
      that org-roam nodes are not shown

     Optional argument ARG, if given needs to be a
     `\\\\[universal-argument]' and it switches to the *zetteldesk-scratch*
     buffer in a split\"
       (interactive \"P\")
       (let* ((buffer (set-buffer (read-buffer \"Zetteldesk Buffers: \" nil nil #'zetteldesk-org-buffer-p)))
	      (location (zetteldesk-insert-location))
	      (file (buffer-file-name buffer)))
	 (set-buffer location)
	 (goto-char (point-max))
	 (save-excursion
	   (newline)
	   (insert-file-contents file))
	 (save-excursion
	   (while (not (org-next-visible-heading 1))
	     (org-metaright)))
	 (replace-string \"#+title: \" \"* \"))
       (zetteldesk-insert-switch-to-scratch arg))

     (defun zetteldesk-insert-link-to-pdf (&optional arg)
       \"Select a pdf file that is part of the `zetteldesk'.
     Prompt for a page in that pdf (defaults to page 1 if you don't
     care about the page).

     Then, in the zetteldesk-scratch buffer, insert at `point-max' a
     newline and then a new heading with its name consisting of the
     string \\\"Supportive Material - \\\" then the pdfs name, without the
     file structure or the extension and then the string
     \\\"(PDF)\\\".  Then, insert a newline, the string \\\"Link to PDF: \\\"
     and then a link to the chosen pdf, in the correct page, with the
     description being the pdfs name without the file structure or the
     extension.  Note that `org-pdftools-setup-link' needs to be run
     for pdf links to work (which this uses).

     Optionally, if given optional argument ARG which is the
     `\\\\[universal-argument]' save the highlighted region in a
     variable and insert it after the heading but before the pdf link.
     This functionality serves the purpose of adding a \\\"description\\\"
     sort of thing to the pdf. Typically, when citing a pdf as
     supplementary info to an argument, there is something specific
     you want to take from the pdf. Therefore, this optional addition,
     adds that to the scratch buffer so you remember why it was
     useful.\"
       (interactive \"P\")
       (let* ((pdf-buffer (set-buffer (read-buffer \"Zetteldesk Pdfs: \" nil nil #'zetteldesk-pdf-p)))
	      (file (buffer-file-name pdf-buffer))
	      (location (zetteldesk-insert-location))
	      (page (read-from-minibuffer \"Page: \" \"1\"))
	      (description (file-name-nondirectory (file-name-sans-extension file))))
	 (with-current-buffer location
	   (goto-char (point-max))
	   (newline)
	   (org-insert-heading)
	   (insert \"Supportive Material - \" description \" (PDF)\")
	   (newline)
	   (when (equal arg '(4))
	     (let ((contents (buffer-substring (mark) (point))))
	       (insert contents)
	       (newline)))
	   (insert \"Link to PDF: \"
		   (org-link-make-string
		    (concat \"pdf:\" file \"::\" page)
		    description)))))


   #+END_SRC

   #+RESULTS:
   : zetteldesk-insert-info-contents

** Org-remark integration
   Org-remark is a package for highlighting parts of a document and creating marginal notes from them. I believe that such a feature is great for an environment such as the zetteldesk-scratch buffer. But as that buffer is not associated to a file, I want to setup better integration between it and zetteldesk.

   Namely, I am mostly looking for two things to work as I want them. Be able to create margin notes from the zetteldesk-scratch buffer without it being associated to a file, by let-binding the value of ~org-remark-notes-file-name~ to an absolute path, probably of the form of org-roam-directory/zetteldesk-margin-notes.org or something. Then, if I decide I want to save this zetteldesk to a file, the margin-notes should be linked there correctly (might happen by default, however I am uncertain).

   Furthermore, I want to make sure the behaviour is as intended when having multiple margin notes from zetteldesks. This heading will tangle to a seperate file which will be a zetteldesk extension.

   #+BEGIN_SRC elisp :tangle zetteldesk-remark.el

     (defun zetteldesk-remark-mark (beg end)
       \"Wrapper for `org-remark-mark'.

     Calls the function with `org-remark-notes-file-name' being set to
     zetteldesk-margin-notes.org in the `org-roam-directory'\"
       (interactive (org-remark-region-or-word))
       (let ((org-remark-notes-file-name
	      (concat org-roam-directory \"zetteldesk-margin-notes.org\")))
	 (org-remark-mark beg end)))

     (defun zetteldesk-remark-highlight-advice
	 (beg end &optional id mode label face properties)
       \"Advice function to be used with `org-remark-highlight-mark'.

     If the current buffer isn't associated to a file, find the
     heading's title, associate it with an org-roam-node and find the
     file associated with that node. Then run the part of
     `org-remark-highlight-save' that wasn't ran if the buffer isn't
     associated with a file. This part is a call to
     `org-remark-highlight-save'.

     This is meant to be used when taking margin notes from the
     ,*zetteldesk-scratch* buffer. However, this will only work if the
     current heading's title is associated with a node. In this case
     org-remark will be able to associate the margin note with the
     node its related to.\"
       (unless buffer-file-name
	 (let* ((title (org-entry-get nil \"ITEM\"))
		(node (org-roam-node-from-title-or-alias title))
		(file (org-roam-node-file node))
		(ov (make-overlay beg end nil :front-advance)))
	   (org-remark-highlight-save file
				      beg end
				      (overlay-properties ov)
				      title))))

     (advice-add 'org-remark-highlight-mark :after #'zetteldesk-remark-highlight-advice)

     (defun zetteldesk-switch-to-margin-notes ()
       \"Helper function which goes to the zetteldesk-margin-notes file.

     If `org-remark-mark' is called through its wrapper function
     `zetteldesk-remark-mark', it sets `org-remark-notes-file-name' to
     a specific file, which is meant to be used with all margin notes
     coming from zetteldesk-scratch. This function switches to that
     file.\"
       (interactive)
       (pop-to-buffer (find-file (concat org-roam-directory \"zetteldesk-margin-notes.org\"))))

   #+END_SRC
     
** Handling notes on articles better
   This section is about zetteldesk-ref, an optional extension of zetteldesk.el. It includes integrationof the zetteldesk with various reference sources such as bibtex entry nodes, which are org-roam nodes, however they need a different behaviour than your typical org-roam node. It also include the info stuff as I decided to make that optional.

*** Preamble
    This is just the intro text that needs to be in the start of the file

    #+BEGIN_SRC elisp :tangle zetteldesk-ref.el
      ;;; zetteldesk-ref.el --- A zetteldesk extension for use with the Info
      ;;; program and literature nodes

      ;; Author: Vidianos Giannitsis <vidianosgiannitsis@gmail.com>
      ;; Maintaner: Vidianos Giannitsis <vidianosgiannitsis@gmail.com>
      ;; URL: https://github.com/Vidianos-Giannitsis/zetteldesk-ref.el
      ;; Package-Requires: ((zetteldesk \"0.2\") (bibtex-completion))
      ;; Created: 27th March 2022
      ;; License: GPL-3.0

      ;; This file is free software; you can redistribute it and/or modify
      ;; it under the terms of the GNU General Public License as published by
      ;; the Free Software Foundation; either version 3, or (at your option)
      ;; any later version.

      ;; This program is distributed in the hope that it will be useful,
      ;; but WITHOUT ANY WARRANTY; without even the implied warranty of
      ;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
      ;; GNU General Public License for more details.

      ;; For a full copy of the GNU General Public License
      ;; see <https://www.gnu.org/licenses/>.

      ;;; Commentary:

      ;; This package provides some optional improvements to
      ;; zetteldesk.el. Specifically it introduces mechanisms for handling
      ;; nodes from the Info program built in to emacs and literature notes
      ;; associated to a bibtex entry which are mostly powered by
      ;; org-noter. This code makes these reference materials interface
      ;; better with the zetteldesk.

      ;;; Code:

      (require 'zetteldesk)
      (require 'bibtex-completion)

    #+END_SRC
    
*** Reference notes from Bibtex Entries
    I have a decent amount of notes that are on scientific articles taken with ~org-noter~. These are org-roam nodes, but they need a special behaviour imo as their formatting isn't similar to that of my permanent notes. Now, gathering these nodes to make a special filter function including only those was an adventure in and of itself. But it was a chance to get more familiarized with common lisp loops, which are a very powerful system.

   #+BEGIN_SRC elisp :tangle zetteldesk-ref.el

     ;; -- Reference Nodes from Bibtex Entries --
     (defun zetteldesk-note-refs-p ()
       \"Predicate function that finds all bibtex completion candidates with a note.

     Checks if every candidate has the \\\"=has-note=\\\" tag using
     `assoc' and if it does, collects that candidate\"
       (cl-loop for ref in (bibtex-completion-candidates)
		if (assoc \"=has-note=\" ref)
		collect ref))

     (defun zetteldesk-citekey-from-refs ()
       \"Function that finds the \\\"=key=\\\" tag from a list of candidates.

     The list is collected with `zetteldesk-note-refs-p' which is a
     list of candidates that have notes. Collects it using `assoc'.\"
       (cl-loop for ref in (zetteldesk-note-refs-p)
		collect (assoc \"=key=\" ref)))

     (defun zetteldesk-node-from-refs ()
       \"Function that collects a list of ref nodes.

     The nodes are collected from their citekey using
     `org-roam-node-from-ref', while the citekeys themselves are
     collected from `zetteldesk-citekey-from-refs'.\"
       (cl-loop for ref in (zetteldesk-citekey-from-refs)
		collect (org-roam-node-from-ref (concat \"cite:\" (cdr ref)))))

     (defun org-roam-node-read--completions* (node-list &optional filter-fn sort-fn)
       \"Runs `org-roam-node-read--completions' with NODE-LIST being a list of nodes.

     Typically, the function takes `org-roam-node-list' as the initial
     list of nodes and creates the alist `org-roam-node-read'
     uses. However, it can be helpful to supply the list of nodes
     yourself, when the predicate function used cannot be inferred
     through a filter function of the form this function
     takes. FILTER-FN and SORT-FN are the same as in
     `org-roam-node-read--completions'. The resulting alist is to be
     used with `org-roam-node-read*'.\"
       (let* ((template (org-roam-node--process-display-format org-roam-node-display-template))
	      (nodes node-list)
	      (nodes (mapcar (lambda (node)
			       (org-roam-node-read--to-candidate node template)) nodes))
	      (nodes (if filter-fn
			 (cl-remove-if-not
			  (lambda (n) (funcall filter-fn (cdr n)))
			  nodes)
		       nodes))
	      (sort-fn (or sort-fn
			   (when org-roam-node-default-sort
			     (intern (concat \"org-roam-node-read-sort-by-\"
					     (symbol-name org-roam-node-default-sort))))))
	      (nodes (if sort-fn (seq-sort sort-fn nodes)
		       nodes)))
	 nodes))

     (defun org-roam-node-read* (node-list &optional initial-input filter-fn sort-fn require-match prompt)
       \"Runs `org-roam-node-read' with the nodes supplied by NODE-LIST.

     NODE-LIST is a list of nodes passed to
     `org-roam-node-read--completions*', which creates an alist of
     nodes with the proper formatting to be used in this
     function. This is for those cases where it is helpful to use your
     own list of nodes, because a predicate function can not filter
     them in the way you want easily.\"
       (let* ((nodes (org-roam-node-read--completions* node-list filter-fn sort-fn))
	      (prompt (or prompt \"Node: \"))
	      (node (completing-read
		     prompt
		     (lambda (string pred action)
		       (if (eq action 'metadata)
			   `(metadata
			     ;; Preserve sorting in the completion UI if a sort-fn is used
			     ,@(when sort-fn
				 '((display-sort-function . identity)
				   (cycle-sort-function . identity)))
			     (annotation-function
			      . ,(lambda (title)
				   (funcall org-roam-node-annotation-function
					    (get-text-property 0 'node title))))
			     (category . org-roam-node))
			 (complete-with-action action nodes string pred)))
		     nil require-match initial-input 'org-roam-node-history)))
	 (or (cdr (assoc node nodes))
	     (org-roam-node-create :title node))))

     (defun zetteldesk-find-ref-node ()
       \"Execute a filtered version of `ivy-bibtex-with-notes'.

     This does not exactly run `ivy-bibtex-with-notes' as that doesn't
     have a way to filter things. It collects a list of nodes which
     are reference nodes linked to a bibtex entry through
     `zetteldesk-node-from-refs' and passes it to
     `org-roam-node-read*' which is a modified version of
     `org-roam-node-read' which takes a list of nodes as an
     argument. Since this required a rewrite of `org-roam-node-read',
     finding the file is done indirectly and not through
     `org-roam-node-file'.\"
       (interactive)
       (find-file (org-roam-node-file (org-roam-node-read* (zetteldesk-node-from-refs) nil #'zetteldesk-node-p))))

     (defun zetteldesk-insert-ref-node-contents (&optional arg)
       \"Select a node that is part of the current `zetteldesk' and a ref node.
     Ref nodes are nodes that refer to reference material such as an
     article. These are gathered with `zetteldesk-node-from-refs' and
     shown to the user through `org-roam-node-read*' filtered
     according to `zetteldesk-node-p'.

     After selection, insert its citekey at point for future
     reference, then in the location determined by
     `zetteldesk-insert-location' (typically *zetteldesk-scratch*), go
     to `point-max', insert a newline and then insert the contents of
     the selected node but remove the first 4 lines which is the
     unneeded property drawer. After, indent all headings by one level
     and replace the #+title: with an asterisk. Finally, enter a
     newline after the title, where the string \\\"Bibtex entry for
     node: \\\" is entered suffixed by the citekey of the entry.

     If given the optional argument ARG, which needs to be the
     `\\\\[universal-argument]' also switch to the *zetteldesk-scratch*
     buffer in a split.\"
       (interactive \"P\")
       (let* ((node
	       (org-roam-node-read* (zetteldesk-node-from-refs) nil #'zetteldesk-node-p))
	      (file (org-roam-node-file node))
	      (location (zetteldesk-insert-location))
	      (citekey (concat \"cite:\" (car (org-roam-node-refs node)))))
	 (insert citekey)
	 (set-buffer location)
	 (goto-char (point-max))
	 (save-excursion
	   (insert-file-contents file))
	 (kill-whole-line 4)
	 (newline)
	 (save-excursion
	   (while (not (org-next-visible-heading 1))
	     (org-metaright)))
	 (replace-string \"#+title: \" \"* \")
	 (end-of-line 1)
	 (newline)
	 (insert \"Bibtex entry for node: \"
		 citekey))
       (zetteldesk-insert-switch-to-scratch arg))

   #+END_SRC

   #+RESULTS:
   : zetteldesk-insert-ref-node-contents

*** Info Nodes
    The info buffer is a single persistent buffer. Therefore, the typical things done in the zetteldesk don't work here. This section is an attempt to fix this and use info nodes together with zetteldesk. There is a function that gives the nodes name in a format that all other Info functions accept. I use that function and add the nodes selected to a variable. The rest of the functions, choose something from that list with completing-read and that is how this system works. For example, the removing mechanisms works by using remove with its argument being the output of the completing-read. The insertion function is a function that prompts the user to select an info buffer that is part of the zetteldesk and inserts its contents to the zetteldesk-scratch buffer under a similarly to above formatted heading. Furthermore, it inserts a link to the info node so you can see it in its context. 

    #+BEGIN_SRC elisp :tangle zetteldesk-ref.el

      ;; -- Info Nodes --
      (defcustom zetteldesk-info-nodes '()
	\"List of info nodes that are part of the zetteldesk.
      Initialised as an empty list\"
	:type 'list
	:group 'zetteldesk)

      (defun zetteldesk-add-info-node-to-desktop ()
	\"Find the current info-node.
      Then add its name to the list of the variable
      `zetteldesk-info-nodes'\"
	(interactive)
	(add-to-list 'zetteldesk-info-nodes (Info-copy-current-node-name)))

      (defun zetteldesk-remove-info-node-from-desktop ()
	\"Remove an info-node from the `zetteldesk'.
      The node is selected through a `completing-read' menu of
      `zetteldesk-info-nodes'\"
	(interactive)
	(setq zetteldesk-info-nodes (remove
				     (completing-read \"Info Nodes: \" zetteldesk-info-nodes)
				     zetteldesk-info-nodes)))

      (defun zetteldesk-info-goto-node ()
	\"Zetteldesk filter function for `Info-goto-node'.

      Prompts the user to select a node from the list
      `zetteldesk-info-nodes' and jumps to that node\"
	(interactive)
	(Info-goto-node (completing-read \"Nodes: \" zetteldesk-info-nodes)))

      (defun zetteldesk-insert-info-contents (&optional arg)
	\"Select an info node that is part of the current `zetteldesk'.
      Uses a `completing-read' prompt for the selection.

      Then, in the *zetteldesk-scratch* buffer, go to the end of the
      buffer, insert a newline and a heading of the form \\\"Supportive
      Material - \\\" the node's name \\\"(Info)\\\" akin to what is done in
      `zetteldesk-insert-link-to-pdf'.  Then, insert the contents of the
      chosen info node, removing the first 2 lines which have the
      contextual links of the buffer, as they are not functional
      outside of the info buffer.  Also insert a link with the title
      \\\"See this node in its context\\\" which opens the node inside the
      info program. Finally, restore the buffer from which this
      function was called. Ideally, this wouldn't require a
      switch-to-buffer statement, but the function `Info-goto-node'
      used for this function switches the visible buffer to the info
      node and I couldn't find an alternative that only makes it
      current for editing operations, but doesn't change the visible
      buffer to it.

      I find the link to the actual info buffer is useful as a lot of
      the time, you might want to insert the buffer so you can store it
      with other useful information inside the zetteldesk-scratch
      buffer, but then, you are interested in looking into the other
      nodes of the manual you were reading.

      Optional argument ARG which is a `\\\\[universal-argument]' switch to the
      zetteldesk-scratch buffer in a split.\"
	(interactive \"P\")
	(let ((info_node (completing-read \"Nodes: \" zetteldesk-info-nodes))
	      (location (zetteldesk-insert-location))
	      (buffer (current-buffer)))
	  (Info-goto-node info_node)
	  (with-current-buffer location
	    (goto-char (point-max))
	    (newline)
	    (org-insert-heading)
	    (insert \"Supportive Material - \" info_node \" (Info)\")
	    (newline)
	    (save-excursion (insert-buffer-substring \"*info*\")
			    (insert
			     (org-link-make-string
			      (concat \"elisp:(Info-goto-node \\\"\" info_node \"\\\")\")
			      \"See this node in its context\")))
	    (kill-whole-line 2))
	  (switch-to-buffer buffer)
	  (zetteldesk-insert-switch-to-scratch arg)))

    #+END_SRC

*** COMMENT Adding the keybindings to the hydra
For my package zetteldesk.el, I define some keybindings in the file zetteldesk-kb.el. As I do not use these keybindings myself (I prefer the evil-styled ones that suit my config better tbh) that file is never loaded in my config, therefore this should also not be loaded. However, as I often play around with the code here and not in the zetteldesk directory I want to have this here for copy-paste-ability.

#+BEGIN_SRC elisp :tangle zetteldesk-ref.el
  ;; Add keybindings for this package in the default hydra

  (pretty-hydra-define+ zetteldesk-add-hydra ()
    (\"Other\"
     ((\"i\" zetteldesk-add-info-node-to-desktop \"Add Info Node\"))))

  (pretty-hydra-define+ zetteldesk-remove-hydra ()
    (\"Other\"
     ((\"i\" zetteldesk-remove-info-node-from-desktop \"Remove Info Node\"))))

  (pretty-hydra-define+ zetteldesk-insert-hydra ()
    (\"Org-Roam\"
     ((\"r\" zetteldesk-insert-ref-node-contents \"Link to citekey and Node Contents in *zetteldesk-scratch with special formatting\"))

     \"Supplementary Material to *zetteldesk-scratch*\"
     ((\"I\" zetteldesk-insert-info-contents \"Info Node Contents + Link to context\"))))

  (pretty-hydra-define+ zetteldesk-main-hydra ()
    (\"Filter Functions\"
     ((\"I\" zetteldesk-info-goto-node \"Go to Zetteldesk Info Node\")
      (\"l\" zetteldesk-find-ref-node \"Go to Zetteldesk Literature Node\"))))

#+END_SRC

* Providing the packages to be loaded in init.el
#+BEGIN_SRC elisp :tangle zetteldesk.el

  (provide 'zetteldesk)
  ;;; zetteldesk.el ends here

#+END_SRC
  
#+BEGIN_SRC elisp :tangle zetteldesk-ref.el

  (provide 'zetteldesk-ref)
  ;;; zetteldesk-ref.el ends here

#+END_SRC
" 0 1 (fontified t) 1 2 (fontified t face (org-superstar-header-bullet org-level-1) composition (1 1 [9673])) 2 3 (fontified t face org-level-1) 3 55 (fontified t face org-level-1) 55 377 (fontified t) 377 537 (fontified t) 537 1037 (fontified t) 1037 1756 (fontified t) 1756 2022 (fontified t) 2022 2023 (fontified t face org-hide) 2023 2024 (fontified t face (org-superstar-header-bullet org-level-2) composition (2 1 [9675])) 2024 2025 (fontified t face org-level-2) 2025 2036 (fontified t face org-level-2) 2036 2175 (fontified t) 2175 2217 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 2217 2218 (fontified t font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line) 2218 2224 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2224 2228 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2228 2256 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 2256 2289 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 2289 2295 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2295 2298 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2298 2357 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 2357 2362 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2362 2365 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2365 2427 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 2427 2432 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2432 2435 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2435 2440 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 2440 2491 (fontified t font-lock-fontified t help-echo nil src-block t mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) htmlize-link (:uri "https://github.com/Vidianos-Giannitsis/zetteldesk.el") font-lock-multiline t face (font-lock-comment-face org-block)) 2491 2492 (fontified t font-lock-fontified t help-echo nil src-block t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) htmlize-link (:uri "https://github.com/Vidianos-Giannitsis/zetteldesk.el") font-lock-multiline t face (font-lock-comment-face org-block)) 2492 2493 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 2493 2498 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2498 2501 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2501 2538 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 2538 2543 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2543 2546 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2546 2585 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 2585 2590 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2590 2593 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2593 2620 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 2620 2625 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2625 2628 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2628 2645 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 2645 2650 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2650 2653 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2653 2696 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 2696 2701 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2701 2704 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2704 2717 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 2717 2723 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2723 2726 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2726 2792 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 2792 2797 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2797 2800 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2800 2869 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 2869 2874 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2874 2877 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2877 2945 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 2945 2950 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2950 2953 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2953 2972 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 2972 2978 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2978 2981 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2981 3045 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3045 3050 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3050 3053 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3053 3116 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3116 3121 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3121 3124 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3124 3186 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3186 3191 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3191 3194 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3194 3239 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3239 3245 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3245 3248 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3248 3298 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3298 3303 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3303 3306 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3306 3310 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3310 3340 (fontified t font-lock-fontified t help-echo nil src-block t mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) htmlize-link (:uri "https://www.gnu.org/licenses/") font-lock-multiline t face (font-lock-comment-face org-block)) 3340 3341 (fontified t font-lock-fontified t help-echo nil src-block t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) htmlize-link (:uri "https://www.gnu.org/licenses/") font-lock-multiline t face (font-lock-comment-face org-block)) 3341 3343 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3343 3349 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3349 3353 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3353 3365 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3365 3371 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3371 3374 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3374 3440 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3440 3445 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3445 3448 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3448 3513 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3513 3518 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3518 3521 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3521 3580 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3580 3585 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3585 3588 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3588 3657 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3657 3662 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3662 3665 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3665 3731 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3731 3736 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3736 3739 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3739 3778 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3778 3784 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3784 3788 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3788 3794 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3794 3806 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line) 3806 3807 (fontified t face org-block-end-line) 3807 3811 (fontified t) 3811 3812 (fontified t face org-hide) 3812 3813 (fontified t face (org-superstar-header-bullet org-level-2) composition (2 1 [9675])) 3813 3814 (fontified t face org-level-2) 3814 3826 (fontified t face org-level-2) 3826 4186 (fontified t) 4186 4228 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 4228 4229 (fontified t font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line) 4229 4235 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4235 4238 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4238 4257 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 4257 4262 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4262 4265 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4265 4294 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 4294 4333 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 4333 4338 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4338 4341 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4341 4393 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 4393 4400 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4400 4407 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4407 4409 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4409 4417 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 4417 4426 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4426 4438 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4438 4439 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4439 4459 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 4459 4490 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4490 4574 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4574 4583 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4583 4586 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4586 4660 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4660 4672 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4672 4673 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4673 4708 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 4708 4734 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4734 4815 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4815 4843 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4843 4950 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4950 4981 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4981 4983 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4983 4987 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4987 4991 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4991 5035 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5035 5042 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 5042 5077 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5077 5082 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 5082 5100 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5100 5106 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 5106 5131 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5131 5135 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 5135 5144 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5144 5148 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5148 5207 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5207 5212 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5212 5213 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5213 5239 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 5239 5254 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5254 5323 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5323 5332 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5332 5334 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5334 5381 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5381 5386 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5386 5438 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5438 5443 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5443 5454 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5454 5459 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5459 5460 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5460 5483 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 5483 5494 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5494 5633 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5633 5655 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 5655 5708 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5708 5731 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 5731 5790 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 5790 5819 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5819 5826 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 5826 5844 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5844 5849 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 5849 5859 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5859 5865 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 5865 5882 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5882 5886 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 5886 5895 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5895 5899 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5899 5956 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5956 5961 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5961 5962 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5962 5986 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 5986 6001 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6001 6007 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6007 6030 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 6030 6054 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6054 6076 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 6076 6139 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6139 6161 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 6161 6249 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6249 6267 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 6267 6302 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6302 6316 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 6316 6318 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6318 6352 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6352 6359 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 6359 6382 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6382 6387 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 6387 6402 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6402 6408 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 6408 6430 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6430 6434 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 6434 6443 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6443 6447 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 6447 6489 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6489 6494 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6494 6495 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6495 6526 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 6526 6562 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6562 6720 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6720 6751 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 6751 6763 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6763 6800 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 6800 6870 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6870 6907 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 6907 6909 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 6909 6918 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6918 6921 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6921 7092 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 7092 7104 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line) 7104 7105 (fontified t face org-block-end-line) 7105 7109 (fontified t) 7109 7110 (fontified t face org-hide) 7110 7111 (fontified t face (org-superstar-header-bullet org-level-2) composition (2 1 [9675])) 7111 7112 (fontified t face org-level-2) 7112 7131 (fontified t face org-level-2) 7131 7592 (fontified t) 7592 8003 (fontified t) 8003 8004 (fontified t) 8004 8043 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 8043 8044 (fontified t font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line) 8044 8047 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8047 8050 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 8050 8076 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 8076 8078 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8078 8081 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 8081 8149 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 8149 8151 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8151 8154 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 8154 8219 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 8219 8221 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8221 8224 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 8224 8290 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 8290 8292 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8292 8295 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 8295 8315 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 8315 8319 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8319 8328 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8328 8329 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8329 8339 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 8339 8344 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8344 8353 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8353 8358 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8358 8503 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 8503 8615 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 8615 8620 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8620 8625 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 8625 8638 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8638 8644 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 8644 8661 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8661 8667 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 8667 8675 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8675 8680 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8680 8681 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8681 8693 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 8693 8707 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8707 8748 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 8748 8758 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 8758 8761 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 8761 8856 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8856 8861 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8861 8862 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8862 8881 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 8881 8895 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8895 8936 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 8936 8946 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 8946 9060 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 9060 9078 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 9078 9218 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 9218 9245 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 9245 9247 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 9247 9253 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9253 9256 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 9256 9324 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9324 9329 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 9329 9330 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9330 9347 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 9347 9359 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9359 9468 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 9468 9478 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 9478 9566 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 9566 9586 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 9586 9619 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 9619 9637 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 9637 9639 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 9639 9645 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9645 9647 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 9647 9793 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9793 9801 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 9801 9802 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9802 9826 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 9826 9845 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9845 9878 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 9878 9888 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 9888 9993 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 9993 10004 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 10004 10026 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 10026 10049 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 10049 10071 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 10071 10106 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 10106 10147 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 10147 10158 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 10158 10211 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 10211 10218 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10218 10221 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 10221 10319 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10319 10324 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 10324 10325 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10325 10348 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 10348 10362 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10362 10403 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 10403 10413 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 10413 10542 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 10542 10577 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 10577 10620 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 10620 10651 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 10651 10748 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 10748 10754 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10754 10778 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 10778 10802 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10802 10807 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 10807 10808 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10808 10824 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 10824 10838 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10838 10879 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 10879 10889 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 10889 10912 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 10912 10918 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10918 10942 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 10942 10968 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 10968 10977 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line) 10977 10978 (fontified t face org-block-end-line) 10978 10979 (fontified t) 10979 10989 (fontified t font-lock-fontified t face org-meta-line) 10989 10990 (fontified t) 10990 11015 (fontified t face org-code) 11015 11016 (fontified t) 11016 11017 (fontified t face org-hide) 11017 11018 (fontified t face (org-superstar-header-bullet org-level-2) composition (2 1 [9675])) 11018 11019 (fontified t face org-level-2) 11019 11063 (fontified t face org-level-2) 11063 11468 (fontified t) 11468 11510 (fontified t) 11510 11515 (fontified t) 11515 11556 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 11556 11557 (fontified t font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line) 11557 11562 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11562 11565 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 11565 11607 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 11607 11611 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11611 11614 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 11614 11680 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 11680 11684 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11684 11687 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 11687 11751 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 11751 11755 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11755 11758 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 11758 11823 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 11823 11827 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11827 11830 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 11830 11888 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 11888 11894 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11894 11902 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 11902 11903 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11903 11925 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 11925 11941 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11941 11969 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 11969 11978 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 11978 12010 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 12010 12158 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 12158 12183 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 12183 12307 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 12307 12316 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 12316 12335 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12335 12348 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 12348 12358 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12358 12370 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 12370 12375 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 12375 12385 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 12385 12390 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12390 12391 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 12391 12416 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 12416 12432 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 12432 12460 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 12460 12470 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 12470 12473 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 12473 12481 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 12481 12492 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12492 12493 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 12493 12496 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 12496 12505 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 12505 12527 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12527 12543 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 12543 12548 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12548 12549 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 12549 12579 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 12579 12593 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 12593 12611 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 12611 12621 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 12621 12725 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 12725 12743 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 12743 12745 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 12745 12753 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 12753 12764 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12764 12801 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 12801 12804 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12804 12928 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 12928 12930 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12930 12959 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 12959 12981 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12981 12994 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 12994 13016 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 13016 13053 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13053 13058 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 13058 13059 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13059 13104 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 13104 13114 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13114 13243 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 13243 13269 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 13269 13272 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 13272 13306 (fontified t font-lock-fontified t help-echo "Hidden behind deeper element; move to another line?" src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 13306 13400 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 13400 13408 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13408 13419 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 13419 13428 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13428 13432 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 13432 13654 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13654 13660 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 13660 13676 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13676 13680 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 13680 13797 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13797 13802 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 13802 13803 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13803 13838 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 13838 13848 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13848 13902 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 13902 13912 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 13912 14017 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 14017 14040 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14040 14162 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 14162 14172 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14172 14174 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 14174 14182 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14182 14193 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 14193 14202 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14202 14212 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 14212 14224 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14224 14229 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 14229 14238 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14238 14241 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 14241 14335 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14335 14342 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 14342 14366 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14366 14370 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 14370 14545 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14545 14547 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 14547 14573 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14573 14595 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 14595 14612 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14612 14634 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 14634 14673 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14673 14681 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 14681 14682 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14682 14707 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 14707 14723 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14723 14756 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 14756 14766 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14766 14889 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 14889 14911 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14911 14972 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 14972 14981 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14981 15000 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 15000 15053 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15053 15058 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 15058 15059 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15059 15089 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 15089 15105 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15105 15138 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 15138 15148 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 15148 15151 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 15151 15159 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15159 15170 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 15170 15171 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15171 15174 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 15174 15183 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15183 15208 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 15208 15224 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15224 15229 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 15229 15230 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15230 15265 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 15265 15279 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15279 15302 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 15302 15312 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 15312 15369 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 15369 15387 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 15387 15389 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 15389 15397 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15397 15408 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 15408 15469 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15469 15472 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 15472 15514 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15514 15539 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 15539 15556 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15556 15561 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 15561 15562 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15562 15602 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 15602 15612 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15612 15630 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 15630 15640 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 15640 15737 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 15737 15772 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 15772 15841 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 15841 15849 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15849 15860 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 15860 15909 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15909 15912 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 15912 15964 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15964 15971 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 15971 15995 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15995 15999 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 15999 16137 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 16137 16143 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 16143 16168 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 16168 16193 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 16193 16209 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 16209 16221 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line) 16221 16222 (fontified t face org-block-end-line) 16222 16223 (fontified t) 16223 16235 (fontified t font-lock-fontified t face org-meta-line) 16235 16238 (fontified t) 16238 16281 (fontified t face org-code) 16281 16285 (fontified t) 16285 16286 (fontified t face org-hide) 16286 16287 (fontified t face (org-superstar-header-bullet org-level-2) composition (2 1 [9675])) 16287 16288 (fontified t face org-level-2) 16288 16304 (fontified t face org-level-2) 16304 16709 (fontified t) 16709 16725 (fontified t) 16725 16726 (fontified t) 16726 16768 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 16768 16769 (fontified t font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line) 16769 16775 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 16775 16778 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 16778 16801 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 16801 16806 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 16806 16809 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 16809 16876 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 16876 16881 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 16881 16884 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 16884 16927 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 16927 16934 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 16934 16939 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 16939 16940 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 16940 16967 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 16967 16978 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 16978 16999 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 16999 17015 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 17015 17049 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 17049 17068 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 17068 17126 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 17126 17136 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 17136 17152 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 17152 17165 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 17165 17169 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 17169 17178 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 17178 17189 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 17189 17225 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 17225 17229 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 17229 17251 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 17251 17292 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 17292 17297 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 17297 17298 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 17298 17318 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 17318 17329 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 17329 17350 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 17350 17368 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 17368 17402 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 17402 17419 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 17419 17475 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 17475 17485 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 17485 17487 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 17487 17496 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 17496 17507 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 17507 17573 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 17573 17578 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 17578 17579 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 17579 17601 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 17601 17612 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 17612 17633 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 17633 17653 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 17653 17687 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 17687 17704 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 17704 17760 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 17760 17770 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 17770 17772 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 17772 17781 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 17781 17792 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 17792 17852 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 17852 17857 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 17857 17858 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 17858 17895 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 17895 17906 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 17906 17980 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 17980 17998 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 17998 18184 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 18184 18204 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 18204 18220 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 18220 18238 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 18238 18440 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 18440 18476 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 18476 18542 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 18542 18551 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 18551 18562 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 18562 18572 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 18572 18576 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 18576 18797 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 18797 18802 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 18802 18829 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 18829 18841 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line) 18841 18842 (fontified t face org-block-end-line) 18842 18847 (fontified t) 18847 18848 (fontified t face org-hide) 18848 18849 (fontified t face (org-superstar-header-bullet org-level-2) composition (2 1 [9675])) 18849 18850 (fontified t face org-level-2) 18850 18882 (fontified t face org-level-2) 18882 19329 (fontified t) 19329 19741 (fontified t) 19741 19742 (fontified t composition (0 1 [8211]) face org-superstar-item) 19742 19795 (fontified t) 19795 19796 (fontified t composition (0 1 [8211]) face org-superstar-item) 19796 19829 (fontified t) 19829 20245 (fontified t) 20245 20248 (fontified t) 20248 20249 (fontified t composition (0 1 [8211]) face org-superstar-item) 20249 20745 (fontified t) 20745 21078 (fontified t) 21078 21081 (fontified t) 21081 21082 (fontified t composition (0 1 [8211]) face org-superstar-item) 21082 21578 (fontified t) 21578 21684 (fontified t) 21684 21687 (fontified t) 21687 21688 (fontified t composition (0 1 [8211]) face org-superstar-item) 21688 22184 (fontified t) 22184 22319 (fontified t) 22319 22322 (fontified t) 22322 22323 (fontified t composition (0 1 [8211]) face org-superstar-item) 22323 22819 (fontified t) 22819 23649 (fontified t) 23649 23650 (fontified t) 23650 23692 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 23692 23693 (fontified t font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line) 23693 23699 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 23699 23702 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 23702 23705 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 23705 23706 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-comment-face org-block)) 23706 23724 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-comment-face org-block)) 23724 23725 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-comment-face org-block)) 23725 23729 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 23729 23734 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 23734 23737 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 23737 23790 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 23790 23795 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 23795 23798 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 23798 23866 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 23866 23871 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 23871 23874 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 23874 23942 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 23942 23949 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 23949 23958 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 23958 23959 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 23959 23973 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 23973 24002 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 24002 24036 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 24036 24051 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 24051 24054 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 24054 24062 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 24062 24067 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 24067 24083 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 24083 24089 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 24089 24110 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 24110 24119 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 24119 24120 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 24120 24149 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 24149 24163 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 24163 24173 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 24173 24522 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 24522 24530 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 24530 24535 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 24535 24551 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 24551 24557 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 24557 24578 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 24578 24595 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 24595 24596 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 24596 24611 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 24611 24619 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 24619 24704 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 24704 24705 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 24705 24723 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 24723 24724 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 24724 24786 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 24786 24805 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 24805 24812 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 24812 24822 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 24822 24828 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 24828 24848 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 24848 24855 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 24855 24878 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 24878 24886 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 24886 24887 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 24887 24900 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 24900 24909 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 24909 24914 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 24914 24915 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 24915 24948 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 24948 24959 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 24959 25012 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 25012 25020 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 25020 25023 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 25023 25032 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 25032 25035 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 25035 25066 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 25066 25067 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 25067 25068 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 25068 25086 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 25086 25087 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 25087 25088 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 25088 25138 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 25138 25157 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 25157 25267 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 25267 25275 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 25275 25276 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 25276 25302 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 25302 25313 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 25313 25441 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 25441 25484 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 25484 25675 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 25675 25685 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 25685 25687 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 25687 25741 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 25741 25742 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 25742 25743 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 25743 25761 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 25761 25762 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 25762 25763 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 25763 25797 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 25797 25805 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 25805 25806 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 25806 25841 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 25841 25855 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 25855 25870 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 25870 25871 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 25871 25889 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 25889 25890 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 25890 25909 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 25909 25927 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 25927 26019 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 26019 26020 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 26020 26038 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 26038 26039 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 26039 26078 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 26078 26096 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 26096 26166 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 26166 26176 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 26176 26180 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 26180 26233 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 26233 26234 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 26234 26235 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 26235 26253 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 26253 26254 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 26254 26255 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 26255 26266 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 26266 26271 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 26271 26272 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 26272 26307 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 26307 26309 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 26309 26318 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 26318 26331 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 26331 26484 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 26484 26502 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 26502 26519 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 26519 26520 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 26520 26538 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 26538 26539 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 26539 26577 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 26577 26586 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 26586 26597 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 26597 26598 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 26598 26601 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 26601 26611 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 26611 26613 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 26613 26653 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 26653 26654 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 26654 26655 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 26655 26673 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 26673 26674 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 26674 26675 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 26675 26710 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 26710 26711 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 26711 26712 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 26712 26730 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 26730 26731 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 26731 26732 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 26732 26743 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 26743 26748 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 26748 26749 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 26749 26785 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 26785 26796 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 26796 26805 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 26805 26823 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 26823 26932 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 26932 26949 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 26949 26956 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 26956 26982 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 26982 27073 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 27073 27082 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 27082 27093 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 27093 27103 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 27103 27107 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 27107 27305 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 27305 27310 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 27310 27326 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 27326 27330 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 27330 27468 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 27468 27473 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 27473 27546 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 27546 27550 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 27550 27558 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 27558 27562 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 27562 27600 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 27600 27605 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 27605 27606 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 27606 27637 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 27637 27639 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 27639 27648 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 27648 27661 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 27661 27705 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 27705 27715 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 27715 27804 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 27804 27805 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 27805 27823 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 27823 27824 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 27824 28199 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 28199 28217 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 28217 28239 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 28239 28240 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 28240 28258 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 28258 28259 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 28259 28284 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 28284 28293 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 28293 28304 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 28304 28305 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 28305 28308 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 28308 28318 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 28318 28322 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 28322 28486 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 28486 28512 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 28512 28560 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 28560 28565 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 28565 28612 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 28612 28631 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 28631 28742 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 28742 28753 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 28753 28754 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 28754 28758 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 28758 28770 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 28770 28805 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 28805 28819 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 28819 28824 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 28824 28825 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 28825 28869 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 28869 28880 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 28880 28905 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 28905 28936 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 28936 28978 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 28978 28988 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 28988 29293 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 29293 29311 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 29311 29557 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 29557 29566 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 29566 29577 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 29577 29587 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 29587 29591 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 29591 29663 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 29663 29689 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 29689 29736 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 29736 29755 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 29755 29866 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 29866 29877 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 29877 29878 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 29878 29882 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 29882 29924 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 29924 29925 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 29925 29926 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 29926 29944 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 29944 29945 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 29945 29946 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 29946 29956 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 29956 29961 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 29961 29962 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 29962 29997 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 29997 29999 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 29999 30008 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 30008 30021 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 30021 30059 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 30059 30069 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 30069 30104 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 30104 30105 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 30105 30123 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 30123 30124 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 30124 30382 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 30382 30400 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 30400 30426 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 30426 30427 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 30427 30445 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 30445 30446 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 30446 30470 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 30470 30479 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 30479 30490 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 30490 30491 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 30491 30494 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 30494 30504 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 30504 30508 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 30508 30543 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 30543 30565 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 30565 30621 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 30621 30647 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 30647 30744 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 30744 30758 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 30758 30809 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 30809 30823 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 30823 30829 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 30829 30834 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 30834 30912 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 30912 30923 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 30923 30924 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 30924 30928 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 30928 30939 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 30939 30974 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 30974 30988 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 30988 30993 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 30993 30994 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 30994 31023 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 31023 31025 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 31025 31034 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 31034 31047 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 31047 31087 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 31087 31097 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 31097 31193 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 31193 31194 (fontified t font-lock-fontified t help-echo "Hidden behind deeper element; move to another line?" src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 31194 31252 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 31252 31261 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 31261 31700 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 31700 31723 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 31723 31858 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 31858 31876 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 31876 32333 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 32333 32342 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 32342 32353 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 32353 32354 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 32354 32357 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 32357 32367 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 32367 32371 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 32371 32410 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 32410 32429 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 32429 32522 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 32522 32548 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 32548 32586 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 32586 32594 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 32594 32595 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 32595 32598 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 32598 32683 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 32683 32702 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 32702 32791 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 32791 32815 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 32815 32828 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 32828 32836 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 32836 32857 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 32857 32861 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 32861 32886 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 32886 32889 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 32889 32995 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 32995 33010 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 33010 33052 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 33052 33058 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 33058 33064 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 33064 33068 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 33068 33100 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 33100 33112 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line) 33112 33113 (fontified t face org-block-end-line) 33113 33114 (fontified t) 33114 33127 (fontified t font-lock-fontified t face org-meta-line) 33127 33131 (fontified t) 33131 33165 (fontified t face org-code) 33165 33166 (fontified t) 33166 33167 (fontified t face org-hide) 33167 33168 (fontified t face (org-superstar-header-bullet org-level-2) composition (2 1 [9675])) 33168 33169 (fontified t face org-level-2) 33169 33191 (fontified t face org-level-2) 33191 33600 (fontified t) 33600 33706 (fontified t) 33706 33707 (fontified t font-lock-multiline t org-emphasis t invisible t) 33707 33733 (fontified t face (org-code) font-lock-multiline t org-emphasis t) 33733 33734 (fontified t font-lock-multiline t org-emphasis t invisible t) 33734 34002 (fontified t) 34002 34203 (fontified t) 34203 34252 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 34252 34253 (fontified t font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line) 34253 34260 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 34260 34265 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 34265 34266 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 34266 34288 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 34288 34306 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 34306 34320 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 34320 34335 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 34335 34369 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 34369 34395 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 34395 34451 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 34451 34469 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 34469 34471 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 34471 34480 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 34480 34491 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 34491 34502 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 34502 34529 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 34529 34532 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 34532 34596 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 34596 34625 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 34625 34666 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 34666 34671 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 34671 34672 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 34672 34706 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 34706 34718 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 34718 34727 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 34727 34766 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 34766 34800 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 34800 34825 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 34825 35027 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 35027 35052 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 35052 35148 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 35148 35173 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 35173 35474 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 35474 35483 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 35483 35489 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 35489 35510 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 35510 35514 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 35514 35542 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 35542 35548 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 35548 35669 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 35669 35683 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 35683 35840 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 35840 35846 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 35846 35892 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 35892 35897 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 35897 35898 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 35898 35931 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 35931 35942 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 35942 36017 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 36017 36032 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 36032 36079 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 36079 36101 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 36101 36113 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 36113 36139 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 36139 36293 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 36293 36302 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 36302 36313 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 36313 36375 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 36375 36404 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 36404 36410 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 36410 36422 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line) 36422 36423 (fontified t face org-block-end-line) 36423 36429 (fontified t) 36429 36430 (fontified t face org-hide) 36430 36431 (fontified t face (org-superstar-header-bullet org-level-2) composition (2 1 [9675])) 36431 36432 (fontified t face org-level-2) 36432 36465 (fontified t face org-level-2) 36465 36814 (fontified t) 36814 36816 (fontified t face org-hide) 36816 36817 (fontified t face (org-superstar-header-bullet org-level-3) composition (3 1 [10040])) 36817 36818 (fontified t face org-level-3) 36818 36826 (fontified t face org-level-3) 36826 36902 (fontified t) 36902 36910 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 36910 36949 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 36949 36950 (fontified t font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line) 36950 36956 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 36956 36960 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 36960 37027 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 37027 37033 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 37033 37037 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 37037 37066 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 37066 37073 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 37073 37076 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 37076 37135 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 37135 37141 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 37141 37144 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 37144 37206 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 37206 37212 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 37212 37215 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 37215 37220 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 37220 37275 (fontified t font-lock-fontified t help-echo nil src-block t mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) htmlize-link (:uri "https://github.com/Vidianos-Giannitsis/zetteldesk-ref.el") font-lock-multiline t face (font-lock-comment-face org-block)) 37275 37276 (fontified t font-lock-fontified t help-echo nil src-block t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) htmlize-link (:uri "https://github.com/Vidianos-Giannitsis/zetteldesk-ref.el") font-lock-multiline t face (font-lock-comment-face org-block)) 37276 37277 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 37277 37283 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 37283 37286 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 37286 37345 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 37345 37351 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 37351 37354 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 37354 37379 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 37379 37385 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 37385 37388 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 37388 37405 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 37405 37412 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 37412 37415 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 37415 37481 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 37481 37487 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 37487 37490 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 37490 37559 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 37559 37565 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 37565 37568 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 37568 37636 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 37636 37642 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 37642 37645 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 37645 37664 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 37664 37671 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 37671 37674 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 37674 37738 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 37738 37744 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 37744 37747 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 37747 37810 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 37810 37816 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 37816 37819 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 37819 37881 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 37881 37887 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 37887 37890 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 37890 37935 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 37935 37942 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 37942 37945 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 37945 37995 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 37995 38001 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 38001 38004 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 38004 38008 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 38008 38038 (fontified t font-lock-fontified t help-echo nil src-block t mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) htmlize-link (:uri "https://www.gnu.org/licenses/") font-lock-multiline t face (font-lock-comment-face org-block)) 38038 38039 (fontified t font-lock-fontified t help-echo nil src-block t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) htmlize-link (:uri "https://www.gnu.org/licenses/") font-lock-multiline t face (font-lock-comment-face org-block)) 38039 38041 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 38041 38048 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 38048 38052 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 38052 38064 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 38064 38071 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 38071 38074 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 38074 38126 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 38126 38132 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 38132 38135 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 38135 38201 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 38201 38207 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 38207 38210 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 38210 38277 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 38277 38283 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 38283 38286 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 38286 38343 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 38343 38349 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 38349 38352 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 38352 38415 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 38415 38421 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 38421 38424 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 38424 38452 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 38452 38459 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 38459 38463 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 38463 38469 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 38469 38477 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 38477 38484 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 38484 38486 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 38486 38496 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 38496 38505 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 38505 38512 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 38512 38514 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 38514 38531 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 38531 38534 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 38534 38547 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line) 38547 38548 (fontified t face org-block-end-line) 38548 38553 (fontified t) 38553 38555 (fontified t face org-hide) 38555 38556 (fontified t face (org-superstar-header-bullet org-level-3) composition (3 1 [10040])) 38556 38557 (fontified t face org-level-3) 38557 38592 (fontified t face org-level-3) 38592 38672 (fontified t) 38672 38673 (fontified t font-lock-multiline t org-emphasis t invisible t) 38673 38682 (fontified t face (org-code) font-lock-multiline t org-emphasis t) 38682 38683 (fontified t font-lock-multiline t org-emphasis t invisible t) 38683 39034 (fontified t) 39034 39035 (fontified t) 39035 39081 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 39081 39082 (fontified t font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line) 39082 39088 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 39088 39091 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 39091 39133 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 39133 39139 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 39139 39144 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 39144 39145 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 39145 39167 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 39167 39178 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 39178 39297 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 39297 39298 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 39298 39306 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 39306 39307 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 39307 39326 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 39326 39331 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 39331 39373 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 39373 39382 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 39382 39389 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 39389 39444 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 39444 39445 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 39445 39446 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 39446 39454 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 39454 39455 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 39455 39456 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 39456 39485 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 39485 39490 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 39490 39491 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 39491 39519 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 39519 39530 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 39530 39534 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 39534 39557 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 39557 39558 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 39558 39561 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 39561 39562 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 39562 39630 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 39630 39652 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 39652 39725 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 39725 39730 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 39730 39733 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 39733 39742 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 39742 39749 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 39749 39803 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 39803 39804 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 39804 39805 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 39805 39808 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 39808 39809 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 39809 39810 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 39810 39825 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 39825 39830 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 39830 39831 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 39831 39856 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 39856 39867 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 39867 39973 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 39973 39995 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 39995 40053 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 40053 40081 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 40081 40084 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 40084 40093 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 40093 40100 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 40100 40185 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 40185 40192 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 40192 40214 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 40214 40219 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 40219 40220 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 40220 40252 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 40252 40264 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 40264 40273 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 40273 40300 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 40300 40307 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 40307 40338 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 40338 40415 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 40415 40433 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 40433 40492 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 40492 40510 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 40510 40761 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 40761 40792 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 40792 40840 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 40840 40859 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 40859 40862 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 40862 40871 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 40871 40875 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 40875 41007 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 41007 41013 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 41013 41081 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 41081 41088 (fontified t font-lock-fontified t help-echo "Hidden behind deeper element; move to another line?" src-block t font-lock-multiline t face (font-lock-warning-face org-block)) 41088 41104 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 41104 41106 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 41106 41145 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 41145 41151 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 41151 41231 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 41231 41233 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 41233 41249 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 41249 41253 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 41253 41305 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 41305 41334 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 41334 41406 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 41406 41408 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 41408 41477 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 41477 41482 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 41482 41483 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 41483 41502 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 41502 41514 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 41514 41523 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 41523 41585 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 41585 41592 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 41592 41610 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 41610 41701 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 41701 41733 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 41733 41996 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 41996 42005 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 42005 42009 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 42009 42098 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 42098 42100 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 42100 42108 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 42108 42116 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 42116 42171 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 42171 42177 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 42177 42209 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 42209 42211 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 42211 42259 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 42259 42262 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 42262 42321 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 42321 42332 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 42332 42336 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 42336 42471 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 42471 42477 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 42477 42740 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 42740 42742 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 42742 42796 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 42796 42802 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 42802 42819 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 42819 42824 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 42824 42825 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 42825 42849 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 42849 42860 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 42860 42892 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 42892 42913 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 42913 42949 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 42949 42970 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 42970 43120 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 43120 43145 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 43145 43170 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 43170 43189 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 43189 43228 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 43228 43246 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 43246 43331 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 43331 43349 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 43349 43415 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 43415 43433 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 43433 43436 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 43436 43445 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 43445 43456 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 43456 43580 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 43580 43585 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 43585 43586 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 43586 43621 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 43621 43623 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 43623 43632 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 43632 43645 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 43645 43689 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 43689 43699 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 43699 43825 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 43825 43850 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 43850 43888 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 43888 43907 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 43907 43937 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 43937 43954 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 43954 44076 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 44076 44102 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 44102 44115 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 44115 44116 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 44116 44134 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 44134 44135 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 44135 44150 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 44150 44159 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 44159 44614 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 44614 44632 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 44632 44654 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 44654 44655 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 44655 44673 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 44673 44674 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 44674 44699 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 44699 44708 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 44708 44719 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 44719 44720 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 44720 44723 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 44723 44733 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 44733 44737 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 44737 44886 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 44886 44912 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 44912 44939 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 44939 44946 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 44946 45054 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 45054 45068 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 45068 45139 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 45139 45153 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 45153 45159 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 45159 45164 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 45164 45242 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 45242 45253 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 45253 45254 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 45254 45258 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 45258 45300 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 45300 45325 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 45325 45347 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 45347 45382 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 45382 45390 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 45390 45402 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line) 45402 45403 (fontified t face org-block-end-line) 45403 45404 (fontified t) 45404 45417 (fontified t font-lock-fontified t face org-meta-line) 45417 45421 (fontified t) 45421 45459 (fontified t face org-code) 45459 45460 (fontified t) 45460 45462 (fontified t face org-hide) 45462 45463 (fontified t face (org-superstar-header-bullet org-level-3) composition (3 1 [10040])) 45463 45464 (fontified t face org-level-3) 45464 45474 (fontified t face org-level-3) 45474 45890 (fontified t) 45890 46373 (fontified t) 46373 46374 (fontified t) 46374 46421 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 46421 46422 (fontified t font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line) 46422 46429 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 46429 46432 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 46432 46449 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 46449 46456 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 46456 46465 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 46465 46466 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 46466 46487 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 46487 46493 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 46493 46581 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 46581 46583 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 46583 46588 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 46588 46596 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 46596 46602 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 46602 46624 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 46624 46629 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 46629 46630 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 46630 46665 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 46665 46670 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 46670 46758 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 46758 46779 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 46779 46781 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 46781 46784 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 46784 46795 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 46795 46873 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 46873 46874 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 46874 46879 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 46879 46880 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 46880 46920 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 46920 46925 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 46925 46956 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 46956 46966 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 46966 47007 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 47007 47022 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 47022 47039 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 47039 47060 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 47060 47062 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 47062 47065 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 47065 47076 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 47076 47080 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 47080 47084 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 47084 47141 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 47141 47155 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 47155 47221 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 47221 47226 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 47226 47227 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 47227 47252 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 47252 47257 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 47257 47290 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 47290 47304 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 47304 47369 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 47369 47390 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 47390 47415 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 47415 47418 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 47418 47429 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 47429 47465 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 47465 47474 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 47474 47508 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 47508 47513 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 47513 47514 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 47514 47545 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 47545 47547 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 47547 47556 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 47556 47563 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 47563 47613 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 47613 47623 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 47623 47640 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 47640 47655 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 47655 47703 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 47703 47704 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 47704 47722 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 47722 47723 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 47723 47901 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 47901 47930 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 47930 48414 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 48414 48428 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 48428 49019 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 49019 49037 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 49037 49098 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 49098 49101 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 49101 49112 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 49112 49113 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 49113 49116 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 49116 49120 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 49120 49123 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 49123 49153 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 49153 49162 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 49162 49205 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 49205 49231 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 49231 49302 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 49302 49321 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 49321 49414 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 49414 49438 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 49438 49449 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 49449 49458 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 49458 49481 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 49481 49495 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 49495 49521 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 49521 49522 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 49522 49523 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 49523 49527 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 49527 49528 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 49528 49529 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 49529 49593 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 49593 49619 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 49619 49630 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 49630 49635 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 49635 49646 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 49646 49676 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 49676 49739 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 49739 49774 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 49774 49783 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 49783 49796 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line) 49796 49797 (fontified t face org-block-end-line) 49797 49798 (fontified t) 49798 49800 (fontified t face org-hide) 49800 49801 (fontified t face (org-superstar-header-bullet org-level-3) composition (3 1 [10040])) 49801 49802 (fontified t face org-level-3) 49802 49809 (fontified t face org-special-keyword) 49809 49845 (fontified t face org-level-3) 49845 50255 (fontified t) 50255 50283 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 50283 50298 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 50298 50299 (fontified t font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line) 50299 50301 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 50301 50304 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 50304 50358 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 50358 50362 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 50362 50382 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 50382 50412 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 50412 50419 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 50419 50427 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 50427 50430 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 50430 50467 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 50467 50482 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 50482 50491 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 50491 50511 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 50511 50544 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 50544 50551 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 50551 50559 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 50559 50562 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 50562 50604 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 50604 50622 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 50622 50631 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 50631 50651 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 50651 50684 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 50684 50694 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 50694 50702 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 50702 50705 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 50705 50742 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 50742 50824 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 50824 50833 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 50833 50860 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 50860 50861 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 50861 50879 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 50879 50880 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 50880 50881 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 50881 50889 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 50889 50892 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 50892 50925 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 50925 50963 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 50963 50972 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 50972 50992 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 50992 51023 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 51023 51041 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 51041 51049 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 51049 51052 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 51052 51079 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 51079 51107 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 51107 51116 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 51116 51119 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 51119 51145 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 51145 51179 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 51179 51185 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 51185 51194 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line) 51194 51195 (fontified t face org-block-end-line) 51195 51196 (fontified t) 51196 51197 (fontified t face (org-superstar-header-bullet org-level-1) composition (1 1 [9673])) 51197 51198 (fontified t face org-level-1) 51198 51244 (fontified t face org-level-1) 51244 51245 (fontified t) 51245 51284 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 51284 51285 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line help-echo nil) 51285 51289 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 51289 51296 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 51296 51298 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 51298 51308 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face org-block) help-echo nil src-block t) 51308 51312 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 51312 51316 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 51316 51340 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 51340 51341 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 51341 51350 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line) 51350 51351 (fontified t face org-block-end-line) 51351 51354 (fontified t) 51354 51397 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 51397 51398 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line help-echo nil) 51398 51402 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 51402 51409 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 51409 51411 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 51411 51425 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face org-block) help-echo nil src-block t) 51425 51429 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 51429 51433 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 51433 51461 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 51461 51462 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 51462 51471 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line) 51471 51472 (fontified t face org-block-end-line)) . 29949) (undo-tree-id48 . -51471) (undo-tree-id49 . -51471) (undo-tree-id50 . -50627) (undo-tree-id51 . -51471) (undo-tree-id52 . -51471) (undo-tree-id53 . -51472) (undo-tree-id54 . -66) (undo-tree-id55 . -66) (undo-tree-id56 . -66) (undo-tree-id57 . -66) (undo-tree-id58 . -66) (undo-tree-id59 . -66) (undo-tree-id60 . -66) (undo-tree-id61 . -66) (undo-tree-id62 . -66) (undo-tree-id63 . -66) (undo-tree-id64 . -152) (undo-tree-id65 . -152) (undo-tree-id66 . -152) (undo-tree-id67 . -152) (undo-tree-id68 . -152) (undo-tree-id69 . -152) (undo-tree-id70 . -152) (undo-tree-id71 . -152) (undo-tree-id72 . -152) (undo-tree-id73 . -152) (undo-tree-id74 . -537) (undo-tree-id75 . -537) (undo-tree-id76 . -537) (undo-tree-id77 . -537) (undo-tree-id78 . -537) (undo-tree-id79 . -654) (undo-tree-id80 . -654) (undo-tree-id81 . -654) (undo-tree-id82 . -654) (undo-tree-id83 . -654) (undo-tree-id84 . -654) (undo-tree-id85 . -654) (undo-tree-id86 . -654) (undo-tree-id87 . -654) (undo-tree-id88 . -654) (undo-tree-id89 . -654) (undo-tree-id90 . -654) (undo-tree-id91 . -654) (undo-tree-id92 . -654) (undo-tree-id93 . -654) (undo-tree-id94 . -655) (undo-tree-id95 . -655) (undo-tree-id96 . -655) (undo-tree-id97 . -655) (undo-tree-id98 . -655) (undo-tree-id99 . -655) (undo-tree-id100 . -655) (undo-tree-id101 . -655) (undo-tree-id102 . -655) (undo-tree-id103 . -655) (undo-tree-id104 . -740) (undo-tree-id105 . -740) (undo-tree-id106 . -740) (undo-tree-id107 . -740) (undo-tree-id108 . -740) (undo-tree-id109 . -740) (undo-tree-id110 . -740) (undo-tree-id111 . -740) (undo-tree-id112 . -740) (undo-tree-id113 . -740) (undo-tree-id114 . -740) (undo-tree-id115 . -740) (undo-tree-id116 . -136) (undo-tree-id117 . -136) (undo-tree-id118 . -136) (undo-tree-id119 . -136) (undo-tree-id120 . -136) (undo-tree-id121 . -136) (undo-tree-id122 . -136) (undo-tree-id123 . -136) (undo-tree-id124 . -136) (undo-tree-id125 . -136) (undo-tree-id126 . -136) (undo-tree-id127 . -136) (undo-tree-id128 . -136) (undo-tree-id129 . -136) (undo-tree-id130 . -136) (undo-tree-id131 . -870) (undo-tree-id132 . -870) (undo-tree-id133 . -870) (undo-tree-id134 . -870) (undo-tree-id135 . -870) (undo-tree-id136 . -870) (undo-tree-id137 . -870) (undo-tree-id138 . -870) (undo-tree-id139 . -870) (undo-tree-id140 . -870) (undo-tree-id141 . -870) (undo-tree-id142 . -870) (undo-tree-id143 . -870) (undo-tree-id144 . -870) (undo-tree-id145 . -870) (undo-tree-id146 . -1842) (undo-tree-id147 . -1842) (undo-tree-id148 . -1842) (undo-tree-id149 . -1842) (undo-tree-id150 . -1842) (undo-tree-id151 . -1842) (undo-tree-id152 . -1842) (undo-tree-id153 . -1842) (undo-tree-id154 . -1842) (undo-tree-id155 . -1842) (undo-tree-id156 . -1842) (undo-tree-id157 . -1842) (undo-tree-id158 . -1842) (undo-tree-id159 . -1842) (undo-tree-id160 . -1842) (undo-tree-id161 . -1842) (undo-tree-id162 . -1842) (undo-tree-id163 . -1842) (undo-tree-id164 . -1842) (undo-tree-id165 . -1842) (undo-tree-id166 . -1842) (undo-tree-id167 . -1842) (undo-tree-id168 . -1842) (undo-tree-id169 . -1842) (undo-tree-id170 . -1842) (undo-tree-id171 . -2696) (undo-tree-id172 . -2696) (undo-tree-id173 . -2696) (undo-tree-id174 . -2696) (undo-tree-id175 . -2696) (undo-tree-id176 . -2696) (undo-tree-id177 . -2696) (undo-tree-id178 . -2696) (undo-tree-id179 . -2696) (undo-tree-id180 . -2696) (undo-tree-id181 . -2696) (undo-tree-id182 . -2696) (undo-tree-id183 . -2696) (undo-tree-id184 . -2696) (undo-tree-id185 . -2696) (undo-tree-id186 . -3794) (undo-tree-id187 . -3794) (undo-tree-id188 . -3794) (undo-tree-id189 . -3794) (undo-tree-id190 . -3794) (undo-tree-id191 . -3794) (undo-tree-id192 . -3794) (undo-tree-id193 . -3794) (undo-tree-id194 . -5025) (undo-tree-id195 . -5025) (undo-tree-id196 . -5025) (undo-tree-id197 . -5025) (undo-tree-id198 . -5025) (undo-tree-id199 . -5025) (undo-tree-id200 . -5025) (undo-tree-id201 . -5025) (undo-tree-id202 . -5025) (undo-tree-id203 . -5025) (undo-tree-id204 . -5025) (undo-tree-id205 . -5025) (undo-tree-id206 . -5025) (undo-tree-id207 . -5025) (undo-tree-id208 . -5025) (undo-tree-id209 . -6394) (undo-tree-id210 . -6394) (undo-tree-id211 . -6394) (undo-tree-id212 . -6394) (undo-tree-id213 . -6394) (undo-tree-id214 . -6394) (undo-tree-id215 . -6394) (undo-tree-id216 . -6394) (undo-tree-id217 . -6394) (undo-tree-id218 . -6394) (undo-tree-id219 . -6394) (undo-tree-id220 . -6394) (undo-tree-id221 . -6394) (undo-tree-id222 . -6394) (undo-tree-id223 . -6394) (undo-tree-id224 . -8340) (undo-tree-id225 . -8340) (undo-tree-id226 . -8340) (undo-tree-id227 . -8340) (undo-tree-id228 . -8340) (undo-tree-id229 . -8340) (undo-tree-id230 . -8340) (undo-tree-id231 . -8340) (undo-tree-id232 . -8340) (undo-tree-id233 . -8340) (undo-tree-id234 . -8340) (undo-tree-id235 . -8340) (undo-tree-id236 . -8340) (undo-tree-id237 . -8340) (undo-tree-id238 . -8340) (undo-tree-id239 . -10131) (undo-tree-id240 . -10131) (undo-tree-id241 . -10131) (undo-tree-id242 . -10131) (undo-tree-id243 . -10131) (undo-tree-id244 . -10131) (undo-tree-id245 . -10131) (undo-tree-id246 . -10131) (undo-tree-id247 . -12220) (undo-tree-id248 . -12220) (undo-tree-id249 . -12220) (undo-tree-id250 . -12220) (undo-tree-id251 . -12220) (undo-tree-id252 . -12220) (undo-tree-id253 . -12220) (undo-tree-id254 . -12220) (undo-tree-id255 . -12220) (undo-tree-id256 . -12220) (undo-tree-id257 . -12220) (undo-tree-id258 . -12220) (undo-tree-id259 . -12220) (undo-tree-id260 . -12220) (undo-tree-id261 . -12220) (undo-tree-id262 . -14570) (undo-tree-id263 . -14570) (undo-tree-id264 . -14570) (undo-tree-id265 . -14570) (undo-tree-id266 . -14570) (undo-tree-id267 . -14570) (undo-tree-id268 . -14570) (undo-tree-id269 . -14570) (undo-tree-id270 . -14570) (undo-tree-id271 . -14570) (undo-tree-id272 . -14570) (undo-tree-id273 . -14570) (undo-tree-id274 . -14570) (undo-tree-id275 . -14570) (undo-tree-id276 . -14570) (undo-tree-id277 . -11515) (undo-tree-id278 . -16209) (undo-tree-id279 . -16801) (undo-tree-id280 . -16801) (undo-tree-id281 . -16801) (undo-tree-id282 . -16801) (undo-tree-id283 . -16801) (undo-tree-id284 . -16801) (undo-tree-id285 . -16801) (undo-tree-id286 . -16801) (undo-tree-id287 . -16801) (undo-tree-id288 . -16801) (undo-tree-id289 . -16801) (undo-tree-id290 . -16801) (undo-tree-id291 . -16801) (undo-tree-id292 . -16801) (undo-tree-id293 . -16801) (undo-tree-id294 . -16726) (undo-tree-id295 . -18829) (undo-tree-id296 . -19702) (undo-tree-id297 . -19702) (undo-tree-id298 . -19702) (undo-tree-id299 . -19702) (undo-tree-id300 . -19702) (undo-tree-id301 . -19702) (undo-tree-id302 . -19702) (undo-tree-id303 . -19702) (undo-tree-id304 . -19702) (undo-tree-id305 . -19702) (undo-tree-id306 . -19702) (undo-tree-id307 . -19702) (undo-tree-id308 . -19702) (undo-tree-id309 . -19702) (undo-tree-id310 . -19702) (undo-tree-id311 . -24339) (undo-tree-id312 . -24339) (undo-tree-id313 . -24339) (undo-tree-id314 . -24339) (undo-tree-id315 . -24339) (undo-tree-id316 . -24339) (undo-tree-id317 . -24339) (undo-tree-id318 . -24339) (undo-tree-id319 . -27510) (undo-tree-id320 . -27510) (undo-tree-id321 . -27510) (undo-tree-id322 . -27510) (undo-tree-id323 . -27510) (undo-tree-id324 . -27510) (undo-tree-id325 . -27510) (undo-tree-id326 . -27510) (undo-tree-id327 . -30981) (undo-tree-id328 . -30981) (undo-tree-id329 . -30981) (undo-tree-id330 . -30981) (undo-tree-id331 . -30981) (undo-tree-id332 . -30981) (undo-tree-id333 . -30981) (undo-tree-id334 . -30981) (undo-tree-id335 . -23650) (undo-tree-id336 . -33100) (undo-tree-id337 . -34759) (undo-tree-id338 . -34759) (undo-tree-id339 . -34759) (undo-tree-id340 . -34759) (undo-tree-id341 . -34759) (undo-tree-id342 . -34759) (undo-tree-id343 . -34759) (undo-tree-id344 . -34759) (undo-tree-id345 . -34203) (undo-tree-id346 . -36410) (undo-tree-id347 . -36902) (undo-tree-id348 . -38534) (undo-tree-id349 . -38548) (undo-tree-id350 . -38548) (undo-tree-id351 . -38548) (undo-tree-id352 . -38548) (undo-tree-id353 . -38548) (undo-tree-id354 . -38548) (undo-tree-id355 . -38548) (undo-tree-id356 . -38548) (undo-tree-id357 . -38548) (undo-tree-id358 . -38548) (undo-tree-id359 . -38548) (undo-tree-id360 . -38548) (undo-tree-id361 . -38548) (undo-tree-id362 . -38548) (undo-tree-id363 . -38548) (undo-tree-id364 . -38841) (undo-tree-id365 . -38841) (undo-tree-id366 . -38841) (undo-tree-id367 . -38841) (undo-tree-id368 . -38841) (undo-tree-id369 . -38841) (undo-tree-id370 . -38841) (undo-tree-id371 . -38841) (undo-tree-id372 . -38841) (undo-tree-id373 . -38841) (undo-tree-id374 . -38841) (undo-tree-id375 . -38841) (undo-tree-id376 . -38841) (undo-tree-id377 . -38841) (undo-tree-id378 . -38841) (undo-tree-id379 . -39256) (undo-tree-id380 . -39256) (undo-tree-id381 . -39256) (undo-tree-id382 . -39256) (undo-tree-id383 . -39256) (undo-tree-id384 . -39256) (undo-tree-id385 . -39256) (undo-tree-id386 . -39256) (undo-tree-id387 . -39860) (undo-tree-id388 . -39860) (undo-tree-id389 . -39860) (undo-tree-id390 . -39860) (undo-tree-id391 . -39860) (undo-tree-id392 . -39860) (undo-tree-id393 . -39860) (undo-tree-id394 . -39860) (undo-tree-id395 . -40926) (undo-tree-id396 . -40926) (undo-tree-id397 . -40926) (undo-tree-id398 . -40926) (undo-tree-id399 . -40926) (undo-tree-id400 . -40926) (undo-tree-id401 . -40926) (undo-tree-id402 . -40926) (undo-tree-id403 . -41762) (undo-tree-id404 . -41762) (undo-tree-id405 . -41762) (undo-tree-id406 . -41762) (undo-tree-id407 . -41762) (undo-tree-id408 . -41762) (undo-tree-id409 . -41762) (undo-tree-id410 . -41762) (undo-tree-id411 . -42988) (undo-tree-id412 . -42988) (undo-tree-id413 . -42988) (undo-tree-id414 . -42988) (undo-tree-id415 . -42988) (undo-tree-id416 . -42988) (undo-tree-id417 . -42988) (undo-tree-id418 . -42988) (undo-tree-id419 . -44806) (undo-tree-id420 . -44806) (undo-tree-id421 . -44806) (undo-tree-id422 . -44806) (undo-tree-id423 . -39035) (undo-tree-id424 . -45390) (undo-tree-id425 . -44806) (undo-tree-id426 . -44806) (undo-tree-id427 . -44806) (undo-tree-id428 . -44806) (undo-tree-id429 . -44806) (undo-tree-id430 . -44806) (undo-tree-id431 . -44806) (undo-tree-id432 . -44806) (undo-tree-id433 . -44806) (undo-tree-id434 . -44806) (undo-tree-id435 . -44806) (undo-tree-id436 . -44806) (undo-tree-id437 . -44806) (undo-tree-id438 . -44806) (undo-tree-id439 . -44806) (undo-tree-id440 . -44806) (undo-tree-id441 . -46422) (undo-tree-id442 . -46422) (undo-tree-id443 . -46422) (undo-tree-id444 . -46422) (undo-tree-id445 . -46422) (undo-tree-id446 . -46422) (undo-tree-id447 . -46422) (undo-tree-id448 . -46422) (undo-tree-id449 . -46422) (undo-tree-id450 . -46422) (undo-tree-id451 . -46422) (undo-tree-id452 . -46422) (undo-tree-id453 . -46422) (undo-tree-id454 . -46422) (undo-tree-id455 . -46422) (undo-tree-id456 . -48238) (undo-tree-id457 . -48238) (undo-tree-id458 . -48238) (undo-tree-id459 . -48238) (undo-tree-id460 . -48238) (undo-tree-id461 . -48238) (undo-tree-id462 . -48238) (undo-tree-id463 . -48238) (undo-tree-id464 . -46374) (undo-tree-id465 . -49783) (undo-tree-id466 . -50407) (undo-tree-id467 . -50407) (undo-tree-id468 . -50407) (undo-tree-id469 . -50255) (undo-tree-id470 . -51185) (undo-tree-id471 . -50407) (undo-tree-id472 . -50407) (undo-tree-id473 . -50407) (undo-tree-id474 . -50407) (undo-tree-id475 . -50407) (undo-tree-id476 . -50407) (undo-tree-id477 . -50407) (undo-tree-id478 . -50407) (undo-tree-id479 . -50407) (undo-tree-id480 . -50407) (undo-tree-id481 . -51472) (undo-tree-id482 . -51472) (undo-tree-id483 . -51472) (undo-tree-id484 . -51472) (undo-tree-id485 . -51472) (undo-tree-id486 . -51472) (undo-tree-id487 . -51472) (undo-tree-id488 . -51472) (undo-tree-id489 . -51472) (undo-tree-id490 . -51472) (undo-tree-id491 . -51472) (undo-tree-id492 . -51472) (undo-tree-id493 . -51472) (undo-tree-id494 . -51472) (undo-tree-id495 . -51472) (undo-tree-id496 . -51472) (undo-tree-id497 . -51472) (undo-tree-id498 . -51472) (undo-tree-id499 . -51472) (undo-tree-id500 . -51472) (undo-tree-id501 . -51472) (undo-tree-id502 . -51472) (undo-tree-id503 . -51472) (undo-tree-id504 . -51472) (undo-tree-id505 . -51472) (undo-tree-id506 . -51472) (undo-tree-id507 . -51472) (undo-tree-id508 . -51472) (undo-tree-id509 . -51472) (undo-tree-id510 . -51472) (undo-tree-id511 . -51472) (undo-tree-id512 . -51472) (undo-tree-id513 . -51472) (undo-tree-id514 . -51472) (undo-tree-id515 . -51472) (undo-tree-id516 . -51472) (undo-tree-id517 . -51472) (undo-tree-id518 . -51472) (undo-tree-id519 . -51472) (undo-tree-id520 . -51472) (undo-tree-id521 . -51472) (undo-tree-id522 . -51472) (undo-tree-id523 . -51472) (undo-tree-id524 . -51472) (undo-tree-id525 . -51472) (undo-tree-id526 . -51472) (undo-tree-id527 . -51472) (undo-tree-id528 . -51472) (undo-tree-id529 . -51472) (undo-tree-id530 . -51472) (undo-tree-id531 . -51472) (undo-tree-id532 . -51472) (undo-tree-id533 . -51472) (undo-tree-id534 . -51472) (undo-tree-id535 . -51472) (undo-tree-id536 . -51472) (undo-tree-id537 . -51472) (undo-tree-id538 . -51472) (undo-tree-id539 . -51472) (undo-tree-id540 . -51472) (undo-tree-id541 . -51472) (undo-tree-id542 . -51472) (undo-tree-id543 . -51472) (undo-tree-id544 . -51472) (undo-tree-id545 . -51472) (undo-tree-id546 . -51472) (undo-tree-id547 . -51472) (undo-tree-id548 . -51472) (undo-tree-id549 . -51472) (undo-tree-id550 . -51472) (undo-tree-id551 . -51472) (undo-tree-id552 . -51472) (undo-tree-id553 . -51472) (undo-tree-id554 . -51472) (undo-tree-id555 . -51472) (undo-tree-id556 . -51472) (undo-tree-id557 . -51472) (undo-tree-id558 . -51472) (undo-tree-id559 . -51472) (undo-tree-id560 . -51472) (undo-tree-id561 . -51472) (undo-tree-id562 . -51472) (undo-tree-id563 . -51472) (undo-tree-id564 . -51472) (undo-tree-id565 . -51472) (undo-tree-id566 . -51472) (undo-tree-id567 . -51472) (undo-tree-id568 . -51472) (undo-tree-id569 . -51472) (undo-tree-id570 . -51472) (undo-tree-id571 . -51472) (undo-tree-id572 . -51472) (undo-tree-id573 . -51472) (undo-tree-id574 . -51472) (undo-tree-id575 . -51472) (undo-tree-id576 . -51472) (undo-tree-id577 . -51472) (undo-tree-id578 . -51472) (undo-tree-id579 . -51472) (undo-tree-id580 . -51472) (undo-tree-id581 . -51472) (undo-tree-id582 . -51472) (undo-tree-id583 . -51472) (undo-tree-id584 . -51472) (undo-tree-id585 . -51472) (undo-tree-id586 . -51472) (undo-tree-id587 . -51472) (undo-tree-id588 . -51472) (undo-tree-id589 . -51472) (undo-tree-id590 . -51472) (undo-tree-id591 . -51472) (undo-tree-id592 . -51472) (undo-tree-id593 . -51472) (undo-tree-id594 . -51472) (undo-tree-id595 . -51472) (undo-tree-id596 . -51472) (undo-tree-id597 . -51472) (undo-tree-id598 . -51472) (undo-tree-id599 . -51472) (undo-tree-id600 . -51472) (undo-tree-id601 . -51472) (undo-tree-id602 . -51472) (undo-tree-id603 . -51472) (undo-tree-id604 . -51472) (undo-tree-id605 . -51472) (undo-tree-id606 . -51472) (undo-tree-id607 . -51472) (undo-tree-id608 . -51472) (undo-tree-id609 . -51472) (undo-tree-id610 . -51472) (undo-tree-id611 . -51472) (undo-tree-id612 . -51398) (undo-tree-id613 . -51472) (undo-tree-id614 . -51472) (undo-tree-id615 . -51472) (undo-tree-id616 . -51472) (undo-tree-id617 . -51472) (undo-tree-id618 . -51472) (undo-tree-id619 . -51472) (undo-tree-id620 . -51472) (undo-tree-id621 . -51472) (undo-tree-id622 . -51472) (undo-tree-id623 . -51472) (undo-tree-id624 . -51472) (undo-tree-id625 . -51472) (undo-tree-id626 . -51472) (undo-tree-id627 . -51195) (undo-tree-id628 . -51472) (undo-tree-id629 . -51472) (undo-tree-id630 . -51472) (undo-tree-id631 . -51472) (undo-tree-id632 . -51472) (undo-tree-id633 . -51472) (undo-tree-id634 . -51472) (undo-tree-id635 . -51472) (undo-tree-id636 . -51472) (undo-tree-id637 . -51472) (undo-tree-id638 . -51472) (undo-tree-id639 . -51472) (undo-tree-id640 . -51472) (undo-tree-id641 . -51472) (undo-tree-id642 . -50627) (undo-tree-id643 . -51472) (undo-tree-id644 . -51472) (undo-tree-id645 . -51472) (undo-tree-id646 . -51472) (undo-tree-id647 . -51472) (undo-tree-id648 . -51472) (undo-tree-id649 . -51472) (undo-tree-id650 . -51471) (undo-tree-id651 . -51472) (undo-tree-id652 . -50627) (undo-tree-id653 . -51471) (undo-tree-id654 . -51471) (undo-tree-id655 . -51471) (undo-tree-id656 . -51471) (undo-tree-id657 . -51471) (undo-tree-id658 . -51471) 81420 (t 25157 64762 650318 51000)) nil (25163 17397 493006 692000) 0 nil])
([nil nil ((nil rear-nonsticky nil 29949 . 29950) (#("
" 0 1 (fontified nil)) . -29998) (29949 . 29999)) nil (25163 17397 483940 788000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . 29949) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1)) nil (25163 17397 483934 712000) 0 nil])
([nil nil ((949 . 1585) (#("- [[#org-roam-general-setup][Org-Roam general setup]]
- [[#useful-functions][Useful Functions]]
- [[#acting-on-backlinks][Acting on backlinks]]
- [[#bibtex-completion-ivy-and-org-ref][Bibtex completion (Ivy) and Org-Ref]]
- [[#org-roam-bibtex-protocols-reference-notes-and-ui-graphing-capabilities][Org Roam Bibtex, Protocols (Reference notes) and UI (graphing capabilities)]]
- [[#fleeting-notes][Fleeting notes]]
- [[#capture-templates][Capture Templates]]
- [[#implementing-the-zettelkasten-desktop-to-org-roam][Implementing the Zettelkasten \"desktop\" to org-roam]]
  - [[#dependencies][Dependencies]]
  - [[#predicate-functions][Predicate Functions]]
  - [[#adding-and-removing-things-in-the-zetteldesk][Adding and Removing things in the Zetteldesk]]
  - [[#filter-functions][Filter functions]]
  - [[#on-the-zetteldesk-scratch-buffer][On the zetteldesk-scratch buffer]]
  - [[#providing-the-package][Providing the package]]
- [[#providing-the-package-to-be-loaded-in-initel][Providing the package to be loaded in init.el]]
" 0 1 (fontified t composition (0 1 [8211]) face org-superstar-item) 1 2 (fontified t) 2 28 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #org-roam-general-setup" htmlize-link (:uri "#org-roam-general-setup") font-lock-multiline t face org-link) 28 29 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #org-roam-general-setup" htmlize-link (:uri "#org-roam-general-setup") font-lock-multiline t face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 29 50 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #org-roam-general-setup" htmlize-link (:uri "#org-roam-general-setup") font-lock-multiline t) 50 51 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #org-roam-general-setup" htmlize-link (:uri "#org-roam-general-setup") font-lock-multiline t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 51 52 (fontified t face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #org-roam-general-setup" htmlize-link (:uri "#org-roam-general-setup") font-lock-multiline t) 52 53 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #org-roam-general-setup" htmlize-link (:uri "#org-roam-general-setup") font-lock-multiline t) 53 54 (fontified t) 54 55 (fontified t composition (0 1 [8211]) face org-superstar-item) 55 56 (fontified t) 56 76 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #useful-functions" htmlize-link (:uri "#useful-functions") font-lock-multiline t face org-link) 76 77 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #useful-functions" htmlize-link (:uri "#useful-functions") font-lock-multiline t face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 77 92 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #useful-functions" htmlize-link (:uri "#useful-functions") font-lock-multiline t) 92 93 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #useful-functions" htmlize-link (:uri "#useful-functions") font-lock-multiline t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 93 94 (fontified t face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #useful-functions" htmlize-link (:uri "#useful-functions") font-lock-multiline t) 94 95 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #useful-functions" htmlize-link (:uri "#useful-functions") font-lock-multiline t) 95 96 (fontified t) 96 97 (fontified t composition (0 1 [8211]) face org-superstar-item) 97 98 (fontified t) 98 121 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #acting-on-backlinks" htmlize-link (:uri "#acting-on-backlinks") font-lock-multiline t face org-link) 121 122 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #acting-on-backlinks" htmlize-link (:uri "#acting-on-backlinks") font-lock-multiline t face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 122 140 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #acting-on-backlinks" htmlize-link (:uri "#acting-on-backlinks") font-lock-multiline t) 140 141 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #acting-on-backlinks" htmlize-link (:uri "#acting-on-backlinks") font-lock-multiline t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 141 142 (fontified t face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #acting-on-backlinks" htmlize-link (:uri "#acting-on-backlinks") font-lock-multiline t) 142 143 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #acting-on-backlinks" htmlize-link (:uri "#acting-on-backlinks") font-lock-multiline t) 143 144 (fontified t) 144 145 (fontified t composition (0 1 [8211]) face org-superstar-item) 145 146 (fontified t) 146 183 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #bibtex-completion-ivy-and-org-ref" htmlize-link (:uri "#bibtex-completion-ivy-and-org-ref") font-lock-multiline t face org-link) 183 184 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #bibtex-completion-ivy-and-org-ref" htmlize-link (:uri "#bibtex-completion-ivy-and-org-ref") font-lock-multiline t face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 184 218 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #bibtex-completion-ivy-and-org-ref" htmlize-link (:uri "#bibtex-completion-ivy-and-org-ref") font-lock-multiline t) 218 219 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #bibtex-completion-ivy-and-org-ref" htmlize-link (:uri "#bibtex-completion-ivy-and-org-ref") font-lock-multiline t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 219 220 (fontified t face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #bibtex-completion-ivy-and-org-ref" htmlize-link (:uri "#bibtex-completion-ivy-and-org-ref") font-lock-multiline t) 220 221 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #bibtex-completion-ivy-and-org-ref" htmlize-link (:uri "#bibtex-completion-ivy-and-org-ref") font-lock-multiline t) 221 222 (fontified t) 222 223 (fontified t composition (0 1 [8211]) face org-superstar-item) 223 224 (fontified t) 224 298 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #org-roam-bibtex-protocols-reference-notes-and-ui-graphing-capabilities" htmlize-link (:uri "#org-roam-bibtex-protocols-reference-notes-and-ui-graphing-capabilities") font-lock-multiline t face org-link) 298 299 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #org-roam-bibtex-protocols-reference-notes-and-ui-graphing-capabilities" htmlize-link (:uri "#org-roam-bibtex-protocols-reference-notes-and-ui-graphing-capabilities") font-lock-multiline t face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 299 373 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #org-roam-bibtex-protocols-reference-notes-and-ui-graphing-capabilities" htmlize-link (:uri "#org-roam-bibtex-protocols-reference-notes-and-ui-graphing-capabilities") font-lock-multiline t) 373 374 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #org-roam-bibtex-protocols-reference-notes-and-ui-graphing-capabilities" htmlize-link (:uri "#org-roam-bibtex-protocols-reference-notes-and-ui-graphing-capabilities") font-lock-multiline t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 374 375 (fontified t face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #org-roam-bibtex-protocols-reference-notes-and-ui-graphing-capabilities" htmlize-link (:uri "#org-roam-bibtex-protocols-reference-notes-and-ui-graphing-capabilities") font-lock-multiline t) 375 376 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #org-roam-bibtex-protocols-reference-notes-and-ui-graphing-capabilities" htmlize-link (:uri "#org-roam-bibtex-protocols-reference-notes-and-ui-graphing-capabilities") font-lock-multiline t) 376 377 (fontified t) 377 378 (fontified t composition (0 1 [8211]) face org-superstar-item) 378 379 (fontified t) 379 397 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #fleeting-notes" htmlize-link (:uri "#fleeting-notes") font-lock-multiline t face org-link) 397 398 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #fleeting-notes" htmlize-link (:uri "#fleeting-notes") font-lock-multiline t face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 398 411 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #fleeting-notes" htmlize-link (:uri "#fleeting-notes") font-lock-multiline t) 411 412 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #fleeting-notes" htmlize-link (:uri "#fleeting-notes") font-lock-multiline t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 412 413 (fontified t face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #fleeting-notes" htmlize-link (:uri "#fleeting-notes") font-lock-multiline t) 413 414 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #fleeting-notes" htmlize-link (:uri "#fleeting-notes") font-lock-multiline t) 414 415 (fontified t) 415 416 (fontified t composition (0 1 [8211]) face org-superstar-item) 416 417 (fontified t) 417 421 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #capture-templates" htmlize-link (:uri "#capture-templates") font-lock-multiline t face org-link) 421 438 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #capture-templates" htmlize-link (:uri "#capture-templates") font-lock-multiline t face org-link) 438 439 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #capture-templates" htmlize-link (:uri "#capture-templates") font-lock-multiline t face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 439 455 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #capture-templates" htmlize-link (:uri "#capture-templates") font-lock-multiline t) 455 456 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #capture-templates" htmlize-link (:uri "#capture-templates") font-lock-multiline t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 456 457 (fontified t face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #capture-templates" htmlize-link (:uri "#capture-templates") font-lock-multiline t) 457 458 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #capture-templates" htmlize-link (:uri "#capture-templates") font-lock-multiline t) 458 459 (fontified t) 459 460 (fontified t composition (0 1 [8211]) face org-superstar-item) 460 461 (fontified t) 461 514 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #implementing-the-zettelkasten-desktop-to-org-roam" htmlize-link (:uri "#implementing-the-zettelkasten-desktop-to-org-roam") font-lock-multiline t face org-link) 514 515 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #implementing-the-zettelkasten-desktop-to-org-roam" htmlize-link (:uri "#implementing-the-zettelkasten-desktop-to-org-roam") font-lock-multiline t face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 515 565 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #implementing-the-zettelkasten-desktop-to-org-roam" htmlize-link (:uri "#implementing-the-zettelkasten-desktop-to-org-roam") font-lock-multiline t) 565 566 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #implementing-the-zettelkasten-desktop-to-org-roam" htmlize-link (:uri "#implementing-the-zettelkasten-desktop-to-org-roam") font-lock-multiline t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 566 567 (fontified t face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #implementing-the-zettelkasten-desktop-to-org-roam" htmlize-link (:uri "#implementing-the-zettelkasten-desktop-to-org-roam") font-lock-multiline t) 567 568 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #implementing-the-zettelkasten-desktop-to-org-roam" htmlize-link (:uri "#implementing-the-zettelkasten-desktop-to-org-roam") font-lock-multiline t) 568 571 (fontified t) 571 572 (fontified t composition (0 1 [8211]) face org-superstar-item) 572 573 (fontified t) 573 589 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #dependencies" htmlize-link (:uri "#dependencies") font-lock-multiline t face org-link) 589 590 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #dependencies" htmlize-link (:uri "#dependencies") font-lock-multiline t face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 590 601 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #dependencies" htmlize-link (:uri "#dependencies") font-lock-multiline t) 601 602 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #dependencies" htmlize-link (:uri "#dependencies") font-lock-multiline t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 602 603 (fontified t face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #dependencies" htmlize-link (:uri "#dependencies") font-lock-multiline t) 603 604 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #dependencies" htmlize-link (:uri "#dependencies") font-lock-multiline t) 604 607 (fontified t) 607 608 (fontified t composition (0 1 [8211]) face org-superstar-item) 608 609 (fontified t) 609 632 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #predicate-functions" htmlize-link (:uri "#predicate-functions") font-lock-multiline t face org-link) 632 633 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #predicate-functions" htmlize-link (:uri "#predicate-functions") font-lock-multiline t face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 633 651 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #predicate-functions" htmlize-link (:uri "#predicate-functions") font-lock-multiline t) 651 652 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #predicate-functions" htmlize-link (:uri "#predicate-functions") font-lock-multiline t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 652 653 (fontified t face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #predicate-functions" htmlize-link (:uri "#predicate-functions") font-lock-multiline t) 653 654 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #predicate-functions" htmlize-link (:uri "#predicate-functions") font-lock-multiline t) 654 657 (fontified t) 657 658 (fontified t composition (0 1 [8211]) face org-superstar-item) 658 659 (fontified t) 659 707 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #adding-and-removing-things-in-the-zetteldesk" htmlize-link (:uri "#adding-and-removing-things-in-the-zetteldesk") font-lock-multiline t face org-link) 707 708 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #adding-and-removing-things-in-the-zetteldesk" htmlize-link (:uri "#adding-and-removing-things-in-the-zetteldesk") font-lock-multiline t face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 708 751 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #adding-and-removing-things-in-the-zetteldesk" htmlize-link (:uri "#adding-and-removing-things-in-the-zetteldesk") font-lock-multiline t) 751 752 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #adding-and-removing-things-in-the-zetteldesk" htmlize-link (:uri "#adding-and-removing-things-in-the-zetteldesk") font-lock-multiline t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 752 753 (fontified t face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #adding-and-removing-things-in-the-zetteldesk" htmlize-link (:uri "#adding-and-removing-things-in-the-zetteldesk") font-lock-multiline t) 753 754 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #adding-and-removing-things-in-the-zetteldesk" htmlize-link (:uri "#adding-and-removing-things-in-the-zetteldesk") font-lock-multiline t) 754 757 (fontified t) 757 758 (fontified t composition (0 1 [8211]) face org-superstar-item) 758 759 (fontified t) 759 779 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #filter-functions" htmlize-link (:uri "#filter-functions") font-lock-multiline t face org-link) 779 780 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #filter-functions" htmlize-link (:uri "#filter-functions") font-lock-multiline t face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 780 795 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #filter-functions" htmlize-link (:uri "#filter-functions") font-lock-multiline t) 795 796 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #filter-functions" htmlize-link (:uri "#filter-functions") font-lock-multiline t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 796 797 (fontified t face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #filter-functions" htmlize-link (:uri "#filter-functions") font-lock-multiline t) 797 798 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #filter-functions" htmlize-link (:uri "#filter-functions") font-lock-multiline t) 798 801 (fontified t) 801 802 (fontified t composition (0 1 [8211]) face org-superstar-item) 802 803 (fontified t) 803 839 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #on-the-zetteldesk-scratch-buffer" htmlize-link (:uri "#on-the-zetteldesk-scratch-buffer") font-lock-multiline t face org-link) 839 840 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #on-the-zetteldesk-scratch-buffer" htmlize-link (:uri "#on-the-zetteldesk-scratch-buffer") font-lock-multiline t face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 840 871 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #on-the-zetteldesk-scratch-buffer" htmlize-link (:uri "#on-the-zetteldesk-scratch-buffer") font-lock-multiline t) 871 872 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #on-the-zetteldesk-scratch-buffer" htmlize-link (:uri "#on-the-zetteldesk-scratch-buffer") font-lock-multiline t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 872 873 (fontified t face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #on-the-zetteldesk-scratch-buffer" htmlize-link (:uri "#on-the-zetteldesk-scratch-buffer") font-lock-multiline t) 873 874 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #on-the-zetteldesk-scratch-buffer" htmlize-link (:uri "#on-the-zetteldesk-scratch-buffer") font-lock-multiline t) 874 877 (fontified t) 877 878 (fontified t composition (0 1 [8211]) face org-superstar-item) 878 879 (fontified t) 879 904 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #providing-the-package" htmlize-link (:uri "#providing-the-package") font-lock-multiline t face org-link) 904 905 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #providing-the-package" htmlize-link (:uri "#providing-the-package") font-lock-multiline t face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 905 925 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #providing-the-package" htmlize-link (:uri "#providing-the-package") font-lock-multiline t) 925 926 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #providing-the-package" htmlize-link (:uri "#providing-the-package") font-lock-multiline t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 926 927 (fontified t face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #providing-the-package" htmlize-link (:uri "#providing-the-package") font-lock-multiline t) 927 928 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #providing-the-package" htmlize-link (:uri "#providing-the-package") font-lock-multiline t) 928 929 (fontified t) 929 930 (fontified t composition (0 1 [8211]) face org-superstar-item) 930 931 (fontified t) 931 959 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #providing-the-package-to-be-loaded-in-initel" htmlize-link (:uri "#providing-the-package-to-be-loaded-in-initel") font-lock-multiline t face org-link) 959 979 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #providing-the-package-to-be-loaded-in-initel" htmlize-link (:uri "#providing-the-package-to-be-loaded-in-initel") font-lock-multiline t face org-link) 979 980 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #providing-the-package-to-be-loaded-in-initel" htmlize-link (:uri "#providing-the-package-to-be-loaded-in-initel") font-lock-multiline t face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 980 1024 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #providing-the-package-to-be-loaded-in-initel" htmlize-link (:uri "#providing-the-package-to-be-loaded-in-initel") font-lock-multiline t) 1024 1025 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #providing-the-package-to-be-loaded-in-initel" htmlize-link (:uri "#providing-the-package-to-be-loaded-in-initel") font-lock-multiline t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 1025 1026 (fontified t face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #providing-the-package-to-be-loaded-in-initel" htmlize-link (:uri "#providing-the-package-to-be-loaded-in-initel") font-lock-multiline t) 1026 1027 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #providing-the-package-to-be-loaded-in-initel" htmlize-link (:uri "#providing-the-package-to-be-loaded-in-initel") font-lock-multiline t) 1027 1028 (fontified t)) . 949) (undo-tree-id0 . -377) (undo-tree-id1 . -377) (undo-tree-id2 . -377) (undo-tree-id3 . -377) (undo-tree-id4 . -377) (undo-tree-id5 . -377) (undo-tree-id6 . -377) (undo-tree-id7 . -377) (undo-tree-id8 . -377) (undo-tree-id9 . -377) (undo-tree-id10 . -377) (undo-tree-id11 . -377) (undo-tree-id12 . -377) (undo-tree-id13 . -655) (undo-tree-id14 . -655) (undo-tree-id15 . -655) (undo-tree-id16 . -655) (undo-tree-id17 . -655) (undo-tree-id18 . -655) (undo-tree-id19 . -655) (undo-tree-id20 . -655) (undo-tree-id21 . -655) (undo-tree-id22 . -655) (undo-tree-id23 . -655) (undo-tree-id24 . -655) (undo-tree-id25 . -655) (undo-tree-id26 . -1028) (undo-tree-id27 . -1028) (undo-tree-id28 . -1028) (undo-tree-id29 . -1028) (undo-tree-id30 . -1028) (undo-tree-id31 . -1028) (undo-tree-id32 . -1028) (undo-tree-id33 . -1028)) nil (25163 17397 483900 419000) 0 nil])
([nil nil ((#("\\n" 0 2 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t)) . 27749) 27608 (t 25163 17397 665295 597000)) nil (25252 35454 537952 738000) 0 nil])
([nil nil ((29460 . 29463) (29460 . 29551) (#("   | d | default | entry | * %? | :if-new | (file+head %<%Y-%m-%d>.org #+title: %<%Y-%m-%d> |
" 0 94 (fontified nil)) . 29460)) nil (25252 35454 537940 166000) 0 nil])
([nil nil ((15061 . 15076) (15040 . 15061) (15026 . 15040) (#("H" 0 1 (fontified t)) . -15026) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (#("e" 0 1 (fontified t)) . -15027) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) 15028 (15012 . 15028) (#("i" 0 1 (fontified t)) . -15012) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (#("t" 0 1 (fontified t)) . -15013) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) 15014 (15009 . 15014) (14988 . 15009) (14978 . 14988) (14957 . 14978) (#("u" 0 1 (fontified t)) . -14957) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (#("s" 0 1 (fontified t)) . -14958) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (#("i" 0 1 (fontified t)) . -14959) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (#("n" 0 1 (fontified t)) . -14960) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (#("g" 0 1 (fontified t)) . -14961) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (#(" " 0 1 (fontified t)) . -14962) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (#("i" 0 1 (fontified t)) . -14963) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (#("t" 0 1 (fontified t)) . -14964) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (#(" " 0 1 (fontified t)) . -14965) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (#("a" 0 1 (fontified t)) . -14966) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (#("s" 0 1 (fontified t)) . -14967) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) 14968 (14963 . 14968) (14943 . 14963) (#(" " 0 1 (fontified t)) . -14943) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) 14944 (14943 . 14944) (#(" " 0 1 (fontified t)) . -14943) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) 14944 (14923 . 14944) (14902 . 14923) (14898 . 14902) (#("s" 0 1 (fontified t)) . -14898) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (#("x" 0 1 (fontified t)) . -14899) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) 14900 (14899 . 14900) (#("x" 0 1 (fontified t)) . -14899) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (#(" " 0 1 (fontified t)) . -14900) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) 14901 (14896 . 14901) (#("y" 0 1 (fontified t)) . -14896) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (#("r" 0 1 (fontified t)) . -14897) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) 14898 (14895 . 14898) (#("y" 0 1 (fontified t)) . -14895) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) 14896 (14894 . 14896) (#("y" 0 1 (fontified t)) . -14894) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) 14895 (14889 . 14895) (#("b" 0 1 (fontified t)) . -14889) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) 14890 (14878 . 14890) (#("d" 0 1 (fontified t)) . -14878) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (#("n" 0 1 (fontified t)) . -14879) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) 14880 (14874 . 14880) (#("e" 0 1 (fontified t)) . -14874) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (#("c" 0 1 (fontified t)) . -14875) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) 14876 (14873 . 14876) (14869 . 14873) (#("a" 0 1 (fontified t)) . -14869) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (#("s" 0 1 (fontified t)) . -14870) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (#(" " 0 1 (fontified t)) . -14871) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) 14872 (14854 . 14872) (14833 . 14854) (14822 . 14833) (#("i" 0 1 (fontified t)) . -14822) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (#("m" 0 1 (fontified t)) . -14823) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (#("p" 0 1 (fontified t)) . -14824) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -1) (undo-tree-id3100 . -1) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1) (undo-tree-id3109 . -1) (undo-tree-id3110 . -1) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (undo-tree-id3114 . -1) (undo-tree-id3115 . -1) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) (undo-tree-id3219 . -1) (undo-tree-id3220 . -1) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (undo-tree-id3250 . -1) (undo-tree-id3251 . -1) (undo-tree-id3252 . -1) (undo-tree-id3253 . -1) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) (undo-tree-id3318 . -1) (undo-tree-id3319 . -1) (undo-tree-id3320 . -1) (undo-tree-id3321 . -1) (undo-tree-id3322 . -1) (undo-tree-id3323 . -1) (undo-tree-id3324 . -1) (undo-tree-id3325 . -1) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (undo-tree-id3328 . -1) (undo-tree-id3329 . -1) (undo-tree-id3330 . -1) (#("l" 0 1 (fontified t)) . -14825) (undo-tree-id3331 . -1) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (undo-tree-id3336 . -1) (undo-tree-id3337 . -1) (undo-tree-id3338 . -1) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) (undo-tree-id3348 . -1) (undo-tree-id3349 . -1) (undo-tree-id3350 . -1) (undo-tree-id3351 . -1) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (undo-tree-id3482 . -1) (undo-tree-id3483 . -1) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3487 . -1) (undo-tree-id3488 . -1) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) (undo-tree-id3491 . -1) (undo-tree-id3492 . -1) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) (undo-tree-id3500 . -1) (undo-tree-id3501 . -1) (undo-tree-id3502 . -1) (undo-tree-id3503 . -1) (undo-tree-id3504 . -1) (undo-tree-id3505 . -1) (undo-tree-id3506 . -1) (undo-tree-id3507 . -1) (undo-tree-id3508 . -1) (undo-tree-id3509 . -1) (undo-tree-id3510 . -1) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) (undo-tree-id3514 . -1) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) (undo-tree-id3517 . -1) (undo-tree-id3518 . -1) (undo-tree-id3519 . -1) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (undo-tree-id3523 . -1) (undo-tree-id3524 . -1) (undo-tree-id3525 . -1) (undo-tree-id3526 . -1) (undo-tree-id3527 . -1) (undo-tree-id3528 . -1) (undo-tree-id3529 . -1) (undo-tree-id3530 . -1) (undo-tree-id3531 . -1) (undo-tree-id3532 . -1) (undo-tree-id3533 . -1) (undo-tree-id3534 . -1) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (undo-tree-id3538 . -1) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (undo-tree-id3566 . -1) (undo-tree-id3567 . -1) (undo-tree-id3568 . -1) (undo-tree-id3569 . -1) (undo-tree-id3570 . -1) (undo-tree-id3571 . -1) (undo-tree-id3572 . -1) (undo-tree-id3573 . -1) (undo-tree-id3574 . -1) (undo-tree-id3575 . -1) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1) (undo-tree-id3624 . -1) (undo-tree-id3625 . -1) (undo-tree-id3626 . -1) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (undo-tree-id3629 . -1) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) (undo-tree-id3633 . -1) (undo-tree-id3634 . -1) (#("e" 0 1 (fontified t)) . -14826) (undo-tree-id3635 . -1) (undo-tree-id3636 . -1) (undo-tree-id3637 . -1) (undo-tree-id3638 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (undo-tree-id3651 . -1) (undo-tree-id3652 . -1) (undo-tree-id3653 . -1) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1) (undo-tree-id3662 . -1) (undo-tree-id3663 . -1) (undo-tree-id3664 . -1) (undo-tree-id3665 . -1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (undo-tree-id3670 . -1) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (undo-tree-id3682 . -1) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (undo-tree-id3800 . -1) (undo-tree-id3801 . -1) (undo-tree-id3802 . -1) (undo-tree-id3803 . -1) (undo-tree-id3804 . -1) (undo-tree-id3805 . -1) (undo-tree-id3806 . -1) (undo-tree-id3807 . -1) (undo-tree-id3808 . -1) (undo-tree-id3809 . -1) (undo-tree-id3810 . -1) (undo-tree-id3811 . -1) (undo-tree-id3812 . -1) (undo-tree-id3813 . -1) (undo-tree-id3814 . -1) (undo-tree-id3815 . -1) (undo-tree-id3816 . -1) (undo-tree-id3817 . -1) (undo-tree-id3818 . -1) (undo-tree-id3819 . -1) (undo-tree-id3820 . -1) (undo-tree-id3821 . -1) (undo-tree-id3822 . -1) (undo-tree-id3823 . -1) (undo-tree-id3824 . -1) (undo-tree-id3825 . -1) (undo-tree-id3826 . -1) (undo-tree-id3827 . -1) (undo-tree-id3828 . -1) (undo-tree-id3829 . -1) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (undo-tree-id3832 . -1) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) (undo-tree-id3843 . -1) (undo-tree-id3844 . -1) (undo-tree-id3845 . -1) (undo-tree-id3846 . -1) (undo-tree-id3847 . -1) (undo-tree-id3848 . -1) (undo-tree-id3849 . -1) (undo-tree-id3850 . -1) (undo-tree-id3851 . -1) (undo-tree-id3852 . -1) (undo-tree-id3853 . -1) (undo-tree-id3854 . -1) (undo-tree-id3855 . -1) (undo-tree-id3856 . -1) (undo-tree-id3857 . -1) (undo-tree-id3858 . -1) (undo-tree-id3859 . -1) (undo-tree-id3860 . -1) (undo-tree-id3861 . -1) (undo-tree-id3862 . -1) (undo-tree-id3863 . -1) (undo-tree-id3864 . -1) (undo-tree-id3865 . -1) (undo-tree-id3866 . -1) (undo-tree-id3867 . -1) (undo-tree-id3868 . -1) (undo-tree-id3869 . -1) (undo-tree-id3870 . -1) (undo-tree-id3871 . -1) (undo-tree-id3872 . -1) (undo-tree-id3873 . -1) (undo-tree-id3874 . -1) (undo-tree-id3875 . -1) (undo-tree-id3876 . -1) (undo-tree-id3877 . -1) (undo-tree-id3878 . -1) (undo-tree-id3879 . -1) (undo-tree-id3880 . -1) (undo-tree-id3881 . -1) (undo-tree-id3882 . -1) (undo-tree-id3883 . -1) (undo-tree-id3884 . -1) (undo-tree-id3885 . -1) (undo-tree-id3886 . -1) (undo-tree-id3887 . -1) (undo-tree-id3888 . -1) (undo-tree-id3889 . -1) (undo-tree-id3890 . -1) (undo-tree-id3891 . -1) (undo-tree-id3892 . -1) (undo-tree-id3893 . -1) (undo-tree-id3894 . -1) (undo-tree-id3895 . -1) (undo-tree-id3896 . -1) (undo-tree-id3897 . -1) (undo-tree-id3898 . -1) (undo-tree-id3899 . -1) (undo-tree-id3900 . -1) (undo-tree-id3901 . -1) (undo-tree-id3902 . -1) (undo-tree-id3903 . -1) (undo-tree-id3904 . -1) (undo-tree-id3905 . -1) (undo-tree-id3906 . -1) (undo-tree-id3907 . -1) (undo-tree-id3908 . -1) (undo-tree-id3909 . -1) (undo-tree-id3910 . -1) (undo-tree-id3911 . -1) (undo-tree-id3912 . -1) (undo-tree-id3913 . -1) (undo-tree-id3914 . -1) (undo-tree-id3915 . -1) (undo-tree-id3916 . -1) (undo-tree-id3917 . -1) (undo-tree-id3918 . -1) (undo-tree-id3919 . -1) (#("m" 0 1 (fontified t)) . -14827) (undo-tree-id3920 . -1) (undo-tree-id3921 . -1) (undo-tree-id3922 . -1) (undo-tree-id3923 . -1) (undo-tree-id3924 . -1) (undo-tree-id3925 . -1) (undo-tree-id3926 . -1) (undo-tree-id3927 . -1) (undo-tree-id3928 . -1) (undo-tree-id3929 . -1) (undo-tree-id3930 . -1) (undo-tree-id3931 . -1) (undo-tree-id3932 . -1) (undo-tree-id3933 . -1) (undo-tree-id3934 . -1) (undo-tree-id3935 . -1) (undo-tree-id3936 . -1) (undo-tree-id3937 . -1) (undo-tree-id3938 . -1) (undo-tree-id3939 . -1) (undo-tree-id3940 . -1) (undo-tree-id3941 . -1) (undo-tree-id3942 . -1) (undo-tree-id3943 . -1) (undo-tree-id3944 . -1) (undo-tree-id3945 . -1) (undo-tree-id3946 . -1) (undo-tree-id3947 . -1) (undo-tree-id3948 . -1) (undo-tree-id3949 . -1) (undo-tree-id3950 . -1) (undo-tree-id3951 . -1) (undo-tree-id3952 . -1) (undo-tree-id3953 . -1) (undo-tree-id3954 . -1) (undo-tree-id3955 . -1) (undo-tree-id3956 . -1) (undo-tree-id3957 . -1) (undo-tree-id3958 . -1) (undo-tree-id3959 . -1) (undo-tree-id3960 . -1) (undo-tree-id3961 . -1) (undo-tree-id3962 . -1) (undo-tree-id3963 . -1) (undo-tree-id3964 . -1) (undo-tree-id3965 . -1) (undo-tree-id3966 . -1) (undo-tree-id3967 . -1) (undo-tree-id3968 . -1) (undo-tree-id3969 . -1) (undo-tree-id3970 . -1) (undo-tree-id3971 . -1) (undo-tree-id3972 . -1) (undo-tree-id3973 . -1) (undo-tree-id3974 . -1) (undo-tree-id3975 . -1) (undo-tree-id3976 . -1) (undo-tree-id3977 . -1) (undo-tree-id3978 . -1) (undo-tree-id3979 . -1) (undo-tree-id3980 . -1) (undo-tree-id3981 . -1) (undo-tree-id3982 . -1) (undo-tree-id3983 . -1) (undo-tree-id3984 . -1) (undo-tree-id3985 . -1) (undo-tree-id3986 . -1) (undo-tree-id3987 . -1) (undo-tree-id3988 . -1) (undo-tree-id3989 . -1) (undo-tree-id3990 . -1) (undo-tree-id3991 . -1) (undo-tree-id3992 . -1) (undo-tree-id3993 . -1) (undo-tree-id3994 . -1) (undo-tree-id3995 . -1) (undo-tree-id3996 . -1) (undo-tree-id3997 . -1) (undo-tree-id3998 . -1) (undo-tree-id3999 . -1) (undo-tree-id4000 . -1) (undo-tree-id4001 . -1) (undo-tree-id4002 . -1) (undo-tree-id4003 . -1) (undo-tree-id4004 . -1) (undo-tree-id4005 . -1) (undo-tree-id4006 . -1) (undo-tree-id4007 . -1) (undo-tree-id4008 . -1) (undo-tree-id4009 . -1) (undo-tree-id4010 . -1) (undo-tree-id4011 . -1) (undo-tree-id4012 . -1) (undo-tree-id4013 . -1) (undo-tree-id4014 . -1) (undo-tree-id4015 . -1) (undo-tree-id4016 . -1) (undo-tree-id4017 . -1) (undo-tree-id4018 . -1) (undo-tree-id4019 . -1) (undo-tree-id4020 . -1) (undo-tree-id4021 . -1) (undo-tree-id4022 . -1) (undo-tree-id4023 . -1) (undo-tree-id4024 . -1) (undo-tree-id4025 . -1) (undo-tree-id4026 . -1) (undo-tree-id4027 . -1) (undo-tree-id4028 . -1) (undo-tree-id4029 . -1) (undo-tree-id4030 . -1) (undo-tree-id4031 . -1) (undo-tree-id4032 . -1) (undo-tree-id4033 . -1) (undo-tree-id4034 . -1) (undo-tree-id4035 . -1) (undo-tree-id4036 . -1) (undo-tree-id4037 . -1) (undo-tree-id4038 . -1) (undo-tree-id4039 . -1) (undo-tree-id4040 . -1) (undo-tree-id4041 . -1) (undo-tree-id4042 . -1) (undo-tree-id4043 . -1) (undo-tree-id4044 . -1) (undo-tree-id4045 . -1) (undo-tree-id4046 . -1) (undo-tree-id4047 . -1) (undo-tree-id4048 . -1) (undo-tree-id4049 . -1) (undo-tree-id4050 . -1) (undo-tree-id4051 . -1) (undo-tree-id4052 . -1) (undo-tree-id4053 . -1) (undo-tree-id4054 . -1) (undo-tree-id4055 . -1) (undo-tree-id4056 . -1) (undo-tree-id4057 . -1) (undo-tree-id4058 . -1) (undo-tree-id4059 . -1) (undo-tree-id4060 . -1) (undo-tree-id4061 . -1) (undo-tree-id4062 . -1) (undo-tree-id4063 . -1) (undo-tree-id4064 . -1) (undo-tree-id4065 . -1) (undo-tree-id4066 . -1) (undo-tree-id4067 . -1) (undo-tree-id4068 . -1) (undo-tree-id4069 . -1) (undo-tree-id4070 . -1) (undo-tree-id4071 . -1) (undo-tree-id4072 . -1) (undo-tree-id4073 . -1) (undo-tree-id4074 . -1) (undo-tree-id4075 . -1) (undo-tree-id4076 . -1) (undo-tree-id4077 . -1) (undo-tree-id4078 . -1) (undo-tree-id4079 . -1) (undo-tree-id4080 . -1) (undo-tree-id4081 . -1) (undo-tree-id4082 . -1) (undo-tree-id4083 . -1) (undo-tree-id4084 . -1) (undo-tree-id4085 . -1) (undo-tree-id4086 . -1) (undo-tree-id4087 . -1) (undo-tree-id4088 . -1) (undo-tree-id4089 . -1) (undo-tree-id4090 . -1) (undo-tree-id4091 . -1) (undo-tree-id4092 . -1) (undo-tree-id4093 . -1) (undo-tree-id4094 . -1) (undo-tree-id4095 . -1) (undo-tree-id4096 . -1) (undo-tree-id4097 . -1) (undo-tree-id4098 . -1) (undo-tree-id4099 . -1) (undo-tree-id4100 . -1) (undo-tree-id4101 . -1) (undo-tree-id4102 . -1) (undo-tree-id4103 . -1) (undo-tree-id4104 . -1) (undo-tree-id4105 . -1) (undo-tree-id4106 . -1) (undo-tree-id4107 . -1) (undo-tree-id4108 . -1) (undo-tree-id4109 . -1) (undo-tree-id4110 . -1) (undo-tree-id4111 . -1) (undo-tree-id4112 . -1) (undo-tree-id4113 . -1) (undo-tree-id4114 . -1) (undo-tree-id4115 . -1) (undo-tree-id4116 . -1) (undo-tree-id4117 . -1) (undo-tree-id4118 . -1) (undo-tree-id4119 . -1) (undo-tree-id4120 . -1) (undo-tree-id4121 . -1) (undo-tree-id4122 . -1) (undo-tree-id4123 . -1) (undo-tree-id4124 . -1) (undo-tree-id4125 . -1) (undo-tree-id4126 . -1) (undo-tree-id4127 . -1) (undo-tree-id4128 . -1) (undo-tree-id4129 . -1) (undo-tree-id4130 . -1) (undo-tree-id4131 . -1) (undo-tree-id4132 . -1) (undo-tree-id4133 . -1) (undo-tree-id4134 . -1) (undo-tree-id4135 . -1) (undo-tree-id4136 . -1) (undo-tree-id4137 . -1) (undo-tree-id4138 . -1) (undo-tree-id4139 . -1) (undo-tree-id4140 . -1) (undo-tree-id4141 . -1) (undo-tree-id4142 . -1) (undo-tree-id4143 . -1) (undo-tree-id4144 . -1) (undo-tree-id4145 . -1) (undo-tree-id4146 . -1) (undo-tree-id4147 . -1) (undo-tree-id4148 . -1) (undo-tree-id4149 . -1) (undo-tree-id4150 . -1) (undo-tree-id4151 . -1) (undo-tree-id4152 . -1) (undo-tree-id4153 . -1) (undo-tree-id4154 . -1) (undo-tree-id4155 . -1) (undo-tree-id4156 . -1) (undo-tree-id4157 . -1) (undo-tree-id4158 . -1) (undo-tree-id4159 . -1) (undo-tree-id4160 . -1) (undo-tree-id4161 . -1) (undo-tree-id4162 . -1) (undo-tree-id4163 . -1) (undo-tree-id4164 . -1) (undo-tree-id4165 . -1) (undo-tree-id4166 . -1) (undo-tree-id4167 . -1) (undo-tree-id4168 . -1) (undo-tree-id4169 . -1) (undo-tree-id4170 . -1) (undo-tree-id4171 . -1) (undo-tree-id4172 . -1) (undo-tree-id4173 . -1) (undo-tree-id4174 . -1) (undo-tree-id4175 . -1) (undo-tree-id4176 . -1) (undo-tree-id4177 . -1) (undo-tree-id4178 . -1) (undo-tree-id4179 . -1) (undo-tree-id4180 . -1) (undo-tree-id4181 . -1) (undo-tree-id4182 . -1) (undo-tree-id4183 . -1) (undo-tree-id4184 . -1) (undo-tree-id4185 . -1) (undo-tree-id4186 . -1) (undo-tree-id4187 . -1) (undo-tree-id4188 . -1) (undo-tree-id4189 . -1) (undo-tree-id4190 . -1) (#("e" 0 1 (fontified t)) . -14828) (undo-tree-id4191 . -1) (undo-tree-id4192 . -1) (undo-tree-id4193 . -1) (undo-tree-id4194 . -1) (undo-tree-id4195 . -1) (undo-tree-id4196 . -1) (undo-tree-id4197 . -1) (undo-tree-id4198 . -1) (undo-tree-id4199 . -1) (undo-tree-id4200 . -1) (undo-tree-id4201 . -1) (undo-tree-id4202 . -1) (undo-tree-id4203 . -1) (undo-tree-id4204 . -1) (undo-tree-id4205 . -1) (undo-tree-id4206 . -1) (undo-tree-id4207 . -1) (undo-tree-id4208 . -1) (undo-tree-id4209 . -1) (undo-tree-id4210 . -1) (undo-tree-id4211 . -1) (undo-tree-id4212 . -1) (undo-tree-id4213 . -1) (undo-tree-id4214 . -1) (undo-tree-id4215 . -1) (undo-tree-id4216 . -1) (undo-tree-id4217 . -1) (undo-tree-id4218 . -1) (undo-tree-id4219 . -1) (undo-tree-id4220 . -1) (undo-tree-id4221 . -1) (undo-tree-id4222 . -1) (undo-tree-id4223 . -1) (undo-tree-id4224 . -1) (undo-tree-id4225 . -1) (undo-tree-id4226 . -1) (undo-tree-id4227 . -1) (undo-tree-id4228 . -1) (undo-tree-id4229 . -1) (undo-tree-id4230 . -1) (undo-tree-id4231 . -1) (undo-tree-id4232 . -1) (undo-tree-id4233 . -1) (undo-tree-id4234 . -1) (undo-tree-id4235 . -1) (undo-tree-id4236 . -1) (undo-tree-id4237 . -1) (undo-tree-id4238 . -1) (undo-tree-id4239 . -1) (undo-tree-id4240 . -1) (undo-tree-id4241 . -1) (undo-tree-id4242 . -1) (undo-tree-id4243 . -1) (undo-tree-id4244 . -1) (undo-tree-id4245 . -1) (undo-tree-id4246 . -1) (undo-tree-id4247 . -1) (undo-tree-id4248 . -1) (undo-tree-id4249 . -1) (undo-tree-id4250 . -1) (undo-tree-id4251 . -1) (undo-tree-id4252 . -1) (undo-tree-id4253 . -1) (undo-tree-id4254 . -1) (undo-tree-id4255 . -1) (undo-tree-id4256 . -1) (undo-tree-id4257 . -1) (undo-tree-id4258 . -1) (undo-tree-id4259 . -1) (undo-tree-id4260 . -1) (undo-tree-id4261 . -1) (undo-tree-id4262 . -1) (undo-tree-id4263 . -1) (undo-tree-id4264 . -1) (undo-tree-id4265 . -1) (undo-tree-id4266 . -1) (undo-tree-id4267 . -1) (undo-tree-id4268 . -1) (undo-tree-id4269 . -1) (undo-tree-id4270 . -1) (undo-tree-id4271 . -1) (undo-tree-id4272 . -1) (undo-tree-id4273 . -1) (undo-tree-id4274 . -1) (undo-tree-id4275 . -1) (undo-tree-id4276 . -1) (undo-tree-id4277 . -1) (undo-tree-id4278 . -1) (undo-tree-id4279 . -1) (undo-tree-id4280 . -1) (undo-tree-id4281 . -1) (undo-tree-id4282 . -1) (undo-tree-id4283 . -1) (undo-tree-id4284 . -1) (undo-tree-id4285 . -1) (undo-tree-id4286 . -1) (undo-tree-id4287 . -1) (undo-tree-id4288 . -1) (undo-tree-id4289 . -1) (undo-tree-id4290 . -1) (undo-tree-id4291 . -1) (undo-tree-id4292 . -1) (undo-tree-id4293 . -1) (undo-tree-id4294 . -1) (undo-tree-id4295 . -1) (undo-tree-id4296 . -1) (undo-tree-id4297 . -1) (undo-tree-id4298 . -1) (undo-tree-id4299 . -1) (undo-tree-id4300 . -1) (undo-tree-id4301 . -1) (undo-tree-id4302 . -1) (undo-tree-id4303 . -1) (undo-tree-id4304 . -1) (undo-tree-id4305 . -1) (undo-tree-id4306 . -1) (undo-tree-id4307 . -1) (undo-tree-id4308 . -1) (undo-tree-id4309 . -1) (undo-tree-id4310 . -1) (undo-tree-id4311 . -1) (undo-tree-id4312 . -1) (undo-tree-id4313 . -1) (undo-tree-id4314 . -1) (undo-tree-id4315 . -1) (undo-tree-id4316 . -1) (undo-tree-id4317 . -1) (undo-tree-id4318 . -1) (undo-tree-id4319 . -1) (undo-tree-id4320 . -1) (undo-tree-id4321 . -1) (undo-tree-id4322 . -1) (undo-tree-id4323 . -1) (undo-tree-id4324 . -1) (undo-tree-id4325 . -1) (undo-tree-id4326 . -1) (undo-tree-id4327 . -1) (undo-tree-id4328 . -1) (undo-tree-id4329 . -1) (undo-tree-id4330 . -1) (undo-tree-id4331 . -1) (undo-tree-id4332 . -1) (undo-tree-id4333 . -1) (undo-tree-id4334 . -1) (undo-tree-id4335 . -1) (undo-tree-id4336 . -1) (undo-tree-id4337 . -1) (undo-tree-id4338 . -1) (undo-tree-id4339 . -1) (undo-tree-id4340 . -1) (undo-tree-id4341 . -1) (undo-tree-id4342 . -1) (undo-tree-id4343 . -1) (undo-tree-id4344 . -1) (undo-tree-id4345 . -1) (undo-tree-id4346 . -1) (undo-tree-id4347 . -1) (undo-tree-id4348 . -1) (undo-tree-id4349 . -1) (undo-tree-id4350 . -1) (undo-tree-id4351 . -1) (undo-tree-id4352 . -1) (undo-tree-id4353 . -1) (undo-tree-id4354 . -1) (undo-tree-id4355 . -1) (undo-tree-id4356 . -1) (undo-tree-id4357 . -1) (undo-tree-id4358 . -1) (undo-tree-id4359 . -1) (undo-tree-id4360 . -1) (undo-tree-id4361 . -1) (undo-tree-id4362 . -1) (undo-tree-id4363 . -1) (undo-tree-id4364 . -1) (undo-tree-id4365 . -1) (undo-tree-id4366 . -1) (undo-tree-id4367 . -1) (undo-tree-id4368 . -1) (undo-tree-id4369 . -1) (undo-tree-id4370 . -1) (undo-tree-id4371 . -1) (undo-tree-id4372 . -1) (undo-tree-id4373 . -1) (undo-tree-id4374 . -1) (undo-tree-id4375 . -1) (undo-tree-id4376 . -1) (undo-tree-id4377 . -1) (undo-tree-id4378 . -1) (undo-tree-id4379 . -1) (undo-tree-id4380 . -1) (undo-tree-id4381 . -1) (undo-tree-id4382 . -1) (undo-tree-id4383 . -1) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) (undo-tree-id4390 . -1) (undo-tree-id4391 . -1) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1) (undo-tree-id4394 . -1) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (undo-tree-id4402 . -1) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) (undo-tree-id4405 . -1) (undo-tree-id4406 . -1) (undo-tree-id4407 . -1) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) (undo-tree-id4410 . -1) (undo-tree-id4411 . -1) (undo-tree-id4412 . -1) (undo-tree-id4413 . -1) (undo-tree-id4414 . -1) (undo-tree-id4415 . -1) (undo-tree-id4416 . -1) (undo-tree-id4417 . -1) (undo-tree-id4418 . -1) (undo-tree-id4419 . -1) (undo-tree-id4420 . -1) (undo-tree-id4421 . -1) (undo-tree-id4422 . -1) (undo-tree-id4423 . -1) (undo-tree-id4424 . -1) (undo-tree-id4425 . -1) (undo-tree-id4426 . -1) (undo-tree-id4427 . -1) (undo-tree-id4428 . -1) (undo-tree-id4429 . -1) (undo-tree-id4430 . -1) (undo-tree-id4431 . -1) (undo-tree-id4432 . -1) (undo-tree-id4433 . -1) (undo-tree-id4434 . -1) (undo-tree-id4435 . -1) (undo-tree-id4436 . -1) (undo-tree-id4437 . -1) (undo-tree-id4438 . -1) (undo-tree-id4439 . -1) (undo-tree-id4440 . -1) (undo-tree-id4441 . -1) (undo-tree-id4442 . -1) (#("n" 0 1 (fontified t)) . -14829) (undo-tree-id4443 . -1) (undo-tree-id4444 . -1) (undo-tree-id4445 . -1) (undo-tree-id4446 . -1) (undo-tree-id4447 . -1) (undo-tree-id4448 . -1) (undo-tree-id4449 . -1) (undo-tree-id4450 . -1) (undo-tree-id4451 . -1) (undo-tree-id4452 . -1) (undo-tree-id4453 . -1) (undo-tree-id4454 . -1) (undo-tree-id4455 . -1) (undo-tree-id4456 . -1) (undo-tree-id4457 . -1) (undo-tree-id4458 . -1) (undo-tree-id4459 . -1) (undo-tree-id4460 . -1) (undo-tree-id4461 . -1) (undo-tree-id4462 . -1) (undo-tree-id4463 . -1) (undo-tree-id4464 . -1) (undo-tree-id4465 . -1) (undo-tree-id4466 . -1) (undo-tree-id4467 . -1) (undo-tree-id4468 . -1) (undo-tree-id4469 . -1) (undo-tree-id4470 . -1) (undo-tree-id4471 . -1) (undo-tree-id4472 . -1) (undo-tree-id4473 . -1) (undo-tree-id4474 . -1) (undo-tree-id4475 . -1) (undo-tree-id4476 . -1) (undo-tree-id4477 . -1) (undo-tree-id4478 . -1) (undo-tree-id4479 . -1) (undo-tree-id4480 . -1) (undo-tree-id4481 . -1) (undo-tree-id4482 . -1) (undo-tree-id4483 . -1) (undo-tree-id4484 . -1) (undo-tree-id4485 . -1) (undo-tree-id4486 . -1) (undo-tree-id4487 . -1) (undo-tree-id4488 . -1) (undo-tree-id4489 . -1) (undo-tree-id4490 . -1) (undo-tree-id4491 . -1) (undo-tree-id4492 . -1) (undo-tree-id4493 . -1) (undo-tree-id4494 . -1) (undo-tree-id4495 . -1) (undo-tree-id4496 . -1) (undo-tree-id4497 . -1) (undo-tree-id4498 . -1) (undo-tree-id4499 . -1) (undo-tree-id4500 . -1) (undo-tree-id4501 . -1) (undo-tree-id4502 . -1) (undo-tree-id4503 . -1) (undo-tree-id4504 . -1) (undo-tree-id4505 . -1) (undo-tree-id4506 . -1) (undo-tree-id4507 . -1) (undo-tree-id4508 . -1) (undo-tree-id4509 . -1) (undo-tree-id4510 . -1) (undo-tree-id4511 . -1) (undo-tree-id4512 . -1) (undo-tree-id4513 . -1) (undo-tree-id4514 . -1) (undo-tree-id4515 . -1) (undo-tree-id4516 . -1) (undo-tree-id4517 . -1) (undo-tree-id4518 . -1) (undo-tree-id4519 . -1) (undo-tree-id4520 . -1) (undo-tree-id4521 . -1) (undo-tree-id4522 . -1) (undo-tree-id4523 . -1) (undo-tree-id4524 . -1) (undo-tree-id4525 . -1) (undo-tree-id4526 . -1) (undo-tree-id4527 . -1) (undo-tree-id4528 . -1) (undo-tree-id4529 . -1) (undo-tree-id4530 . -1) (undo-tree-id4531 . -1) (undo-tree-id4532 . -1) (undo-tree-id4533 . -1) (undo-tree-id4534 . -1) (undo-tree-id4535 . -1) (undo-tree-id4536 . -1) (undo-tree-id4537 . -1) (undo-tree-id4538 . -1) (undo-tree-id4539 . -1) (undo-tree-id4540 . -1) (undo-tree-id4541 . -1) (undo-tree-id4542 . -1) (undo-tree-id4543 . -1) (undo-tree-id4544 . -1) (undo-tree-id4545 . -1) (undo-tree-id4546 . -1) (undo-tree-id4547 . -1) (undo-tree-id4548 . -1) (undo-tree-id4549 . -1) (undo-tree-id4550 . -1) (undo-tree-id4551 . -1) (undo-tree-id4552 . -1) (undo-tree-id4553 . -1) (undo-tree-id4554 . -1) (undo-tree-id4555 . -1) (undo-tree-id4556 . -1) (undo-tree-id4557 . -1) (undo-tree-id4558 . -1) (undo-tree-id4559 . -1) (undo-tree-id4560 . -1) (undo-tree-id4561 . -1) (undo-tree-id4562 . -1) (undo-tree-id4563 . -1) (undo-tree-id4564 . -1) (undo-tree-id4565 . -1) (undo-tree-id4566 . -1) (undo-tree-id4567 . -1) (undo-tree-id4568 . -1) (undo-tree-id4569 . -1) (undo-tree-id4570 . -1) (undo-tree-id4571 . -1) (undo-tree-id4572 . -1) (undo-tree-id4573 . -1) (undo-tree-id4574 . -1) (undo-tree-id4575 . -1) (undo-tree-id4576 . -1) (undo-tree-id4577 . -1) (undo-tree-id4578 . -1) (undo-tree-id4579 . -1) (undo-tree-id4580 . -1) (undo-tree-id4581 . -1) (undo-tree-id4582 . -1) (undo-tree-id4583 . -1) (undo-tree-id4584 . -1) (undo-tree-id4585 . -1) (undo-tree-id4586 . -1) (undo-tree-id4587 . -1) (undo-tree-id4588 . -1) (undo-tree-id4589 . -1) (undo-tree-id4590 . -1) (undo-tree-id4591 . -1) (undo-tree-id4592 . -1) (undo-tree-id4593 . -1) (undo-tree-id4594 . -1) (undo-tree-id4595 . -1) (undo-tree-id4596 . -1) (undo-tree-id4597 . -1) (undo-tree-id4598 . -1) (undo-tree-id4599 . -1) (undo-tree-id4600 . -1) (undo-tree-id4601 . -1) (undo-tree-id4602 . -1) (undo-tree-id4603 . -1) (undo-tree-id4604 . -1) (undo-tree-id4605 . -1) (undo-tree-id4606 . -1) (undo-tree-id4607 . -1) (undo-tree-id4608 . -1) (undo-tree-id4609 . -1) (undo-tree-id4610 . -1) (undo-tree-id4611 . -1) (undo-tree-id4612 . -1) (undo-tree-id4613 . -1) (undo-tree-id4614 . -1) (undo-tree-id4615 . -1) (undo-tree-id4616 . -1) (undo-tree-id4617 . -1) (undo-tree-id4618 . -1) (undo-tree-id4619 . -1) (undo-tree-id4620 . -1) (undo-tree-id4621 . -1) (undo-tree-id4622 . -1) (undo-tree-id4623 . -1) (undo-tree-id4624 . -1) (undo-tree-id4625 . -1) (undo-tree-id4626 . -1) (undo-tree-id4627 . -1) (undo-tree-id4628 . -1) (undo-tree-id4629 . -1) (undo-tree-id4630 . -1) (undo-tree-id4631 . -1) (undo-tree-id4632 . -1) (undo-tree-id4633 . -1) (undo-tree-id4634 . -1) (undo-tree-id4635 . -1) (undo-tree-id4636 . -1) (undo-tree-id4637 . -1) (undo-tree-id4638 . -1) (undo-tree-id4639 . -1) (undo-tree-id4640 . -1) (undo-tree-id4641 . -1) (undo-tree-id4642 . -1) (undo-tree-id4643 . -1) (undo-tree-id4644 . -1) (undo-tree-id4645 . -1) (undo-tree-id4646 . -1) (undo-tree-id4647 . -1) (undo-tree-id4648 . -1) (undo-tree-id4649 . -1) (undo-tree-id4650 . -1) (undo-tree-id4651 . -1) (undo-tree-id4652 . -1) (undo-tree-id4653 . -1) (undo-tree-id4654 . -1) (undo-tree-id4655 . -1) (undo-tree-id4656 . -1) (undo-tree-id4657 . -1) (undo-tree-id4658 . -1) (undo-tree-id4659 . -1) (undo-tree-id4660 . -1) (undo-tree-id4661 . -1) (undo-tree-id4662 . -1) (undo-tree-id4663 . -1) (undo-tree-id4664 . -1) (undo-tree-id4665 . -1) (undo-tree-id4666 . -1) (undo-tree-id4667 . -1) (undo-tree-id4668 . -1) (undo-tree-id4669 . -1) (undo-tree-id4670 . -1) (undo-tree-id4671 . -1) (undo-tree-id4672 . -1) (undo-tree-id4673 . -1) (undo-tree-id4674 . -1) (undo-tree-id4675 . -1) (#("t" 0 1 (fontified t)) . -14830) (undo-tree-id4676 . -1) (undo-tree-id4677 . -1) (undo-tree-id4678 . -1) (undo-tree-id4679 . -1) (undo-tree-id4680 . -1) (undo-tree-id4681 . -1) (undo-tree-id4682 . -1) (undo-tree-id4683 . -1) (undo-tree-id4684 . -1) (undo-tree-id4685 . -1) (undo-tree-id4686 . -1) (undo-tree-id4687 . -1) (undo-tree-id4688 . -1) (undo-tree-id4689 . -1) (undo-tree-id4690 . -1) (undo-tree-id4691 . -1) (undo-tree-id4692 . -1) (undo-tree-id4693 . -1) (undo-tree-id4694 . -1) (undo-tree-id4695 . -1) (undo-tree-id4696 . -1) (undo-tree-id4697 . -1) (undo-tree-id4698 . -1) (undo-tree-id4699 . -1) (undo-tree-id4700 . -1) (undo-tree-id4701 . -1) (undo-tree-id4702 . -1) (undo-tree-id4703 . -1) (undo-tree-id4704 . -1) (undo-tree-id4705 . -1) (undo-tree-id4706 . -1) (undo-tree-id4707 . -1) (undo-tree-id4708 . -1) (undo-tree-id4709 . -1) (undo-tree-id4710 . -1) (undo-tree-id4711 . -1) (undo-tree-id4712 . -1) (undo-tree-id4713 . -1) (undo-tree-id4714 . -1) (undo-tree-id4715 . -1) (undo-tree-id4716 . -1) (undo-tree-id4717 . -1) (undo-tree-id4718 . -1) (undo-tree-id4719 . -1) (undo-tree-id4720 . -1) (undo-tree-id4721 . -1) (undo-tree-id4722 . -1) (undo-tree-id4723 . -1) (undo-tree-id4724 . -1) (undo-tree-id4725 . -1) (undo-tree-id4726 . -1) (undo-tree-id4727 . -1) (undo-tree-id4728 . -1) (undo-tree-id4729 . -1) (undo-tree-id4730 . -1) (undo-tree-id4731 . -1) (undo-tree-id4732 . -1) (undo-tree-id4733 . -1) (undo-tree-id4734 . -1) (undo-tree-id4735 . -1) (undo-tree-id4736 . -1) (undo-tree-id4737 . -1) (undo-tree-id4738 . -1) (undo-tree-id4739 . -1) (undo-tree-id4740 . -1) (undo-tree-id4741 . -1) (undo-tree-id4742 . -1) (undo-tree-id4743 . -1) (undo-tree-id4744 . -1) (undo-tree-id4745 . -1) (undo-tree-id4746 . -1) (undo-tree-id4747 . -1) (undo-tree-id4748 . -1) (undo-tree-id4749 . -1) (undo-tree-id4750 . -1) (undo-tree-id4751 . -1) (undo-tree-id4752 . -1) (undo-tree-id4753 . -1) (undo-tree-id4754 . -1) (undo-tree-id4755 . -1) (undo-tree-id4756 . -1) (undo-tree-id4757 . -1) (undo-tree-id4758 . -1) (undo-tree-id4759 . -1) (undo-tree-id4760 . -1) (undo-tree-id4761 . -1) (undo-tree-id4762 . -1) (undo-tree-id4763 . -1) (undo-tree-id4764 . -1) (undo-tree-id4765 . -1) (undo-tree-id4766 . -1) (undo-tree-id4767 . -1) (undo-tree-id4768 . -1) (undo-tree-id4769 . -1) (undo-tree-id4770 . -1) (undo-tree-id4771 . -1) (undo-tree-id4772 . -1) (undo-tree-id4773 . -1) (undo-tree-id4774 . -1) (undo-tree-id4775 . -1) (undo-tree-id4776 . -1) (undo-tree-id4777 . -1) (undo-tree-id4778 . -1) (undo-tree-id4779 . -1) (undo-tree-id4780 . -1) (undo-tree-id4781 . -1) (undo-tree-id4782 . -1) (undo-tree-id4783 . -1) (undo-tree-id4784 . -1) (undo-tree-id4785 . -1) (undo-tree-id4786 . -1) (undo-tree-id4787 . -1) (undo-tree-id4788 . -1) (undo-tree-id4789 . -1) (undo-tree-id4790 . -1) (undo-tree-id4791 . -1) (undo-tree-id4792 . -1) (undo-tree-id4793 . -1) (undo-tree-id4794 . -1) (undo-tree-id4795 . -1) (undo-tree-id4796 . -1) (undo-tree-id4797 . -1) (undo-tree-id4798 . -1) (undo-tree-id4799 . -1) (undo-tree-id4800 . -1) (undo-tree-id4801 . -1) (undo-tree-id4802 . -1) (undo-tree-id4803 . -1) (undo-tree-id4804 . -1) (undo-tree-id4805 . -1) (undo-tree-id4806 . -1) (undo-tree-id4807 . -1) (undo-tree-id4808 . -1) (undo-tree-id4809 . -1) (undo-tree-id4810 . -1) (undo-tree-id4811 . -1) (undo-tree-id4812 . -1) (undo-tree-id4813 . -1) (undo-tree-id4814 . -1) (undo-tree-id4815 . -1) (undo-tree-id4816 . -1) (undo-tree-id4817 . -1) (undo-tree-id4818 . -1) (undo-tree-id4819 . -1) (undo-tree-id4820 . -1) (undo-tree-id4821 . -1) (undo-tree-id4822 . -1) (undo-tree-id4823 . -1) (undo-tree-id4824 . -1) (undo-tree-id4825 . -1) (undo-tree-id4826 . -1) (undo-tree-id4827 . -1) (undo-tree-id4828 . -1) (undo-tree-id4829 . -1) (undo-tree-id4830 . -1) (undo-tree-id4831 . -1) (undo-tree-id4832 . -1) (undo-tree-id4833 . -1) (undo-tree-id4834 . -1) (undo-tree-id4835 . -1) (undo-tree-id4836 . -1) (undo-tree-id4837 . -1) (undo-tree-id4838 . -1) (undo-tree-id4839 . -1) (undo-tree-id4840 . -1) (undo-tree-id4841 . -1) (undo-tree-id4842 . -1) (undo-tree-id4843 . -1) (undo-tree-id4844 . -1) (undo-tree-id4845 . -1) (undo-tree-id4846 . -1) (undo-tree-id4847 . -1) (undo-tree-id4848 . -1) (undo-tree-id4849 . -1) (undo-tree-id4850 . -1) (undo-tree-id4851 . -1) (undo-tree-id4852 . -1) (undo-tree-id4853 . -1) (undo-tree-id4854 . -1) (undo-tree-id4855 . -1) (undo-tree-id4856 . -1) (undo-tree-id4857 . -1) (undo-tree-id4858 . -1) (undo-tree-id4859 . -1) (undo-tree-id4860 . -1) (undo-tree-id4861 . -1) (undo-tree-id4862 . -1) (undo-tree-id4863 . -1) (undo-tree-id4864 . -1) (undo-tree-id4865 . -1) (undo-tree-id4866 . -1) (undo-tree-id4867 . -1) (undo-tree-id4868 . -1) (undo-tree-id4869 . -1) (undo-tree-id4870 . -1) (undo-tree-id4871 . -1) (undo-tree-id4872 . -1) (undo-tree-id4873 . -1) (undo-tree-id4874 . -1) (undo-tree-id4875 . -1) (undo-tree-id4876 . -1) (undo-tree-id4877 . -1) (undo-tree-id4878 . -1) (undo-tree-id4879 . -1) (undo-tree-id4880 . -1) (undo-tree-id4881 . -1) (undo-tree-id4882 . -1) (undo-tree-id4883 . -1) (undo-tree-id4884 . -1) (undo-tree-id4885 . -1) (undo-tree-id4886 . -1) (undo-tree-id4887 . -1) (undo-tree-id4888 . -1) (undo-tree-id4889 . -1) (#("i" 0 1 (fontified t)) . -14831) (undo-tree-id4890 . -1) (undo-tree-id4891 . -1) (undo-tree-id4892 . -1) (undo-tree-id4893 . -1) (undo-tree-id4894 . -1) (undo-tree-id4895 . -1) (undo-tree-id4896 . -1) (undo-tree-id4897 . -1) (undo-tree-id4898 . -1) (undo-tree-id4899 . -1) (undo-tree-id4900 . -1) (undo-tree-id4901 . -1) (undo-tree-id4902 . -1) (undo-tree-id4903 . -1) (undo-tree-id4904 . -1) (undo-tree-id4905 . -1) (undo-tree-id4906 . -1) (undo-tree-id4907 . -1) (undo-tree-id4908 . -1) (undo-tree-id4909 . -1) (undo-tree-id4910 . -1) (undo-tree-id4911 . -1) (undo-tree-id4912 . -1) (undo-tree-id4913 . -1) (undo-tree-id4914 . -1) (undo-tree-id4915 . -1) (undo-tree-id4916 . -1) (undo-tree-id4917 . -1) (undo-tree-id4918 . -1) (undo-tree-id4919 . -1) (undo-tree-id4920 . -1) (undo-tree-id4921 . -1) (undo-tree-id4922 . -1) (undo-tree-id4923 . -1) (undo-tree-id4924 . -1) (undo-tree-id4925 . -1) (undo-tree-id4926 . -1) (undo-tree-id4927 . -1) (undo-tree-id4928 . -1) (undo-tree-id4929 . -1) (undo-tree-id4930 . -1) (undo-tree-id4931 . -1) (undo-tree-id4932 . -1) (undo-tree-id4933 . -1) (undo-tree-id4934 . -1) (undo-tree-id4935 . -1) (undo-tree-id4936 . -1) (undo-tree-id4937 . -1) (undo-tree-id4938 . -1) (undo-tree-id4939 . -1) (undo-tree-id4940 . -1) (undo-tree-id4941 . -1) (undo-tree-id4942 . -1) (undo-tree-id4943 . -1) (undo-tree-id4944 . -1) (undo-tree-id4945 . -1) (undo-tree-id4946 . -1) (undo-tree-id4947 . -1) (undo-tree-id4948 . -1) (undo-tree-id4949 . -1) (undo-tree-id4950 . -1) (undo-tree-id4951 . -1) (undo-tree-id4952 . -1) (undo-tree-id4953 . -1) (undo-tree-id4954 . -1) (undo-tree-id4955 . -1) (undo-tree-id4956 . -1) (undo-tree-id4957 . -1) (undo-tree-id4958 . -1) (undo-tree-id4959 . -1) (undo-tree-id4960 . -1) (undo-tree-id4961 . -1) (undo-tree-id4962 . -1) (undo-tree-id4963 . -1) (undo-tree-id4964 . -1) (undo-tree-id4965 . -1) (undo-tree-id4966 . -1) (undo-tree-id4967 . -1) (undo-tree-id4968 . -1) (undo-tree-id4969 . -1) (undo-tree-id4970 . -1) (undo-tree-id4971 . -1) (undo-tree-id4972 . -1) (undo-tree-id4973 . -1) (undo-tree-id4974 . -1) (undo-tree-id4975 . -1) (undo-tree-id4976 . -1) (undo-tree-id4977 . -1) (undo-tree-id4978 . -1) (undo-tree-id4979 . -1) (undo-tree-id4980 . -1) (undo-tree-id4981 . -1) (undo-tree-id4982 . -1) (undo-tree-id4983 . -1) (undo-tree-id4984 . -1) (undo-tree-id4985 . -1) (undo-tree-id4986 . -1) (undo-tree-id4987 . -1) (undo-tree-id4988 . -1) (undo-tree-id4989 . -1) (undo-tree-id4990 . -1) (undo-tree-id4991 . -1) (undo-tree-id4992 . -1) (undo-tree-id4993 . -1) (undo-tree-id4994 . -1) (undo-tree-id4995 . -1) (undo-tree-id4996 . -1) (undo-tree-id4997 . -1) (undo-tree-id4998 . -1) (undo-tree-id4999 . -1) (undo-tree-id5000 . -1) (undo-tree-id5001 . -1) (undo-tree-id5002 . -1) (undo-tree-id5003 . -1) (undo-tree-id5004 . -1) (undo-tree-id5005 . -1) (undo-tree-id5006 . -1) (undo-tree-id5007 . -1) (undo-tree-id5008 . -1) (undo-tree-id5009 . -1) (undo-tree-id5010 . -1) (undo-tree-id5011 . -1) (undo-tree-id5012 . -1) (undo-tree-id5013 . -1) (undo-tree-id5014 . -1) (undo-tree-id5015 . -1) (undo-tree-id5016 . -1) (undo-tree-id5017 . -1) (undo-tree-id5018 . -1) (undo-tree-id5019 . -1) (undo-tree-id5020 . -1) (undo-tree-id5021 . -1) (undo-tree-id5022 . -1) (undo-tree-id5023 . -1) (undo-tree-id5024 . -1) (undo-tree-id5025 . -1) (undo-tree-id5026 . -1) (undo-tree-id5027 . -1) (undo-tree-id5028 . -1) (undo-tree-id5029 . -1) (undo-tree-id5030 . -1) (undo-tree-id5031 . -1) (undo-tree-id5032 . -1) (undo-tree-id5033 . -1) (undo-tree-id5034 . -1) (undo-tree-id5035 . -1) (undo-tree-id5036 . -1) (undo-tree-id5037 . -1) (undo-tree-id5038 . -1) (undo-tree-id5039 . -1) (undo-tree-id5040 . -1) (undo-tree-id5041 . -1) (undo-tree-id5042 . -1) (undo-tree-id5043 . -1) (undo-tree-id5044 . -1) (undo-tree-id5045 . -1) (undo-tree-id5046 . -1) (undo-tree-id5047 . -1) (undo-tree-id5048 . -1) (undo-tree-id5049 . -1) (undo-tree-id5050 . -1) (undo-tree-id5051 . -1) (undo-tree-id5052 . -1) (undo-tree-id5053 . -1) (undo-tree-id5054 . -1) (undo-tree-id5055 . -1) (undo-tree-id5056 . -1) (undo-tree-id5057 . -1) (undo-tree-id5058 . -1) (undo-tree-id5059 . -1) (#("n" 0 1 (fontified t)) . -14832) (undo-tree-id5060 . -1) (undo-tree-id5061 . -1) (undo-tree-id5062 . -1) (undo-tree-id5063 . -1) (undo-tree-id5064 . -1) (undo-tree-id5065 . -1) (undo-tree-id5066 . -1) (undo-tree-id5067 . -1) (undo-tree-id5068 . -1) (undo-tree-id5069 . -1) (undo-tree-id5070 . -1) (undo-tree-id5071 . -1) (undo-tree-id5072 . -1) (undo-tree-id5073 . -1) (undo-tree-id5074 . -1) (undo-tree-id5075 . -1) (undo-tree-id5076 . -1) (undo-tree-id5077 . -1) (undo-tree-id5078 . -1) (undo-tree-id5079 . -1) (undo-tree-id5080 . -1) (undo-tree-id5081 . -1) (undo-tree-id5082 . -1) (undo-tree-id5083 . -1) (undo-tree-id5084 . -1) (undo-tree-id5085 . -1) (undo-tree-id5086 . -1) (undo-tree-id5087 . -1) (undo-tree-id5088 . -1) (undo-tree-id5089 . -1) (undo-tree-id5090 . -1) (undo-tree-id5091 . -1) (undo-tree-id5092 . -1) (undo-tree-id5093 . -1) (undo-tree-id5094 . -1) (undo-tree-id5095 . -1) (undo-tree-id5096 . -1) (undo-tree-id5097 . -1) (undo-tree-id5098 . -1) (undo-tree-id5099 . -1) (undo-tree-id5100 . -1) (undo-tree-id5101 . -1) (undo-tree-id5102 . -1) (undo-tree-id5103 . -1) (undo-tree-id5104 . -1) (undo-tree-id5105 . -1) (undo-tree-id5106 . -1) (undo-tree-id5107 . -1) (undo-tree-id5108 . -1) (undo-tree-id5109 . -1) (undo-tree-id5110 . -1) (undo-tree-id5111 . -1) (undo-tree-id5112 . -1) (undo-tree-id5113 . -1) (undo-tree-id5114 . -1) (undo-tree-id5115 . -1) (undo-tree-id5116 . -1) (undo-tree-id5117 . -1) (undo-tree-id5118 . -1) (undo-tree-id5119 . -1) (undo-tree-id5120 . -1) (undo-tree-id5121 . -1) (undo-tree-id5122 . -1) (undo-tree-id5123 . -1) (undo-tree-id5124 . -1) (undo-tree-id5125 . -1) (undo-tree-id5126 . -1) (undo-tree-id5127 . -1) (undo-tree-id5128 . -1) (undo-tree-id5129 . -1) (undo-tree-id5130 . -1) (undo-tree-id5131 . -1) (undo-tree-id5132 . -1) (undo-tree-id5133 . -1) (undo-tree-id5134 . -1) (undo-tree-id5135 . -1) (undo-tree-id5136 . -1) (undo-tree-id5137 . -1) (undo-tree-id5138 . -1) (undo-tree-id5139 . -1) (undo-tree-id5140 . -1) (undo-tree-id5141 . -1) (undo-tree-id5142 . -1) (undo-tree-id5143 . -1) (undo-tree-id5144 . -1) (undo-tree-id5145 . -1) (undo-tree-id5146 . -1) (undo-tree-id5147 . -1) (undo-tree-id5148 . -1) (undo-tree-id5149 . -1) (undo-tree-id5150 . -1) (undo-tree-id5151 . -1) (undo-tree-id5152 . -1) (undo-tree-id5153 . -1) (undo-tree-id5154 . -1) (undo-tree-id5155 . -1) (undo-tree-id5156 . -1) (undo-tree-id5157 . -1) (undo-tree-id5158 . -1) (undo-tree-id5159 . -1) (undo-tree-id5160 . -1) (undo-tree-id5161 . -1) (undo-tree-id5162 . -1) (undo-tree-id5163 . -1) (undo-tree-id5164 . -1) (undo-tree-id5165 . -1) (undo-tree-id5166 . -1) (undo-tree-id5167 . -1) (undo-tree-id5168 . -1) (undo-tree-id5169 . -1) (undo-tree-id5170 . -1) (undo-tree-id5171 . -1) (undo-tree-id5172 . -1) (undo-tree-id5173 . -1) (undo-tree-id5174 . -1) (undo-tree-id5175 . -1) (undo-tree-id5176 . -1) (undo-tree-id5177 . -1) (undo-tree-id5178 . -1) (undo-tree-id5179 . -1) (undo-tree-id5180 . -1) (undo-tree-id5181 . -1) (undo-tree-id5182 . -1) (undo-tree-id5183 . -1) (undo-tree-id5184 . -1) (undo-tree-id5185 . -1) (undo-tree-id5186 . -1) (undo-tree-id5187 . -1) (undo-tree-id5188 . -1) (undo-tree-id5189 . -1) (undo-tree-id5190 . -1) (undo-tree-id5191 . -1) (undo-tree-id5192 . -1) (undo-tree-id5193 . -1) (undo-tree-id5194 . -1) (undo-tree-id5195 . -1) (undo-tree-id5196 . -1) (undo-tree-id5197 . -1) (undo-tree-id5198 . -1) (undo-tree-id5199 . -1) (undo-tree-id5200 . -1) (#("g" 0 1 (fontified t)) . -14833) (undo-tree-id5201 . -1) (undo-tree-id5202 . -1) (undo-tree-id5203 . -1) (undo-tree-id5204 . -1) (undo-tree-id5205 . -1) (undo-tree-id5206 . -1) (undo-tree-id5207 . -1) (undo-tree-id5208 . -1) (undo-tree-id5209 . -1) (undo-tree-id5210 . -1) (undo-tree-id5211 . -1) (undo-tree-id5212 . -1) (undo-tree-id5213 . -1) (undo-tree-id5214 . -1) (undo-tree-id5215 . -1) (undo-tree-id5216 . -1) (undo-tree-id5217 . -1) (undo-tree-id5218 . -1) (undo-tree-id5219 . -1) (undo-tree-id5220 . -1) (undo-tree-id5221 . -1) (undo-tree-id5222 . -1) (undo-tree-id5223 . -1) (undo-tree-id5224 . -1) (undo-tree-id5225 . -1) (undo-tree-id5226 . -1) (undo-tree-id5227 . -1) (undo-tree-id5228 . -1) (undo-tree-id5229 . -1) (undo-tree-id5230 . -1) (undo-tree-id5231 . -1) (undo-tree-id5232 . -1) (undo-tree-id5233 . -1) (undo-tree-id5234 . -1) (undo-tree-id5235 . -1) (undo-tree-id5236 . -1) (undo-tree-id5237 . -1) (undo-tree-id5238 . -1) (undo-tree-id5239 . -1) (undo-tree-id5240 . -1) (undo-tree-id5241 . -1) (undo-tree-id5242 . -1) (undo-tree-id5243 . -1) (undo-tree-id5244 . -1) (undo-tree-id5245 . -1) (undo-tree-id5246 . -1) (undo-tree-id5247 . -1) (undo-tree-id5248 . -1) (undo-tree-id5249 . -1) (undo-tree-id5250 . -1) (undo-tree-id5251 . -1) (undo-tree-id5252 . -1) (undo-tree-id5253 . -1) (undo-tree-id5254 . -1) (undo-tree-id5255 . -1) (undo-tree-id5256 . -1) (undo-tree-id5257 . -1) (undo-tree-id5258 . -1) (undo-tree-id5259 . -1) (undo-tree-id5260 . -1) (undo-tree-id5261 . -1) (undo-tree-id5262 . -1) (undo-tree-id5263 . -1) (undo-tree-id5264 . -1) (undo-tree-id5265 . -1) (undo-tree-id5266 . -1) (undo-tree-id5267 . -1) (undo-tree-id5268 . -1) (undo-tree-id5269 . -1) (undo-tree-id5270 . -1) (undo-tree-id5271 . -1) (undo-tree-id5272 . -1) (undo-tree-id5273 . -1) (undo-tree-id5274 . -1) (undo-tree-id5275 . -1) (undo-tree-id5276 . -1) (undo-tree-id5277 . -1) (undo-tree-id5278 . -1) (undo-tree-id5279 . -1) (undo-tree-id5280 . -1) (undo-tree-id5281 . -1) (undo-tree-id5282 . -1) (undo-tree-id5283 . -1) (undo-tree-id5284 . -1) (undo-tree-id5285 . -1) (undo-tree-id5286 . -1) (undo-tree-id5287 . -1) (undo-tree-id5288 . -1) (undo-tree-id5289 . -1) (undo-tree-id5290 . -1) (undo-tree-id5291 . -1) (undo-tree-id5292 . -1) (undo-tree-id5293 . -1) (undo-tree-id5294 . -1) (undo-tree-id5295 . -1) (undo-tree-id5296 . -1) (undo-tree-id5297 . -1) (undo-tree-id5298 . -1) (undo-tree-id5299 . -1) (undo-tree-id5300 . -1) (undo-tree-id5301 . -1) (undo-tree-id5302 . -1) (undo-tree-id5303 . -1) (undo-tree-id5304 . -1) (undo-tree-id5305 . -1) (undo-tree-id5306 . -1) (undo-tree-id5307 . -1) (undo-tree-id5308 . -1) (undo-tree-id5309 . -1) (undo-tree-id5310 . -1) (undo-tree-id5311 . -1) (undo-tree-id5312 . -1) (#(" " 0 1 (fontified t)) . -14834) (undo-tree-id5313 . -1) (undo-tree-id5314 . -1) (undo-tree-id5315 . -1) (undo-tree-id5316 . -1) (undo-tree-id5317 . -1) (undo-tree-id5318 . -1) (undo-tree-id5319 . -1) (undo-tree-id5320 . -1) (undo-tree-id5321 . -1) (undo-tree-id5322 . -1) (undo-tree-id5323 . -1) (undo-tree-id5324 . -1) (undo-tree-id5325 . -1) (undo-tree-id5326 . -1) (undo-tree-id5327 . -1) (undo-tree-id5328 . -1) (undo-tree-id5329 . -1) (undo-tree-id5330 . -1) (undo-tree-id5331 . -1) (undo-tree-id5332 . -1) (undo-tree-id5333 . -1) (undo-tree-id5334 . -1) (undo-tree-id5335 . -1) (undo-tree-id5336 . -1) (undo-tree-id5337 . -1) (undo-tree-id5338 . -1) (undo-tree-id5339 . -1) (undo-tree-id5340 . -1) (undo-tree-id5341 . -1) (undo-tree-id5342 . -1) (undo-tree-id5343 . -1) (undo-tree-id5344 . -1) (undo-tree-id5345 . -1) (undo-tree-id5346 . -1) (undo-tree-id5347 . -1) (undo-tree-id5348 . -1) (undo-tree-id5349 . -1) (undo-tree-id5350 . -1) (undo-tree-id5351 . -1) (undo-tree-id5352 . -1) (undo-tree-id5353 . -1) (undo-tree-id5354 . -1) (undo-tree-id5355 . -1) (undo-tree-id5356 . -1) (undo-tree-id5357 . -1) (undo-tree-id5358 . -1) (undo-tree-id5359 . -1) (undo-tree-id5360 . -1) (undo-tree-id5361 . -1) (undo-tree-id5362 . -1) (undo-tree-id5363 . -1) (undo-tree-id5364 . -1) (undo-tree-id5365 . -1) (undo-tree-id5366 . -1) (undo-tree-id5367 . -1) (undo-tree-id5368 . -1) (undo-tree-id5369 . -1) (undo-tree-id5370 . -1) (undo-tree-id5371 . -1) (undo-tree-id5372 . -1) (undo-tree-id5373 . -1) (undo-tree-id5374 . -1) (undo-tree-id5375 . -1) (undo-tree-id5376 . -1) (undo-tree-id5377 . -1) (undo-tree-id5378 . -1) (undo-tree-id5379 . -1) (undo-tree-id5380 . -1) (undo-tree-id5381 . -1) (undo-tree-id5382 . -1) (undo-tree-id5383 . -1) (undo-tree-id5384 . -1) (undo-tree-id5385 . -1) (undo-tree-id5386 . -1) (undo-tree-id5387 . -1) (undo-tree-id5388 . -1) (undo-tree-id5389 . -1) (undo-tree-id5390 . -1) (undo-tree-id5391 . -1) (undo-tree-id5392 . -1) (undo-tree-id5393 . -1) (undo-tree-id5394 . -1) (undo-tree-id5395 . -1) 14835 (14834 . 14835) (14828 . 14834) (14807 . 14828) (#("w" 0 1 (fontified t)) . -14807) (undo-tree-id5396 . -1) (undo-tree-id5397 . -1) (undo-tree-id5398 . -1) (undo-tree-id5399 . -1) (undo-tree-id5400 . -1) (undo-tree-id5401 . -1) (undo-tree-id5402 . -1) (undo-tree-id5403 . -1) (undo-tree-id5404 . -1) (undo-tree-id5405 . -1) (undo-tree-id5406 . -1) (undo-tree-id5407 . -1) (undo-tree-id5408 . -1) 14808 (14804 . 14808) (14783 . 14804) (#("r" 0 1 (fontified t)) . -14783) (undo-tree-id5409 . -1) (undo-tree-id5410 . -1) (undo-tree-id5411 . -1) (undo-tree-id5412 . -1) (undo-tree-id5413 . -1) (undo-tree-id5414 . -1) (undo-tree-id5415 . -1) (undo-tree-id5416 . -1) (undo-tree-id5417 . -1) (undo-tree-id5418 . -1) (undo-tree-id5419 . -1) (undo-tree-id5420 . -1) (undo-tree-id5421 . -1) (undo-tree-id5422 . -1) (undo-tree-id5423 . -1) (undo-tree-id5424 . -1) (undo-tree-id5425 . -1) (undo-tree-id5426 . -1) 14784 (14778 . 14784) (14776 . 14778) (14773 . 14775) (#("g" 0 1 (fontified t)) . -14773) (undo-tree-id5427 . -1) (undo-tree-id5428 . -1) (undo-tree-id5429 . -1) (undo-tree-id5430 . -1) (undo-tree-id5431 . -1) (undo-tree-id5432 . -1) (undo-tree-id5433 . -1) (undo-tree-id5434 . -1) (undo-tree-id5435 . -1) (undo-tree-id5436 . -1) (undo-tree-id5437 . -1) (undo-tree-id5438 . -1) (undo-tree-id5439 . -1) (undo-tree-id5440 . -1) (undo-tree-id5441 . -1) (undo-tree-id5442 . -1) (undo-tree-id5443 . -1) (undo-tree-id5444 . -1) (undo-tree-id5445 . -1) (undo-tree-id5446 . -1) (undo-tree-id5447 . -1) (undo-tree-id5448 . -1) (#("i" 0 1 (fontified t)) . -14774) (undo-tree-id5449 . -1) (undo-tree-id5450 . -1) (undo-tree-id5451 . -1) (undo-tree-id5452 . -1) (undo-tree-id5453 . -1) (undo-tree-id5454 . -1) (undo-tree-id5455 . -1) (undo-tree-id5456 . -1) 14775 (14768 . 14775) (#("c" 0 1 (fontified t)) . -14768) (undo-tree-id5457 . -1) (undo-tree-id5458 . -1) (undo-tree-id5459 . -1) (undo-tree-id5460 . -1) (undo-tree-id5461 . -1) (undo-tree-id5462 . -1) (undo-tree-id5463 . -1) (undo-tree-id5464 . -1) (undo-tree-id5465 . -1) (undo-tree-id5466 . -1) (undo-tree-id5467 . -1) (undo-tree-id5468 . -1) (undo-tree-id5469 . -1) (undo-tree-id5470 . -1) (undo-tree-id5471 . -1) (undo-tree-id5472 . -1) (undo-tree-id5473 . -1) (undo-tree-id5474 . -1) (undo-tree-id5475 . -1) (undo-tree-id5476 . -1) (undo-tree-id5477 . -1) (undo-tree-id5478 . -1) (undo-tree-id5479 . -1) (undo-tree-id5480 . -1) (undo-tree-id5481 . -1) (undo-tree-id5482 . -1) (undo-tree-id5483 . -1) (undo-tree-id5484 . -1) (undo-tree-id5485 . -1) (undo-tree-id5486 . -1) (undo-tree-id5487 . -1) (undo-tree-id5488 . -1) (undo-tree-id5489 . -1) (undo-tree-id5490 . -1) (undo-tree-id5491 . -1) (undo-tree-id5492 . -1) (undo-tree-id5493 . -1) (undo-tree-id5494 . -1) (undo-tree-id5495 . -1) (undo-tree-id5496 . -1) (undo-tree-id5497 . -1) (undo-tree-id5498 . -1) (undo-tree-id5499 . -1) (undo-tree-id5500 . -1) (undo-tree-id5501 . -1) (undo-tree-id5502 . -1) (undo-tree-id5503 . -1) (undo-tree-id5504 . -1) (undo-tree-id5505 . -1) (undo-tree-id5506 . -1) (undo-tree-id5507 . -1) (undo-tree-id5508 . -1) (undo-tree-id5509 . -1) (undo-tree-id5510 . -1) (undo-tree-id5511 . -1) (undo-tree-id5512 . -1) (undo-tree-id5513 . -1) (undo-tree-id5514 . -1) (undo-tree-id5515 . -1) (undo-tree-id5516 . -1) (undo-tree-id5517 . -1) (undo-tree-id5518 . -1) (undo-tree-id5519 . -1) (undo-tree-id5520 . -1) (undo-tree-id5521 . -1) (undo-tree-id5522 . -1) (undo-tree-id5523 . -1) (undo-tree-id5524 . -1) (undo-tree-id5525 . -1) (undo-tree-id5526 . -1) (undo-tree-id5527 . -1) (undo-tree-id5528 . -1) (undo-tree-id5529 . -1) (undo-tree-id5530 . -1) (undo-tree-id5531 . -1) (undo-tree-id5532 . -1) (undo-tree-id5533 . -1) (undo-tree-id5534 . -1) (#("o" 0 1 (fontified t)) . -14769) (undo-tree-id5535 . -1) (undo-tree-id5536 . -1) (undo-tree-id5537 . -1) (undo-tree-id5538 . -1) (undo-tree-id5539 . -1) (undo-tree-id5540 . -1) (undo-tree-id5541 . -1) (undo-tree-id5542 . -1) (undo-tree-id5543 . -1) (undo-tree-id5544 . -1) (undo-tree-id5545 . -1) (undo-tree-id5546 . -1) (undo-tree-id5547 . -1) (undo-tree-id5548 . -1) (undo-tree-id5549 . -1) (undo-tree-id5550 . -1) (undo-tree-id5551 . -1) (undo-tree-id5552 . -1) (undo-tree-id5553 . -1) (undo-tree-id5554 . -1) (undo-tree-id5555 . -1) (undo-tree-id5556 . -1) (undo-tree-id5557 . -1) (undo-tree-id5558 . -1) (undo-tree-id5559 . -1) (undo-tree-id5560 . -1) (undo-tree-id5561 . -1) (undo-tree-id5562 . -1) (undo-tree-id5563 . -1) (undo-tree-id5564 . -1) (undo-tree-id5565 . -1) (undo-tree-id5566 . -1) (undo-tree-id5567 . -1) (undo-tree-id5568 . -1) (undo-tree-id5569 . -1) (undo-tree-id5570 . -1) (undo-tree-id5571 . -1) (undo-tree-id5572 . -1) (undo-tree-id5573 . -1) (undo-tree-id5574 . -1) (undo-tree-id5575 . -1) (undo-tree-id5576 . -1) (undo-tree-id5577 . -1) (undo-tree-id5578 . -1) (undo-tree-id5579 . -1) (undo-tree-id5580 . -1) (undo-tree-id5581 . -1) (undo-tree-id5582 . -1) (undo-tree-id5583 . -1) (undo-tree-id5584 . -1) (undo-tree-id5585 . -1) (undo-tree-id5586 . -1) (undo-tree-id5587 . -1) (undo-tree-id5588 . -1) (undo-tree-id5589 . -1) (undo-tree-id5590 . -1) (undo-tree-id5591 . -1) (undo-tree-id5592 . -1) (undo-tree-id5593 . -1) (undo-tree-id5594 . -1) (undo-tree-id5595 . -1) (undo-tree-id5596 . -1) (undo-tree-id5597 . -1) (undo-tree-id5598 . -1) (#("n" 0 1 (fontified t)) . -14770) (undo-tree-id5599 . -1) (undo-tree-id5600 . -1) (undo-tree-id5601 . -1) (undo-tree-id5602 . -1) (undo-tree-id5603 . -1) (undo-tree-id5604 . -1) (undo-tree-id5605 . -1) (undo-tree-id5606 . -1) (undo-tree-id5607 . -1) (undo-tree-id5608 . -1) (undo-tree-id5609 . -1) (undo-tree-id5610 . -1) (undo-tree-id5611 . -1) (undo-tree-id5612 . -1) (undo-tree-id5613 . -1) (undo-tree-id5614 . -1) (undo-tree-id5615 . -1) (undo-tree-id5616 . -1) (undo-tree-id5617 . -1) (undo-tree-id5618 . -1) (undo-tree-id5619 . -1) (undo-tree-id5620 . -1) (undo-tree-id5621 . -1) (undo-tree-id5622 . -1) (undo-tree-id5623 . -1) (undo-tree-id5624 . -1) (undo-tree-id5625 . -1) (undo-tree-id5626 . -1) (undo-tree-id5627 . -1) (undo-tree-id5628 . -1) (undo-tree-id5629 . -1) (undo-tree-id5630 . -1) (undo-tree-id5631 . -1) (undo-tree-id5632 . -1) (undo-tree-id5633 . -1) (undo-tree-id5634 . -1) (undo-tree-id5635 . -1) (undo-tree-id5636 . -1) (undo-tree-id5637 . -1) (undo-tree-id5638 . -1) (undo-tree-id5639 . -1) (undo-tree-id5640 . -1) (undo-tree-id5641 . -1) (undo-tree-id5642 . -1) (undo-tree-id5643 . -1) (undo-tree-id5644 . -1) (undo-tree-id5645 . -1) (undo-tree-id5646 . -1) (undo-tree-id5647 . -1) (undo-tree-id5648 . -1) (#("f" 0 1 (fontified t)) . -14771) (undo-tree-id5649 . -1) (undo-tree-id5650 . -1) (undo-tree-id5651 . -1) (undo-tree-id5652 . -1) (undo-tree-id5653 . -1) (undo-tree-id5654 . -1) (undo-tree-id5655 . -1) (undo-tree-id5656 . -1) (undo-tree-id5657 . -1) (undo-tree-id5658 . -1) (undo-tree-id5659 . -1) (undo-tree-id5660 . -1) (undo-tree-id5661 . -1) (undo-tree-id5662 . -1) (undo-tree-id5663 . -1) (undo-tree-id5664 . -1) (undo-tree-id5665 . -1) (undo-tree-id5666 . -1) (undo-tree-id5667 . -1) (undo-tree-id5668 . -1) (undo-tree-id5669 . -1) (undo-tree-id5670 . -1) (undo-tree-id5671 . -1) (undo-tree-id5672 . -1) (undo-tree-id5673 . -1) (undo-tree-id5674 . -1) (undo-tree-id5675 . -1) (undo-tree-id5676 . -1) (undo-tree-id5677 . -1) (undo-tree-id5678 . -1) (undo-tree-id5679 . -1) (undo-tree-id5680 . -1) (undo-tree-id5681 . -1) (undo-tree-id5682 . -1) (undo-tree-id5683 . -1) (undo-tree-id5684 . -1) (#("g" 0 1 (fontified t)) . -14772) (undo-tree-id5685 . -1) (undo-tree-id5686 . -1) (undo-tree-id5687 . -1) (undo-tree-id5688 . -1) (undo-tree-id5689 . -1) (undo-tree-id5690 . -1) (undo-tree-id5691 . -1) (undo-tree-id5692 . -1) (undo-tree-id5693 . -1) (undo-tree-id5694 . -1) (undo-tree-id5695 . -1) (undo-tree-id5696 . -1) (undo-tree-id5697 . -1) (undo-tree-id5698 . -1) (undo-tree-id5699 . -1) (undo-tree-id5700 . -1) (undo-tree-id5701 . -1) (undo-tree-id5702 . -1) (undo-tree-id5703 . -1) (undo-tree-id5704 . -1) (undo-tree-id5705 . -1) (undo-tree-id5706 . -1) (#("i" 0 1 (fontified t)) . -14773) (undo-tree-id5707 . -1) (undo-tree-id5708 . -1) (undo-tree-id5709 . -1) (undo-tree-id5710 . -1) (undo-tree-id5711 . -1) (undo-tree-id5712 . -1) (undo-tree-id5713 . -1) (undo-tree-id5714 . -1) 14774 (14768 . 14774) (14753 . 14768) (14747 . 14754) (#("t" 0 1 (fontified t)) . -14747) (undo-tree-id5715 . -1) (undo-tree-id5716 . -1) (undo-tree-id5717 . -1) (undo-tree-id5718 . -1) (undo-tree-id5719 . -1) (undo-tree-id5720 . -1) (undo-tree-id5721 . -1) (undo-tree-id5722 . -1) (undo-tree-id5723 . -1) (undo-tree-id5724 . -1) (undo-tree-id5725 . -1) (undo-tree-id5726 . -1) (undo-tree-id5727 . -1) (undo-tree-id5728 . -1) (undo-tree-id5729 . -1) (undo-tree-id5730 . -1) (undo-tree-id5731 . -1) (undo-tree-id5732 . -1) (undo-tree-id5733 . -1) (undo-tree-id5734 . -1) (undo-tree-id5735 . -1) (undo-tree-id5736 . -1) (#("b" 0 1 (fontified t)) . -14748) (undo-tree-id5737 . -1) (undo-tree-id5738 . -1) (undo-tree-id5739 . -1) (undo-tree-id5740 . -1) (undo-tree-id5741 . -1) (undo-tree-id5742 . -1) (undo-tree-id5743 . -1) (undo-tree-id5744 . -1) 14749 (14746 . 14749) (#("o" 0 1 (fontified t)) . -14746) (undo-tree-id5745 . -1) (undo-tree-id5746 . -1) (undo-tree-id5747 . -1) (undo-tree-id5748 . -1) (undo-tree-id5749 . -1) (undo-tree-id5750 . -1) (undo-tree-id5751 . -1) (undo-tree-id5752 . -1) 14747 (14744 . 14747) (14741 . 14744) (#("b" 0 1 (fontified t)) . -14741) (undo-tree-id5753 . -1) (undo-tree-id5754 . -1) (undo-tree-id5755 . -1) (undo-tree-id5756 . -1) (undo-tree-id5757 . -1) (undo-tree-id5758 . -1) (undo-tree-id5759 . -1) (undo-tree-id5760 . -1) (undo-tree-id5761 . -1) (undo-tree-id5762 . -1) (undo-tree-id5763 . -1) (undo-tree-id5764 . -1) (undo-tree-id5765 . -1) (undo-tree-id5766 . -1) (undo-tree-id5767 . -1) (undo-tree-id5768 . -1) (undo-tree-id5769 . -1) (undo-tree-id5770 . -1) (undo-tree-id5771 . -1) (undo-tree-id5772 . -1) (undo-tree-id5773 . -1) (undo-tree-id5774 . -1) (undo-tree-id5775 . -1) (undo-tree-id5776 . -1) (undo-tree-id5777 . -1) (undo-tree-id5778 . -1) (undo-tree-id5779 . -1) (undo-tree-id5780 . -1) (undo-tree-id5781 . -1) (undo-tree-id5782 . -1) (undo-tree-id5783 . -1) (undo-tree-id5784 . -1) (undo-tree-id5785 . -1) (undo-tree-id5786 . -1) (undo-tree-id5787 . -1) (undo-tree-id5788 . -1) (undo-tree-id5789 . -1) (undo-tree-id5790 . -1) (undo-tree-id5791 . -1) (undo-tree-id5792 . -1) (undo-tree-id5793 . -1) (undo-tree-id5794 . -1) (undo-tree-id5795 . -1) (undo-tree-id5796 . -1) (undo-tree-id5797 . -1) (undo-tree-id5798 . -1) (undo-tree-id5799 . -1) (undo-tree-id5800 . -1) (undo-tree-id5801 . -1) (undo-tree-id5802 . -1) (undo-tree-id5803 . -1) (undo-tree-id5804 . -1) (undo-tree-id5805 . -1) (undo-tree-id5806 . -1) (undo-tree-id5807 . -1) (undo-tree-id5808 . -1) (#("i" 0 1 (fontified t)) . -14742) (undo-tree-id5809 . -1) (undo-tree-id5810 . -1) (undo-tree-id5811 . -1) (undo-tree-id5812 . -1) (undo-tree-id5813 . -1) (undo-tree-id5814 . -1) (undo-tree-id5815 . -1) (undo-tree-id5816 . -1) (undo-tree-id5817 . -1) (undo-tree-id5818 . -1) (undo-tree-id5819 . -1) (undo-tree-id5820 . -1) (undo-tree-id5821 . -1) (undo-tree-id5822 . -1) (undo-tree-id5823 . -1) (undo-tree-id5824 . -1) (undo-tree-id5825 . -1) (undo-tree-id5826 . -1) (undo-tree-id5827 . -1) (undo-tree-id5828 . -1) (undo-tree-id5829 . -1) (undo-tree-id5830 . -1) (undo-tree-id5831 . -1) (undo-tree-id5832 . -1) (undo-tree-id5833 . -1) (undo-tree-id5834 . -1) (undo-tree-id5835 . -1) (undo-tree-id5836 . -1) (undo-tree-id5837 . -1) (undo-tree-id5838 . -1) (undo-tree-id5839 . -1) (undo-tree-id5840 . -1) (undo-tree-id5841 . -1) (undo-tree-id5842 . -1) (undo-tree-id5843 . -1) (undo-tree-id5844 . -1) (undo-tree-id5845 . -1) (undo-tree-id5846 . -1) (undo-tree-id5847 . -1) (undo-tree-id5848 . -1) (undo-tree-id5849 . -1) (undo-tree-id5850 . -1) (#("b" 0 1 (fontified t)) . -14743) (undo-tree-id5851 . -1) (undo-tree-id5852 . -1) (undo-tree-id5853 . -1) (undo-tree-id5854 . -1) (undo-tree-id5855 . -1) (undo-tree-id5856 . -1) (undo-tree-id5857 . -1) (undo-tree-id5858 . -1) (undo-tree-id5859 . -1) (undo-tree-id5860 . -1) (undo-tree-id5861 . -1) (undo-tree-id5862 . -1) (undo-tree-id5863 . -1) (undo-tree-id5864 . -1) (undo-tree-id5865 . -1) (undo-tree-id5866 . -1) (undo-tree-id5867 . -1) (undo-tree-id5868 . -1) (undo-tree-id5869 . -1) (undo-tree-id5870 . -1) (undo-tree-id5871 . -1) (undo-tree-id5872 . -1) (undo-tree-id5873 . -1) (undo-tree-id5874 . -1) (undo-tree-id5875 . -1) (undo-tree-id5876 . -1) (undo-tree-id5877 . -1) (undo-tree-id5878 . -1) (undo-tree-id5879 . -1) 14744 (14740 . 14744) (14719 . 14740) (#("d" 0 1 (fontified t)) . -14719) (undo-tree-id5880 . -1) (undo-tree-id5881 . -1) (undo-tree-id5882 . -1) (undo-tree-id5883 . -1) (undo-tree-id5884 . -1) (undo-tree-id5885 . -1) (undo-tree-id5886 . -1) (undo-tree-id5887 . -1) (undo-tree-id5888 . -1) (undo-tree-id5889 . -1) (undo-tree-id5890 . -1) (undo-tree-id5891 . -1) (undo-tree-id5892 . -1) (undo-tree-id5893 . -1) (undo-tree-id5894 . -1) (undo-tree-id5895 . -1) (undo-tree-id5896 . -1) (undo-tree-id5897 . -1) (undo-tree-id5898 . -1) (undo-tree-id5899 . -1) (undo-tree-id5900 . -1) (undo-tree-id5901 . -1) (#("n" 0 1 (fontified t)) . -14720) (undo-tree-id5902 . -1) (undo-tree-id5903 . -1) (undo-tree-id5904 . -1) (undo-tree-id5905 . -1) (undo-tree-id5906 . -1) (undo-tree-id5907 . -1) (undo-tree-id5908 . -1) (undo-tree-id5909 . -1) 14721 (14714 . 14721) (#("c" 0 1 (fontified t)) . -14714) (undo-tree-id5910 . -1) (undo-tree-id5911 . -1) (undo-tree-id5912 . -1) (undo-tree-id5913 . -1) (undo-tree-id5914 . -1) (undo-tree-id5915 . -1) (undo-tree-id5916 . -1) (undo-tree-id5917 . -1) 14715 (14697 . 14715) (#("C" 0 1 (fontified t)) . -14697) (undo-tree-id5918 . -1) (undo-tree-id5919 . -1) (undo-tree-id5920 . -1) (undo-tree-id5921 . -1) (undo-tree-id5922 . -1) (undo-tree-id5923 . -1) (undo-tree-id5924 . -1) (undo-tree-id5925 . -1) (undo-tree-id5926 . -1) (undo-tree-id5927 . -1) (undo-tree-id5928 . -1) (undo-tree-id5929 . -1) (undo-tree-id5930 . -1) (undo-tree-id5931 . -1) (undo-tree-id5932 . -1) (undo-tree-id5933 . -1) (undo-tree-id5934 . -1) (undo-tree-id5935 . -1) (undo-tree-id5936 . -1) (undo-tree-id5937 . -1) (undo-tree-id5938 . -1) (undo-tree-id5939 . -1) (undo-tree-id5940 . -1) (undo-tree-id5941 . -1) (undo-tree-id5942 . -1) (undo-tree-id5943 . -1) (undo-tree-id5944 . -1) (undo-tree-id5945 . -1) (undo-tree-id5946 . -1) (undo-tree-id5947 . -1) (undo-tree-id5948 . -1) (undo-tree-id5949 . -1) (undo-tree-id5950 . -1) (undo-tree-id5951 . -1) (undo-tree-id5952 . -1) (undo-tree-id5953 . -1) (undo-tree-id5954 . -1) (undo-tree-id5955 . -1) (undo-tree-id5956 . -1) (undo-tree-id5957 . -1) (undo-tree-id5958 . -1) (undo-tree-id5959 . -1) (undo-tree-id5960 . -1) (undo-tree-id5961 . -1) (undo-tree-id5962 . -1) (undo-tree-id5963 . -1) (undo-tree-id5964 . -1) (undo-tree-id5965 . -1) (undo-tree-id5966 . -1) (undo-tree-id5967 . -1) (undo-tree-id5968 . -1) (undo-tree-id5969 . -1) (undo-tree-id5970 . -1) (undo-tree-id5971 . -1) (undo-tree-id5972 . -1) (undo-tree-id5973 . -1) (undo-tree-id5974 . -1) (undo-tree-id5975 . -1) (undo-tree-id5976 . -1) (undo-tree-id5977 . -1) (undo-tree-id5978 . -1) (undo-tree-id5979 . -1) (undo-tree-id5980 . -1) (undo-tree-id5981 . -1) (undo-tree-id5982 . -1) (undo-tree-id5983 . -1) (undo-tree-id5984 . -1) (undo-tree-id5985 . -1) (undo-tree-id5986 . -1) (undo-tree-id5987 . -1) (undo-tree-id5988 . -1) (undo-tree-id5989 . -1) (undo-tree-id5990 . -1) (undo-tree-id5991 . -1) (undo-tree-id5992 . -1) (undo-tree-id5993 . -1) (undo-tree-id5994 . -1) (undo-tree-id5995 . -1) (undo-tree-id5996 . -1) (undo-tree-id5997 . -1) (undo-tree-id5998 . -1) (undo-tree-id5999 . -1) (undo-tree-id6000 . -1) (undo-tree-id6001 . -1) (undo-tree-id6002 . -1) (undo-tree-id6003 . -1) (undo-tree-id6004 . -1) (undo-tree-id6005 . -1) (undo-tree-id6006 . -1) (undo-tree-id6007 . -1) (undo-tree-id6008 . -1) (undo-tree-id6009 . -1) (undo-tree-id6010 . -1) (undo-tree-id6011 . -1) (undo-tree-id6012 . -1) (undo-tree-id6013 . -1) (undo-tree-id6014 . -1) (undo-tree-id6015 . -1) (undo-tree-id6016 . -1) (undo-tree-id6017 . -1) (undo-tree-id6018 . -1) (undo-tree-id6019 . -1) (undo-tree-id6020 . -1) (undo-tree-id6021 . -1) (undo-tree-id6022 . -1) (undo-tree-id6023 . -1) (undo-tree-id6024 . -1) (undo-tree-id6025 . -1) (undo-tree-id6026 . -1) (undo-tree-id6027 . -1) (undo-tree-id6028 . -1) (undo-tree-id6029 . -1) (undo-tree-id6030 . -1) (undo-tree-id6031 . -1) (undo-tree-id6032 . -1) (undo-tree-id6033 . -1) (undo-tree-id6034 . -1) (undo-tree-id6035 . -1) (undo-tree-id6036 . -1) (undo-tree-id6037 . -1) (#("i" 0 1 (fontified t)) . -14698) (undo-tree-id6038 . -1) (undo-tree-id6039 . -1) (undo-tree-id6040 . -1) (undo-tree-id6041 . -1) (undo-tree-id6042 . -1) (undo-tree-id6043 . -1) (undo-tree-id6044 . -1) (undo-tree-id6045 . -1) (undo-tree-id6046 . -1) (undo-tree-id6047 . -1) (undo-tree-id6048 . -1) (undo-tree-id6049 . -1) (undo-tree-id6050 . -1) (undo-tree-id6051 . -1) (undo-tree-id6052 . -1) (undo-tree-id6053 . -1) (undo-tree-id6054 . -1) (undo-tree-id6055 . -1) (undo-tree-id6056 . -1) (undo-tree-id6057 . -1) (undo-tree-id6058 . -1) (undo-tree-id6059 . -1) (undo-tree-id6060 . -1) (undo-tree-id6061 . -1) (undo-tree-id6062 . -1) (undo-tree-id6063 . -1) (undo-tree-id6064 . -1) (undo-tree-id6065 . -1) (undo-tree-id6066 . -1) (undo-tree-id6067 . -1) (undo-tree-id6068 . -1) (undo-tree-id6069 . -1) (undo-tree-id6070 . -1) (undo-tree-id6071 . -1) (undo-tree-id6072 . -1) (undo-tree-id6073 . -1) (undo-tree-id6074 . -1) (undo-tree-id6075 . -1) (undo-tree-id6076 . -1) (undo-tree-id6077 . -1) (undo-tree-id6078 . -1) (undo-tree-id6079 . -1) (undo-tree-id6080 . -1) (undo-tree-id6081 . -1) (undo-tree-id6082 . -1) (undo-tree-id6083 . -1) (undo-tree-id6084 . -1) (undo-tree-id6085 . -1) (undo-tree-id6086 . -1) (undo-tree-id6087 . -1) (undo-tree-id6088 . -1) (undo-tree-id6089 . -1) (undo-tree-id6090 . -1) (undo-tree-id6091 . -1) (undo-tree-id6092 . -1) (undo-tree-id6093 . -1) (undo-tree-id6094 . -1) (undo-tree-id6095 . -1) (undo-tree-id6096 . -1) (undo-tree-id6097 . -1) (undo-tree-id6098 . -1) (undo-tree-id6099 . -1) (undo-tree-id6100 . -1) (undo-tree-id6101 . -1) (undo-tree-id6102 . -1) (undo-tree-id6103 . -1) (undo-tree-id6104 . -1) (undo-tree-id6105 . -1) (undo-tree-id6106 . -1) (undo-tree-id6107 . -1) (undo-tree-id6108 . -1) (undo-tree-id6109 . -1) (undo-tree-id6110 . -1) (undo-tree-id6111 . -1) (undo-tree-id6112 . -1) (undo-tree-id6113 . -1) (undo-tree-id6114 . -1) (undo-tree-id6115 . -1) (undo-tree-id6116 . -1) (undo-tree-id6117 . -1) (undo-tree-id6118 . -1) (undo-tree-id6119 . -1) (undo-tree-id6120 . -1) (undo-tree-id6121 . -1) (undo-tree-id6122 . -1) (undo-tree-id6123 . -1) (undo-tree-id6124 . -1) (undo-tree-id6125 . -1) (undo-tree-id6126 . -1) (undo-tree-id6127 . -1) (undo-tree-id6128 . -1) (undo-tree-id6129 . -1) (undo-tree-id6130 . -1) (undo-tree-id6131 . -1) (undo-tree-id6132 . -1) (undo-tree-id6133 . -1) (undo-tree-id6134 . -1) (undo-tree-id6135 . -1) (undo-tree-id6136 . -1) (undo-tree-id6137 . -1) (undo-tree-id6138 . -1) (undo-tree-id6139 . -1) (undo-tree-id6140 . -1) (undo-tree-id6141 . -1) (undo-tree-id6142 . -1) (undo-tree-id6143 . -1) (#("t" 0 1 (fontified t)) . -14699) (undo-tree-id6144 . -1) (undo-tree-id6145 . -1) (undo-tree-id6146 . -1) (undo-tree-id6147 . -1) (undo-tree-id6148 . -1) (undo-tree-id6149 . -1) (undo-tree-id6150 . -1) (undo-tree-id6151 . -1) (undo-tree-id6152 . -1) (undo-tree-id6153 . -1) (undo-tree-id6154 . -1) (undo-tree-id6155 . -1) (undo-tree-id6156 . -1) (undo-tree-id6157 . -1) (undo-tree-id6158 . -1) (undo-tree-id6159 . -1) (undo-tree-id6160 . -1) (undo-tree-id6161 . -1) (undo-tree-id6162 . -1) (undo-tree-id6163 . -1) (undo-tree-id6164 . -1) (undo-tree-id6165 . -1) (undo-tree-id6166 . -1) (undo-tree-id6167 . -1) (undo-tree-id6168 . -1) (undo-tree-id6169 . -1) (undo-tree-id6170 . -1) (undo-tree-id6171 . -1) (undo-tree-id6172 . -1) (undo-tree-id6173 . -1) (undo-tree-id6174 . -1) (undo-tree-id6175 . -1) (undo-tree-id6176 . -1) (undo-tree-id6177 . -1) (undo-tree-id6178 . -1) (undo-tree-id6179 . -1) (undo-tree-id6180 . -1) (undo-tree-id6181 . -1) (undo-tree-id6182 . -1) (undo-tree-id6183 . -1) (undo-tree-id6184 . -1) (undo-tree-id6185 . -1) (undo-tree-id6186 . -1) (undo-tree-id6187 . -1) (undo-tree-id6188 . -1) (undo-tree-id6189 . -1) (undo-tree-id6190 . -1) (undo-tree-id6191 . -1) (undo-tree-id6192 . -1) (undo-tree-id6193 . -1) (undo-tree-id6194 . -1) (undo-tree-id6195 . -1) (undo-tree-id6196 . -1) (undo-tree-id6197 . -1) (undo-tree-id6198 . -1) (undo-tree-id6199 . -1) (undo-tree-id6200 . -1) (undo-tree-id6201 . -1) (undo-tree-id6202 . -1) (undo-tree-id6203 . -1) (undo-tree-id6204 . -1) (undo-tree-id6205 . -1) (undo-tree-id6206 . -1) (undo-tree-id6207 . -1) (undo-tree-id6208 . -1) (undo-tree-id6209 . -1) (undo-tree-id6210 . -1) (undo-tree-id6211 . -1) (undo-tree-id6212 . -1) (undo-tree-id6213 . -1) (undo-tree-id6214 . -1) (undo-tree-id6215 . -1) (undo-tree-id6216 . -1) (undo-tree-id6217 . -1) (undo-tree-id6218 . -1) (undo-tree-id6219 . -1) (undo-tree-id6220 . -1) (undo-tree-id6221 . -1) (undo-tree-id6222 . -1) (undo-tree-id6223 . -1) (undo-tree-id6224 . -1) (undo-tree-id6225 . -1) (undo-tree-id6226 . -1) (undo-tree-id6227 . -1) (undo-tree-id6228 . -1) (undo-tree-id6229 . -1) (undo-tree-id6230 . -1) (undo-tree-id6231 . -1) (undo-tree-id6232 . -1) (undo-tree-id6233 . -1) (undo-tree-id6234 . -1) (undo-tree-id6235 . -1) (#("a" 0 1 (fontified t)) . -14700) (undo-tree-id6236 . -1) (undo-tree-id6237 . -1) (undo-tree-id6238 . -1) (undo-tree-id6239 . -1) (undo-tree-id6240 . -1) (undo-tree-id6241 . -1) (undo-tree-id6242 . -1) (undo-tree-id6243 . -1) (undo-tree-id6244 . -1) (undo-tree-id6245 . -1) (undo-tree-id6246 . -1) (undo-tree-id6247 . -1) (undo-tree-id6248 . -1) (undo-tree-id6249 . -1) (undo-tree-id6250 . -1) (undo-tree-id6251 . -1) (undo-tree-id6252 . -1) (undo-tree-id6253 . -1) (undo-tree-id6254 . -1) (undo-tree-id6255 . -1) (undo-tree-id6256 . -1) (undo-tree-id6257 . -1) (undo-tree-id6258 . -1) (undo-tree-id6259 . -1) (undo-tree-id6260 . -1) (undo-tree-id6261 . -1) (undo-tree-id6262 . -1) (undo-tree-id6263 . -1) (undo-tree-id6264 . -1) (undo-tree-id6265 . -1) (undo-tree-id6266 . -1) (undo-tree-id6267 . -1) (undo-tree-id6268 . -1) (undo-tree-id6269 . -1) (undo-tree-id6270 . -1) (undo-tree-id6271 . -1) (undo-tree-id6272 . -1) (undo-tree-id6273 . -1) (undo-tree-id6274 . -1) (undo-tree-id6275 . -1) (undo-tree-id6276 . -1) (undo-tree-id6277 . -1) (undo-tree-id6278 . -1) (undo-tree-id6279 . -1) (undo-tree-id6280 . -1) (undo-tree-id6281 . -1) (undo-tree-id6282 . -1) (undo-tree-id6283 . -1) (undo-tree-id6284 . -1) (undo-tree-id6285 . -1) (undo-tree-id6286 . -1) (undo-tree-id6287 . -1) (undo-tree-id6288 . -1) (undo-tree-id6289 . -1) (undo-tree-id6290 . -1) (undo-tree-id6291 . -1) (undo-tree-id6292 . -1) (undo-tree-id6293 . -1) (undo-tree-id6294 . -1) (undo-tree-id6295 . -1) (undo-tree-id6296 . -1) (undo-tree-id6297 . -1) (undo-tree-id6298 . -1) (undo-tree-id6299 . -1) (undo-tree-id6300 . -1) (undo-tree-id6301 . -1) (undo-tree-id6302 . -1) (undo-tree-id6303 . -1) (undo-tree-id6304 . -1) (undo-tree-id6305 . -1) (undo-tree-id6306 . -1) (undo-tree-id6307 . -1) (undo-tree-id6308 . -1) (undo-tree-id6309 . -1) (undo-tree-id6310 . -1) (undo-tree-id6311 . -1) (undo-tree-id6312 . -1) (undo-tree-id6313 . -1) (#("r" 0 1 (fontified t)) . -14701) (undo-tree-id6314 . -1) (undo-tree-id6315 . -1) (undo-tree-id6316 . -1) (undo-tree-id6317 . -1) (undo-tree-id6318 . -1) (undo-tree-id6319 . -1) (undo-tree-id6320 . -1) (undo-tree-id6321 . -1) (undo-tree-id6322 . -1) (undo-tree-id6323 . -1) (undo-tree-id6324 . -1) (undo-tree-id6325 . -1) (undo-tree-id6326 . -1) (undo-tree-id6327 . -1) (undo-tree-id6328 . -1) (undo-tree-id6329 . -1) (undo-tree-id6330 . -1) (undo-tree-id6331 . -1) (undo-tree-id6332 . -1) (undo-tree-id6333 . -1) (undo-tree-id6334 . -1) (undo-tree-id6335 . -1) (undo-tree-id6336 . -1) (undo-tree-id6337 . -1) (undo-tree-id6338 . -1) (undo-tree-id6339 . -1) (undo-tree-id6340 . -1) (undo-tree-id6341 . -1) (undo-tree-id6342 . -1) (undo-tree-id6343 . -1) (undo-tree-id6344 . -1) (undo-tree-id6345 . -1) (undo-tree-id6346 . -1) (undo-tree-id6347 . -1) (undo-tree-id6348 . -1) (undo-tree-id6349 . -1) (undo-tree-id6350 . -1) (undo-tree-id6351 . -1) (undo-tree-id6352 . -1) (undo-tree-id6353 . -1) (undo-tree-id6354 . -1) (undo-tree-id6355 . -1) (undo-tree-id6356 . -1) (undo-tree-id6357 . -1) (undo-tree-id6358 . -1) (undo-tree-id6359 . -1) (undo-tree-id6360 . -1) (undo-tree-id6361 . -1) (undo-tree-id6362 . -1) (undo-tree-id6363 . -1) (undo-tree-id6364 . -1) (undo-tree-id6365 . -1) (undo-tree-id6366 . -1) (undo-tree-id6367 . -1) (undo-tree-id6368 . -1) (undo-tree-id6369 . -1) (undo-tree-id6370 . -1) (undo-tree-id6371 . -1) (undo-tree-id6372 . -1) (undo-tree-id6373 . -1) (undo-tree-id6374 . -1) (undo-tree-id6375 . -1) (undo-tree-id6376 . -1) (undo-tree-id6377 . -1) (#(" " 0 1 (fontified t)) . -14702) (undo-tree-id6378 . -1) (undo-tree-id6379 . -1) (undo-tree-id6380 . -1) (undo-tree-id6381 . -1) (undo-tree-id6382 . -1) (undo-tree-id6383 . -1) (undo-tree-id6384 . -1) (undo-tree-id6385 . -1) (undo-tree-id6386 . -1) (undo-tree-id6387 . -1) (undo-tree-id6388 . -1) (undo-tree-id6389 . -1) (undo-tree-id6390 . -1) (undo-tree-id6391 . -1) (undo-tree-id6392 . -1) (undo-tree-id6393 . -1) (undo-tree-id6394 . -1) (undo-tree-id6395 . -1) (undo-tree-id6396 . -1) (undo-tree-id6397 . -1) (undo-tree-id6398 . -1) (undo-tree-id6399 . -1) (undo-tree-id6400 . -1) (undo-tree-id6401 . -1) (undo-tree-id6402 . -1) (undo-tree-id6403 . -1) (undo-tree-id6404 . -1) (undo-tree-id6405 . -1) (undo-tree-id6406 . -1) (undo-tree-id6407 . -1) (undo-tree-id6408 . -1) (undo-tree-id6409 . -1) (undo-tree-id6410 . -1) (undo-tree-id6411 . -1) (undo-tree-id6412 . -1) (undo-tree-id6413 . -1) (undo-tree-id6414 . -1) (undo-tree-id6415 . -1) (undo-tree-id6416 . -1) (undo-tree-id6417 . -1) (undo-tree-id6418 . -1) (undo-tree-id6419 . -1) (undo-tree-id6420 . -1) (undo-tree-id6421 . -1) (undo-tree-id6422 . -1) (undo-tree-id6423 . -1) (undo-tree-id6424 . -1) (undo-tree-id6425 . -1) (undo-tree-id6426 . -1) (undo-tree-id6427 . -1) (#("i" 0 1 (fontified t)) . -14703) (undo-tree-id6428 . -1) (undo-tree-id6429 . -1) (undo-tree-id6430 . -1) (undo-tree-id6431 . -1) (undo-tree-id6432 . -1) (undo-tree-id6433 . -1) (undo-tree-id6434 . -1) (undo-tree-id6435 . -1) (undo-tree-id6436 . -1) (undo-tree-id6437 . -1) (undo-tree-id6438 . -1) (undo-tree-id6439 . -1) (undo-tree-id6440 . -1) (undo-tree-id6441 . -1) (undo-tree-id6442 . -1) (undo-tree-id6443 . -1) (undo-tree-id6444 . -1) (undo-tree-id6445 . -1) (undo-tree-id6446 . -1) (undo-tree-id6447 . -1) (undo-tree-id6448 . -1) (undo-tree-id6449 . -1) (undo-tree-id6450 . -1) (undo-tree-id6451 . -1) (undo-tree-id6452 . -1) (undo-tree-id6453 . -1) (undo-tree-id6454 . -1) (undo-tree-id6455 . -1) (undo-tree-id6456 . -1) (undo-tree-id6457 . -1) (undo-tree-id6458 . -1) (undo-tree-id6459 . -1) (undo-tree-id6460 . -1) (undo-tree-id6461 . -1) (undo-tree-id6462 . -1) (undo-tree-id6463 . -1) (#("s" 0 1 (fontified t)) . -14704) (undo-tree-id6464 . -1) (undo-tree-id6465 . -1) (undo-tree-id6466 . -1) (undo-tree-id6467 . -1) (undo-tree-id6468 . -1) (undo-tree-id6469 . -1) (undo-tree-id6470 . -1) (undo-tree-id6471 . -1) (undo-tree-id6472 . -1) (undo-tree-id6473 . -1) (undo-tree-id6474 . -1) (undo-tree-id6475 . -1) (undo-tree-id6476 . -1) (undo-tree-id6477 . -1) (undo-tree-id6478 . -1) (undo-tree-id6479 . -1) (undo-tree-id6480 . -1) (undo-tree-id6481 . -1) (undo-tree-id6482 . -1) (undo-tree-id6483 . -1) (undo-tree-id6484 . -1) (undo-tree-id6485 . -1) (#(" " 0 1 (fontified t)) . -14705) (undo-tree-id6486 . -1) (undo-tree-id6487 . -1) (undo-tree-id6488 . -1) (undo-tree-id6489 . -1) (undo-tree-id6490 . -1) (undo-tree-id6491 . -1) (undo-tree-id6492 . -1) (undo-tree-id6493 . -1) 14706 (14697 . 14706) (14696 . 14697) (14693 . 14696) (#("r" 0 1 (face org-level-2 fontified t)) . -14693) (undo-tree-id6494 . -1) (undo-tree-id6495 . -1) (undo-tree-id6496 . -1) (undo-tree-id6497 . -1) (undo-tree-id6498 . -1) (undo-tree-id6499 . -1) (undo-tree-id6500 . -1) (undo-tree-id6501 . -1) 14694 (14691 . 14694) (14688 . 14691) (14688 . 14691) (#(" " 0 1 (fontified t)) . -14688) (undo-tree-id6502 . -1) (undo-tree-id6503 . -1) (undo-tree-id6504 . -1) (undo-tree-id6505 . -1) (undo-tree-id6506 . -1) (undo-tree-id6507 . -1) (undo-tree-id6508 . -1) (undo-tree-id6509 . -1) (undo-tree-id6510 . -1) (undo-tree-id6511 . -1) (undo-tree-id6512 . -1) (undo-tree-id6513 . -1) (undo-tree-id6514 . -1) (undo-tree-id6515 . -1) (undo-tree-id6516 . -1) (undo-tree-id6517 . -1) (undo-tree-id6518 . -1) (undo-tree-id6519 . -1) (undo-tree-id6520 . -1) (undo-tree-id6521 . -1) (undo-tree-id6522 . -1) (undo-tree-id6523 . -1) (undo-tree-id6524 . -1) (undo-tree-id6525 . -1) (undo-tree-id6526 . -1) (undo-tree-id6527 . -1) (undo-tree-id6528 . -1) (undo-tree-id6529 . -1) (undo-tree-id6530 . -1) (undo-tree-id6531 . -1) (undo-tree-id6532 . -1) (undo-tree-id6533 . -1) (undo-tree-id6534 . -1) (undo-tree-id6535 . -1) (undo-tree-id6536 . -1) (undo-tree-id6537 . -1) (undo-tree-id6538 . -1) (undo-tree-id6539 . -1) (undo-tree-id6540 . -1) (undo-tree-id6541 . -1) (#(" " 0 1 (fontified t)) . -14689) (undo-tree-id6542 . -1) (undo-tree-id6543 . -1) (undo-tree-id6544 . -1) (undo-tree-id6545 . -1) (undo-tree-id6546 . -1) (undo-tree-id6547 . -1) (undo-tree-id6548 . -1) (undo-tree-id6549 . -1) (undo-tree-id6550 . -1) (undo-tree-id6551 . -1) (undo-tree-id6552 . -1) (undo-tree-id6553 . -1) (undo-tree-id6554 . -1) (undo-tree-id6555 . -1) (undo-tree-id6556 . -1) (undo-tree-id6557 . -1) (undo-tree-id6558 . -1) (undo-tree-id6559 . -1) (undo-tree-id6560 . -1) (undo-tree-id6561 . -1) (undo-tree-id6562 . -1) (undo-tree-id6563 . -1) (undo-tree-id6564 . -1) (undo-tree-id6565 . -1) (undo-tree-id6566 . -1) (undo-tree-id6567 . -1) (undo-tree-id6568 . -1) (undo-tree-id6569 . -1) (undo-tree-id6570 . -1) (undo-tree-id6571 . -1) (undo-tree-id6572 . -1) (undo-tree-id6573 . -1) (undo-tree-id6574 . -1) (#(" " 0 1 (fontified t)) . -14690) (undo-tree-id6575 . -1) (undo-tree-id6576 . -1) (undo-tree-id6577 . -1) (undo-tree-id6578 . -1) (undo-tree-id6579 . -1) (undo-tree-id6580 . -1) (undo-tree-id6581 . -1) (undo-tree-id6582 . -1) (undo-tree-id6583 . -1) (undo-tree-id6584 . -1) (undo-tree-id6585 . -1) (undo-tree-id6586 . -1) (undo-tree-id6587 . -1) (undo-tree-id6588 . -1) (undo-tree-id6589 . -1) (undo-tree-id6590 . -1) (undo-tree-id6591 . -1) (undo-tree-id6592 . -1) (undo-tree-id6593 . -1) (undo-tree-id6594 . -1) (undo-tree-id6595 . -1) (undo-tree-id6596 . -1) (undo-tree-id6597 . -1) (undo-tree-id6598 . -1) (undo-tree-id6599 . -1) (undo-tree-id6600 . -1) (#(" " 0 1 (fontified t)) . -14691) (undo-tree-id6601 . -1) (undo-tree-id6602 . -1) (undo-tree-id6603 . -1) (undo-tree-id6604 . -1) (undo-tree-id6605 . -1) (undo-tree-id6606 . -1) (undo-tree-id6607 . -1) (undo-tree-id6608 . -1) (undo-tree-id6609 . -1) (undo-tree-id6610 . -1) (undo-tree-id6611 . -1) (undo-tree-id6612 . -1) (undo-tree-id6613 . -1) (undo-tree-id6614 . -1) (undo-tree-id6615 . -1) (undo-tree-id6616 . -1) (undo-tree-id6617 . -1) (undo-tree-id6618 . -1) (undo-tree-id6619 . -1) 14692 (14687 . 14692) (t 25252 35454 671969 497000) 14687) nil (25263 36438 509142 985000) 0 nil])
([nil nil ((15176 . 15188) (#(":" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -15176) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#(" " 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -15177) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) 15178 (15171 . 15178) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 15171 15188 nil nil nil t #s(yas--field 2 15189 15312 nil nil nil t nil)) #s(yas--field 2 15189 15312 nil nil nil t nil)) nil 3 nil #s(yas--field 2 15189 15312 nil nil nil t nil) nil nil)) (15159 . 15182) (#("\\s" 0 2 (fontified t)) . 15159) (undo-tree-id32 . -2) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -2) (undo-tree-id40 . -1) (undo-tree-id41 . -2) (undo-tree-id42 . -2) (undo-tree-id43 . -2) (undo-tree-id44 . -2) (undo-tree-id45 . -2) (undo-tree-id46 . -2) 15161 (15159 . 15161) (15157 . 15159) (15156 . 15157) (#(" " 0 1 (fontified t)) . -15156) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) 15157 (15154 . 15157) (#("w" 0 1 (fontified t)) . -15154) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) 15155 (15150 . 15155) (15129 . 15150) (15108 . 15129) (15097 . 15108) (15076 . 15097)) nil (25263 36438 498178 780000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15311 . 15312) (nil fontified nil 15189 . 15312) (15189 . 15312)) nil (25263 36438 498058 93000) 0 nil])
([nil nil ((apply yas--snippet-revive 15159 15322 #s(yas--snippet nil (#s(yas--field 1 15171 15188 nil nil nil t #s(yas--field 2 15189 15312 nil nil nil t nil)) #s(yas--field 2 15189 15312 nil nil nil t nil)) nil 3 nil #s(yas--field 2 15189 15312 nil nil nil t nil) nil nil))) nil (25263 36438 498053 763000) 0 nil])
([nil nil ((15190 . 15192) (15268 . 15270) 15189 (15188 . 15189) 15167) nil (25263 36438 498045 172000) 0 nil])
([nil nil ((10406 . 10407) (t 25352 61940 895768 718000)) nil (25376 45507 736650 345000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block))) . -10406) (undo-tree-id5637 . -1) (undo-tree-id5638 . -1) (undo-tree-id5639 . -1) (undo-tree-id5640 . -1) (undo-tree-id5641 . -1) (undo-tree-id5642 . -1) (undo-tree-id5643 . -1) (undo-tree-id5644 . -1) (undo-tree-id5645 . -1) (undo-tree-id5646 . -1) (undo-tree-id5647 . -1) (undo-tree-id5648 . -1) (undo-tree-id5649 . -1) (undo-tree-id5650 . -1) (undo-tree-id5651 . -1) (undo-tree-id5652 . -1) (undo-tree-id5653 . -1) (undo-tree-id5654 . -1) (undo-tree-id5655 . -1) (undo-tree-id5656 . -1) (undo-tree-id5657 . -1) (undo-tree-id5658 . -1) (undo-tree-id5659 . -1) (undo-tree-id5660 . -1) (undo-tree-id5661 . -1) (undo-tree-id5662 . -1) (undo-tree-id5663 . -1) (undo-tree-id5664 . -1) (undo-tree-id5665 . -1) (undo-tree-id5666 . -1) (undo-tree-id5667 . -1) (undo-tree-id5668 . -1) (undo-tree-id5669 . -1) (undo-tree-id5670 . -1) (undo-tree-id5671 . -1) (undo-tree-id5672 . -1) (undo-tree-id5673 . -1) (undo-tree-id5674 . -1) (undo-tree-id5675 . -1) (undo-tree-id5676 . -1) (undo-tree-id5677 . -1) (undo-tree-id5678 . -1) (undo-tree-id5679 . -1) (undo-tree-id5680 . -1) (undo-tree-id5681 . -1) (undo-tree-id5682 . -1) (undo-tree-id5683 . -1) (undo-tree-id5684 . -1) (undo-tree-id5685 . -1) 10407) nil (25376 45507 736643 640000) 0 nil])
([nil nil ((10406 . 10407)) nil (25376 45507 736585 182000) 0 nil])
([nil nil ((12926 . 12929) (12914 . 12926) (12909 . 12914) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 12909 13564 nil nil nil t #s(yas--field 2 16311 16311 nil nil nil nil nil)) #s(yas--field 2 16311 16311 nil nil nil nil nil)) nil 0 nil #s(yas--field 1 12909 13564 nil nil nil t #s(yas--field 2 16311 16311 nil nil nil nil nil)) nil nil)) (12897 . 12920) (#("\\s" 0 2 (fontified t)) . 12897) (undo-tree-id0 . -2) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -2) (undo-tree-id9 . -1) (undo-tree-id10 . -2) (undo-tree-id11 . -2) (undo-tree-id12 . -2) (undo-tree-id13 . -2) (undo-tree-id14 . -2) (undo-tree-id15 . -2) (undo-tree-id16 . -2) (undo-tree-id17 . -2) 12899 (12897 . 12899) (12895 . 12897) (12883 . 12895) (#(" " 0 1 (fontified t)) . -12883) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) 12884 (12880 . 12884) (#("i" 0 1 (fontified t)) . -12880) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (#("s" 0 1 (fontified t)) . -12881) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (#(" " 0 1 (fontified t)) . -12882) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) 12883 (12870 . 12883) (#("O" 0 1 (fontified t)) . -12870) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (#("r" 0 1 (fontified t)) . -12871) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (#(" " 0 1 (fontified t)) . -12872) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (#("n" 0 1 (fontified t)) . -12873) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (#("o" 0 1 (fontified t)) . -12874) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (#("w" 0 1 (fontified t)) . -12875) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) 12876 (12863 . 12876) (#("R" 0 1 (fontified t)) . -12863) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (#("E" 0 1 (fontified t)) . -12864) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (#("L" 0 1 (fontified t)) . -12865) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) 12866 (12859 . 12866) (#("r" 0 1 (fontified t)) . -12859) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) 12860 (12839 . 12860) (12818 . 12839) (12812 . 12818) (#("l" 0 1 (fontified t)) . -12812) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (#("o" 0 1 (fontified t)) . -12813) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) 12814 (12809 . 12814) (#("i" 0 1 (fontified t)) . -12809) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (#(" " 0 1 (fontified t)) . -12810) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (#("p" 0 1 (fontified t)) . -12811) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (#("l" 0 1 (fontified t)) . -12812) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) 12813 (12809 . 12813) (#("a" 0 1 (fontified t)) . -12809) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) 12810 (12801 . 12810) (12780 . 12801) (#("r" 0 1 (fontified t)) . -12780) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) 12781 (12775 . 12781) (#("a" 0 1 (fontified t)) . -12775) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) 12776 (12773 . 12776) (#(" " 0 1 (fontified t)) . -12773) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) 12774 (12773 . 12774) (#("y" 0 1 (fontified t)) . -12773) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (#("t" 0 1 (fontified t)) . -12774) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) 12775 (12768 . 12775) (#("e" 0 1 (fontified t)) . -12768) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) 12769 (12768 . 12769) (12747 . 12768) (#(";" 0 1 (fontified t)) . -12747) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (#("i" 0 1 (fontified t)) . -12748) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (#("n" 0 1 (fontified t)) . -12749) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) 12750 (12747 . 12750) (12726 . 12747) (#("b" 0 1 (fontified t)) . -12726) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (#("a" 0 1 (fontified t)) . -12727) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (#("c" 0 1 (fontified t)) . -12728) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) 12729 (#("k" 0 1 (fontified t)) . -12729) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (#("l" 0 1 (fontified t)) . -12730) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (#("i" 0 1 (fontified t)) . -12731) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (#("n" 0 1 (fontified t)) . -12732) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (#("k" 0 1 (fontified t)) . -12733) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) 12734 (12731 . 12734) (12710 . 12731) (12689 . 12710) (12668 . 12689) (12667 . 12668) (#(" " 0 1 (fontified t)) . -12667) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) 12668 (12667 . 12668) (#(" " 0 1 (fontified t)) . -12667) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (#("l" 0 1 (fontified t)) . -12668) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (#("e" 0 1 (fontified t)) . -12669) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -1) (undo-tree-id3100 . -1) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1) (undo-tree-id3109 . -1) (undo-tree-id3110 . -1) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (undo-tree-id3114 . -1) (undo-tree-id3115 . -1) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (#("v" 0 1 (fontified t)) . -12670) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) (undo-tree-id3219 . -1) (undo-tree-id3220 . -1) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (undo-tree-id3250 . -1) (undo-tree-id3251 . -1) (undo-tree-id3252 . -1) (undo-tree-id3253 . -1) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) (undo-tree-id3318 . -1) (undo-tree-id3319 . -1) (undo-tree-id3320 . -1) (#("e" 0 1 (fontified t)) . -12671) (undo-tree-id3321 . -1) (undo-tree-id3322 . -1) (undo-tree-id3323 . -1) (undo-tree-id3324 . -1) (undo-tree-id3325 . -1) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (undo-tree-id3328 . -1) (undo-tree-id3329 . -1) (undo-tree-id3330 . -1) (undo-tree-id3331 . -1) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (undo-tree-id3336 . -1) (undo-tree-id3337 . -1) (undo-tree-id3338 . -1) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) (undo-tree-id3348 . -1) (undo-tree-id3349 . -1) (undo-tree-id3350 . -1) (undo-tree-id3351 . -1) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (undo-tree-id3482 . -1) (undo-tree-id3483 . -1) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3487 . -1) (undo-tree-id3488 . -1) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) (undo-tree-id3491 . -1) (undo-tree-id3492 . -1) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) (undo-tree-id3500 . -1) (undo-tree-id3501 . -1) (#("r" 0 1 (fontified t)) . -12672) (undo-tree-id3502 . -1) (undo-tree-id3503 . -1) (undo-tree-id3504 . -1) (undo-tree-id3505 . -1) (undo-tree-id3506 . -1) (undo-tree-id3507 . -1) (undo-tree-id3508 . -1) (undo-tree-id3509 . -1) (undo-tree-id3510 . -1) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) (undo-tree-id3514 . -1) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) (undo-tree-id3517 . -1) (undo-tree-id3518 . -1) (undo-tree-id3519 . -1) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (undo-tree-id3523 . -1) (undo-tree-id3524 . -1) (undo-tree-id3525 . -1) (undo-tree-id3526 . -1) (undo-tree-id3527 . -1) (undo-tree-id3528 . -1) (undo-tree-id3529 . -1) (undo-tree-id3530 . -1) (undo-tree-id3531 . -1) (undo-tree-id3532 . -1) (undo-tree-id3533 . -1) (undo-tree-id3534 . -1) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (undo-tree-id3538 . -1) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (undo-tree-id3566 . -1) (undo-tree-id3567 . -1) (undo-tree-id3568 . -1) (undo-tree-id3569 . -1) (undo-tree-id3570 . -1) (undo-tree-id3571 . -1) (undo-tree-id3572 . -1) (undo-tree-id3573 . -1) (undo-tree-id3574 . -1) (undo-tree-id3575 . -1) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1) (undo-tree-id3624 . -1) (undo-tree-id3625 . -1) (undo-tree-id3626 . -1) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (undo-tree-id3629 . -1) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) (undo-tree-id3633 . -1) (undo-tree-id3634 . -1) (undo-tree-id3635 . -1) (undo-tree-id3636 . -1) (undo-tree-id3637 . -1) (undo-tree-id3638 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (undo-tree-id3651 . -1) (undo-tree-id3652 . -1) (undo-tree-id3653 . -1) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1) (#("a" 0 1 (fontified t)) . -12673) (undo-tree-id3662 . -1) (undo-tree-id3663 . -1) (undo-tree-id3664 . -1) (undo-tree-id3665 . -1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (undo-tree-id3670 . -1) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (undo-tree-id3682 . -1) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (undo-tree-id3800 . -1) (#("g" 0 1 (fontified t)) . -12674) (undo-tree-id3801 . -1) (undo-tree-id3802 . -1) (undo-tree-id3803 . -1) (undo-tree-id3804 . -1) (undo-tree-id3805 . -1) (undo-tree-id3806 . -1) (undo-tree-id3807 . -1) (undo-tree-id3808 . -1) (undo-tree-id3809 . -1) (undo-tree-id3810 . -1) (undo-tree-id3811 . -1) (undo-tree-id3812 . -1) (undo-tree-id3813 . -1) (undo-tree-id3814 . -1) (undo-tree-id3815 . -1) (undo-tree-id3816 . -1) (undo-tree-id3817 . -1) (undo-tree-id3818 . -1) (undo-tree-id3819 . -1) (undo-tree-id3820 . -1) (undo-tree-id3821 . -1) (undo-tree-id3822 . -1) (undo-tree-id3823 . -1) (undo-tree-id3824 . -1) (undo-tree-id3825 . -1) (undo-tree-id3826 . -1) (undo-tree-id3827 . -1) (undo-tree-id3828 . -1) (undo-tree-id3829 . -1) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (undo-tree-id3832 . -1) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) (undo-tree-id3843 . -1) (undo-tree-id3844 . -1) (undo-tree-id3845 . -1) (undo-tree-id3846 . -1) (undo-tree-id3847 . -1) (undo-tree-id3848 . -1) (undo-tree-id3849 . -1) (undo-tree-id3850 . -1) (undo-tree-id3851 . -1) (undo-tree-id3852 . -1) (undo-tree-id3853 . -1) (undo-tree-id3854 . -1) (undo-tree-id3855 . -1) (undo-tree-id3856 . -1) (undo-tree-id3857 . -1) (undo-tree-id3858 . -1) (undo-tree-id3859 . -1) (undo-tree-id3860 . -1) (undo-tree-id3861 . -1) (undo-tree-id3862 . -1) (undo-tree-id3863 . -1) (undo-tree-id3864 . -1) (undo-tree-id3865 . -1) (undo-tree-id3866 . -1) (undo-tree-id3867 . -1) (undo-tree-id3868 . -1) (undo-tree-id3869 . -1) (undo-tree-id3870 . -1) (undo-tree-id3871 . -1) (undo-tree-id3872 . -1) (undo-tree-id3873 . -1) (undo-tree-id3874 . -1) (undo-tree-id3875 . -1) (undo-tree-id3876 . -1) (undo-tree-id3877 . -1) (undo-tree-id3878 . -1) (undo-tree-id3879 . -1) (undo-tree-id3880 . -1) (undo-tree-id3881 . -1) (undo-tree-id3882 . -1) (undo-tree-id3883 . -1) (undo-tree-id3884 . -1) (undo-tree-id3885 . -1) (undo-tree-id3886 . -1) (undo-tree-id3887 . -1) (undo-tree-id3888 . -1) (undo-tree-id3889 . -1) (undo-tree-id3890 . -1) (undo-tree-id3891 . -1) (undo-tree-id3892 . -1) (undo-tree-id3893 . -1) (undo-tree-id3894 . -1) (undo-tree-id3895 . -1) (undo-tree-id3896 . -1) (undo-tree-id3897 . -1) (undo-tree-id3898 . -1) (undo-tree-id3899 . -1) (undo-tree-id3900 . -1) (undo-tree-id3901 . -1) (undo-tree-id3902 . -1) (undo-tree-id3903 . -1) (undo-tree-id3904 . -1) (undo-tree-id3905 . -1) (undo-tree-id3906 . -1) (undo-tree-id3907 . -1) (undo-tree-id3908 . -1) (undo-tree-id3909 . -1) (undo-tree-id3910 . -1) (undo-tree-id3911 . -1) (undo-tree-id3912 . -1) (undo-tree-id3913 . -1) (#("i" 0 1 (fontified t)) . -12675) (undo-tree-id3914 . -1) (undo-tree-id3915 . -1) (undo-tree-id3916 . -1) (undo-tree-id3917 . -1) (undo-tree-id3918 . -1) (undo-tree-id3919 . -1) (undo-tree-id3920 . -1) (undo-tree-id3921 . -1) (undo-tree-id3922 . -1) (undo-tree-id3923 . -1) (undo-tree-id3924 . -1) (undo-tree-id3925 . -1) (undo-tree-id3926 . -1) (undo-tree-id3927 . -1) (undo-tree-id3928 . -1) (undo-tree-id3929 . -1) (undo-tree-id3930 . -1) (undo-tree-id3931 . -1) (undo-tree-id3932 . -1) (undo-tree-id3933 . -1) (undo-tree-id3934 . -1) (undo-tree-id3935 . -1) (undo-tree-id3936 . -1) (undo-tree-id3937 . -1) (undo-tree-id3938 . -1) (undo-tree-id3939 . -1) (undo-tree-id3940 . -1) (undo-tree-id3941 . -1) (undo-tree-id3942 . -1) (undo-tree-id3943 . -1) (undo-tree-id3944 . -1) (undo-tree-id3945 . -1) (undo-tree-id3946 . -1) (undo-tree-id3947 . -1) (undo-tree-id3948 . -1) (undo-tree-id3949 . -1) (undo-tree-id3950 . -1) (undo-tree-id3951 . -1) (undo-tree-id3952 . -1) (undo-tree-id3953 . -1) (undo-tree-id3954 . -1) (undo-tree-id3955 . -1) (undo-tree-id3956 . -1) (undo-tree-id3957 . -1) (undo-tree-id3958 . -1) (undo-tree-id3959 . -1) (undo-tree-id3960 . -1) (undo-tree-id3961 . -1) (undo-tree-id3962 . -1) (undo-tree-id3963 . -1) (undo-tree-id3964 . -1) (undo-tree-id3965 . -1) (undo-tree-id3966 . -1) (undo-tree-id3967 . -1) (undo-tree-id3968 . -1) (undo-tree-id3969 . -1) (undo-tree-id3970 . -1) (undo-tree-id3971 . -1) (undo-tree-id3972 . -1) (undo-tree-id3973 . -1) (undo-tree-id3974 . -1) (undo-tree-id3975 . -1) (undo-tree-id3976 . -1) (undo-tree-id3977 . -1) (undo-tree-id3978 . -1) (undo-tree-id3979 . -1) (undo-tree-id3980 . -1) (undo-tree-id3981 . -1) (undo-tree-id3982 . -1) (undo-tree-id3983 . -1) (undo-tree-id3984 . -1) (undo-tree-id3985 . -1) (undo-tree-id3986 . -1) (undo-tree-id3987 . -1) (undo-tree-id3988 . -1) (undo-tree-id3989 . -1) (undo-tree-id3990 . -1) (undo-tree-id3991 . -1) (undo-tree-id3992 . -1) (undo-tree-id3993 . -1) (undo-tree-id3994 . -1) (undo-tree-id3995 . -1) (undo-tree-id3996 . -1) (undo-tree-id3997 . -1) (undo-tree-id3998 . -1) (undo-tree-id3999 . -1) (undo-tree-id4000 . -1) (undo-tree-id4001 . -1) (undo-tree-id4002 . -1) (undo-tree-id4003 . -1) (undo-tree-id4004 . -1) (undo-tree-id4005 . -1) (undo-tree-id4006 . -1) (undo-tree-id4007 . -1) (undo-tree-id4008 . -1) (undo-tree-id4009 . -1) (undo-tree-id4010 . -1) (#("n" 0 1 (fontified t)) . -12676) (undo-tree-id4011 . -1) (undo-tree-id4012 . -1) (undo-tree-id4013 . -1) (undo-tree-id4014 . -1) (undo-tree-id4015 . -1) (undo-tree-id4016 . -1) (undo-tree-id4017 . -1) (undo-tree-id4018 . -1) (undo-tree-id4019 . -1) (undo-tree-id4020 . -1) (undo-tree-id4021 . -1) (undo-tree-id4022 . -1) (undo-tree-id4023 . -1) (undo-tree-id4024 . -1) (undo-tree-id4025 . -1) (undo-tree-id4026 . -1) (undo-tree-id4027 . -1) (undo-tree-id4028 . -1) (undo-tree-id4029 . -1) (undo-tree-id4030 . -1) (undo-tree-id4031 . -1) (undo-tree-id4032 . -1) (undo-tree-id4033 . -1) (undo-tree-id4034 . -1) (undo-tree-id4035 . -1) (undo-tree-id4036 . -1) (undo-tree-id4037 . -1) (undo-tree-id4038 . -1) (undo-tree-id4039 . -1) (undo-tree-id4040 . -1) (undo-tree-id4041 . -1) (undo-tree-id4042 . -1) (undo-tree-id4043 . -1) (undo-tree-id4044 . -1) (undo-tree-id4045 . -1) (undo-tree-id4046 . -1) (undo-tree-id4047 . -1) (undo-tree-id4048 . -1) (undo-tree-id4049 . -1) (undo-tree-id4050 . -1) (undo-tree-id4051 . -1) (undo-tree-id4052 . -1) (undo-tree-id4053 . -1) (undo-tree-id4054 . -1) (undo-tree-id4055 . -1) (undo-tree-id4056 . -1) (undo-tree-id4057 . -1) (undo-tree-id4058 . -1) (undo-tree-id4059 . -1) (undo-tree-id4060 . -1) (undo-tree-id4061 . -1) (undo-tree-id4062 . -1) (undo-tree-id4063 . -1) (undo-tree-id4064 . -1) (undo-tree-id4065 . -1) (undo-tree-id4066 . -1) (undo-tree-id4067 . -1) (undo-tree-id4068 . -1) (undo-tree-id4069 . -1) (undo-tree-id4070 . -1) (undo-tree-id4071 . -1) (undo-tree-id4072 . -1) (undo-tree-id4073 . -1) (undo-tree-id4074 . -1) (undo-tree-id4075 . -1) (undo-tree-id4076 . -1) (undo-tree-id4077 . -1) (undo-tree-id4078 . -1) (undo-tree-id4079 . -1) (undo-tree-id4080 . -1) (undo-tree-id4081 . -1) (undo-tree-id4082 . -1) (undo-tree-id4083 . -1) (undo-tree-id4084 . -1) (undo-tree-id4085 . -1) (undo-tree-id4086 . -1) (undo-tree-id4087 . -1) (undo-tree-id4088 . -1) (undo-tree-id4089 . -1) (undo-tree-id4090 . -1) (undo-tree-id4091 . -1) (#("g" 0 1 (fontified t)) . -12677) (undo-tree-id4092 . -1) (undo-tree-id4093 . -1) (undo-tree-id4094 . -1) (undo-tree-id4095 . -1) (undo-tree-id4096 . -1) (undo-tree-id4097 . -1) (undo-tree-id4098 . -1) (undo-tree-id4099 . -1) (undo-tree-id4100 . -1) (undo-tree-id4101 . -1) (undo-tree-id4102 . -1) (undo-tree-id4103 . -1) (undo-tree-id4104 . -1) (undo-tree-id4105 . -1) (undo-tree-id4106 . -1) (undo-tree-id4107 . -1) (undo-tree-id4108 . -1) (undo-tree-id4109 . -1) (undo-tree-id4110 . -1) (undo-tree-id4111 . -1) (undo-tree-id4112 . -1) (undo-tree-id4113 . -1) (undo-tree-id4114 . -1) (undo-tree-id4115 . -1) (undo-tree-id4116 . -1) (undo-tree-id4117 . -1) (undo-tree-id4118 . -1) (undo-tree-id4119 . -1) (undo-tree-id4120 . -1) (undo-tree-id4121 . -1) (undo-tree-id4122 . -1) (undo-tree-id4123 . -1) (undo-tree-id4124 . -1) (undo-tree-id4125 . -1) (undo-tree-id4126 . -1) (undo-tree-id4127 . -1) (undo-tree-id4128 . -1) (undo-tree-id4129 . -1) (undo-tree-id4130 . -1) (undo-tree-id4131 . -1) (undo-tree-id4132 . -1) (undo-tree-id4133 . -1) (undo-tree-id4134 . -1) (undo-tree-id4135 . -1) (undo-tree-id4136 . -1) (undo-tree-id4137 . -1) (undo-tree-id4138 . -1) (undo-tree-id4139 . -1) (undo-tree-id4140 . -1) (undo-tree-id4141 . -1) (undo-tree-id4142 . -1) (undo-tree-id4143 . -1) (undo-tree-id4144 . -1) (undo-tree-id4145 . -1) (undo-tree-id4146 . -1) (#(" " 0 1 (fontified t)) . -12678) (undo-tree-id4147 . -1) (undo-tree-id4148 . -1) (undo-tree-id4149 . -1) (undo-tree-id4150 . -1) (undo-tree-id4151 . -1) (undo-tree-id4152 . -1) (undo-tree-id4153 . -1) (undo-tree-id4154 . -1) (undo-tree-id4155 . -1) (undo-tree-id4156 . -1) (undo-tree-id4157 . -1) (undo-tree-id4158 . -1) (undo-tree-id4159 . -1) (undo-tree-id4160 . -1) (undo-tree-id4161 . -1) (undo-tree-id4162 . -1) (undo-tree-id4163 . -1) (undo-tree-id4164 . -1) (undo-tree-id4165 . -1) 12679 (12661 . 12679) (12640 . 12661) (12631 . 12640) (#("s" 0 1 (fontified t)) . -12631) (undo-tree-id4166 . -1) (undo-tree-id4167 . -1) (undo-tree-id4168 . -1) (undo-tree-id4169 . -1) (undo-tree-id4170 . -1) (undo-tree-id4171 . -1) (undo-tree-id4172 . -1) (undo-tree-id4173 . -1) (undo-tree-id4174 . -1) (undo-tree-id4175 . -1) (undo-tree-id4176 . -1) (undo-tree-id4177 . -1) (undo-tree-id4178 . -1) (undo-tree-id4179 . -1) (undo-tree-id4180 . -1) (undo-tree-id4181 . -1) (undo-tree-id4182 . -1) (undo-tree-id4183 . -1) (undo-tree-id4184 . -1) (undo-tree-id4185 . -1) (undo-tree-id4186 . -1) (undo-tree-id4187 . -1) (undo-tree-id4188 . -1) (undo-tree-id4189 . -1) (undo-tree-id4190 . -1) (#(" " 0 1 (fontified t)) . -12632) (undo-tree-id4191 . -1) (undo-tree-id4192 . -1) (undo-tree-id4193 . -1) (undo-tree-id4194 . -1) (undo-tree-id4195 . -1) (undo-tree-id4196 . -1) (undo-tree-id4197 . -1) (undo-tree-id4198 . -1) (undo-tree-id4199 . -1) 12633 (12619 . 12633) (#(" " 0 1 (fontified t)) . -12619) (undo-tree-id4200 . -1) (undo-tree-id4201 . -1) (undo-tree-id4202 . -1) (undo-tree-id4203 . -1) (undo-tree-id4204 . -1) (undo-tree-id4205 . -1) (undo-tree-id4206 . -1) (undo-tree-id4207 . -1) (undo-tree-id4208 . -1) 12620 (12618 . 12620) (#(" " 0 1 (fontified t)) . -12618) (undo-tree-id4209 . -1) (undo-tree-id4210 . -1) (undo-tree-id4211 . -1) (undo-tree-id4212 . -1) (undo-tree-id4213 . -1) (undo-tree-id4214 . -1) (undo-tree-id4215 . -1) (undo-tree-id4216 . -1) (undo-tree-id4217 . -1) 12619 (12598 . 12619) (12592 . 12597) (12590 . 12592) (12589 . 12591) (#("\"" 0 1 (fontified nil)) . -12589) (12571 . 12590) (12560 . 12571) (#("H" 0 1 (fontified t)) . -12560) (undo-tree-id4218 . -1) (undo-tree-id4219 . -1) (undo-tree-id4220 . -1) (undo-tree-id4221 . -1) (undo-tree-id4222 . -1) (undo-tree-id4223 . -1) (undo-tree-id4224 . -1) (undo-tree-id4225 . -1) (undo-tree-id4226 . -1) (undo-tree-id4227 . -1) (undo-tree-id4228 . -1) (undo-tree-id4229 . -1) (undo-tree-id4230 . -1) (undo-tree-id4231 . -1) (undo-tree-id4232 . -1) (undo-tree-id4233 . -1) (undo-tree-id4234 . -1) (undo-tree-id4235 . -1) (undo-tree-id4236 . -1) (undo-tree-id4237 . -1) (undo-tree-id4238 . -1) (undo-tree-id4239 . -1) (undo-tree-id4240 . -1) (undo-tree-id4241 . -1) (undo-tree-id4242 . -1) (undo-tree-id4243 . -1) (undo-tree-id4244 . -1) (undo-tree-id4245 . -1) (undo-tree-id4246 . -1) (undo-tree-id4247 . -1) (undo-tree-id4248 . -1) (undo-tree-id4249 . -1) (undo-tree-id4250 . -1) (undo-tree-id4251 . -1) (undo-tree-id4252 . -1) (undo-tree-id4253 . -1) (undo-tree-id4254 . -1) (undo-tree-id4255 . -1) (undo-tree-id4256 . -1) (undo-tree-id4257 . -1) (undo-tree-id4258 . -1) (undo-tree-id4259 . -1) (undo-tree-id4260 . -1) (undo-tree-id4261 . -1) (undo-tree-id4262 . -1) (undo-tree-id4263 . -1) (undo-tree-id4264 . -1) (undo-tree-id4265 . -1) (undo-tree-id4266 . -1) (undo-tree-id4267 . -1) (undo-tree-id4268 . -1) (undo-tree-id4269 . -1) (undo-tree-id4270 . -1) (undo-tree-id4271 . -1) (undo-tree-id4272 . -1) (undo-tree-id4273 . -1) (undo-tree-id4274 . -1) (undo-tree-id4275 . -1) (undo-tree-id4276 . -1) (undo-tree-id4277 . -1) (undo-tree-id4278 . -1) (undo-tree-id4279 . -1) (undo-tree-id4280 . -1) (undo-tree-id4281 . -1) (undo-tree-id4282 . -1) (undo-tree-id4283 . -1) (undo-tree-id4284 . -1) (undo-tree-id4285 . -1) (undo-tree-id4286 . -1) (undo-tree-id4287 . -1) (undo-tree-id4288 . -1) (undo-tree-id4289 . -1) (undo-tree-id4290 . -1) (undo-tree-id4291 . -1) (undo-tree-id4292 . -1) (undo-tree-id4293 . -1) (undo-tree-id4294 . -1) (undo-tree-id4295 . -1) (undo-tree-id4296 . -1) (undo-tree-id4297 . -1) (undo-tree-id4298 . -1) (undo-tree-id4299 . -1) (undo-tree-id4300 . -1) (undo-tree-id4301 . -1) (undo-tree-id4302 . -1) (undo-tree-id4303 . -1) (undo-tree-id4304 . -1) (undo-tree-id4305 . -1) (undo-tree-id4306 . -1) (undo-tree-id4307 . -1) (undo-tree-id4308 . -1) (undo-tree-id4309 . -1) (undo-tree-id4310 . -1) (undo-tree-id4311 . -1) (undo-tree-id4312 . -1) (undo-tree-id4313 . -1) (undo-tree-id4314 . -1) (undo-tree-id4315 . -1) (undo-tree-id4316 . -1) (undo-tree-id4317 . -1) (undo-tree-id4318 . -1) (undo-tree-id4319 . -1) (undo-tree-id4320 . -1) (undo-tree-id4321 . -1) (undo-tree-id4322 . -1) (undo-tree-id4323 . -1) (undo-tree-id4324 . -1) (undo-tree-id4325 . -1) (undo-tree-id4326 . -1) (undo-tree-id4327 . -1) (undo-tree-id4328 . -1) (undo-tree-id4329 . -1) (undo-tree-id4330 . -1) (undo-tree-id4331 . -1) (undo-tree-id4332 . -1) (undo-tree-id4333 . -1) (undo-tree-id4334 . -1) (undo-tree-id4335 . -1) (undo-tree-id4336 . -1) (undo-tree-id4337 . -1) (undo-tree-id4338 . -1) (undo-tree-id4339 . -1) (undo-tree-id4340 . -1) (undo-tree-id4341 . -1) (undo-tree-id4342 . -1) (undo-tree-id4343 . -1) (undo-tree-id4344 . -1) (undo-tree-id4345 . -1) (undo-tree-id4346 . -1) (undo-tree-id4347 . -1) (undo-tree-id4348 . -1) (undo-tree-id4349 . -1) (undo-tree-id4350 . -1) (undo-tree-id4351 . -1) (undo-tree-id4352 . -1) (undo-tree-id4353 . -1) (undo-tree-id4354 . -1) (undo-tree-id4355 . -1) (undo-tree-id4356 . -1) (undo-tree-id4357 . -1) (undo-tree-id4358 . -1) (undo-tree-id4359 . -1) (undo-tree-id4360 . -1) (undo-tree-id4361 . -1) (undo-tree-id4362 . -1) (undo-tree-id4363 . -1) (undo-tree-id4364 . -1) (undo-tree-id4365 . -1) (undo-tree-id4366 . -1) (undo-tree-id4367 . -1) (undo-tree-id4368 . -1) (undo-tree-id4369 . -1) (undo-tree-id4370 . -1) (undo-tree-id4371 . -1) (undo-tree-id4372 . -1) (undo-tree-id4373 . -1) (undo-tree-id4374 . -1) (undo-tree-id4375 . -1) (undo-tree-id4376 . -1) (undo-tree-id4377 . -1) (undo-tree-id4378 . -1) (undo-tree-id4379 . -1) (undo-tree-id4380 . -1) (undo-tree-id4381 . -1) (undo-tree-id4382 . -1) (undo-tree-id4383 . -1) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) (undo-tree-id4390 . -1) (undo-tree-id4391 . -1) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1) (undo-tree-id4394 . -1) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (undo-tree-id4402 . -1) (#("i" 0 1 (fontified t)) . -12561) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) (undo-tree-id4405 . -1) (undo-tree-id4406 . -1) (undo-tree-id4407 . -1) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) (undo-tree-id4410 . -1) (undo-tree-id4411 . -1) (undo-tree-id4412 . -1) (undo-tree-id4413 . -1) (undo-tree-id4414 . -1) (undo-tree-id4415 . -1) (undo-tree-id4416 . -1) (undo-tree-id4417 . -1) (undo-tree-id4418 . -1) (undo-tree-id4419 . -1) (undo-tree-id4420 . -1) (undo-tree-id4421 . -1) (undo-tree-id4422 . -1) (undo-tree-id4423 . -1) (undo-tree-id4424 . -1) (undo-tree-id4425 . -1) (undo-tree-id4426 . -1) (undo-tree-id4427 . -1) (undo-tree-id4428 . -1) (undo-tree-id4429 . -1) (undo-tree-id4430 . -1) (undo-tree-id4431 . -1) (undo-tree-id4432 . -1) (undo-tree-id4433 . -1) (undo-tree-id4434 . -1) (undo-tree-id4435 . -1) (undo-tree-id4436 . -1) (undo-tree-id4437 . -1) (undo-tree-id4438 . -1) (undo-tree-id4439 . -1) (undo-tree-id4440 . -1) (undo-tree-id4441 . -1) (undo-tree-id4442 . -1) (undo-tree-id4443 . -1) (undo-tree-id4444 . -1) (undo-tree-id4445 . -1) (undo-tree-id4446 . -1) (undo-tree-id4447 . -1) (undo-tree-id4448 . -1) (undo-tree-id4449 . -1) (undo-tree-id4450 . -1) (undo-tree-id4451 . -1) (undo-tree-id4452 . -1) (undo-tree-id4453 . -1) (undo-tree-id4454 . -1) (undo-tree-id4455 . -1) (undo-tree-id4456 . -1) (undo-tree-id4457 . -1) (undo-tree-id4458 . -1) (undo-tree-id4459 . -1) (undo-tree-id4460 . -1) (undo-tree-id4461 . -1) (undo-tree-id4462 . -1) (undo-tree-id4463 . -1) (undo-tree-id4464 . -1) (undo-tree-id4465 . -1) (undo-tree-id4466 . -1) (undo-tree-id4467 . -1) (undo-tree-id4468 . -1) (undo-tree-id4469 . -1) (undo-tree-id4470 . -1) (undo-tree-id4471 . -1) (undo-tree-id4472 . -1) (undo-tree-id4473 . -1) (undo-tree-id4474 . -1) (undo-tree-id4475 . -1) (undo-tree-id4476 . -1) (undo-tree-id4477 . -1) (undo-tree-id4478 . -1) (undo-tree-id4479 . -1) (undo-tree-id4480 . -1) (undo-tree-id4481 . -1) (undo-tree-id4482 . -1) (undo-tree-id4483 . -1) (undo-tree-id4484 . -1) (undo-tree-id4485 . -1) (undo-tree-id4486 . -1) (undo-tree-id4487 . -1) (undo-tree-id4488 . -1) (undo-tree-id4489 . -1) (undo-tree-id4490 . -1) (undo-tree-id4491 . -1) (undo-tree-id4492 . -1) (undo-tree-id4493 . -1) (undo-tree-id4494 . -1) (undo-tree-id4495 . -1) (undo-tree-id4496 . -1) (undo-tree-id4497 . -1) (undo-tree-id4498 . -1) (undo-tree-id4499 . -1) (undo-tree-id4500 . -1) (undo-tree-id4501 . -1) (undo-tree-id4502 . -1) (undo-tree-id4503 . -1) (undo-tree-id4504 . -1) (undo-tree-id4505 . -1) (undo-tree-id4506 . -1) (undo-tree-id4507 . -1) (undo-tree-id4508 . -1) (undo-tree-id4509 . -1) (undo-tree-id4510 . -1) (undo-tree-id4511 . -1) (undo-tree-id4512 . -1) (undo-tree-id4513 . -1) (undo-tree-id4514 . -1) (undo-tree-id4515 . -1) (undo-tree-id4516 . -1) (undo-tree-id4517 . -1) (undo-tree-id4518 . -1) (undo-tree-id4519 . -1) (undo-tree-id4520 . -1) (undo-tree-id4521 . -1) (undo-tree-id4522 . -1) (undo-tree-id4523 . -1) (undo-tree-id4524 . -1) (undo-tree-id4525 . -1) (undo-tree-id4526 . -1) (undo-tree-id4527 . -1) (undo-tree-id4528 . -1) (undo-tree-id4529 . -1) (undo-tree-id4530 . -1) (undo-tree-id4531 . -1) (undo-tree-id4532 . -1) (undo-tree-id4533 . -1) (undo-tree-id4534 . -1) (undo-tree-id4535 . -1) (undo-tree-id4536 . -1) (undo-tree-id4537 . -1) (undo-tree-id4538 . -1) (undo-tree-id4539 . -1) (undo-tree-id4540 . -1) (undo-tree-id4541 . -1) (undo-tree-id4542 . -1) (undo-tree-id4543 . -1) (undo-tree-id4544 . -1) (undo-tree-id4545 . -1) (undo-tree-id4546 . -1) (undo-tree-id4547 . -1) (undo-tree-id4548 . -1) (undo-tree-id4549 . -1) (undo-tree-id4550 . -1) (undo-tree-id4551 . -1) (undo-tree-id4552 . -1) (undo-tree-id4553 . -1) (undo-tree-id4554 . -1) (undo-tree-id4555 . -1) (undo-tree-id4556 . -1) (undo-tree-id4557 . -1) (undo-tree-id4558 . -1) (undo-tree-id4559 . -1) (undo-tree-id4560 . -1) (undo-tree-id4561 . -1) (undo-tree-id4562 . -1) (undo-tree-id4563 . -1) (undo-tree-id4564 . -1) (undo-tree-id4565 . -1) (undo-tree-id4566 . -1) (undo-tree-id4567 . -1) (undo-tree-id4568 . -1) (undo-tree-id4569 . -1) (undo-tree-id4570 . -1) (undo-tree-id4571 . -1) (#("s" 0 1 (fontified t)) . -12562) (undo-tree-id4572 . -1) (undo-tree-id4573 . -1) (undo-tree-id4574 . -1) (undo-tree-id4575 . -1) (undo-tree-id4576 . -1) (undo-tree-id4577 . -1) (undo-tree-id4578 . -1) (undo-tree-id4579 . -1) (undo-tree-id4580 . -1) (undo-tree-id4581 . -1) (undo-tree-id4582 . -1) (undo-tree-id4583 . -1) (undo-tree-id4584 . -1) (undo-tree-id4585 . -1) (undo-tree-id4586 . -1) (undo-tree-id4587 . -1) (undo-tree-id4588 . -1) (undo-tree-id4589 . -1) (undo-tree-id4590 . -1) (undo-tree-id4591 . -1) (undo-tree-id4592 . -1) (undo-tree-id4593 . -1) (undo-tree-id4594 . -1) (undo-tree-id4595 . -1) (undo-tree-id4596 . -1) (undo-tree-id4597 . -1) (undo-tree-id4598 . -1) (undo-tree-id4599 . -1) (undo-tree-id4600 . -1) (undo-tree-id4601 . -1) (undo-tree-id4602 . -1) (undo-tree-id4603 . -1) (undo-tree-id4604 . -1) (undo-tree-id4605 . -1) (undo-tree-id4606 . -1) (undo-tree-id4607 . -1) (undo-tree-id4608 . -1) (undo-tree-id4609 . -1) (undo-tree-id4610 . -1) (undo-tree-id4611 . -1) (undo-tree-id4612 . -1) (undo-tree-id4613 . -1) (undo-tree-id4614 . -1) (undo-tree-id4615 . -1) (undo-tree-id4616 . -1) (undo-tree-id4617 . -1) (undo-tree-id4618 . -1) (undo-tree-id4619 . -1) (undo-tree-id4620 . -1) (undo-tree-id4621 . -1) (undo-tree-id4622 . -1) (undo-tree-id4623 . -1) (undo-tree-id4624 . -1) (undo-tree-id4625 . -1) (undo-tree-id4626 . -1) (undo-tree-id4627 . -1) (undo-tree-id4628 . -1) (undo-tree-id4629 . -1) (undo-tree-id4630 . -1) (undo-tree-id4631 . -1) (undo-tree-id4632 . -1) (undo-tree-id4633 . -1) (undo-tree-id4634 . -1) (undo-tree-id4635 . -1) (undo-tree-id4636 . -1) (undo-tree-id4637 . -1) (undo-tree-id4638 . -1) (undo-tree-id4639 . -1) (undo-tree-id4640 . -1) (undo-tree-id4641 . -1) (undo-tree-id4642 . -1) (undo-tree-id4643 . -1) (undo-tree-id4644 . -1) (undo-tree-id4645 . -1) (undo-tree-id4646 . -1) (undo-tree-id4647 . -1) (undo-tree-id4648 . -1) (undo-tree-id4649 . -1) (undo-tree-id4650 . -1) (undo-tree-id4651 . -1) (undo-tree-id4652 . -1) (undo-tree-id4653 . -1) (undo-tree-id4654 . -1) (undo-tree-id4655 . -1) (undo-tree-id4656 . -1) (undo-tree-id4657 . -1) (undo-tree-id4658 . -1) (undo-tree-id4659 . -1) (undo-tree-id4660 . -1) (undo-tree-id4661 . -1) (undo-tree-id4662 . -1) (undo-tree-id4663 . -1) (undo-tree-id4664 . -1) (undo-tree-id4665 . -1) (undo-tree-id4666 . -1) (undo-tree-id4667 . -1) (undo-tree-id4668 . -1) (undo-tree-id4669 . -1) (undo-tree-id4670 . -1) (undo-tree-id4671 . -1) (undo-tree-id4672 . -1) (undo-tree-id4673 . -1) (undo-tree-id4674 . -1) (undo-tree-id4675 . -1) (undo-tree-id4676 . -1) (undo-tree-id4677 . -1) (undo-tree-id4678 . -1) (undo-tree-id4679 . -1) (undo-tree-id4680 . -1) (undo-tree-id4681 . -1) (undo-tree-id4682 . -1) (undo-tree-id4683 . -1) (undo-tree-id4684 . -1) (undo-tree-id4685 . -1) (undo-tree-id4686 . -1) (undo-tree-id4687 . -1) (undo-tree-id4688 . -1) (undo-tree-id4689 . -1) (undo-tree-id4690 . -1) (undo-tree-id4691 . -1) (undo-tree-id4692 . -1) (undo-tree-id4693 . -1) (undo-tree-id4694 . -1) (undo-tree-id4695 . -1) (undo-tree-id4696 . -1) (undo-tree-id4697 . -1) (undo-tree-id4698 . -1) (undo-tree-id4699 . -1) (undo-tree-id4700 . -1) (undo-tree-id4701 . -1) (undo-tree-id4702 . -1) (undo-tree-id4703 . -1) (undo-tree-id4704 . -1) (undo-tree-id4705 . -1) (undo-tree-id4706 . -1) (undo-tree-id4707 . -1) (undo-tree-id4708 . -1) (undo-tree-id4709 . -1) (undo-tree-id4710 . -1) (undo-tree-id4711 . -1) (undo-tree-id4712 . -1) (undo-tree-id4713 . -1) (undo-tree-id4714 . -1) (undo-tree-id4715 . -1) (undo-tree-id4716 . -1) (undo-tree-id4717 . -1) (undo-tree-id4718 . -1) (undo-tree-id4719 . -1) (undo-tree-id4720 . -1) (undo-tree-id4721 . -1) (undo-tree-id4722 . -1) (undo-tree-id4723 . -1) (undo-tree-id4724 . -1) (#(" " 0 1 (fontified t)) . -12563) (undo-tree-id4725 . -1) (undo-tree-id4726 . -1) (undo-tree-id4727 . -1) (undo-tree-id4728 . -1) (undo-tree-id4729 . -1) (undo-tree-id4730 . -1) (undo-tree-id4731 . -1) (undo-tree-id4732 . -1) (undo-tree-id4733 . -1) (undo-tree-id4734 . -1) (undo-tree-id4735 . -1) (undo-tree-id4736 . -1) (undo-tree-id4737 . -1) (undo-tree-id4738 . -1) (undo-tree-id4739 . -1) (undo-tree-id4740 . -1) (undo-tree-id4741 . -1) (undo-tree-id4742 . -1) (undo-tree-id4743 . -1) (undo-tree-id4744 . -1) (undo-tree-id4745 . -1) (undo-tree-id4746 . -1) (undo-tree-id4747 . -1) (undo-tree-id4748 . -1) (undo-tree-id4749 . -1) (undo-tree-id4750 . -1) (undo-tree-id4751 . -1) (undo-tree-id4752 . -1) (undo-tree-id4753 . -1) (undo-tree-id4754 . -1) (undo-tree-id4755 . -1) (undo-tree-id4756 . -1) (undo-tree-id4757 . -1) (undo-tree-id4758 . -1) (undo-tree-id4759 . -1) (undo-tree-id4760 . -1) (undo-tree-id4761 . -1) (undo-tree-id4762 . -1) (undo-tree-id4763 . -1) (undo-tree-id4764 . -1) (undo-tree-id4765 . -1) (undo-tree-id4766 . -1) (undo-tree-id4767 . -1) (undo-tree-id4768 . -1) (undo-tree-id4769 . -1) (undo-tree-id4770 . -1) (undo-tree-id4771 . -1) (undo-tree-id4772 . -1) (undo-tree-id4773 . -1) (undo-tree-id4774 . -1) (undo-tree-id4775 . -1) (undo-tree-id4776 . -1) (undo-tree-id4777 . -1) (undo-tree-id4778 . -1) (undo-tree-id4779 . -1) (undo-tree-id4780 . -1) (undo-tree-id4781 . -1) (undo-tree-id4782 . -1) (undo-tree-id4783 . -1) (undo-tree-id4784 . -1) (undo-tree-id4785 . -1) (undo-tree-id4786 . -1) (undo-tree-id4787 . -1) (undo-tree-id4788 . -1) (undo-tree-id4789 . -1) (undo-tree-id4790 . -1) (undo-tree-id4791 . -1) (undo-tree-id4792 . -1) (undo-tree-id4793 . -1) (undo-tree-id4794 . -1) (undo-tree-id4795 . -1) (undo-tree-id4796 . -1) (undo-tree-id4797 . -1) (undo-tree-id4798 . -1) (undo-tree-id4799 . -1) (undo-tree-id4800 . -1) (undo-tree-id4801 . -1) (undo-tree-id4802 . -1) (undo-tree-id4803 . -1) (undo-tree-id4804 . -1) (undo-tree-id4805 . -1) (undo-tree-id4806 . -1) (undo-tree-id4807 . -1) (undo-tree-id4808 . -1) (undo-tree-id4809 . -1) (undo-tree-id4810 . -1) (undo-tree-id4811 . -1) (undo-tree-id4812 . -1) (undo-tree-id4813 . -1) (undo-tree-id4814 . -1) (undo-tree-id4815 . -1) (undo-tree-id4816 . -1) (undo-tree-id4817 . -1) (undo-tree-id4818 . -1) (undo-tree-id4819 . -1) (undo-tree-id4820 . -1) (undo-tree-id4821 . -1) (undo-tree-id4822 . -1) (undo-tree-id4823 . -1) (undo-tree-id4824 . -1) (undo-tree-id4825 . -1) (undo-tree-id4826 . -1) (undo-tree-id4827 . -1) (undo-tree-id4828 . -1) (undo-tree-id4829 . -1) (undo-tree-id4830 . -1) (undo-tree-id4831 . -1) (undo-tree-id4832 . -1) (undo-tree-id4833 . -1) (undo-tree-id4834 . -1) (undo-tree-id4835 . -1) (undo-tree-id4836 . -1) (undo-tree-id4837 . -1) (undo-tree-id4838 . -1) (undo-tree-id4839 . -1) (undo-tree-id4840 . -1) (undo-tree-id4841 . -1) (undo-tree-id4842 . -1) (undo-tree-id4843 . -1) (undo-tree-id4844 . -1) (undo-tree-id4845 . -1) (undo-tree-id4846 . -1) (undo-tree-id4847 . -1) (undo-tree-id4848 . -1) (undo-tree-id4849 . -1) (undo-tree-id4850 . -1) (undo-tree-id4851 . -1) (undo-tree-id4852 . -1) (undo-tree-id4853 . -1) (undo-tree-id4854 . -1) (undo-tree-id4855 . -1) (undo-tree-id4856 . -1) (undo-tree-id4857 . -1) (undo-tree-id4858 . -1) (undo-tree-id4859 . -1) (undo-tree-id4860 . -1) (undo-tree-id4861 . -1) (#("s" 0 1 (fontified t)) . -12564) (undo-tree-id4862 . -1) (undo-tree-id4863 . -1) (undo-tree-id4864 . -1) (undo-tree-id4865 . -1) (undo-tree-id4866 . -1) (undo-tree-id4867 . -1) (undo-tree-id4868 . -1) (undo-tree-id4869 . -1) (undo-tree-id4870 . -1) (undo-tree-id4871 . -1) (undo-tree-id4872 . -1) (undo-tree-id4873 . -1) (undo-tree-id4874 . -1) (undo-tree-id4875 . -1) (undo-tree-id4876 . -1) (undo-tree-id4877 . -1) (undo-tree-id4878 . -1) (undo-tree-id4879 . -1) (undo-tree-id4880 . -1) (undo-tree-id4881 . -1) (undo-tree-id4882 . -1) (undo-tree-id4883 . -1) (undo-tree-id4884 . -1) (undo-tree-id4885 . -1) (undo-tree-id4886 . -1) (undo-tree-id4887 . -1) (undo-tree-id4888 . -1) (undo-tree-id4889 . -1) (undo-tree-id4890 . -1) (undo-tree-id4891 . -1) (undo-tree-id4892 . -1) (undo-tree-id4893 . -1) (undo-tree-id4894 . -1) (undo-tree-id4895 . -1) (undo-tree-id4896 . -1) (undo-tree-id4897 . -1) (undo-tree-id4898 . -1) (undo-tree-id4899 . -1) (undo-tree-id4900 . -1) (undo-tree-id4901 . -1) (undo-tree-id4902 . -1) (undo-tree-id4903 . -1) (undo-tree-id4904 . -1) (undo-tree-id4905 . -1) (undo-tree-id4906 . -1) (undo-tree-id4907 . -1) (undo-tree-id4908 . -1) (undo-tree-id4909 . -1) (undo-tree-id4910 . -1) (undo-tree-id4911 . -1) (undo-tree-id4912 . -1) (undo-tree-id4913 . -1) (undo-tree-id4914 . -1) (undo-tree-id4915 . -1) (undo-tree-id4916 . -1) (undo-tree-id4917 . -1) (undo-tree-id4918 . -1) (undo-tree-id4919 . -1) (undo-tree-id4920 . -1) (undo-tree-id4921 . -1) (undo-tree-id4922 . -1) (undo-tree-id4923 . -1) (undo-tree-id4924 . -1) (undo-tree-id4925 . -1) (undo-tree-id4926 . -1) (undo-tree-id4927 . -1) (undo-tree-id4928 . -1) (undo-tree-id4929 . -1) (undo-tree-id4930 . -1) (undo-tree-id4931 . -1) (undo-tree-id4932 . -1) (undo-tree-id4933 . -1) (undo-tree-id4934 . -1) (undo-tree-id4935 . -1) (undo-tree-id4936 . -1) (undo-tree-id4937 . -1) (undo-tree-id4938 . -1) (undo-tree-id4939 . -1) (undo-tree-id4940 . -1) (undo-tree-id4941 . -1) (undo-tree-id4942 . -1) (undo-tree-id4943 . -1) (undo-tree-id4944 . -1) (undo-tree-id4945 . -1) (undo-tree-id4946 . -1) (undo-tree-id4947 . -1) (undo-tree-id4948 . -1) (undo-tree-id4949 . -1) (undo-tree-id4950 . -1) (undo-tree-id4951 . -1) (undo-tree-id4952 . -1) (undo-tree-id4953 . -1) (undo-tree-id4954 . -1) (undo-tree-id4955 . -1) (undo-tree-id4956 . -1) (undo-tree-id4957 . -1) (undo-tree-id4958 . -1) (undo-tree-id4959 . -1) (undo-tree-id4960 . -1) (undo-tree-id4961 . -1) (undo-tree-id4962 . -1) (undo-tree-id4963 . -1) (undo-tree-id4964 . -1) (undo-tree-id4965 . -1) (undo-tree-id4966 . -1) (undo-tree-id4967 . -1) (undo-tree-id4968 . -1) (undo-tree-id4969 . -1) (undo-tree-id4970 . -1) (undo-tree-id4971 . -1) (undo-tree-id4972 . -1) (undo-tree-id4973 . -1) (undo-tree-id4974 . -1) (undo-tree-id4975 . -1) (undo-tree-id4976 . -1) (undo-tree-id4977 . -1) (undo-tree-id4978 . -1) (undo-tree-id4979 . -1) (undo-tree-id4980 . -1) (undo-tree-id4981 . -1) (undo-tree-id4982 . -1) (#("e" 0 1 (fontified t)) . -12565) (undo-tree-id4983 . -1) (undo-tree-id4984 . -1) (undo-tree-id4985 . -1) (undo-tree-id4986 . -1) (undo-tree-id4987 . -1) (undo-tree-id4988 . -1) (undo-tree-id4989 . -1) (undo-tree-id4990 . -1) (undo-tree-id4991 . -1) (undo-tree-id4992 . -1) (undo-tree-id4993 . -1) (undo-tree-id4994 . -1) (undo-tree-id4995 . -1) (undo-tree-id4996 . -1) (undo-tree-id4997 . -1) (undo-tree-id4998 . -1) (undo-tree-id4999 . -1) (undo-tree-id5000 . -1) (undo-tree-id5001 . -1) (undo-tree-id5002 . -1) (undo-tree-id5003 . -1) (undo-tree-id5004 . -1) (undo-tree-id5005 . -1) (undo-tree-id5006 . -1) (undo-tree-id5007 . -1) (undo-tree-id5008 . -1) (undo-tree-id5009 . -1) (undo-tree-id5010 . -1) (undo-tree-id5011 . -1) (undo-tree-id5012 . -1) (undo-tree-id5013 . -1) (undo-tree-id5014 . -1) (undo-tree-id5015 . -1) (undo-tree-id5016 . -1) (undo-tree-id5017 . -1) (undo-tree-id5018 . -1) (undo-tree-id5019 . -1) (undo-tree-id5020 . -1) (undo-tree-id5021 . -1) (undo-tree-id5022 . -1) (undo-tree-id5023 . -1) (undo-tree-id5024 . -1) (undo-tree-id5025 . -1) (undo-tree-id5026 . -1) (undo-tree-id5027 . -1) (undo-tree-id5028 . -1) (undo-tree-id5029 . -1) (undo-tree-id5030 . -1) (undo-tree-id5031 . -1) (undo-tree-id5032 . -1) (undo-tree-id5033 . -1) (undo-tree-id5034 . -1) (undo-tree-id5035 . -1) (undo-tree-id5036 . -1) (undo-tree-id5037 . -1) (undo-tree-id5038 . -1) (undo-tree-id5039 . -1) (undo-tree-id5040 . -1) (undo-tree-id5041 . -1) (undo-tree-id5042 . -1) (undo-tree-id5043 . -1) (undo-tree-id5044 . -1) (undo-tree-id5045 . -1) (undo-tree-id5046 . -1) (undo-tree-id5047 . -1) (undo-tree-id5048 . -1) (undo-tree-id5049 . -1) (undo-tree-id5050 . -1) (undo-tree-id5051 . -1) (undo-tree-id5052 . -1) (undo-tree-id5053 . -1) (undo-tree-id5054 . -1) (undo-tree-id5055 . -1) (undo-tree-id5056 . -1) (undo-tree-id5057 . -1) (undo-tree-id5058 . -1) (undo-tree-id5059 . -1) (undo-tree-id5060 . -1) (undo-tree-id5061 . -1) (undo-tree-id5062 . -1) (undo-tree-id5063 . -1) (undo-tree-id5064 . -1) (undo-tree-id5065 . -1) (undo-tree-id5066 . -1) (undo-tree-id5067 . -1) (undo-tree-id5068 . -1) (undo-tree-id5069 . -1) (undo-tree-id5070 . -1) (undo-tree-id5071 . -1) (undo-tree-id5072 . -1) (undo-tree-id5073 . -1) (undo-tree-id5074 . -1) (undo-tree-id5075 . -1) (undo-tree-id5076 . -1) (undo-tree-id5077 . -1) (undo-tree-id5078 . -1) (undo-tree-id5079 . -1) (undo-tree-id5080 . -1) (undo-tree-id5081 . -1) (undo-tree-id5082 . -1) (undo-tree-id5083 . -1) (undo-tree-id5084 . -1) (undo-tree-id5085 . -1) (undo-tree-id5086 . -1) (undo-tree-id5087 . -1) (#("c" 0 1 (fontified t)) . -12566) (undo-tree-id5088 . -1) (undo-tree-id5089 . -1) (undo-tree-id5090 . -1) (undo-tree-id5091 . -1) (undo-tree-id5092 . -1) (undo-tree-id5093 . -1) (undo-tree-id5094 . -1) (undo-tree-id5095 . -1) (undo-tree-id5096 . -1) (undo-tree-id5097 . -1) (undo-tree-id5098 . -1) (undo-tree-id5099 . -1) (undo-tree-id5100 . -1) (undo-tree-id5101 . -1) (undo-tree-id5102 . -1) (undo-tree-id5103 . -1) (undo-tree-id5104 . -1) (undo-tree-id5105 . -1) (undo-tree-id5106 . -1) (undo-tree-id5107 . -1) (undo-tree-id5108 . -1) (undo-tree-id5109 . -1) (undo-tree-id5110 . -1) (undo-tree-id5111 . -1) (undo-tree-id5112 . -1) (undo-tree-id5113 . -1) (undo-tree-id5114 . -1) (undo-tree-id5115 . -1) (undo-tree-id5116 . -1) (undo-tree-id5117 . -1) (undo-tree-id5118 . -1) (undo-tree-id5119 . -1) (undo-tree-id5120 . -1) (undo-tree-id5121 . -1) (undo-tree-id5122 . -1) (undo-tree-id5123 . -1) (undo-tree-id5124 . -1) (undo-tree-id5125 . -1) (undo-tree-id5126 . -1) (undo-tree-id5127 . -1) (undo-tree-id5128 . -1) (undo-tree-id5129 . -1) (undo-tree-id5130 . -1) (undo-tree-id5131 . -1) (undo-tree-id5132 . -1) (undo-tree-id5133 . -1) (undo-tree-id5134 . -1) (undo-tree-id5135 . -1) (undo-tree-id5136 . -1) (undo-tree-id5137 . -1) (undo-tree-id5138 . -1) (undo-tree-id5139 . -1) (undo-tree-id5140 . -1) (undo-tree-id5141 . -1) (undo-tree-id5142 . -1) (undo-tree-id5143 . -1) (undo-tree-id5144 . -1) (undo-tree-id5145 . -1) (undo-tree-id5146 . -1) (undo-tree-id5147 . -1) (undo-tree-id5148 . -1) (undo-tree-id5149 . -1) (undo-tree-id5150 . -1) (undo-tree-id5151 . -1) (undo-tree-id5152 . -1) (undo-tree-id5153 . -1) (undo-tree-id5154 . -1) (undo-tree-id5155 . -1) (undo-tree-id5156 . -1) (undo-tree-id5157 . -1) (undo-tree-id5158 . -1) (undo-tree-id5159 . -1) (undo-tree-id5160 . -1) (undo-tree-id5161 . -1) (undo-tree-id5162 . -1) (undo-tree-id5163 . -1) (undo-tree-id5164 . -1) (undo-tree-id5165 . -1) (undo-tree-id5166 . -1) (undo-tree-id5167 . -1) (undo-tree-id5168 . -1) (undo-tree-id5169 . -1) (undo-tree-id5170 . -1) (undo-tree-id5171 . -1) (undo-tree-id5172 . -1) (undo-tree-id5173 . -1) (undo-tree-id5174 . -1) (undo-tree-id5175 . -1) (undo-tree-id5176 . -1) (#("t" 0 1 (fontified t)) . -12567) (undo-tree-id5177 . -1) (undo-tree-id5178 . -1) (undo-tree-id5179 . -1) (undo-tree-id5180 . -1) (undo-tree-id5181 . -1) (undo-tree-id5182 . -1) (undo-tree-id5183 . -1) (undo-tree-id5184 . -1) (undo-tree-id5185 . -1) (undo-tree-id5186 . -1) (undo-tree-id5187 . -1) (undo-tree-id5188 . -1) (undo-tree-id5189 . -1) (undo-tree-id5190 . -1) (undo-tree-id5191 . -1) (undo-tree-id5192 . -1) (undo-tree-id5193 . -1) (undo-tree-id5194 . -1) (undo-tree-id5195 . -1) (undo-tree-id5196 . -1) (undo-tree-id5197 . -1) (undo-tree-id5198 . -1) (undo-tree-id5199 . -1) (undo-tree-id5200 . -1) (undo-tree-id5201 . -1) (undo-tree-id5202 . -1) (undo-tree-id5203 . -1) (undo-tree-id5204 . -1) (undo-tree-id5205 . -1) (undo-tree-id5206 . -1) (undo-tree-id5207 . -1) (undo-tree-id5208 . -1) (undo-tree-id5209 . -1) (undo-tree-id5210 . -1) (undo-tree-id5211 . -1) (undo-tree-id5212 . -1) (undo-tree-id5213 . -1) (undo-tree-id5214 . -1) (undo-tree-id5215 . -1) (undo-tree-id5216 . -1) (undo-tree-id5217 . -1) (undo-tree-id5218 . -1) (undo-tree-id5219 . -1) (undo-tree-id5220 . -1) (undo-tree-id5221 . -1) (undo-tree-id5222 . -1) (undo-tree-id5223 . -1) (undo-tree-id5224 . -1) (undo-tree-id5225 . -1) (undo-tree-id5226 . -1) (undo-tree-id5227 . -1) (undo-tree-id5228 . -1) (undo-tree-id5229 . -1) (undo-tree-id5230 . -1) (undo-tree-id5231 . -1) (undo-tree-id5232 . -1) (undo-tree-id5233 . -1) (undo-tree-id5234 . -1) (undo-tree-id5235 . -1) (undo-tree-id5236 . -1) (undo-tree-id5237 . -1) (undo-tree-id5238 . -1) (undo-tree-id5239 . -1) (undo-tree-id5240 . -1) (undo-tree-id5241 . -1) (undo-tree-id5242 . -1) (undo-tree-id5243 . -1) (undo-tree-id5244 . -1) (undo-tree-id5245 . -1) (undo-tree-id5246 . -1) (undo-tree-id5247 . -1) (undo-tree-id5248 . -1) (undo-tree-id5249 . -1) (#("i" 0 1 (fontified t)) . -12568) (undo-tree-id5250 . -1) (undo-tree-id5251 . -1) (undo-tree-id5252 . -1) (undo-tree-id5253 . -1) (undo-tree-id5254 . -1) (undo-tree-id5255 . -1) (undo-tree-id5256 . -1) (undo-tree-id5257 . -1) (undo-tree-id5258 . -1) (undo-tree-id5259 . -1) (undo-tree-id5260 . -1) (undo-tree-id5261 . -1) (undo-tree-id5262 . -1) (undo-tree-id5263 . -1) (undo-tree-id5264 . -1) (undo-tree-id5265 . -1) (undo-tree-id5266 . -1) (undo-tree-id5267 . -1) (undo-tree-id5268 . -1) (undo-tree-id5269 . -1) (undo-tree-id5270 . -1) (undo-tree-id5271 . -1) (undo-tree-id5272 . -1) (undo-tree-id5273 . -1) (undo-tree-id5274 . -1) (undo-tree-id5275 . -1) (undo-tree-id5276 . -1) (undo-tree-id5277 . -1) (undo-tree-id5278 . -1) (undo-tree-id5279 . -1) (undo-tree-id5280 . -1) (undo-tree-id5281 . -1) (undo-tree-id5282 . -1) (undo-tree-id5283 . -1) (undo-tree-id5284 . -1) (undo-tree-id5285 . -1) (undo-tree-id5286 . -1) (undo-tree-id5287 . -1) (undo-tree-id5288 . -1) (undo-tree-id5289 . -1) (undo-tree-id5290 . -1) (undo-tree-id5291 . -1) (undo-tree-id5292 . -1) (undo-tree-id5293 . -1) (undo-tree-id5294 . -1) (undo-tree-id5295 . -1) (undo-tree-id5296 . -1) (undo-tree-id5297 . -1) (undo-tree-id5298 . -1) (undo-tree-id5299 . -1) (undo-tree-id5300 . -1) (undo-tree-id5301 . -1) (undo-tree-id5302 . -1) (undo-tree-id5303 . -1) (undo-tree-id5304 . -1) (undo-tree-id5305 . -1) (undo-tree-id5306 . -1) (#("o" 0 1 (fontified t)) . -12569) (undo-tree-id5307 . -1) (undo-tree-id5308 . -1) (undo-tree-id5309 . -1) (undo-tree-id5310 . -1) (undo-tree-id5311 . -1) (undo-tree-id5312 . -1) (undo-tree-id5313 . -1) (undo-tree-id5314 . -1) (undo-tree-id5315 . -1) (undo-tree-id5316 . -1) (undo-tree-id5317 . -1) (undo-tree-id5318 . -1) (undo-tree-id5319 . -1) (undo-tree-id5320 . -1) (undo-tree-id5321 . -1) (undo-tree-id5322 . -1) (undo-tree-id5323 . -1) (undo-tree-id5324 . -1) (undo-tree-id5325 . -1) (undo-tree-id5326 . -1) (undo-tree-id5327 . -1) (undo-tree-id5328 . -1) (undo-tree-id5329 . -1) (undo-tree-id5330 . -1) (undo-tree-id5331 . -1) (undo-tree-id5332 . -1) (undo-tree-id5333 . -1) (undo-tree-id5334 . -1) (undo-tree-id5335 . -1) (undo-tree-id5336 . -1) (undo-tree-id5337 . -1) (undo-tree-id5338 . -1) (undo-tree-id5339 . -1) (undo-tree-id5340 . -1) (undo-tree-id5341 . -1) (undo-tree-id5342 . -1) (undo-tree-id5343 . -1) (undo-tree-id5344 . -1) (undo-tree-id5345 . -1) (undo-tree-id5346 . -1) (undo-tree-id5347 . -1) (#("n" 0 1 (fontified t)) . -12570) (undo-tree-id5348 . -1) (undo-tree-id5349 . -1) (undo-tree-id5350 . -1) (undo-tree-id5351 . -1) (undo-tree-id5352 . -1) (undo-tree-id5353 . -1) (undo-tree-id5354 . -1) (undo-tree-id5355 . -1) (undo-tree-id5356 . -1) (undo-tree-id5357 . -1) (undo-tree-id5358 . -1) (undo-tree-id5359 . -1) (undo-tree-id5360 . -1) (undo-tree-id5361 . -1) (undo-tree-id5362 . -1) (undo-tree-id5363 . -1) (undo-tree-id5364 . -1) (undo-tree-id5365 . -1) (undo-tree-id5366 . -1) (undo-tree-id5367 . -1) (undo-tree-id5368 . -1) (undo-tree-id5369 . -1) (undo-tree-id5370 . -1) (undo-tree-id5371 . -1) (undo-tree-id5372 . -1) (#(" " 0 1 (fontified t)) . -12571) (undo-tree-id5373 . -1) (undo-tree-id5374 . -1) (undo-tree-id5375 . -1) (undo-tree-id5376 . -1) (undo-tree-id5377 . -1) (undo-tree-id5378 . -1) (undo-tree-id5379 . -1) (undo-tree-id5380 . -1) (undo-tree-id5381 . -1) 12572 (12559 . 12572) (#("o" 0 1 (fontified t)) . -12559) (undo-tree-id5382 . -1) (undo-tree-id5383 . -1) (undo-tree-id5384 . -1) (undo-tree-id5385 . -1) (undo-tree-id5386 . -1) (undo-tree-id5387 . -1) (undo-tree-id5388 . -1) (undo-tree-id5389 . -1) (undo-tree-id5390 . -1) (undo-tree-id5391 . -1) (undo-tree-id5392 . -1) (undo-tree-id5393 . -1) (undo-tree-id5394 . -1) (undo-tree-id5395 . -1) (undo-tree-id5396 . -1) (undo-tree-id5397 . -1) (undo-tree-id5398 . -1) (undo-tree-id5399 . -1) (undo-tree-id5400 . -1) (undo-tree-id5401 . -1) (undo-tree-id5402 . -1) (undo-tree-id5403 . -1) (undo-tree-id5404 . -1) (undo-tree-id5405 . -1) (undo-tree-id5406 . -1) (undo-tree-id5407 . -1) (undo-tree-id5408 . -1) (undo-tree-id5409 . -1) (undo-tree-id5410 . -1) (undo-tree-id5411 . -1) (undo-tree-id5412 . -1) (undo-tree-id5413 . -1) (undo-tree-id5414 . -1) (undo-tree-id5415 . -1) (undo-tree-id5416 . -1) (undo-tree-id5417 . -1) (undo-tree-id5418 . -1) (undo-tree-id5419 . -1) (undo-tree-id5420 . -1) (undo-tree-id5421 . -1) (undo-tree-id5422 . -1) (undo-tree-id5423 . -1) (undo-tree-id5424 . -1) (undo-tree-id5425 . -1) (undo-tree-id5426 . -1) (undo-tree-id5427 . -1) (undo-tree-id5428 . -1) (undo-tree-id5429 . -1) (undo-tree-id5430 . -1) (undo-tree-id5431 . -1) (undo-tree-id5432 . -1) (undo-tree-id5433 . -1) (undo-tree-id5434 . -1) (undo-tree-id5435 . -1) (undo-tree-id5436 . -1) (undo-tree-id5437 . -1) (undo-tree-id5438 . -1) (undo-tree-id5439 . -1) (undo-tree-id5440 . -1) (undo-tree-id5441 . -1) (undo-tree-id5442 . -1) (undo-tree-id5443 . -1) (undo-tree-id5444 . -1) (undo-tree-id5445 . -1) (undo-tree-id5446 . -1) (undo-tree-id5447 . -1) (undo-tree-id5448 . -1) (undo-tree-id5449 . -1) (undo-tree-id5450 . -1) (undo-tree-id5451 . -1) (undo-tree-id5452 . -1) (undo-tree-id5453 . -1) (undo-tree-id5454 . -1) (#("r" 0 1 (fontified t)) . -12560) (undo-tree-id5455 . -1) (undo-tree-id5456 . -1) (undo-tree-id5457 . -1) (undo-tree-id5458 . -1) (undo-tree-id5459 . -1) (undo-tree-id5460 . -1) (undo-tree-id5461 . -1) (undo-tree-id5462 . -1) (undo-tree-id5463 . -1) (undo-tree-id5464 . -1) (undo-tree-id5465 . -1) (undo-tree-id5466 . -1) (undo-tree-id5467 . -1) (undo-tree-id5468 . -1) (undo-tree-id5469 . -1) (undo-tree-id5470 . -1) (undo-tree-id5471 . -1) (undo-tree-id5472 . -1) (undo-tree-id5473 . -1) (undo-tree-id5474 . -1) (undo-tree-id5475 . -1) (undo-tree-id5476 . -1) (undo-tree-id5477 . -1) (undo-tree-id5478 . -1) (undo-tree-id5479 . -1) (undo-tree-id5480 . -1) (undo-tree-id5481 . -1) (undo-tree-id5482 . -1) (undo-tree-id5483 . -1) (undo-tree-id5484 . -1) (undo-tree-id5485 . -1) (undo-tree-id5486 . -1) (undo-tree-id5487 . -1) (undo-tree-id5488 . -1) (undo-tree-id5489 . -1) (undo-tree-id5490 . -1) (undo-tree-id5491 . -1) (undo-tree-id5492 . -1) (undo-tree-id5493 . -1) (undo-tree-id5494 . -1) (undo-tree-id5495 . -1) (undo-tree-id5496 . -1) (undo-tree-id5497 . -1) (undo-tree-id5498 . -1) (undo-tree-id5499 . -1) (undo-tree-id5500 . -1) (undo-tree-id5501 . -1) (undo-tree-id5502 . -1) (undo-tree-id5503 . -1) (undo-tree-id5504 . -1) (undo-tree-id5505 . -1) (undo-tree-id5506 . -1) (undo-tree-id5507 . -1) (undo-tree-id5508 . -1) (undo-tree-id5509 . -1) (undo-tree-id5510 . -1) (undo-tree-id5511 . -1) (#("g" 0 1 (fontified t)) . -12561) (undo-tree-id5512 . -1) (undo-tree-id5513 . -1) (undo-tree-id5514 . -1) (undo-tree-id5515 . -1) (undo-tree-id5516 . -1) (undo-tree-id5517 . -1) (undo-tree-id5518 . -1) (undo-tree-id5519 . -1) (undo-tree-id5520 . -1) (undo-tree-id5521 . -1) (undo-tree-id5522 . -1) (undo-tree-id5523 . -1) (undo-tree-id5524 . -1) (undo-tree-id5525 . -1) (undo-tree-id5526 . -1) (undo-tree-id5527 . -1) (undo-tree-id5528 . -1) (undo-tree-id5529 . -1) (undo-tree-id5530 . -1) (undo-tree-id5531 . -1) (undo-tree-id5532 . -1) (undo-tree-id5533 . -1) (undo-tree-id5534 . -1) (undo-tree-id5535 . -1) (undo-tree-id5536 . -1) (undo-tree-id5537 . -1) (undo-tree-id5538 . -1) (undo-tree-id5539 . -1) (undo-tree-id5540 . -1) (undo-tree-id5541 . -1) (undo-tree-id5542 . -1) (undo-tree-id5543 . -1) (undo-tree-id5544 . -1) (undo-tree-id5545 . -1) (undo-tree-id5546 . -1) (undo-tree-id5547 . -1) (undo-tree-id5548 . -1) (undo-tree-id5549 . -1) (undo-tree-id5550 . -1) (undo-tree-id5551 . -1) (undo-tree-id5552 . -1) (#("-" 0 1 (fontified t)) . -12562) (undo-tree-id5553 . -1) (undo-tree-id5554 . -1) (undo-tree-id5555 . -1) (undo-tree-id5556 . -1) (undo-tree-id5557 . -1) (undo-tree-id5558 . -1) (undo-tree-id5559 . -1) (undo-tree-id5560 . -1) (undo-tree-id5561 . -1) (undo-tree-id5562 . -1) (undo-tree-id5563 . -1) (undo-tree-id5564 . -1) (undo-tree-id5565 . -1) (undo-tree-id5566 . -1) (undo-tree-id5567 . -1) (undo-tree-id5568 . -1) (undo-tree-id5569 . -1) (undo-tree-id5570 . -1) (undo-tree-id5571 . -1) (undo-tree-id5572 . -1) (undo-tree-id5573 . -1) (undo-tree-id5574 . -1) (undo-tree-id5575 . -1) (undo-tree-id5576 . -1) (undo-tree-id5577 . -1) (#("r" 0 1 (fontified t)) . -12563) (undo-tree-id5578 . -1) (undo-tree-id5579 . -1) (undo-tree-id5580 . -1) (undo-tree-id5581 . -1) (undo-tree-id5582 . -1) (undo-tree-id5583 . -1) (undo-tree-id5584 . -1) (undo-tree-id5585 . -1) (undo-tree-id5586 . -1) 12564 (12559 . 12564) (12558 . 12559) (12557 . 12558) (12536 . 12557) (#(" " 0 1 (fontified t face org-level-2)) . -12536) (undo-tree-id5587 . -1) (undo-tree-id5588 . -1) (undo-tree-id5589 . -1) (undo-tree-id5590 . -1) (undo-tree-id5591 . -1) (undo-tree-id5592 . -1) (undo-tree-id5593 . -1) (undo-tree-id5594 . -1) (undo-tree-id5595 . -1) 12537 (12530 . 12537) (12531 . 12533) (#("  " 0 2 (fontified nil)) . 12530) (undo-tree-id5596 . -2) (undo-tree-id5597 . -1) (undo-tree-id5598 . -1) (undo-tree-id5599 . -1) (undo-tree-id5600 . -1) (undo-tree-id5601 . -1) (undo-tree-id5602 . -1) (undo-tree-id5603 . -1) (undo-tree-id5604 . -1) (undo-tree-id5605 . -1) (undo-tree-id5606 . -1) (undo-tree-id5607 . -1) (undo-tree-id5608 . -1) (undo-tree-id5609 . -1) (undo-tree-id5610 . -1) (undo-tree-id5611 . -1) (undo-tree-id5612 . -1) (undo-tree-id5613 . -1) (undo-tree-id5614 . -1) (undo-tree-id5615 . -1) (undo-tree-id5616 . -2) (undo-tree-id5617 . -2) (undo-tree-id5618 . -2) (undo-tree-id5619 . -2) (undo-tree-id5620 . -2) (undo-tree-id5621 . -2) (undo-tree-id5622 . -2) (undo-tree-id5623 . -2) (12531 . 12533) (#(" " 0 1 (fontified nil)) . 12529) (undo-tree-id5624 . -1) (undo-tree-id5625 . -1) (undo-tree-id5626 . -1) (undo-tree-id5627 . -1) (undo-tree-id5628 . -1) (undo-tree-id5629 . -1) (undo-tree-id5630 . -1) (undo-tree-id5631 . -1) (undo-tree-id5632 . -1) (undo-tree-id5633 . -1) (undo-tree-id5634 . -1) (undo-tree-id5635 . -1) (undo-tree-id5636 . -1) (12530 . 12531)) nil (25376 45507 736135 118000) 0 nil])
([nil nil ((apply yas--snippet-revive 12897 16321 #s(yas--snippet nil (#s(yas--field 1 12909 13564 nil nil nil t #s(yas--field 2 16311 16311 nil nil nil nil nil)) #s(yas--field 2 16311 16311 nil nil nil nil nil)) nil 0 nil #s(yas--field 1 12909 13564 nil nil nil t #s(yas--field 2 16311 16311 nil nil nil nil nil)) nil nil)) (12927 . 13536) (12928 . 12954) (12929 . 15675) 12927) nil (25376 45507 727866 543000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t font-lock-fontified t font-lock-multiline t src-block t face (org-block))) . 16310) (undo-tree-id5686 . 1) (t 25376 45507 863137 832000)) nil (25376 45536 232955 336000) 0 nil])
([nil nil ((13001 . 13021) (15234 . 15245) (15235 . 15333) 12927 (t 25376 45536 313444 117000)) nil (25383 8875 640993 618000) 0 nil])
([nil nil ((16462 . 16464) (16451 . 16504) (#("
" 0 1 (fontified nil)) . 16451) (16450 . 16452)) nil (25383 8875 640981 456000) 0 nil])
([nil nil ((15305 . 15310) (t 25383 8875 776834 205000)) nil (25383 8944 494220 949000) 0 nil])
([nil nil ((16467 . 16469) (16467 . 16509) (#(": org-roam-backlinks-search-from-moc-or-poi
" 0 2 (fontified nil) 2 44 (fontified nil)) . 16467)) nil (25383 8944 494209 198000) 0 nil])
([nil nil ((14823 . 15058) 12927 (t 25383 8944 627858 185000)) nil (25383 9124 98470 835000) 0 nil])
([nil nil ((13084 . 13145) 12927 (t 25383 9124 234032 110000)) nil (25383 9144 401638 265000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -868) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) 869 (t 25383 9144 534125 948000)) nil (25384 62198 319284 83000) 0 nil])
([nil nil ((948 . 1668) (#("- [[#org-roam-general-setup][Org-Roam general setup]]
- [[#useful-functions][Useful Functions]]
- [[#acting-on-backlinks][Acting on backlinks]]
- [[#bibtex-completion-ivy-and-org-ref][Bibtex completion (Ivy) and Org-Ref]]
- [[#org-roam-bibtex-protocols-reference-notes-and-ui-graphing-capabilities][Org Roam Bibtex, Protocols (Reference notes) and UI (graphing capabilities)]]
- [[#logseq-like-tagging-functionality][Logseq-like tagging functionality]]
- [[#fleeting-notes][Fleeting notes]]
- [[#capture-templates][Capture Templates]]
- [[#providing-the-packages-to-be-loaded-in-initel][Providing the packages to be loaded in init.el]]
" 0 1 (face org-superstar-item composition (1 1 [8211]) fontified t) 1 2 (fontified t) 2 28 (face org-link font-lock-multiline t htmlize-link (:uri "#org-roam-general-setup") help-echo "LINK: #org-roam-general-setup" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link fontified t) 28 29 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link font-lock-multiline t htmlize-link (:uri "#org-roam-general-setup") help-echo "LINK: #org-roam-general-setup" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link fontified t) 29 50 (font-lock-multiline t htmlize-link (:uri "#org-roam-general-setup") help-echo "LINK: #org-roam-general-setup" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link fontified t) 50 51 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) font-lock-multiline t htmlize-link (:uri "#org-roam-general-setup") help-echo "LINK: #org-roam-general-setup" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link fontified t) 51 52 (font-lock-multiline t htmlize-link (:uri "#org-roam-general-setup") help-echo "LINK: #org-roam-general-setup" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-link fontified t) 52 53 (font-lock-multiline t htmlize-link (:uri "#org-roam-general-setup") help-echo "LINK: #org-roam-general-setup" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t) 53 54 (fontified t) 54 55 (face org-superstar-item composition (1 1 [8211]) fontified t) 55 56 (fontified t) 56 76 (face org-link font-lock-multiline t htmlize-link (:uri "#useful-functions") help-echo "LINK: #useful-functions" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link fontified t) 76 77 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link font-lock-multiline t htmlize-link (:uri "#useful-functions") help-echo "LINK: #useful-functions" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link fontified t) 77 92 (font-lock-multiline t htmlize-link (:uri "#useful-functions") help-echo "LINK: #useful-functions" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link fontified t) 92 93 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) font-lock-multiline t htmlize-link (:uri "#useful-functions") help-echo "LINK: #useful-functions" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link fontified t) 93 94 (font-lock-multiline t htmlize-link (:uri "#useful-functions") help-echo "LINK: #useful-functions" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-link fontified t) 94 95 (font-lock-multiline t htmlize-link (:uri "#useful-functions") help-echo "LINK: #useful-functions" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t) 95 96 (fontified t) 96 97 (face org-superstar-item composition (1 1 [8211]) fontified t) 97 98 (fontified t) 98 121 (face org-link font-lock-multiline t htmlize-link (:uri "#acting-on-backlinks") help-echo "LINK: #acting-on-backlinks" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link fontified t) 121 122 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link font-lock-multiline t htmlize-link (:uri "#acting-on-backlinks") help-echo "LINK: #acting-on-backlinks" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link fontified t) 122 140 (font-lock-multiline t htmlize-link (:uri "#acting-on-backlinks") help-echo "LINK: #acting-on-backlinks" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link fontified t) 140 141 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) font-lock-multiline t htmlize-link (:uri "#acting-on-backlinks") help-echo "LINK: #acting-on-backlinks" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link fontified t) 141 142 (font-lock-multiline t htmlize-link (:uri "#acting-on-backlinks") help-echo "LINK: #acting-on-backlinks" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-link fontified t) 142 143 (font-lock-multiline t htmlize-link (:uri "#acting-on-backlinks") help-echo "LINK: #acting-on-backlinks" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t) 143 144 (fontified t) 144 145 (face org-superstar-item composition (1 1 [8211]) fontified t) 145 146 (fontified t) 146 183 (face org-link font-lock-multiline t htmlize-link (:uri "#bibtex-completion-ivy-and-org-ref") help-echo "LINK: #bibtex-completion-ivy-and-org-ref" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link fontified t) 183 184 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link font-lock-multiline t htmlize-link (:uri "#bibtex-completion-ivy-and-org-ref") help-echo "LINK: #bibtex-completion-ivy-and-org-ref" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link fontified t) 184 218 (font-lock-multiline t htmlize-link (:uri "#bibtex-completion-ivy-and-org-ref") help-echo "LINK: #bibtex-completion-ivy-and-org-ref" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link fontified t) 218 219 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) font-lock-multiline t htmlize-link (:uri "#bibtex-completion-ivy-and-org-ref") help-echo "LINK: #bibtex-completion-ivy-and-org-ref" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link fontified t) 219 220 (font-lock-multiline t htmlize-link (:uri "#bibtex-completion-ivy-and-org-ref") help-echo "LINK: #bibtex-completion-ivy-and-org-ref" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-link fontified t) 220 221 (font-lock-multiline t htmlize-link (:uri "#bibtex-completion-ivy-and-org-ref") help-echo "LINK: #bibtex-completion-ivy-and-org-ref" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t) 221 222 (fontified t) 222 223 (face org-superstar-item composition (1 1 [8211]) fontified t) 223 224 (fontified t) 224 298 (face org-link font-lock-multiline t htmlize-link (:uri "#org-roam-bibtex-protocols-reference-notes-and-ui-graphing-capabilities") help-echo "LINK: #org-roam-bibtex-protocols-reference-notes-and-ui-graphing-capabilities" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link fontified t) 298 299 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link font-lock-multiline t htmlize-link (:uri "#org-roam-bibtex-protocols-reference-notes-and-ui-graphing-capabilities") help-echo "LINK: #org-roam-bibtex-protocols-reference-notes-and-ui-graphing-capabilities" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link fontified t) 299 373 (font-lock-multiline t htmlize-link (:uri "#org-roam-bibtex-protocols-reference-notes-and-ui-graphing-capabilities") help-echo "LINK: #org-roam-bibtex-protocols-reference-notes-and-ui-graphing-capabilities" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link fontified t) 373 374 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) font-lock-multiline t htmlize-link (:uri "#org-roam-bibtex-protocols-reference-notes-and-ui-graphing-capabilities") help-echo "LINK: #org-roam-bibtex-protocols-reference-notes-and-ui-graphing-capabilities" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link fontified t) 374 375 (font-lock-multiline t htmlize-link (:uri "#org-roam-bibtex-protocols-reference-notes-and-ui-graphing-capabilities") help-echo "LINK: #org-roam-bibtex-protocols-reference-notes-and-ui-graphing-capabilities" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-link fontified t) 375 376 (font-lock-multiline t htmlize-link (:uri "#org-roam-bibtex-protocols-reference-notes-and-ui-graphing-capabilities") help-echo "LINK: #org-roam-bibtex-protocols-reference-notes-and-ui-graphing-capabilities" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t) 376 377 (fontified t) 377 378 (face org-superstar-item composition (1 1 [8211]) fontified t) 378 379 (fontified t) 379 416 (face org-link font-lock-multiline t htmlize-link (:uri "#logseq-like-tagging-functionality") help-echo "LINK: #logseq-like-tagging-functionality" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link fontified t) 416 417 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link font-lock-multiline t htmlize-link (:uri "#logseq-like-tagging-functionality") help-echo "LINK: #logseq-like-tagging-functionality" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link fontified t) 417 449 (font-lock-multiline t htmlize-link (:uri "#logseq-like-tagging-functionality") help-echo "LINK: #logseq-like-tagging-functionality" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link fontified t) 449 450 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) font-lock-multiline t htmlize-link (:uri "#logseq-like-tagging-functionality") help-echo "LINK: #logseq-like-tagging-functionality" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link fontified t) 450 451 (font-lock-multiline t htmlize-link (:uri "#logseq-like-tagging-functionality") help-echo "LINK: #logseq-like-tagging-functionality" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-link fontified t) 451 452 (font-lock-multiline t htmlize-link (:uri "#logseq-like-tagging-functionality") help-echo "LINK: #logseq-like-tagging-functionality" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t) 452 453 (fontified t) 453 454 (face org-superstar-item composition (1 1 [8211]) fontified t) 454 455 (fontified t) 455 473 (face org-link font-lock-multiline t htmlize-link (:uri "#fleeting-notes") help-echo "LINK: #fleeting-notes" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link fontified t) 473 474 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link font-lock-multiline t htmlize-link (:uri "#fleeting-notes") help-echo "LINK: #fleeting-notes" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link fontified t) 474 487 (font-lock-multiline t htmlize-link (:uri "#fleeting-notes") help-echo "LINK: #fleeting-notes" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link fontified t) 487 488 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) font-lock-multiline t htmlize-link (:uri "#fleeting-notes") help-echo "LINK: #fleeting-notes" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link fontified t) 488 489 (font-lock-multiline t htmlize-link (:uri "#fleeting-notes") help-echo "LINK: #fleeting-notes" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-link fontified t) 489 490 (font-lock-multiline t htmlize-link (:uri "#fleeting-notes") help-echo "LINK: #fleeting-notes" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t) 490 491 (fontified t) 491 492 (face org-superstar-item composition (1 1 [8211]) fontified t) 492 493 (fontified t) 493 514 (face org-link font-lock-multiline t htmlize-link (:uri "#capture-templates") help-echo "LINK: #capture-templates" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link fontified t) 514 515 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link font-lock-multiline t htmlize-link (:uri "#capture-templates") help-echo "LINK: #capture-templates" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link fontified t) 515 531 (font-lock-multiline t htmlize-link (:uri "#capture-templates") help-echo "LINK: #capture-templates" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link fontified t) 531 532 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) font-lock-multiline t htmlize-link (:uri "#capture-templates") help-echo "LINK: #capture-templates" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link fontified t) 532 533 (font-lock-multiline t htmlize-link (:uri "#capture-templates") help-echo "LINK: #capture-templates" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-link fontified t) 533 534 (font-lock-multiline t htmlize-link (:uri "#capture-templates") help-echo "LINK: #capture-templates" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t) 534 535 (fontified t) 535 536 (face org-superstar-item composition (1 1 [8211]) fontified t) 536 537 (fontified t) 537 552 (face org-link font-lock-multiline t htmlize-link (:uri "#providing-the-packages-to-be-loaded-in-initel") help-echo "LINK: #providing-the-packages-to-be-loaded-in-initel" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link fontified t) 552 586 (face org-link font-lock-multiline t htmlize-link (:uri "#providing-the-packages-to-be-loaded-in-initel") help-echo "LINK: #providing-the-packages-to-be-loaded-in-initel" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link fontified t) 586 587 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link font-lock-multiline t htmlize-link (:uri "#providing-the-packages-to-be-loaded-in-initel") help-echo "LINK: #providing-the-packages-to-be-loaded-in-initel" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link fontified t) 587 632 (font-lock-multiline t htmlize-link (:uri "#providing-the-packages-to-be-loaded-in-initel") help-echo "LINK: #providing-the-packages-to-be-loaded-in-initel" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link fontified t) 632 633 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) font-lock-multiline t htmlize-link (:uri "#providing-the-packages-to-be-loaded-in-initel") help-echo "LINK: #providing-the-packages-to-be-loaded-in-initel" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link fontified t) 633 634 (font-lock-multiline t htmlize-link (:uri "#providing-the-packages-to-be-loaded-in-initel") help-echo "LINK: #providing-the-packages-to-be-loaded-in-initel" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-link fontified t) 634 635 (font-lock-multiline t htmlize-link (:uri "#providing-the-packages-to-be-loaded-in-initel") help-echo "LINK: #providing-the-packages-to-be-loaded-in-initel" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t) 635 636 (fontified t)) . 948)) nil (25384 62198 319227 371000) 0 nil])
([nil nil ((2359 . 2360) (#("y" 0 1 (fontified t)) . -2359) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) 2360 (t 25384 62198 399501 488000)) nil (25385 45642 311588 195000) 0 nil])
([nil nil ((#("  " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 20769) (#("  " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 20828) (#("  " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 21004) (#("  " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 21064) (#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 21115) 20769 (t 25385 45642 401329 940000)) nil (25424 11060 148645 970000) 0 nil])
([nil nil ((#("	" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 18306) (undo-tree-id0 . -1) (#("	" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 18386) (#("	" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 18542) 18101) nil (25424 11060 148634 166000) 0 nil])
([nil nil ((11575 . 11576) (11481 . 11482) (t 25424 11060 294912 125000)) nil (25437 22199 718678 947000) 0 nil])
([nil nil ((16978 . 16982) (#("i" 0 1 (fontified t)) . -16978) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (#("s" 0 1 (fontified t)) . -16979) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) 16980 (16977 . 16980) (#("r" 0 1 (fontified t)) . -16977) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (#("s" 0 1 (fontified t)) . -16978) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) 16979 (16972 . 16979) (16971 . 16973) (16969 . 16971) (16968 . 16970) (#("discussion" 0 10 (fontified t)) . 16968) (undo-tree-id333 . -10) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -2) (undo-tree-id342 . -1) (undo-tree-id343 . -2) (undo-tree-id344 . -2) (undo-tree-id345 . -2) (undo-tree-id346 . -2) (undo-tree-id347 . -2) (undo-tree-id348 . -2) (undo-tree-id349 . -3) (undo-tree-id350 . -2) (undo-tree-id351 . -3) (undo-tree-id352 . -3) (undo-tree-id353 . -3) (undo-tree-id354 . -3) (undo-tree-id355 . -3) (undo-tree-id356 . -3) (undo-tree-id357 . -3) (undo-tree-id358 . -3) (undo-tree-id359 . -3) (undo-tree-id360 . -3) (undo-tree-id361 . -3) (undo-tree-id362 . -3) (undo-tree-id363 . -3) (undo-tree-id364 . -3) (undo-tree-id365 . -3) (undo-tree-id366 . -3) (undo-tree-id367 . -3) (undo-tree-id368 . -3) (undo-tree-id369 . -3) (undo-tree-id370 . -3) (undo-tree-id371 . -3) (undo-tree-id372 . -3) (undo-tree-id373 . -3) (undo-tree-id374 . -3) (undo-tree-id375 . -3) (undo-tree-id376 . -3) (undo-tree-id377 . -3) (undo-tree-id378 . -3) (undo-tree-id379 . -3) (undo-tree-id380 . -3) (undo-tree-id381 . -3) (undo-tree-id382 . -3) (undo-tree-id383 . -3) (undo-tree-id384 . -3) (undo-tree-id385 . -3) (undo-tree-id386 . -3) (undo-tree-id387 . -3) (undo-tree-id388 . -3) (undo-tree-id389 . -4) (undo-tree-id390 . -3) (undo-tree-id391 . -4) (undo-tree-id392 . -4) (undo-tree-id393 . -4) (undo-tree-id394 . -4) (undo-tree-id395 . -4) (undo-tree-id396 . -4) (undo-tree-id397 . -5) (undo-tree-id398 . -4) (undo-tree-id399 . -5) (undo-tree-id400 . -5) (undo-tree-id401 . -5) (undo-tree-id402 . -5) (undo-tree-id403 . -5) (undo-tree-id404 . -5) (undo-tree-id405 . -5) (undo-tree-id406 . -5) (undo-tree-id407 . -5) (undo-tree-id408 . -5) (undo-tree-id409 . -5) (undo-tree-id410 . -5) (undo-tree-id411 . -5) (undo-tree-id412 . -5) (undo-tree-id413 . -5) (undo-tree-id414 . -5) (undo-tree-id415 . -5) (undo-tree-id416 . -5) (undo-tree-id417 . -5) (undo-tree-id418 . -5) (undo-tree-id419 . -5) (undo-tree-id420 . -5) (undo-tree-id421 . -6) (undo-tree-id422 . -5) (undo-tree-id423 . -6) (undo-tree-id424 . -6) (undo-tree-id425 . -6) (undo-tree-id426 . -6) (undo-tree-id427 . -6) (undo-tree-id428 . -6) (undo-tree-id429 . -6) (undo-tree-id430 . -6) (undo-tree-id431 . -6) (undo-tree-id432 . -6) (undo-tree-id433 . -6) (undo-tree-id434 . -6) (undo-tree-id435 . -6) (undo-tree-id436 . -6) (undo-tree-id437 . -6) (undo-tree-id438 . -6) (undo-tree-id439 . -6) (undo-tree-id440 . -6) (undo-tree-id441 . -6) (undo-tree-id442 . -6) (undo-tree-id443 . -6) (undo-tree-id444 . -6) (undo-tree-id445 . -6) (undo-tree-id446 . -6) (undo-tree-id447 . -6) (undo-tree-id448 . -6) (undo-tree-id449 . -6) (undo-tree-id450 . -6) (undo-tree-id451 . -6) (undo-tree-id452 . -6) (undo-tree-id453 . -6) (undo-tree-id454 . -6) (undo-tree-id455 . -6) (undo-tree-id456 . -6) (undo-tree-id457 . -6) (undo-tree-id458 . -6) (undo-tree-id459 . -6) (undo-tree-id460 . -6) (undo-tree-id461 . -7) (undo-tree-id462 . -6) (undo-tree-id463 . -7) (undo-tree-id464 . -7) (undo-tree-id465 . -7) (undo-tree-id466 . -7) (undo-tree-id467 . -7) (undo-tree-id468 . -7) (undo-tree-id469 . -8) (undo-tree-id470 . -7) (undo-tree-id471 . -8) (undo-tree-id472 . -8) (undo-tree-id473 . -8) (undo-tree-id474 . -8) (undo-tree-id475 . -8) (undo-tree-id476 . -8) (undo-tree-id477 . -9) (undo-tree-id478 . -8) (undo-tree-id479 . -9) (undo-tree-id480 . -9) (undo-tree-id481 . -9) (undo-tree-id482 . -9) (undo-tree-id483 . -9) (undo-tree-id484 . -9) (undo-tree-id485 . -10) (undo-tree-id486 . -9) (undo-tree-id487 . -10) (undo-tree-id488 . -10) (undo-tree-id489 . -10) (undo-tree-id490 . -10) (undo-tree-id491 . -10) (undo-tree-id492 . -10) (undo-tree-id493 . -10) (undo-tree-id494 . -10) (undo-tree-id495 . -10) (undo-tree-id496 . -10) (undo-tree-id497 . -10) (undo-tree-id498 . -10) (undo-tree-id499 . -10) (undo-tree-id500 . -10) (undo-tree-id501 . -10) (undo-tree-id502 . -10) (undo-tree-id503 . -10) (undo-tree-id504 . -10) (undo-tree-id505 . -10) (undo-tree-id506 . -10) (undo-tree-id507 . -10) (undo-tree-id508 . -10) (undo-tree-id509 . -10) (undo-tree-id510 . -10) (undo-tree-id511 . -10) (undo-tree-id512 . -10) (undo-tree-id513 . -10) (undo-tree-id514 . -10) (undo-tree-id515 . -9) (undo-tree-id516 . -10) (undo-tree-id517 . -8) (undo-tree-id518 . -9) (undo-tree-id519 . -7) (undo-tree-id520 . -8) (undo-tree-id521 . -6) (undo-tree-id522 . -7) (undo-tree-id523 . -5) (undo-tree-id524 . -6) (undo-tree-id525 . -4) (undo-tree-id526 . -5) (undo-tree-id527 . -3) (undo-tree-id528 . -4) (undo-tree-id529 . -2) (undo-tree-id530 . -3) (undo-tree-id531 . -1) (undo-tree-id532 . -2) (undo-tree-id533 . -1) (undo-tree-id534 . -10) (undo-tree-id535 . -10) (17013 . 17021) (#("o" 0 1 (fontified t)) . -17013) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (#("c" 0 1 (fontified t)) . -17014) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) 17015 (17011 . 17015) (#("I" 0 1 (fontified t)) . -17011) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (#("s" 0 1 (fontified t)) . -17012) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) 17013 (17006 . 17013) (#("O" 0 1 (fontified t)) . -17006) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (#("o" 0 1 (fontified t)) . -17007) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) 17008 (17001 . 17008) (#("o" 0 1 (fontified t)) . -17001) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) 17002 (16985 . 17002) (16974 . 16985) (#("i" 0 1 (fontified t)) . -16974) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (#("s" 0 1 (fontified t)) . -16975) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) 16976 (16973 . 16976) (#("c" 0 1 (fontified t)) . -16973) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) 16974 (16971 . 16974) (#("u" 0 1 (fontified t)) . -16971) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (#("c" 0 1 (fontified t)) . -16972) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) 16973 (16968 . 16973) (#("D" 0 1 (fontified t)) . -16968) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) 16969 (16958 . 16969) (#(" " 0 1 (fontified t)) . -16958) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) 16959 (16949 . 16959) (#("1" 0 1 (fontified t)) . -16949) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) 16950 (16944 . 16950) (16943 . 16944) (16937 . 16943) (16916 . 16937) (#("o" 0 1 (fontified t face org-level-2)) . -16916) (undo-tree-id794 . -1) 16917 (16910 . 16917) (#("r" 0 1 (fontified t face org-level-2)) . -16910) (undo-tree-id795 . -1) 16911 (16898 . 16911) (#("S" 0 1 (fontified t face org-level-2)) . -16898) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (#("e" 0 1 (fontified t face org-level-2)) . -16899) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (#("a" 0 1 (fontified t face org-level-2)) . -16900) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (#("r" 0 1 (fontified t face org-level-2)) . -16901) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (#("c" 0 1 (fontified t face org-level-2)) . -16902) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (#("h" 0 1 (fontified t face org-level-2)) . -16903) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (#(" " 0 1 (fontified t face org-level-2)) . -16904) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (#("t" 0 1 (fontified t face org-level-2)) . -16905) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (#("h" 0 1 (fontified t face org-level-2)) . -16906) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (#("e" 0 1 (fontified t face org-level-2)) . -16907) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (#(" " 0 1 (fontified t face org-level-2)) . -16908) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (#("b" 0 1 (fontified t face org-level-2)) . -16909) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (#("a" 0 1 (fontified t face org-level-2)) . -16910) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (#("c" 0 1 (fontified t face org-level-2)) . -16911) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (#("k" 0 1 (fontified t face org-level-2)) . -16912) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (#("l" 0 1 (fontified t face org-level-2)) . -16913) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (#("i" 0 1 (fontified t face org-level-2)) . -16914) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (#("n" 0 1 (fontified t face org-level-2)) . -16915) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (#("k" 0 1 (fontified t face org-level-2)) . -16916) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (#("s" 0 1 (fontified t face org-level-2)) . -16917) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (#(" " 0 1 (fontified t face org-level-2)) . -16918) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) 16919 (16916 . 16919) (16895 . 16916) (16895 . 16896) (16894 . 16895) (t 25437 22199 851247 57000) 16893) nil (25471 23180 311063 910000) 0 nil])
([nil nil ((nil rear-nonsticky nil 17040 . 17041) (nil fontified nil 16970 . 17041) (16970 . 17041) 16969) nil (25471 23180 310200 759000) 0 nil])
([nil nil ((17583 . 17601) (17576 . 17583) (17555 . 17576) (#(" " 0 1 (fontified t)) . -17555) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) 17556 (17535 . 17556) (#("s" 0 1 (fontified t)) . -17535) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) 17536 (17520 . 17536) (17513 . 17520) (17492 . 17513) (#("s" 0 1 (fontified t)) . -17492) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) 17493 (17490 . 17493) (17474 . 17490) (#(" " 0 1 (fontified t)) . -17474) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) 17475 (17466 . 17475) (#("e" 0 1 (fontified t)) . -17466) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) 17467 (17465 . 17467) (#("d" 0 1 (fontified t)) . -17465) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) 17466 (17445 . 17466) (17431 . 17445) (#("h" 0 1 (fontified t)) . -17431) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) 17432 (17430 . 17432) (17409 . 17430) (17388 . 17409) (17383 . 17388) (#(" " 0 1 (fontified t)) . -17383) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) 17384 (17375 . 17384) (17354 . 17375) (#(" " 0 1 (fontified t)) . -17354) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (#("m" 0 1 (fontified t)) . -17355) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) 17356 (17352 . 17356) (#("w" 0 1 (fontified t)) . -17352) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) 17353 (17338 . 17353) (17330 . 17338) (17323 . 17330) (#("e" 0 1 (fontified t)) . -17323) (undo-tree-id232 . -1) 17324 (17312 . 17324) (#(" " 0 1 (fontified t)) . -17312) (undo-tree-id233 . -1) (#("u" 0 1 (fontified t)) . -17313) (undo-tree-id234 . -1) (#("m" 0 1 (fontified t)) . -17314) (undo-tree-id235 . -1) 17315 (17309 . 17315) (#("n" 0 1 (fontified t)) . -17309) (undo-tree-id236 . -1) (#(" " 0 1 (fontified t)) . -17310) (undo-tree-id237 . -1) 17311 (17296 . 17311) (17290 . 17296) (#(" " 0 1 (fontified t)) . -17290) (undo-tree-id238 . -1) (#("s" 0 1 (fontified t)) . -17291) (undo-tree-id239 . -1) 17292 (17284 . 17292) (#("r" 0 1 (fontified t)) . -17284) (undo-tree-id240 . -1) (#(" " 0 1 (fontified t)) . -17285) (undo-tree-id241 . -1) 17286 (17284 . 17286) (#("y" 0 1 (fontified t)) . -17284) (undo-tree-id242 . -1) (#(" " 0 1 (fontified t)) . -17285) (undo-tree-id243 . -1) 17286 (17282 . 17286) (17261 . 17282) (#("t" 0 1 (fontified t)) . -17261) (undo-tree-id244 . -1) (#("o" 0 1 (fontified t)) . -17262) (undo-tree-id245 . -1) (#(" " 0 1 (fontified t)) . -17263) (undo-tree-id246 . -1) (#("m" 0 1 (fontified t)) . -17264) (undo-tree-id247 . -1) (#("a" 0 1 (fontified t)) . -17265) (undo-tree-id248 . -1) (#("k" 0 1 (fontified t)) . -17266) (undo-tree-id249 . -1) (#("e" 0 1 (fontified t)) . -17267) (undo-tree-id250 . -1) (#(" " 0 1 (fontified t)) . -17268) (undo-tree-id251 . -1) (#("a" 0 1 (fontified t)) . -17269) (undo-tree-id252 . -1) 17270 (17261 . 17270) (#("a" 0 1 (fontified t)) . -17261) (undo-tree-id253 . -1) 17262 (17256 . 17262) (#("o" 0 1 (fontified t)) . -17256) (undo-tree-id254 . -1) (#("d" 0 1 (fontified t)) . -17257) (undo-tree-id255 . -1) 17258 (17251 . 17258) (17230 . 17251) (17209 . 17230) (17208 . 17209) (#(" " 0 1 (fontified t)) . -17207) (undo-tree-id256 . -1) 17208 (17195 . 17208) (#("v" 0 1 (fontified t)) . -17195) (undo-tree-id257 . -1) 17196 (17178 . 17196) (#("W" 0 1 (fontified t)) . -17178) (undo-tree-id258 . -1) (#("h" 0 1 (fontified t)) . -17179) (undo-tree-id259 . -1) (#("i" 0 1 (fontified t)) . -17180) (undo-tree-id260 . -1) 17181 (17178 . 17181) (17174 . 17179) (17153 . 17174) (17152 . 17153) (#("r" 0 1 (fontified t)) . -17152) (undo-tree-id261 . -1) 17153 (17149 . 17153) (#("d" 0 1 (fontified t)) . -17149) (undo-tree-id262 . -1) 17150 (17140 . 17150) (17119 . 17140) (#("d" 0 1 (fontified t)) . -17119) (undo-tree-id263 . -1) (#(" " 0 1 (fontified t)) . -17120) (undo-tree-id264 . -1) 17121 (17119 . 17121) (17098 . 17119)) nil (25471 23180 310140 445000) 0 nil])
([nil nil ((17711 . 17728) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 17711 17728 nil nil nil t #s(yas--field 2 17729 17729 nil nil nil nil nil)) #s(yas--field 2 17729 17729 nil nil nil nil nil)) nil 0 nil #s(yas--field 2 17729 17729 nil nil nil nil nil) nil nil)) (17699 . 17722) (#("\\s" 0 2 (fontified t)) . 17699) (undo-tree-id859 . -2) 17701 (17699 . 17701) (17697 . 17699) (17693 . 17697) (17672 . 17693) (17651 . 17672) (17633 . 17651) (#("T" 0 1 (fontified t)) . -17633) (undo-tree-id860 . -1) (#("o" 0 1 (fontified t)) . -17634) (undo-tree-id861 . -1) (#(" " 0 1 (fontified t)) . -17635) (undo-tree-id862 . -1) (#("c" 0 1 (fontified t)) . -17636) (undo-tree-id863 . -1) 17637 (17633 . 17637) (17632 . 17633) (#("." 0 1 (fontified t face org-level-3)) . -17632) (undo-tree-id864 . -1) 17633 (17632 . 17633) (17624 . 17632) (17603 . 17624) (17602 . 17603) (17601 . 17602) (t 25471 23180 437037 481000) 17600) nil (25471 23235 356229 583000) 0 nil])
([nil nil ((apply yas--snippet-revive 17699 18179 #s(yas--snippet nil (#s(yas--field 1 17711 17728 nil nil nil t #s(yas--field 2 17729 17729 nil nil nil nil nil)) #s(yas--field 2 17729 17729 nil nil nil nil nil)) nil 0 nil #s(yas--field 2 17729 17729 nil nil nil nil nil) nil nil)) (17730 . 18170) 17729) nil (25471 23235 356184 548000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 18169) (t 25471 23235 483871 887000)) nil (25471 23279 837776 118000) 0 nil])
([nil nil ((18168 . 18171) 18130) nil (25471 23279 837773 253000) 0 nil])
([nil nil ((18254 . 18271) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 18254 18271 nil nil nil t #s(yas--field 2 18272 18272 nil nil nil nil nil)) #s(yas--field 2 18272 18272 nil nil nil nil nil)) nil 1 nil #s(yas--field 2 18272 18272 nil nil nil nil nil) nil nil)) (18242 . 18265) (#("\\s" 0 2 (fontified t)) . 18242) (undo-tree-id865 . -2) 18244 (18242 . 18244) (18240 . 18242) (18232 . 18240) (#("k" 0 1 (fontified t)) . -18232) (undo-tree-id866 . -1) (#("c" 0 1 (fontified t)) . -18233) (undo-tree-id867 . -1) 18234 (18220 . 18234) (#("o" 0 1 (fontified t)) . -18220) (undo-tree-id868 . -1) (#("a" 0 1 (fontified t)) . -18221) (undo-tree-id869 . -1) 18222 (18216 . 18222) (#("g" 0 1 (fontified t)) . -18216) (undo-tree-id870 . -1) 18217 (18207 . 18217) (#("t" 0 1 (fontified t)) . -18207) (undo-tree-id871 . -1) 18208 (18198 . 18208) (#(" " 0 1 (fontified t)) . -18198) (undo-tree-id872 . -1) 18199 (18198 . 18199) (#("t" 0 1 (fontified t)) . -18198) (undo-tree-id873 . -1) 18199 (18198 . 18199) (#(" " 0 1 (fontified t)) . -18198) (undo-tree-id874 . -1) (#("t" 0 1 (fontified t)) . -18199) (undo-tree-id875 . -1) 18200 (18193 . 18200) (#("t" 0 1 (fontified t)) . -18193) (undo-tree-id876 . -1) (#("h" 0 1 (fontified t)) . -18194) (undo-tree-id877 . -1) (#("e" 0 1 (fontified t)) . -18195) (undo-tree-id878 . -1) (#("i" 0 1 (fontified t)) . -18196) (undo-tree-id879 . -1) (#("r" 0 1 (fontified t)) . -18197) (undo-tree-id880 . -1) (#(" " 0 1 (fontified t)) . -18198) (undo-tree-id881 . -1) (#("b" 0 1 (fontified t)) . -18199) (undo-tree-id882 . -1) (#("a" 0 1 (fontified t)) . -18200) (undo-tree-id883 . -1) (#("c" 0 1 (fontified t)) . -18201) (undo-tree-id884 . -1) 18202 (18196 . 18202) (#("u" 0 1 (fontified t)) . -18196) (undo-tree-id885 . -1) (#("i" 0 1 (fontified t)) . -18197) (undo-tree-id886 . -1) 18198 (18196 . 18198) (18183 . 18196) (18182 . 18183) 18182) nil (25471 23279 837760 378000) 0 nil])
([nil nil ((apply yas--snippet-revive 18242 18482 #s(yas--snippet nil (#s(yas--field 1 18254 18271 nil nil nil t #s(yas--field 2 18272 18272 nil nil nil nil nil)) #s(yas--field 2 18272 18272 nil nil nil nil nil)) nil 1 nil #s(yas--field 2 18272 18272 nil nil nil nil nil) nil nil)) (18273 . 18473) 18272) nil (25471 23279 837687 520000) 0 nil])
([nil nil ((18473 . 19016) 18272) nil (25471 23279 837677 672000) 0 nil])
([nil nil ((19096 . 19113) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 19096 19113 nil nil nil t #s(yas--field 2 19114 19114 nil nil nil nil nil)) #s(yas--field 2 19114 19114 nil nil nil nil nil)) nil 2 nil #s(yas--field 2 19114 19114 nil nil nil nil nil) nil nil)) (19084 . 19107) (#("\\s" 0 2 (fontified t)) . 19084) (undo-tree-id887 . -2) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -2) (undo-tree-id896 . -1) (undo-tree-id897 . -2) (undo-tree-id898 . -2) (undo-tree-id899 . -2) (undo-tree-id900 . -2) (undo-tree-id901 . -2) (undo-tree-id902 . -2) (undo-tree-id903 . -2) (undo-tree-id904 . -2) 19086 (19084 . 19086) (19082 . 19084) (19081 . 19082) (#(" " 0 1 (fontified t)) . -19081) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) 19082 (19077 . 19082) (#("i" 0 1 (fontified t)) . -19077) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) 19078 (19059 . 19078) (19038 . 19059) (19035 . 19038) (#(" " 0 1 (fontified t)) . -19035) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) 19036 (19027 . 19036) (19027 . 19028) (#("
" 0 1 (fontified t)) . -19027) (undo-tree-id933 . -1) (undo-tree-id934 . 1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) 19028 (19026 . 19028) (19025 . 19026) (t 25471 23279 964667 619000) 19016) nil (25471 23316 821670 732000) 0 nil])
([nil nil ((apply yas--snippet-revive 19084 19779 #s(yas--snippet nil (#s(yas--field 1 19096 19113 nil nil nil t #s(yas--field 2 19114 19114 nil nil nil nil nil)) #s(yas--field 2 19114 19114 nil nil nil nil nil)) nil 2 nil #s(yas--field 2 19114 19114 nil nil nil nil nil) nil nil)) (19115 . 19770) 19114) nil (25471 23316 821555 103000) 0 nil])
([nil nil ((20537 . 20542) (#("w" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -20537) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (#("e" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -20538) (undo-tree-id945 . -1) (undo-tree-id946 . -1) 20539 (20525 . 20539) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 20525 20542 nil nil nil t #s(yas--field 2 20543 20543 nil nil nil nil nil)) #s(yas--field 2 20543 20543 nil nil nil nil nil)) nil 3 nil #s(yas--field 2 20543 20543 nil nil nil nil nil) nil nil)) (20513 . 20536) (#("\\s" 0 2 (fontified t)) . 20513) (undo-tree-id947 . -2) 20515 (20513 . 20515) (#("s" 0 1 (fontified t)) . -20513) (undo-tree-id948 . -1) (#("\\" 0 1 (fontified t)) . -20514) (undo-tree-id949 . -1) 20515 (20513 . 20515) (20511 . 20513) (#(" " 0 1 (fontified t)) . -20511) (undo-tree-id950 . -1) (#("H" 0 1 (fontified t)) . -20512) (undo-tree-id951 . -1) (#("o" 0 1 (fontified t)) . -20513) (undo-tree-id952 . -1) (#("w" 0 1 (fontified t)) . -20514) (undo-tree-id953 . -1) (#("e" 0 1 (fontified t)) . -20515) (undo-tree-id954 . -1) (#("v" 0 1 (fontified t)) . -20516) (undo-tree-id955 . -1) (#("e" 0 1 (fontified t)) . -20517) (undo-tree-id956 . -1) (#("r" 0 1 (fontified t)) . -20518) (undo-tree-id957 . -1) (#("," 0 1 (fontified t)) . -20519) (undo-tree-id958 . -1) (#(" " 0 1 (fontified t)) . -20520) (undo-tree-id959 . -1) (#("I" 0 1 (fontified t)) . -20521) (undo-tree-id960 . -1) (#(" " 0 1 (fontified t)) . -20522) (undo-tree-id961 . -1) (#("w" 0 1 (fontified t)) . -20523) (undo-tree-id962 . -1) (#("i" 0 1 (fontified t)) . -20524) (undo-tree-id963 . -1) (#("l" 0 1 (fontified t)) . -20525) (undo-tree-id964 . -1) (#("l" 0 1 (fontified t)) . -20526) (undo-tree-id965 . -1) (#(" " 0 1 (fontified t)) . -20527) (undo-tree-id966 . -1) (#("c" 0 1 (fontified t)) . -20528) (undo-tree-id967 . -1) (#("h" 0 1 (fontified t)) . -20529) (undo-tree-id968 . -1) 20530 (20512 . 20530) (20491 . 20512) (#("g" 0 1 (fontified t)) . -20491) (undo-tree-id969 . -1) (#("h" 0 1 (fontified t)) . -20492) (undo-tree-id970 . -1) (#("a" 0 1 (fontified t)) . -20493) (undo-tree-id971 . -1) 20494 (20476 . 20494) (20460 . 20476) (#("n" 0 1 (fontified t)) . -20460) (undo-tree-id972 . -1) 20461 (20448 . 20461) (#("d" 0 1 (fontified t)) . -20448) (undo-tree-id973 . -1) 20449 (20446 . 20449) (#("e" 0 1 (fontified t)) . -20446) (undo-tree-id974 . -1) (#("t" 0 1 (fontified t)) . -20447) (undo-tree-id975 . -1) 20448 (20438 . 20448) (#("t" 0 1 (fontified t)) . -20438) (undo-tree-id976 . -1) (#(" " 0 1 (fontified t)) . -20439) (undo-tree-id977 . -1) 20440 (20429 . 20440) (#("e" 0 1 (fontified t)) . -20429) (undo-tree-id978 . -1) (#(" " 0 1 (fontified t)) . -20430) (undo-tree-id979 . -1) 20431 (20427 . 20431) (#("a" 0 1 (fontified t)) . -20427) (undo-tree-id980 . -1) 20428 (20427 . 20428) (20420 . 20427) (#("m" 0 1 (fontified t)) . -20420) (undo-tree-id981 . -1) 20421 (20408 . 20421) (20387 . 20408) (20371 . 20387) (20350 . 20371) (#("f" 0 1 (fontified t)) . -20350) (undo-tree-id982 . -1) (#("g" 0 1 (fontified t)) . -20351) (undo-tree-id983 . -1) 20352 (20350 . 20352) (#("g" 0 1 (fontified t)) . -20350) (undo-tree-id984 . -1) (#("r" 0 1 (fontified t)) . -20351) (undo-tree-id985 . -1) (#("-" 0 1 (fontified t)) . -20352) (undo-tree-id986 . -1) 20353 (20350 . 20353) (#("-" 0 1 (fontified t)) . -20350) (undo-tree-id987 . -1) (#("g" 0 1 (fontified t)) . -20351) (undo-tree-id988 . -1) (#("r" 0 1 (fontified t)) . -20352) (undo-tree-id989 . -1) 20353 (20350 . 20353) (20347 . 20350) (#("o" 0 1 (fontified t)) . -20347) (undo-tree-id990 . -1) (#("r" 0 1 (fontified t)) . -20348) (undo-tree-id991 . -1) (#("g" 0 1 (fontified t)) . -20349) (undo-tree-id992 . -1) (#("-" 0 1 (fontified t)) . -20350) (undo-tree-id993 . -1) 20351 (20333 . 20351) (#("a" 0 1 (fontified t)) . -20333) (undo-tree-id994 . -1) (#(" " 0 1 (fontified t)) . -20334) (undo-tree-id995 . -1) 20335 (20325 . 20335) (20304 . 20325) (#("e" 0 1 (fontified t)) . -20304) (undo-tree-id996 . -1) 20305 (20300 . 20305) (20285 . 20300) (#("o" 0 1 (fontified t)) . -20285) (undo-tree-id997 . -1) (#("r" 0 1 (fontified t)) . -20286) (undo-tree-id998 . -1) 20287 (20279 . 20287) (#("v" 0 1 (fontified t)) . -20279) (undo-tree-id999 . -1) (#("e" 0 1 (fontified t)) . -20280) (undo-tree-id1000 . -1) 20281 (20279 . 20281) (20278 . 20279) (#("cant" 0 4 (fontified nil)) . 20278) (undo-tree-id1001 . -4) (20271 . 20278) 20275 (20267 . 20275) (#("b" 0 1 (fontified t)) . -20267) (undo-tree-id1002 . -1) (#("a" 0 1 (fontified t)) . -20268) (undo-tree-id1003 . -1) 20269 (20266 . 20269) (#("a" 0 1 (fontified t)) . -20266) (undo-tree-id1004 . -1) 20267 (20265 . 20267) (20247 . 20264) (20246 . 20247) (20240 . 20246) (20225 . 20241) (#(";" 0 1 (fontified t)) . -20225) (undo-tree-id1005 . -1) (#("i" 0 1 (fontified t)) . -20226) (undo-tree-id1006 . -1) 20227 (20213 . 20227) (#("a" 0 1 (fontified t)) . -20213) (undo-tree-id1007 . -1) 20214 (20200 . 20214) (#("I" 0 1 (fontified t)) . -20200) (undo-tree-id1008 . -1) (#("n" 0 1 (fontified t)) . -20201) (undo-tree-id1009 . -1) (#("c" 0 1 (fontified t)) . -20202) (undo-tree-id1010 . -1) (#("e" 0 1 (fontified t)) . -20203) (undo-tree-id1011 . -1) (#(" " 0 1 (fontified t)) . -20204) (undo-tree-id1012 . -1) 20205 (20199 . 20205) (20198 . 20199) (20183 . 20198) (#("o" 0 1 (fontified t face org-level-3)) . -20183) (undo-tree-id1013 . -1) (#("a" 0 1 (fontified t face org-level-3)) . -20184) (undo-tree-id1014 . -1) 20185 (20184 . 20185) (#("a" 0 1 (fontified t face org-level-3)) . -20184) (undo-tree-id1015 . -1) 20185 (20175 . 20185) (20154 . 20175) (#("o" 0 1 (fontified t face org-level-3)) . -20154) (undo-tree-id1016 . -1) 20155 (20148 . 20155) (#("g" 0 1 (fontified t face org-level-3)) . -20148) (undo-tree-id1017 . -1) 20149 (20144 . 20149) (20140 . 20144) (20138 . 20140) (20133 . 20138) (#("r" 0 1 (fontified t)) . -20133) (undo-tree-id1018 . -1) (#("e" 0 1 (fontified t)) . -20134) (undo-tree-id1019 . -1) 20135 (20119 . 20135) (#("n" 0 1 (fontified t)) . -20119) (undo-tree-id1020 . -1) 20120 (20112 . 20120) (#("n" 0 1 (fontified t)) . -20112) (undo-tree-id1021 . -1) (#("o" 0 1 (fontified t)) . -20113) (undo-tree-id1022 . -1) (#("t" 0 1 (fontified t)) . -20114) (undo-tree-id1023 . -1) (#(" " 0 1 (fontified t)) . -20115) (undo-tree-id1024 . -1) (#("m" 0 1 (fontified t)) . -20116) (undo-tree-id1025 . -1) (#("e" 0 1 (fontified t)) . -20117) (undo-tree-id1026 . -1) (#("a" 0 1 (fontified t)) . -20118) (undo-tree-id1027 . -1) (#("n" 0 1 (fontified t)) . -20119) (undo-tree-id1028 . -1) (#("t" 0 1 (fontified t)) . -20120) (undo-tree-id1029 . -1) (#(" " 0 1 (fontified t)) . -20121) (undo-tree-id1030 . -1) 20122 (20117 . 20122) (20110 . 20117) (#("n" 0 1 (fontified t)) . -20110) (undo-tree-id1031 . -1) (#("e" 0 1 (fontified t)) . -20111) (undo-tree-id1032 . -1) 20112 (20097 . 20112) (#("b" 0 1 (fontified t)) . -20097) (undo-tree-id1033 . -1) (#("e" 0 1 (fontified t)) . -20098) (undo-tree-id1034 . -1) (#(" " 0 1 (fontified t)) . -20099) (undo-tree-id1035 . -1) 20100 (20098 . 20100) (20077 . 20098) (20056 . 20077) (20046 . 20056) (#(" " 0 1 (fontified t)) . -20046) (undo-tree-id1036 . -1) (#("s" 0 1 (fontified t)) . -20047) (undo-tree-id1037 . -1) 20048 (20039 . 20048) (20018 . 20039) (19997 . 20018) (19980 . 19997) (#("T" 0 1 (fontified t)) . -19980) (undo-tree-id1038 . -1) 19981 (19972 . 19981) (#("t" 0 1 (fontified t)) . -19972) (undo-tree-id1039 . -1) 19973 (19960 . 19973) (19939 . 19960) (19933 . 19939) (19912 . 19933) (#("n" 0 1 (fontified t)) . -19912) (undo-tree-id1040 . -1) (#("o" 0 1 (fontified t)) . -19913) (undo-tree-id1041 . -1) 19914 (19913 . 19914) (#("o" 0 1 (fontified t)) . -19913) (undo-tree-id1042 . -1) (#("d" 0 1 (fontified t)) . -19914) (undo-tree-id1043 . -1) (#("e" 0 1 (fontified t)) . -19915) (undo-tree-id1044 . -1) (#("s" 0 1 (fontified t)) . -19916) (undo-tree-id1045 . -1) (#(" " 0 1 (fontified t)) . -19917) (undo-tree-id1046 . -1) 19918 (19908 . 19918) (19899 . 19908) (#("y" 0 1 (fontified t)) . -19899) (undo-tree-id1047 . -1) (#("t" 0 1 (fontified t)) . -19900) (undo-tree-id1048 . -1) 19901 (19900 . 19901) (#("t" 0 1 (fontified t)) . -19900) (undo-tree-id1049 . -1) 19901 (19880 . 19901) (19860 . 19880) (19839 . 19860) (19833 . 19839) (19812 . 19833) (#("o" 0 1 (fontified t)) . -19812) (undo-tree-id1050 . -1) (#("r" 0 1 (fontified t)) . -19813) (undo-tree-id1051 . -1) (#("g" 0 1 (fontified t)) . -19814) (undo-tree-id1052 . -1) (#("-" 0 1 (fontified t)) . -19815) (undo-tree-id1053 . -1) (#("r" 0 1 (fontified t)) . -19816) (undo-tree-id1054 . -1) 19817 (19800 . 19817) (19782 . 19800) (#("H" 0 1 (fontified t)) . -19782) (undo-tree-id1055 . -1) (#("e" 0 1 (fontified t)) . -19783) (undo-tree-id1056 . -1) (#(" " 0 1 (fontified t)) . -19784) (undo-tree-id1057 . -1) (#("n" 0 1 (fontified t)) . -19785) (undo-tree-id1058 . -1) (#("e" 0 1 (fontified t)) . -19786) (undo-tree-id1059 . -1) 19787 (19781 . 19787) (19780 . 19782) (t 25471 23316 952570 743000)) nil (25471 23606 906675 765000) 0 nil])
([nil nil ((apply yas--snippet-revive 20513 23189 #s(yas--snippet nil (#s(yas--field 1 20525 20542 nil nil nil t #s(yas--field 2 20543 20543 nil nil nil nil nil)) #s(yas--field 2 20543 20543 nil nil nil nil nil)) nil 3 nil #s(yas--field 2 20543 20543 nil nil nil nil nil) nil nil)) (20544 . 23180) 20543) nil (25471 23606 906411 334000) 0 nil])
([nil nil ((20584 . 20593) (#(" " 0 1 (fontified t)) . -20584) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) 20585 (20571 . 20585) (20550 . 20571) (20529 . 20550) (20516 . 20529) (#("i" 0 1 (fontified t)) . -20516) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (#("g" 0 1 (fontified t)) . -20517) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) 20518 (20511 . 20518) (t 25471 23607 46495 956000)) nil (25471 23767 794718 121000) 0 nil])
([nil nil ((20592 . 20599) (#("." 0 1 (fontified t)) . -20592) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) 20593) nil (25471 23767 794616 218000) 0 nil])
([nil nil ((23304 . 23308) (23283 . 23304) (23279 . 23283) (23278 . 23280)) nil (25471 23767 794579 579000) 0 nil])
([nil nil ((20659 . 20664) (23433 . 23446) (23412 . 23433) (23400 . 23412) (23379 . 23400) (#("d" 0 1 (fontified t)) . -23379) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (#("n" 0 1 (fontified t)) . -23380) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) 23381 (23364 . 23381) (23345 . 23364) (23324 . 23345) (23323 . 23324) (23319 . 23323) (#("a" 0 1 (fontified t face org-level-3)) . -23319) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) 23320 (23308 . 23320)) nil (25471 23767 794571 634000) 0 nil])
([nil nil ((21891 . 21894) (#("a" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block))) . -21891) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (#("o" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block))) . -21892) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) 21893 (21889 . 21893)) nil (25471 23767 794502 914000) 0 nil])
([nil nil ((22112 . 22117)) nil (25471 23767 794396 823000) 0 nil])
([nil nil ((22533 . 22538)) nil (25471 23767 794394 829000) 0 nil])
([nil nil ((21255 . 21269) (#("-" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block))) . -21255) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) 21256 (21254 . 21256)) nil (25471 23767 794386 423000) 0 nil])
([nil nil ((23818 . 23831) (#("n" 0 1 (fontified t)) . -23818) (undo-tree-id1347 . -1) (#("o" 0 1 (fontified t)) . -23819) (undo-tree-id1348 . -1) (#("d" 0 1 (fontified t)) . -23820) (undo-tree-id1349 . -1) (#("e" 0 1 (fontified t)) . -23821) (undo-tree-id1350 . -1) 23822 (23816 . 23822) (#("g" 0 1 (fontified t)) . -23816) (undo-tree-id1351 . -1) (#("s" 0 1 (fontified t)) . -23817) (undo-tree-id1352 . -1) (#("-" 0 1 (fontified t)) . -23818) (undo-tree-id1353 . -1) 23819 (23810 . 23819) (#("c" 0 1 (fontified t)) . -23810) (undo-tree-id1354 . -1) (#("l" 0 1 (fontified t)) . -23811) (undo-tree-id1355 . -1) (#("i" 0 1 (fontified t)) . -23812) (undo-tree-id1356 . -1) 23813 (23801 . 23813) (#("-" 0 1 (fontified t)) . -23801) (undo-tree-id1357 . -1) (#("g" 0 1 (fontified t)) . -23802) (undo-tree-id1358 . -1) 23803 (23799 . 23803) (#("-" 0 1 (fontified t)) . -23799) (undo-tree-id1359 . -1) 23800 (#("o" 0 1 (fontified t)) . -23800) (undo-tree-id1360 . -1) 23801 (23793 . 23801) (#("~" 0 1 (fontified t)) . -23793) (undo-tree-id1361 . -1) (#("o" 0 1 (fontified t)) . -23794) (undo-tree-id1362 . -1) (#("r" 0 1 (fontified t)) . -23795) (undo-tree-id1363 . -1) (#("g" 0 1 (fontified t)) . -23796) (undo-tree-id1364 . -1) 23797 (23796 . 23797) (#("-" 0 1 (fontified t)) . -23796) (undo-tree-id1365 . -1) (#("g" 0 1 (fontified t)) . -23797) (undo-tree-id1366 . -1) 23798 (23786 . 23798) (23765 . 23786) (23744 . 23765) (#("-" 0 1 (fontified t)) . -23744) (undo-tree-id1367 . -1) (#("g" 0 1 (fontified t)) . -23745) (undo-tree-id1368 . -1) 23746 (23737 . 23746) (23716 . 23737) (23708 . 23716) (#(" " 0 1 (fontified t)) . -23708) (undo-tree-id1369 . -1) 23709 (23708 . 23709) (#("h" 0 1 (fontified t)) . -23708) (undo-tree-id1370 . -1) 23709 (23699 . 23709) (23678 . 23699) (23657 . 23678) (#("-" 0 1 (fontified t)) . -23657) (undo-tree-id1371 . -1) (#("g" 0 1 (fontified t)) . -23658) (undo-tree-id1372 . -1) 23659 (23655 . 23659) (23652 . 23655) (#(" " 0 1 (fontified t)) . -23652) (undo-tree-id1373 . -1) 23653 (23652 . 23653) (#(" " 0 1 (fontified t)) . -23652) (undo-tree-id1374 . -1) (#("~" 0 1 (fontified t)) . -23653) (undo-tree-id1375 . -1) (#("-" 0 1 (fontified t)) . -23654) (undo-tree-id1376 . -1) (#("n" 0 1 (fontified t)) . -23655) (undo-tree-id1377 . -1) (#("o" 0 1 (fontified t)) . -23656) (undo-tree-id1378 . -1) (#("d" 0 1 (fontified t)) . -23657) (undo-tree-id1379 . -1) (#("e" 0 1 (fontified t)) . -23658) (undo-tree-id1380 . -1) (#("-" 0 1 (fontified t)) . -23659) (undo-tree-id1381 . -1) (#("f" 0 1 (fontified t)) . -23660) (undo-tree-id1382 . -1) (#("i" 0 1 (fontified t)) . -23661) (undo-tree-id1383 . -1) (#("n" 0 1 (fontified t)) . -23662) (undo-tree-id1384 . -1) (#("d" 0 1 (fontified t)) . -23663) (undo-tree-id1385 . -1) (#("~" 0 1 (fontified t font-lock-multiline t org-emphasis t invisible t)) . -23664) (undo-tree-id1386 . -1) (#(" " 0 1 (fontified t)) . -23665) (undo-tree-id1387 . -1) (#("s" 0 1 (fontified t)) . -23666) (undo-tree-id1388 . -1) (#("t" 0 1 (fontified t)) . -23667) (undo-tree-id1389 . -1) (#("y" 0 1 (fontified t)) . -23668) (undo-tree-id1390 . -1) (#("p" 0 1 (fontified t)) . -23669) (undo-tree-id1391 . -1) 23670 (23654 . 23670) (#("n" 0 1 (fontified t)) . -23654) (undo-tree-id1392 . -1) (#("o" 0 1 (fontified t)) . -23655) (undo-tree-id1393 . -1) 23656 (23652 . 23656) (#("n" 0 1 (fontified t)) . -23652) (undo-tree-id1394 . -1) 23653 (23649 . 23653) (23637 . 23649) (#("e" 0 1 (fontified t)) . -23637) (undo-tree-id1395 . -1) (#("i" 0 1 (fontified t)) . -23638) (undo-tree-id1396 . -1) (#("l" 0 1 (fontified t)) . -23639) (undo-tree-id1397 . -1) (#("l" 0 1 (fontified t)) . -23640) (undo-tree-id1398 . -1) (#(" " 0 1 (fontified t)) . -23641) (undo-tree-id1399 . -1) 23642 (23633 . 23642) (23612 . 23633) (#("s" 0 1 (fontified t)) . -23612) (undo-tree-id1400 . -1) (#(" " 0 1 (fontified t)) . -23613) (undo-tree-id1401 . -1) (#("g" 0 1 (fontified t)) . -23614) (undo-tree-id1402 . -1) 23615 (23596 . 23615) (23593 . 23596) (#("i" 0 1 (fontified t)) . -23593) (undo-tree-id1403 . -1) 23594 (23593 . 23594) (#("h" 0 1 (fontified t)) . -23593) (undo-tree-id1404 . -1) 23594 (23589 . 23594) (23568 . 23589) (23547 . 23568) (#("r" 0 1 (fontified t)) . -23547) (undo-tree-id1405 . -1) (#("h" 0 1 (fontified t)) . -23548) (undo-tree-id1406 . -1) 23549 (23543 . 23549) (23541 . 23543) (23520 . 23541) (#(" " 0 1 (fontified t)) . -23520) (undo-tree-id1407 . -1) (#("a" 0 1 (fontified t)) . -23521) (undo-tree-id1408 . -1) (#("n" 0 1 (fontified t)) . -23522) (undo-tree-id1409 . -1) (#("d" 0 1 (fontified t)) . -23523) (undo-tree-id1410 . -1) (#(" " 0 1 (fontified t)) . -23524) (undo-tree-id1411 . -1) (#("h" 0 1 (fontified t)) . -23525) (undo-tree-id1412 . -1) (#("a" 0 1 (fontified t)) . -23526) (undo-tree-id1413 . -1) (#("v" 0 1 (fontified t)) . -23527) (undo-tree-id1414 . -1) (#("e" 0 1 (fontified t)) . -23528) (undo-tree-id1415 . -1) 23529 (23520 . 23529) (#(" " 0 1 (fontified t)) . -23520) (undo-tree-id1416 . -1) 23521 (23508 . 23521) (23487 . 23508) (#(" " 0 1 (fontified t)) . -23487) (undo-tree-id1417 . -1) 23488 (23481 . 23488) (t 25471 23767 927823 448000)) nil (25471 25480 263271 0) 0 nil])
([nil nil ((23830 . 23831) (#("," 0 1 (fontified t)) . -23830) (undo-tree-id1346 . -1) 23831) nil (25471 25480 262891 965000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -23831) (undo-tree-id1344 . -1) (#("
" 0 1 (fontified t)) . -23832) (undo-tree-id1345 . -1) 23833 (23831 . 23833)) nil (25471 25480 262887 26000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 23300) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) 20631) nil (25471 25480 262873 30000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22531) (22530 . 22532) (t 25471 25480 401860 250000)) nil (25471 25584 457996 492000) 0 nil])
([nil nil ((23301 . 23302) (#(")" 0 1 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -23301) (23301 . 23302)) nil (25471 25584 457985 512000) 0 nil])
([nil nil ((23891 . 23895) (23878 . 23891) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 23886 23903 nil nil nil t #s(yas--field 2 23904 23904 nil nil nil nil nil)) #s(yas--field 2 23904 23904 nil nil nil nil nil)) nil 4 nil #s(yas--field 2 23904 23904 nil nil nil nil nil) nil nil)) (23866 . 23889) (#("\\s" 0 2 (fontified t)) . 23866) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -2) (undo-tree-id1427 . -2) (undo-tree-id1428 . -2) (undo-tree-id1429 . -2) (undo-tree-id1430 . -2) (undo-tree-id1431 . -2) (undo-tree-id1432 . -2) (undo-tree-id1433 . -2) (undo-tree-id1434 . -2) (undo-tree-id1435 . -2) 23868 (23866 . 23868) (#("'" 0 1 (fontified t)) . -23866) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (#("\\" 0 1 (fontified t)) . -23867) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (#("s" 0 1 (fontified t)) . -23868) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) 23869 (23867 . 23869) (23866 . 23867) (23864 . 23866) (23856 . 23864) (#("u" 0 1 (fontified t)) . -23856) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) 23857 (23855 . 23857) (23834 . 23855) (#("H" 0 1 (fontified t)) . -23834) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (#("e" 0 1 (fontified t)) . -23835) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (#(" " 0 1 (fontified t)) . -23836) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) 23837 (23832 . 23837) (t 25471 25584 598897 103000)) nil (25471 26420 477631 199000) 0 nil])
([nil nil ((23319 . 23327) 23896) nil (25471 26420 476915 666000) 0 nil])
([nil nil ((apply yas--snippet-revive 23874 25958 #s(yas--snippet nil (#s(yas--field 1 23886 23903 nil nil nil t #s(yas--field 2 23904 23904 nil nil nil nil nil)) #s(yas--field 2 23904 23904 nil nil nil nil nil)) nil 4 nil #s(yas--field 2 23904 23904 nil nil nil nil nil) nil nil)) (23905 . 25949) 23904) nil (25471 26420 476908 242000) 0 nil])
([nil nil ((8714 . 8720) (8997 . 8998) (9000 . 9005) (9057 . 9058) (9480 . 9486) (9481 . 9483) (#("ode" 0 3 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block))) . 9481) (9675 . 9681) (9676 . 9680) (9897 . 9907) (10312 . 10318) (10313 . 10315) (#("ode" 0 3 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block))) . 10313) (10744 . 10750) (11006 . 11007) (11009 . 11014) (11664 . 11670) (11714 . 11720) (11741 . 11747) (#("export-" 0 7 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block))) . 11765) (11781 . 11788) (11947 . 11948) (11950 . 11955) (12067 . 12068) (12269 . 12275) (12430 . 12431) (12522 . 12523) 8677 (t 25471 26420 619705 636000)) nil (25471 26600 852011 797000) 0 nil])
([nil nil ((10070 . 28845) (#("* Acting on backlinks
  Backlinks are a pivotal part of this workflow. A file has a backlink if another file links to it. As a core part of my workflow revolves around index files (or Maps of Contents) and those are files that basically everything connected to that subject links to them, they end up being files with a lot of backlinks. I have some functions here that act on backlinks which I consider useful. Excluded from this list are two defmethods I use concerning backlinks as I define all my defmethods in the first part of the config.

  The first is org-roam-node-backlinkscount, a function I initially found on the OR wiki on github, which finds the number of backlinks a note has and formats them in a nice string. Its meant to be used with org-roam-node-display-template to show the number of backlinks in the org-roam-node-UI. The second is an almost identical function, but instead of returning a formatted string it returns a number. That is meant to be used with org-roam-node-sort-by-backlinks, a function defined below which sorts nodes by the number of backlinks they have. Number comparison is much easier than comparison of string representing numbers, and due to the extra formatting applied (which I like for the purpose that function has) I couldn't find how to convert that string to a number so I just made a rewrite with that small change.  

  #+BEGIN_SRC elisp :tangle yes

    (defvar-local org-roam-backlinks-files nil
      \"Buffer local variable displaying a list of the absolute paths
      of all the files that are backlinked to current node. These are
      not added by default, and as such this variable has the value
      nil but they can be added by running the
      `org-roam-backlinks-find-files' function on a node.\")

    (defvar org-roam-backlinks-pdfs nil
      \"After running `org-roam-export-backlinks-to-latex-pdf', to
      export a node and all its backlinks to pdf, the value of this
      variable in the original node's buffer will become a list of
      all the pdfs that were created. This is to ease the process of
      combining them as the value of this variable can then be passed
      to a program such as pdftk to combine them.\")

    (defun org-roam-backlinks-sort-by-backlinks (completion-a completion-b)
      \"Sorting function for org-roam that sorts the list of nodes by
    the number of backlinks. This is the sorting function in
    `org-roam-backlinks-node-find-by-backlinks'\"
      (let ((node-a (cdr completion-a))
	    (node-b (cdr completion-b)))
	(>= (org-roam-node-backlinkscount-number node-a)
	    (org-roam-node-backlinkscount-number node-b))))

    (defun org-roam-backlinks-node-find-by-backlinks ()
      \"Essentially works like `org-roam-node-find' (although it uses
    a combination of `find-file' and `org-roam-node-read' to
    accomplish that and not `org-roam-node-find' as only
    `org-roam-node-read' can take a sorting function as an argument)
    but the list of nodes is sorted by the number of backlinks
    instead of most recent nodes. Sorting is done with
    `org-roam-backlinks-sort-by-backlinks'\"
      (interactive)
      (find-file (org-roam-node-file (org-roam-node-read nil nil #'org-roam-node-sort-by-backlinks))))

    (defun org-roam-backlinks-query ()
      \"Simple org-roam query function that stores the IDs of all the
      files that link to the node at point. This is a modified part
      of the `org-roam-backlinks-get' function keeping only the part
      necessary for `org-roam-backlinks-find-files' to work as this is a
      complimentary function to that\"
      (org-roam-db-query
       [:select [source dest]
		:from links
		:where (= dest $s1)
		:and (= type \"id\")]
       (org-roam-node-id (org-roam-node-at-point))))

    (defun org-roam-backlinks-find-files ()
	\"Get all nodes that link to the node at point with the
	`org-roam-backlink-query' function, find their absolute path
	and save a list of those paths to the buffer local variable
	`org-roam-backlinks'.

      With the list, you can act on all those files together. This is
      exceptionally useful with index files as it allows you to do an
      action on all files linked to this index automatically.\"
	(interactive)
	(let ((backlinks (length (org-roam-backlinks-query))))
	  (dotimes (number backlinks)
	    (let* ((id (car (nth number (org-roam-backlinks-query))))
		   (node (org-roam-node-from-id id)))
	      (setq-local org-roam-backlinks-files (cons (org-roam-node-file node) org-roam-backlinks-files))))
	  org-roam-backlinks-files))

    (defun org-roam-backlinks-export-to-latex-pdf ()
      \"Export the current buffer and every buffer that mentions it to
    a pdf through the org-latex export. Makes use of the
    `org-roam-backlinks-find-files' function to find all the
    backlinks. Also saves all the pdf names in a variable called
    `org-roam-backlinks-pdfs'. These names can then be passed to
    something like pdftk to merge them into one pdf\"
      (interactive)
      (save-current-buffer
	(let ((backlinks (cons (buffer-file-name) org-roam-backlinks-files))
	      (org-startup-with-latex-preview nil))
	  (while backlinks
	    (find-file (car backlinks))
	    (org-latex-export-to-pdf)
	    (setq org-roam-backlinks-pdfs
		  (cons (concat (file-name-sans-extension (car backlinks)) \".pdf\") org-roam-backlinks-pdfs))
	    (setq backlinks (cdr backlinks)))))
      (message \"%s\" \"Done!\"))

  #+END_SRC

** Org-roam-backlinks-search
This section is about a small \"package\" I recently wrote. Its a backlink selector functionality for org-roam. I thought it was a neat idea to be able to navigate from one node to its backlinks and repeat recursively so I wrote this code for it. Once I polish it further, I might release some of this to MELPA. For now it will stay here.

#+BEGIN_SRC elisp :tangle yes

  (defcustom org-roam-backlinks-choices '(\"View Backlinks\" \"Go to Node\" \"Add to Zetteldesk\" \"Quit\")
    \"List of choices for `org-roam-backlinks-node-read'.
  Check that function's docstring for more info about these.\")

  (defun org-roam-backlinks-query* (NODE)
    \"Gets the backlinks of NODE with `org-roam-db-query'.\"
    (org-roam-db-query
	  [:select [source dest]
		   :from links
		   :where (= dest $s1)
		   :and (= type \"id\")]
	  (org-roam-node-id NODE)))

  (defun org-roam-backlinks-p (SOURCE NODE)
    \"Predicate function that checks if NODE is a backlink of SOURCE.\"
    (let* ((source-id (org-roam-node-id SOURCE))
	   (backlinks (org-roam-backlinks-query* SOURCE))
	   (id (org-roam-node-id NODE))
	   (id-list (list id source-id)))
      (member id-list backlinks)))

  (defun org-roam-backlinks-poi-or-moc-p (NODE)
    \"Check if NODE has the tag POI or the tag MOC.  Return t if it does.\"
    (or (string-equal (car (org-roam-node-tags NODE)) \"POI\")
	(string-equal (car (org-roam-node-tags NODE)) \"MOC\")))

  (defun org-roam-backlinks--read-node-backlinks (source)
    \"Runs `org-roam-node-read' on the backlinks of SOURCE.
  The predicate used as `org-roam-node-read''s filter-fn is
  `org-roam-backlinks-p'.\"
    (org-roam-node-read nil (apply-partially #'org-roam-backlinks-p source)))

  (defun org-roam-backlinks-node-read (node)
    \"Read a NODE and run `org-roam-backlinks--read-node-backlinks'.
  Upon selecting a backlink, prompt the user for what to do with
  the backlink. The prompt is created with `completing-read' with
  valid options being everything in the list
  `org-roam-backlinks-choices'.

  If the user decides to view the selected node's backlinks, the
  function recursively runs itself with the selection as its
  argument. If they decide they want to go to the selected node,
  the function runs `find-file' and the file associated to that
  node. Lastly, if they choose to quit, the function exits
  silently.

  There is however also the option to add the node to the current
  `zetteldesk-desktop'. `zetteldesk.el' is a package I have written
  to extend org-roam and naturally I wanted to include some
  interaction with it in this function.\"
    (let* ((backlink (org-roam-backlinks--read-node-backlinks node))
	   (choice (completing-read \"What to do with NODE: \"
				    org-roam-backlinks-choices)))
      (cond
       ((string-equal
	 choice
	 (car org-roam-backlinks-choices))
	(org-roam-backlinks-node-read backlink))
       ((string-equal
	 choice
	 (cadr org-roam-backlinks-choices))
	(find-file (org-roam-node-file backlink)))
       ((string-equal
	 choice
	 (caddr org-roam-backlinks-choices))
	(zetteldesk-add-node-to-desktop backlink))
       ((string-equal
	 choice
	 (cadddr org-roam-backlinks-choices))))))

  (defun org-roam-backlinks-search ()
    \"Select an `org-roam-node' and recursively search its backlinks.

  This function is a starter function for
  `org-roam-backlinks-node-read' which gets the initial node
  selection from `org-roam-node-list'. For more information about
  this function, check `org-roam-backlinks-node-read'.\"
    (interactive)
    (let ((node (org-roam-node-read)))
      (org-roam-backlinks-node-read node)))

  (defun org-roam-backlinks-search-from-moc-or-poi ()
    \"`org-roam-backlinks-search' with an initial selection filter.

  Since nodes tagged as \\\"MOC\\\" or \\\"POI\\\" are the entry points to
  my personal zettelkasten, I have this helper function which is
  identical to `org-roam-backlinks-search' but filters initial
  selection to only those notes. That way, they initial selection
  has a point as it will be on a node that has a decent amount of
  backlinks.\"
    (interactive)
    (let ((node (org-roam-node-read nil #'org-roam-backlinks-poi-or-moc-p)))
      (org-roam-backlinks-node-read node)))

#+END_SRC

#+RESULTS:
: org-roam-backlinks-search-from-moc-or-poi
  
** Find intersecting backlinks of multiple nodes
This section is about a [[https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11][discussion]] I recently had in the Org-Roam Discourse. I mentioned that I have made a recursive backlinks searcher for org-roam nodes (which is in the above section) and I was asked if I could expand this sort of idea and make a function that finds the backlinks of a number of different nodes. There will be two major parts to this section. The first, is collecting the list of nodes which are backlinked to a number of nodes selected by the user and the second is displaying this list to the user, allowing them to select one and doing something with that.

*** Collect the list of nodes
First, we need to prompt the user to select the nodes they want.

#+BEGIN_SRC elisp :tangle yes

  (defvar org-roam-backlinks-selected-nodes '()
    \"List of nodes selected in `org-roam-backlinks--select-nodes'.\")

  (defun org-roam-backlinks--select-nodes (NUM)
    \"Select NUM `org-org-roam-nodes' and return a list of those.\"
    (setq org-roam-backlinks-selected-nodes '())
    (dotimes (i NUM)
      (let ((node (org-roam-node-read)))
	(add-to-list 'org-roam-backlinks-selected-nodes node)))
    org-roam-backlinks-selected-nodes)
  
#+END_SRC

Then, get a list of lists containing all their backlinks.

#+BEGIN_SRC elisp :tangle yes

  (defvar org-roam-backlinks-selected-node-backlinks '()
    \"List of backlinks of nodes in `org-roam-backlinks-selected-nodes'.

  This list is filled using `org-roam-backlinks-get-node-backlinks'\")

  (defun org-roam-backlinks-get-node-backlinks (NUM)
    \"Get a list of lists of backlinks of the nodes in NODE-LIST.\"
    (setq org-roam-backlinks-selected-node-backlinks '())
    (let ((node-list (org-roam-backlinks--select-nodes NUM)))
      (dolist (node node-list)
	(let ((backlinks (org-roam-backlinks-query* node))
	      (backlink-ids))
	  (dolist (id backlinks)
	    (add-to-list 'backlink-ids (car id)))
	  (add-to-list 'org-roam-backlinks-selected-node-backlinks backlink-ids)))
      org-roam-backlinks-selected-node-backlinks))

#+END_SRC

And then, take these lists and find their intersection.

#+BEGIN_SRC elisp :tangle yes

  (defun org-roam-backlinks-id-intersection (list1 list2)
    \"Find intersection of LIST1 and LIST2 using `cl-loop'.\"
    (cl-loop for id in list1
	     if (member id list2)
	     collect id into ids
	     finally (return ids)))

  (defun org-roam-backlinks-get-ids (NUM)
    \"Get the ids of all nodes which are backlinks of the selected nodes.

  Node selection is done with the underlying function
  `org-roam-backlinks--select-nodes'.\"
    (let* ((backlink-ids (org-roam-backlinks-get-node-backlinks NUM))
	   (result (car backlink-ids)))
      (dolist (ids backlink-ids)
	(setq result (org-roam-backlinks-id-intersection result ids)))
      result))

#+END_SRC

The end result is that calling ~org-roam-backlinks-get-ids~ will call all the necessary functions. This includes prompting for NUM org-roam-nodes, finding each ones backlinks and their intersection. It returns a list of ids, which can then be passed to the functions of the other section. None of these are interactive as they are the backbone of the setup.

*** Modifying org-roam-node-read to accept a list of nodes
Since we have collected a list of nodes (in the form of their ids) that can not be reproduced with a simple predicate, we need to make a version of ~org-roam-node-read~ which can take this list as an argument. Luckily for me, I have already encountered this problem before in zetteldesk so I have the code ready. Changing them to start with org-roam-backlinks instead of zetteldesk-ref, we get these.

#+BEGIN_SRC elisp :tangle yes

  (defun org-roam-backlinks-roam-node-read--completions* (node-list &optional filter-fn sort-fn)
    \"Run `org-roam-node-read--completions' with NODE-LIST being a list of nodes.

  Typically, the function takes `org-roam-node-list' as the initial
  list of nodes and creates the alist `org-roam-node-read'
  uses.  However, it can be helpful to supply the list of nodes
  yourself, when the predicate function used cannot be inferred
  through a filter function of the form this function
  takes.  FILTER-FN and SORT-FN are the same as in
  `org-roam-node-read--completions'.  The resulting alist is to be
  used with `org-roam-backlinks-roam-node-read*'.\"
    (let* ((template (org-roam-node--process-display-format org-roam-node-display-template))
	   (nodes node-list)
	   (nodes (mapcar (lambda (node)
			    (org-roam-node-read--to-candidate node template)) nodes))
	   (nodes (if filter-fn
		      (cl-remove-if-not
		       (lambda (n) (funcall filter-fn (cdr n)))
		       nodes)
		    nodes))
	   (sort-fn (or sort-fn
			(when org-roam-node-default-sort
			  (intern (concat \"org-roam-node-read-sort-by-\"
					  (symbol-name org-roam-node-default-sort))))))
	   (nodes (if sort-fn (seq-sort sort-fn nodes)
		    nodes)))
      nodes))

  (defun org-roam-backlinks-roam-node-read* (node-list &optional initial-input filter-fn sort-fn require-match prompt)
    \"Run `org-roam-node-read' with the nodes supplied by NODE-LIST.

  NODE-LIST is a list of nodes passed to
  `org-roam-backlinks-roam-node-read--completions*', which creates an alist of
  nodes with the proper formatting to be used in this
  function.  This is for those cases where it is helpful to use your
  own list of nodes, because a predicate function can not filter
  them in the way you want easily.

  INITIAL-INPUT, SORT-FN, FILTER-FN, REQUIRE-MATCH, PROMPT are the
  same as in `org-roam-node-read'.\"
    (let* ((nodes (org-roam-backlinks-roam-node-read--completions* node-list filter-fn sort-fn))
	   (prompt (or prompt \"Node: \"))
	   (node (completing-read
		  prompt
		  (lambda (string pred action)
		    (if (eq action 'metadata)
			`(metadata
			  ;; Preserve sorting in the completion UI if a sort-fn is used
			  ,@(when sort-fn
			      '((display-sort-function . identity)
				(cycle-sort-function . identity)))
			  (annotation-function
			   . ,(lambda (title)
				(funcall org-roam-node-annotation-function
					 (get-text-property 0 'node title))))
			  (category . org-roam-node))
		      (complete-with-action action nodes string pred)))
		  nil require-match initial-input 'org-roam-node-history)))
      (or (cdr (assoc node nodes))
	  (org-roam-node-create :title node))))

#+END_SRC

*** COMMENT Interactive functions and user interface
Finally, we are down to the easiest part. Having written the backbone of the process, we need to allow the user to select a single node from the possible choices in an interactive way and then write the end user functions which take this node and do things with it. For now, I will implement an ~org-roam-node-find~ style function and a connection to the above section to kickstart ~org-roam-backlinks-node-read~ with this instead of what ~org-roam-backlinks-search~ does. These functions are shown below

#+BEGIN_SRC elisp :tangle yes

  (defun org-roam-backlinks-multi-node-read ()
    \"Read a node from intersecting backlinks of multiple nodes.

  This is the low-level interactive function which is used for
  collecting the nodes which are backlinks to a number of selected
  nodes. This function calls `org-roam-backlinks-get-ids' for a lot
  of the work, which returns a list of ids of all nodes which are
  backlinked to some selected nodes. For more, check its
  docstring. With this list of ids, this function runs
  `org-roam-backlinks-roam-node-read*', which is a modified
  `org-roam-node-read' which accepts a list of nodes as its
  argument. This function returns the selected node to be used in
  the higher level functions.\"
    (interactive)
    (let* ((num (read-number \"Number of Nodes: \"))
	   (ids (org-roam-backlinks-get-ids num))
	   (nodes (cl-loop for id in ids
			   collect (org-roam-node-from-id id) into nodes
			   finally (return nodes))))
      (org-roam-backlinks-roam-node-read* nodes)))

  (defun org-roam-backlinks-multi-node-find ()
    \"Find node from intersecting backlinks of multiple nodes.

  This is a wrapper function for
  `org-roam-backlinks-multi-node-read', which finds the file
  associated with the selected node instead of returning it.\"
    (interactive)
    (let ((node (org-roam-backlinks-multi-node-read)))
      (find-file (org-roam-node-file node))))

  (defun org-roam-backlinks-multi-search ()
    \"Select an `org-roam-node' and recursively search its backlinks.

  This function is an extension of the `org-roam-backlinks-search'
  function which is used for recursively searching a node's
  backlinks using `org-roam-backlinks-node-read'. Its main
  difference is that it kickstarts the system not by selecting a
  node but by running `org-roam-backlinks-multi-node-read'.  This
  means that the selected node will be the intersection of
  backlinks of a number of nodes selected from that function.\"
    (interactive)
    (let ((node (org-roam-backlinks-multi-node-read)))
      (org-roam-backlinks-node-read node)))

#+END_SRC

" 0 1 (fontified t face (org-superstar-header-bullet org-level-1) composition (0 1 [9673])) 1 2 (fontified t face org-level-1) 2 21 (fontified t face org-level-1) 21 22 (fontified t) 22 1371 (fontified t) 1371 1372 (fontified t) 1372 1403 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 1403 1404 (fontified t font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line) 1404 1410 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1410 1422 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1422 1423 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1423 1441 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 1441 1447 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-variable-name-face org-block) help-echo nil src-block t) 1447 1458 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1458 1713 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1713 1730 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1730 1731 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 1731 1734 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1734 1739 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 1739 1742 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1742 1764 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1764 1772 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1772 1778 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1778 1779 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1779 1796 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 1796 1797 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-variable-name-face org-block) help-echo nil src-block t) 1797 1802 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 1802 1813 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1813 1829 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1829 1867 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1867 1941 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1941 2008 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2008 2197 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2197 2205 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2205 2210 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2210 2211 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2211 2220 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 2220 2226 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 2226 2227 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 2227 2229 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 2229 2247 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 2247 2282 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2282 2411 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2411 2420 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2420 2426 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 2426 2427 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2427 2431 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 2431 2452 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2452 2454 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2454 2462 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2462 2465 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2465 2579 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2579 2632 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2632 2638 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2638 2643 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2643 2644 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2644 2652 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 2652 2662 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 2662 2685 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 2685 2695 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2695 2720 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2720 2738 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2738 2780 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2780 2789 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2789 2796 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2796 2814 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2814 2848 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2848 2866 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2866 2881 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2881 2899 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2899 2904 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2904 3068 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3068 3077 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3077 3083 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 3083 3084 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3084 3086 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 3086 3104 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3104 3106 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3106 3114 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3114 3125 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3125 3127 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3127 3236 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3236 3241 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3241 3242 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3242 3266 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 3266 3276 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3276 3421 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3421 3443 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3443 3497 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3497 3514 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3514 3520 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 3520 3526 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3526 3586 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3586 3612 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3612 3620 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3620 3627 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 3627 3642 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3642 3644 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3644 3649 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 3649 3658 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3658 3664 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 3664 3680 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3680 3684 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 3684 3693 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3693 3697 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 3697 3759 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3759 3764 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3764 3765 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3765 3782 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 3782 3783 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 3783 3786 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 3786 3791 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 3791 3794 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 3794 3799 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3799 3856 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3856 3879 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3879 3916 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3916 3977 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3977 3979 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3979 3997 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3997 4203 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4203 4206 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4206 4217 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4217 4221 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4221 4224 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4224 4275 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4275 4279 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4279 4286 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4286 4312 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4312 4316 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4316 4417 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4417 4427 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4427 4446 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4446 4452 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4452 4502 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4502 4508 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4508 4535 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4535 4541 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 4541 4545 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4545 4550 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4550 4555 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4555 4556 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4556 4574 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 4574 4581 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 4581 4594 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 4594 4598 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4598 4604 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4604 4730 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4730 4747 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4747 4748 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 4748 4751 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4751 4756 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 4756 4759 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4759 4856 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4856 4873 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4873 4874 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 4874 4879 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4879 4916 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4916 4968 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4968 4969 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4969 4976 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4976 4987 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4987 4996 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4996 5015 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5015 5018 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5018 5021 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5021 5076 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5076 5082 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5082 5086 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5086 5135 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5135 5140 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5140 5221 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5221 5225 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5225 5243 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5243 5244 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5244 5311 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5311 5317 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5317 5336 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5336 5337 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5337 5351 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5351 5355 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5355 5401 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5401 5405 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5405 5406 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5406 5413 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5413 5417 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 5417 5428 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line) 5428 5429 (fontified t face org-block-end-line) 5429 5430 (fontified t) 5430 5431 (fontified t face org-hide) 5431 5432 (fontified t face (org-superstar-header-bullet org-level-2) composition (2 1 [9675])) 5432 5433 (fontified t face org-level-2) 5433 5458 (fontified t face org-level-2) 5458 5797 (fontified t) 5797 5826 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 5826 5827 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line help-echo nil) 5827 5831 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5831 5840 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 5840 5841 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5841 5867 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-variable-name-face org-block) help-echo nil src-block t) 5867 5870 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5870 5886 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 5886 5887 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5887 5899 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 5899 5900 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5900 5919 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 5919 5920 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5920 5926 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 5926 5932 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5932 5954 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 5954 5982 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 5982 6046 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 6046 6049 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6049 6052 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6052 6057 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 6057 6058 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6058 6083 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 6083 6091 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6091 6095 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6095 6129 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 6129 6146 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 6146 6149 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 6149 6177 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6177 6184 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 6184 6204 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6204 6209 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 6209 6221 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6221 6227 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 6227 6246 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6246 6250 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 6250 6259 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6259 6263 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 6263 6299 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6299 6304 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 6304 6305 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6305 6325 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 6325 6344 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6344 6409 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 6409 6410 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6410 6415 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6415 6419 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 6419 6459 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6459 6617 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6617 6622 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 6622 6623 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6623 6654 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 6654 6666 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6666 6735 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 6735 6741 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6741 6743 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 6743 6790 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6790 6795 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 6795 6844 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6844 6849 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 6849 6853 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6853 6854 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6854 6857 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6857 6862 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 6862 6863 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6863 6902 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 6902 6916 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6916 6923 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 6923 6941 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 6941 6996 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 6996 7014 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 7014 7034 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 7034 7054 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 7054 7057 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 7057 7140 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 7140 7145 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 7145 7146 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 7146 7174 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 7174 7186 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 7186 7208 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 7208 7247 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 7247 7250 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 7250 7315 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 7315 7359 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 7359 7374 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 7374 7429 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 7429 7455 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 7455 7650 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 7650 7671 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 7671 7680 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 7680 7714 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 7714 7855 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 7855 7873 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 7873 7877 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 7877 7890 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 7890 7980 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 7980 8020 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 8020 8021 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8021 8026 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8026 8030 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 8030 8119 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8119 8143 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 8143 8189 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8189 8193 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 8193 8216 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8216 8225 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8225 8334 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8334 8371 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8371 8446 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8446 8484 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8484 8550 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8550 8559 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8559 8602 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8602 8603 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8603 8606 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8606 8611 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 8611 8612 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8612 8637 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 8637 8641 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8641 8645 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8645 8657 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 8657 8670 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 8670 8710 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 8710 8711 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 8711 8753 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 8753 8756 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 8756 8784 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 8784 8814 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 8814 8832 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 8832 8850 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 8850 8880 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 8880 8904 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 8904 8932 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 8932 8935 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 8935 8936 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8936 8941 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8941 8952 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 8952 8954 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8954 8959 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8959 8962 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 8962 8993 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8993 9041 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 9041 9046 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 9046 9047 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 9047 9088 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 9088 9096 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 9096 9098 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 9098 9123 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 9123 9308 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 9308 9333 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 9333 9500 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 9500 9506 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 9506 9517 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 9517 9524 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 9524 9527 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 9527 9641 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 9641 9650 (fontified t font-lock-fontified t face org-block-end-line font-lock-multiline t) 9650 9651 (fontified t face org-block-end-line) 9651 9652 (fontified t) 9652 9662 (fontified t font-lock-fontified t face org-meta-line) 9662 9663 (fontified t) 9663 9674 (fontified t face org-code) 9674 9707 (fontified t face org-code) 9707 9709 (fontified t) 9709 9710 (fontified t) 9710 9711 (fontified t face org-hide) 9711 9712 (fontified t face (org-superstar-header-bullet org-level-2) composition (2 1 [9675])) 9712 9713 (fontified t face org-level-2) 9713 9758 (fontified t face org-level-2) 9758 9759 (fontified t) 9759 9783 (fontified t) 9783 9784 (fontified t help-echo "LINK: https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11" htmlize-link (:uri "https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11") invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face org-link) 9784 9785 (fontified t help-echo "LINK: https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11" htmlize-link (:uri "https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11") invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face org-link) 9785 9855 (fontified t help-echo "LINK: https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11" htmlize-link (:uri "https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11") invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face org-link) 9855 9856 (fontified t rear-nonsticky t help-echo "LINK: https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11" htmlize-link (:uri "https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11") invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face org-link) 9856 9857 (fontified t help-echo "LINK: https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11" htmlize-link (:uri "https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11") invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face org-link) 9857 9858 (fontified t help-echo "LINK: https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11" htmlize-link (:uri "https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11") rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face org-link) 9858 9867 (fontified t help-echo "LINK: https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11" htmlize-link (:uri "https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 9867 9868 (fontified t help-echo "LINK: https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11" htmlize-link (:uri "https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11") rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 9868 9869 (fontified t help-echo "LINK: https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11" htmlize-link (:uri "https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11") face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 9869 9870 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) help-echo "LINK: https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11" htmlize-link (:uri "https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11") face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 9870 9992 (fontified t) 9992 10416 (fontified t) 10416 10417 (fontified t) 10417 10418 (fontified t) 10418 10419 (fontified t face org-hide) 10419 10420 (fontified t face org-hide) 10420 10421 (fontified t face (org-superstar-header-bullet org-level-3) composition (3 1 [10040])) 10421 10422 (fontified t face org-level-3) 10422 10447 (fontified t face org-level-3) 10447 10448 (fontified t) 10448 10513 (fontified t) 10513 10514 (fontified t) 10514 10543 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 10543 10544 (fontified t font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line) 10544 10545 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 10545 10548 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10548 10554 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 10554 10555 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10555 10588 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 10588 10597 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10597 10625 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 10625 10657 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 10657 10660 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 10660 10666 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10666 10671 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 10671 10672 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10672 10704 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 10704 10715 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10715 10728 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 10728 10746 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 10746 10776 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 10776 10782 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10782 10786 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 10786 10831 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10831 10838 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 10838 10854 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10854 10857 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 10857 10983 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 10983 10986 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 10986 10987 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 10987 10996 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line) 10996 10997 (fontified t face org-block-end-line) 10997 10998 (fontified t) 10998 11056 (fontified t) 11056 11057 (fontified t) 11057 11086 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 11086 11087 (fontified t font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line) 11087 11088 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 11088 11091 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11091 11097 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 11097 11098 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11098 11140 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 11140 11149 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11149 11181 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 11181 11214 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 11214 11247 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 11247 11284 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 11284 11286 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 11286 11288 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 11288 11292 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11292 11297 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 11297 11298 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11298 11335 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 11335 11346 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11346 11407 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 11407 11413 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11413 11417 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 11417 11471 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11471 11474 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 11474 11535 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11535 11541 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 11541 11561 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11561 11564 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 11564 11638 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11638 11644 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 11644 11831 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 11831 11840 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line) 11840 11841 (fontified t face org-block-end-line) 11841 11842 (fontified t) 11842 11898 (fontified t) 11898 11899 (fontified t) 11899 11928 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 11928 11929 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line help-echo nil) 11929 11930 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block) help-echo nil) 11930 11933 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 11933 11938 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 11938 11939 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 11939 11973 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 11973 11992 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 11992 12037 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 12037 12044 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 12044 12047 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 12047 12053 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 12053 12060 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 12060 12145 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 12145 12151 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 12151 12163 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 12163 12168 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 12168 12169 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 12169 12195 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 12195 12206 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 12206 12333 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 12333 12365 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 12365 12368 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 12368 12374 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 12374 12378 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 12378 12479 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 12479 12485 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 12485 12507 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 12507 12511 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 12511 12585 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 12585 12594 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line) 12594 12595 (fontified t face org-block-end-line) 12595 12596 (fontified t) 12596 12627 (fontified t) 12627 12628 (fontified t font-lock-multiline t org-emphasis t invisible t) 12628 12654 (fontified t face (org-code) font-lock-multiline t org-emphasis t) 12654 12655 (fontified t font-lock-multiline t org-emphasis t invisible t) 12655 12954 (fontified t) 12954 12955 (fontified t) 12955 12956 (fontified t face org-hide) 12956 12957 (fontified t face org-hide) 12957 12958 (fontified t face (org-superstar-header-bullet org-level-3) composition (3 1 [10040])) 12958 12959 (fontified t face org-level-3) 12959 13013 (fontified t face org-level-3) 13013 13014 (fontified t) 13014 13054 (fontified t) 13054 13086 (fontified t) 13086 13162 (fontified t) 13162 13163 (fontified t font-lock-multiline t org-emphasis t invisible t) 13163 13181 (fontified t face (org-code) font-lock-multiline t org-emphasis t) 13181 13182 (fontified t font-lock-multiline t org-emphasis t invisible t) 13182 13415 (fontified t) 13415 13416 (fontified t) 13416 13445 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 13445 13446 (fontified t font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line) 13446 13447 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 13447 13450 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13450 13455 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 13455 13456 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13456 13503 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 13503 13515 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13515 13524 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 13524 13548 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13548 13554 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 13554 13585 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 13585 13659 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 13659 13677 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 13677 13733 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 13733 13751 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 13751 13989 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 13989 14020 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14020 14066 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 14066 14100 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14100 14103 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 14103 14109 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14109 14113 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 14113 14197 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14197 14239 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14239 14245 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 14245 14310 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14310 14317 (fontified t font-lock-fontified t help-echo "Easy to misread; consider moving the element to the next line" src-block t font-lock-multiline t face (font-lock-warning-face org-block)) 14317 14330 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14330 14332 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 14332 14379 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14379 14385 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 14385 14435 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14435 14463 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14463 14465 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 14465 14478 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14478 14482 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 14482 14531 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14531 14560 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 14560 14626 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14626 14628 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 14628 14689 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14689 14691 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14691 14695 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14695 14700 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 14700 14701 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14701 14735 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 14735 14747 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14747 14756 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 14756 14815 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14815 14821 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 14821 14839 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14839 14916 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 14916 14917 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 14917 14918 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 14918 14919 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 14919 14920 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 14920 14921 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 14921 14922 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 14922 14923 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 14923 14924 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 14924 14925 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14925 14926 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14926 14927 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14927 14928 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14928 14929 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14929 14930 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14930 14936 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14936 14937 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14937 14938 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14938 14939 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14939 14940 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14940 14962 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14962 14963 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14963 14964 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14964 14965 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14965 14966 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14966 14967 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14967 14968 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14968 14969 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14969 14970 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14970 14971 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14971 14976 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 14976 15305 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 15305 15323 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 15323 15326 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 15326 15332 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15332 15336 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 15336 15345 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15345 15346 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15346 15437 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15437 15439 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 15439 15447 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15447 15455 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 15455 15501 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15501 15507 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 15507 15536 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15536 15538 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 15538 15580 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15580 15583 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 15583 15642 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 15642 15650 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15650 15654 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 15654 15696 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15696 15697 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15697 15784 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15784 15790 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 15790 15936 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15936 15937 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15937 15938 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15938 15939 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15939 15940 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15940 16049 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 16049 16051 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 16051 16102 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 16102 16108 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 16108 16116 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 16116 16117 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 16117 16119 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 16119 16128 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line) 16128 16129 (fontified t face org-block-end-line) 16129 16130 (fontified t) 16130 16131 (fontified t face org-hide) 16131 16132 (fontified t face org-hide) 16132 16133 (fontified t face (org-superstar-header-bullet org-level-3) composition (3 1 [10040])) 16133 16134 (fontified t face org-level-3) 16134 16141 (fontified t face org-special-keyword) 16141 16142 (fontified t face org-level-3) 16142 16182 (fontified t face org-level-3) 16182 16183 (fontified t) 16183 16478 (fontified t) 16478 16479 (fontified t font-lock-multiline t org-emphasis t invisible t) 16479 16497 (fontified t face (org-code) font-lock-multiline t org-emphasis t) 16497 16498 (fontified t font-lock-multiline t org-emphasis t invisible t) 16498 16565 (fontified t) 16565 16566 (fontified t font-lock-multiline t org-emphasis t invisible t) 16566 16594 (fontified t face (org-code) font-lock-multiline t org-emphasis t) 16594 16595 (fontified t font-lock-multiline t org-emphasis t invisible t) 16595 16622 (fontified t) 16622 16623 (fontified t font-lock-multiline t org-emphasis t invisible t) 16623 16648 (fontified t face (org-code) font-lock-multiline t org-emphasis t) 16648 16649 (fontified t font-lock-multiline t org-emphasis t invisible t) 16649 16688 (fontified t) 16688 16689 (fontified t) 16689 16718 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 16718 16719 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line help-echo nil) 16719 16720 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block) help-echo nil) 16720 16723 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 16723 16728 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 16728 16729 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 16729 16763 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 16763 16771 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 16771 16992 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 16992 17018 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 17018 17211 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 17211 17245 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 17245 17271 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 17271 17289 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 17289 17424 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 17424 17430 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 17430 17441 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 17441 17448 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 17448 17452 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 17452 17472 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 17472 17491 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 17491 17549 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 17549 17556 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 17556 17638 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 17638 17644 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 17644 17710 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 17710 17715 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 17715 17716 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 17716 17750 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 17750 17758 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 17758 17853 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 17853 17887 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 17887 17972 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 17972 17978 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 17978 17989 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 17989 17996 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 17996 17999 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 17999 18096 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 18096 18101 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 18101 18102 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 18102 18133 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 18133 18141 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 18141 18153 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 18153 18166 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 18166 18219 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 18219 18247 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 18247 18272 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 18272 18353 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 18353 18381 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 18381 18481 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 18481 18515 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 18515 18645 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 18645 18651 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 18651 18662 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 18662 18669 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 18669 18672 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 18672 18764 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 18764 18773 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line) 18773 18774 (fontified t face org-block-end-line) 18774 18775 (fontified t)) . 7273) (undo-tree-id2314 . -15) (undo-tree-id2315 . -9674) (undo-tree-id2316 . -9612) (undo-tree-id2317 . -6410) (undo-tree-id2318 . -6410) (undo-tree-id2319 . -5086) (undo-tree-id2320 . -5430) (undo-tree-id2321 . -6459) (undo-tree-id2322 . -9570) (undo-tree-id2323 . -6410) (undo-tree-id2324 . -4311) (undo-tree-id2325 . -4312) (undo-tree-id2326 . -3656) (undo-tree-id2327 . -4311) (undo-tree-id2328 . -4311) (undo-tree-id2329 . -3656) (undo-tree-id2330 . -4311) (undo-tree-id2331 . -4311) (undo-tree-id2332 . -3656) (undo-tree-id2333 . -4311) (undo-tree-id2334 . -4311) (undo-tree-id2335 . -3656) (undo-tree-id2336 . -4311) (undo-tree-id2337 . -4311) (undo-tree-id2338 . -3656) (undo-tree-id2339 . -4311) (undo-tree-id2340 . -4311) (undo-tree-id2341 . -3656) (undo-tree-id2342 . -4311) (undo-tree-id2343 . -4311) (undo-tree-id2344 . -3656) (undo-tree-id2345 . -7031) (undo-tree-id2346 . -7031) (undo-tree-id2347 . -5711) (undo-tree-id2348 . -7031) (undo-tree-id2349 . -7031) (undo-tree-id2350 . -5711) (undo-tree-id2351 . -7031) (undo-tree-id2352 . -7031) (undo-tree-id2353 . -6410) (undo-tree-id2354 . -7031) (undo-tree-id2355 . -7031) (undo-tree-id2356 . -6410) (undo-tree-id2357 . -7031) (undo-tree-id2358 . -7031) (undo-tree-id2359 . -6410) (undo-tree-id2360 . -7031) (undo-tree-id2361 . -7031) (undo-tree-id2362 . -6410) (undo-tree-id2363 . -7031) (undo-tree-id2364 . -7031) (undo-tree-id2365 . -6410) (undo-tree-id2366 . -7031) (undo-tree-id2367 . -7031) (undo-tree-id2368 . -6410) (undo-tree-id2369 . -7031) (undo-tree-id2370 . -7031) (undo-tree-id2371 . -5459) (undo-tree-id2372 . -7031) (undo-tree-id2373 . -7031) (undo-tree-id2374 . -5459) (undo-tree-id2375 . -7031) (undo-tree-id2376 . -7031) (undo-tree-id2377 . -5459) (undo-tree-id2378 . -7031) (undo-tree-id2379 . -7031) (undo-tree-id2380 . -5459) (undo-tree-id2381 . -7031) (undo-tree-id2382 . -7031) (undo-tree-id2383 . -5459) (undo-tree-id2384 . -8484) (undo-tree-id2385 . -8484) (undo-tree-id2386 . -8325) (undo-tree-id2387 . -8484) (undo-tree-id2388 . -8484) (undo-tree-id2389 . -8325) (undo-tree-id2390 . -8484) (undo-tree-id2391 . -8484) (undo-tree-id2392 . -8325) (undo-tree-id2393 . -8484) (undo-tree-id2394 . -8484) (undo-tree-id2395 . -8325) (undo-tree-id2396 . -6614) (undo-tree-id2397 . -6614) (undo-tree-id2398 . -5215) (undo-tree-id2399 . -6614) (undo-tree-id2400 . -6614) (undo-tree-id2401 . -5215) (undo-tree-id2402 . -6614) (undo-tree-id2403 . -6614) (undo-tree-id2404 . -5215) (undo-tree-id2405 . -6614) (undo-tree-id2406 . -6614) (undo-tree-id2407 . -5215) (undo-tree-id2408 . -6614) (undo-tree-id2409 . -6614) (undo-tree-id2410 . -6173) (undo-tree-id2411 . -5344) (undo-tree-id2412 . -6293) (undo-tree-id2413 . -6293) (undo-tree-id2414 . -5796) (undo-tree-id2415 . -6611) (undo-tree-id2416 . -6611) (undo-tree-id2417 . -5796) (undo-tree-id2418 . -6611) (undo-tree-id2419 . -6611) (undo-tree-id2420 . -5796) (undo-tree-id2421 . -6611) (undo-tree-id2422 . -6611) (undo-tree-id2423 . -5796) (undo-tree-id2424 . -6611) (undo-tree-id2425 . -6611) (undo-tree-id2426 . -5796) (undo-tree-id2427 . -6611) (undo-tree-id2428 . -6611) (undo-tree-id2429 . -5796) (undo-tree-id2430 . -6611) (undo-tree-id2431 . -6611) (undo-tree-id2432 . -5796) (undo-tree-id2433 . -6611) (undo-tree-id2434 . -6611) (undo-tree-id2435 . -5796) (undo-tree-id2436 . -6611) (undo-tree-id2437 . -6611) (undo-tree-id2438 . -5796) (undo-tree-id2439 . -6611) (undo-tree-id2440 . -6611) (undo-tree-id2441 . -5796) (undo-tree-id2442 . -6611) (undo-tree-id2443 . -6611) (undo-tree-id2444 . -5796) (undo-tree-id2445 . -6611) (undo-tree-id2446 . -6611) (undo-tree-id2447 . -5796) (undo-tree-id2448 . -6611) (undo-tree-id2449 . -6611) (undo-tree-id2450 . -5796) (undo-tree-id2451 . -6611) (undo-tree-id2452 . -6611) (undo-tree-id2453 . -5796) (undo-tree-id2454 . -14691) (undo-tree-id2455 . -16116) (undo-tree-id2456 . -6459) (undo-tree-id2457 . -6459) (undo-tree-id2458 . -5430) (undo-tree-id2459 . -6459) (undo-tree-id2460 . -6459) (undo-tree-id2461 . -5430) (undo-tree-id2462 . -6459) (undo-tree-id2463 . -6459) (undo-tree-id2464 . -5430) (undo-tree-id2465 . -6459) (undo-tree-id2466 . -6459) (undo-tree-id2467 . -5430) (undo-tree-id2468 . -9713) (undo-tree-id2469 . -9709) (undo-tree-id2470 . -9871) (undo-tree-id2471 . 2056) (undo-tree-id2472 . -9783) (undo-tree-id2473 . -10417) (undo-tree-id2474 . -10415) (undo-tree-id2475 . -8954) (undo-tree-id2476 . -10544) (undo-tree-id2477 . -10544) (undo-tree-id2478 . -8954) (undo-tree-id2479 . -10987) (undo-tree-id2480 . -10987) (undo-tree-id2481 . -10164) (undo-tree-id2482 . -11087) (undo-tree-id2483 . -11087) (undo-tree-id2484 . -10164) (undo-tree-id2485 . -11286) (undo-tree-id2486 . -11087) (undo-tree-id2487 . -10164) (undo-tree-id2488 . -11286) (undo-tree-id2489 . -11286) (undo-tree-id2490 . -10164) (undo-tree-id2491 . -11841) (undo-tree-id2492 . -11831) (undo-tree-id2493 . -10998) (undo-tree-id2494 . -11929) (undo-tree-id2495 . -11929) (undo-tree-id2496 . -10945) (undo-tree-id2497 . -12959) (undo-tree-id2498 . -13446) (undo-tree-id2499 . -13446) (undo-tree-id2500 . -12275) (undo-tree-id2501 . -13446) (undo-tree-id2502 . -13446) (undo-tree-id2503 . -12275) (undo-tree-id2504 . -13446) (undo-tree-id2505 . -13446) (undo-tree-id2506 . -12275) (undo-tree-id2507 . -18774) (undo-tree-id2508 . -16166) (undo-tree-id2509 . -16166) (undo-tree-id2510 . -15327) (undo-tree-id2511 . -15575) (undo-tree-id2512 . -15575) (undo-tree-id2513 . -15575) (undo-tree-id2514 . -15575) (undo-tree-id2515 . -15575) (undo-tree-id2516 . -15575) (undo-tree-id2517 . -16116) (undo-tree-id2518 . -16116) (undo-tree-id2519 . -14691) (undo-tree-id2520 . -16116) (undo-tree-id2521 . -16116) (undo-tree-id2522 . -15709) (undo-tree-id2523 . -16116) (undo-tree-id2524 . -16116) (undo-tree-id2525 . -15709) (undo-tree-id2526 . -16116) (undo-tree-id2527 . -16116) (undo-tree-id2528 . -15223) (undo-tree-id2529 . -14689) (undo-tree-id2530 . -14689) (undo-tree-id2531 . -13935) (undo-tree-id2532 . -15338) (undo-tree-id2533 . -15338) (undo-tree-id2534 . -14197) (undo-tree-id2535 . -16116) (undo-tree-id2536 . -16116) (undo-tree-id2537 . -14691) (undo-tree-id2538 . -16116) (undo-tree-id2539 . -16116) (undo-tree-id2540 . -14691) (undo-tree-id2541 . -16116) (undo-tree-id2542 . -16116) (undo-tree-id2543 . -16116) (undo-tree-id2544 . -14691) (undo-tree-id2545 . -16655) (undo-tree-id2546 . -16655) (undo-tree-id2547 . -16656) (undo-tree-id2548 . -16656) (undo-tree-id2549 . -15485) (undo-tree-id2550 . -16719) (undo-tree-id2551 . -16719) (undo-tree-id2552 . -15485) (undo-tree-id2553 . -18763) (undo-tree-id2554 . -18763) (undo-tree-id2555 . -17817) (undo-tree-id2556 . -2191) (undo-tree-id2557 . -2191) (undo-tree-id2558 . -797) (undo-tree-id2559 . -5250) (undo-tree-id2560 . -2191) (undo-tree-id2561 . -797) (undo-tree-id2562 . -5250) (undo-tree-id2563 . -5250) (undo-tree-id2564 . -4369) (undo-tree-id2565 . -5250) (undo-tree-id2566 . -5250) (undo-tree-id2567 . -4369) (undo-tree-id2568 . 13525) (undo-tree-id2569 . 18760) (undo-tree-id2570 . -5250) (undo-tree-id2571 . -5250) (undo-tree-id2572 . -5250) (undo-tree-id2573 . -4369) (undo-tree-id2574 . -5250) (undo-tree-id2575 . -5250) (undo-tree-id2576 . -4369) (undo-tree-id2577 . -5250) (undo-tree-id2578 . -5250) (undo-tree-id2579 . -5250) (undo-tree-id2580 . -5250) (undo-tree-id2581 . -5250) (undo-tree-id2582 . -5250) (undo-tree-id2583 . -5250) (undo-tree-id2584 . -5250) (undo-tree-id2585 . -5250) (undo-tree-id2586 . -5250) (undo-tree-id2587 . -5250) (undo-tree-id2588 . -5250) (undo-tree-id2589 . -5250) (undo-tree-id2590 . -5250) (undo-tree-id2591 . -5250) (undo-tree-id2592 . -5250) (undo-tree-id2593 . -5250) (undo-tree-id2594 . -5250) (undo-tree-id2595 . -5250) (undo-tree-id2596 . -5250) (undo-tree-id2597 . -5250) (undo-tree-id2598 . -5250) (undo-tree-id2599 . -5250) (undo-tree-id2600 . -5250) (undo-tree-id2601 . -5250) (undo-tree-id2602 . -5250) (undo-tree-id2603 . -5250) (undo-tree-id2604 . -5250) (undo-tree-id2605 . -5250) (undo-tree-id2606 . -5250) (undo-tree-id2607 . -5250) (undo-tree-id2608 . -5250) (undo-tree-id2609 . -5250) (undo-tree-id2610 . -5250) (undo-tree-id2611 . -5250) (undo-tree-id2612 . -5250) (undo-tree-id2613 . -4306) (undo-tree-id2614 . -5250) (undo-tree-id2615 . -5250) (undo-tree-id2616 . -5250) (undo-tree-id2617 . -5250) (undo-tree-id2618 . -5250) (undo-tree-id2619 . -5250) (undo-tree-id2620 . -5250) (undo-tree-id2621 . -5250) (undo-tree-id2622 . -5250) (undo-tree-id2623 . -5250) (undo-tree-id2624 . -5250) (undo-tree-id2625 . -5250) (undo-tree-id2626 . -5250) (undo-tree-id2627 . -4219) (undo-tree-id2628 . -5250) (undo-tree-id2629 . -5250) (undo-tree-id2630 . -5250) (undo-tree-id2631 . -5250) (undo-tree-id2632 . -5250) (undo-tree-id2633 . -5250) (undo-tree-id2634 . -5250) (undo-tree-id2635 . -5250) (undo-tree-id2636 . -5250) (undo-tree-id2637 . -5250) (undo-tree-id2638 . -5250) (undo-tree-id2639 . -5250) (undo-tree-id2640 . -5250) (undo-tree-id2641 . -4071) (undo-tree-id2642 . -5250) (undo-tree-id2643 . -5250) (undo-tree-id2644 . -5250) (undo-tree-id2645 . -5250) (undo-tree-id2646 . -5250) (undo-tree-id2647 . -5250) (undo-tree-id2648 . -5250) (undo-tree-id2649 . -5250) (undo-tree-id2650 . -5250) (undo-tree-id2651 . -5250) (undo-tree-id2652 . -5250) (undo-tree-id2653 . -5250) (undo-tree-id2654 . -5250) (undo-tree-id2655 . -3916) (undo-tree-id2656 . -5250) (undo-tree-id2657 . -5250) (undo-tree-id2658 . -5250) (undo-tree-id2659 . -5250) (undo-tree-id2660 . -5250) (undo-tree-id2661 . -5250) (undo-tree-id2662 . -5250) (undo-tree-id2663 . -5250) (undo-tree-id2664 . -5250) (undo-tree-id2665 . -5250) (undo-tree-id2666 . -5250) (undo-tree-id2667 . -5250) (undo-tree-id2668 . -5250) (undo-tree-id2669 . -3700) (undo-tree-id2670 . -5250) (undo-tree-id2671 . -5250) (undo-tree-id2672 . -5250) (undo-tree-id2673 . -5250) (undo-tree-id2674 . -5250) (undo-tree-id2675 . -5250) (undo-tree-id2676 . -5250) (undo-tree-id2677 . -5250) (undo-tree-id2678 . -5250) (undo-tree-id2679 . -5250) (undo-tree-id2680 . -5250) (undo-tree-id2681 . -5250) (undo-tree-id2682 . -5250) (undo-tree-id2683 . -5250) (undo-tree-id2684 . -5250) (undo-tree-id2685 . -5250) (undo-tree-id2686 . -5151) (undo-tree-id2687 . -5151) (undo-tree-id2688 . -3549) (undo-tree-id2689 . -5151) (undo-tree-id2690 . -5151) (undo-tree-id2691 . -5151) (undo-tree-id2692 . -5151) (undo-tree-id2693 . -5151) (undo-tree-id2694 . -5151) (undo-tree-id2695 . -5151) (undo-tree-id2696 . -5151) (undo-tree-id2697 . -5151) (undo-tree-id2698 . -5151) (undo-tree-id2699 . -5151) (undo-tree-id2700 . -4851) (undo-tree-id2701 . -4851) (undo-tree-id2702 . -3192) (undo-tree-id2703 . -4851) (undo-tree-id2704 . -4851) (undo-tree-id2705 . -4851) (undo-tree-id2706 . -4851) (undo-tree-id2707 . -4851) (undo-tree-id2708 . -4851) (undo-tree-id2709 . -4851) (undo-tree-id2710 . -4851) (undo-tree-id2711 . -4851) (undo-tree-id2712 . -4851) (undo-tree-id2713 . -4851) (undo-tree-id2714 . -4485) (undo-tree-id2715 . -4485) (undo-tree-id2716 . -2758) (undo-tree-id2717 . -4485) (undo-tree-id2718 . -4485) (undo-tree-id2719 . -4485) (undo-tree-id2720 . -4485) (undo-tree-id2721 . -4485) (undo-tree-id2722 . -4485) (undo-tree-id2723 . -4485) (undo-tree-id2724 . -4485) (undo-tree-id2725 . -4485) (undo-tree-id2726 . -4485) (undo-tree-id2727 . -4485) (undo-tree-id2728 . -4001) (undo-tree-id2729 . -4001) (undo-tree-id2730 . -2345) (undo-tree-id2731 . -4001) (undo-tree-id2732 . -4001) (undo-tree-id2733 . -4001) (undo-tree-id2734 . -4001) (undo-tree-id2735 . -4001) (undo-tree-id2736 . -4001) (undo-tree-id2737 . -4001) (undo-tree-id2738 . -4001) (undo-tree-id2739 . -4001) (undo-tree-id2740 . -4001) (undo-tree-id2741 . -4001) (undo-tree-id2742 . -4000) (undo-tree-id2743 . -4000) (undo-tree-id2744 . -2276) (undo-tree-id2745 . -4000) (undo-tree-id2746 . -4000) (undo-tree-id2747 . -4000) (undo-tree-id2748 . -4000) (undo-tree-id2749 . -4000) (undo-tree-id2750 . -4000) (undo-tree-id2751 . -4000) (undo-tree-id2752 . -4000) (undo-tree-id2753 . -4000) (undo-tree-id2754 . -4000) (undo-tree-id2755 . -4000) (undo-tree-id2756 . -3916) (undo-tree-id2757 . -3916) (undo-tree-id2758 . -2199) (undo-tree-id2759 . -3916) (undo-tree-id2760 . -3916) (undo-tree-id2761 . -3916) (undo-tree-id2762 . -3916) (undo-tree-id2763 . -3916) (undo-tree-id2764 . -3916) (undo-tree-id2765 . -3916) (undo-tree-id2766 . -3916) (undo-tree-id2767 . -3916) (undo-tree-id2768 . -3916) (undo-tree-id2769 . -3916) (undo-tree-id2770 . -3754) (undo-tree-id2771 . -3754) (undo-tree-id2772 . -2008) (undo-tree-id2773 . -3754) (undo-tree-id2774 . -3754) (undo-tree-id2775 . -3754) (undo-tree-id2776 . -3754) (undo-tree-id2777 . -3754) (undo-tree-id2778 . -3754) (undo-tree-id2779 . -3754) (undo-tree-id2780 . -3754) (undo-tree-id2781 . -3754) (undo-tree-id2782 . -3754) (undo-tree-id2783 . -3754) (undo-tree-id2784 . -3656) (undo-tree-id2785 . -3656) (undo-tree-id2786 . -1767) (undo-tree-id2787 . -3656) (undo-tree-id2788 . -3656) (undo-tree-id2789 . -3656) (undo-tree-id2790 . -3656) (undo-tree-id2791 . -3656) (undo-tree-id2792 . -3656) (undo-tree-id2793 . -3656) (undo-tree-id2794 . -3656) (undo-tree-id2795 . -3656) (undo-tree-id2796 . -3656) (undo-tree-id2797 . -3656) (undo-tree-id2798 . -3476) (undo-tree-id2799 . -3476) (undo-tree-id2800 . -1521) (undo-tree-id2801 . -3476) (undo-tree-id2802 . -3476) (undo-tree-id2803 . -3476) (undo-tree-id2804 . -3476) (undo-tree-id2805 . -3476) (undo-tree-id2806 . -3476) (undo-tree-id2807 . -3476) (undo-tree-id2808 . -3476) (undo-tree-id2809 . -3476) (undo-tree-id2810 . -3476) (undo-tree-id2811 . -3476) (undo-tree-id2812 . -3192) (undo-tree-id2813 . -3192) (undo-tree-id2814 . -1361) (undo-tree-id2815 . -3192) (undo-tree-id2816 . -3192) (undo-tree-id2817 . -3192) (undo-tree-id2818 . -3192) (undo-tree-id2819 . -3192) (undo-tree-id2820 . -3192) (undo-tree-id2821 . -3192) (undo-tree-id2822 . -3192) (undo-tree-id2823 . -3192) (undo-tree-id2824 . -3192) (undo-tree-id2825 . -3192) (undo-tree-id2826 . -2819) (undo-tree-id2827 . -2819) (undo-tree-id2828 . -797) (undo-tree-id2829 . -2819) (undo-tree-id2830 . -2819) (undo-tree-id2831 . -2819) (undo-tree-id2832 . -2819) (undo-tree-id2833 . -2819) (undo-tree-id2834 . -2455) (undo-tree-id2835 . -2455) (undo-tree-id2836 . -274) (undo-tree-id2837 . -2455) (undo-tree-id2838 . -2455) (undo-tree-id2839 . -2455) (undo-tree-id2840 . -2455) (undo-tree-id2841 . -2455) (undo-tree-id2842 . -2455) (undo-tree-id2843 . -2455) (undo-tree-id2844 . -2455) (undo-tree-id2845 . -2455) (undo-tree-id2846 . -2455) (undo-tree-id2847 . -2455) (undo-tree-id2848 . -1941) (undo-tree-id2849 . -1941) (undo-tree-id2850 . -1941) (undo-tree-id2851 . -1941) (undo-tree-id2852 . -1941) (undo-tree-id2853 . -1941) (undo-tree-id2854 . -1941) (undo-tree-id2855 . -1941) (undo-tree-id2856 . -1941) (undo-tree-id2857 . -1941) (undo-tree-id2858 . -1941) (undo-tree-id2859 . -1941) (undo-tree-id2860 . -1941) (undo-tree-id2861 . -1873) (undo-tree-id2862 . -1873) (undo-tree-id2863 . -1873) (undo-tree-id2864 . -1873) (undo-tree-id2865 . -1873) (undo-tree-id2866 . -1873) (undo-tree-id2867 . -1873) (undo-tree-id2868 . -1873) (undo-tree-id2869 . -1873) (undo-tree-id2870 . -1873) (undo-tree-id2871 . -1873) (undo-tree-id2872 . -1873) (undo-tree-id2873 . -1873) (undo-tree-id2874 . -1807) (undo-tree-id2875 . -1807) (undo-tree-id2876 . -1807) (undo-tree-id2877 . -1807) (undo-tree-id2878 . -1807) (undo-tree-id2879 . -1807) (undo-tree-id2880 . -1807) (undo-tree-id2881 . -1807) (undo-tree-id2882 . -1807) (undo-tree-id2883 . -1807) (undo-tree-id2884 . -1807) (undo-tree-id2885 . -1807) (undo-tree-id2886 . -1807) (undo-tree-id2887 . -1766) (undo-tree-id2888 . -1766) (undo-tree-id2889 . -1766) (undo-tree-id2890 . -1766) (undo-tree-id2891 . -1766) (undo-tree-id2892 . -1766) (undo-tree-id2893 . -1766) (undo-tree-id2894 . -1766) (undo-tree-id2895 . -1766) (undo-tree-id2896 . -1766) (undo-tree-id2897 . -1766) (undo-tree-id2898 . -1766) (undo-tree-id2899 . -1766) (undo-tree-id2900 . -1591) (undo-tree-id2901 . -1591) (undo-tree-id2902 . -1591) (undo-tree-id2903 . -1591) (undo-tree-id2904 . -1591) (undo-tree-id2905 . -1591) (undo-tree-id2906 . -1591) (undo-tree-id2907 . -1591) (undo-tree-id2908 . -1591) (undo-tree-id2909 . -1591) (undo-tree-id2910 . -1591) (undo-tree-id2911 . -1591) (undo-tree-id2912 . -1591) (undo-tree-id2913 . -1404) (undo-tree-id2914 . -1404) (undo-tree-id2915 . -1404) (undo-tree-id2916 . -1404) (undo-tree-id2917 . -1404) (undo-tree-id2918 . -1404) (undo-tree-id2919 . -1404) (undo-tree-id2920 . -1404) (undo-tree-id2921 . -1404) (undo-tree-id2922 . -1404) (undo-tree-id2923 . -1404) (undo-tree-id2924 . -1404) (undo-tree-id2925 . -1404) (undo-tree-id2926 . -1197) (undo-tree-id2927 . -1197) (undo-tree-id2928 . -1197) (undo-tree-id2929 . -1197) (undo-tree-id2930 . -1197) (undo-tree-id2931 . -1197) (undo-tree-id2932 . -1197) (undo-tree-id2933 . -1197) (undo-tree-id2934 . -1197) (undo-tree-id2935 . -1197) (undo-tree-id2936 . -1197) (undo-tree-id2937 . -1197) (undo-tree-id2938 . -1197) (undo-tree-id2939 . -1197) (undo-tree-id2940 . -1197) (undo-tree-id2941 . -1197) (undo-tree-id2942 . -1197) (undo-tree-id2943 . -1197) (undo-tree-id2944 . -1197) (undo-tree-id2945 . -1197) (undo-tree-id2946 . -1197) (undo-tree-id2947 . -1197) (undo-tree-id2948 . -1197) (undo-tree-id2949 . -1197) (undo-tree-id2950 . -1197) (undo-tree-id2951 . -1197) (undo-tree-id2952 . -1197) (undo-tree-id2953 . -1197) (undo-tree-id2954 . -1197) (undo-tree-id2955 . -1197) (undo-tree-id2956 . -1197) (undo-tree-id2957 . -1197) (undo-tree-id2958 . -1197) (undo-tree-id2959 . -1121) (undo-tree-id2960 . -1121) (undo-tree-id2961 . -1121) (undo-tree-id2962 . -1121) (undo-tree-id2963 . -1121) (undo-tree-id2964 . -1121) (undo-tree-id2965 . -1121) (undo-tree-id2966 . -1121) (undo-tree-id2967 . -1121) (undo-tree-id2968 . -1121) (undo-tree-id2969 . -1121) (undo-tree-id2970 . -1121) (undo-tree-id2971 . -1121) (undo-tree-id2972 . -959) (undo-tree-id2973 . -959) (undo-tree-id2974 . -959) (undo-tree-id2975 . -959) (undo-tree-id2976 . -959) (undo-tree-id2977 . -959) (undo-tree-id2978 . -959) (undo-tree-id2979 . -959) (undo-tree-id2980 . -959) (undo-tree-id2981 . -959) (undo-tree-id2982 . -959) (undo-tree-id2983 . -959) (undo-tree-id2984 . -959) (undo-tree-id2985 . -715) (undo-tree-id2986 . -715) (undo-tree-id2987 . -715) (undo-tree-id2988 . -715) (undo-tree-id2989 . -715) (undo-tree-id2990 . -715) (undo-tree-id2991 . -715) (undo-tree-id2992 . -715) (undo-tree-id2993 . -715) (undo-tree-id2994 . -715) (undo-tree-id2995 . -715) (undo-tree-id2996 . -715) (undo-tree-id2997 . -715) (undo-tree-id2998 . -515) (undo-tree-id2999 . -515) (undo-tree-id3000 . -515) (undo-tree-id3001 . -515) (undo-tree-id3002 . -515) (undo-tree-id3003 . -515) (undo-tree-id3004 . -515) (undo-tree-id3005 . -515) (undo-tree-id3006 . -515) (undo-tree-id3007 . -515) (undo-tree-id3008 . -515) (undo-tree-id3009 . -515) (undo-tree-id3010 . -515) (undo-tree-id3011 . -515) (undo-tree-id3012 . -515) (undo-tree-id3013 . -515) (undo-tree-id3014 . -515) (undo-tree-id3015 . -515) (undo-tree-id3016 . -104) (undo-tree-id3017 . -104) (undo-tree-id3018 . -104) (undo-tree-id3019 . -104) (undo-tree-id3020 . -104) (undo-tree-id3021 . -104) (undo-tree-id3022 . -104) (undo-tree-id3023 . -104) (undo-tree-id3024 . -104) (undo-tree-id3025 . -104) (undo-tree-id3026 . -104) (undo-tree-id3027 . -104) (undo-tree-id3028 . -104) (undo-tree-id3029 . -15) (undo-tree-id3030 . -15) (undo-tree-id3031 . -15) (undo-tree-id3032 . -15) (undo-tree-id3033 . -15) (undo-tree-id3034 . -15) (undo-tree-id3035 . -15) (undo-tree-id3036 . -15) (undo-tree-id3037 . -15) (undo-tree-id3038 . -15) (undo-tree-id3039 . -15) (undo-tree-id3040 . -15) (undo-tree-id3041 . -15) (undo-tree-id3042 . -15) (undo-tree-id3043 . -15) (undo-tree-id3044 . -15) (undo-tree-id3045 . -15) (undo-tree-id3046 . -15) (undo-tree-id3047 . -15) 7288 (t 25471 26600 992659 43000)) nil (25471 26640 885278 133000) 0 nil])
([nil nil ((11496 . 30271) (#("* Acting on backlinks
  Backlinks are a pivotal part of this workflow. A file has a backlink if another file links to it. As a core part of my workflow revolves around index files (or Maps of Contents) and those are files that basically everything connected to that subject links to them, they end up being files with a lot of backlinks. I have some functions here that act on backlinks which I consider useful. Excluded from this list are two defmethods I use concerning backlinks as I define all my defmethods in the first part of the config.

  The first is org-roam-node-backlinkscount, a function I initially found on the OR wiki on github, which finds the number of backlinks a note has and formats them in a nice string. Its meant to be used with org-roam-node-display-template to show the number of backlinks in the org-roam-node-UI. The second is an almost identical function, but instead of returning a formatted string it returns a number. That is meant to be used with org-roam-node-sort-by-backlinks, a function defined below which sorts nodes by the number of backlinks they have. Number comparison is much easier than comparison of string representing numbers, and due to the extra formatting applied (which I like for the purpose that function has) I couldn't find how to convert that string to a number so I just made a rewrite with that small change.  

  #+BEGIN_SRC elisp :tangle yes

    (defvar-local org-roam-backlinks-files nil
      \"Buffer local variable displaying a list of the absolute paths
      of all the files that are backlinked to current node. These are
      not added by default, and as such this variable has the value
      nil but they can be added by running the
      `org-roam-backlinks-find-files' function on a node.\")

    (defvar org-roam-backlinks-pdfs nil
      \"After running `org-roam-export-backlinks-to-latex-pdf', to
      export a node and all its backlinks to pdf, the value of this
      variable in the original node's buffer will become a list of
      all the pdfs that were created. This is to ease the process of
      combining them as the value of this variable can then be passed
      to a program such as pdftk to combine them.\")

    (defun org-roam-backlinks-sort-by-backlinks (completion-a completion-b)
      \"Sorting function for org-roam that sorts the list of nodes by
    the number of backlinks. This is the sorting function in
    `org-roam-backlinks-node-find-by-backlinks'\"
      (let ((node-a (cdr completion-a))
	    (node-b (cdr completion-b)))
	(>= (org-roam-node-backlinkscount-number node-a)
	    (org-roam-node-backlinkscount-number node-b))))

    (defun org-roam-backlinks-node-find-by-backlinks ()
      \"Essentially works like `org-roam-node-find' (although it uses
    a combination of `find-file' and `org-roam-node-read' to
    accomplish that and not `org-roam-node-find' as only
    `org-roam-node-read' can take a sorting function as an argument)
    but the list of nodes is sorted by the number of backlinks
    instead of most recent nodes. Sorting is done with
    `org-roam-backlinks-sort-by-backlinks'\"
      (interactive)
      (find-file (org-roam-node-file (org-roam-node-read nil nil #'org-roam-node-sort-by-backlinks))))

    (defun org-roam-backlinks-query ()
      \"Simple org-roam query function that stores the IDs of all the
      files that link to the node at point. This is a modified part
      of the `org-roam-backlinks-get' function keeping only the part
      necessary for `org-roam-backlinks-find-files' to work as this is a
      complimentary function to that\"
      (org-roam-db-query
       [:select [source dest]
		:from links
		:where (= dest $s1)
		:and (= type \"id\")]
       (org-roam-node-id (org-roam-node-at-point))))

    (defun org-roam-backlinks-find-files ()
	\"Get all nodes that link to the node at point with the
	`org-roam-backlink-query' function, find their absolute path
	and save a list of those paths to the buffer local variable
	`org-roam-backlinks'.

      With the list, you can act on all those files together. This is
      exceptionally useful with index files as it allows you to do an
      action on all files linked to this index automatically.\"
	(interactive)
	(let ((backlinks (length (org-roam-backlinks-query))))
	  (dotimes (number backlinks)
	    (let* ((id (car (nth number (org-roam-backlinks-query))))
		   (node (org-roam-node-from-id id)))
	      (setq-local org-roam-backlinks-files (cons (org-roam-node-file node) org-roam-backlinks-files))))
	  org-roam-backlinks-files))

    (defun org-roam-backlinks-export-to-latex-pdf ()
      \"Export the current buffer and every buffer that mentions it to
    a pdf through the org-latex export. Makes use of the
    `org-roam-backlinks-find-files' function to find all the
    backlinks. Also saves all the pdf names in a variable called
    `org-roam-backlinks-pdfs'. These names can then be passed to
    something like pdftk to merge them into one pdf\"
      (interactive)
      (save-current-buffer
	(let ((backlinks (cons (buffer-file-name) org-roam-backlinks-files))
	      (org-startup-with-latex-preview nil))
	  (while backlinks
	    (find-file (car backlinks))
	    (org-latex-export-to-pdf)
	    (setq org-roam-backlinks-pdfs
		  (cons (concat (file-name-sans-extension (car backlinks)) \".pdf\") org-roam-backlinks-pdfs))
	    (setq backlinks (cdr backlinks)))))
      (message \"%s\" \"Done!\"))

  #+END_SRC

** Org-roam-backlinks-search
This section is about a small \"package\" I recently wrote. Its a backlink selector functionality for org-roam. I thought it was a neat idea to be able to navigate from one node to its backlinks and repeat recursively so I wrote this code for it. Once I polish it further, I might release some of this to MELPA. For now it will stay here.

#+BEGIN_SRC elisp :tangle yes

  (defcustom org-roam-backlinks-choices '(\"View Backlinks\" \"Go to Node\" \"Add to Zetteldesk\" \"Quit\")
    \"List of choices for `org-roam-backlinks-node-read'.
  Check that function's docstring for more info about these.\")

  (defun org-roam-backlinks-query* (NODE)
    \"Gets the backlinks of NODE with `org-roam-db-query'.\"
    (org-roam-db-query
	  [:select [source dest]
		   :from links
		   :where (= dest $s1)
		   :and (= type \"id\")]
	  (org-roam-node-id NODE)))

  (defun org-roam-backlinks-p (SOURCE NODE)
    \"Predicate function that checks if NODE is a backlink of SOURCE.\"
    (let* ((source-id (org-roam-node-id SOURCE))
	   (backlinks (org-roam-backlinks-query* SOURCE))
	   (id (org-roam-node-id NODE))
	   (id-list (list id source-id)))
      (member id-list backlinks)))

  (defun org-roam-backlinks-poi-or-moc-p (NODE)
    \"Check if NODE has the tag POI or the tag MOC.  Return t if it does.\"
    (or (string-equal (car (org-roam-node-tags NODE)) \"POI\")
	(string-equal (car (org-roam-node-tags NODE)) \"MOC\")))

  (defun org-roam-backlinks--read-node-backlinks (source)
    \"Runs `org-roam-node-read' on the backlinks of SOURCE.
  The predicate used as `org-roam-node-read''s filter-fn is
  `org-roam-backlinks-p'.\"
    (org-roam-node-read nil (apply-partially #'org-roam-backlinks-p source)))

  (defun org-roam-backlinks-node-read (node)
    \"Read a NODE and run `org-roam-backlinks--read-node-backlinks'.
  Upon selecting a backlink, prompt the user for what to do with
  the backlink. The prompt is created with `completing-read' with
  valid options being everything in the list
  `org-roam-backlinks-choices'.

  If the user decides to view the selected node's backlinks, the
  function recursively runs itself with the selection as its
  argument. If they decide they want to go to the selected node,
  the function runs `find-file' and the file associated to that
  node. Lastly, if they choose to quit, the function exits
  silently.

  There is however also the option to add the node to the current
  `zetteldesk-desktop'. `zetteldesk.el' is a package I have written
  to extend org-roam and naturally I wanted to include some
  interaction with it in this function.\"
    (let* ((backlink (org-roam-backlinks--read-node-backlinks node))
	   (choice (completing-read \"What to do with NODE: \"
				    org-roam-backlinks-choices)))
      (cond
       ((string-equal
	 choice
	 (car org-roam-backlinks-choices))
	(org-roam-backlinks-node-read backlink))
       ((string-equal
	 choice
	 (cadr org-roam-backlinks-choices))
	(find-file (org-roam-node-file backlink)))
       ((string-equal
	 choice
	 (caddr org-roam-backlinks-choices))
	(zetteldesk-add-node-to-desktop backlink))
       ((string-equal
	 choice
	 (cadddr org-roam-backlinks-choices))))))

  (defun org-roam-backlinks-search ()
    \"Select an `org-roam-node' and recursively search its backlinks.

  This function is a starter function for
  `org-roam-backlinks-node-read' which gets the initial node
  selection from `org-roam-node-list'. For more information about
  this function, check `org-roam-backlinks-node-read'.\"
    (interactive)
    (let ((node (org-roam-node-read)))
      (org-roam-backlinks-node-read node)))

  (defun org-roam-backlinks-search-from-moc-or-poi ()
    \"`org-roam-backlinks-search' with an initial selection filter.

  Since nodes tagged as \\\"MOC\\\" or \\\"POI\\\" are the entry points to
  my personal zettelkasten, I have this helper function which is
  identical to `org-roam-backlinks-search' but filters initial
  selection to only those notes. That way, they initial selection
  has a point as it will be on a node that has a decent amount of
  backlinks.\"
    (interactive)
    (let ((node (org-roam-node-read nil #'org-roam-backlinks-poi-or-moc-p)))
      (org-roam-backlinks-node-read node)))

#+END_SRC

#+RESULTS:
: org-roam-backlinks-search-from-moc-or-poi
  
** Find intersecting backlinks of multiple nodes
This section is about a [[https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11][discussion]] I recently had in the Org-Roam Discourse. I mentioned that I have made a recursive backlinks searcher for org-roam nodes (which is in the above section) and I was asked if I could expand this sort of idea and make a function that finds the backlinks of a number of different nodes. There will be two major parts to this section. The first, is collecting the list of nodes which are backlinked to a number of nodes selected by the user and the second is displaying this list to the user, allowing them to select one and doing something with that.

*** Collect the list of nodes
First, we need to prompt the user to select the nodes they want.

#+BEGIN_SRC elisp :tangle yes

  (defvar org-roam-backlinks-selected-nodes '()
    \"List of nodes selected in `org-roam-backlinks--select-nodes'.\")

  (defun org-roam-backlinks--select-nodes (NUM)
    \"Select NUM `org-org-roam-nodes' and return a list of those.\"
    (setq org-roam-backlinks-selected-nodes '())
    (dotimes (i NUM)
      (let ((node (org-roam-node-read)))
	(add-to-list 'org-roam-backlinks-selected-nodes node)))
    org-roam-backlinks-selected-nodes)
  
#+END_SRC

Then, get a list of lists containing all their backlinks.

#+BEGIN_SRC elisp :tangle yes

  (defvar org-roam-backlinks-selected-node-backlinks '()
    \"List of backlinks of nodes in `org-roam-backlinks-selected-nodes'.

  This list is filled using `org-roam-backlinks-get-node-backlinks'\")

  (defun org-roam-backlinks-get-node-backlinks (NUM)
    \"Get a list of lists of backlinks of the nodes in NODE-LIST.\"
    (setq org-roam-backlinks-selected-node-backlinks '())
    (let ((node-list (org-roam-backlinks--select-nodes NUM)))
      (dolist (node node-list)
	(let ((backlinks (org-roam-backlinks-query* node))
	      (backlink-ids))
	  (dolist (id backlinks)
	    (add-to-list 'backlink-ids (car id)))
	  (add-to-list 'org-roam-backlinks-selected-node-backlinks backlink-ids)))
      org-roam-backlinks-selected-node-backlinks))

#+END_SRC

And then, take these lists and find their intersection.

#+BEGIN_SRC elisp :tangle yes

  (defun org-roam-backlinks-id-intersection (list1 list2)
    \"Find intersection of LIST1 and LIST2 using `cl-loop'.\"
    (cl-loop for id in list1
	     if (member id list2)
	     collect id into ids
	     finally (return ids)))

  (defun org-roam-backlinks-get-ids (NUM)
    \"Get the ids of all nodes which are backlinks of the selected nodes.

  Node selection is done with the underlying function
  `org-roam-backlinks--select-nodes'.\"
    (let* ((backlink-ids (org-roam-backlinks-get-node-backlinks NUM))
	   (result (car backlink-ids)))
      (dolist (ids backlink-ids)
	(setq result (org-roam-backlinks-id-intersection result ids)))
      result))

#+END_SRC

The end result is that calling ~org-roam-backlinks-get-ids~ will call all the necessary functions. This includes prompting for NUM org-roam-nodes, finding each ones backlinks and their intersection. It returns a list of ids, which can then be passed to the functions of the other section. None of these are interactive as they are the backbone of the setup.

*** Modifying org-roam-node-read to accept a list of nodes
Since we have collected a list of nodes (in the form of their ids) that can not be reproduced with a simple predicate, we need to make a version of ~org-roam-node-read~ which can take this list as an argument. Luckily for me, I have already encountered this problem before in zetteldesk so I have the code ready. Changing them to start with org-roam-backlinks instead of zetteldesk-ref, we get these.

#+BEGIN_SRC elisp :tangle yes

  (defun org-roam-backlinks-roam-node-read--completions* (node-list &optional filter-fn sort-fn)
    \"Run `org-roam-node-read--completions' with NODE-LIST being a list of nodes.

  Typically, the function takes `org-roam-node-list' as the initial
  list of nodes and creates the alist `org-roam-node-read'
  uses.  However, it can be helpful to supply the list of nodes
  yourself, when the predicate function used cannot be inferred
  through a filter function of the form this function
  takes.  FILTER-FN and SORT-FN are the same as in
  `org-roam-node-read--completions'.  The resulting alist is to be
  used with `org-roam-backlinks-roam-node-read*'.\"
    (let* ((template (org-roam-node--process-display-format org-roam-node-display-template))
	   (nodes node-list)
	   (nodes (mapcar (lambda (node)
			    (org-roam-node-read--to-candidate node template)) nodes))
	   (nodes (if filter-fn
		      (cl-remove-if-not
		       (lambda (n) (funcall filter-fn (cdr n)))
		       nodes)
		    nodes))
	   (sort-fn (or sort-fn
			(when org-roam-node-default-sort
			  (intern (concat \"org-roam-node-read-sort-by-\"
					  (symbol-name org-roam-node-default-sort))))))
	   (nodes (if sort-fn (seq-sort sort-fn nodes)
		    nodes)))
      nodes))

  (defun org-roam-backlinks-roam-node-read* (node-list &optional initial-input filter-fn sort-fn require-match prompt)
    \"Run `org-roam-node-read' with the nodes supplied by NODE-LIST.

  NODE-LIST is a list of nodes passed to
  `org-roam-backlinks-roam-node-read--completions*', which creates an alist of
  nodes with the proper formatting to be used in this
  function.  This is for those cases where it is helpful to use your
  own list of nodes, because a predicate function can not filter
  them in the way you want easily.

  INITIAL-INPUT, SORT-FN, FILTER-FN, REQUIRE-MATCH, PROMPT are the
  same as in `org-roam-node-read'.\"
    (let* ((nodes (org-roam-backlinks-roam-node-read--completions* node-list filter-fn sort-fn))
	   (prompt (or prompt \"Node: \"))
	   (node (completing-read
		  prompt
		  (lambda (string pred action)
		    (if (eq action 'metadata)
			`(metadata
			  ;; Preserve sorting in the completion UI if a sort-fn is used
			  ,@(when sort-fn
			      '((display-sort-function . identity)
				(cycle-sort-function . identity)))
			  (annotation-function
			   . ,(lambda (title)
				(funcall org-roam-node-annotation-function
					 (get-text-property 0 'node title))))
			  (category . org-roam-node))
		      (complete-with-action action nodes string pred)))
		  nil require-match initial-input 'org-roam-node-history)))
      (or (cdr (assoc node nodes))
	  (org-roam-node-create :title node))))

#+END_SRC

*** COMMENT Interactive functions and user interface
Finally, we are down to the easiest part. Having written the backbone of the process, we need to allow the user to select a single node from the possible choices in an interactive way and then write the end user functions which take this node and do things with it. For now, I will implement an ~org-roam-node-find~ style function and a connection to the above section to kickstart ~org-roam-backlinks-node-read~ with this instead of what ~org-roam-backlinks-search~ does. These functions are shown below

#+BEGIN_SRC elisp :tangle yes

  (defun org-roam-backlinks-multi-node-read ()
    \"Read a node from intersecting backlinks of multiple nodes.

  This is the low-level interactive function which is used for
  collecting the nodes which are backlinks to a number of selected
  nodes. This function calls `org-roam-backlinks-get-ids' for a lot
  of the work, which returns a list of ids of all nodes which are
  backlinked to some selected nodes. For more, check its
  docstring. With this list of ids, this function runs
  `org-roam-backlinks-roam-node-read*', which is a modified
  `org-roam-node-read' which accepts a list of nodes as its
  argument. This function returns the selected node to be used in
  the higher level functions.\"
    (interactive)
    (let* ((num (read-number \"Number of Nodes: \"))
	   (ids (org-roam-backlinks-get-ids num))
	   (nodes (cl-loop for id in ids
			   collect (org-roam-node-from-id id) into nodes
			   finally (return nodes))))
      (org-roam-backlinks-roam-node-read* nodes)))

  (defun org-roam-backlinks-multi-node-find ()
    \"Find node from intersecting backlinks of multiple nodes.

  This is a wrapper function for
  `org-roam-backlinks-multi-node-read', which finds the file
  associated with the selected node instead of returning it.\"
    (interactive)
    (let ((node (org-roam-backlinks-multi-node-read)))
      (find-file (org-roam-node-file node))))

  (defun org-roam-backlinks-multi-search ()
    \"Select an `org-roam-node' and recursively search its backlinks.

  This function is an extension of the `org-roam-backlinks-search'
  function which is used for recursively searching a node's
  backlinks using `org-roam-backlinks-node-read'. Its main
  difference is that it kickstarts the system not by selecting a
  node but by running `org-roam-backlinks-multi-node-read'.  This
  means that the selected node will be the intersection of
  backlinks of a number of nodes selected from that function.\"
    (interactive)
    (let ((node (org-roam-backlinks-multi-node-read)))
      (org-roam-backlinks-node-read node)))

#+END_SRC

" 0 1 (fontified t face (org-superstar-header-bullet org-level-1) composition (0 1 [9673])) 1 2 (fontified t face org-level-1) 2 15 (fontified t face org-level-1) 15 21 (fontified t face org-level-1) 21 22 (fontified t) 22 1371 (fontified t) 1371 1372 (fontified t) 1372 1403 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 1403 1404 (fontified t font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line) 1404 1410 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1410 1422 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1422 1423 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1423 1441 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 1441 1447 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 1447 1458 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1458 1515 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1515 1713 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1713 1730 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1730 1731 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1731 1734 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1734 1739 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1739 1742 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1742 1764 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1764 1772 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1772 1778 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1778 1779 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1779 1796 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 1796 1797 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 1797 1802 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 1802 1813 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1813 1829 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1829 1867 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1867 1941 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1941 2008 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2008 2197 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2197 2205 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2205 2210 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2210 2211 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2211 2220 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 2220 2226 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 2226 2227 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 2227 2229 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 2229 2247 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 2247 2282 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2282 2411 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2411 2420 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2420 2426 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2426 2427 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2427 2431 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2431 2452 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2452 2454 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2454 2462 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2462 2465 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2465 2579 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2579 2632 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2632 2638 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2638 2643 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2643 2644 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2644 2652 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 2652 2662 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 2662 2685 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 2685 2695 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2695 2720 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2720 2738 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2738 2780 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2780 2789 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2789 2796 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2796 2814 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2814 2848 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2848 2866 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2866 2881 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2881 2899 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 2899 2904 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 2904 3068 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3068 3077 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3077 3083 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3083 3084 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3084 3086 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3086 3104 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3104 3106 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3106 3114 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3114 3125 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3125 3127 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3127 3236 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3236 3241 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3241 3242 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3242 3266 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 3266 3276 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3276 3421 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3421 3443 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3443 3497 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3497 3514 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3514 3520 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3520 3526 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3526 3586 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3586 3612 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3612 3620 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3620 3627 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 3627 3642 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3642 3644 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3644 3649 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 3649 3658 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3658 3664 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 3664 3680 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3680 3684 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 3684 3693 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3693 3697 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 3697 3759 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3759 3764 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3764 3765 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3765 3782 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 3782 3783 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 3783 3786 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 3786 3791 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 3791 3794 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 3794 3799 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3799 3856 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3856 3879 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3879 3916 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3916 3977 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3977 3979 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 3979 3997 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 3997 4203 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4203 4206 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4206 4217 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4217 4221 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4221 4224 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4224 4275 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4275 4279 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4279 4286 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4286 4312 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4312 4316 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4316 4417 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4417 4427 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4427 4446 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4446 4452 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4452 4502 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4502 4508 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4508 4535 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4535 4541 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4541 4545 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4545 4550 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4550 4555 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4555 4556 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4556 4574 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 4574 4581 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 4581 4594 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 4594 4598 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4598 4604 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4604 4730 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4730 4747 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4747 4748 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4748 4751 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4751 4756 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4756 4759 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4759 4856 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4856 4873 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4873 4874 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4874 4879 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 4879 4916 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4916 4968 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 4968 4969 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4969 4976 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4976 4987 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4987 4996 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4996 5015 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5015 5018 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5018 5021 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5021 5076 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5076 5082 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5082 5086 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5086 5135 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5135 5140 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5140 5221 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5221 5225 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5225 5243 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5243 5244 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5244 5311 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5311 5317 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5317 5336 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5336 5337 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5337 5351 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5351 5355 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5355 5401 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5401 5405 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5405 5406 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5406 5413 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5413 5417 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 5417 5428 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line) 5428 5429 (fontified t face org-block-end-line) 5429 5430 (fontified nil) 5430 5431 (fontified nil face org-hide) 5431 5432 (fontified nil face (org-superstar-header-bullet org-level-2) composition (2 1 [9675])) 5432 5433 (fontified nil face org-level-2) 5433 5458 (fontified nil face org-level-2) 5458 5797 (fontified nil) 5797 5826 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-begin-line) 5826 5827 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-begin-line help-echo nil) 5827 5831 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5831 5840 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 5840 5841 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5841 5867 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-variable-name-face org-block) help-echo nil src-block t) 5867 5870 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5870 5886 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 5886 5887 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5887 5899 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 5899 5900 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5900 5919 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 5919 5920 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5920 5926 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 5926 5932 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5932 5954 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 5954 5982 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 5982 6046 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 6046 6049 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6049 6052 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6052 6057 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 6057 6058 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6058 6083 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 6083 6091 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6091 6095 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6095 6129 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 6129 6146 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 6146 6149 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 6149 6177 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6177 6184 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 6184 6204 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6204 6209 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 6209 6221 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6221 6227 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 6227 6246 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6246 6250 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 6250 6259 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6259 6263 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 6263 6299 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6299 6304 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 6304 6305 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6305 6325 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 6325 6344 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6344 6409 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 6409 6410 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6410 6415 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6415 6419 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 6419 6459 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6459 6617 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6617 6622 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 6622 6623 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6623 6654 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 6654 6666 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6666 6735 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 6735 6741 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6741 6743 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 6743 6790 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6790 6795 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 6795 6844 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6844 6849 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 6849 6853 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6853 6854 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6854 6857 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6857 6862 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 6862 6863 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6863 6902 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 6902 6916 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 6916 6923 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 6923 6941 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 6941 6996 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 6996 7014 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 7014 7034 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 7034 7054 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 7054 7057 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 7057 7140 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 7140 7145 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 7145 7146 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 7146 7174 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 7174 7186 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 7186 7208 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 7208 7247 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 7247 7250 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 7250 7315 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 7315 7359 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 7359 7374 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 7374 7429 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 7429 7455 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 7455 7650 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 7650 7671 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 7671 7680 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 7680 7714 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 7714 7855 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 7855 7873 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 7873 7877 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 7877 7890 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 7890 7980 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 7980 8020 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 8020 8021 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8021 8026 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8026 8030 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 8030 8119 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8119 8143 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 8143 8189 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8189 8193 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 8193 8216 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8216 8225 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8225 8334 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8334 8371 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8371 8446 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8446 8484 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8484 8550 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8550 8559 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8559 8602 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8602 8603 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8603 8606 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8606 8611 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 8611 8612 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8612 8637 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 8637 8641 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8641 8645 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8645 8657 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 8657 8670 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 8670 8710 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 8710 8711 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 8711 8753 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 8753 8756 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 8756 8784 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 8784 8814 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 8814 8832 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 8832 8850 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 8850 8880 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 8880 8904 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 8904 8932 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 8932 8935 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 8935 8936 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8936 8941 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8941 8952 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 8952 8954 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8954 8959 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8959 8962 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 8962 8993 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8993 9041 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 9041 9046 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 9046 9047 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 9047 9088 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 9088 9096 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 9096 9098 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 9098 9123 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 9123 9308 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 9308 9333 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 9333 9500 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 9500 9506 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 9506 9517 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 9517 9524 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 9524 9527 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 9527 9641 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 9641 9650 (fontified nil font-lock-fontified t face org-block-end-line font-lock-multiline t) 9650 9651 (fontified nil face org-block-end-line) 9651 9652 (fontified nil) 9652 9662 (fontified nil font-lock-fontified t face org-meta-line) 9662 9663 (fontified nil) 9663 9674 (fontified nil face org-code) 9674 9707 (fontified nil face org-code) 9707 9709 (fontified nil) 9709 9710 (fontified nil) 9710 9711 (fontified nil face org-hide) 9711 9712 (fontified nil face (org-superstar-header-bullet org-level-2) composition (2 1 [9675])) 9712 9713 (fontified nil face org-level-2) 9713 9758 (fontified nil face org-level-2) 9758 9759 (fontified nil) 9759 9783 (fontified nil) 9783 9784 (fontified nil help-echo "LINK: https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11" htmlize-link (:uri "https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11") invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face org-link) 9784 9785 (fontified nil help-echo "LINK: https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11" htmlize-link (:uri "https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11") invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face org-link) 9785 9855 (fontified nil help-echo "LINK: https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11" htmlize-link (:uri "https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11") invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face org-link) 9855 9856 (fontified nil rear-nonsticky t help-echo "LINK: https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11" htmlize-link (:uri "https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11") invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face org-link) 9856 9857 (fontified nil help-echo "LINK: https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11" htmlize-link (:uri "https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11") invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face org-link) 9857 9858 (fontified nil help-echo "LINK: https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11" htmlize-link (:uri "https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11") rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face org-link) 9858 9867 (fontified nil help-echo "LINK: https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11" htmlize-link (:uri "https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 9867 9868 (fontified nil help-echo "LINK: https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11" htmlize-link (:uri "https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11") rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 9868 9869 (fontified nil help-echo "LINK: https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11" htmlize-link (:uri "https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11") face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 9869 9870 (fontified nil rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) help-echo "LINK: https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11" htmlize-link (:uri "https://org-roam.discourse.group/t/group-links-tags-in-org-roam/2871/11") face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 9870 9992 (fontified nil) 9992 10416 (fontified nil) 10416 10417 (fontified nil) 10417 10418 (fontified nil) 10418 10419 (fontified nil face org-hide) 10419 10420 (fontified nil face org-hide) 10420 10421 (fontified nil face (org-superstar-header-bullet org-level-3) composition (3 1 [10040])) 10421 10422 (fontified nil face org-level-3) 10422 10447 (fontified nil face org-level-3) 10447 10448 (fontified nil) 10448 10513 (fontified nil) 10513 10514 (fontified nil) 10514 10543 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-begin-line) 10543 10544 (fontified nil font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line) 10544 10545 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 10545 10548 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10548 10554 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 10554 10555 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10555 10588 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 10588 10597 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10597 10625 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 10625 10657 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 10657 10660 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 10660 10666 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10666 10671 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 10671 10672 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10672 10704 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 10704 10715 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10715 10728 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 10728 10746 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 10746 10776 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 10776 10782 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10782 10786 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 10786 10831 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10831 10838 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 10838 10854 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10854 10857 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 10857 10983 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 10983 10986 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 10986 10987 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 10987 10996 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-end-line) 10996 10997 (fontified nil face org-block-end-line) 10997 10998 (fontified nil) 10998 11056 (fontified nil) 11056 11057 (fontified nil) 11057 11086 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-begin-line) 11086 11087 (fontified nil font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line) 11087 11088 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 11088 11091 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11091 11097 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 11097 11098 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11098 11140 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 11140 11149 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11149 11181 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 11181 11214 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 11214 11247 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 11247 11284 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 11284 11286 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 11286 11288 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 11288 11292 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11292 11297 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 11297 11298 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11298 11335 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 11335 11346 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11346 11407 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 11407 11413 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11413 11417 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 11417 11471 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11471 11474 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 11474 11535 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11535 11541 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 11541 11561 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11561 11564 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 11564 11638 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11638 11644 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 11644 11831 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 11831 11840 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-end-line) 11840 11841 (fontified nil face org-block-end-line) 11841 11842 (fontified nil) 11842 11898 (fontified nil) 11898 11899 (fontified nil) 11899 11928 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-begin-line) 11928 11929 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-begin-line help-echo nil) 11929 11930 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block) help-echo nil) 11930 11933 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 11933 11938 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 11938 11939 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 11939 11973 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 11973 11992 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 11992 12037 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 12037 12044 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 12044 12047 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 12047 12053 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 12053 12060 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 12060 12145 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 12145 12151 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 12151 12163 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 12163 12168 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 12168 12169 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 12169 12195 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 12195 12206 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 12206 12333 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 12333 12365 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 12365 12368 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 12368 12374 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 12374 12378 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 12378 12479 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 12479 12485 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 12485 12507 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 12507 12511 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 12511 12585 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 12585 12594 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-end-line) 12594 12595 (fontified nil face org-block-end-line) 12595 12596 (fontified nil) 12596 12627 (fontified nil) 12627 12628 (fontified nil font-lock-multiline t org-emphasis t invisible t) 12628 12654 (fontified nil face (org-code) font-lock-multiline t org-emphasis t) 12654 12655 (fontified nil font-lock-multiline t org-emphasis t invisible t) 12655 12954 (fontified nil) 12954 12955 (fontified nil) 12955 12956 (fontified nil face org-hide) 12956 12957 (fontified nil face org-hide) 12957 12958 (fontified nil face (org-superstar-header-bullet org-level-3) composition (3 1 [10040])) 12958 12959 (fontified nil face org-level-3) 12959 13013 (fontified nil face org-level-3) 13013 13014 (fontified nil) 13014 13054 (fontified nil) 13054 13086 (fontified nil) 13086 13162 (fontified nil) 13162 13163 (fontified nil font-lock-multiline t org-emphasis t invisible t) 13163 13181 (fontified nil face (org-code) font-lock-multiline t org-emphasis t) 13181 13182 (fontified nil font-lock-multiline t org-emphasis t invisible t) 13182 13415 (fontified nil) 13415 13416 (fontified nil) 13416 13445 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-begin-line) 13445 13446 (fontified nil font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line) 13446 13447 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 13447 13450 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13450 13455 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 13455 13456 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13456 13503 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 13503 13515 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13515 13524 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 13524 13548 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13548 13554 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 13554 13585 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 13585 13659 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 13659 13677 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 13677 13733 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 13733 13751 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 13751 13989 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 13989 14020 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14020 14066 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 14066 14100 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14100 14103 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 14103 14109 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14109 14113 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 14113 14197 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14197 14239 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14239 14245 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 14245 14310 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14310 14317 (fontified nil font-lock-fontified t help-echo "Easy to misread; consider moving the element to the next line" src-block t font-lock-multiline t face (font-lock-warning-face org-block)) 14317 14330 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14330 14332 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 14332 14379 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14379 14385 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 14385 14435 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14435 14463 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14463 14465 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 14465 14478 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14478 14482 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 14482 14531 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14531 14560 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 14560 14626 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14626 14628 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 14628 14689 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14689 14691 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14691 14695 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14695 14700 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 14700 14701 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14701 14735 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 14735 14747 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14747 14756 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-type-face org-block)) 14756 14815 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14815 14821 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 14821 14839 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14839 14916 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 14916 14917 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 14917 14918 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 14918 14919 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 14919 14920 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 14920 14921 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 14921 14922 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 14922 14923 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 14923 14924 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 14924 14925 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14925 14926 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14926 14927 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14927 14928 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14928 14929 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14929 14930 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14930 14936 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14936 14937 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14937 14938 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14938 14939 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14939 14940 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14940 14962 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14962 14963 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14963 14964 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14964 14965 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14965 14966 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14966 14967 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14967 14968 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14968 14969 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14969 14970 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14970 14971 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 14971 14976 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 14976 15305 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 15305 15323 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 15323 15326 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 15326 15332 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15332 15336 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 15336 15345 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15345 15346 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15346 15437 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15437 15439 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 15439 15447 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15447 15455 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 15455 15501 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15501 15507 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 15507 15536 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15536 15538 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 15538 15580 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15580 15583 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 15583 15642 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 15642 15650 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15650 15654 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 15654 15696 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15696 15697 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15697 15784 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15784 15790 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 15790 15936 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15936 15937 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15937 15938 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15938 15939 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15939 15940 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15940 16049 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 16049 16051 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 16051 16102 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 16102 16108 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 16108 16116 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 16116 16117 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 16117 16119 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 16119 16128 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-end-line) 16128 16129 (fontified nil face org-block-end-line) 16129 16130 (fontified nil) 16130 16131 (fontified nil face org-hide) 16131 16132 (fontified nil face org-hide) 16132 16133 (fontified nil face (org-superstar-header-bullet org-level-3) composition (3 1 [10040])) 16133 16134 (fontified nil face org-level-3) 16134 16141 (fontified nil face org-special-keyword) 16141 16142 (fontified nil face org-level-3) 16142 16182 (fontified nil face org-level-3) 16182 16183 (fontified nil) 16183 16478 (fontified nil) 16478 16479 (fontified nil font-lock-multiline t org-emphasis t invisible t) 16479 16497 (fontified nil face (org-code) font-lock-multiline t org-emphasis t) 16497 16498 (fontified nil font-lock-multiline t org-emphasis t invisible t) 16498 16565 (fontified nil) 16565 16566 (fontified nil font-lock-multiline t org-emphasis t invisible t) 16566 16594 (fontified nil face (org-code) font-lock-multiline t org-emphasis t) 16594 16595 (fontified nil font-lock-multiline t org-emphasis t invisible t) 16595 16622 (fontified nil) 16622 16623 (fontified nil font-lock-multiline t org-emphasis t invisible t) 16623 16648 (fontified nil face (org-code) font-lock-multiline t org-emphasis t) 16648 16649 (fontified nil font-lock-multiline t org-emphasis t invisible t) 16649 16688 (fontified nil) 16688 16689 (fontified nil) 16689 16718 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-begin-line) 16718 16719 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-begin-line help-echo nil) 16719 16720 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block) help-echo nil) 16720 16723 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 16723 16728 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 16728 16729 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 16729 16763 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 16763 16771 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 16771 16992 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 16992 17018 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 17018 17211 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 17211 17245 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 17245 17271 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 17271 17289 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 17289 17424 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 17424 17430 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 17430 17441 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 17441 17448 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 17448 17452 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 17452 17472 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 17472 17491 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 17491 17549 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 17549 17556 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 17556 17638 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 17638 17644 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 17644 17710 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 17710 17715 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 17715 17716 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 17716 17750 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 17750 17758 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 17758 17853 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 17853 17887 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 17887 17972 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 17972 17978 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 17978 17989 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 17989 17996 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 17996 17999 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 17999 18096 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 18096 18101 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 18101 18102 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 18102 18133 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 18133 18141 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 18141 18153 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 18153 18166 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 18166 18219 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 18219 18247 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 18247 18272 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 18272 18353 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 18353 18381 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 18381 18481 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 18481 18515 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block) help-echo nil src-block t) 18515 18645 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 18645 18651 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 18651 18662 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 18662 18669 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 18669 18672 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 18672 18764 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 18764 18773 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-end-line) 18773 18774 (fontified nil face org-block-end-line) 18774 18775 (fontified nil)) . 10070) (undo-tree-id2108 . -16) (undo-tree-id2109 . 18760) (undo-tree-id2110 . 18759) (undo-tree-id2111 . -15) (undo-tree-id2112 . -15) (undo-tree-id2113 . -15) (undo-tree-id2114 . -15) (undo-tree-id2115 . -15) (undo-tree-id2116 . -15) (undo-tree-id2117 . -15) (undo-tree-id2118 . -15) (undo-tree-id2119 . -15) (undo-tree-id2120 . -15) (undo-tree-id2121 . -15) (undo-tree-id2122 . -15) (undo-tree-id2123 . -15) (undo-tree-id2124 . -15) (undo-tree-id2125 . -15) (undo-tree-id2126 . -15) (undo-tree-id2127 . -15) (undo-tree-id2128 . -15) (undo-tree-id2129 . -15) (undo-tree-id2130 . -15) (undo-tree-id2131 . -15) (undo-tree-id2132 . -15) (undo-tree-id2133 . -15) (undo-tree-id2134 . -15) (undo-tree-id2135 . -15) (undo-tree-id2136 . -15) (undo-tree-id2137 . -15) (undo-tree-id2138 . -15) (undo-tree-id2139 . -15) (undo-tree-id2140 . -15) (undo-tree-id2141 . -15) (undo-tree-id2142 . -15) (undo-tree-id2143 . -15) (undo-tree-id2144 . -15) (undo-tree-id2145 . -15) (undo-tree-id2146 . -15) (undo-tree-id2147 . -15) (undo-tree-id2148 . -15) (undo-tree-id2149 . -15) (undo-tree-id2150 . -15) (undo-tree-id2151 . -15) (undo-tree-id2152 . -15) (undo-tree-id2153 . -15) (undo-tree-id2154 . -15) (undo-tree-id2155 . -15) (undo-tree-id2156 . -15) (undo-tree-id2157 . -15) (undo-tree-id2158 . -15) (undo-tree-id2159 . -15) (undo-tree-id2160 . -15) (undo-tree-id2161 . -15) (undo-tree-id2162 . -15) (undo-tree-id2163 . -15) (undo-tree-id2164 . -15) (undo-tree-id2165 . -15) (undo-tree-id2166 . -15) (undo-tree-id2167 . -15) (undo-tree-id2168 . -15) (undo-tree-id2169 . -15) (undo-tree-id2170 . -15) (undo-tree-id2171 . -15) (undo-tree-id2172 . -15) (undo-tree-id2173 . -15) (undo-tree-id2174 . -15) (undo-tree-id2175 . -15) (undo-tree-id2176 . -15) (undo-tree-id2177 . -15) (undo-tree-id2178 . -15) (undo-tree-id2179 . -15) (undo-tree-id2180 . -15) (undo-tree-id2181 . -15) (undo-tree-id2182 . -15) (undo-tree-id2183 . -15) (undo-tree-id2184 . -15) (undo-tree-id2185 . -15) (undo-tree-id2186 . -15) (undo-tree-id2187 . -15) (undo-tree-id2188 . -15) (undo-tree-id2189 . -15) (undo-tree-id2190 . -15) (undo-tree-id2191 . -15) (undo-tree-id2192 . -15) (undo-tree-id2193 . -15) (undo-tree-id2194 . -15) (undo-tree-id2195 . -22) (undo-tree-id2196 . -22) (undo-tree-id2197 . -22) (undo-tree-id2198 . -22) (undo-tree-id2199 . -22) (undo-tree-id2200 . -22) (undo-tree-id2201 . -22) (undo-tree-id2202 . -22) (undo-tree-id2203 . -22) (undo-tree-id2204 . -22) (undo-tree-id2205 . -22) (undo-tree-id2206 . -22) (undo-tree-id2207 . -22) (undo-tree-id2208 . -22) (undo-tree-id2209 . -22) (undo-tree-id2210 . -22) (undo-tree-id2211 . -22) (undo-tree-id2212 . -22) (undo-tree-id2213 . -22) (undo-tree-id2214 . -22) (undo-tree-id2215 . -22) (undo-tree-id2216 . -22) (undo-tree-id2217 . -22) (undo-tree-id2218 . -22) (undo-tree-id2219 . -22) (undo-tree-id2220 . -22) (undo-tree-id2221 . -22) (undo-tree-id2222 . -22) (undo-tree-id2223 . -22) (undo-tree-id2224 . -22) (undo-tree-id2225 . -22) (undo-tree-id2226 . -22) (undo-tree-id2227 . -22) (undo-tree-id2228 . -22) (undo-tree-id2229 . -22) (undo-tree-id2230 . -22) (undo-tree-id2231 . -22) (undo-tree-id2232 . -22) (undo-tree-id2233 . -22) (undo-tree-id2234 . -22) (undo-tree-id2235 . -22) (undo-tree-id2236 . -22) (undo-tree-id2237 . -22) (undo-tree-id2238 . -22) (undo-tree-id2239 . -22) (undo-tree-id2240 . -22) (undo-tree-id2241 . -22) (undo-tree-id2242 . -22) (undo-tree-id2243 . -22) (undo-tree-id2244 . -22) (undo-tree-id2245 . -22) (undo-tree-id2246 . -22) (undo-tree-id2247 . -22) (undo-tree-id2248 . -22) (undo-tree-id2249 . -22) (undo-tree-id2250 . -22) (undo-tree-id2251 . -22) (undo-tree-id2252 . -22) (undo-tree-id2253 . -22) (undo-tree-id2254 . -22) (undo-tree-id2255 . -22) (undo-tree-id2256 . -22) (undo-tree-id2257 . -22) (undo-tree-id2258 . -22) (undo-tree-id2259 . -22) (undo-tree-id2260 . -22) (undo-tree-id2261 . -22) (undo-tree-id2262 . -22) (undo-tree-id2263 . -22) (undo-tree-id2264 . -22) (undo-tree-id2265 . -22) (undo-tree-id2266 . -22) (undo-tree-id2267 . -22) (undo-tree-id2268 . -22) (undo-tree-id2269 . -22) (undo-tree-id2270 . -22) (undo-tree-id2271 . -22) (undo-tree-id2272 . -22) (undo-tree-id2273 . -22) (undo-tree-id2274 . -22) (undo-tree-id2275 . -22) (undo-tree-id2276 . -22) (undo-tree-id2277 . -22) (undo-tree-id2278 . -22) (undo-tree-id2279 . -22) (undo-tree-id2280 . -22) (undo-tree-id2281 . -22) (undo-tree-id2282 . -22) (undo-tree-id2283 . -22) (undo-tree-id2284 . -22) (undo-tree-id2285 . -22) (undo-tree-id2286 . -22) (undo-tree-id2287 . -22) (undo-tree-id2288 . -22) (undo-tree-id2289 . -22) (undo-tree-id2290 . -22) (undo-tree-id2291 . -22) (undo-tree-id2292 . -22) (undo-tree-id2293 . -22) (undo-tree-id2294 . -22) (undo-tree-id2295 . -16) (undo-tree-id2296 . -16) (undo-tree-id2297 . -16) (undo-tree-id2298 . -16) (undo-tree-id2299 . -16) (undo-tree-id2300 . -16) (undo-tree-id2301 . -16) (undo-tree-id2302 . -16) (undo-tree-id2303 . -16) (undo-tree-id2304 . -16) (undo-tree-id2305 . -16) (undo-tree-id2306 . -16) (undo-tree-id2307 . -16) (undo-tree-id2308 . -16) (undo-tree-id2309 . -16) (undo-tree-id2310 . -16) (undo-tree-id2311 . -16) (undo-tree-id2312 . -16) (undo-tree-id2313 . -16) 10086) nil (25471 26640 884397 8000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face org-level-3)) . -27629) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (#("C" 0 1 (fontified t face org-level-3)) . -27630) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (#("O" 0 1 (fontified t face org-level-3)) . -27631) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (#("M" 0 1 (fontified t face org-level-3)) . -27632) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (#("M" 0 1 (fontified t face org-level-3)) . -27633) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (#("E" 0 1 (fontified t face org-level-3)) . -27634) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (#("N" 0 1 (fontified t face org-level-3)) . -27635) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (#("T" 0 1 (fontified t face org-special-keyword)) . -27636) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) 27637) nil (25471 26640 884141 745000) 0 nil])
([nil nil ((948 . 1770) (#("- [[#org-roam-general-setup][Org-Roam general setup]]
- [[#useful-functions][Useful Functions]]
- [[#acting-on-backlinks][Acting on backlinks]]
  - [[#org-roam-backlinks-search][Org-roam-backlinks-search]]
- [[#bibtex-completion-ivy-and-org-ref][Bibtex completion (Ivy) and Org-Ref]]
  - [[#citar][Citar]]
- [[#org-roam-bibtex-protocols-reference-notes-and-ui-graphing-capabilities][Org Roam Bibtex, Protocols (Reference notes) and UI (graphing capabilities)]]
- [[#logseq-like-tagging-functionality][Logseq-like tagging functionality]]
- [[#fleeting-notes][Fleeting notes]]
- [[#capture-templates][Capture Templates]]
- [[#providing-the-packages-to-be-loaded-in-initel][Providing the packages to be loaded in init.el]]
" 0 1 (fontified t composition (1 1 [8211]) face org-superstar-item) 1 2 (fontified t) 2 28 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #org-roam-general-setup" htmlize-link (:uri "#org-roam-general-setup") font-lock-multiline t face org-link) 28 29 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #org-roam-general-setup" htmlize-link (:uri "#org-roam-general-setup") font-lock-multiline t face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 29 50 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #org-roam-general-setup" htmlize-link (:uri "#org-roam-general-setup") font-lock-multiline t) 50 51 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #org-roam-general-setup" htmlize-link (:uri "#org-roam-general-setup") font-lock-multiline t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 51 52 (fontified t face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #org-roam-general-setup" htmlize-link (:uri "#org-roam-general-setup") font-lock-multiline t) 52 53 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #org-roam-general-setup" htmlize-link (:uri "#org-roam-general-setup") font-lock-multiline t) 53 54 (fontified t) 54 55 (fontified t composition (1 1 [8211]) face org-superstar-item) 55 56 (fontified t) 56 76 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #useful-functions" htmlize-link (:uri "#useful-functions") font-lock-multiline t face org-link) 76 77 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #useful-functions" htmlize-link (:uri "#useful-functions") font-lock-multiline t face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 77 92 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #useful-functions" htmlize-link (:uri "#useful-functions") font-lock-multiline t) 92 93 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #useful-functions" htmlize-link (:uri "#useful-functions") font-lock-multiline t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 93 94 (fontified t face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #useful-functions" htmlize-link (:uri "#useful-functions") font-lock-multiline t) 94 95 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #useful-functions" htmlize-link (:uri "#useful-functions") font-lock-multiline t) 95 96 (fontified t) 96 97 (fontified t composition (1 1 [8211]) face org-superstar-item) 97 98 (fontified t) 98 121 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #acting-on-backlinks" htmlize-link (:uri "#acting-on-backlinks") font-lock-multiline t face org-link) 121 122 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #acting-on-backlinks" htmlize-link (:uri "#acting-on-backlinks") font-lock-multiline t face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 122 140 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #acting-on-backlinks" htmlize-link (:uri "#acting-on-backlinks") font-lock-multiline t) 140 141 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #acting-on-backlinks" htmlize-link (:uri "#acting-on-backlinks") font-lock-multiline t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 141 142 (fontified t face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #acting-on-backlinks" htmlize-link (:uri "#acting-on-backlinks") font-lock-multiline t) 142 143 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #acting-on-backlinks" htmlize-link (:uri "#acting-on-backlinks") font-lock-multiline t) 143 146 (fontified t) 146 147 (fontified t composition (1 1 [8211]) face org-superstar-item) 147 148 (fontified t) 148 177 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #org-roam-backlinks-search" htmlize-link (:uri "#org-roam-backlinks-search") font-lock-multiline t face org-link) 177 178 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #org-roam-backlinks-search" htmlize-link (:uri "#org-roam-backlinks-search") font-lock-multiline t face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 178 202 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #org-roam-backlinks-search" htmlize-link (:uri "#org-roam-backlinks-search") font-lock-multiline t) 202 203 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #org-roam-backlinks-search" htmlize-link (:uri "#org-roam-backlinks-search") font-lock-multiline t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 203 204 (fontified t face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #org-roam-backlinks-search" htmlize-link (:uri "#org-roam-backlinks-search") font-lock-multiline t) 204 205 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #org-roam-backlinks-search" htmlize-link (:uri "#org-roam-backlinks-search") font-lock-multiline t) 205 206 (fontified t) 206 207 (fontified t composition (1 1 [8211]) face org-superstar-item) 207 208 (fontified t) 208 245 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #bibtex-completion-ivy-and-org-ref" htmlize-link (:uri "#bibtex-completion-ivy-and-org-ref") font-lock-multiline t face org-link) 245 246 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #bibtex-completion-ivy-and-org-ref" htmlize-link (:uri "#bibtex-completion-ivy-and-org-ref") font-lock-multiline t face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 246 280 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #bibtex-completion-ivy-and-org-ref" htmlize-link (:uri "#bibtex-completion-ivy-and-org-ref") font-lock-multiline t) 280 281 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #bibtex-completion-ivy-and-org-ref" htmlize-link (:uri "#bibtex-completion-ivy-and-org-ref") font-lock-multiline t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 281 282 (fontified t face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #bibtex-completion-ivy-and-org-ref" htmlize-link (:uri "#bibtex-completion-ivy-and-org-ref") font-lock-multiline t) 282 283 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #bibtex-completion-ivy-and-org-ref" htmlize-link (:uri "#bibtex-completion-ivy-and-org-ref") font-lock-multiline t) 283 286 (fontified t) 286 287 (fontified t composition (1 1 [8211]) face org-superstar-item) 287 288 (fontified t) 288 297 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #citar" htmlize-link (:uri "#citar") font-lock-multiline t face org-link) 297 298 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #citar" htmlize-link (:uri "#citar") font-lock-multiline t face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 298 302 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #citar" htmlize-link (:uri "#citar") font-lock-multiline t) 302 303 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #citar" htmlize-link (:uri "#citar") font-lock-multiline t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 303 304 (fontified t face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #citar" htmlize-link (:uri "#citar") font-lock-multiline t) 304 305 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #citar" htmlize-link (:uri "#citar") font-lock-multiline t) 305 306 (fontified t) 306 307 (fontified t composition (1 1 [8211]) face org-superstar-item) 307 308 (fontified t) 308 382 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #org-roam-bibtex-protocols-reference-notes-and-ui-graphing-capabilities" htmlize-link (:uri "#org-roam-bibtex-protocols-reference-notes-and-ui-graphing-capabilities") font-lock-multiline t face org-link) 382 383 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #org-roam-bibtex-protocols-reference-notes-and-ui-graphing-capabilities" htmlize-link (:uri "#org-roam-bibtex-protocols-reference-notes-and-ui-graphing-capabilities") font-lock-multiline t face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 383 457 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #org-roam-bibtex-protocols-reference-notes-and-ui-graphing-capabilities" htmlize-link (:uri "#org-roam-bibtex-protocols-reference-notes-and-ui-graphing-capabilities") font-lock-multiline t) 457 458 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #org-roam-bibtex-protocols-reference-notes-and-ui-graphing-capabilities" htmlize-link (:uri "#org-roam-bibtex-protocols-reference-notes-and-ui-graphing-capabilities") font-lock-multiline t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 458 459 (fontified t face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #org-roam-bibtex-protocols-reference-notes-and-ui-graphing-capabilities" htmlize-link (:uri "#org-roam-bibtex-protocols-reference-notes-and-ui-graphing-capabilities") font-lock-multiline t) 459 460 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #org-roam-bibtex-protocols-reference-notes-and-ui-graphing-capabilities" htmlize-link (:uri "#org-roam-bibtex-protocols-reference-notes-and-ui-graphing-capabilities") font-lock-multiline t) 460 461 (fontified t) 461 462 (fontified t composition (1 1 [8211]) face org-superstar-item) 462 463 (fontified t) 463 500 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #logseq-like-tagging-functionality" htmlize-link (:uri "#logseq-like-tagging-functionality") font-lock-multiline t face org-link) 500 501 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #logseq-like-tagging-functionality" htmlize-link (:uri "#logseq-like-tagging-functionality") font-lock-multiline t face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 501 533 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #logseq-like-tagging-functionality" htmlize-link (:uri "#logseq-like-tagging-functionality") font-lock-multiline t) 533 534 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #logseq-like-tagging-functionality" htmlize-link (:uri "#logseq-like-tagging-functionality") font-lock-multiline t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 534 535 (fontified t face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #logseq-like-tagging-functionality" htmlize-link (:uri "#logseq-like-tagging-functionality") font-lock-multiline t) 535 536 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #logseq-like-tagging-functionality" htmlize-link (:uri "#logseq-like-tagging-functionality") font-lock-multiline t) 536 537 (fontified t) 537 538 (fontified t composition (1 1 [8211]) face org-superstar-item) 538 539 (fontified t) 539 553 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #fleeting-notes" htmlize-link (:uri "#fleeting-notes") font-lock-multiline t face org-link) 553 557 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #fleeting-notes" htmlize-link (:uri "#fleeting-notes") font-lock-multiline t face org-link) 557 558 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #fleeting-notes" htmlize-link (:uri "#fleeting-notes") font-lock-multiline t face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 558 571 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #fleeting-notes" htmlize-link (:uri "#fleeting-notes") font-lock-multiline t) 571 572 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #fleeting-notes" htmlize-link (:uri "#fleeting-notes") font-lock-multiline t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 572 573 (fontified t face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #fleeting-notes" htmlize-link (:uri "#fleeting-notes") font-lock-multiline t) 573 574 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #fleeting-notes" htmlize-link (:uri "#fleeting-notes") font-lock-multiline t) 574 575 (fontified t) 575 576 (fontified t composition (1 1 [8211]) face org-superstar-item) 576 577 (fontified t) 577 598 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #capture-templates" htmlize-link (:uri "#capture-templates") font-lock-multiline t face org-link) 598 599 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #capture-templates" htmlize-link (:uri "#capture-templates") font-lock-multiline t face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 599 615 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #capture-templates" htmlize-link (:uri "#capture-templates") font-lock-multiline t) 615 616 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #capture-templates" htmlize-link (:uri "#capture-templates") font-lock-multiline t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 616 617 (fontified t face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #capture-templates" htmlize-link (:uri "#capture-templates") font-lock-multiline t) 617 618 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #capture-templates" htmlize-link (:uri "#capture-templates") font-lock-multiline t) 618 619 (fontified t) 619 620 (fontified t composition (1 1 [8211]) face org-superstar-item) 620 621 (fontified t) 621 670 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #providing-the-packages-to-be-loaded-in-initel" htmlize-link (:uri "#providing-the-packages-to-be-loaded-in-initel") font-lock-multiline t face org-link) 670 671 (fontified t invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #providing-the-packages-to-be-loaded-in-initel" htmlize-link (:uri "#providing-the-packages-to-be-loaded-in-initel") font-lock-multiline t face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 671 716 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #providing-the-packages-to-be-loaded-in-initel" htmlize-link (:uri "#providing-the-packages-to-be-loaded-in-initel") font-lock-multiline t) 716 717 (fontified t face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #providing-the-packages-to-be-loaded-in-initel" htmlize-link (:uri "#providing-the-packages-to-be-loaded-in-initel") font-lock-multiline t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 717 718 (fontified t face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #providing-the-packages-to-be-loaded-in-initel" htmlize-link (:uri "#providing-the-packages-to-be-loaded-in-initel") font-lock-multiline t) 718 719 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: #providing-the-packages-to-be-loaded-in-initel" htmlize-link (:uri "#providing-the-packages-to-be-loaded-in-initel") font-lock-multiline t) 719 720 (fontified t)) . 948) (undo-tree-id1664 . -187) (undo-tree-id1665 . -132) (undo-tree-id1666 . -720) (undo-tree-id1667 . -720) (undo-tree-id1668 . -575) (undo-tree-id1669 . -306) (undo-tree-id1670 . -96) (undo-tree-id1671 . -306)) nil (25471 26640 880738 682000) 0 nil])
([nil nil ((13306 . 13316) (13285 . 13306) (#("y" 0 1 (fontified t)) . -13285) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -1) (undo-tree-id3100 . -1) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1) (undo-tree-id3109 . -1) (undo-tree-id3110 . -1) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (undo-tree-id3114 . -1) (undo-tree-id3115 . -1) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (#("t" 0 1 (fontified t)) . -13286) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) (undo-tree-id3219 . -1) (#("t" 0 1 (fontified t)) . -13287) (undo-tree-id3220 . -1) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (undo-tree-id3250 . -1) (undo-tree-id3251 . -1) (undo-tree-id3252 . -1) (undo-tree-id3253 . -1) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (#("e" 0 1 (fontified t)) . -13288) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) (undo-tree-id3318 . -1) (undo-tree-id3319 . -1) (undo-tree-id3320 . -1) (undo-tree-id3321 . -1) (undo-tree-id3322 . -1) (undo-tree-id3323 . -1) (undo-tree-id3324 . -1) (undo-tree-id3325 . -1) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (#("r" 0 1 (fontified t)) . -13289) (undo-tree-id3328 . -1) (undo-tree-id3329 . -1) (undo-tree-id3330 . -1) (undo-tree-id3331 . -1) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (undo-tree-id3336 . -1) (undo-tree-id3337 . -1) (undo-tree-id3338 . -1) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) (undo-tree-id3348 . -1) (undo-tree-id3349 . -1) (undo-tree-id3350 . -1) (undo-tree-id3351 . -1) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (#(" " 0 1 (fontified t)) . -13290) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) 13291 (13283 . 13291) (13263 . 13283) (13242 . 13263) (13221 . 13242) (13205 . 13221) (#("t" 0 1 (fontified t)) . -13205) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) 13206 (13191 . 13206) (#(" " 0 1 (fontified t)) . -13191) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) 13192 (13183 . 13192) (13162 . 13183) (13150 . 13162) (#("a" 0 1 (fontified t)) . -13150) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (#("b" 0 1 (fontified t)) . -13151) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) 13152 (13140 . 13152) (#(" " 0 1 (fontified t)) . -13140) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (undo-tree-id3482 . -1) (undo-tree-id3483 . -1) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3487 . -1) (undo-tree-id3488 . -1) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) (undo-tree-id3491 . -1) (undo-tree-id3492 . -1) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) (undo-tree-id3500 . -1) (undo-tree-id3501 . -1) (undo-tree-id3502 . -1) (undo-tree-id3503 . -1) (undo-tree-id3504 . -1) (undo-tree-id3505 . -1) (undo-tree-id3506 . -1) (undo-tree-id3507 . -1) (undo-tree-id3508 . -1) (undo-tree-id3509 . -1) (undo-tree-id3510 . -1) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) (undo-tree-id3514 . -1) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) (undo-tree-id3517 . -1) (undo-tree-id3518 . -1) (undo-tree-id3519 . -1) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (undo-tree-id3523 . -1) (undo-tree-id3524 . -1) (undo-tree-id3525 . -1) (undo-tree-id3526 . -1) (undo-tree-id3527 . -1) (undo-tree-id3528 . -1) (undo-tree-id3529 . -1) (undo-tree-id3530 . -1) (undo-tree-id3531 . -1) (undo-tree-id3532 . -1) (undo-tree-id3533 . -1) (undo-tree-id3534 . -1) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (undo-tree-id3538 . -1) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (undo-tree-id3566 . -1) (undo-tree-id3567 . -1) (undo-tree-id3568 . -1) (undo-tree-id3569 . -1) (undo-tree-id3570 . -1) (undo-tree-id3571 . -1) (undo-tree-id3572 . -1) (undo-tree-id3573 . -1) (undo-tree-id3574 . -1) (undo-tree-id3575 . -1) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1) (undo-tree-id3624 . -1) (undo-tree-id3625 . -1) (undo-tree-id3626 . -1) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (undo-tree-id3629 . -1) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) (undo-tree-id3633 . -1) (undo-tree-id3634 . -1) (undo-tree-id3635 . -1) (undo-tree-id3636 . -1) (undo-tree-id3637 . -1) (undo-tree-id3638 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (undo-tree-id3651 . -1) (undo-tree-id3652 . -1) (undo-tree-id3653 . -1) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1) (undo-tree-id3662 . -1) (undo-tree-id3663 . -1) (undo-tree-id3664 . -1) (undo-tree-id3665 . -1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (undo-tree-id3670 . -1) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (undo-tree-id3682 . -1) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (#("b" 0 1 (fontified t)) . -13141) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (undo-tree-id3800 . -1) (undo-tree-id3801 . -1) (undo-tree-id3802 . -1) (undo-tree-id3803 . -1) (undo-tree-id3804 . -1) (undo-tree-id3805 . -1) (undo-tree-id3806 . -1) (undo-tree-id3807 . -1) (undo-tree-id3808 . -1) (undo-tree-id3809 . -1) (undo-tree-id3810 . -1) (undo-tree-id3811 . -1) (undo-tree-id3812 . -1) (undo-tree-id3813 . -1) (undo-tree-id3814 . -1) (undo-tree-id3815 . -1) (undo-tree-id3816 . -1) (undo-tree-id3817 . -1) (undo-tree-id3818 . -1) (undo-tree-id3819 . -1) (undo-tree-id3820 . -1) (undo-tree-id3821 . -1) (undo-tree-id3822 . -1) (undo-tree-id3823 . -1) (undo-tree-id3824 . -1) (undo-tree-id3825 . -1) (undo-tree-id3826 . -1) (undo-tree-id3827 . -1) (undo-tree-id3828 . -1) (undo-tree-id3829 . -1) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (undo-tree-id3832 . -1) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) (undo-tree-id3843 . -1) (undo-tree-id3844 . -1) (undo-tree-id3845 . -1) (undo-tree-id3846 . -1) (undo-tree-id3847 . -1) (undo-tree-id3848 . -1) (undo-tree-id3849 . -1) (undo-tree-id3850 . -1) (undo-tree-id3851 . -1) (undo-tree-id3852 . -1) (undo-tree-id3853 . -1) (undo-tree-id3854 . -1) (undo-tree-id3855 . -1) (undo-tree-id3856 . -1) (undo-tree-id3857 . -1) (undo-tree-id3858 . -1) (undo-tree-id3859 . -1) (undo-tree-id3860 . -1) (undo-tree-id3861 . -1) (undo-tree-id3862 . -1) (undo-tree-id3863 . -1) (undo-tree-id3864 . -1) (undo-tree-id3865 . -1) (undo-tree-id3866 . -1) (undo-tree-id3867 . -1) (undo-tree-id3868 . -1) (undo-tree-id3869 . -1) (undo-tree-id3870 . -1) (undo-tree-id3871 . -1) (undo-tree-id3872 . -1) (undo-tree-id3873 . -1) (undo-tree-id3874 . -1) (undo-tree-id3875 . -1) (undo-tree-id3876 . -1) (undo-tree-id3877 . -1) (undo-tree-id3878 . -1) (undo-tree-id3879 . -1) (undo-tree-id3880 . -1) (undo-tree-id3881 . -1) (undo-tree-id3882 . -1) (undo-tree-id3883 . -1) (undo-tree-id3884 . -1) (undo-tree-id3885 . -1) (undo-tree-id3886 . -1) (undo-tree-id3887 . -1) (undo-tree-id3888 . -1) (undo-tree-id3889 . -1) (undo-tree-id3890 . -1) (undo-tree-id3891 . -1) (undo-tree-id3892 . -1) (undo-tree-id3893 . -1) (undo-tree-id3894 . -1) (undo-tree-id3895 . -1) (undo-tree-id3896 . -1) (undo-tree-id3897 . -1) (undo-tree-id3898 . -1) (undo-tree-id3899 . -1) (undo-tree-id3900 . -1) (undo-tree-id3901 . -1) (undo-tree-id3902 . -1) (undo-tree-id3903 . -1) (undo-tree-id3904 . -1) (undo-tree-id3905 . -1) (undo-tree-id3906 . -1) (undo-tree-id3907 . -1) (undo-tree-id3908 . -1) (undo-tree-id3909 . -1) (undo-tree-id3910 . -1) (undo-tree-id3911 . -1) (undo-tree-id3912 . -1) (undo-tree-id3913 . -1) (undo-tree-id3914 . -1) (undo-tree-id3915 . -1) (undo-tree-id3916 . -1) (undo-tree-id3917 . -1) (undo-tree-id3918 . -1) (undo-tree-id3919 . -1) (undo-tree-id3920 . -1) (undo-tree-id3921 . -1) (undo-tree-id3922 . -1) (undo-tree-id3923 . -1) (undo-tree-id3924 . -1) (undo-tree-id3925 . -1) (undo-tree-id3926 . -1) (undo-tree-id3927 . -1) (undo-tree-id3928 . -1) (undo-tree-id3929 . -1) (undo-tree-id3930 . -1) (undo-tree-id3931 . -1) (undo-tree-id3932 . -1) (undo-tree-id3933 . -1) (undo-tree-id3934 . -1) (undo-tree-id3935 . -1) (undo-tree-id3936 . -1) (undo-tree-id3937 . -1) (undo-tree-id3938 . -1) (undo-tree-id3939 . -1) (undo-tree-id3940 . -1) (undo-tree-id3941 . -1) (undo-tree-id3942 . -1) (undo-tree-id3943 . -1) (undo-tree-id3944 . -1) (undo-tree-id3945 . -1) (undo-tree-id3946 . -1) (undo-tree-id3947 . -1) (undo-tree-id3948 . -1) (undo-tree-id3949 . -1) (undo-tree-id3950 . -1) (undo-tree-id3951 . -1) (undo-tree-id3952 . -1) (undo-tree-id3953 . -1) (undo-tree-id3954 . -1) (undo-tree-id3955 . -1) (undo-tree-id3956 . -1) (undo-tree-id3957 . -1) (undo-tree-id3958 . -1) (undo-tree-id3959 . -1) (undo-tree-id3960 . -1) (undo-tree-id3961 . -1) (undo-tree-id3962 . -1) (undo-tree-id3963 . -1) (undo-tree-id3964 . -1) (undo-tree-id3965 . -1) (undo-tree-id3966 . -1) (undo-tree-id3967 . -1) (undo-tree-id3968 . -1) (undo-tree-id3969 . -1) (undo-tree-id3970 . -1) (undo-tree-id3971 . -1) (undo-tree-id3972 . -1) (undo-tree-id3973 . -1) (undo-tree-id3974 . -1) (undo-tree-id3975 . -1) (undo-tree-id3976 . -1) (undo-tree-id3977 . -1) (undo-tree-id3978 . -1) (undo-tree-id3979 . -1) (undo-tree-id3980 . -1) (undo-tree-id3981 . -1) (undo-tree-id3982 . -1) (undo-tree-id3983 . -1) (undo-tree-id3984 . -1) (undo-tree-id3985 . -1) (undo-tree-id3986 . -1) (undo-tree-id3987 . -1) (undo-tree-id3988 . -1) (undo-tree-id3989 . -1) (undo-tree-id3990 . -1) (undo-tree-id3991 . -1) (undo-tree-id3992 . -1) (undo-tree-id3993 . -1) (undo-tree-id3994 . -1) (undo-tree-id3995 . -1) (undo-tree-id3996 . -1) (undo-tree-id3997 . -1) (undo-tree-id3998 . -1) (undo-tree-id3999 . -1) (undo-tree-id4000 . -1) (undo-tree-id4001 . -1) (undo-tree-id4002 . -1) (undo-tree-id4003 . -1) (undo-tree-id4004 . -1) (undo-tree-id4005 . -1) (undo-tree-id4006 . -1) (undo-tree-id4007 . -1) (undo-tree-id4008 . -1) (undo-tree-id4009 . -1) (undo-tree-id4010 . -1) (undo-tree-id4011 . -1) (undo-tree-id4012 . -1) (undo-tree-id4013 . -1) (undo-tree-id4014 . -1) (undo-tree-id4015 . -1) (#("a" 0 1 (fontified t)) . -13142) (undo-tree-id4016 . -1) (undo-tree-id4017 . -1) (undo-tree-id4018 . -1) (undo-tree-id4019 . -1) (undo-tree-id4020 . -1) (undo-tree-id4021 . -1) (undo-tree-id4022 . -1) (undo-tree-id4023 . -1) (undo-tree-id4024 . -1) (undo-tree-id4025 . -1) (undo-tree-id4026 . -1) (undo-tree-id4027 . -1) (undo-tree-id4028 . -1) (undo-tree-id4029 . -1) (undo-tree-id4030 . -1) (undo-tree-id4031 . -1) (undo-tree-id4032 . -1) (undo-tree-id4033 . -1) (undo-tree-id4034 . -1) (undo-tree-id4035 . -1) (undo-tree-id4036 . -1) (undo-tree-id4037 . -1) (undo-tree-id4038 . -1) (undo-tree-id4039 . -1) (undo-tree-id4040 . -1) (undo-tree-id4041 . -1) (undo-tree-id4042 . -1) (undo-tree-id4043 . -1) (undo-tree-id4044 . -1) (undo-tree-id4045 . -1) (undo-tree-id4046 . -1) (undo-tree-id4047 . -1) (undo-tree-id4048 . -1) (undo-tree-id4049 . -1) (undo-tree-id4050 . -1) (undo-tree-id4051 . -1) (undo-tree-id4052 . -1) (undo-tree-id4053 . -1) (undo-tree-id4054 . -1) (undo-tree-id4055 . -1) (undo-tree-id4056 . -1) (undo-tree-id4057 . -1) (undo-tree-id4058 . -1) (undo-tree-id4059 . -1) (undo-tree-id4060 . -1) (undo-tree-id4061 . -1) (undo-tree-id4062 . -1) (undo-tree-id4063 . -1) (undo-tree-id4064 . -1) (undo-tree-id4065 . -1) (undo-tree-id4066 . -1) (undo-tree-id4067 . -1) (undo-tree-id4068 . -1) (undo-tree-id4069 . -1) (undo-tree-id4070 . -1) (undo-tree-id4071 . -1) (undo-tree-id4072 . -1) (undo-tree-id4073 . -1) (undo-tree-id4074 . -1) (undo-tree-id4075 . -1) (undo-tree-id4076 . -1) (undo-tree-id4077 . -1) (undo-tree-id4078 . -1) (undo-tree-id4079 . -1) (undo-tree-id4080 . -1) (undo-tree-id4081 . -1) (undo-tree-id4082 . -1) (undo-tree-id4083 . -1) (undo-tree-id4084 . -1) (undo-tree-id4085 . -1) (undo-tree-id4086 . -1) (undo-tree-id4087 . -1) (undo-tree-id4088 . -1) (undo-tree-id4089 . -1) (undo-tree-id4090 . -1) (undo-tree-id4091 . -1) (undo-tree-id4092 . -1) (undo-tree-id4093 . -1) (undo-tree-id4094 . -1) (undo-tree-id4095 . -1) (undo-tree-id4096 . -1) (undo-tree-id4097 . -1) (undo-tree-id4098 . -1) (undo-tree-id4099 . -1) (undo-tree-id4100 . -1) (undo-tree-id4101 . -1) (undo-tree-id4102 . -1) (undo-tree-id4103 . -1) (undo-tree-id4104 . -1) (undo-tree-id4105 . -1) (undo-tree-id4106 . -1) (undo-tree-id4107 . -1) (undo-tree-id4108 . -1) (undo-tree-id4109 . -1) (undo-tree-id4110 . -1) (undo-tree-id4111 . -1) (undo-tree-id4112 . -1) (undo-tree-id4113 . -1) (undo-tree-id4114 . -1) (undo-tree-id4115 . -1) (undo-tree-id4116 . -1) (undo-tree-id4117 . -1) (undo-tree-id4118 . -1) (undo-tree-id4119 . -1) (undo-tree-id4120 . -1) (undo-tree-id4121 . -1) (undo-tree-id4122 . -1) (undo-tree-id4123 . -1) (undo-tree-id4124 . -1) (undo-tree-id4125 . -1) (undo-tree-id4126 . -1) (undo-tree-id4127 . -1) (undo-tree-id4128 . -1) (undo-tree-id4129 . -1) (undo-tree-id4130 . -1) (undo-tree-id4131 . -1) (undo-tree-id4132 . -1) (undo-tree-id4133 . -1) (undo-tree-id4134 . -1) (undo-tree-id4135 . -1) (undo-tree-id4136 . -1) (undo-tree-id4137 . -1) (undo-tree-id4138 . -1) (undo-tree-id4139 . -1) (undo-tree-id4140 . -1) (undo-tree-id4141 . -1) (undo-tree-id4142 . -1) (undo-tree-id4143 . -1) (undo-tree-id4144 . -1) (undo-tree-id4145 . -1) (undo-tree-id4146 . -1) (undo-tree-id4147 . -1) (undo-tree-id4148 . -1) (undo-tree-id4149 . -1) (undo-tree-id4150 . -1) (undo-tree-id4151 . -1) (undo-tree-id4152 . -1) (undo-tree-id4153 . -1) (undo-tree-id4154 . -1) (undo-tree-id4155 . -1) (undo-tree-id4156 . -1) (undo-tree-id4157 . -1) (undo-tree-id4158 . -1) (undo-tree-id4159 . -1) (undo-tree-id4160 . -1) (undo-tree-id4161 . -1) (undo-tree-id4162 . -1) (undo-tree-id4163 . -1) (undo-tree-id4164 . -1) (undo-tree-id4165 . -1) (undo-tree-id4166 . -1) (undo-tree-id4167 . -1) (undo-tree-id4168 . -1) (undo-tree-id4169 . -1) (undo-tree-id4170 . -1) (undo-tree-id4171 . -1) (undo-tree-id4172 . -1) (undo-tree-id4173 . -1) (undo-tree-id4174 . -1) (undo-tree-id4175 . -1) (undo-tree-id4176 . -1) (undo-tree-id4177 . -1) (undo-tree-id4178 . -1) (undo-tree-id4179 . -1) (undo-tree-id4180 . -1) (undo-tree-id4181 . -1) (undo-tree-id4182 . -1) (undo-tree-id4183 . -1) (undo-tree-id4184 . -1) (undo-tree-id4185 . -1) (undo-tree-id4186 . -1) (undo-tree-id4187 . -1) (undo-tree-id4188 . -1) (undo-tree-id4189 . -1) (undo-tree-id4190 . -1) (undo-tree-id4191 . -1) (undo-tree-id4192 . -1) (undo-tree-id4193 . -1) (undo-tree-id4194 . -1) (undo-tree-id4195 . -1) (undo-tree-id4196 . -1) (undo-tree-id4197 . -1) (undo-tree-id4198 . -1) (undo-tree-id4199 . -1) (undo-tree-id4200 . -1) (undo-tree-id4201 . -1) (undo-tree-id4202 . -1) (undo-tree-id4203 . -1) (undo-tree-id4204 . -1) (undo-tree-id4205 . -1) (undo-tree-id4206 . -1) (undo-tree-id4207 . -1) (undo-tree-id4208 . -1) (undo-tree-id4209 . -1) (undo-tree-id4210 . -1) (undo-tree-id4211 . -1) (undo-tree-id4212 . -1) (undo-tree-id4213 . -1) (undo-tree-id4214 . -1) (undo-tree-id4215 . -1) (undo-tree-id4216 . -1) (undo-tree-id4217 . -1) (undo-tree-id4218 . -1) (undo-tree-id4219 . -1) (undo-tree-id4220 . -1) (undo-tree-id4221 . -1) (undo-tree-id4222 . -1) (undo-tree-id4223 . -1) (undo-tree-id4224 . -1) (undo-tree-id4225 . -1) (undo-tree-id4226 . -1) (undo-tree-id4227 . -1) (undo-tree-id4228 . -1) (undo-tree-id4229 . -1) (undo-tree-id4230 . -1) (undo-tree-id4231 . -1) (undo-tree-id4232 . -1) (undo-tree-id4233 . -1) (undo-tree-id4234 . -1) (undo-tree-id4235 . -1) (undo-tree-id4236 . -1) (undo-tree-id4237 . -1) (undo-tree-id4238 . -1) (undo-tree-id4239 . -1) (undo-tree-id4240 . -1) (undo-tree-id4241 . -1) (undo-tree-id4242 . -1) (undo-tree-id4243 . -1) (undo-tree-id4244 . -1) (undo-tree-id4245 . -1) (undo-tree-id4246 . -1) (undo-tree-id4247 . -1) (undo-tree-id4248 . -1) (undo-tree-id4249 . -1) (undo-tree-id4250 . -1) (undo-tree-id4251 . -1) (undo-tree-id4252 . -1) (undo-tree-id4253 . -1) (undo-tree-id4254 . -1) (#("c" 0 1 (fontified t)) . -13143) (undo-tree-id4255 . -1) (undo-tree-id4256 . -1) (undo-tree-id4257 . -1) (undo-tree-id4258 . -1) (undo-tree-id4259 . -1) (undo-tree-id4260 . -1) (undo-tree-id4261 . -1) (undo-tree-id4262 . -1) (undo-tree-id4263 . -1) (undo-tree-id4264 . -1) (undo-tree-id4265 . -1) (undo-tree-id4266 . -1) (undo-tree-id4267 . -1) (undo-tree-id4268 . -1) (undo-tree-id4269 . -1) (undo-tree-id4270 . -1) (undo-tree-id4271 . -1) (undo-tree-id4272 . -1) (undo-tree-id4273 . -1) (undo-tree-id4274 . -1) (undo-tree-id4275 . -1) (undo-tree-id4276 . -1) (undo-tree-id4277 . -1) (undo-tree-id4278 . -1) (undo-tree-id4279 . -1) (undo-tree-id4280 . -1) (undo-tree-id4281 . -1) (undo-tree-id4282 . -1) (undo-tree-id4283 . -1) (undo-tree-id4284 . -1) (undo-tree-id4285 . -1) (undo-tree-id4286 . -1) (undo-tree-id4287 . -1) (undo-tree-id4288 . -1) (undo-tree-id4289 . -1) (undo-tree-id4290 . -1) (undo-tree-id4291 . -1) (undo-tree-id4292 . -1) (undo-tree-id4293 . -1) (undo-tree-id4294 . -1) (undo-tree-id4295 . -1) (undo-tree-id4296 . -1) (undo-tree-id4297 . -1) (undo-tree-id4298 . -1) (undo-tree-id4299 . -1) (undo-tree-id4300 . -1) (undo-tree-id4301 . -1) (undo-tree-id4302 . -1) (undo-tree-id4303 . -1) (undo-tree-id4304 . -1) (undo-tree-id4305 . -1) (undo-tree-id4306 . -1) (undo-tree-id4307 . -1) (undo-tree-id4308 . -1) (undo-tree-id4309 . -1) (undo-tree-id4310 . -1) (undo-tree-id4311 . -1) (undo-tree-id4312 . -1) (undo-tree-id4313 . -1) (undo-tree-id4314 . -1) (undo-tree-id4315 . -1) (undo-tree-id4316 . -1) (undo-tree-id4317 . -1) (undo-tree-id4318 . -1) (undo-tree-id4319 . -1) (undo-tree-id4320 . -1) (undo-tree-id4321 . -1) (undo-tree-id4322 . -1) (undo-tree-id4323 . -1) (undo-tree-id4324 . -1) (undo-tree-id4325 . -1) (undo-tree-id4326 . -1) (undo-tree-id4327 . -1) (undo-tree-id4328 . -1) (undo-tree-id4329 . -1) (undo-tree-id4330 . -1) (undo-tree-id4331 . -1) (undo-tree-id4332 . -1) (undo-tree-id4333 . -1) (undo-tree-id4334 . -1) (undo-tree-id4335 . -1) (undo-tree-id4336 . -1) (undo-tree-id4337 . -1) (undo-tree-id4338 . -1) (undo-tree-id4339 . -1) (undo-tree-id4340 . -1) (undo-tree-id4341 . -1) (undo-tree-id4342 . -1) (undo-tree-id4343 . -1) (undo-tree-id4344 . -1) (undo-tree-id4345 . -1) (undo-tree-id4346 . -1) (undo-tree-id4347 . -1) (undo-tree-id4348 . -1) (undo-tree-id4349 . -1) (undo-tree-id4350 . -1) (undo-tree-id4351 . -1) (undo-tree-id4352 . -1) (undo-tree-id4353 . -1) (undo-tree-id4354 . -1) (undo-tree-id4355 . -1) (undo-tree-id4356 . -1) (undo-tree-id4357 . -1) (undo-tree-id4358 . -1) (undo-tree-id4359 . -1) (undo-tree-id4360 . -1) (undo-tree-id4361 . -1) (undo-tree-id4362 . -1) (undo-tree-id4363 . -1) (undo-tree-id4364 . -1) (undo-tree-id4365 . -1) (undo-tree-id4366 . -1) (undo-tree-id4367 . -1) (undo-tree-id4368 . -1) (undo-tree-id4369 . -1) (undo-tree-id4370 . -1) (undo-tree-id4371 . -1) (undo-tree-id4372 . -1) (undo-tree-id4373 . -1) (undo-tree-id4374 . -1) (undo-tree-id4375 . -1) (undo-tree-id4376 . -1) (undo-tree-id4377 . -1) (undo-tree-id4378 . -1) (undo-tree-id4379 . -1) (undo-tree-id4380 . -1) (undo-tree-id4381 . -1) (undo-tree-id4382 . -1) (undo-tree-id4383 . -1) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) (undo-tree-id4390 . -1) (undo-tree-id4391 . -1) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1) (undo-tree-id4394 . -1) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (undo-tree-id4402 . -1) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) (undo-tree-id4405 . -1) (undo-tree-id4406 . -1) (undo-tree-id4407 . -1) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) (undo-tree-id4410 . -1) (undo-tree-id4411 . -1) (undo-tree-id4412 . -1) (undo-tree-id4413 . -1) (undo-tree-id4414 . -1) (undo-tree-id4415 . -1) (undo-tree-id4416 . -1) (undo-tree-id4417 . -1) (undo-tree-id4418 . -1) (undo-tree-id4419 . -1) (undo-tree-id4420 . -1) (undo-tree-id4421 . -1) (undo-tree-id4422 . -1) (undo-tree-id4423 . -1) (undo-tree-id4424 . -1) (undo-tree-id4425 . -1) (undo-tree-id4426 . -1) (undo-tree-id4427 . -1) (undo-tree-id4428 . -1) (undo-tree-id4429 . -1) (undo-tree-id4430 . -1) (undo-tree-id4431 . -1) (undo-tree-id4432 . -1) (undo-tree-id4433 . -1) (undo-tree-id4434 . -1) (undo-tree-id4435 . -1) (undo-tree-id4436 . -1) (undo-tree-id4437 . -1) (undo-tree-id4438 . -1) (undo-tree-id4439 . -1) (undo-tree-id4440 . -1) (undo-tree-id4441 . -1) (undo-tree-id4442 . -1) (undo-tree-id4443 . -1) (undo-tree-id4444 . -1) (undo-tree-id4445 . -1) (undo-tree-id4446 . -1) (undo-tree-id4447 . -1) (undo-tree-id4448 . -1) (undo-tree-id4449 . -1) (undo-tree-id4450 . -1) (undo-tree-id4451 . -1) (undo-tree-id4452 . -1) (undo-tree-id4453 . -1) (undo-tree-id4454 . -1) (undo-tree-id4455 . -1) (undo-tree-id4456 . -1) (undo-tree-id4457 . -1) (undo-tree-id4458 . -1) (undo-tree-id4459 . -1) (undo-tree-id4460 . -1) (undo-tree-id4461 . -1) (undo-tree-id4462 . -1) (undo-tree-id4463 . -1) (undo-tree-id4464 . -1) (undo-tree-id4465 . -1) (undo-tree-id4466 . -1) (undo-tree-id4467 . -1) (#("k" 0 1 (fontified t)) . -13144) (undo-tree-id4468 . -1) (undo-tree-id4469 . -1) (undo-tree-id4470 . -1) (undo-tree-id4471 . -1) (undo-tree-id4472 . -1) (undo-tree-id4473 . -1) (undo-tree-id4474 . -1) (undo-tree-id4475 . -1) (undo-tree-id4476 . -1) (undo-tree-id4477 . -1) (undo-tree-id4478 . -1) (undo-tree-id4479 . -1) (undo-tree-id4480 . -1) (undo-tree-id4481 . -1) (undo-tree-id4482 . -1) (undo-tree-id4483 . -1) (undo-tree-id4484 . -1) (undo-tree-id4485 . -1) (undo-tree-id4486 . -1) (undo-tree-id4487 . -1) (undo-tree-id4488 . -1) (undo-tree-id4489 . -1) (undo-tree-id4490 . -1) (undo-tree-id4491 . -1) (undo-tree-id4492 . -1) (undo-tree-id4493 . -1) (undo-tree-id4494 . -1) (undo-tree-id4495 . -1) (undo-tree-id4496 . -1) (undo-tree-id4497 . -1) (undo-tree-id4498 . -1) (undo-tree-id4499 . -1) (undo-tree-id4500 . -1) (undo-tree-id4501 . -1) (undo-tree-id4502 . -1) (undo-tree-id4503 . -1) (undo-tree-id4504 . -1) (undo-tree-id4505 . -1) (undo-tree-id4506 . -1) (undo-tree-id4507 . -1) (undo-tree-id4508 . -1) (undo-tree-id4509 . -1) (undo-tree-id4510 . -1) (undo-tree-id4511 . -1) (undo-tree-id4512 . -1) (undo-tree-id4513 . -1) (undo-tree-id4514 . -1) (undo-tree-id4515 . -1) (undo-tree-id4516 . -1) (undo-tree-id4517 . -1) (undo-tree-id4518 . -1) (undo-tree-id4519 . -1) (undo-tree-id4520 . -1) (undo-tree-id4521 . -1) (undo-tree-id4522 . -1) (undo-tree-id4523 . -1) (undo-tree-id4524 . -1) (undo-tree-id4525 . -1) (undo-tree-id4526 . -1) (undo-tree-id4527 . -1) (undo-tree-id4528 . -1) (undo-tree-id4529 . -1) (undo-tree-id4530 . -1) (undo-tree-id4531 . -1) (undo-tree-id4532 . -1) (undo-tree-id4533 . -1) (undo-tree-id4534 . -1) (undo-tree-id4535 . -1) (undo-tree-id4536 . -1) (undo-tree-id4537 . -1) (undo-tree-id4538 . -1) (undo-tree-id4539 . -1) (undo-tree-id4540 . -1) (undo-tree-id4541 . -1) (undo-tree-id4542 . -1) (undo-tree-id4543 . -1) (undo-tree-id4544 . -1) (undo-tree-id4545 . -1) (undo-tree-id4546 . -1) (undo-tree-id4547 . -1) (undo-tree-id4548 . -1) (undo-tree-id4549 . -1) (undo-tree-id4550 . -1) (undo-tree-id4551 . -1) (undo-tree-id4552 . -1) (undo-tree-id4553 . -1) (undo-tree-id4554 . -1) (undo-tree-id4555 . -1) (undo-tree-id4556 . -1) (undo-tree-id4557 . -1) (undo-tree-id4558 . -1) (undo-tree-id4559 . -1) (undo-tree-id4560 . -1) (undo-tree-id4561 . -1) (undo-tree-id4562 . -1) (undo-tree-id4563 . -1) (undo-tree-id4564 . -1) (undo-tree-id4565 . -1) (undo-tree-id4566 . -1) (undo-tree-id4567 . -1) (undo-tree-id4568 . -1) (undo-tree-id4569 . -1) (undo-tree-id4570 . -1) (undo-tree-id4571 . -1) (undo-tree-id4572 . -1) (undo-tree-id4573 . -1) (undo-tree-id4574 . -1) (undo-tree-id4575 . -1) (undo-tree-id4576 . -1) (undo-tree-id4577 . -1) (undo-tree-id4578 . -1) (undo-tree-id4579 . -1) (undo-tree-id4580 . -1) (undo-tree-id4581 . -1) (undo-tree-id4582 . -1) (undo-tree-id4583 . -1) (undo-tree-id4584 . -1) (undo-tree-id4585 . -1) (undo-tree-id4586 . -1) (undo-tree-id4587 . -1) (undo-tree-id4588 . -1) (undo-tree-id4589 . -1) (undo-tree-id4590 . -1) (undo-tree-id4591 . -1) (undo-tree-id4592 . -1) (undo-tree-id4593 . -1) (undo-tree-id4594 . -1) (undo-tree-id4595 . -1) (undo-tree-id4596 . -1) (undo-tree-id4597 . -1) (undo-tree-id4598 . -1) (undo-tree-id4599 . -1) (undo-tree-id4600 . -1) (undo-tree-id4601 . -1) (undo-tree-id4602 . -1) (undo-tree-id4603 . -1) (undo-tree-id4604 . -1) (undo-tree-id4605 . -1) (undo-tree-id4606 . -1) (undo-tree-id4607 . -1) (undo-tree-id4608 . -1) (undo-tree-id4609 . -1) (undo-tree-id4610 . -1) (undo-tree-id4611 . -1) (undo-tree-id4612 . -1) (undo-tree-id4613 . -1) (undo-tree-id4614 . -1) (undo-tree-id4615 . -1) (undo-tree-id4616 . -1) (undo-tree-id4617 . -1) (undo-tree-id4618 . -1) (undo-tree-id4619 . -1) (undo-tree-id4620 . -1) (undo-tree-id4621 . -1) (undo-tree-id4622 . -1) (undo-tree-id4623 . -1) (undo-tree-id4624 . -1) (undo-tree-id4625 . -1) (undo-tree-id4626 . -1) (undo-tree-id4627 . -1) (undo-tree-id4628 . -1) (undo-tree-id4629 . -1) (undo-tree-id4630 . -1) (undo-tree-id4631 . -1) (undo-tree-id4632 . -1) (undo-tree-id4633 . -1) (undo-tree-id4634 . -1) (undo-tree-id4635 . -1) (undo-tree-id4636 . -1) (undo-tree-id4637 . -1) (undo-tree-id4638 . -1) (undo-tree-id4639 . -1) (undo-tree-id4640 . -1) (undo-tree-id4641 . -1) (undo-tree-id4642 . -1) (undo-tree-id4643 . -1) (undo-tree-id4644 . -1) (undo-tree-id4645 . -1) (undo-tree-id4646 . -1) (undo-tree-id4647 . -1) (undo-tree-id4648 . -1) (undo-tree-id4649 . -1) (undo-tree-id4650 . -1) (undo-tree-id4651 . -1) (undo-tree-id4652 . -1) (undo-tree-id4653 . -1) (undo-tree-id4654 . -1) (undo-tree-id4655 . -1) (undo-tree-id4656 . -1) (undo-tree-id4657 . -1) (undo-tree-id4658 . -1) (undo-tree-id4659 . -1) (undo-tree-id4660 . -1) (undo-tree-id4661 . -1) (undo-tree-id4662 . -1) (undo-tree-id4663 . -1) (undo-tree-id4664 . -1) (#("l" 0 1 (fontified t)) . -13145) (undo-tree-id4665 . -1) (undo-tree-id4666 . -1) (undo-tree-id4667 . -1) (undo-tree-id4668 . -1) (undo-tree-id4669 . -1) (undo-tree-id4670 . -1) (undo-tree-id4671 . -1) (undo-tree-id4672 . -1) (undo-tree-id4673 . -1) (undo-tree-id4674 . -1) (undo-tree-id4675 . -1) (undo-tree-id4676 . -1) (undo-tree-id4677 . -1) (undo-tree-id4678 . -1) (undo-tree-id4679 . -1) (undo-tree-id4680 . -1) (undo-tree-id4681 . -1) (undo-tree-id4682 . -1) (undo-tree-id4683 . -1) (undo-tree-id4684 . -1) (undo-tree-id4685 . -1) (undo-tree-id4686 . -1) (undo-tree-id4687 . -1) (undo-tree-id4688 . -1) (undo-tree-id4689 . -1) (undo-tree-id4690 . -1) (undo-tree-id4691 . -1) (undo-tree-id4692 . -1) (undo-tree-id4693 . -1) (undo-tree-id4694 . -1) (undo-tree-id4695 . -1) (undo-tree-id4696 . -1) (undo-tree-id4697 . -1) (undo-tree-id4698 . -1) (undo-tree-id4699 . -1) (undo-tree-id4700 . -1) (undo-tree-id4701 . -1) (undo-tree-id4702 . -1) (undo-tree-id4703 . -1) (undo-tree-id4704 . -1) (undo-tree-id4705 . -1) (undo-tree-id4706 . -1) (undo-tree-id4707 . -1) (undo-tree-id4708 . -1) (undo-tree-id4709 . -1) (undo-tree-id4710 . -1) (undo-tree-id4711 . -1) (undo-tree-id4712 . -1) (undo-tree-id4713 . -1) (undo-tree-id4714 . -1) (undo-tree-id4715 . -1) (undo-tree-id4716 . -1) (undo-tree-id4717 . -1) (undo-tree-id4718 . -1) (undo-tree-id4719 . -1) (undo-tree-id4720 . -1) (undo-tree-id4721 . -1) (undo-tree-id4722 . -1) (undo-tree-id4723 . -1) (undo-tree-id4724 . -1) (undo-tree-id4725 . -1) (undo-tree-id4726 . -1) (undo-tree-id4727 . -1) (undo-tree-id4728 . -1) (undo-tree-id4729 . -1) (undo-tree-id4730 . -1) (undo-tree-id4731 . -1) (undo-tree-id4732 . -1) (undo-tree-id4733 . -1) (undo-tree-id4734 . -1) (undo-tree-id4735 . -1) (undo-tree-id4736 . -1) (undo-tree-id4737 . -1) (undo-tree-id4738 . -1) (undo-tree-id4739 . -1) (undo-tree-id4740 . -1) (undo-tree-id4741 . -1) (undo-tree-id4742 . -1) (undo-tree-id4743 . -1) (undo-tree-id4744 . -1) (undo-tree-id4745 . -1) (undo-tree-id4746 . -1) (undo-tree-id4747 . -1) (undo-tree-id4748 . -1) (undo-tree-id4749 . -1) (undo-tree-id4750 . -1) (undo-tree-id4751 . -1) (undo-tree-id4752 . -1) (undo-tree-id4753 . -1) (undo-tree-id4754 . -1) (undo-tree-id4755 . -1) (undo-tree-id4756 . -1) (undo-tree-id4757 . -1) (undo-tree-id4758 . -1) (undo-tree-id4759 . -1) (undo-tree-id4760 . -1) (undo-tree-id4761 . -1) (undo-tree-id4762 . -1) (undo-tree-id4763 . -1) (undo-tree-id4764 . -1) (undo-tree-id4765 . -1) (undo-tree-id4766 . -1) (undo-tree-id4767 . -1) (undo-tree-id4768 . -1) (undo-tree-id4769 . -1) (undo-tree-id4770 . -1) (undo-tree-id4771 . -1) (undo-tree-id4772 . -1) (undo-tree-id4773 . -1) (undo-tree-id4774 . -1) (undo-tree-id4775 . -1) (undo-tree-id4776 . -1) (undo-tree-id4777 . -1) (undo-tree-id4778 . -1) (undo-tree-id4779 . -1) (undo-tree-id4780 . -1) (undo-tree-id4781 . -1) (undo-tree-id4782 . -1) (undo-tree-id4783 . -1) (undo-tree-id4784 . -1) (undo-tree-id4785 . -1) (undo-tree-id4786 . -1) (undo-tree-id4787 . -1) (undo-tree-id4788 . -1) (undo-tree-id4789 . -1) (undo-tree-id4790 . -1) (undo-tree-id4791 . -1) (undo-tree-id4792 . -1) (undo-tree-id4793 . -1) (undo-tree-id4794 . -1) (undo-tree-id4795 . -1) (undo-tree-id4796 . -1) (undo-tree-id4797 . -1) (undo-tree-id4798 . -1) (undo-tree-id4799 . -1) (undo-tree-id4800 . -1) (undo-tree-id4801 . -1) (undo-tree-id4802 . -1) (undo-tree-id4803 . -1) (undo-tree-id4804 . -1) (undo-tree-id4805 . -1) (undo-tree-id4806 . -1) (undo-tree-id4807 . -1) (undo-tree-id4808 . -1) (undo-tree-id4809 . -1) (undo-tree-id4810 . -1) (undo-tree-id4811 . -1) (undo-tree-id4812 . -1) (undo-tree-id4813 . -1) (undo-tree-id4814 . -1) (undo-tree-id4815 . -1) (undo-tree-id4816 . -1) (undo-tree-id4817 . -1) (undo-tree-id4818 . -1) (undo-tree-id4819 . -1) (undo-tree-id4820 . -1) (undo-tree-id4821 . -1) (undo-tree-id4822 . -1) (undo-tree-id4823 . -1) (undo-tree-id4824 . -1) (undo-tree-id4825 . -1) (undo-tree-id4826 . -1) (undo-tree-id4827 . -1) (undo-tree-id4828 . -1) (undo-tree-id4829 . -1) (undo-tree-id4830 . -1) (undo-tree-id4831 . -1) (undo-tree-id4832 . -1) (undo-tree-id4833 . -1) (undo-tree-id4834 . -1) (undo-tree-id4835 . -1) (undo-tree-id4836 . -1) (undo-tree-id4837 . -1) (undo-tree-id4838 . -1) (undo-tree-id4839 . -1) (undo-tree-id4840 . -1) (#("i" 0 1 (fontified t)) . -13146) (undo-tree-id4841 . -1) (undo-tree-id4842 . -1) (undo-tree-id4843 . -1) (undo-tree-id4844 . -1) (undo-tree-id4845 . -1) (undo-tree-id4846 . -1) (undo-tree-id4847 . -1) (undo-tree-id4848 . -1) (undo-tree-id4849 . -1) (undo-tree-id4850 . -1) (undo-tree-id4851 . -1) (undo-tree-id4852 . -1) (undo-tree-id4853 . -1) (undo-tree-id4854 . -1) (undo-tree-id4855 . -1) (undo-tree-id4856 . -1) (undo-tree-id4857 . -1) (undo-tree-id4858 . -1) (undo-tree-id4859 . -1) (undo-tree-id4860 . -1) (undo-tree-id4861 . -1) (undo-tree-id4862 . -1) (undo-tree-id4863 . -1) (undo-tree-id4864 . -1) (undo-tree-id4865 . -1) (undo-tree-id4866 . -1) (undo-tree-id4867 . -1) (undo-tree-id4868 . -1) (undo-tree-id4869 . -1) (undo-tree-id4870 . -1) (undo-tree-id4871 . -1) (undo-tree-id4872 . -1) (undo-tree-id4873 . -1) (undo-tree-id4874 . -1) (undo-tree-id4875 . -1) (undo-tree-id4876 . -1) (undo-tree-id4877 . -1) (undo-tree-id4878 . -1) (undo-tree-id4879 . -1) (undo-tree-id4880 . -1) (undo-tree-id4881 . -1) (undo-tree-id4882 . -1) (undo-tree-id4883 . -1) (undo-tree-id4884 . -1) (undo-tree-id4885 . -1) (undo-tree-id4886 . -1) (undo-tree-id4887 . -1) (undo-tree-id4888 . -1) (undo-tree-id4889 . -1) (undo-tree-id4890 . -1) (undo-tree-id4891 . -1) (undo-tree-id4892 . -1) (undo-tree-id4893 . -1) (undo-tree-id4894 . -1) (undo-tree-id4895 . -1) (undo-tree-id4896 . -1) (undo-tree-id4897 . -1) (undo-tree-id4898 . -1) (undo-tree-id4899 . -1) (undo-tree-id4900 . -1) (undo-tree-id4901 . -1) (undo-tree-id4902 . -1) (undo-tree-id4903 . -1) (undo-tree-id4904 . -1) (undo-tree-id4905 . -1) (undo-tree-id4906 . -1) (undo-tree-id4907 . -1) (undo-tree-id4908 . -1) (undo-tree-id4909 . -1) (undo-tree-id4910 . -1) (undo-tree-id4911 . -1) (undo-tree-id4912 . -1) (undo-tree-id4913 . -1) (undo-tree-id4914 . -1) (undo-tree-id4915 . -1) (undo-tree-id4916 . -1) (undo-tree-id4917 . -1) (undo-tree-id4918 . -1) (undo-tree-id4919 . -1) (undo-tree-id4920 . -1) (undo-tree-id4921 . -1) (undo-tree-id4922 . -1) (undo-tree-id4923 . -1) (undo-tree-id4924 . -1) (undo-tree-id4925 . -1) (undo-tree-id4926 . -1) (undo-tree-id4927 . -1) (undo-tree-id4928 . -1) (undo-tree-id4929 . -1) (undo-tree-id4930 . -1) (undo-tree-id4931 . -1) (undo-tree-id4932 . -1) (undo-tree-id4933 . -1) (undo-tree-id4934 . -1) (undo-tree-id4935 . -1) (undo-tree-id4936 . -1) (undo-tree-id4937 . -1) (undo-tree-id4938 . -1) (undo-tree-id4939 . -1) (undo-tree-id4940 . -1) (undo-tree-id4941 . -1) (undo-tree-id4942 . -1) (undo-tree-id4943 . -1) (undo-tree-id4944 . -1) (undo-tree-id4945 . -1) (undo-tree-id4946 . -1) (undo-tree-id4947 . -1) (undo-tree-id4948 . -1) (undo-tree-id4949 . -1) (undo-tree-id4950 . -1) (undo-tree-id4951 . -1) (undo-tree-id4952 . -1) (undo-tree-id4953 . -1) (undo-tree-id4954 . -1) (undo-tree-id4955 . -1) (undo-tree-id4956 . -1) (undo-tree-id4957 . -1) (undo-tree-id4958 . -1) (undo-tree-id4959 . -1) (undo-tree-id4960 . -1) (undo-tree-id4961 . -1) (undo-tree-id4962 . -1) (undo-tree-id4963 . -1) (undo-tree-id4964 . -1) (undo-tree-id4965 . -1) (undo-tree-id4966 . -1) (undo-tree-id4967 . -1) (undo-tree-id4968 . -1) (undo-tree-id4969 . -1) (undo-tree-id4970 . -1) (undo-tree-id4971 . -1) (undo-tree-id4972 . -1) (undo-tree-id4973 . -1) (undo-tree-id4974 . -1) (undo-tree-id4975 . -1) (undo-tree-id4976 . -1) (undo-tree-id4977 . -1) (undo-tree-id4978 . -1) (undo-tree-id4979 . -1) (undo-tree-id4980 . -1) (undo-tree-id4981 . -1) (undo-tree-id4982 . -1) (undo-tree-id4983 . -1) (undo-tree-id4984 . -1) (undo-tree-id4985 . -1) (undo-tree-id4986 . -1) (undo-tree-id4987 . -1) (undo-tree-id4988 . -1) (undo-tree-id4989 . -1) (undo-tree-id4990 . -1) (undo-tree-id4991 . -1) (undo-tree-id4992 . -1) (undo-tree-id4993 . -1) (undo-tree-id4994 . -1) (undo-tree-id4995 . -1) (undo-tree-id4996 . -1) (undo-tree-id4997 . -1) (undo-tree-id4998 . -1) (undo-tree-id4999 . -1) (undo-tree-id5000 . -1) (#("n" 0 1 (fontified t)) . -13147) (undo-tree-id5001 . -1) (undo-tree-id5002 . -1) (undo-tree-id5003 . -1) (undo-tree-id5004 . -1) (undo-tree-id5005 . -1) (undo-tree-id5006 . -1) (undo-tree-id5007 . -1) (undo-tree-id5008 . -1) (undo-tree-id5009 . -1) (undo-tree-id5010 . -1) (undo-tree-id5011 . -1) (undo-tree-id5012 . -1) (undo-tree-id5013 . -1) (undo-tree-id5014 . -1) (undo-tree-id5015 . -1) (undo-tree-id5016 . -1) (undo-tree-id5017 . -1) (undo-tree-id5018 . -1) (undo-tree-id5019 . -1) (undo-tree-id5020 . -1) (undo-tree-id5021 . -1) (undo-tree-id5022 . -1) (undo-tree-id5023 . -1) (undo-tree-id5024 . -1) (undo-tree-id5025 . -1) (undo-tree-id5026 . -1) (undo-tree-id5027 . -1) (undo-tree-id5028 . -1) (undo-tree-id5029 . -1) (undo-tree-id5030 . -1) (undo-tree-id5031 . -1) (undo-tree-id5032 . -1) (undo-tree-id5033 . -1) (undo-tree-id5034 . -1) (undo-tree-id5035 . -1) (undo-tree-id5036 . -1) (undo-tree-id5037 . -1) (undo-tree-id5038 . -1) (undo-tree-id5039 . -1) (undo-tree-id5040 . -1) (undo-tree-id5041 . -1) (undo-tree-id5042 . -1) (undo-tree-id5043 . -1) (undo-tree-id5044 . -1) (undo-tree-id5045 . -1) (undo-tree-id5046 . -1) (undo-tree-id5047 . -1) (undo-tree-id5048 . -1) (undo-tree-id5049 . -1) (undo-tree-id5050 . -1) (undo-tree-id5051 . -1) (undo-tree-id5052 . -1) (undo-tree-id5053 . -1) (undo-tree-id5054 . -1) (undo-tree-id5055 . -1) (undo-tree-id5056 . -1) (undo-tree-id5057 . -1) (undo-tree-id5058 . -1) (undo-tree-id5059 . -1) (undo-tree-id5060 . -1) (undo-tree-id5061 . -1) (undo-tree-id5062 . -1) (undo-tree-id5063 . -1) (undo-tree-id5064 . -1) (undo-tree-id5065 . -1) (undo-tree-id5066 . -1) (undo-tree-id5067 . -1) (undo-tree-id5068 . -1) (undo-tree-id5069 . -1) (undo-tree-id5070 . -1) (undo-tree-id5071 . -1) (undo-tree-id5072 . -1) (undo-tree-id5073 . -1) (undo-tree-id5074 . -1) (undo-tree-id5075 . -1) (undo-tree-id5076 . -1) (undo-tree-id5077 . -1) (undo-tree-id5078 . -1) (undo-tree-id5079 . -1) (undo-tree-id5080 . -1) (undo-tree-id5081 . -1) (undo-tree-id5082 . -1) (undo-tree-id5083 . -1) (undo-tree-id5084 . -1) (undo-tree-id5085 . -1) (undo-tree-id5086 . -1) (undo-tree-id5087 . -1) (undo-tree-id5088 . -1) (undo-tree-id5089 . -1) (undo-tree-id5090 . -1) (undo-tree-id5091 . -1) (undo-tree-id5092 . -1) (undo-tree-id5093 . -1) (undo-tree-id5094 . -1) (undo-tree-id5095 . -1) (undo-tree-id5096 . -1) (undo-tree-id5097 . -1) (undo-tree-id5098 . -1) (undo-tree-id5099 . -1) (undo-tree-id5100 . -1) (undo-tree-id5101 . -1) (undo-tree-id5102 . -1) (undo-tree-id5103 . -1) (undo-tree-id5104 . -1) (undo-tree-id5105 . -1) (undo-tree-id5106 . -1) (undo-tree-id5107 . -1) (undo-tree-id5108 . -1) (undo-tree-id5109 . -1) (undo-tree-id5110 . -1) (undo-tree-id5111 . -1) (undo-tree-id5112 . -1) (undo-tree-id5113 . -1) (undo-tree-id5114 . -1) (undo-tree-id5115 . -1) (undo-tree-id5116 . -1) (undo-tree-id5117 . -1) (undo-tree-id5118 . -1) (undo-tree-id5119 . -1) (undo-tree-id5120 . -1) (undo-tree-id5121 . -1) (undo-tree-id5122 . -1) (undo-tree-id5123 . -1) (undo-tree-id5124 . -1) (undo-tree-id5125 . -1) (undo-tree-id5126 . -1) (undo-tree-id5127 . -1) (undo-tree-id5128 . -1) (undo-tree-id5129 . -1) (undo-tree-id5130 . -1) (undo-tree-id5131 . -1) (undo-tree-id5132 . -1) (undo-tree-id5133 . -1) (undo-tree-id5134 . -1) (#("k" 0 1 (fontified t)) . -13148) (undo-tree-id5135 . -1) (undo-tree-id5136 . -1) (undo-tree-id5137 . -1) (undo-tree-id5138 . -1) (undo-tree-id5139 . -1) (undo-tree-id5140 . -1) (undo-tree-id5141 . -1) (undo-tree-id5142 . -1) (undo-tree-id5143 . -1) (undo-tree-id5144 . -1) (undo-tree-id5145 . -1) (undo-tree-id5146 . -1) (undo-tree-id5147 . -1) (undo-tree-id5148 . -1) (undo-tree-id5149 . -1) (undo-tree-id5150 . -1) (undo-tree-id5151 . -1) (undo-tree-id5152 . -1) (undo-tree-id5153 . -1) (undo-tree-id5154 . -1) (undo-tree-id5155 . -1) (undo-tree-id5156 . -1) (undo-tree-id5157 . -1) (undo-tree-id5158 . -1) (undo-tree-id5159 . -1) (undo-tree-id5160 . -1) (undo-tree-id5161 . -1) (undo-tree-id5162 . -1) (undo-tree-id5163 . -1) (undo-tree-id5164 . -1) (undo-tree-id5165 . -1) (undo-tree-id5166 . -1) (undo-tree-id5167 . -1) (undo-tree-id5168 . -1) (undo-tree-id5169 . -1) (undo-tree-id5170 . -1) (undo-tree-id5171 . -1) (undo-tree-id5172 . -1) (undo-tree-id5173 . -1) (undo-tree-id5174 . -1) (undo-tree-id5175 . -1) (undo-tree-id5176 . -1) (undo-tree-id5177 . -1) (undo-tree-id5178 . -1) (undo-tree-id5179 . -1) (undo-tree-id5180 . -1) (undo-tree-id5181 . -1) (undo-tree-id5182 . -1) (undo-tree-id5183 . -1) (undo-tree-id5184 . -1) (undo-tree-id5185 . -1) (undo-tree-id5186 . -1) (undo-tree-id5187 . -1) (undo-tree-id5188 . -1) (undo-tree-id5189 . -1) (undo-tree-id5190 . -1) (undo-tree-id5191 . -1) (undo-tree-id5192 . -1) (undo-tree-id5193 . -1) (undo-tree-id5194 . -1) (undo-tree-id5195 . -1) (undo-tree-id5196 . -1) (undo-tree-id5197 . -1) (undo-tree-id5198 . -1) (undo-tree-id5199 . -1) (undo-tree-id5200 . -1) (undo-tree-id5201 . -1) (undo-tree-id5202 . -1) (undo-tree-id5203 . -1) (undo-tree-id5204 . -1) (undo-tree-id5205 . -1) (undo-tree-id5206 . -1) (undo-tree-id5207 . -1) (undo-tree-id5208 . -1) (undo-tree-id5209 . -1) (undo-tree-id5210 . -1) (undo-tree-id5211 . -1) (undo-tree-id5212 . -1) (undo-tree-id5213 . -1) (undo-tree-id5214 . -1) (undo-tree-id5215 . -1) (undo-tree-id5216 . -1) (undo-tree-id5217 . -1) (undo-tree-id5218 . -1) (undo-tree-id5219 . -1) (undo-tree-id5220 . -1) (undo-tree-id5221 . -1) (undo-tree-id5222 . -1) (undo-tree-id5223 . -1) (undo-tree-id5224 . -1) (undo-tree-id5225 . -1) (undo-tree-id5226 . -1) (undo-tree-id5227 . -1) (undo-tree-id5228 . -1) (undo-tree-id5229 . -1) (undo-tree-id5230 . -1) (undo-tree-id5231 . -1) (undo-tree-id5232 . -1) (undo-tree-id5233 . -1) (undo-tree-id5234 . -1) (undo-tree-id5235 . -1) (undo-tree-id5236 . -1) (undo-tree-id5237 . -1) (undo-tree-id5238 . -1) (undo-tree-id5239 . -1) (undo-tree-id5240 . -1) (undo-tree-id5241 . -1) (undo-tree-id5242 . -1) (undo-tree-id5243 . -1) (undo-tree-id5244 . -1) (undo-tree-id5245 . -1) (undo-tree-id5246 . -1) (undo-tree-id5247 . -1) (#("s" 0 1 (fontified t)) . -13149) (undo-tree-id5248 . -1) (undo-tree-id5249 . -1) (undo-tree-id5250 . -1) (undo-tree-id5251 . -1) (undo-tree-id5252 . -1) (undo-tree-id5253 . -1) (undo-tree-id5254 . -1) (undo-tree-id5255 . -1) (undo-tree-id5256 . -1) (undo-tree-id5257 . -1) (undo-tree-id5258 . -1) (undo-tree-id5259 . -1) (undo-tree-id5260 . -1) (undo-tree-id5261 . -1) (undo-tree-id5262 . -1) (undo-tree-id5263 . -1) (undo-tree-id5264 . -1) (undo-tree-id5265 . -1) (undo-tree-id5266 . -1) (undo-tree-id5267 . -1) (undo-tree-id5268 . -1) (undo-tree-id5269 . -1) (undo-tree-id5270 . -1) (undo-tree-id5271 . -1) (undo-tree-id5272 . -1) (undo-tree-id5273 . -1) (undo-tree-id5274 . -1) (undo-tree-id5275 . -1) (undo-tree-id5276 . -1) (undo-tree-id5277 . -1) (undo-tree-id5278 . -1) (undo-tree-id5279 . -1) (undo-tree-id5280 . -1) (undo-tree-id5281 . -1) (undo-tree-id5282 . -1) (undo-tree-id5283 . -1) (undo-tree-id5284 . -1) (undo-tree-id5285 . -1) (undo-tree-id5286 . -1) (undo-tree-id5287 . -1) (undo-tree-id5288 . -1) (undo-tree-id5289 . -1) (undo-tree-id5290 . -1) (undo-tree-id5291 . -1) (undo-tree-id5292 . -1) (undo-tree-id5293 . -1) (undo-tree-id5294 . -1) (undo-tree-id5295 . -1) (undo-tree-id5296 . -1) (undo-tree-id5297 . -1) (undo-tree-id5298 . -1) (undo-tree-id5299 . -1) (undo-tree-id5300 . -1) (undo-tree-id5301 . -1) (undo-tree-id5302 . -1) (undo-tree-id5303 . -1) (undo-tree-id5304 . -1) (undo-tree-id5305 . -1) (undo-tree-id5306 . -1) (undo-tree-id5307 . -1) (undo-tree-id5308 . -1) (undo-tree-id5309 . -1) (undo-tree-id5310 . -1) (undo-tree-id5311 . -1) (undo-tree-id5312 . -1) (undo-tree-id5313 . -1) (undo-tree-id5314 . -1) (undo-tree-id5315 . -1) (undo-tree-id5316 . -1) (undo-tree-id5317 . -1) (undo-tree-id5318 . -1) (undo-tree-id5319 . -1) (undo-tree-id5320 . -1) (undo-tree-id5321 . -1) (undo-tree-id5322 . -1) (undo-tree-id5323 . -1) (undo-tree-id5324 . -1) (undo-tree-id5325 . -1) (undo-tree-id5326 . -1) (undo-tree-id5327 . -1) (undo-tree-id5328 . -1) (undo-tree-id5329 . -1) (undo-tree-id5330 . -1) (undo-tree-id5331 . -1) (undo-tree-id5332 . -1) (undo-tree-id5333 . -1) (undo-tree-id5334 . -1) (undo-tree-id5335 . -1) (undo-tree-id5336 . -1) (undo-tree-id5337 . -1) (undo-tree-id5338 . -1) (undo-tree-id5339 . -1) (undo-tree-id5340 . -1) (undo-tree-id5341 . -1) (undo-tree-id5342 . -1) (undo-tree-id5343 . -1) (undo-tree-id5344 . -1) (#("." 0 1 (fontified t)) . -13150) (undo-tree-id5345 . -1) (undo-tree-id5346 . -1) (undo-tree-id5347 . -1) (undo-tree-id5348 . -1) (undo-tree-id5349 . -1) (undo-tree-id5350 . -1) (undo-tree-id5351 . -1) (undo-tree-id5352 . -1) (undo-tree-id5353 . -1) (undo-tree-id5354 . -1) (undo-tree-id5355 . -1) (undo-tree-id5356 . -1) (undo-tree-id5357 . -1) (undo-tree-id5358 . -1) (undo-tree-id5359 . -1) (undo-tree-id5360 . -1) (undo-tree-id5361 . -1) (undo-tree-id5362 . -1) (undo-tree-id5363 . -1) (undo-tree-id5364 . -1) (undo-tree-id5365 . -1) (undo-tree-id5366 . -1) (undo-tree-id5367 . -1) (undo-tree-id5368 . -1) (undo-tree-id5369 . -1) (undo-tree-id5370 . -1) (undo-tree-id5371 . -1) (undo-tree-id5372 . -1) (undo-tree-id5373 . -1) (undo-tree-id5374 . -1) (undo-tree-id5375 . -1) (undo-tree-id5376 . -1) (undo-tree-id5377 . -1) (undo-tree-id5378 . -1) (undo-tree-id5379 . -1) (undo-tree-id5380 . -1) (undo-tree-id5381 . -1) (undo-tree-id5382 . -1) (undo-tree-id5383 . -1) (undo-tree-id5384 . -1) (undo-tree-id5385 . -1) (undo-tree-id5386 . -1) (undo-tree-id5387 . -1) (undo-tree-id5388 . -1) (undo-tree-id5389 . -1) (undo-tree-id5390 . -1) (undo-tree-id5391 . -1) (undo-tree-id5392 . -1) (undo-tree-id5393 . -1) (undo-tree-id5394 . -1) (undo-tree-id5395 . -1) (undo-tree-id5396 . -1) (undo-tree-id5397 . -1) (undo-tree-id5398 . -1) (undo-tree-id5399 . -1) (undo-tree-id5400 . -1) (undo-tree-id5401 . -1) (undo-tree-id5402 . -1) (undo-tree-id5403 . -1) (undo-tree-id5404 . -1) (undo-tree-id5405 . -1) (undo-tree-id5406 . -1) (undo-tree-id5407 . -1) (undo-tree-id5408 . -1) (undo-tree-id5409 . -1) (undo-tree-id5410 . -1) (undo-tree-id5411 . -1) (undo-tree-id5412 . -1) (undo-tree-id5413 . -1) (undo-tree-id5414 . -1) (undo-tree-id5415 . -1) (undo-tree-id5416 . -1) (undo-tree-id5417 . -1) (undo-tree-id5418 . -1) (undo-tree-id5419 . -1) (undo-tree-id5420 . -1) (#("e" 0 1 (fontified t)) . -13151) (undo-tree-id5421 . -1) (undo-tree-id5422 . -1) (undo-tree-id5423 . -1) (undo-tree-id5424 . -1) (undo-tree-id5425 . -1) (undo-tree-id5426 . -1) (undo-tree-id5427 . -1) (undo-tree-id5428 . -1) (undo-tree-id5429 . -1) (undo-tree-id5430 . -1) (undo-tree-id5431 . -1) (undo-tree-id5432 . -1) (undo-tree-id5433 . -1) (undo-tree-id5434 . -1) (undo-tree-id5435 . -1) (undo-tree-id5436 . -1) (undo-tree-id5437 . -1) (undo-tree-id5438 . -1) (undo-tree-id5439 . -1) (undo-tree-id5440 . -1) (undo-tree-id5441 . -1) (undo-tree-id5442 . -1) (undo-tree-id5443 . -1) (undo-tree-id5444 . -1) (undo-tree-id5445 . -1) (undo-tree-id5446 . -1) (undo-tree-id5447 . -1) (undo-tree-id5448 . -1) (undo-tree-id5449 . -1) (undo-tree-id5450 . -1) (undo-tree-id5451 . -1) (undo-tree-id5452 . -1) (undo-tree-id5453 . -1) (undo-tree-id5454 . -1) (undo-tree-id5455 . -1) (undo-tree-id5456 . -1) (undo-tree-id5457 . -1) (undo-tree-id5458 . -1) (undo-tree-id5459 . -1) (undo-tree-id5460 . -1) (undo-tree-id5461 . -1) (undo-tree-id5462 . -1) (undo-tree-id5463 . -1) (undo-tree-id5464 . -1) (undo-tree-id5465 . -1) (undo-tree-id5466 . -1) (undo-tree-id5467 . -1) (undo-tree-id5468 . -1) (undo-tree-id5469 . -1) (undo-tree-id5470 . -1) (#("l" 0 1 (fontified t)) . -13152) (undo-tree-id5471 . -1) (undo-tree-id5472 . -1) (undo-tree-id5473 . -1) (undo-tree-id5474 . -1) (undo-tree-id5475 . -1) (undo-tree-id5476 . -1) (undo-tree-id5477 . -1) (undo-tree-id5478 . -1) (undo-tree-id5479 . -1) (undo-tree-id5480 . -1) (undo-tree-id5481 . -1) (undo-tree-id5482 . -1) (undo-tree-id5483 . -1) (undo-tree-id5484 . -1) (undo-tree-id5485 . -1) (undo-tree-id5486 . -1) (undo-tree-id5487 . -1) (undo-tree-id5488 . -1) (undo-tree-id5489 . -1) (undo-tree-id5490 . -1) (undo-tree-id5491 . -1) (undo-tree-id5492 . -1) (undo-tree-id5493 . -1) (undo-tree-id5494 . -1) 13153 (13140 . 13153) (#("s" 0 1 (fontified t)) . -13140) (undo-tree-id5495 . -1) (undo-tree-id5496 . -1) (undo-tree-id5497 . -1) (undo-tree-id5498 . -1) (undo-tree-id5499 . -1) (undo-tree-id5500 . -1) (undo-tree-id5501 . -1) (undo-tree-id5502 . -1) (undo-tree-id5503 . -1) (undo-tree-id5504 . -1) (undo-tree-id5505 . -1) (undo-tree-id5506 . -1) (undo-tree-id5507 . -1) (undo-tree-id5508 . -1) (undo-tree-id5509 . -1) (undo-tree-id5510 . -1) (undo-tree-id5511 . -1) (undo-tree-id5512 . -1) (undo-tree-id5513 . -1) (undo-tree-id5514 . -1) (undo-tree-id5515 . -1) (undo-tree-id5516 . -1) (undo-tree-id5517 . -1) (undo-tree-id5518 . -1) (undo-tree-id5519 . -1) (undo-tree-id5520 . -1) (undo-tree-id5521 . -1) (undo-tree-id5522 . -1) (undo-tree-id5523 . -1) (undo-tree-id5524 . -1) (undo-tree-id5525 . -1) (undo-tree-id5526 . -1) (undo-tree-id5527 . -1) (undo-tree-id5528 . -1) (undo-tree-id5529 . -1) 13141 (13138 . 13141) (13129 . 13138) (#("r" 0 1 (fontified t)) . -13129) (undo-tree-id5530 . -1) (undo-tree-id5531 . -1) (undo-tree-id5532 . -1) (undo-tree-id5533 . -1) (undo-tree-id5534 . -1) (undo-tree-id5535 . -1) (undo-tree-id5536 . -1) (undo-tree-id5537 . -1) (undo-tree-id5538 . -1) (undo-tree-id5539 . -1) (undo-tree-id5540 . -1) (undo-tree-id5541 . -1) (undo-tree-id5542 . -1) (undo-tree-id5543 . -1) (undo-tree-id5544 . -1) (undo-tree-id5545 . -1) (undo-tree-id5546 . -1) (undo-tree-id5547 . -1) (undo-tree-id5548 . -1) 13130 (13129 . 13130) (#("w" 0 1 (fontified t)) . -13129) (undo-tree-id5549 . -1) (undo-tree-id5550 . -1) (undo-tree-id5551 . -1) (undo-tree-id5552 . -1) (undo-tree-id5553 . -1) (undo-tree-id5554 . -1) (undo-tree-id5555 . -1) (undo-tree-id5556 . -1) (undo-tree-id5557 . -1) (undo-tree-id5558 . -1) (undo-tree-id5559 . -1) (undo-tree-id5560 . -1) (undo-tree-id5561 . -1) (undo-tree-id5562 . -1) (undo-tree-id5563 . -1) (undo-tree-id5564 . -1) (undo-tree-id5565 . -1) (undo-tree-id5566 . -1) (undo-tree-id5567 . -1) 13130 (13114 . 13130) (#("e" 0 1 (fontified t)) . -13114) (undo-tree-id5568 . -1) (undo-tree-id5569 . -1) (undo-tree-id5570 . -1) (undo-tree-id5571 . -1) (undo-tree-id5572 . -1) (undo-tree-id5573 . -1) (undo-tree-id5574 . -1) (undo-tree-id5575 . -1) (undo-tree-id5576 . -1) (undo-tree-id5577 . -1) (undo-tree-id5578 . -1) (undo-tree-id5579 . -1) (undo-tree-id5580 . -1) (undo-tree-id5581 . -1) (undo-tree-id5582 . -1) (undo-tree-id5583 . -1) (undo-tree-id5584 . -1) (undo-tree-id5585 . -1) (undo-tree-id5586 . -1) (undo-tree-id5587 . -1) (undo-tree-id5588 . -1) (undo-tree-id5589 . -1) (undo-tree-id5590 . -1) (undo-tree-id5591 . -1) (undo-tree-id5592 . -1) (undo-tree-id5593 . -1) (undo-tree-id5594 . -1) (undo-tree-id5595 . -1) (undo-tree-id5596 . -1) (undo-tree-id5597 . -1) (undo-tree-id5598 . -1) (undo-tree-id5599 . -1) (undo-tree-id5600 . -1) (undo-tree-id5601 . -1) (undo-tree-id5602 . -1) (undo-tree-id5603 . -1) (undo-tree-id5604 . -1) (undo-tree-id5605 . -1) (undo-tree-id5606 . -1) (undo-tree-id5607 . -1) (undo-tree-id5608 . -1) (undo-tree-id5609 . -1) (undo-tree-id5610 . -1) (undo-tree-id5611 . -1) (undo-tree-id5612 . -1) (undo-tree-id5613 . -1) (undo-tree-id5614 . -1) (undo-tree-id5615 . -1) (undo-tree-id5616 . -1) (undo-tree-id5617 . -1) (undo-tree-id5618 . -1) (undo-tree-id5619 . -1) (undo-tree-id5620 . -1) (undo-tree-id5621 . -1) (undo-tree-id5622 . -1) (undo-tree-id5623 . -1) (undo-tree-id5624 . -1) (undo-tree-id5625 . -1) (undo-tree-id5626 . -1) (undo-tree-id5627 . -1) (undo-tree-id5628 . -1) (undo-tree-id5629 . -1) (undo-tree-id5630 . -1) (undo-tree-id5631 . -1) (undo-tree-id5632 . -1) (undo-tree-id5633 . -1) (undo-tree-id5634 . -1) (undo-tree-id5635 . -1) (undo-tree-id5636 . -1) (undo-tree-id5637 . -1) (undo-tree-id5638 . -1) (undo-tree-id5639 . -1) (undo-tree-id5640 . -1) (undo-tree-id5641 . -1) (undo-tree-id5642 . -1) (undo-tree-id5643 . -1) (undo-tree-id5644 . -1) (undo-tree-id5645 . -1) (undo-tree-id5646 . -1) (#("s" 0 1 (fontified t)) . -13115) (undo-tree-id5647 . -1) (undo-tree-id5648 . -1) (undo-tree-id5649 . -1) (undo-tree-id5650 . -1) (undo-tree-id5651 . -1) (undo-tree-id5652 . -1) (undo-tree-id5653 . -1) (undo-tree-id5654 . -1) (undo-tree-id5655 . -1) (undo-tree-id5656 . -1) (undo-tree-id5657 . -1) (undo-tree-id5658 . -1) (undo-tree-id5659 . -1) (undo-tree-id5660 . -1) (undo-tree-id5661 . -1) (undo-tree-id5662 . -1) (undo-tree-id5663 . -1) (undo-tree-id5664 . -1) (undo-tree-id5665 . -1) (undo-tree-id5666 . -1) (undo-tree-id5667 . -1) (undo-tree-id5668 . -1) (undo-tree-id5669 . -1) (undo-tree-id5670 . -1) (undo-tree-id5671 . -1) (undo-tree-id5672 . -1) (undo-tree-id5673 . -1) (undo-tree-id5674 . -1) (undo-tree-id5675 . -1) (undo-tree-id5676 . -1) (undo-tree-id5677 . -1) (undo-tree-id5678 . -1) (undo-tree-id5679 . -1) (undo-tree-id5680 . -1) (undo-tree-id5681 . -1) (undo-tree-id5682 . -1) (undo-tree-id5683 . -1) (undo-tree-id5684 . -1) (#("e" 0 1 (fontified t)) . -13116) (undo-tree-id5685 . -1) (undo-tree-id5686 . -1) (undo-tree-id5687 . -1) (undo-tree-id5688 . -1) (undo-tree-id5689 . -1) (undo-tree-id5690 . -1) (undo-tree-id5691 . -1) (undo-tree-id5692 . -1) (undo-tree-id5693 . -1) (undo-tree-id5694 . -1) (undo-tree-id5695 . -1) (undo-tree-id5696 . -1) (undo-tree-id5697 . -1) (undo-tree-id5698 . -1) (undo-tree-id5699 . -1) (undo-tree-id5700 . -1) (undo-tree-id5701 . -1) (undo-tree-id5702 . -1) (undo-tree-id5703 . -1) (undo-tree-id5704 . -1) (undo-tree-id5705 . -1) 13117 (13114 . 13117) (13093 . 13114) (#("t" 0 1 (fontified t)) . -13093) (undo-tree-id5706 . -1) (undo-tree-id5707 . -1) (undo-tree-id5708 . -1) (undo-tree-id5709 . -1) (undo-tree-id5710 . -1) (undo-tree-id5711 . -1) (undo-tree-id5712 . -1) (undo-tree-id5713 . -1) (undo-tree-id5714 . -1) (undo-tree-id5715 . -1) (undo-tree-id5716 . -1) (undo-tree-id5717 . -1) (undo-tree-id5718 . -1) (undo-tree-id5719 . -1) (undo-tree-id5720 . -1) (undo-tree-id5721 . -1) (undo-tree-id5722 . -1) (undo-tree-id5723 . -1) (undo-tree-id5724 . -1) (undo-tree-id5725 . -1) (undo-tree-id5726 . -1) (undo-tree-id5727 . -1) (undo-tree-id5728 . -1) (undo-tree-id5729 . -1) (undo-tree-id5730 . -1) (undo-tree-id5731 . -1) (undo-tree-id5732 . -1) (undo-tree-id5733 . -1) (undo-tree-id5734 . -1) (undo-tree-id5735 . -1) (undo-tree-id5736 . -1) (undo-tree-id5737 . -1) (undo-tree-id5738 . -1) (undo-tree-id5739 . -1) (undo-tree-id5740 . -1) (#("h" 0 1 (fontified t)) . -13094) (undo-tree-id5741 . -1) (undo-tree-id5742 . -1) (undo-tree-id5743 . -1) (undo-tree-id5744 . -1) (undo-tree-id5745 . -1) (undo-tree-id5746 . -1) (undo-tree-id5747 . -1) (undo-tree-id5748 . -1) (undo-tree-id5749 . -1) (undo-tree-id5750 . -1) (undo-tree-id5751 . -1) (undo-tree-id5752 . -1) (undo-tree-id5753 . -1) (undo-tree-id5754 . -1) (undo-tree-id5755 . -1) (undo-tree-id5756 . -1) (undo-tree-id5757 . -1) (undo-tree-id5758 . -1) (undo-tree-id5759 . -1) 13095 (13088 . 13095) (13083 . 13088) (#("." 0 1 (fontified t)) . -13083) (undo-tree-id5760 . -1) (undo-tree-id5761 . -1) (undo-tree-id5762 . -1) (undo-tree-id5763 . -1) (undo-tree-id5764 . -1) (undo-tree-id5765 . -1) (undo-tree-id5766 . -1) (undo-tree-id5767 . -1) (undo-tree-id5768 . -1) (undo-tree-id5769 . -1) (undo-tree-id5770 . -1) (undo-tree-id5771 . -1) (undo-tree-id5772 . -1) (undo-tree-id5773 . -1) (undo-tree-id5774 . -1) (undo-tree-id5775 . -1) (undo-tree-id5776 . -1) (undo-tree-id5777 . -1) (undo-tree-id5778 . -1) (undo-tree-id5779 . -1) (undo-tree-id5780 . -1) (undo-tree-id5781 . -1) (undo-tree-id5782 . -1) (undo-tree-id5783 . -1) (undo-tree-id5784 . -1) (undo-tree-id5785 . -1) (undo-tree-id5786 . -1) (undo-tree-id5787 . -1) (undo-tree-id5788 . -1) (undo-tree-id5789 . -1) (undo-tree-id5790 . -1) (undo-tree-id5791 . -1) (undo-tree-id5792 . -1) (undo-tree-id5793 . -1) (undo-tree-id5794 . -1) (undo-tree-id5795 . -1) (undo-tree-id5796 . -1) (undo-tree-id5797 . -1) (undo-tree-id5798 . -1) (undo-tree-id5799 . -1) (undo-tree-id5800 . -1) (undo-tree-id5801 . -1) (undo-tree-id5802 . -1) (undo-tree-id5803 . -1) (undo-tree-id5804 . -1) (undo-tree-id5805 . -1) (undo-tree-id5806 . -1) (undo-tree-id5807 . -1) (undo-tree-id5808 . -1) (undo-tree-id5809 . -1) (undo-tree-id5810 . -1) (undo-tree-id5811 . -1) (undo-tree-id5812 . -1) (undo-tree-id5813 . -1) (undo-tree-id5814 . -1) (undo-tree-id5815 . -1) (#(" " 0 1 (fontified t)) . -13084) (undo-tree-id5816 . -1) (undo-tree-id5817 . -1) (undo-tree-id5818 . -1) (undo-tree-id5819 . -1) (undo-tree-id5820 . -1) (undo-tree-id5821 . -1) (undo-tree-id5822 . -1) (undo-tree-id5823 . -1) (undo-tree-id5824 . -1) (undo-tree-id5825 . -1) (undo-tree-id5826 . -1) (undo-tree-id5827 . -1) (undo-tree-id5828 . -1) (undo-tree-id5829 . -1) (undo-tree-id5830 . -1) (undo-tree-id5831 . -1) (undo-tree-id5832 . -1) (undo-tree-id5833 . -1) (undo-tree-id5834 . -1) (undo-tree-id5835 . -1) (undo-tree-id5836 . -1) (undo-tree-id5837 . -1) (undo-tree-id5838 . -1) (undo-tree-id5839 . -1) (undo-tree-id5840 . -1) (undo-tree-id5841 . -1) (undo-tree-id5842 . -1) (undo-tree-id5843 . -1) (undo-tree-id5844 . -1) (undo-tree-id5845 . -1) (undo-tree-id5846 . -1) (undo-tree-id5847 . -1) (undo-tree-id5848 . -1) (undo-tree-id5849 . -1) 13085 (13072 . 13085) (13071 . 13072) (13050 . 13071) (13043 . 13050) (13022 . 13043) (#("r" 0 1 (fontified t)) . -13022) (undo-tree-id5850 . -1) (undo-tree-id5851 . -1) (undo-tree-id5852 . -1) (undo-tree-id5853 . -1) (undo-tree-id5854 . -1) (undo-tree-id5855 . -1) (undo-tree-id5856 . -1) (undo-tree-id5857 . -1) (undo-tree-id5858 . -1) (undo-tree-id5859 . -1) (undo-tree-id5860 . -1) (undo-tree-id5861 . -1) (undo-tree-id5862 . -1) (undo-tree-id5863 . -1) (undo-tree-id5864 . -1) (undo-tree-id5865 . -1) (undo-tree-id5866 . -1) (undo-tree-id5867 . -1) (undo-tree-id5868 . -1) (undo-tree-id5869 . -1) (undo-tree-id5870 . -1) (undo-tree-id5871 . -1) (undo-tree-id5872 . -1) (undo-tree-id5873 . -1) (undo-tree-id5874 . -1) (undo-tree-id5875 . -1) (undo-tree-id5876 . -1) (undo-tree-id5877 . -1) (undo-tree-id5878 . -1) (undo-tree-id5879 . -1) (undo-tree-id5880 . -1) (undo-tree-id5881 . -1) (undo-tree-id5882 . -1) (undo-tree-id5883 . -1) (undo-tree-id5884 . -1) (undo-tree-id5885 . -1) (undo-tree-id5886 . -1) (undo-tree-id5887 . -1) (undo-tree-id5888 . -1) (undo-tree-id5889 . -1) (undo-tree-id5890 . -1) (undo-tree-id5891 . -1) (undo-tree-id5892 . -1) (undo-tree-id5893 . -1) (undo-tree-id5894 . -1) (undo-tree-id5895 . -1) (undo-tree-id5896 . -1) (undo-tree-id5897 . -1) (undo-tree-id5898 . -1) (undo-tree-id5899 . -1) (undo-tree-id5900 . -1) (undo-tree-id5901 . -1) (undo-tree-id5902 . -1) (undo-tree-id5903 . -1) (undo-tree-id5904 . -1) (undo-tree-id5905 . -1) (undo-tree-id5906 . -1) (undo-tree-id5907 . -1) (undo-tree-id5908 . -1) (undo-tree-id5909 . -1) (undo-tree-id5910 . -1) (undo-tree-id5911 . -1) (undo-tree-id5912 . -1) (undo-tree-id5913 . -1) (undo-tree-id5914 . -1) (undo-tree-id5915 . -1) (undo-tree-id5916 . -1) (undo-tree-id5917 . -1) (undo-tree-id5918 . -1) (undo-tree-id5919 . -1) (undo-tree-id5920 . -1) (undo-tree-id5921 . -1) (undo-tree-id5922 . -1) (undo-tree-id5923 . -1) (undo-tree-id5924 . -1) (undo-tree-id5925 . -1) (undo-tree-id5926 . -1) (undo-tree-id5927 . -1) (undo-tree-id5928 . -1) (undo-tree-id5929 . -1) (undo-tree-id5930 . -1) (undo-tree-id5931 . -1) (undo-tree-id5932 . -1) (undo-tree-id5933 . -1) (undo-tree-id5934 . -1) (undo-tree-id5935 . -1) (undo-tree-id5936 . -1) (undo-tree-id5937 . -1) (undo-tree-id5938 . -1) (undo-tree-id5939 . -1) (undo-tree-id5940 . -1) (undo-tree-id5941 . -1) (undo-tree-id5942 . -1) (undo-tree-id5943 . -1) (undo-tree-id5944 . -1) (undo-tree-id5945 . -1) (undo-tree-id5946 . -1) (undo-tree-id5947 . -1) (undo-tree-id5948 . -1) (undo-tree-id5949 . -1) (undo-tree-id5950 . -1) (undo-tree-id5951 . -1) (undo-tree-id5952 . -1) (undo-tree-id5953 . -1) (undo-tree-id5954 . -1) (undo-tree-id5955 . -1) (undo-tree-id5956 . -1) (undo-tree-id5957 . -1) (undo-tree-id5958 . -1) (undo-tree-id5959 . -1) (undo-tree-id5960 . -1) (undo-tree-id5961 . -1) (undo-tree-id5962 . -1) (undo-tree-id5963 . -1) (undo-tree-id5964 . -1) (undo-tree-id5965 . -1) (undo-tree-id5966 . -1) (undo-tree-id5967 . -1) (undo-tree-id5968 . -1) (undo-tree-id5969 . -1) (undo-tree-id5970 . -1) (undo-tree-id5971 . -1) (undo-tree-id5972 . -1) (undo-tree-id5973 . -1) (undo-tree-id5974 . -1) (undo-tree-id5975 . -1) (undo-tree-id5976 . -1) (undo-tree-id5977 . -1) (undo-tree-id5978 . -1) (undo-tree-id5979 . -1) (undo-tree-id5980 . -1) (undo-tree-id5981 . -1) (undo-tree-id5982 . -1) (undo-tree-id5983 . -1) (undo-tree-id5984 . -1) (undo-tree-id5985 . -1) (undo-tree-id5986 . -1) (undo-tree-id5987 . -1) (undo-tree-id5988 . -1) (undo-tree-id5989 . -1) (undo-tree-id5990 . -1) (undo-tree-id5991 . -1) (undo-tree-id5992 . -1) (undo-tree-id5993 . -1) (undo-tree-id5994 . -1) (undo-tree-id5995 . -1) (undo-tree-id5996 . -1) (undo-tree-id5997 . -1) (undo-tree-id5998 . -1) (undo-tree-id5999 . -1) (undo-tree-id6000 . -1) (undo-tree-id6001 . -1) (undo-tree-id6002 . -1) (undo-tree-id6003 . -1) (undo-tree-id6004 . -1) (undo-tree-id6005 . -1) (undo-tree-id6006 . -1) (undo-tree-id6007 . -1) (undo-tree-id6008 . -1) (undo-tree-id6009 . -1) (undo-tree-id6010 . -1) (undo-tree-id6011 . -1) (undo-tree-id6012 . -1) (undo-tree-id6013 . -1) (undo-tree-id6014 . -1) (undo-tree-id6015 . -1) (undo-tree-id6016 . -1) (undo-tree-id6017 . -1) (undo-tree-id6018 . -1) (undo-tree-id6019 . -1) (undo-tree-id6020 . -1) (undo-tree-id6021 . -1) (undo-tree-id6022 . -1) (undo-tree-id6023 . -1) (undo-tree-id6024 . -1) (undo-tree-id6025 . -1) (undo-tree-id6026 . -1) (undo-tree-id6027 . -1) (undo-tree-id6028 . -1) (undo-tree-id6029 . -1) (undo-tree-id6030 . -1) (undo-tree-id6031 . -1) (undo-tree-id6032 . -1) (undo-tree-id6033 . -1) (undo-tree-id6034 . -1) (undo-tree-id6035 . -1) (undo-tree-id6036 . -1) (undo-tree-id6037 . -1) (undo-tree-id6038 . -1) (undo-tree-id6039 . -1) (undo-tree-id6040 . -1) (undo-tree-id6041 . -1) (undo-tree-id6042 . -1) (undo-tree-id6043 . -1) (undo-tree-id6044 . -1) (undo-tree-id6045 . -1) (undo-tree-id6046 . -1) (undo-tree-id6047 . -1) (undo-tree-id6048 . -1) (undo-tree-id6049 . -1) (#("e" 0 1 (fontified t)) . -13023) (undo-tree-id6050 . -1) (undo-tree-id6051 . -1) (undo-tree-id6052 . -1) (undo-tree-id6053 . -1) (undo-tree-id6054 . -1) (undo-tree-id6055 . -1) (undo-tree-id6056 . -1) (undo-tree-id6057 . -1) (undo-tree-id6058 . -1) (undo-tree-id6059 . -1) (undo-tree-id6060 . -1) (undo-tree-id6061 . -1) (undo-tree-id6062 . -1) (undo-tree-id6063 . -1) (undo-tree-id6064 . -1) (undo-tree-id6065 . -1) (undo-tree-id6066 . -1) (undo-tree-id6067 . -1) (undo-tree-id6068 . -1) (undo-tree-id6069 . -1) (undo-tree-id6070 . -1) (undo-tree-id6071 . -1) (undo-tree-id6072 . -1) (undo-tree-id6073 . -1) (undo-tree-id6074 . -1) (undo-tree-id6075 . -1) (undo-tree-id6076 . -1) (undo-tree-id6077 . -1) (undo-tree-id6078 . -1) (undo-tree-id6079 . -1) 13024 (13023 . 13024) (#("s" 0 1 (fontified t)) . -13023) (undo-tree-id6080 . -1) (undo-tree-id6081 . -1) (undo-tree-id6082 . -1) (undo-tree-id6083 . -1) (undo-tree-id6084 . -1) (undo-tree-id6085 . -1) (undo-tree-id6086 . -1) (undo-tree-id6087 . -1) (undo-tree-id6088 . -1) (undo-tree-id6089 . -1) (undo-tree-id6090 . -1) (undo-tree-id6091 . -1) (undo-tree-id6092 . -1) (undo-tree-id6093 . -1) (undo-tree-id6094 . -1) (undo-tree-id6095 . -1) (undo-tree-id6096 . -1) (undo-tree-id6097 . -1) (undo-tree-id6098 . -1) (undo-tree-id6099 . -1) (undo-tree-id6100 . -1) (undo-tree-id6101 . -1) (undo-tree-id6102 . -1) (undo-tree-id6103 . -1) (undo-tree-id6104 . -1) (undo-tree-id6105 . -1) (undo-tree-id6106 . -1) (undo-tree-id6107 . -1) (undo-tree-id6108 . -1) (undo-tree-id6109 . -1) (undo-tree-id6110 . -1) (undo-tree-id6111 . -1) (undo-tree-id6112 . -1) (undo-tree-id6113 . -1) (undo-tree-id6114 . -1) (undo-tree-id6115 . -1) (undo-tree-id6116 . -1) (undo-tree-id6117 . -1) (undo-tree-id6118 . -1) (undo-tree-id6119 . -1) (undo-tree-id6120 . -1) (undo-tree-id6121 . -1) (undo-tree-id6122 . -1) (undo-tree-id6123 . -1) (undo-tree-id6124 . -1) (undo-tree-id6125 . -1) (undo-tree-id6126 . -1) (undo-tree-id6127 . -1) (undo-tree-id6128 . -1) (undo-tree-id6129 . -1) (undo-tree-id6130 . -1) (undo-tree-id6131 . -1) (undo-tree-id6132 . -1) (undo-tree-id6133 . -1) (undo-tree-id6134 . -1) (undo-tree-id6135 . -1) (undo-tree-id6136 . -1) (undo-tree-id6137 . -1) (undo-tree-id6138 . -1) (undo-tree-id6139 . -1) (undo-tree-id6140 . -1) (undo-tree-id6141 . -1) (undo-tree-id6142 . -1) (undo-tree-id6143 . -1) (undo-tree-id6144 . -1) (undo-tree-id6145 . -1) (undo-tree-id6146 . -1) (undo-tree-id6147 . -1) (undo-tree-id6148 . -1) (undo-tree-id6149 . -1) (undo-tree-id6150 . -1) (undo-tree-id6151 . -1) (undo-tree-id6152 . -1) (undo-tree-id6153 . -1) (undo-tree-id6154 . -1) (undo-tree-id6155 . -1) (undo-tree-id6156 . -1) (undo-tree-id6157 . -1) (undo-tree-id6158 . -1) (undo-tree-id6159 . -1) (undo-tree-id6160 . -1) (undo-tree-id6161 . -1) (undo-tree-id6162 . -1) (undo-tree-id6163 . -1) (undo-tree-id6164 . -1) (undo-tree-id6165 . -1) (undo-tree-id6166 . -1) (undo-tree-id6167 . -1) (undo-tree-id6168 . -1) (undo-tree-id6169 . -1) (undo-tree-id6170 . -1) (undo-tree-id6171 . -1) (undo-tree-id6172 . -1) (undo-tree-id6173 . -1) (undo-tree-id6174 . -1) (undo-tree-id6175 . -1) (undo-tree-id6176 . -1) (undo-tree-id6177 . -1) (undo-tree-id6178 . -1) (undo-tree-id6179 . -1) (undo-tree-id6180 . -1) (undo-tree-id6181 . -1) (undo-tree-id6182 . -1) (undo-tree-id6183 . -1) (undo-tree-id6184 . -1) (undo-tree-id6185 . -1) (undo-tree-id6186 . -1) (undo-tree-id6187 . -1) (#("e" 0 1 (fontified t)) . -13024) (undo-tree-id6188 . -1) (undo-tree-id6189 . -1) (undo-tree-id6190 . -1) (undo-tree-id6191 . -1) (undo-tree-id6192 . -1) (undo-tree-id6193 . -1) (undo-tree-id6194 . -1) (undo-tree-id6195 . -1) (undo-tree-id6196 . -1) (undo-tree-id6197 . -1) (undo-tree-id6198 . -1) (undo-tree-id6199 . -1) (undo-tree-id6200 . -1) (undo-tree-id6201 . -1) (undo-tree-id6202 . -1) 13025 (13024 . 13025) (#("e" 0 1 (fontified t)) . -13024) (undo-tree-id6203 . -1) (undo-tree-id6204 . -1) (undo-tree-id6205 . -1) (undo-tree-id6206 . -1) (undo-tree-id6207 . -1) (undo-tree-id6208 . -1) (undo-tree-id6209 . -1) (undo-tree-id6210 . -1) (undo-tree-id6211 . -1) (undo-tree-id6212 . -1) (undo-tree-id6213 . -1) (undo-tree-id6214 . -1) (undo-tree-id6215 . -1) (undo-tree-id6216 . -1) (undo-tree-id6217 . -1) 13025 (13024 . 13025) (#("e" 0 1 (fontified t)) . -13024) (undo-tree-id6218 . -1) (undo-tree-id6219 . -1) (undo-tree-id6220 . -1) (undo-tree-id6221 . -1) (undo-tree-id6222 . -1) (undo-tree-id6223 . -1) (undo-tree-id6224 . -1) (undo-tree-id6225 . -1) (undo-tree-id6226 . -1) (undo-tree-id6227 . -1) (undo-tree-id6228 . -1) (undo-tree-id6229 . -1) (undo-tree-id6230 . -1) (undo-tree-id6231 . -1) (undo-tree-id6232 . -1) 13025 (13011 . 13025) (13007 . 13011) (#("a" 0 1 (fontified t)) . -13007) (undo-tree-id6233 . -1) (undo-tree-id6234 . -1) (undo-tree-id6235 . -1) (undo-tree-id6236 . -1) (undo-tree-id6237 . -1) (undo-tree-id6238 . -1) (undo-tree-id6239 . -1) (undo-tree-id6240 . -1) (undo-tree-id6241 . -1) 13008 (12998 . 13008) (#("f" 0 1 (fontified t)) . -12998) (undo-tree-id6242 . -1) (undo-tree-id6243 . -1) (undo-tree-id6244 . -1) (undo-tree-id6245 . -1) (undo-tree-id6246 . -1) (undo-tree-id6247 . -1) (undo-tree-id6248 . -1) (undo-tree-id6249 . -1) (undo-tree-id6250 . -1) 12999 (12998 . 12999) (12977 . 12998) (#("e" 0 1 (fontified t)) . -12977) (undo-tree-id6251 . -1) (undo-tree-id6252 . -1) (undo-tree-id6253 . -1) (undo-tree-id6254 . -1) (undo-tree-id6255 . -1) (undo-tree-id6256 . -1) (undo-tree-id6257 . -1) (undo-tree-id6258 . -1) (undo-tree-id6259 . -1) 12978 (12970 . 12978) (12968 . 12970) (#("  " 0 2 (fontified nil)) . 12967) (undo-tree-id6260 . -2) (undo-tree-id6261 . -2) (undo-tree-id6262 . -2) (undo-tree-id6263 . -2) (undo-tree-id6264 . -2) (undo-tree-id6265 . -2) (undo-tree-id6266 . -2) (undo-tree-id6267 . -2) (undo-tree-id6268 . -2) (12966 . 12970) (#(" " 0 1 (fontified t)) . -12966) (undo-tree-id6269 . -1) (undo-tree-id6270 . -1) (undo-tree-id6271 . -1) (undo-tree-id6272 . -1) (undo-tree-id6273 . -1) (undo-tree-id6274 . -1) (undo-tree-id6275 . -1) (undo-tree-id6276 . -1) (undo-tree-id6277 . -1) (undo-tree-id6278 . -1) (undo-tree-id6279 . -1) (undo-tree-id6280 . -1) (undo-tree-id6281 . -1) (undo-tree-id6282 . -1) (undo-tree-id6283 . -1) (undo-tree-id6284 . -1) (undo-tree-id6285 . -1) (undo-tree-id6286 . -1) (undo-tree-id6287 . -1) (undo-tree-id6288 . -1) (undo-tree-id6289 . -1) (undo-tree-id6290 . -1) (undo-tree-id6291 . -1) (undo-tree-id6292 . -1) (undo-tree-id6293 . -1) (undo-tree-id6294 . -1) (undo-tree-id6295 . -1) (undo-tree-id6296 . -1) (undo-tree-id6297 . -1) (undo-tree-id6298 . -1) (undo-tree-id6299 . -1) (undo-tree-id6300 . -1) (undo-tree-id6301 . -1) (undo-tree-id6302 . -1) (undo-tree-id6303 . -1) (undo-tree-id6304 . -1) (undo-tree-id6305 . -1) (undo-tree-id6306 . -1) (undo-tree-id6307 . -1) (undo-tree-id6308 . -1) (undo-tree-id6309 . -1) (undo-tree-id6310 . -1) (undo-tree-id6311 . -1) (undo-tree-id6312 . -1) (undo-tree-id6313 . -1) (undo-tree-id6314 . -1) (undo-tree-id6315 . -1) (undo-tree-id6316 . -1) (undo-tree-id6317 . -1) (undo-tree-id6318 . -1) (undo-tree-id6319 . -1) (undo-tree-id6320 . -1) (undo-tree-id6321 . -1) (undo-tree-id6322 . -1) (undo-tree-id6323 . -1) (undo-tree-id6324 . -1) (undo-tree-id6325 . -1) (undo-tree-id6326 . -1) (undo-tree-id6327 . -1) (undo-tree-id6328 . -1) (undo-tree-id6329 . -1) (undo-tree-id6330 . -1) (undo-tree-id6331 . -1) (undo-tree-id6332 . -1) (undo-tree-id6333 . -1) (undo-tree-id6334 . -1) (undo-tree-id6335 . -1) (undo-tree-id6336 . -1) (undo-tree-id6337 . -1) (undo-tree-id6338 . -1) (undo-tree-id6339 . -1) (undo-tree-id6340 . -1) (undo-tree-id6341 . -1) (undo-tree-id6342 . -1) (undo-tree-id6343 . -1) (undo-tree-id6344 . -1) (undo-tree-id6345 . -1) (undo-tree-id6346 . -1) (undo-tree-id6347 . -1) (undo-tree-id6348 . -1) (undo-tree-id6349 . -1) (undo-tree-id6350 . -1) (undo-tree-id6351 . -1) (undo-tree-id6352 . -1) (undo-tree-id6353 . -1) (undo-tree-id6354 . -1) (undo-tree-id6355 . -1) (undo-tree-id6356 . -1) (undo-tree-id6357 . -1) (undo-tree-id6358 . -1) (undo-tree-id6359 . -1) (undo-tree-id6360 . -1) (undo-tree-id6361 . -1) (undo-tree-id6362 . -1) (undo-tree-id6363 . -1) (undo-tree-id6364 . -1) (undo-tree-id6365 . -1) (undo-tree-id6366 . -1) (undo-tree-id6367 . -1) (undo-tree-id6368 . -1) (undo-tree-id6369 . -1) (undo-tree-id6370 . -1) (undo-tree-id6371 . -1) (undo-tree-id6372 . -1) (undo-tree-id6373 . -1) (undo-tree-id6374 . -1) (undo-tree-id6375 . -1) (undo-tree-id6376 . -1) (undo-tree-id6377 . -1) (undo-tree-id6378 . -1) (undo-tree-id6379 . -1) (undo-tree-id6380 . -1) (undo-tree-id6381 . -1) (undo-tree-id6382 . -1) (undo-tree-id6383 . -1) (undo-tree-id6384 . -1) (undo-tree-id6385 . -1) (undo-tree-id6386 . -1) (undo-tree-id6387 . -1) (undo-tree-id6388 . -1) (undo-tree-id6389 . -1) (undo-tree-id6390 . -1) (undo-tree-id6391 . -1) (undo-tree-id6392 . -1) (undo-tree-id6393 . -1) (undo-tree-id6394 . -1) (undo-tree-id6395 . -1) (undo-tree-id6396 . -1) (undo-tree-id6397 . -1) (undo-tree-id6398 . -1) (undo-tree-id6399 . -1) (undo-tree-id6400 . -1) (undo-tree-id6401 . -1) (undo-tree-id6402 . -1) (undo-tree-id6403 . -1) (undo-tree-id6404 . -1) (undo-tree-id6405 . -1) (undo-tree-id6406 . -1) (undo-tree-id6407 . -1) (undo-tree-id6408 . -1) (undo-tree-id6409 . -1) (undo-tree-id6410 . -1) (undo-tree-id6411 . -1) (undo-tree-id6412 . -1) (undo-tree-id6413 . -1) (undo-tree-id6414 . -1) (undo-tree-id6415 . -1) (undo-tree-id6416 . -1) (undo-tree-id6417 . -1) (undo-tree-id6418 . -1) (undo-tree-id6419 . -1) (undo-tree-id6420 . -1) (undo-tree-id6421 . -1) (undo-tree-id6422 . -1) (undo-tree-id6423 . -1) (undo-tree-id6424 . -1) (undo-tree-id6425 . -1) (undo-tree-id6426 . -1) (undo-tree-id6427 . -1) (undo-tree-id6428 . -1) (undo-tree-id6429 . -1) (undo-tree-id6430 . -1) (undo-tree-id6431 . -1) (undo-tree-id6432 . -1) (undo-tree-id6433 . -1) (undo-tree-id6434 . -1) (undo-tree-id6435 . -1) (undo-tree-id6436 . -1) (undo-tree-id6437 . -1) (undo-tree-id6438 . -1) (undo-tree-id6439 . -1) (undo-tree-id6440 . -1) (undo-tree-id6441 . -1) (undo-tree-id6442 . -1) (undo-tree-id6443 . -1) (undo-tree-id6444 . -1) (undo-tree-id6445 . -1) (undo-tree-id6446 . -1) (undo-tree-id6447 . -1) (undo-tree-id6448 . -1) (undo-tree-id6449 . -1) (undo-tree-id6450 . -1) (undo-tree-id6451 . -1) (undo-tree-id6452 . -1) (undo-tree-id6453 . -1) (undo-tree-id6454 . -1) (undo-tree-id6455 . -1) (undo-tree-id6456 . -1) (undo-tree-id6457 . -1) (undo-tree-id6458 . -1) (undo-tree-id6459 . -1) (undo-tree-id6460 . -1) (undo-tree-id6461 . -1) (undo-tree-id6462 . -1) (undo-tree-id6463 . -1) (undo-tree-id6464 . -1) (undo-tree-id6465 . -1) (undo-tree-id6466 . -1) (undo-tree-id6467 . -1) (undo-tree-id6468 . -1) (undo-tree-id6469 . -1) (undo-tree-id6470 . -1) (#(" " 0 1 (fontified t)) . -12967) (undo-tree-id6471 . -1) (undo-tree-id6472 . 1) (undo-tree-id6473 . -1) (undo-tree-id6474 . -1) (undo-tree-id6475 . -1) (undo-tree-id6476 . -1) (undo-tree-id6477 . -1) (undo-tree-id6478 . -1) (undo-tree-id6479 . -1) (undo-tree-id6480 . -1) (undo-tree-id6481 . -1) (undo-tree-id6482 . -1) (undo-tree-id6483 . -1) (undo-tree-id6484 . -1) (undo-tree-id6485 . -1) (undo-tree-id6486 . -1) (undo-tree-id6487 . -1) (undo-tree-id6488 . -1) (undo-tree-id6489 . -1) (undo-tree-id6490 . -1) (undo-tree-id6491 . -1) (undo-tree-id6492 . -1) (undo-tree-id6493 . -1) (undo-tree-id6494 . -1) (undo-tree-id6495 . -1) (undo-tree-id6496 . -1) (undo-tree-id6497 . -1) (undo-tree-id6498 . -1) (undo-tree-id6499 . -1) (undo-tree-id6500 . -1) (undo-tree-id6501 . -1) (undo-tree-id6502 . -1) (undo-tree-id6503 . -1) (undo-tree-id6504 . -1) (undo-tree-id6505 . -1) (undo-tree-id6506 . -1) (undo-tree-id6507 . -1) (undo-tree-id6508 . -1) (undo-tree-id6509 . -1) (undo-tree-id6510 . -1) 12968 (t 25471 26641 30367 644000)) nil (25471 26774 389828 366000) 0 nil])
([nil nil ((15155 . 15158) (15149 . 15155) (#("n" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -15149) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (#("o" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -15150) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (#("d" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -15151) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (#("e" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -15152) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) 15153 (t 25471 26774 536091 566000)) nil (25480 55940 675284 325000) 0 nil])
([nil nil ((9514 . 9603) 8583 (t 25480 55940 815372 616000)) nil (25493 63538 63467 323000) 0 nil])
([nil nil ((9578 . 9580) (9601 . 9602) 8583 (t 25493 63538 217953 265000)) nil (25493 63594 835547 951000) 0 nil])
([nil nil ((7416 . 7422) (7409 . 7416) (7400 . 7401) (#(" " 0 1 (fontified t face org-level-1)) . -7400) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (#("a" 0 1 (fontified t face org-level-1)) . -7401) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (#("n" 0 1 (fontified t face org-level-1)) . -7402) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (#("d" 0 1 (fontified t face org-level-1)) . -7403) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) 7404 (t 25493 63594 991881 787000)) nil (25493 63786 457601 938000) 0 nil])
([nil nil ((7877 . 7888) (#(" " 0 1 (fontified t)) . -7877) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (#("i" 0 1 (fontified t)) . -7878) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) 7879 (7873 . 7879) (7854 . 7873) (#(")" 0 1 (fontified nil)) . -7854) (7852 . 7855) (#("g" 0 1 (fontified t)) . -7852) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (#("e" 0 1 (fontified t)) . -7853) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) 7854 (7850 . 7854) (#("r" 0 1 (fontified t)) . -7850) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) 7851 (7848 . 7851) (7832 . 7848) (7811 . 7832) (7790 . 7811) (7774 . 7790) (#("-" 0 1 (fontified t)) . -7774) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (#("g" 0 1 (fontified t)) . -7775) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) 7776 (7756 . 7776) (#("u" 0 1 (fontified t)) . -7756) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (#("g" 0 1 (fontified t)) . -7757) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) 7758 (7742 . 7758) (7740 . 7742) (#("t" 0 1 (fontified t)) . -7740) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (#("h" 0 1 (fontified t)) . -7741) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (#("e" 0 1 (fontified t)) . -7742) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (#(" " 0 1 (fontified t)) . -7743) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) 7744 (7734 . 7744) (7713 . 7734) (#("l" 0 1 (fontified t)) . -7713) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (#("b" 0 1 (fontified t)) . -7714) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (#("i" 0 1 (fontified t)) . -7715) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (#("o" 0 1 (fontified t)) . -7716) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) 7717 (7706 . 7717) (7694 . 7706) (#(" " 0 1 (fontified t)) . -7694) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) 7695 (7674 . 7695) (7672 . 7674) (#("  " 0 2 (fontified nil)) . 7671) (undo-tree-id513 . -2) (undo-tree-id514 . -2) (undo-tree-id515 . -2) (undo-tree-id516 . -2) (undo-tree-id517 . -2) (undo-tree-id518 . -2) (undo-tree-id519 . -2) (undo-tree-id520 . -2) (undo-tree-id521 . -2) (undo-tree-id522 . -2) (7673 . 7674) (7670 . 7673) 7643) nil (25493 63786 457261 248000) 0 nil])
([nil nil ((9834 . 9911) 8811 (t 25493 63786 616749 13000)) nil (25493 63846 200860 90000) 0 nil])
([nil nil ((9911 . 9968) 8811 (t 25493 63846 360549 502000)) nil (25493 63951 518616 128000) 0 nil])
([nil nil ((#("latex biblatex)
					  (" 0 24 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block) help-echo nil)) . 9878) 8811 (t 25493 63951 674717 206000)) nil (25493 64303 518071 679000) 0 nil])
([nil nil ((9772 . 9797) 8811 (t 25493 64303 674265 428000)) nil (25493 64395 595449 813000) 0 nil])
([nil nil ((9969 . 10047) 8811 (t 25493 64395 748374 51000)) nil (25493 65368 216462 113000) 0 nil])
([nil current ((10015 . 10031) 8811 (t 25493 65368 377266 11000)) nil (25493 65497 185496 523000) 0 nil])
nil
