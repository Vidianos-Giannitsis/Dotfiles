(undo-tree-save-format-version . 1)
"7bf73b9f9ba3750be2c2722ce5a4593df3e6c078"
[nil nil nil nil (25138 2206 260578 794000) 0 nil]
([nil nil ((26797 . 26800) (26797 . 26888) (#("   | d | default | entry | * %? | :if-new | (file+head %<%Y-%m-%d>.org #+title: %<%Y-%m-%d> |
" 0 94 (fontified nil)) . 26797) (t 25134 24477 120179 566000)) nil (25138 2222 805683 855000) 0 nil])
([nil nil ((16549 . 16559) (16548 . 16550) (16546 . 16548) (16545 . 16547) (#("d" 0 1 (fontified t)) . -16545) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (#("i" 0 1 (fontified t)) . -16546) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (#("s" 0 1 (fontified t)) . -16547) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (#("c" 0 1 (fontified t)) . -16548) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (#("u" 0 1 (fontified t)) . -16549) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (#("s" 0 1 (fontified t)) . -16550) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (#("s" 0 1 (fontified t)) . -16551) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (#("i" 0 1 (fontified t)) . -16552) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (#("o" 0 1 (fontified t)) . -16553) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (#("n" 0 1 (fontified t)) . -16554) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) 16555 (16586 . 16590) (16565 . 16586) (#("e" 0 1 (fontified t)) . -16565) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) 16566 (16563 . 16566) (16561 . 16563) (#("o" 0 1 (fontified t)) . -16561) (undo-tree-id1086 . -1) 16562 (16558 . 16562) (16557 . 16558) (16536 . 16557) (#("l" 0 1 (fontified t)) . -16536) (undo-tree-id1087 . -1) (#("y" 0 1 (fontified t)) . -16537) (undo-tree-id1088 . -1) 16538 (16536 . 16538) (#("y" 0 1 (fontified t)) . -16536) (undo-tree-id1089 . -1) (#("l" 0 1 (fontified t)) . -16537) (undo-tree-id1090 . -1) 16538 (16529 . 16538) (16528 . 16529) (16525 . 16528) (16512 . 16525) (#("g" 0 1 (fontified t face org-level-1)) . -16512) (undo-tree-id1091 . -1) 16513 (16496 . 16513) (#("w" 0 1 (fontified t face org-level-1)) . -16496) (undo-tree-id1092 . -1) (#("q" 0 1 (fontified t face org-level-1)) . -16497) (undo-tree-id1093 . -1) 16498 (16490 . 16498) (16489 . 16490) (t 25138 2222 819006 265000) 16489) nil (25141 3935 668696 995000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16629 . 16630) (nil fontified nil 16547 . 16630) (16547 . 16630) 16546) nil (25141 3935 668075 710000) 0 nil])
([nil nil ((17112 . 17121) (17092 . 17112) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 17092 17121 nil nil nil t #s(yas--field 2 17122 17122 nil nil nil nil nil)) #s(yas--field 2 17122 17122 nil nil nil nil nil)) nil 70 nil #s(yas--field 2 17122 17122 nil nil nil nil nil) nil nil)) (17094 . 17096) (17080 . 17103) (#("\\s" 0 2 (fontified t)) . 17080) (undo-tree-id97 . -2) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -2) (undo-tree-id106 . -1) (undo-tree-id107 . -2) (undo-tree-id108 . -2) (undo-tree-id109 . -2) (undo-tree-id110 . -2) (undo-tree-id111 . -2) (undo-tree-id112 . -2) (undo-tree-id113 . -2) (undo-tree-id114 . -2) 17082 (17080 . 17082) (17078 . 17080) (#("  " 0 2 (fontified nil)) . 17077) (undo-tree-id115 . -2) (undo-tree-id116 . -2) (undo-tree-id117 . -2) (undo-tree-id118 . -2) (undo-tree-id119 . -2) (undo-tree-id120 . -2) (undo-tree-id121 . -2) (undo-tree-id122 . -2) (undo-tree-id123 . -2) (17076 . 17080) (17073 . 17076) (#("o" 0 1 (fontified t)) . -17073) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (#("n" 0 1 (fontified t)) . -17074) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) 17075 (17059 . 17075) (17052 . 17059) (#("I" 0 1 (fontified t)) . -17052) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (#(" " 0 1 (fontified t)) . -17053) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) 17054 (17035 . 17054) (17014 . 17035) (17009 . 17014) (#(";" 0 1 (fontified t)) . -17009) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (#("t" 0 1 (fontified t)) . -17010) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (#(" " 0 1 (fontified t)) . -17011) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) 17012 (17009 . 17012) (17008 . 17009) (17001 . 17008) (#(" " 0 1 (fontified t)) . -17001) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (#("." 0 1 (fontified t)) . -17002) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) 17003 (17000 . 17003) (#("r" 0 1 (fontified t)) . -17000) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) 17001 (16993 . 17001) (#(";" 0 1 (fontified t)) . -16993) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (#("t" 0 1 (fontified t)) . -16994) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) 16995 (16983 . 16995) (16982 . 16983) (#(" " 0 1 (fontified t)) . -16982) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) 16983 (16981 . 16983) (#("r" 0 1 (fontified t)) . -16981) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (#("e" 0 1 (fontified t)) . -16982) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (#(" " 0 1 (fontified t)) . -16983) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) 16984 (16977 . 16984) (16956 . 16977) (#(" " 0 1 (fontified t)) . -16956) (undo-tree-id614 . -1) (#(" " 0 1 (fontified t)) . -16957) (undo-tree-id615 . -1) 16958 (16957 . 16958) (#("s" 0 1 (fontified t)) . -16957) (undo-tree-id616 . -1) 16958 (16957 . 16958) (#("s" 0 1 (fontified t)) . -16957) (undo-tree-id617 . -1) 16958 (16938 . 16958) (#("d" 0 1 (fontified t)) . -16938) (undo-tree-id618 . -1) (#(" " 0 1 (fontified t)) . -16939) (undo-tree-id619 . -1) 16940 (16936 . 16940) (#("p" 0 1 (fontified t)) . -16936) (undo-tree-id620 . -1) (#("u" 0 1 (fontified t)) . -16937) (undo-tree-id621 . -1) 16938 (16933 . 16938) (16932 . 16933) (#(";" 0 1 (fontified t)) . -16932) (undo-tree-id622 . -1) (#("t" 0 1 (fontified t)) . -16933) (undo-tree-id623 . -1) 16934 (16932 . 16934) (16911 . 16932) (#("s" 0 1 (fontified t)) . -16911) (undo-tree-id624 . -1) 16912 (16904 . 16912) (16884 . 16904) (16883 . 16884) (#("e" 0 1 (fontified t)) . -16883) (undo-tree-id625 . -1) 16884 (16873 . 16884) (#("d" 0 1 (fontified t)) . -16873) (undo-tree-id626 . -1) (#(" " 0 1 (fontified t)) . -16874) (undo-tree-id627 . -1) 16875 (16874 . 16875) (16853 . 16874) (#("d" 0 1 (fontified t)) . -16853) (undo-tree-id628 . -1) 16854 (16846 . 16854) (16833 . 16846) (#("r" 0 1 (fontified t)) . -16833) (undo-tree-id629 . -1) 16834 (16828 . 16834) (16807 . 16828) (16786 . 16807) (#("g" 0 1 (fontified t)) . -16786) (undo-tree-id630 . -1) 16787 (16785 . 16787) (#("i" 0 1 (fontified t)) . -16785) (undo-tree-id631 . -1) (#("t" 0 1 (fontified t)) . -16786) (undo-tree-id632 . -1) (#("s" 0 1 (fontified t)) . -16787) (undo-tree-id633 . -1) (#(" " 0 1 (fontified t)) . -16788) (undo-tree-id634 . -1) (#("t" 0 1 (fontified t)) . -16789) (undo-tree-id635 . -1) (#("a" 0 1 (fontified t)) . -16790) (undo-tree-id636 . -1) (#("g" 0 1 (fontified t)) . -16791) (undo-tree-id637 . -1) (#("s" 0 1 (fontified t)) . -16792) (undo-tree-id638 . -1) (#(" " 0 1 (fontified t)) . -16793) (undo-tree-id639 . -1) 16794 (16793 . 16794) (16773 . 16793) (16752 . 16773) (16747 . 16752) (#("i" 0 1 (fontified t)) . -16747) (undo-tree-id640 . -1) (#("c" 0 1 (fontified t)) . -16748) (undo-tree-id641 . -1) (#("a" 0 1 (fontified t)) . -16749) (undo-tree-id642 . -1) 16750 (16743 . 16750) (#("E" 0 1 (fontified t)) . -16743) (undo-tree-id643 . -1) (#("s" 0 1 (fontified t)) . -16744) (undo-tree-id644 . -1) 16745 (16739 . 16745) (#("a" 0 1 (fontified t)) . -16739) (undo-tree-id645 . -1) (#("," 0 1 (fontified t)) . -16740) (undo-tree-id646 . -1) (#("." 0 1 (fontified t)) . -16741) (undo-tree-id647 . -1) (#(" " 0 1 (fontified t)) . -16742) (undo-tree-id648 . -1) 16743 (16724 . 16743) (16703 . 16724) (#("f" 0 1 (fontified t)) . -16703) (undo-tree-id649 . -1) 16704 (16691 . 16704) (#("y" 0 1 (fontified t)) . -16691) (undo-tree-id650 . -1) 16692 (16687 . 16692) (#("t" 0 1 (fontified t)) . -16687) (undo-tree-id651 . -1) (#("h" 0 1 (fontified t)) . -16688) (undo-tree-id652 . -1) (#("e" 0 1 (fontified t)) . -16689) (undo-tree-id653 . -1) (#(" " 0 1 (fontified t)) . -16690) (undo-tree-id654 . -1) 16691 (16685 . 16691) (#("y" 0 1 (fontified t)) . -16685) (undo-tree-id655 . -1) 16686 (16683 . 16686) (#("u" 0 1 (fontified t)) . -16683) (undo-tree-id656 . -1) (#("t" 0 1 (fontified t)) . -16684) (undo-tree-id657 . -1) (#(" " 0 1 (fontified t)) . -16685) (undo-tree-id658 . -1) 16686 (16677 . 16686) (#("d" 0 1 (fontified t)) . -16677) (undo-tree-id659 . -1) 16678 (16673 . 16678) (#("e" 0 1 (fontified t)) . -16673) (undo-tree-id660 . -1) (#("m" 0 1 (fontified t)) . -16674) (undo-tree-id661 . -1) (#("a" 0 1 (fontified t)) . -16675) (undo-tree-id662 . -1) (#("c" 0 1 (fontified t)) . -16676) (undo-tree-id663 . -1) (#("s" 0 1 (fontified t)) . -16677) (undo-tree-id664 . -1) (#(" " 0 1 (fontified t)) . -16678) (undo-tree-id665 . -1) 16679) nil (25141 3935 667995 107000) 0 nil])
([nil nil ((17122 . 19443) (apply yas--snippet-revive 17080 17133 #s(yas--snippet nil (#s(yas--field 1 17092 17121 nil nil nil t #s(yas--field 2 17122 17122 nil nil nil nil nil)) #s(yas--field 2 17122 17122 nil nil nil nil nil)) nil 70 nil #s(yas--field 2 17122 17122 nil nil nil nil nil) nil nil)) (#("
" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 17122) (undo-tree-id93 . 1) (undo-tree-id94 . 1) (undo-tree-id95 . -1) (undo-tree-id96 . 1)) nil (25141 3935 661919 436000) 0 nil])
([nil nil ((17122 . 19442) (#("    (defun org-roam-node-sort-by-atime (NODE1 NODE2)
      \"Sorting function that sorts NODE1 and NODE2 by their file atime.

    This is a simplified version of
    `org-roam-node-read-sort-by-file-atime' which requires nodes as
    its input and not something else. The above function is what
    `org-roam-node-read's sorting uses and it has a special
    formatting.\"
      (time-less-p (org-roam-node-file-atime NODE1)
		   (org-roam-node-file-atime NODE2)))

    (defun org-roam-logseq-tag-function (TAG)
      \"An implementation of logseq's tagging system in org-roam.

    Prompt for TAG which is the name of a tag in your org-roam
    repository, filter it to only contain nodes with that tag and
    sort them so the most recently accessed one is the first item of
    the list. Sorting is done with the custom
    `org-roam-node-sort-by-atime' function. Then, check if a buffer
    exists with the name *TAG-nodes* and if it doesn't create it.

    In that new buffer, switch to org-mode and for every item in the
    sorted-nodes list, go to `point-max', insert a new line, insert
    the string #+transclude: make an org-mode id link with the node's
    id and insert another newline. Once done, run
    `org-transclusion-add-all' to activate the transclusion links and
    view editable versions of the selected nodes.

    Finally, restore the buffer from which this function was called
    and insert and org-mode elisp link that runs `switch-to-buffer'
    to switch to the newly-created buffer.\"
      (interactive \"MTag: \")
      (let* ((init-list (org-roam-node-list))
	     (tagged-nodes (cl-remove-if-not (lambda (NODE)
					       (member TAG (org-roam-node-tags NODE)))
					     init-list))
	     (sorted-nodes (reverse (sort tagged-nodes #'org-roam-node-sort-by-atime)))
	     (buffer-name (concat \"*\" TAG \"-nodes*\"))
	     (buffer (get-buffer-create buffer-name)))
	(save-excursion
	  (with-current-buffer buffer
	    (org-mode)
	    (dolist (node sorted-nodes)
	      (goto-char (point-max))
	      (newline)
	      (insert
	       \"#+transclude: \"
	       (org-link-make-string
		(concat \"id:\" (org-roam-node-id node))))
	       (newline))
	    (org-transclusion-add-all)))
	(insert
	 (org-link-make-string
	  (concat \"elisp:(switch-to-buffer \\\"\" buffer-name \"\\\")\")
	  (concat \"#\" TAG)))))


" 0 5 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5 10 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 10 11 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11 38 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 38 59 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 59 167 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 167 204 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 204 300 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 300 318 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 318 371 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 371 456 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 456 470 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 470 475 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 475 476 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 476 504 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 504 517 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 517 826 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 826 853 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 853 914 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 914 915 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 915 924 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 924 925 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-doc-face org-block)) 925 1055 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1055 1064 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1064 1218 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1218 1242 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1242 1452 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1452 1468 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-doc-face org-block)) 1468 1513 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 1513 1521 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1521 1532 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1532 1533 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1533 1541 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1541 1550 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1550 1554 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1554 1628 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1628 1634 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1634 1824 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1824 1825 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1825 1826 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 1826 1827 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 1827 1832 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (org-block)) 1832 1839 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 1839 1840 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 1840 1841 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1841 1894 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1894 1908 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1908 1913 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1913 1932 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1932 1962 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1962 1968 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1968 2060 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2060 2076 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2076 2117 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2117 2122 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2122 2247 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2247 2275 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2275 2288 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2288 2293 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2293 2306 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2306 2309 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2309 2321 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 17122) (undo-tree-id0 . -1764) (undo-tree-id1 . -2320) (undo-tree-id2 . -2320) (undo-tree-id3 . -2320) (undo-tree-id4 . -2320) (undo-tree-id5 . -2321) (undo-tree-id6 . -2320) (undo-tree-id7 . -2320) (undo-tree-id8 . -2320) (undo-tree-id9 . -2320) (undo-tree-id10 . -2320) (undo-tree-id11 . -2320) (undo-tree-id12 . -2320) (undo-tree-id13 . -2320) (undo-tree-id14 . -2320) (undo-tree-id15 . -2320) (undo-tree-id16 . -2320) (undo-tree-id17 . -2320) (undo-tree-id18 . -2320) (undo-tree-id19 . -2320) (undo-tree-id20 . -2320) (undo-tree-id21 . -2320) (undo-tree-id22 . -2320) (undo-tree-id23 . -2320) (undo-tree-id24 . -2320) (undo-tree-id25 . -2320) (undo-tree-id26 . -2320) (undo-tree-id27 . -2320) (undo-tree-id28 . -2320) (undo-tree-id29 . -2320) (undo-tree-id30 . -2320) (undo-tree-id31 . -2320) (undo-tree-id32 . -2320) (undo-tree-id33 . -2320) (undo-tree-id34 . -2320) (undo-tree-id35 . -2320) (undo-tree-id36 . -1764) (undo-tree-id37 . -2320) (undo-tree-id38 . -2320) (undo-tree-id39 . -2320) (undo-tree-id40 . -2320) (undo-tree-id41 . -2320) (undo-tree-id42 . -2320) (undo-tree-id43 . -2320) (undo-tree-id44 . -2320) (undo-tree-id45 . -2320) (undo-tree-id46 . -1764) (undo-tree-id47 . -2320) (undo-tree-id48 . -2320) (undo-tree-id49 . -2320) (undo-tree-id50 . -1764) (undo-tree-id51 . -2320) (undo-tree-id52 . -2320) (undo-tree-id53 . -2320) (undo-tree-id54 . -2320) (undo-tree-id55 . -2320) (undo-tree-id56 . -2320) (undo-tree-id57 . -2320) (undo-tree-id58 . -2320) (undo-tree-id59 . -2320) (undo-tree-id60 . -2320) (undo-tree-id61 . -2320) (undo-tree-id62 . -2320) (undo-tree-id63 . -2320) (undo-tree-id64 . -2320) (undo-tree-id65 . -2320) (undo-tree-id66 . -2320) (undo-tree-id67 . -2320) (undo-tree-id68 . -2320) (undo-tree-id69 . -2320) (undo-tree-id70 . -2320) (undo-tree-id71 . -2320) (undo-tree-id72 . -2320) (undo-tree-id73 . -1764) (undo-tree-id74 . -2320) (undo-tree-id75 . -2320) (undo-tree-id76 . -1764) (undo-tree-id77 . -2320) (undo-tree-id78 . -2320) (undo-tree-id79 . -1764) (undo-tree-id80 . -2320) (undo-tree-id81 . -2320) (undo-tree-id82 . -1764) (undo-tree-id83 . -2320) (undo-tree-id84 . -2320) (undo-tree-id85 . -1764) (undo-tree-id86 . -2320) (undo-tree-id87 . -2320) (undo-tree-id88 . -1764) (undo-tree-id89 . -2320) (undo-tree-id90 . -2320) (undo-tree-id91 . -1764) (undo-tree-id92 . -2320) 19442) nil (25141 3935 661899 27000) 0 nil])
([nil nil ((19441 . 19442) 19440) nil (25141 3935 661717 474000) 0 nil])
([nil current ((17135 . 17143) (17114 . 17135) (17113 . 17114) (#("i" 0 1 (fontified t)) . -17113) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (#("s" 0 1 (fontified t)) . -17114) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) 17115 (17105 . 17115) (#("r" 0 1 (fontified t)) . -17105) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) 17106 (17101 . 17106) (#(" " 0 1 (fontified t)) . -17101) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) 17102 (17095 . 17102) (#("s" 0 1 (fontified t)) . -17095) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) 17096 (17086 . 17096) (#("s" 0 1 (fontified t)) . -17086) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (#("t" 0 1 (fontified t)) . -17087) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) 17088 (17076 . 17088) (t 25141 3935 682894 766000)) nil (25141 3965 51737 33000) 0 nil])
nil
